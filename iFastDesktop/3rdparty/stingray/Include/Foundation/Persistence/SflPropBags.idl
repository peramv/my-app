///////////////////////////////////////////////////////////////////////////////
// SflPropBags.idl : IDL source for SflPropBags.dll
//
// Copyright (c) 1997-2012 Rogue Wave Software, Inc.  All Rights Reserved.
//
// This computer software is owned by Rogue Wave Software, Inc. and is protected by
// U.S. copyright laws and other laws and by international treaties. This
// computer software is furnished by Rogue Wave Software, Inc. pursuant to a written
// license agreement and may be used, copied, transmitted, and stored
// only in accordance with the terms of such license agreement and with
// the inclusion of the above copyright notice.  This computer software or
// any other copies thereof may not be provided or otherwise made available
// to any other person.
//
// U.S. Government Restricted Rights.  This computer software:
//      (a) was developed at private expense and is in all respects the
//          proprietary information of Rogue Wave Software, Inc.;
//      (b) was not developed with government funds;
//      (c) is a trade secret of Rogue Wave Software, Inc. for all purposes of the
//          Freedom of Information Act; and
//      (d) is a commercial item and thus, pursuant to Section 12.212
//          of the Federal Acquisition Regulations (FAR) and DFAR
//          Supplement Section 227.7202, Government’s use, duplication or
//          disclosure of the computer software is subject to the restrictions
//          set forth by Rogue Wave Software, Inc.
//
///////////////////////////////////////////////////////////////////////////////
//
// This file will be processed by the MIDL tool to
// produce the type library (SflPropBags.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	uuid(F0A5B360-8898-11d3-9DAC-00C04F91E286),
	version(2.0),
	helpstring("SFL Property bag services"),
	helpfile("")
]
library SflPropBags
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");


	[
		object,
		uuid(54A28AB0-426E-11D2-9D20-00C04F91E286),
		dual, 
		helpstring("Automation-friendly persistence strategy interface"),
		pointer_default(unique)
	]
	interface IPersistenceStrategy : IDispatch
	{
		[id(1), helpstring("Initialization of Property Bag")] HRESULT Init([in] VARIANT InitParam);
		[id(2), helpstring("Commits the persistence operation")] HRESULT Commit();
		[id(3), helpstring("Persist the given object")] HRESULT Save([in] BSTR PropertyName, [in] IUnknown* pPersistObject);
		[id(4), helpstring("Load an object from persisted state")] HRESULT Load([in] BSTR PropertyName, [out] IUnknown** pPersistObject);
	};


	// Coclasses

	[
		uuid(54A28AB1-426E-11D2-9D20-00C04F91E286),
		helpstring("RegistryPropertyBag Class")
	]
	coclass RegistryPropertyBag
	{
		[default] interface IPersistenceStrategy;
	};


	[
		uuid(54A28AB4-426E-11D2-9D20-00C04F91E286),
		helpstring("FilePropertyBag Class")
	]
	coclass XMLPropertyBag
	{
		[default] interface IPersistenceStrategy;
	};

};
