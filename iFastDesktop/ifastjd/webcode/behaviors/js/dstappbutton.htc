<!-- ---------------------------------------------------------------------
//
//  FILE        : dstappbutton.htc
//
//  DESCRIPTION :
//
//  PROPERTIES  :
//
//   selected - sets the button to selected or not selected (true/false)
//
//  METHODS     :
//
//  EVENTS      :
//
//  onerror - fires when error has occured
//  onchange - fires when selected property has changed
//
//  COPYRIGHT   :
//
//   The computer systems, procedures, data bases and programs
//   created and maintained by DST Systems, Inc., are proprietary
//   in nature and as such are confidential.  Any unauthorized
//   use or disclosure of such information may result in civil
//   liabilities.
//
//   Copyright© 2004 by DST Systems, Inc.
//   All rights reserved.
//
//-------------------------------------------------------------------- -->
<method name="disable" />

<public:event name="onerror" ID=errorID />
<public:event name="onchange" ID=onChange />

<public:property name="selected" get="getSelected" put="setSelected"/>

<public:attach event="ondetach" onevent="cleanup()" />
<public:attach event="oncontentready" onevent="init();" />

<script language="javascript">

var _selected=false;

function init()
{
	if(element.tagName.toLowerCase()=='button')
	{
		element.attachEvent('onmouseover',onMouseOver);
		element.attachEvent('onmouseout',onMouseOut);
		element.style.height="24px";
		element.style.fontSize="12px";
		element.disable(element.disabled);
	}
	else
	{
		ReturnError("3000","Error: DSTAppButton not attached to a button element");
	}
}

function getSelected()
{
	return _selected;
}

function setSelected(selected)
{
	if(_selected!=isTrue(selected))
	{
		_selected=isTrue(selected);
		if(_selected)
		{
			element.style.backgroundColor="PaleGoldenrod";
		}
		else
		{
			element.style.backgroundColor="DarkKhaki";
		}
		fireOnChange();
	}
}

function cleanup()
{
	element.detachEvent('onmouseover',onMouseOver);
	element.detachEvent('onmouseout',onMouseOut);
}

function onMouseOver(e)
{
	if(_selected)
	{
		changeColor(element,"rgb(214,208,152)");
	}
	else
	{
		changeColor(element,"rgb(170,164,96)");
	}
}

function onMouseOut(e)
{
	changeColor(element,"");
}

function changeColor(obj,color)
{
	if (null==obj)
	{
		return;
	}
	obj.runtimeStyle.backgroundColor=color;
	changeColor(obj.childElement);
}

function disable(disabled)
{
	element.disabled=disabled;
	if(disabled)
	{
		element.selected=false;
		element.style.backgroundColor="rgb(245,245,245)";
		element.style.border="1px solid rgb(172,168,153)";
		element.style.color="rgb(81,81,81)"
	}
	else
	{
		if(_selected)
		{
			element.style.backgroundColor="PaleGoldenrod";
		}
		else
		{
			element.style.backgroundColor="DarkKhaki";
		}
		element.style.border="1px solid black";
		element.style.color="black";
	}
}

function isTrue(vValue)
{
	var temp=vValue.toString().toLowerCase();
	return temp=="true";
}

function fireOnChange()
{
	var oEvent=createEventObject();
	onChange.fire(oEvent);
}

function ReturnError(code,message)
{
	var oEvent=createEventObject();
	oEvent.code=code;
	oEvent.message=message;
	errorID.fire(oEvent);
}
</script>
