<html xmlns:dst>
	<head>
		<title>
			Edit Columns
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		</title>
		<?import namespace="dst" implementation="../../js/dstgrid/dstgrid.htc"/>
		<link rel="stylesheet" href="../../ta2000.css" type="text/css">
		<script>
			function onBodyLoad()
			{
				// load styles from grid's document
				var styleSheet=window.dialogArguments[0];
				var count=styleSheet.rules.length;
				for(var j=0;j<count;j++)
				{
					var oRule=styleSheet.rules(j);
					document.styleSheets[0].addRule(oRule.selectorText,oRule.style.cssText);
				}

				var gridAvailable=document.all.item("gridAvailable");
				var gridSelected=document.all.item("gridSelected");

				var availableRows=gridAvailable.XMLDocument.selectSingleNode("//rows");
				var selectedRows=gridSelected.XMLDocument.selectSingleNode("//rows");

				var oDoc=new ActiveXObject("Msxml2.DOMDocument");
				oDoc.setProperty("SelectionLanguage","XPath");
				oDoc.appendChild(window.dialogArguments[1]);

				// add items to selected
				var selectedColumns=oDoc.selectSingleNode("/*/preferences/columns");
				if(selectedColumns==null) selectedColumns=oDoc.selectSingleNode("/*/columns");
				var selectedNodes=selectedColumns.selectNodes("child::node()");
				var count=selectedNodes.length;
				for(var i=0;i<count;i++)
				{
					var oColumn=selectedNodes[i];

					// remove this column from available list
					var availNode=oDoc.selectSingleNode("/*/columns/"+oColumn.tagName);
					if(availNode!=null) availNode.parentNode.removeChild(availNode);

					// add column to selected list
					selectedRows.appendChild(getRowNode(oDoc,oColumn));
				}

				// see if selected list was populated with all columns. if so then skip
				// loading the available list (leave it blank).
				if(selectedColumns.parentNode.tagName=="preferences")
				{
					var availableNodes=oDoc.selectNodes("/*/columns/child::node()");
					var count=availableNodes.length;
					for(var i=0;i<count;i++)
					{
						var oColumn=availableNodes[i];

						// add column to selected list
						availableRows.appendChild(getRowNode(oDoc,oColumn));
					}
				}

				gridAvailable.addRows(availableRows);
				gridSelected.addRows(selectedRows);
				enableButtons();
			}

			function getRowNode(oDoc,oColumn)
			{
				var row=oDoc.createElement("row");

				var column=oDoc.createElement("ColumnName");
				column.text=oColumn.text;
				row.appendChild(column);

				column.appendChild(oColumn.cloneNode(true));

				return row;
			}

			function onButtonAdd()
			{
				var gridAvailable=document.all.item("gridAvailable");
				var gridSelected=document.all.item("gridSelected");
				gridSelected.addRows(gridAvailable.getSelectedRows());
				gridAvailable.deleteSelectedRows();
				enableButtons();
			}

			function onButtonAddAll()
			{
				var gridAvailable=document.all.item("gridAvailable");
				var gridSelected=document.all.item("gridSelected");
				gridSelected.addRows(gridAvailable.getAllRows());
				gridAvailable.deleteAllRows();
				enableButtons();
			}

			function onButtonRemove()
			{
				var gridAvailable=document.all.item("gridAvailable");
				var gridSelected=document.all.item("gridSelected");
				gridAvailable.addRows(gridSelected.getSelectedRows());
				gridSelected.deleteSelectedRows();
				enableButtons();
			}

			function onButtonRemoveAll()
			{
				var gridAvailable=document.all.item("gridAvailable");
				var gridSelected=document.all.item("gridSelected");
				gridAvailable.addRows(gridSelected.getAllRows());
				gridSelected.deleteAllRows();
				enableButtons();
			}

			function onButtonMoveUp()
			{
				var rowIndex=-1;
				var gridSelected=document.all.item("gridSelected");
				var oDoc=gridSelected.XMLDocument;
				oDoc.setProperty("SelectionLanguage","XPath");
				var oRows=oDoc.selectSingleNode("/*/rows");
				var count=gridSelected.getItemCount();
				for(var index=1;index<count;index++) // skip the first item in the list. it is already at the top and therefor cannot be moved any higer.
				{
					if(gridSelected.getItemState(index))
					{
						var id=gridSelected.getItem(index).getAttribute("id");
						// find the row in the XMLDocument. Swap the two rows.
						var oSelectedRow=oRows.selectSingleNode("child::row[@id='"+id+"']");
						var oPrevious=oSelectedRow.previousSibling;
						oRows.removeChild(oSelectedRow);
						oRows.insertBefore(oSelectedRow,oPrevious);
						rowIndex=index; // store only the bottom-most item in the list selected
					}
				}
				if(rowIndex!=-1)
				{
					gridSelected.deleteAllRows();
					gridSelected.addRows(oRows,false);
					gridSelected.ensureVisible(rowIndex-1,false);
				}
			}

			function onButtonMoveDown()
			{
				var rowIndex=-1;
				var gridSelected=document.all.item("gridSelected");
				var oDoc=gridSelected.XMLDocument;
				oDoc.setProperty("SelectionLanguage","XPath");
				var oRows=oDoc.selectSingleNode("/*/rows");
				var count=gridSelected.getItemCount();
				for(var index=count-1;index>-1;index--)
				{
					if(gridSelected.getItemState(index))
					{
						if(index<count-1) //&&!gridSelected.getItemState(index+1)) // if not the last in the list and next item is not selected
						{
							var id=gridSelected.getItem(index).getAttribute("id");
							// find the row in the XMLDocument. Swap the two rows.
							var oSelectedRow=oRows.selectSingleNode("child::row[@id='"+id+"']");
							var oNextRow=oRows.removeChild(oSelectedRow.nextSibling);
							oRows.insertBefore(oNextRow,oSelectedRow);
							if(rowIndex==-1) rowIndex=index; // store only the bottom-most item in the list selected
						}
					}
				}
				if(rowIndex!=-1)
				{
					gridSelected.deleteAllRows();
					gridSelected.addRows(oRows,false);
					gridSelected.ensureVisible(rowIndex+1,false);
				}
			}

			function onButtonOK()
			{
				var oDoc=new ActiveXObject("Msxml2.DOMDocument");
				var oColumns=oDoc.createElement("columns");
				oDoc.appendChild(oColumns);

				var src=document.all.item("gridSelected").XMLDocument;
				src.setProperty("SelectionLanguage","XPath");
				var oNodes=src.selectNodes("//row/ColumnName/*");
				var count=oNodes.length;
				if(count==0)
				{
					alert("At least one row must be selected.");
				}
				else
				{
					for(var i=0;i<count;i++)
					{
						oColumns.appendChild(oNodes[i].cloneNode(true));
					}

					window.returnValue=oDoc;
					window.close();
				}
			}

			function onButtonCancel()
			{
				window.returnValue=null;
				window.close();
			}

			function enableButtons()
			{
				var gridAvailable=document.all.item("gridAvailable");
				var gridSelected=document.all.item("gridSelected");

				disableButton(document.all.item("btnAdd"),gridAvailable.getSelectedCount()==0);
				disableButton(document.all.item("btnAddAll"),gridAvailable.getItemCount()==0);
				disableButton(document.all.item("btnRemove"),gridSelected.getSelectedCount()==0);
				disableButton(document.all.item("btnRemoveAll"),gridSelected.getItemCount()==0);
				disableButton(document.all.item("btnMoveUp"),gridSelected.getSelectedCount()==0);
				disableButton(document.all.item("btnMoveDown"),gridSelected.getSelectedCount()==0);
			}

			function disableButton(button,disabled)
			{
				if("disable" in button) button.disable(disabled);
				else button.disabled=disabled;
			}
		</script>
	</head>
	<body onload="onBodyLoad()" style="margin:8px" scroll="yes">
		<table height="100%" width="100%" cellpadding="0" cellspacing="0">
			<tr height="1%">
				<td><h3 style="margin:0">Select the columns to include in the spreadsheet</h3></td>
			</tr>
			<tr height="98%">
				<td style="padding:8px">
					<table height="100%" width="100%" cellpadding="0" cellspacing="0">
						<colgroup>
							<col width="49%">
							<col width="2%">
							<col width="49%">
						</colgroup>
						<tr height="1%">
							<td><h4 style="margin:0 0 8px 0">Available columns</h4></td>
							<td>&nbsp;</td>
							<td><h4 style="margin:0 0 8px 0">Selected columns</h4></td>
						</tr>
						<tr height="99%">
							<td>
								<dst:dstgrid id="gridAvailable" altRowColor="false" class="dstgrid" select="multiple" selectionBackColor="highlight"
									selectionForeColor="highlighttext" showColumnHeaders="false" showGridLines="false" onrowselect="enableButtons()"
									ondoubleclick="onButtonAdd()">
									<list>
										<columns>
											<ColumnName type="text" width="100%">Column Name</ColumnName>
										</columns>
										<rows/>
									</list>
								</dst:dstgrid>
							</td>
							<td align="center" valign="middle">
								<button class="dstbutton" id="btnAdd" style="width:120px;margin:0 8px 8px 8px" disabled onclick="onButtonAdd()"><u>A</u>dd &gt;</button><br>
								<button class="dstbutton" id="btnAddAll" style="width:120px;margin:0 8px 8px 8px" disabled onclick="onButtonAddAll()">A<u>d</u>d All &gt;&gt;</button><br>
								<button class="dstbutton" id="btnRemove" style="width:120px;margin:0 8px 8px 8px" disabled onclick="onButtonRemove()">&lt; <u>R</u>emove</button><br>
								<button class="dstbutton" id="btnRemoveAll" style="width:120px;margin:0 8px 24px 8px" disabled onclick="onButtonRemoveAll()">&lt;&lt; Re<u>m</u>ove All</button><br>
								<button class="dstbutton" id="btnMoveUp" style="width:120px;margin:0 8px 8px 8px" onclick="onButtonMoveUp()">Move up</button><br>
								<button class="dstbutton" id="btnMoveDown" style="width:120px;margin:0 8px 0px 8px" onclick="onButtonMoveDown()">Move down</button>
							</td>
							<td>
								<dst:dstgrid id="gridSelected" altRowColor="false" class="dstgrid" select="multiple" selectionBackColor="highlight"
									selectionForeColor="highlighttext" showColumnHeaders="false" showGridLines="false" onrowselect="enableButtons()"
									ondoubleclick="onButtonRemove()">
									<list>
										<columns>
											<ColumnName type="text" width="100%">Column Name</ColumnName>
										</columns>
										<rows/>
									</list>
								</dst:dstgrid>
							</td>
						</tr>
					</table>
				</td>
			</tr>
			<tr height="1%">
				<td align="right">
					<button class="dstbutton" ID="btnOK" type="submit" style="margin-right:8px" onclick="onButtonOK()">OK</button>
					<button class="dstbutton" ID="btnCancel" escape="true" onclick="onButtonCancel()">Cancel</button>
				</td>
			</tr>
		</table>
	</body>
</html>