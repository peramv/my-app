properties([gitLabConnection(''), 
[$class: 'RebuildSettings', 
autoRebuild: false, rebuildDisabled: false],
 [$class: 'JobRestrictionProperty'], 
 parameters([
 string(defaultValue: '', description: 'The value of this parameter should be in the format ifastbase-17.2.4.q or ifastdesktop-17.2.4.q', name: 'Release_Label', trim: true),
 string(defaultValue: ' ', description: 'This is the value of immediate previous release to Product_Release value given above. For ex: ifastbase-17.2.3.q or "NO" and ifastdesktop-17.2.3.q or NO', name: 'Previous_Release_Label', trim: true),
 string(defaultValue: '', description: 'List of change packages to be applied for this release. the values of this parameter goes like (CHG85649V1, CHG85651V2)  or "NO"', name: 'Product_Changes', trim: true),
 choice(choices: ['POST','GET','DELETE'], description: '', name: 'action'), 
 choice(choices: ['ifastdb','webplus','desktop','iweb'], description: '', name: 'entity_product'), 
 choice(choices: ['ACTUAL','PROEXP','PRO','EXP','ALL'], description: '', name: 'APE_ENV'), 
 choice(choices: ['DEV', 'QA', 'UAT', 'PROD', 'P0275866','redleaf','europeantransformation'], description: '', name: 'SDLC'), 
  string(defaultValue: '', description: 'Please enter the source to checkout the code', name: 'CPPSVNCheckoutFolder', trim: false)]),  
 pipelineTriggers([])])
 pipeline
 {
	agent
	{
		node
		{
		    label 'windows'
		}
	}
	stages
	{
		stage('SVN Checkout')
		{
			steps
			{
				deleteDir()
				checkout([$class: 'SubversionSCM', additionalCredentials: [], 
				excludedCommitMessages: '',
				excludedRegions: '', 
				excludedRevprop: '',
				excludedUsers: '',
				filterChangelog: false, 
				ignoreDirPropChanges: false,
				includedRegions: '',
				locations: [[credentialsId: 'SVN_Credentials', depthOption: 'infinity', ignoreExternalsOption: true, 
				local: '.', remote: '${CPPSVNCheckoutFolder}']],
				workspaceUpdater: [$class: 'CheckoutUpdater']])
			
			}

		}
		stage('Execute bat command')
		{
			steps
			{
					bat ''':: This is clean and build stage on the build process

							@echo on

							@SET FrameworkDir=C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319

							echo %PATH%


							:: Delete "Disk Images" Directory and all contents
							:: Delete shipset directory 

							rmdir /Q /S "Disk Images"
							rmdir /Q /S "shipset"
							rmdir /Q /S "distrib"


							:: Lets start clean

							"%FrameworkDir%\\msbuild" "ifastgui.sln" /t:Clean /p:Configuration=Release /p:Platform=Win32 /flp:logfile=devenv_out.txt


							:: Update version_app.cpp
							:: Nasty perl hack to get svn revision
							:: svn upgrade is required
							
							svn upgrade 

							perl -e "@result = `svn info`; @grepResult = grep( /Revision/, @result); @splitResults = split(/: /, $grepResult[0]); print $splitResults[1];" > svnrev.txt
							for /f %%i in (svnrev.txt) do set SVNREV=%%i 
							perl dtop_brander.pl --rev=%SVNREV%


							:: Compare resource files

							@echo If result of comparing resource files is not 0 (zero), the build will be stoped. 

							perl rccompare.pl "ifastgui\\resCanada\\ResCanada.rc" "ifastgui\\resCanadaFr\\ResCanadaFr.rc" 

							@echo Result of comparing resource files "ResCanada.rc vs. ResCanadaFr.rc" is: "%ERRORLEVEL%" 
							@if not "%ERRORLEVEL%" == "0" goto :eof

							perl rccompare.pl "ifastgui\\resCommon\\ResCommon.rc" "ifastgui\\resCommonFr\\ResCommonFr.rc" 

							@echo Result of comparing resource files "ResCommon.rc vs. ResCommonFr.rc" is: "%ERRORLEVEL%" 
							@if not "%ERRORLEVEL%" == "0" goto :eof 


							:: Build the projects

							"%FrameworkDir%\\msbuild" "ifastgui.sln" /t:"Resource - Related Projects\\ResCanada" /p:Configuration=Release /p:Platform=Win32 /flp:logfile=devenv_out.txt

							:: Check if build succeeded

							@echo off
							set BUILD_STATUS=%ERRORLEVEL%
							if %BUILD_STATUS%==0 echo Build success  
							if not %BUILD_STATUS%==0  echo Build failed  
							:: If build failed exit immediately
							if not %BUILD_STATUS%==0  goto :eof 
							@echo on


							"%FrameworkDir%\\msbuild" "ifastgui.sln" /t:"Resource - Related Projects\\ResDll" /p:Configuration=Release /p:Platform=Win32 /flp:logfile=devenv_out.txt

							:: Check if build succeeded

							@echo off
							set BUILD_STATUS=%ERRORLEVEL%
							if %BUILD_STATUS%==0 echo Build success  
							if not %BUILD_STATUS%==0  echo Build failed  
							:: If build failed exit immediately
							if not %BUILD_STATUS%==0  goto :eof 
							@echo on
							del /Q ifastgui\\resDll\\Release\\canada_eng.dll
							ren ifastgui\\resDll\\Release\\ResDll.dll canada_eng.dll


							"%FrameworkDir%\\msbuild" "ifastgui.sln" /t:"Resource - Related Projects\\ResCanadaFr" /p:Configuration=Release /p:Platform=Win32 /flp:logfile=devenv_out.txt

							:: Check if build succeeded

							@echo off
							set BUILD_STATUS=%ERRORLEVEL%
							if %BUILD_STATUS%==0 echo Build success  
							if not %BUILD_STATUS%==0  echo Build failed  
							:: If build failed exit immediately
							if not %BUILD_STATUS%==0  goto :eof 
							@echo on


							"%FrameworkDir%\\msbuild" "ifastgui.sln" /t:"Resource - Related Projects\\ResDll" /p:Configuration=Release /p:Platform=Win32 /flp:logfile=devenv_out.txt

							:: Check if build succeeded

							@echo off
							set BUILD_STATUS=%ERRORLEVEL%
							if %BUILD_STATUS%==0 echo Build success  
							if not %BUILD_STATUS%==0  echo Build failed  
							:: If build failed exit immediately
							if not %BUILD_STATUS%==0  goto :eof 
							@echo on
							del /Q ifastgui\\resDll\\Release\\canada_fr.dll
							ren ifastgui\\resDll\\Release\\ResDll.dll canada_fr.dll


							"%FrameworkDir%\\msbuild" "ifastgui.sln" /t:"Resource - Related Projects\\ResEurope" /p:Configuration=Release /p:Platform=Win32 /flp:logfile=devenv_out.txt

							:: Check if build succeeded

							@echo off
							set BUILD_STATUS=%ERRORLEVEL%
							if %BUILD_STATUS%==0 echo Build success  
							if not %BUILD_STATUS%==0  echo Build failed  
							:: If build failed exit immediately
							if not %BUILD_STATUS%==0  goto :eof 
							@echo on


							"%FrameworkDir%\\msbuild" "ifastgui.sln" /t:"Resource - Related Projects\\ResDll" /p:Configuration=Release /p:Platform=Win32 /flp:logfile=devenv_out.txt

							:: Check if build succeeded

							@echo off
							set BUILD_STATUS=%ERRORLEVEL%
							if %BUILD_STATUS%==0 echo Build success  
							if not %BUILD_STATUS%==0  echo Build failed  
							:: If build failed exit immediately
							if not %BUILD_STATUS%==0  goto :eof 
							@echo on
							del /Q ifastgui\\resDll\\Release\\lux_eng.dll
							ren ifastgui\\resDll\\Release\\ResDll.dll lux_eng.dll


							"%FrameworkDir%\\msbuild" "ifastgui.sln" /p:Configuration=Release /p:Platform=Win32 /flp:logfile=devenv_out.txt

							:: Check if build succeeded

							@echo off
							set BUILD_STATUS=%ERRORLEVEL%
							if %BUILD_STATUS%==0 echo Build success  
							if not %BUILD_STATUS%==0  echo Build failed  
							:: If build failed exit immediately
							if not %BUILD_STATUS%==0  goto :eof 
							@echo on


							:: Create new shipset folder structure

							mkdir shipset
							mkdir "shipset\\win32"
							mkdir "shipset\\csi"
							mkdir "shipset\\data"
							mkdir "shipset\\data\\config"

							:: Move files into shipset directories

							copy "bin\\release\\*.dll" "shipset\\win32"
							copy "bin\\release\\*.exe" "shipset\\win32"
							copy "bin\\release\\*.ocx" "shipset\\win32"

							copy "ifastcsi\\ifast.ek*" "shipset\\csi"
							copy "ifastcsi\\guicbie.*" "shipset\\csi"

							copy "data\\*.cnd" "shipset\\data"
							copy "data\\databroker.bin" "shipset\\data"
							copy "data\\*.chm" "shipset\\data"
							copy "data\\*.avi" "shipset\\data"
							copy "data\\config\\*" "shipset\\data\\config"

							copy "ifastgui\\Road.ico" "shipset\\win32"
							copy "ifastgui\\RoadDoc.ico" "shipset\\win32"
							copy "ifastgui\\resDll\\Release\\canada_eng.dll" "shipset\\win32"
							copy "ifastgui\\resDll\\Release\\canada_fr.dll" "shipset\\win32"
							copy "ifastgui\\resDll\\Release\\lux_eng.dll" "shipset\\win32"
							copy "ifastcsi\\ifast.etb" "shipset\\csi"

							:: Create zip files

							mkdir distrib

							:: Delete old setup files

							del NSIS_Installer\\Setup.exe
							del NSIS_Installer\\*.zip

							set /p Build=<version.txt


							:: Create NSIS based installation package

							"C:\\Program Files (x86)\\NSIS\\makensis" /Dbuild=%Build% "NSIS_Installer\\ifast_desktop.nsi"


							:: Get current date

							@For /F "tokens=2,3,4 delims=/ " %%A in (\'Date /t\') do @( 
							Set Month=%%A
							Set Day=%%B
							Set Year=%%C
							)

							"C:\\Program Files\\7-Zip\\7z" a NSIS_Installer\\iFAST_Desktop_%Build%_%Year%_%Month%_%Day%.zip .\\NSIS_Installer\\Setup.exe
                            C:\\slave\\workspace\\Desktop-Cpp-RL\\NSIS_Installer\\Setup.exe /S /D=C:\\slave\\test\\%Release_Label%
							copy "NSIS_Installer\\iFAST_Desktop_%Build%_%Year%_%Month%_%Day%.zip" "distrib"

							mkdir \\\\172.18.3.46\\testing\\DESKTOP\\APE\\%Release_Label%
                            xcopy C:\\slave\\test\\%Release_Label% \\\\172.18.3.46\\testing\\DESKTOP\\APE\\%Release_Label% /s /Y /E

					

							echo Build Successul
							
						'''
				}

		}
	}
 }
