; sample .ini file for timbuk3
[timbuk3 version]
version=2.4.1
[Restricted Data Sets]
; use Include= to specify the datasets to include.  If no inclusion directive is
; specified then Include=* is assumed to have been set.
; use Ignore= to ignore a specific dataset.
; Include and Ignore are *not* mutually exclusive
; Both include= and exclude= are case-insensitive and support the FileName wildcards * and ?
Include=dstc*
Include=substitute.vw
Include=currency.vw
Include=awdhist*.vw
Include=listviewheading
[Paths]
; Specify paths for generated files
; GeneralOutputPath will be used for all paths unless a path is specifically overridden
GeneralOutputPath=.
; HOutputPath=
; HPPOutputPath=
; CPPOutputPath=

[Connection]
; Specify the ODBC connection name to use to open the Project DataDictionary
;ODBC=mfcan_fields
AccessDB=../data/ifast_fields.mdb
; FOR TIMBUK3 DEV TESTING ONLY ... AccessDB=c:\ifds\ifast\rel\data\ifast_fields.mdb

[Name]
; Use BaseProject= to specify the base name for the generated files
BaseProject=ifast

[ExtraFiles]
; Specify the name of files which should be included in the project file (.dsp)
; but are not generated.  Do not include the extension of the file.
CPPFile=ifast_formatters
; HPPFile=
; HFile=

; The [Language] section is intended to specify which languages in the data dictionary
; must be emitted as 'converted' unicode characters.  If the language specific text for
; a language in the data dictionary is stored in a code page other than the 'standard'
; US code page then it should be specified.  Also, if the text must be emitted as Unicode
; text (e.g. Japanese) then Unicode should be set to Y.
; Multiple languages should define the value multiple times, but grouped appropriately.
; i.e. the CodePage and Unicode indicators must appear after the correspoding ID entry
; before another ID entry appears.
[Language]
ID=2
CodePage=932
Unicode=Y
Exclude=Y


; define the default Language, Market, and Client to use when generating chooser functions
[Default]
Language=1
Market=3
Client=11

; SubstitutionChaining enables logic to warn that there is a substitution value for an 'anchor'
; language, but there is no corresponding substitution value in a 'chained' language.
; This feature was added to allow a check to ensure that a subsitution value with an entry for enUS will
; also have one for frCA.
[SubstitutionChaining]
; Language 1 = enUS
Anchor=1
; Language 5 = frCA
Chain=5
; More than one 'Chain=' language can be specified.  For example, if you also wanted to chain enCA (language=3), then
; specify 'Chain=3' also
;Chain=

[Generation]
; The FieldRangePerFile and SubstitutionRangePerFile are used to algorithimcally determine in which file to place the
; field and substitution set C++ code.  The algorithm isn't complicated:  do an integer-divide of the numerical ID of the field
; or substitution set by the 'RangePerFile' value.
;
; FieldRangePerFile defines the increment to use when creating property files.
; The FieldProperty objects are split up into several .cpp files for ease-of-compilation.
; The algorithm which decides into which file a property object should be written uses
; the Field_Id to collect the fields.
FieldRangePerFile=200
; SubstitutionRangePerFile defines the range of substitution sets to write to each SubstitutionSet and Chooser file
SubstitutionRangePerFile=30
; DatasetToStream indicates if the BFDataSet::toStream() should be implemented
; Valid values are Implement and Default
DatasetToStream=Default
; DatasetFromStream indicates if the BFDataSet::fromStream() should be implemented
; Valid values are Implement and Default
DatasetFromStream=Default
; DebugSymbols may be Y, N or missing.  Y causes Debugging information to be embedded
; in the DLL in a Debug build
DebugSymbols=Y
