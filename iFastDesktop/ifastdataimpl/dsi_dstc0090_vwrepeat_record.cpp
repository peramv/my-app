// BFDataImpl implementation file for DataSet DSTC0090.VWRepeat_Record
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Friday, July 21, 2017 19:26:06


#include "stdafx.h"
#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0090_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0090_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0090_VWRepeat_Record() { return new dsi_DSTC0090_VWRepeat_Record; }

dsi_DSTC0090_VWRepeat_Record::dsi_DSTC0090_VWRepeat_Record()
: BFDataImpl( 40001168 )
, BrokerCode_( ifds::BrokerCode, &ifds::s_FldProp_BrokerCode )
, BrokerName_( ifds::BrokerName, &ifds::s_FldProp_BrokerName )
, BrokerType_( ifds::BrokerType, &ifds::s_FldProp_BrokerType )
, BrokerTypeDesc_( ifds::BrokerTypeDesc, &ifds::s_FldProp_BrokerTypeDesc )
, AddrLine1_( ifds::AddrLine1, &ifds::s_FldProp_AddrLine1 )
, AddrLine2_( ifds::AddrLine2, &ifds::s_FldProp_AddrLine2 )
, AddrLine3_( ifds::AddrLine3, &ifds::s_FldProp_AddrLine3 )
, AddrLine4_( ifds::AddrLine4, &ifds::s_FldProp_AddrLine4 )
, AddrLine5_( ifds::AddrLine5, &ifds::s_FldProp_AddrLine5 )
, AddrCntryCode_( ifds::AddrCntryCode, &ifds::s_FldProp_AddrCntryCode )
, PhoneNumber_( ifds::PhoneNumber, &ifds::s_FldProp_PhoneNumber )
, SettlePurDays_( ifds::SettlePurDays, &ifds::s_FldProp_SettlePurDays )
, SettleRedDays_( ifds::SettleRedDays, &ifds::s_FldProp_SettleRedDays )
, NetAllowed_( ifds::NetAllowed, &ifds::s_FldProp_NetAllowed )
, FundAllow_( ifds::FundAllow, &ifds::s_FldProp_FundAllow )
, TaxNominee_( ifds::TaxNominee, &ifds::s_FldProp_TaxNominee )
, VolSettleType_( ifds::VolSettleType, &ifds::s_FldProp_VolSettleType )
, EffectiveDate_( ifds::EffectiveDate, &ifds::s_FldProp_EffectiveDate )
, StopDate_( ifds::StopDate, &ifds::s_FldProp_StopDate )
, AddPerm_( ifds::AddPerm, &ifds::s_FldProp_AddPerm )
, PayInstrTrailer_( ifds::PayInstrTrailer, &ifds::s_FldProp_PayInstrTrailer )
, PayInstrComm_( ifds::PayInstrComm, &ifds::s_FldProp_PayInstrComm )
, PostalCode_( ifds::PostalCode, &ifds::s_FldProp_PostalCode )
, KYCRequired_( ifds::KYCRequired, &ifds::s_FldProp_KYCRequired )
, HouseBroker_( ifds::HouseBroker, &ifds::s_FldProp_HouseBroker )
, NSCCCompliant_( ifds::NSCCCompliant, &ifds::s_FldProp_NSCCCompliant )
, FileTypeD_( ifds::FileTypeD, &ifds::s_FldProp_FileTypeD )
, FileTypeJ_( ifds::FileTypeJ, &ifds::s_FldProp_FileTypeJ )
, MMWire_( ifds::MMWire, &ifds::s_FldProp_MMWire )
, ConfClientNom_( ifds::ConfClientNom, &ifds::s_FldProp_ConfClientNom )
, ConfClientOth_( ifds::ConfClientOth, &ifds::s_FldProp_ConfClientOth )
, ConfClientCli_( ifds::ConfClientCli, &ifds::s_FldProp_ConfClientCli )
, ConfBrkNom_( ifds::ConfBrkNom, &ifds::s_FldProp_ConfBrkNom )
, ConfBrkOth_( ifds::ConfBrkOth, &ifds::s_FldProp_ConfBrkOth )
, ConfBrkCli_( ifds::ConfBrkCli, &ifds::s_FldProp_ConfBrkCli )
, ConfRepNom_( ifds::ConfRepNom, &ifds::s_FldProp_ConfRepNom )
, ConfRepOth_( ifds::ConfRepOth, &ifds::s_FldProp_ConfRepOth )
, ConfRepCli_( ifds::ConfRepCli, &ifds::s_FldProp_ConfRepCli )
, ParticipantID_( ifds::ParticipantID, &ifds::s_FldProp_ParticipantID )
, RelatedToClrFirm_( ifds::RelatedToClrFirm, &ifds::s_FldProp_RelatedToClrFirm )
, SWPSettleESGElig_( ifds::SWPSettleESGElig, &ifds::s_FldProp_SWPSettleESGElig )
, CashIDSettleESGElig_( ifds::CashIDSettleESGElig, &ifds::s_FldProp_CashIDSettleESGElig )
, NFUpdate_( ifds::NFUpdate, &ifds::s_FldProp_NFUpdate )
, KYCRegulation_( ifds::KYCRegulation, &ifds::s_FldProp_KYCRegulation )
, AMLAgreement_( ifds::AMLAgreement, &ifds::s_FldProp_AMLAgreement )
, KYCSignture_( ifds::KYCSignture, &ifds::s_FldProp_KYCSignture )
, KYCStatus_( ifds::KYCStatus, &ifds::s_FldProp_KYCStatus )
, BrokerCategoryList_( ifds::BrokerCategoryList, &ifds::s_FldProp_BrokerCategoryList )
, BrokGuardOptClt_( ifds::BrokGuardOptClt, &ifds::s_FldProp_BrokGuardOptClt )
, BrokGuardOptNom_( ifds::BrokGuardOptNom, &ifds::s_FldProp_BrokGuardOptNom )
, BrokGuardOptINT_( ifds::BrokGuardOptINT, &ifds::s_FldProp_BrokGuardOptINT )
, EPABroker_( ifds::EPABroker, &ifds::s_FldProp_EPABroker )
, FundServBroker_( ifds::FundServBroker, &ifds::s_FldProp_FundServBroker )
, BrokCompliantNW_( ifds::BrokCompliantNW, &ifds::s_FldProp_BrokCompliantNW )
, BrokCssStatus_( ifds::BrokCssStatus, &ifds::s_FldProp_BrokCssStatus )
, ReqAcctCustodian_( ifds::ReqAcctCustodian, &ifds::s_FldProp_ReqAcctCustodian )
{
    cFields_ = 56;
    memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0090_VWRepeat_Record::~dsi_DSTC0090_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0090_VWRepeat_Record::clone()
{
    dsi_DSTC0090_VWRepeat_Record* p = new dsi_DSTC0090_VWRepeat_Record;
    p->BrokerCode_ = BrokerCode_;
    p->BrokerName_ = BrokerName_;
    p->BrokerType_ = BrokerType_;
    p->BrokerTypeDesc_ = BrokerTypeDesc_;
    p->AddrLine1_ = AddrLine1_;
    p->AddrLine2_ = AddrLine2_;
    p->AddrLine3_ = AddrLine3_;
    p->AddrLine4_ = AddrLine4_;
    p->AddrLine5_ = AddrLine5_;
    p->AddrCntryCode_ = AddrCntryCode_;
    p->PhoneNumber_ = PhoneNumber_;
    p->SettlePurDays_ = SettlePurDays_;
    p->SettleRedDays_ = SettleRedDays_;
    p->NetAllowed_ = NetAllowed_;
    p->FundAllow_ = FundAllow_;
    p->TaxNominee_ = TaxNominee_;
    p->VolSettleType_ = VolSettleType_;
    p->EffectiveDate_ = EffectiveDate_;
    p->StopDate_ = StopDate_;
    p->AddPerm_ = AddPerm_;
    p->PayInstrTrailer_ = PayInstrTrailer_;
    p->PayInstrComm_ = PayInstrComm_;
    p->PostalCode_ = PostalCode_;
    p->KYCRequired_ = KYCRequired_;
    p->HouseBroker_ = HouseBroker_;
    p->NSCCCompliant_ = NSCCCompliant_;
    p->FileTypeD_ = FileTypeD_;
    p->FileTypeJ_ = FileTypeJ_;
    p->MMWire_ = MMWire_;
    p->ConfClientNom_ = ConfClientNom_;
    p->ConfClientOth_ = ConfClientOth_;
    p->ConfClientCli_ = ConfClientCli_;
    p->ConfBrkNom_ = ConfBrkNom_;
    p->ConfBrkOth_ = ConfBrkOth_;
    p->ConfBrkCli_ = ConfBrkCli_;
    p->ConfRepNom_ = ConfRepNom_;
    p->ConfRepOth_ = ConfRepOth_;
    p->ConfRepCli_ = ConfRepCli_;
    p->ParticipantID_ = ParticipantID_;
    p->RelatedToClrFirm_ = RelatedToClrFirm_;
    p->SWPSettleESGElig_ = SWPSettleESGElig_;
    p->CashIDSettleESGElig_ = CashIDSettleESGElig_;
    p->NFUpdate_ = NFUpdate_;
    p->KYCRegulation_ = KYCRegulation_;
    p->AMLAgreement_ = AMLAgreement_;
    p->KYCSignture_ = KYCSignture_;
    p->KYCStatus_ = KYCStatus_;
    p->BrokerCategoryList_ = BrokerCategoryList_;
    p->BrokGuardOptClt_ = BrokGuardOptClt_;
    p->BrokGuardOptNom_ = BrokGuardOptNom_;
    p->BrokGuardOptINT_ = BrokGuardOptINT_;
    p->EPABroker_ = EPABroker_;
    p->FundServBroker_ = FundServBroker_;
    p->BrokCompliantNW_ = BrokCompliantNW_;
    p->BrokCssStatus_ = BrokCssStatus_;
    p->ReqAcctCustodian_ = ReqAcctCustodian_;
    return(p);
}

BFDataField* dsi_DSTC0090_VWRepeat_Record::getElement( const BFFieldId& id )
{
    switch( id.getId() ) {
        case 40000044: return ( &BrokerCode_ ); break; // BrokerCode
        case 40000210: return ( &BrokerName_ ); break; // BrokerName
        case 40001165: return ( &BrokerType_ ); break; // BrokerType
        case 40001166: return ( &BrokerTypeDesc_ ); break; // BrokerTypeDesc
        case 40000280: return ( &AddrLine1_ ); break; // AddrLine1
        case 40000281: return ( &AddrLine2_ ); break; // AddrLine2
        case 40000282: return ( &AddrLine3_ ); break; // AddrLine3
        case 40000283: return ( &AddrLine4_ ); break; // AddrLine4
        case 40000284: return ( &AddrLine5_ ); break; // AddrLine5
        case 40000299: return ( &AddrCntryCode_ ); break; // AddrCntryCode
        case 40000297: return ( &PhoneNumber_ ); break; // PhoneNumber
        case 40001411: return ( &SettlePurDays_ ); break; // SettlePurDays
        case 40001412: return ( &SettleRedDays_ ); break; // SettleRedDays
        case 40001449: return ( &NetAllowed_ ); break; // NetAllowed
        case 40001883: return ( &FundAllow_ ); break; // FundAllow
        case 40001902: return ( &TaxNominee_ ); break; // TaxNominee
        case 40001986: return ( &VolSettleType_ ); break; // VolSettleType
        case 40000327: return ( &EffectiveDate_ ); break; // EffectiveDate
        case 40000279: return ( &StopDate_ ); break; // StopDate
        case 40000762: return ( &AddPerm_ ); break; // AddPerm
        case 40003991: return ( &PayInstrTrailer_ ); break; // PayInstrTrailer
        case 40003992: return ( &PayInstrComm_ ); break; // PayInstrComm
        case 40000143: return ( &PostalCode_ ); break; // PostalCode
        case 40004014: return ( &KYCRequired_ ); break; // KYCRequired
        case 40004135: return ( &HouseBroker_ ); break; // HouseBroker
        case 40004419: return ( &NSCCCompliant_ ); break; // NSCCCompliant
        case 40004424: return ( &FileTypeD_ ); break; // FileTypeD
        case 40004426: return ( &FileTypeJ_ ); break; // FileTypeJ
        case 40001985: return ( &MMWire_ ); break; // MMWire
        case 40005136: return ( &ConfClientNom_ ); break; // ConfClientNom
        case 40005137: return ( &ConfClientOth_ ); break; // ConfClientOth
        case 40005138: return ( &ConfClientCli_ ); break; // ConfClientCli
        case 40005139: return ( &ConfBrkNom_ ); break; // ConfBrkNom
        case 40005140: return ( &ConfBrkOth_ ); break; // ConfBrkOth
        case 40005141: return ( &ConfBrkCli_ ); break; // ConfBrkCli
        case 40005142: return ( &ConfRepNom_ ); break; // ConfRepNom
        case 40005143: return ( &ConfRepOth_ ); break; // ConfRepOth
        case 40005144: return ( &ConfRepCli_ ); break; // ConfRepCli
        case 40004978: return ( &ParticipantID_ ); break; // ParticipantID
        case 40005216: return ( &RelatedToClrFirm_ ); break; // RelatedToClrFirm
        case 40005416: return ( &SWPSettleESGElig_ ); break; // SWPSettleESGElig
        case 40005417: return ( &CashIDSettleESGElig_ ); break; // CashIDSettleESGElig
        case 40005655: return ( &NFUpdate_ ); break; // NFUpdate
        case 40005916: return ( &KYCRegulation_ ); break; // KYCRegulation
        case 40005917: return ( &AMLAgreement_ ); break; // AMLAgreement
        case 40005918: return ( &KYCSignture_ ); break; // KYCSignture
        case 40005919: return ( &KYCStatus_ ); break; // KYCStatus
        case 40006125: return ( &BrokerCategoryList_ ); break; // BrokerCategoryList
        case 40006304: return ( &BrokGuardOptClt_ ); break; // BrokGuardOptClt
        case 40006305: return ( &BrokGuardOptNom_ ); break; // BrokGuardOptNom
        case 40006306: return ( &BrokGuardOptINT_ ); break; // BrokGuardOptINT
        case 40006333: return ( &EPABroker_ ); break; // EPABroker
        case 40006502: return ( &FundServBroker_ ); break; // FundServBroker
        case 40007325: return ( &BrokCompliantNW_ ); break; // BrokCompliantNW
        case 40007326: return ( &BrokCssStatus_ ); break; // BrokCssStatus
        case 40007779: return ( &ReqAcctCustodian_ ); break; // ReqAcctCustodian
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0090_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0090_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0090_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
    if ( iField >=0 && iField < 56 )
    {
        BFDataField* pField = aFlds_[iField];
        if( NULL == pField )
        {
            switch(iField)
            {
                case 0: aFlds_[0] = &BrokerCode_; break;
                case 1: aFlds_[1] = &BrokerName_; break;
                case 2: aFlds_[2] = &BrokerType_; break;
                case 3: aFlds_[3] = &BrokerTypeDesc_; break;
                case 4: aFlds_[4] = &AddrLine1_; break;
                case 5: aFlds_[5] = &AddrLine2_; break;
                case 6: aFlds_[6] = &AddrLine3_; break;
                case 7: aFlds_[7] = &AddrLine4_; break;
                case 8: aFlds_[8] = &AddrLine5_; break;
                case 9: aFlds_[9] = &AddrCntryCode_; break;
                case 10: aFlds_[10] = &PhoneNumber_; break;
                case 11: aFlds_[11] = &SettlePurDays_; break;
                case 12: aFlds_[12] = &SettleRedDays_; break;
                case 13: aFlds_[13] = &NetAllowed_; break;
                case 14: aFlds_[14] = &FundAllow_; break;
                case 15: aFlds_[15] = &TaxNominee_; break;
                case 16: aFlds_[16] = &VolSettleType_; break;
                case 17: aFlds_[17] = &EffectiveDate_; break;
                case 18: aFlds_[18] = &StopDate_; break;
                case 19: aFlds_[19] = &AddPerm_; break;
                case 20: aFlds_[20] = &PayInstrTrailer_; break;
                case 21: aFlds_[21] = &PayInstrComm_; break;
                case 22: aFlds_[22] = &PostalCode_; break;
                case 23: aFlds_[23] = &KYCRequired_; break;
                case 24: aFlds_[24] = &HouseBroker_; break;
                case 25: aFlds_[25] = &NSCCCompliant_; break;
                case 26: aFlds_[26] = &FileTypeD_; break;
                case 27: aFlds_[27] = &FileTypeJ_; break;
                case 28: aFlds_[28] = &MMWire_; break;
                case 29: aFlds_[29] = &ConfClientNom_; break;
                case 30: aFlds_[30] = &ConfClientOth_; break;
                case 31: aFlds_[31] = &ConfClientCli_; break;
                case 32: aFlds_[32] = &ConfBrkNom_; break;
                case 33: aFlds_[33] = &ConfBrkOth_; break;
                case 34: aFlds_[34] = &ConfBrkCli_; break;
                case 35: aFlds_[35] = &ConfRepNom_; break;
                case 36: aFlds_[36] = &ConfRepOth_; break;
                case 37: aFlds_[37] = &ConfRepCli_; break;
                case 38: aFlds_[38] = &ParticipantID_; break;
                case 39: aFlds_[39] = &RelatedToClrFirm_; break;
                case 40: aFlds_[40] = &SWPSettleESGElig_; break;
                case 41: aFlds_[41] = &CashIDSettleESGElig_; break;
                case 42: aFlds_[42] = &NFUpdate_; break;
                case 43: aFlds_[43] = &KYCRegulation_; break;
                case 44: aFlds_[44] = &AMLAgreement_; break;
                case 45: aFlds_[45] = &KYCSignture_; break;
                case 46: aFlds_[46] = &KYCStatus_; break;
                case 47: aFlds_[47] = &BrokerCategoryList_; break;
                case 48: aFlds_[48] = &BrokGuardOptClt_; break;
                case 49: aFlds_[49] = &BrokGuardOptNom_; break;
                case 50: aFlds_[50] = &BrokGuardOptINT_; break;
                case 51: aFlds_[51] = &EPABroker_; break;
                case 52: aFlds_[52] = &FundServBroker_; break;
                case 53: aFlds_[53] = &BrokCompliantNW_; break;
                case 54: aFlds_[54] = &BrokCssStatus_; break;
                case 55: aFlds_[55] = &ReqAcctCustodian_; break;
            }
            pField = aFlds_[iField];
            if( NULL == pField ) return( NULL );
        }
        return( pField );
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0090_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
    return( ( const_cast< dsi_DSTC0090_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0090_VWRepeat_Record::getLargestDefinedField( void ) const
{
    return( 200 );
}

unsigned long dsi_DSTC0090_VWRepeat_Record::getDefinedByteLength( void ) const
{
    return( 1502 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0090_VWRepeat_Record::exists( const BFFieldId& id ) const
{
    return dsi_DSTC0090_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0090_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
    switch( id.getId() )
    {
        case 40000044: return ( true );
        case 40000210: return ( true );
        case 40001165: return ( true );
        case 40001166: return ( true );
        case 40000280: return ( true );
        case 40000281: return ( true );
        case 40000282: return ( true );
        case 40000283: return ( true );
        case 40000284: return ( true );
        case 40000299: return ( true );
        case 40000297: return ( true );
        case 40001411: return ( true );
        case 40001412: return ( true );
        case 40001449: return ( true );
        case 40001883: return ( true );
        case 40001902: return ( true );
        case 40001986: return ( true );
        case 40000327: return ( true );
        case 40000279: return ( true );
        case 40000762: return ( true );
        case 40003991: return ( true );
        case 40003992: return ( true );
        case 40000143: return ( true );
        case 40004014: return ( true );
        case 40004135: return ( true );
        case 40004419: return ( true );
        case 40004424: return ( true );
        case 40004426: return ( true );
        case 40001985: return ( true );
        case 40005136: return ( true );
        case 40005137: return ( true );
        case 40005138: return ( true );
        case 40005139: return ( true );
        case 40005140: return ( true );
        case 40005141: return ( true );
        case 40005142: return ( true );
        case 40005143: return ( true );
        case 40005144: return ( true );
        case 40004978: return ( true );
        case 40005216: return ( true );
        case 40005416: return ( true );
        case 40005417: return ( true );
        case 40005655: return ( true );
        case 40005916: return ( true );
        case 40005917: return ( true );
        case 40005918: return ( true );
        case 40005919: return ( true );
        case 40006125: return ( true );
        case 40006304: return ( true );
        case 40006305: return ( true );
        case 40006306: return ( true );
        case 40006333: return ( true );
        case 40006502: return ( true );
        case 40007325: return ( true );
        case 40007326: return ( true );
        case 40007779: return ( true );
    }
    return false;
}

