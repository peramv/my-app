// BFDataImpl header file for DataSet DSTC0015.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:58 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId rxFundCode;
   extern const BFTextFieldId rxClassCode;
   extern const BFDateFieldId TradeDate;
   extern const BFDecimalFieldId TransAmount;
   extern const BFDecimalFieldId Units;
   extern const BFDecimalFieldId UnitsHeld;
   extern const BFDecimalFieldId AdjustedCost;
   extern const BFDecimalFieldId ACBPerUnit;
   extern const BFDecimalFieldId GainOrLossAmt;
   extern const BFTextFieldId TransTypeDesc;
   extern const BFTextFieldId TransType;
   extern const BFDecimalFieldId HistUnitACB;
   extern const BFDecimalFieldId ACBOffset;
   extern const BFNumericFieldId TransId;
   extern const BFDecimalFieldId TaxableAmount;
   extern const BFDecimalFieldId GIAOpenMktValue;
   extern const BFTextFieldId GainOrLossCurrency;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_rxFundCode;
   extern const BFDataFieldProperties s_FldProp_rxClassCode;
   extern const BFDataFieldProperties s_FldProp_TradeDate;
   extern const BFDataFieldProperties s_FldProp_TransAmount;
   extern const BFDataFieldProperties s_FldProp_Units;
   extern const BFDataFieldProperties s_FldProp_UnitsHeld;
   extern const BFDataFieldProperties s_FldProp_AdjustedCost;
   extern const BFDataFieldProperties s_FldProp_ACBPerUnit;
   extern const BFDataFieldProperties s_FldProp_GainOrLossAmt;
   extern const BFDataFieldProperties s_FldProp_TransTypeDesc;
   extern const BFDataFieldProperties s_FldProp_TransType;
   extern const BFDataFieldProperties s_FldProp_HistUnitACB;
   extern const BFDataFieldProperties s_FldProp_ACBOffset;
   extern const BFDataFieldProperties s_FldProp_TransId;
   extern const BFDataFieldProperties s_FldProp_TaxableAmount;
   extern const BFDataFieldProperties s_FldProp_GIAOpenMktValue;
   extern const BFDataFieldProperties s_FldProp_GainOrLossCurrency;
}


class dsi_DSTC0015_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0015_VWRepeat_Record();
   virtual ~dsi_DSTC0015_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[17];
   // Field Declarations
   BFTextField_60 rxFundCode_;
   BFTextField_60 rxClassCode_;
   BFDateField TradeDate_;
   BFDecimalField TransAmount_;
   BFDecimalField Units_;
   BFDecimalField UnitsHeld_;
   BFDecimalField AdjustedCost_;
   BFDecimalField ACBPerUnit_;
   BFDecimalField GainOrLossAmt_;
   BFTextField_60 TransTypeDesc_;
   BFTextField_60 TransType_;
   BFDecimalField HistUnitACB_;
   BFDecimalField ACBOffset_;
   BFNumericField TransId_;
   BFDecimalField TaxableAmount_;
   BFDecimalField GIAOpenMktValue_;
   BFTextField<3> GainOrLossCurrency_;

};
