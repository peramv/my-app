// BFSubstitutionSet objects
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Wednesday, May 31, 2017 14:23:09

#include "stdafx.h"
#include <commonport.h>
#include <clientlocale.hpp>

namespace ifds
{
   // Substitution set LV_RSPReceiptsHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_300_001_000_000[] = {
      I_("RcptNum"),
      I_("Issued"),
      I_("RcptStatus"),
      I_("IssueDate"),
      I_("RcptAmount"),
      I_("Duplicates"),
      I_("Caution"),
      0x00
   };

   static const I_CHAR* aValues_002_300_001_000_000[] = {
      I_("Receipt No."),
      I_("Issued?"),
      I_("Status"),
      I_("Date"),
      I_("Amount"),
      I_("# Duplicate"),
      I_("Caution"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_300_001_000_000;
   const BFSubstitutionSet SubSet_002_300_001_000_000(
    &aKeys_002_300_001_000_000[0], &aValues_002_300_001_000_000[0] );
   // Substitution set LV_RSPReceiptsHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_300_003_000_000[] = {
      I_("RcptNum"),
      I_("Issued"),
      I_("RcptStatus"),
      I_("IssueDate"),
      I_("RcptAmount"),
      I_("Duplicates"),
      0x00
   };

   static const I_CHAR* aValues_002_300_003_000_000[] = {
      I_("Receipt No."),
      I_("Issued?"),
      I_("Status"),
      I_("Date"),
      I_("Amount"),
      I_("# Duplicate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_300_003_000_000;
   const BFSubstitutionSet SubSet_002_300_003_000_000(
    &aKeys_002_300_003_000_000[0], &aValues_002_300_003_000_000[0] );
   // Substitution set LV_RSPReceiptsHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_300_005_000_000[] = {
      I_("RcptNum"),
      I_("Issued"),
      I_("RcptStatus"),
      I_("IssueDate"),
      I_("RcptAmount"),
      I_("Duplicates"),
      I_("Caution"),
      0x00
   };

   static const I_CHAR* aValues_002_300_005_000_000[] = {
      I_("No de reçu"),
      I_("Émis?"),
      I_("Statut"),
      I_("Date"),
      I_("Montant"),
      I_("No de copie"),
      I_("Mise en garde"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_300_005_000_000;
   const BFSubstitutionSet SubSet_002_300_005_000_000(
    &aKeys_002_300_005_000_000[0], &aValues_002_300_005_000_000[0] );
   // Substitution set LV_RSPReceiptsHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_300_006_000_000[] = {
      I_("RcptNum"),
      I_("Issued"),
      I_("RcptStatus"),
      I_("IssueDate"),
      I_("RcptAmount"),
      I_("Duplicates"),
      0x00
   };

   static const I_CHAR* aValues_002_300_006_000_000[] = {
      I_("Receipt No."),
      I_("Issued?"),
      I_("Status"),
      I_("Date"),
      I_("Amount"),
      I_("# Duplicate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_300_006_000_000;
   const BFSubstitutionSet SubSet_002_300_006_000_000(
    &aKeys_002_300_006_000_000[0], &aValues_002_300_006_000_000[0] );
   // Substitution set LV_RSPReceiptsHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_300_007_000_000[] = {
      I_("RcptNum"),
      I_("Issued"),
      I_("RcptStatus"),
      I_("IssueDate"),
      I_("RcptAmount"),
      I_("Duplicates"),
      0x00
   };

   static const I_CHAR* aValues_002_300_007_000_000[] = {
      I_("Receipt No."),
      I_("Issued?"),
      I_("Status"),
      I_("Date"),
      I_("Amount"),
      I_("# Duplicate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_300_007_000_000;
   const BFSubstitutionSet SubSet_002_300_007_000_000(
    &aKeys_002_300_007_000_000[0], &aValues_002_300_007_000_000[0] );
   // Substitution set LV_RSPReceiptsHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_300_008_000_000[] = {
      I_("RcptNum"),
      I_("Issued"),
      I_("RcptStatus"),
      I_("IssueDate"),
      I_("RcptAmount"),
      I_("Duplicates"),
      0x00
   };

   static const I_CHAR* aValues_002_300_008_000_000[] = {
      I_("Receipt No."),
      I_("Issued?"),
      I_("Status"),
      I_("Date"),
      I_("Amount"),
      I_("# Duplicate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_300_008_000_000;
   const BFSubstitutionSet SubSet_002_300_008_000_000(
    &aKeys_002_300_008_000_000[0], &aValues_002_300_008_000_000[0] );
   // Substitution set LV_RSPReceiptsHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_300_010_000_000[] = {
      I_("RcptNum"),
      I_("Issued"),
      I_("RcptStatus"),
      I_("IssueDate"),
      I_("RcptAmount"),
      I_("Duplicates"),
      0x00
   };

   static const I_CHAR* aValues_002_300_010_000_000[] = {
      I_("Receipt No."),
      I_("Issued?"),
      I_("Status"),
      I_("Date"),
      I_("Amount"),
      I_("# Duplicate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_300_010_000_000;
   const BFSubstitutionSet SubSet_002_300_010_000_000(
    &aKeys_002_300_010_000_000[0], &aValues_002_300_010_000_000[0] );
   // Substitution set RemarksLineSet.  Language: enUS
   static const I_CHAR* aKeys_002_301_001_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_301_001_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_301_001_000_000;
   const BFSubstitutionSet SubSet_002_301_001_000_000(
    &aKeys_002_301_001_000_000[0], &aValues_002_301_001_000_000[0] );
   // Substitution set RemarksLineSet.  Language: enCA
   static const I_CHAR* aKeys_002_301_003_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_301_003_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_301_003_000_000;
   const BFSubstitutionSet SubSet_002_301_003_000_000(
    &aKeys_002_301_003_000_000[0], &aValues_002_301_003_000_000[0] );
   // Substitution set RemarksLineSet.  Language: frCA
   static const I_CHAR* aKeys_002_301_005_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_301_005_000_000[] = {
      I_("Remarque 1"),
      I_("Remarque 2"),
      I_("Remarque 3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_301_005_000_000;
   const BFSubstitutionSet SubSet_002_301_005_000_000(
    &aKeys_002_301_005_000_000[0], &aValues_002_301_005_000_000[0] );
   // Substitution set RemarksLineSet.  Language: enIE
   static const I_CHAR* aKeys_002_301_006_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_301_006_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_301_006_000_000;
   const BFSubstitutionSet SubSet_002_301_006_000_000(
    &aKeys_002_301_006_000_000[0], &aValues_002_301_006_000_000[0] );
   // Substitution set RemarksLineSet.  Language: deDE
   static const I_CHAR* aKeys_002_301_007_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_301_007_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_301_007_000_000;
   const BFSubstitutionSet SubSet_002_301_007_000_000(
    &aKeys_002_301_007_000_000[0], &aValues_002_301_007_000_000[0] );
   // Substitution set RemarksLineSet.  Language: esEs
   static const I_CHAR* aKeys_002_301_008_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_301_008_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_301_008_000_000;
   const BFSubstitutionSet SubSet_002_301_008_000_000(
    &aKeys_002_301_008_000_000[0], &aValues_002_301_008_000_000[0] );
   // Substitution set RemarksLineSet.  Language: nlNL
   static const I_CHAR* aKeys_002_301_010_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_301_010_000_000[] = {
      I_("Remarks1"),
      I_("Remarks2"),
      I_("Remarks3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_301_010_000_000;
   const BFSubstitutionSet SubSet_002_301_010_000_000(
    &aKeys_002_301_010_000_000[0], &aValues_002_301_010_000_000[0] );
   // Substitution set LV_MatchTransferHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_302_001_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("Baycom"),
      I_("TradeDate"),
      I_("TransType"),
      I_("UnitPrice"),
      I_("Units"),
      I_("GrossAmt"),
      I_("UnitBalance"),
      0x00
   };

   static const I_CHAR* aValues_002_302_001_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Trade Date"),
      I_("Trans Type"),
      I_("NAV"),
      I_("Units"),
      I_("Gross Amount"),
      I_("Balance"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_302_001_000_000;
   const BFSubstitutionSet SubSet_002_302_001_000_000(
    &aKeys_002_302_001_000_000[0], &aValues_002_302_001_000_000[0] );
   // Substitution set LV_MatchTransferHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_302_003_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("Baycom"),
      I_("TradeDate"),
      I_("TransType"),
      I_("UnitPrice"),
      I_("Units"),
      I_("GrossAmt"),
      I_("UnitBalance"),
      0x00
   };

   static const I_CHAR* aValues_002_302_003_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Trade Date"),
      I_("Trans Type"),
      I_("NAV"),
      I_("Units"),
      I_("Gross Amount"),
      I_("Balance"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_302_003_000_000;
   const BFSubstitutionSet SubSet_002_302_003_000_000(
    &aKeys_002_302_003_000_000[0], &aValues_002_302_003_000_000[0] );
   // Substitution set LV_MatchTransferHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_302_005_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("Baycom"),
      I_("TradeDate"),
      I_("TransType"),
      I_("UnitPrice"),
      I_("Units"),
      I_("GrossAmt"),
      I_("UnitBalance"),
      0x00
   };

   static const I_CHAR* aValues_002_302_005_000_000[] = {
      I_("Fonds"),
      I_("Classe"),
      I_("Numéro"),
      I_("Date de transaction"),
      I_("Type de transaction"),
      I_("Valeur de l'actif net"),
      I_("Unités"),
      I_("Montant brut"),
      I_("Solde"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_302_005_000_000;
   const BFSubstitutionSet SubSet_002_302_005_000_000(
    &aKeys_002_302_005_000_000[0], &aValues_002_302_005_000_000[0] );
   // Substitution set LV_MatchTransferHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_302_006_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("Baycom"),
      I_("TradeDate"),
      I_("TransType"),
      I_("UnitPrice"),
      I_("Units"),
      I_("GrossAmt"),
      I_("UnitBalance"),
      0x00
   };

   static const I_CHAR* aValues_002_302_006_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Trade Date"),
      I_("Trans Type"),
      I_("NAV"),
      I_("Units"),
      I_("Gross Amount"),
      I_("Balance"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_302_006_000_000;
   const BFSubstitutionSet SubSet_002_302_006_000_000(
    &aKeys_002_302_006_000_000[0], &aValues_002_302_006_000_000[0] );
   // Substitution set LV_MatchTransferHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_302_007_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("Baycom"),
      I_("TradeDate"),
      I_("TransType"),
      I_("UnitPrice"),
      I_("Units"),
      I_("GrossAmt"),
      I_("UnitBalance"),
      0x00
   };

   static const I_CHAR* aValues_002_302_007_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Trade Date"),
      I_("Trans Type"),
      I_("NAV"),
      I_("Units"),
      I_("Gross Amount"),
      I_("Balance"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_302_007_000_000;
   const BFSubstitutionSet SubSet_002_302_007_000_000(
    &aKeys_002_302_007_000_000[0], &aValues_002_302_007_000_000[0] );
   // Substitution set LV_MatchTransferHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_302_008_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("Baycom"),
      I_("TradeDate"),
      I_("TransType"),
      I_("UnitPrice"),
      I_("Units"),
      I_("GrossAmt"),
      I_("UnitBalance"),
      0x00
   };

   static const I_CHAR* aValues_002_302_008_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Trade Date"),
      I_("Trans Type"),
      I_("NAV"),
      I_("Units"),
      I_("Gross Amount"),
      I_("Balance"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_302_008_000_000;
   const BFSubstitutionSet SubSet_002_302_008_000_000(
    &aKeys_002_302_008_000_000[0], &aValues_002_302_008_000_000[0] );
   // Substitution set LV_MatchTransferHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_302_010_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("Baycom"),
      I_("TradeDate"),
      I_("TransType"),
      I_("UnitPrice"),
      I_("Units"),
      I_("GrossAmt"),
      I_("UnitBalance"),
      0x00
   };

   static const I_CHAR* aValues_002_302_010_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Trade Date"),
      I_("Trans Type"),
      I_("NAV"),
      I_("Eenheden"),
      I_("Gross Amount"),
      I_("Balance"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_302_010_000_000;
   const BFSubstitutionSet SubSet_002_302_010_000_000(
    &aKeys_002_302_010_000_000[0], &aValues_002_302_010_000_000[0] );
   // Substitution set LV_MatchTransferAttrTopSet.  Language: enUS
   static const I_CHAR* aKeys_002_303_001_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_303_001_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_303_001_000_000;
   const BFSubstitutionSet SubSet_002_303_001_000_000(
    &aKeys_002_303_001_000_000[0], &aValues_002_303_001_000_000[0] );
   // Substitution set LV_MatchTransferAttrTopSet.  Language: enCA
   static const I_CHAR* aKeys_002_303_003_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_303_003_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_303_003_000_000;
   const BFSubstitutionSet SubSet_002_303_003_000_000(
    &aKeys_002_303_003_000_000[0], &aValues_002_303_003_000_000[0] );
   // Substitution set LV_MatchTransferAttrTopSet.  Language: frCA
   static const I_CHAR* aKeys_002_303_005_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_303_005_000_000[] = {
      I_("Attribut"),
      I_("Valeur"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_303_005_000_000;
   const BFSubstitutionSet SubSet_002_303_005_000_000(
    &aKeys_002_303_005_000_000[0], &aValues_002_303_005_000_000[0] );
   // Substitution set LV_MatchTransferAttrTopSet.  Language: enIE
   static const I_CHAR* aKeys_002_303_006_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_303_006_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_303_006_000_000;
   const BFSubstitutionSet SubSet_002_303_006_000_000(
    &aKeys_002_303_006_000_000[0], &aValues_002_303_006_000_000[0] );
   // Substitution set LV_MatchTransferAttrTopSet.  Language: deDE
   static const I_CHAR* aKeys_002_303_007_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_303_007_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_303_007_000_000;
   const BFSubstitutionSet SubSet_002_303_007_000_000(
    &aKeys_002_303_007_000_000[0], &aValues_002_303_007_000_000[0] );
   // Substitution set LV_MatchTransferAttrTopSet.  Language: esEs
   static const I_CHAR* aKeys_002_303_008_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_303_008_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_303_008_000_000;
   const BFSubstitutionSet SubSet_002_303_008_000_000(
    &aKeys_002_303_008_000_000[0], &aValues_002_303_008_000_000[0] );
   // Substitution set LV_MatchTransferAttrTopSet.  Language: nlNL
   static const I_CHAR* aKeys_002_303_010_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_303_010_000_000[] = {
      I_("Attribute"),
      I_("Value"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_303_010_000_000;
   const BFSubstitutionSet SubSet_002_303_010_000_000(
    &aKeys_002_303_010_000_000[0], &aValues_002_303_010_000_000[0] );
   // Substitution set LV_MatchTransferAttrLeftSet.  Language: enUS
   static const I_CHAR* aKeys_002_304_001_000_000[] = {
      I_("Accountable"),
      I_("BackDatedReason"),
      I_("GBCD"),
      I_("FeePercent"),
      I_("Commission"),
      I_("SplitComm"),
      I_("TfrAcct"),
      I_("TfrFund"),
      I_("TfrClass"),
      I_("Baycom"),
      I_("RedCode"),
      I_("DepositType"),
      I_("SetGrossAmt"),
      I_("SetNetAmt"),
      I_("Allocation"),
      I_("SlsrepAltName"),
      I_("OrderSource"),
      I_("SettleSource"),
      I_("SettleType"),
      I_("UnitPrice"),
      I_("SharesElig"),
      I_("DepositDate"),
      I_("CashDate"),
      I_("HoldBackAmt"),
      I_("HoldBackRate"),
      I_("GrossOrNet"),
      I_("RoundFlag"),
      I_("ProvSales"),
      I_("PartFull"),
      I_("RvCode"),
      I_("Initial"),
      I_("DealDate"),
      I_("DealTime"),
      I_("SettleCurrency"),
      I_("ExchRate"),
      I_("PartnerShip"),
      I_("Indc"),
      I_("SeqNum"),
      I_("OverrideDSCDesc"),
      I_("OverrideAmt"),
      I_("ConfIssued"),
      I_("ConfirmReq"),
      I_("RecptIssued"),
      I_("OnStmt"),
      I_("CertRequired"),
      I_("PayType"),
      I_("SettledBy"),
      I_("PostUnsettled"),
      I_("ExpSetlGN"),
      I_("ChqSupCode"),
      I_("GroupCode"),
      I_("SrcOfAccount"),
      I_("SrcOfFund"),
      I_("OrderBatch"),
      I_("OrderTrace"),
      I_("OrderUser"),
      I_("CancelBatch"),
      I_("CancelTrace"),
      I_("CancelUser"),
      I_("SettleBatch"),
      I_("SettleTrace"),
      I_("SettleUser"),
      I_("VerifiedBy"),
      I_("Cancelled"),
      0x00
   };

   static const I_CHAR* aValues_002_304_001_000_000[] = {
      I_("Accountable Entity"),
      I_("Back Dated Reason"),
      I_("GBCD"),
      I_("Fee"),
      I_("Commission"),
      I_("Split Commission"),
      I_("Transfer Account"),
      I_("Transfer Fund"),
      I_("Transfer Class"),
      I_("Transfer Fund Number"),
      I_("Redemption Code"),
      I_("Deposit Type"),
      I_("Settled Gross Amount"),
      I_("Settled Net Amount"),
      I_("Allocation"),
      I_("Sales Rep Alt Name"),
      I_("Order Source"),
      I_("Settlement Source"),
      I_("Settlement Type"),
      I_("Unit Price"),
      I_("Shares Eligible"),
      I_("Deposit Date"),
      I_("Cash Date"),
      I_("Hold Back Amount"),
      I_("Hold Back Rate"),
      I_("Gross / Net"),
      I_("Round Flag"),
      I_("Province of Sales"),
      I_("Partial / Full Redemption"),
      I_("Reversal Code"),
      I_("Initial"),
      I_("Deal Date"),
      I_("Deal Time"),
      I_("Settled Currency"),
      I_("Exchange Rate"),
      I_("Partnership"),
      I_("INDC"),
      I_("Transaction Sequence Nbr"),
      I_("Override DSC"),
      I_("Override Amount"),
      I_("Confirm Issued"),
      I_("Confirm Required"),
      I_("Receipt Issued"),
      I_("Show on Statement"),
      I_("Certificate Required"),
      I_("Pay Type"),
      I_("Settled By"),
      I_("Posted Unsettled"),
      I_("Expected to Settle Gross / Net"),
      I_("Cheque Suppress Code"),
      I_("Group Code"),
      I_("Source of Account"),
      I_("Source of Fund Description"),
      I_("Order Batch"),
      I_("Order Trace"),
      I_("Order User"),
      I_("Cancel Batch"),
      I_("Cancel Trace"),
      I_("Cancel User"),
      I_("Settle Batch"),
      I_("Settle Trace"),
      I_("Settle User"),
      I_("Verifie dBy"),
      I_("Cancelled"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_304_001_000_000;
   const BFSubstitutionSet SubSet_002_304_001_000_000(
    &aKeys_002_304_001_000_000[0], &aValues_002_304_001_000_000[0] );
   // Substitution set LV_MatchTransferAttrLeftSet.  Language: enCA
   static const I_CHAR* aKeys_002_304_003_000_000[] = {
      I_("Accountable"),
      I_("BackDatedReason"),
      I_("GBCD"),
      I_("FeePercent"),
      I_("Commission"),
      I_("SplitComm"),
      I_("TfrAcct"),
      I_("TfrFund"),
      I_("TfrClass"),
      I_("Baycom"),
      I_("RedCode"),
      I_("DepositType"),
      I_("SetGrossAmt"),
      I_("SetNetAmt"),
      I_("Allocation"),
      I_("SlsrepAltName"),
      I_("OrderSource"),
      I_("SettleSource"),
      I_("SettleType"),
      I_("UnitPrice"),
      I_("SharesElig"),
      I_("DepositDate"),
      I_("CashDate"),
      I_("HoldBackAmt"),
      I_("HoldBackRate"),
      I_("GrossOrNet"),
      I_("RoundFlag"),
      I_("ProvSales"),
      I_("PartFull"),
      I_("RvCode"),
      I_("Initial"),
      I_("DealDate"),
      I_("DealTime"),
      I_("SettleCurrency"),
      I_("ExchRate"),
      I_("PartnerShip"),
      I_("Indc"),
      I_("SeqNum"),
      I_("OverrideDSCDesc"),
      I_("OverrideAmt"),
      I_("ConfIssued"),
      I_("ConfirmReq"),
      I_("RecptIssued"),
      I_("OnStmt"),
      I_("CertRequired"),
      I_("PayType"),
      I_("SettledBy"),
      I_("PostUnsettled"),
      I_("ExpSetlGN"),
      I_("ChqSupCode"),
      I_("GroupCode"),
      I_("SrcOfAccount"),
      I_("SrcOfFund"),
      I_("OrderBatch"),
      I_("OrderTrace"),
      I_("OrderUser"),
      I_("CancelBatch"),
      I_("CancelTrace"),
      I_("CancelUser"),
      I_("SettleBatch"),
      I_("SettleTrace"),
      I_("SettleUser"),
      I_("VerifiedBy"),
      I_("Cancelled"),
      0x00
   };

   static const I_CHAR* aValues_002_304_003_000_000[] = {
      I_("Accountable Entity"),
      I_("Back Dated Reason"),
      I_("GBCD"),
      I_("Fee"),
      I_("Commission"),
      I_("Split Commission"),
      I_("Transfer Account"),
      I_("Transfer Fund"),
      I_("Transfer Class"),
      I_("Transfer Fund Number"),
      I_("Redemption Code"),
      I_("Deposit Type"),
      I_("Settled Gross Amount"),
      I_("Settled Net Amount"),
      I_("Allocation"),
      I_("Sales Rep Alt Name"),
      I_("Order Source"),
      I_("Settlement Source"),
      I_("Settlement Type"),
      I_("Unit Price"),
      I_("Shares Eligible"),
      I_("Deposit Date"),
      I_("Cash Date"),
      I_("Hold Back Amount"),
      I_("Hold Back Rate"),
      I_("Gross / Net"),
      I_("Round Flag"),
      I_("Province of Sales"),
      I_("Partial / Full Redemption"),
      I_("Reversal Code"),
      I_("Initial"),
      I_("Deal Date"),
      I_("Deal Time"),
      I_("Settled Currency"),
      I_("Exchange Rate"),
      I_("Partnership"),
      I_("INDC"),
      I_("Transaction Sequence Nbr"),
      I_("Override DSC"),
      I_("Override Amount"),
      I_("Confirm Issued"),
      I_("Confirm Required"),
      I_("Receipt Issued"),
      I_("Show on Statement"),
      I_("Certificate Required"),
      I_("Pay Type"),
      I_("Settled By"),
      I_("Posted Unsettled"),
      I_("Expected to Settle Gross / Net"),
      I_("Cheque Suppress Code"),
      I_("Group Code"),
      I_("Source of Account"),
      I_("Source of Fund Description"),
      I_("Order Batch"),
      I_("Order Trace"),
      I_("Order User"),
      I_("Cancel Batch"),
      I_("Cancel Trace"),
      I_("Cancel User"),
      I_("Settle Batch"),
      I_("Settle Trace"),
      I_("Settle User"),
      I_("Verifie dBy"),
      I_("Cancelled"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_304_003_000_000;
   const BFSubstitutionSet SubSet_002_304_003_000_000(
    &aKeys_002_304_003_000_000[0], &aValues_002_304_003_000_000[0] );
   // Substitution set LV_MatchTransferAttrLeftSet.  Language: frFR
   static const I_CHAR* aKeys_002_304_004_000_000[] = {
      I_("Accountable"),
      I_("BackDatedReason"),
      I_("GBCD"),
      I_("FeePercent"),
      I_("Commission"),
      I_("SplitComm"),
      I_("TfrAcct"),
      I_("TfrFund"),
      I_("TfrClass"),
      I_("Baycom"),
      I_("RedCode"),
      I_("DepositType"),
      I_("SetGrossAmt"),
      I_("SetNetAmt"),
      I_("Allocation"),
      I_("SlsrepAltName"),
      I_("OrderSource"),
      I_("SettleSource"),
      I_("SettleType"),
      I_("UnitPrice"),
      I_("SharesElig"),
      I_("DepositDate"),
      I_("CashDate"),
      I_("HoldBackAmt"),
      I_("HoldBackRate"),
      I_("GrossOrNet"),
      I_("RoundFlag"),
      I_("ProvSales"),
      I_("PartFull"),
      I_("RvCode"),
      I_("Initial"),
      I_("DealDate"),
      I_("DealTime"),
      I_("SettleCurrency"),
      I_("ExchRate"),
      I_("PartnerShip"),
      I_("Indc"),
      I_("SeqNum"),
      I_("OverrideDSCDesc"),
      I_("OverrideAmt"),
      I_("ConfIssued"),
      I_("ConfirmReq"),
      I_("RecptIssued"),
      I_("OnStmt"),
      I_("CertRequired"),
      I_("PayType"),
      I_("SettledBy"),
      I_("PostUnsettled"),
      I_("ExpSetlGN"),
      I_("ChqSupCode"),
      I_("GroupCode"),
      I_("SrcOfAccount"),
      I_("SrcOfFund"),
      I_("OrderBatch"),
      I_("OrderTrace"),
      I_("OrderUser"),
      I_("CancelBatch"),
      I_("CancelTrace"),
      I_("CancelUser"),
      I_("SettleBatch"),
      I_("SettleTrace"),
      I_("SettleUser"),
      I_("VerifiedBy"),
      I_("Cancelled"),
      0x00
   };

   static const I_CHAR* aValues_002_304_004_000_000[] = {
      I_("Accountable Entity"),
      I_("Back Dated Reason"),
      I_("GBCD"),
      I_("Fee"),
      I_("Commission"),
      I_("Split Commission"),
      I_("Transfer Account"),
      I_("Transfer Fund"),
      I_("Transfer Class"),
      I_("Transfer Fund Number"),
      I_("Redemption Code"),
      I_("Deposit Type"),
      I_("Settled Gross Amount"),
      I_("Settled Net Amount"),
      I_("Allocation"),
      I_("Sales Rep Alt Name"),
      I_("Order Source"),
      I_("Settlement Source"),
      I_("Settlement Type"),
      I_("Unit Price"),
      I_("Shares Eligible"),
      I_("Deposit Date"),
      I_("Cash Date"),
      I_("Hold Back Amount"),
      I_("Hold Back Rate"),
      I_("Gross / Net"),
      I_("Round Flag"),
      I_("Province of Sales"),
      I_("Partial / Full Redemption"),
      I_("Reversal Code"),
      I_("Initial"),
      I_("Deal Date"),
      I_("Deal Time"),
      I_("Settled Currency"),
      I_("Exchange Rate"),
      I_("Partnership"),
      I_("INDC"),
      I_("Transaction Sequence Nbr"),
      I_("Override DSC"),
      I_("Override Amount"),
      I_("Confirm Issued"),
      I_("Confirm Required"),
      I_("Receipt Issued"),
      I_("Show on Statement"),
      I_("Certificate Required"),
      I_("Pay Type"),
      I_("Settled By"),
      I_("Posted Unsettled"),
      I_("Expected to Settle Gross / Net"),
      I_("Cheque Suppress Code"),
      I_("Group Code"),
      I_("Source of Account"),
      I_("Source of Fund Description"),
      I_("Order Batch"),
      I_("Order Trace"),
      I_("Order User"),
      I_("Cancel Batch"),
      I_("Cancel Trace"),
      I_("Cancel User"),
      I_("Settle Batch"),
      I_("Settle Trace"),
      I_("Settle User"),
      I_("Verifie dBy"),
      I_("Cancelled"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_304_004_000_000;
   const BFSubstitutionSet SubSet_002_304_004_000_000(
    &aKeys_002_304_004_000_000[0], &aValues_002_304_004_000_000[0] );
   // Substitution set LV_MatchTransferAttrLeftSet.  Language: frCA
   static const I_CHAR* aKeys_002_304_005_000_000[] = {
      I_("Accountable"),
      I_("BackDatedReason"),
      I_("GBCD"),
      I_("FeePercent"),
      I_("Commission"),
      I_("SplitComm"),
      I_("TfrAcct"),
      I_("TfrFund"),
      I_("TfrClass"),
      I_("Baycom"),
      I_("RedCode"),
      I_("DepositType"),
      I_("SetGrossAmt"),
      I_("SetNetAmt"),
      I_("Allocation"),
      I_("SlsrepAltName"),
      I_("OrderSource"),
      I_("SettleSource"),
      I_("SettleType"),
      I_("UnitPrice"),
      I_("SharesElig"),
      I_("DepositDate"),
      I_("CashDate"),
      I_("HoldBackAmt"),
      I_("HoldBackRate"),
      I_("GrossOrNet"),
      I_("RoundFlag"),
      I_("ProvSales"),
      I_("PartFull"),
      I_("RvCode"),
      I_("Initial"),
      I_("DealDate"),
      I_("DealTime"),
      I_("SettleCurrency"),
      I_("ExchRate"),
      I_("PartnerShip"),
      I_("Indc"),
      I_("SeqNum"),
      I_("OverrideDSCDesc"),
      I_("OverrideAmt"),
      I_("ConfIssued"),
      I_("ConfirmReq"),
      I_("RecptIssued"),
      I_("OnStmt"),
      I_("CertRequired"),
      I_("PayType"),
      I_("SettledBy"),
      I_("PostUnsettled"),
      I_("ExpSetlGN"),
      I_("ChqSupCode"),
      I_("GroupCode"),
      I_("SrcOfAccount"),
      I_("SrcOfFund"),
      I_("OrderBatch"),
      I_("OrderTrace"),
      I_("OrderUser"),
      I_("CancelBatch"),
      I_("CancelTrace"),
      I_("CancelUser"),
      I_("SettleBatch"),
      I_("SettleTrace"),
      I_("SettleUser"),
      I_("VerifiedBy"),
      I_("Cancelled"),
      0x00
   };

   static const I_CHAR* aValues_002_304_005_000_000[] = {
      I_("Entité comptable"),
      I_("Raison de l'antidatage"),
      I_("Code bon/mauvais"),
      I_("Frais"),
      I_("Commission"),
      I_("Partage de comm."),
      I_("Compte de transfert"),
      I_("Fonds de transfert"),
      I_("Classe de transfert"),
      I_("Numéro de fonds de transfert"),
      I_("Code de rachat"),
      I_("Code de dépôt"),
      I_("Montant brut réglé"),
      I_("Montant net réglé"),
      I_("Répartition"),
      I_("Autre nom du représentant des ventes"),
      I_("Source de l'ordre"),
      I_("Source du règlement"),
      I_("Type de règlement"),
      I_("Prix unitaire"),
      I_("Parts admissibles"),
      I_("Date de dépôt"),
      I_("Date de paiement"),
      I_("Montant retenu"),
      I_("Taux de retenue"),
      I_("Brut/net"),
      I_("Signal d'arrondissement"),
      I_("Province des ventes"),
      I_("Rachat partiel/total"),
      I_("Code de renversement"),
      I_("Initial"),
      I_("Date d'opération"),
      I_("Heure d'opération"),
      I_("Devise de règlement"),
      I_("Taux de change"),
      I_("Société de personnes"),
      I_("Indicateur"),
      I_("No de séquence de la transaction"),
      I_("Modification des FAR"),
      I_("Modification du montant"),
      I_("Confirmation émise"),
      I_("Confirmation requise"),
      I_("Reçu émis"),
      I_("Indiquer sur le relevé"),
      I_("Certificat requis"),
      I_("Type de paiement"),
      I_("Réglé par"),
      I_("Affiché non réglé"),
      I_("Règlement brut/net prévu"),
      I_("Code de suppression de chèque"),
      I_("Code de groupe"),
      I_("Compte source"),
      I_("Description de la source des fonds"),
      I_("Lot de l'ordre"),
      I_("Trace de l'ordre"),
      I_("Utilisateur"),
      I_("Lot de l'annulation"),
      I_("Trace de l'annulation"),
      I_("Utilisateur de l'annulation"),
      I_("Lot du règlement"),
      I_("Trace du règlement"),
      I_("Utilisateur du règlement"),
      I_("Vérifié par"),
      I_("Annulé"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_304_005_000_000;
   const BFSubstitutionSet SubSet_002_304_005_000_000(
    &aKeys_002_304_005_000_000[0], &aValues_002_304_005_000_000[0] );
   // Substitution set LV_MatchTransferAttrLeftSet.  Language: enIE
   static const I_CHAR* aKeys_002_304_006_000_000[] = {
      I_("Accountable"),
      I_("BackDatedReason"),
      I_("GBCD"),
      I_("FeePercent"),
      I_("Commission"),
      I_("SplitComm"),
      I_("TfrAcct"),
      I_("TfrFund"),
      I_("TfrClass"),
      I_("Baycom"),
      I_("RedCode"),
      I_("DepositType"),
      I_("SetGrossAmt"),
      I_("SetNetAmt"),
      I_("Allocation"),
      I_("SlsrepAltName"),
      I_("OrderSource"),
      I_("SettleSource"),
      I_("SettleType"),
      I_("UnitPrice"),
      I_("SharesElig"),
      I_("DepositDate"),
      I_("CashDate"),
      I_("HoldBackAmt"),
      I_("HoldBackRate"),
      I_("GrossOrNet"),
      I_("RoundFlag"),
      I_("ProvSales"),
      I_("PartFull"),
      I_("RvCode"),
      I_("Initial"),
      I_("DealDate"),
      I_("DealTime"),
      I_("SettleCurrency"),
      I_("ExchRate"),
      I_("PartnerShip"),
      I_("Indc"),
      I_("SeqNum"),
      I_("OverrideDSCDesc"),
      I_("OverrideAmt"),
      I_("ConfIssued"),
      I_("ConfirmReq"),
      I_("RecptIssued"),
      I_("OnStmt"),
      I_("CertRequired"),
      I_("PayType"),
      I_("SettledBy"),
      I_("PostUnsettled"),
      I_("ExpSetlGN"),
      I_("ChqSupCode"),
      I_("GroupCode"),
      I_("SrcOfAccount"),
      I_("SrcOfFund"),
      I_("OrderBatch"),
      I_("OrderTrace"),
      I_("OrderUser"),
      I_("CancelBatch"),
      I_("CancelTrace"),
      I_("CancelUser"),
      I_("SettleBatch"),
      I_("SettleTrace"),
      I_("SettleUser"),
      I_("VerifiedBy"),
      I_("Cancelled"),
      0x00
   };

   static const I_CHAR* aValues_002_304_006_000_000[] = {
      I_("Accountable Entity"),
      I_("Back Dated Reason"),
      I_("GBCD"),
      I_("Fee"),
      I_("Commission"),
      I_("Split Commission"),
      I_("Transfer Account"),
      I_("Transfer Fund"),
      I_("Transfer Class"),
      I_("Transfer Fund Number"),
      I_("Redemption Code"),
      I_("Deposit Type"),
      I_("Settled Gross Amount"),
      I_("Settled Net Amount"),
      I_("Allocation"),
      I_("Sales Rep Alt Name"),
      I_("Order Source"),
      I_("Settlement Source"),
      I_("Settlement Type"),
      I_("Unit Price"),
      I_("Shares Eligible"),
      I_("Deposit Date"),
      I_("Cash Date"),
      I_("Hold Back Amount"),
      I_("Hold Back Rate"),
      I_("Gross / Net"),
      I_("Round Flag"),
      I_("Province of Sales"),
      I_("Partial / Full Redemption"),
      I_("Reversal Code"),
      I_("Initial"),
      I_("Deal Date"),
      I_("Deal Time"),
      I_("Settled Currency"),
      I_("Exchange Rate"),
      I_("Partnership"),
      I_("INDC"),
      I_("Transaction Sequence Nbr"),
      I_("Override DSC"),
      I_("Override Amount"),
      I_("Confirm Issued"),
      I_("Confirm Required"),
      I_("Receipt Issued"),
      I_("Show on Statement"),
      I_("Certificate Required"),
      I_("Pay Type"),
      I_("Settled By"),
      I_("Posted Unsettled"),
      I_("Expected to Settle Gross / Net"),
      I_("Cheque Suppress Code"),
      I_("Group Code"),
      I_("Source of Account"),
      I_("Source of Fund Description"),
      I_("Order Batch"),
      I_("Order Trace"),
      I_("Order User"),
      I_("Cancel Batch"),
      I_("Cancel Trace"),
      I_("Cancel User"),
      I_("Settle Batch"),
      I_("Settle Trace"),
      I_("Settle User"),
      I_("Verifie dBy"),
      I_("Cancelled"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_304_006_000_000;
   const BFSubstitutionSet SubSet_002_304_006_000_000(
    &aKeys_002_304_006_000_000[0], &aValues_002_304_006_000_000[0] );
   // Substitution set LV_MatchTransferAttrLeftSet.  Language: deDE
   static const I_CHAR* aKeys_002_304_007_000_000[] = {
      I_("Accountable"),
      I_("BackDatedReason"),
      I_("GBCD"),
      I_("FeePercent"),
      I_("Commission"),
      I_("SplitComm"),
      I_("TfrAcct"),
      I_("TfrFund"),
      I_("TfrClass"),
      I_("Baycom"),
      I_("RedCode"),
      I_("DepositType"),
      I_("SetGrossAmt"),
      I_("SetNetAmt"),
      I_("Allocation"),
      I_("SlsrepAltName"),
      I_("OrderSource"),
      I_("SettleSource"),
      I_("SettleType"),
      I_("UnitPrice"),
      I_("SharesElig"),
      I_("DepositDate"),
      I_("CashDate"),
      I_("HoldBackAmt"),
      I_("HoldBackRate"),
      I_("GrossOrNet"),
      I_("RoundFlag"),
      I_("ProvSales"),
      I_("PartFull"),
      I_("RvCode"),
      I_("Initial"),
      I_("DealDate"),
      I_("DealTime"),
      I_("SettleCurrency"),
      I_("ExchRate"),
      I_("PartnerShip"),
      I_("Indc"),
      I_("SeqNum"),
      I_("OverrideDSCDesc"),
      I_("OverrideAmt"),
      I_("ConfIssued"),
      I_("ConfirmReq"),
      I_("RecptIssued"),
      I_("OnStmt"),
      I_("CertRequired"),
      I_("PayType"),
      I_("SettledBy"),
      I_("PostUnsettled"),
      I_("ExpSetlGN"),
      I_("ChqSupCode"),
      I_("GroupCode"),
      I_("SrcOfAccount"),
      I_("SrcOfFund"),
      I_("OrderBatch"),
      I_("OrderTrace"),
      I_("OrderUser"),
      I_("CancelBatch"),
      I_("CancelTrace"),
      I_("CancelUser"),
      I_("SettleBatch"),
      I_("SettleTrace"),
      I_("SettleUser"),
      I_("VerifiedBy"),
      I_("Cancelled"),
      0x00
   };

   static const I_CHAR* aValues_002_304_007_000_000[] = {
      I_("Accountable Entity"),
      I_("Back Dated Reason"),
      I_("GBCD"),
      I_("Fee"),
      I_("Commission"),
      I_("Split Commission"),
      I_("Transfer Account"),
      I_("Transfer Fund"),
      I_("Transfer Class"),
      I_("Transfer Fund Number"),
      I_("Redemption Code"),
      I_("Deposit Type"),
      I_("Settled Gross Amount"),
      I_("Settled Net Amount"),
      I_("Allocation"),
      I_("Sales Rep Alt Name"),
      I_("Order Source"),
      I_("Settlement Source"),
      I_("Settlement Type"),
      I_("Unit Price"),
      I_("Shares Eligible"),
      I_("Deposit Date"),
      I_("Cash Date"),
      I_("Hold Back Amount"),
      I_("Hold Back Rate"),
      I_("Gross / Net"),
      I_("Round Flag"),
      I_("Province of Sales"),
      I_("Partial / Full Redemption"),
      I_("Reversal Code"),
      I_("Initial"),
      I_("Deal Date"),
      I_("Deal Time"),
      I_("Settled Currency"),
      I_("Exchange Rate"),
      I_("Partnership"),
      I_("INDC"),
      I_("Transaction Sequence Nbr"),
      I_("Override DSC"),
      I_("Override Amount"),
      I_("Confirm Issued"),
      I_("Confirm Required"),
      I_("Receipt Issued"),
      I_("Show on Statement"),
      I_("Certificate Required"),
      I_("Pay Type"),
      I_("Settled By"),
      I_("Posted Unsettled"),
      I_("Expected to Settle Gross / Net"),
      I_("Cheque Suppress Code"),
      I_("Group Code"),
      I_("Source of Account"),
      I_("Source of Fund Description"),
      I_("Order Batch"),
      I_("Order Trace"),
      I_("Order User"),
      I_("Cancel Batch"),
      I_("Cancel Trace"),
      I_("Cancel User"),
      I_("Settle Batch"),
      I_("Settle Trace"),
      I_("Settle User"),
      I_("Verifie dBy"),
      I_("Cancelled"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_304_007_000_000;
   const BFSubstitutionSet SubSet_002_304_007_000_000(
    &aKeys_002_304_007_000_000[0], &aValues_002_304_007_000_000[0] );
   // Substitution set LV_MatchTransferAttrLeftSet.  Language: esEs
   static const I_CHAR* aKeys_002_304_008_000_000[] = {
      I_("Accountable"),
      I_("BackDatedReason"),
      I_("GBCD"),
      I_("FeePercent"),
      I_("Commission"),
      I_("SplitComm"),
      I_("TfrAcct"),
      I_("TfrFund"),
      I_("TfrClass"),
      I_("Baycom"),
      I_("RedCode"),
      I_("DepositType"),
      I_("SetGrossAmt"),
      I_("SetNetAmt"),
      I_("Allocation"),
      I_("SlsrepAltName"),
      I_("OrderSource"),
      I_("SettleSource"),
      I_("SettleType"),
      I_("UnitPrice"),
      I_("SharesElig"),
      I_("DepositDate"),
      I_("CashDate"),
      I_("HoldBackAmt"),
      I_("HoldBackRate"),
      I_("GrossOrNet"),
      I_("RoundFlag"),
      I_("ProvSales"),
      I_("PartFull"),
      I_("RvCode"),
      I_("Initial"),
      I_("DealDate"),
      I_("DealTime"),
      I_("SettleCurrency"),
      I_("ExchRate"),
      I_("PartnerShip"),
      I_("Indc"),
      I_("SeqNum"),
      I_("OverrideDSCDesc"),
      I_("OverrideAmt"),
      I_("ConfIssued"),
      I_("ConfirmReq"),
      I_("RecptIssued"),
      I_("OnStmt"),
      I_("CertRequired"),
      I_("PayType"),
      I_("SettledBy"),
      I_("PostUnsettled"),
      I_("ExpSetlGN"),
      I_("ChqSupCode"),
      I_("GroupCode"),
      I_("SrcOfAccount"),
      I_("SrcOfFund"),
      I_("OrderBatch"),
      I_("OrderTrace"),
      I_("OrderUser"),
      I_("CancelBatch"),
      I_("CancelTrace"),
      I_("CancelUser"),
      I_("SettleBatch"),
      I_("SettleTrace"),
      I_("SettleUser"),
      I_("VerifiedBy"),
      I_("Cancelled"),
      0x00
   };

   static const I_CHAR* aValues_002_304_008_000_000[] = {
      I_("Accountable Entity"),
      I_("Back Dated Reason"),
      I_("GBCD"),
      I_("Fee"),
      I_("Commission"),
      I_("Split Commission"),
      I_("Transfer Account"),
      I_("Transfer Fund"),
      I_("Transfer Class"),
      I_("Transfer Fund Number"),
      I_("Redemption Code"),
      I_("Deposit Type"),
      I_("Settled Gross Amount"),
      I_("Settled Net Amount"),
      I_("Allocation"),
      I_("Sales Rep Alt Name"),
      I_("Order Source"),
      I_("Settlement Source"),
      I_("Settlement Type"),
      I_("Unit Price"),
      I_("Shares Eligible"),
      I_("Deposit Date"),
      I_("Cash Date"),
      I_("Hold Back Amount"),
      I_("Hold Back Rate"),
      I_("Gross / Net"),
      I_("Round Flag"),
      I_("Province of Sales"),
      I_("Partial / Full Redemption"),
      I_("Reversal Code"),
      I_("Initial"),
      I_("Deal Date"),
      I_("Deal Time"),
      I_("Settled Currency"),
      I_("Exchange Rate"),
      I_("Partnership"),
      I_("INDC"),
      I_("Transaction Sequence Nbr"),
      I_("Override DSC"),
      I_("Override Amount"),
      I_("Confirm Issued"),
      I_("Confirm Required"),
      I_("Receipt Issued"),
      I_("Show on Statement"),
      I_("Certificate Required"),
      I_("Pay Type"),
      I_("Settled By"),
      I_("Posted Unsettled"),
      I_("Expected to Settle Gross / Net"),
      I_("Cheque Suppress Code"),
      I_("Group Code"),
      I_("Source of Account"),
      I_("Source of Fund Description"),
      I_("Order Batch"),
      I_("Order Trace"),
      I_("Order User"),
      I_("Cancel Batch"),
      I_("Cancel Trace"),
      I_("Cancel User"),
      I_("Settle Batch"),
      I_("Settle Trace"),
      I_("Settle User"),
      I_("Verifie dBy"),
      I_("Cancelled"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_304_008_000_000;
   const BFSubstitutionSet SubSet_002_304_008_000_000(
    &aKeys_002_304_008_000_000[0], &aValues_002_304_008_000_000[0] );
   // Substitution set LV_MatchTransferAttrLeftSet.  Language: nlNL
   static const I_CHAR* aKeys_002_304_010_000_000[] = {
      I_("Accountable"),
      I_("BackDatedReason"),
      I_("GBCD"),
      I_("FeePercent"),
      I_("Commission"),
      I_("SplitComm"),
      I_("TfrAcct"),
      I_("TfrFund"),
      I_("TfrClass"),
      I_("Baycom"),
      I_("RedCode"),
      I_("DepositType"),
      I_("SetGrossAmt"),
      I_("SetNetAmt"),
      I_("Allocation"),
      I_("SlsrepAltName"),
      I_("OrderSource"),
      I_("SettleSource"),
      I_("SettleType"),
      I_("UnitPrice"),
      I_("SharesElig"),
      I_("DepositDate"),
      I_("CashDate"),
      I_("HoldBackAmt"),
      I_("HoldBackRate"),
      I_("GrossOrNet"),
      I_("RoundFlag"),
      I_("ProvSales"),
      I_("PartFull"),
      I_("RvCode"),
      I_("Initial"),
      I_("DealDate"),
      I_("DealTime"),
      I_("SettleCurrency"),
      I_("ExchRate"),
      I_("PartnerShip"),
      I_("Indc"),
      I_("SeqNum"),
      I_("OverrideDSCDesc"),
      I_("OverrideAmt"),
      I_("ConfIssued"),
      I_("ConfirmReq"),
      I_("RecptIssued"),
      I_("OnStmt"),
      I_("CertRequired"),
      I_("PayType"),
      I_("SettledBy"),
      I_("PostUnsettled"),
      I_("ExpSetlGN"),
      I_("ChqSupCode"),
      I_("GroupCode"),
      I_("SrcOfAccount"),
      I_("SrcOfFund"),
      I_("OrderBatch"),
      I_("OrderTrace"),
      I_("OrderUser"),
      I_("CancelBatch"),
      I_("CancelTrace"),
      I_("CancelUser"),
      I_("SettleBatch"),
      I_("SettleTrace"),
      I_("SettleUser"),
      I_("VerifiedBy"),
      I_("Cancelled"),
      0x00
   };

   static const I_CHAR* aValues_002_304_010_000_000[] = {
      I_("Accountable Entity"),
      I_("Back Dated Reason"),
      I_("GBCD"),
      I_("KOSTEN"),
      I_("Commissie"),
      I_("Split Commission"),
      I_("Transfer Account"),
      I_("Transfer Fund"),
      I_("Transfer Class"),
      I_("Transfer Fund Number"),
      I_("Redemption Code"),
      I_("Deposit Type"),
      I_("Settled Gross Amount"),
      I_("Settled Net Amount"),
      I_("Allocation"),
      I_("Sales Rep Alt Name"),
      I_("Order Source"),
      I_("Settlement Source"),
      I_("Settlement Type"),
      I_("Unit Price"),
      I_("Shares Eligible"),
      I_("Deposit Date"),
      I_("Cash Date"),
      I_("Hold Back Amount"),
      I_("Hold Back Rate"),
      I_("Gross / Net"),
      I_("Round Flag"),
      I_("Province of Sales"),
      I_("Partial / Full Redemption"),
      I_("Reversal Code"),
      I_("Initial"),
      I_("Deal Date"),
      I_("Deal Time"),
      I_("Settled Currency"),
      I_("Exchange Rate"),
      I_("Partnership"),
      I_("INDC"),
      I_("Transaction Sequence Nbr"),
      I_("Override DSC"),
      I_("Override Amount"),
      I_("Confirm Issued"),
      I_("Confirm Required"),
      I_("Receipt Issued"),
      I_("Show on Statement"),
      I_("Certificate Required"),
      I_("Pay Type"),
      I_("Settled By"),
      I_("Posted Unsettled"),
      I_("Expected to Settle Gross / Net"),
      I_("Cheque Suppress Code"),
      I_("Group Code"),
      I_("Source of Account"),
      I_("Source of Fund Description"),
      I_("Order Batch"),
      I_("Order Trace"),
      I_("Order User"),
      I_("Cancel Batch"),
      I_("Cancel Trace"),
      I_("Cancel User"),
      I_("Settle Batch"),
      I_("Settle Trace"),
      I_("Settle User"),
      I_("Verifie dBy"),
      I_("Geannuleerd"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_304_010_000_000;
   const BFSubstitutionSet SubSet_002_304_010_000_000(
    &aKeys_002_304_010_000_000[0], &aValues_002_304_010_000_000[0] );
   // Substitution set ASStatusSet.  Language: enUS
   static const I_CHAR* aKeys_002_305_001_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_305_001_000_000[] = {
      I_("Early maturity"),
      I_("Incapacitated"),
      I_("Unemployed"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_305_001_000_000;
   const BFSubstitutionSet SubSet_002_305_001_000_000(
    &aKeys_002_305_001_000_000[0], &aValues_002_305_001_000_000[0] );
   // Substitution set ASStatusSet.  Language: enCA
   static const I_CHAR* aKeys_002_305_003_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_305_003_000_000[] = {
      I_("Early maturity"),
      I_("Incapacitated"),
      I_("Unemployed"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_305_003_000_000;
   const BFSubstitutionSet SubSet_002_305_003_000_000(
    &aKeys_002_305_003_000_000[0], &aValues_002_305_003_000_000[0] );
   // Substitution set ASStatusSet.  Language: frCA
   static const I_CHAR* aKeys_002_305_005_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_305_005_000_000[] = {
      I_("Échéance anticipée"),
      I_("Frappé d'incapacité"),
      I_("Sans emploi"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_305_005_000_000;
   const BFSubstitutionSet SubSet_002_305_005_000_000(
    &aKeys_002_305_005_000_000[0], &aValues_002_305_005_000_000[0] );
   // Substitution set ASStatusSet.  Language: enIE
   static const I_CHAR* aKeys_002_305_006_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_305_006_000_000[] = {
      I_("Early maturity"),
      I_("Incapacitated"),
      I_("Unemployed"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_305_006_000_000;
   const BFSubstitutionSet SubSet_002_305_006_000_000(
    &aKeys_002_305_006_000_000[0], &aValues_002_305_006_000_000[0] );
   // Substitution set ASStatusSet.  Language: deDE
   static const I_CHAR* aKeys_002_305_007_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_305_007_000_000[] = {
      I_("Early maturity"),
      I_("Incapacitated"),
      I_("Unemployed"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_305_007_000_000;
   const BFSubstitutionSet SubSet_002_305_007_000_000(
    &aKeys_002_305_007_000_000[0], &aValues_002_305_007_000_000[0] );
   // Substitution set ASStatusSet.  Language: esEs
   static const I_CHAR* aKeys_002_305_008_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_305_008_000_000[] = {
      I_("Early maturity"),
      I_("Incapacitated"),
      I_("Unemployed"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_305_008_000_000;
   const BFSubstitutionSet SubSet_002_305_008_000_000(
    &aKeys_002_305_008_000_000[0], &aValues_002_305_008_000_000[0] );
   // Substitution set ASStatusSet.  Language: nlNL
   static const I_CHAR* aKeys_002_305_010_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_305_010_000_000[] = {
      I_("Early maturity"),
      I_("Incapacitated"),
      I_("Unemployed"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_305_010_000_000;
   const BFSubstitutionSet SubSet_002_305_010_000_000(
    &aKeys_002_305_010_000_000[0], &aValues_002_305_010_000_000[0] );
   // Substitution set LV_AcctSplitCommDateHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_306_001_000_000[] = {
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_306_001_000_000[] = {
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_306_001_000_000;
   const BFSubstitutionSet SubSet_002_306_001_000_000(
    &aKeys_002_306_001_000_000[0], &aValues_002_306_001_000_000[0] );
   // Substitution set LV_AcctSplitCommDateHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_306_003_000_000[] = {
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_306_003_000_000[] = {
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_306_003_000_000;
   const BFSubstitutionSet SubSet_002_306_003_000_000(
    &aKeys_002_306_003_000_000[0], &aValues_002_306_003_000_000[0] );
   // Substitution set LV_AcctSplitCommDateHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_306_005_000_000[] = {
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_306_005_000_000[] = {
      I_("Date d'entrée en vigueur"),
      I_("Date d'arrêt"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_306_005_000_000;
   const BFSubstitutionSet SubSet_002_306_005_000_000(
    &aKeys_002_306_005_000_000[0], &aValues_002_306_005_000_000[0] );
   // Substitution set LV_AcctSplitCommDateHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_306_006_000_000[] = {
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_306_006_000_000[] = {
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_306_006_000_000;
   const BFSubstitutionSet SubSet_002_306_006_000_000(
    &aKeys_002_306_006_000_000[0], &aValues_002_306_006_000_000[0] );
   // Substitution set LV_AcctSplitCommDateHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_306_007_000_000[] = {
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_306_007_000_000[] = {
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_306_007_000_000;
   const BFSubstitutionSet SubSet_002_306_007_000_000(
    &aKeys_002_306_007_000_000[0], &aValues_002_306_007_000_000[0] );
   // Substitution set LV_AcctSplitCommDateHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_306_008_000_000[] = {
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_306_008_000_000[] = {
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_306_008_000_000;
   const BFSubstitutionSet SubSet_002_306_008_000_000(
    &aKeys_002_306_008_000_000[0], &aValues_002_306_008_000_000[0] );
   // Substitution set LV_AcctSplitCommDateHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_306_010_000_000[] = {
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_306_010_000_000[] = {
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_306_010_000_000;
   const BFSubstitutionSet SubSet_002_306_010_000_000(
    &aKeys_002_306_010_000_000[0], &aValues_002_306_010_000_000[0] );
   // Substitution set LV_AcctSplitCommRepHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_307_001_000_000[] = {
      I_("CommLevel"),
      I_("CommEntType"),
      I_("EntityName"),
      I_("CommPrcnt"),
      0x00
   };

   static const I_CHAR* aValues_002_307_001_000_000[] = {
      I_("Type"),
      I_("Description"),
      I_("Name"),
      I_("Percent"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_307_001_000_000;
   const BFSubstitutionSet SubSet_002_307_001_000_000(
    &aKeys_002_307_001_000_000[0], &aValues_002_307_001_000_000[0] );
   // Substitution set LV_AcctSplitCommRepHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_307_003_000_000[] = {
      I_("CommLevel"),
      I_("CommEntType"),
      I_("EntityName"),
      I_("CommPrcnt"),
      0x00
   };

   static const I_CHAR* aValues_002_307_003_000_000[] = {
      I_("Type"),
      I_("Description"),
      I_("Name"),
      I_("Percent"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_307_003_000_000;
   const BFSubstitutionSet SubSet_002_307_003_000_000(
    &aKeys_002_307_003_000_000[0], &aValues_002_307_003_000_000[0] );
   // Substitution set LV_AcctSplitCommRepHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_307_005_000_000[] = {
      I_("CommLevel"),
      I_("CommEntType"),
      I_("EntityName"),
      I_("CommPrcnt"),
      0x00
   };

   static const I_CHAR* aValues_002_307_005_000_000[] = {
      I_("Type"),
      I_("Description"),
      I_("Nom"),
      I_("Pourcentage"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_307_005_000_000;
   const BFSubstitutionSet SubSet_002_307_005_000_000(
    &aKeys_002_307_005_000_000[0], &aValues_002_307_005_000_000[0] );
   // Substitution set LV_AcctSplitCommRepHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_307_006_000_000[] = {
      I_("CommLevel"),
      I_("CommEntType"),
      I_("EntityName"),
      I_("CommPrcnt"),
      0x00
   };

   static const I_CHAR* aValues_002_307_006_000_000[] = {
      I_("Type"),
      I_("Description"),
      I_("Name"),
      I_("Percent"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_307_006_000_000;
   const BFSubstitutionSet SubSet_002_307_006_000_000(
    &aKeys_002_307_006_000_000[0], &aValues_002_307_006_000_000[0] );
   // Substitution set LV_AcctSplitCommRepHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_307_007_000_000[] = {
      I_("CommLevel"),
      I_("CommEntType"),
      I_("EntityName"),
      I_("CommPrcnt"),
      0x00
   };

   static const I_CHAR* aValues_002_307_007_000_000[] = {
      I_("Type"),
      I_("Description"),
      I_("Name"),
      I_("Percent"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_307_007_000_000;
   const BFSubstitutionSet SubSet_002_307_007_000_000(
    &aKeys_002_307_007_000_000[0], &aValues_002_307_007_000_000[0] );
   // Substitution set LV_AcctSplitCommRepHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_307_008_000_000[] = {
      I_("CommLevel"),
      I_("CommEntType"),
      I_("EntityName"),
      I_("CommPrcnt"),
      0x00
   };

   static const I_CHAR* aValues_002_307_008_000_000[] = {
      I_("Type"),
      I_("Description"),
      I_("Name"),
      I_("Percent"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_307_008_000_000;
   const BFSubstitutionSet SubSet_002_307_008_000_000(
    &aKeys_002_307_008_000_000[0], &aValues_002_307_008_000_000[0] );
   // Substitution set LV_AcctSplitCommRepHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_307_010_000_000[] = {
      I_("CommLevel"),
      I_("CommEntType"),
      I_("EntityName"),
      I_("CommPrcnt"),
      0x00
   };

   static const I_CHAR* aValues_002_307_010_000_000[] = {
      I_("Type"),
      I_("Description"),
      I_("Name"),
      I_("Procent"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_307_010_000_000;
   const BFSubstitutionSet SubSet_002_307_010_000_000(
    &aKeys_002_307_010_000_000[0], &aValues_002_307_010_000_000[0] );
   // Substitution set ESoPStatusSet.  Language: enUS
   static const I_CHAR* aKeys_002_308_001_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("9"),
      0x00
   };

   static const I_CHAR* aValues_002_308_001_000_000[] = {
      I_("Activ"),
      I_("Inactive"),
      I_("Un"),
      I_("Not ESOP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_308_001_000_000;
   const BFSubstitutionSet SubSet_002_308_001_000_000(
    &aKeys_002_308_001_000_000[0], &aValues_002_308_001_000_000[0] );
   // Substitution set ESoPStatusSet.  Language: enCA
   static const I_CHAR* aKeys_002_308_003_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("9"),
      0x00
   };

   static const I_CHAR* aValues_002_308_003_000_000[] = {
      I_("Activ"),
      I_("Inactive"),
      I_("Un"),
      I_("Not ESOP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_308_003_000_000;
   const BFSubstitutionSet SubSet_002_308_003_000_000(
    &aKeys_002_308_003_000_000[0], &aValues_002_308_003_000_000[0] );
   // Substitution set ESoPStatusSet.  Language: frCA
   static const I_CHAR* aKeys_002_308_005_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("9"),
      0x00
   };

   static const I_CHAR* aValues_002_308_005_000_000[] = {
      I_("Actif"),
      I_("Inactif"),
      I_("Inconnu"),
      I_("Pas RADE"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_308_005_000_000;
   const BFSubstitutionSet SubSet_002_308_005_000_000(
    &aKeys_002_308_005_000_000[0], &aValues_002_308_005_000_000[0] );
   // Substitution set ESoPStatusSet.  Language: enIE
   static const I_CHAR* aKeys_002_308_006_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("9"),
      0x00
   };

   static const I_CHAR* aValues_002_308_006_000_000[] = {
      I_("Activ"),
      I_("Inactive"),
      I_("Un"),
      I_("Not ESOP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_308_006_000_000;
   const BFSubstitutionSet SubSet_002_308_006_000_000(
    &aKeys_002_308_006_000_000[0], &aValues_002_308_006_000_000[0] );
   // Substitution set ESoPStatusSet.  Language: deDE
   static const I_CHAR* aKeys_002_308_007_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("9"),
      0x00
   };

   static const I_CHAR* aValues_002_308_007_000_000[] = {
      I_("Activ"),
      I_("Inactive"),
      I_("Un"),
      I_("Not ESOP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_308_007_000_000;
   const BFSubstitutionSet SubSet_002_308_007_000_000(
    &aKeys_002_308_007_000_000[0], &aValues_002_308_007_000_000[0] );
   // Substitution set ESoPStatusSet.  Language: esEs
   static const I_CHAR* aKeys_002_308_008_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("9"),
      0x00
   };

   static const I_CHAR* aValues_002_308_008_000_000[] = {
      I_("Activ"),
      I_("Inactive"),
      I_("Un"),
      I_("Not ESOP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_308_008_000_000;
   const BFSubstitutionSet SubSet_002_308_008_000_000(
    &aKeys_002_308_008_000_000[0], &aValues_002_308_008_000_000[0] );
   // Substitution set ESoPStatusSet.  Language: nlNL
   static const I_CHAR* aKeys_002_308_010_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("9"),
      0x00
   };

   static const I_CHAR* aValues_002_308_010_000_000[] = {
      I_("Activ"),
      I_("Inactive"),
      I_("Un"),
      I_("Not ESOP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_308_010_000_000;
   const BFSubstitutionSet SubSet_002_308_010_000_000(
    &aKeys_002_308_010_000_000[0], &aValues_002_308_010_000_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enUS
   static const I_CHAR* aKeys_002_309_001_000_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      I_("V-E"),
      0x00
   };

   static const I_CHAR* aValues_002_309_001_000_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      I_("Saving Plan EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_001_000_000;
   const BFSubstitutionSet SubSet_002_309_001_000_000(
    &aKeys_002_309_001_000_000[0], &aValues_002_309_001_000_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enUS, Market: 2
   static const I_CHAR* aKeys_002_309_001_002_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_001_002_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_001_002_000;
   const BFSubstitutionSet SubSet_002_309_001_002_000(
    &aKeys_002_309_001_002_000[0], &aValues_002_309_001_002_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_309_001_003_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_001_003_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_001_003_000;
   const BFSubstitutionSet SubSet_002_309_001_003_000(
    &aKeys_002_309_001_003_000[0], &aValues_002_309_001_003_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_309_001_004_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      I_("V-E"),
      0x00
   };

   static const I_CHAR* aValues_002_309_001_004_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      I_("Saving Plan EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_001_004_000;
   const BFSubstitutionSet SubSet_002_309_001_004_000(
    &aKeys_002_309_001_004_000[0], &aValues_002_309_001_004_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enCA
   static const I_CHAR* aKeys_002_309_003_000_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      I_("V-E"),
      0x00
   };

   static const I_CHAR* aValues_002_309_003_000_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      I_("Saving Plan EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_003_000_000;
   const BFSubstitutionSet SubSet_002_309_003_000_000(
    &aKeys_002_309_003_000_000[0], &aValues_002_309_003_000_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enCA, Market: 2
   static const I_CHAR* aKeys_002_309_003_002_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_003_002_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_003_002_000;
   const BFSubstitutionSet SubSet_002_309_003_002_000(
    &aKeys_002_309_003_002_000[0], &aValues_002_309_003_002_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_309_003_003_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_003_003_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_003_003_000;
   const BFSubstitutionSet SubSet_002_309_003_003_000(
    &aKeys_002_309_003_003_000[0], &aValues_002_309_003_003_000[0] );
   // Substitution set SystematicPayPACSet.  Language: frFR, Market: 2
   static const I_CHAR* aKeys_002_309_004_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_309_004_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_004_002_000;
   const BFSubstitutionSet SubSet_002_309_004_002_000(
    &aKeys_002_309_004_002_000[0], &aValues_002_309_004_002_000[0] );
   // Substitution set SystematicPayPACSet.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_309_004_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_309_004_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_004_003_000;
   const BFSubstitutionSet SubSet_002_309_004_003_000(
    &aKeys_002_309_004_003_000[0], &aValues_002_309_004_003_000[0] );
   // Substitution set SystematicPayPACSet.  Language: frCA
   static const I_CHAR* aKeys_002_309_005_000_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      I_("V-E"),
      0x00
   };

   static const I_CHAR* aValues_002_309_005_000_000[] = {
      I_("PAC TEF"),
      I_("Ordre électronique PAC"),
      I_("PAC comptant"),
      I_("Système PAC"),
      I_("PAC manuel"),
      I_("Suppression PAC"),
      I_("Transfert automatique"),
      I_("Régime d'épargne TEF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_005_000_000;
   const BFSubstitutionSet SubSet_002_309_005_000_000(
    &aKeys_002_309_005_000_000[0], &aValues_002_309_005_000_000[0] );
   // Substitution set SystematicPayPACSet.  Language: frCA, Market: 2
   static const I_CHAR* aKeys_002_309_005_002_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_005_002_000[] = {
      I_("PAC TEF"),
      I_("Ordre électronique PAC"),
      I_("PAC comptant"),
      I_("Système PAC"),
      I_("PAC manuel"),
      I_("Suppression PAC"),
      I_("Transfert automatique"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_005_002_000;
   const BFSubstitutionSet SubSet_002_309_005_002_000(
    &aKeys_002_309_005_002_000[0], &aValues_002_309_005_002_000[0] );
   // Substitution set SystematicPayPACSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_309_005_003_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_005_003_000[] = {
      I_("PAC TEF"),
      I_("Ordre électronique PAC"),
      I_("PAC comptant"),
      I_("Système PAC"),
      I_("PAC manuel"),
      I_("Suppression PAC"),
      I_("Transfert automatique"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_005_003_000;
   const BFSubstitutionSet SubSet_002_309_005_003_000(
    &aKeys_002_309_005_003_000[0], &aValues_002_309_005_003_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enIE
   static const I_CHAR* aKeys_002_309_006_000_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      I_("V-E"),
      0x00
   };

   static const I_CHAR* aValues_002_309_006_000_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      I_("Saving Plan EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_006_000_000;
   const BFSubstitutionSet SubSet_002_309_006_000_000(
    &aKeys_002_309_006_000_000[0], &aValues_002_309_006_000_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enIE, Market: 2
   static const I_CHAR* aKeys_002_309_006_002_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_006_002_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_006_002_000;
   const BFSubstitutionSet SubSet_002_309_006_002_000(
    &aKeys_002_309_006_002_000[0], &aValues_002_309_006_002_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_309_006_003_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_006_003_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_006_003_000;
   const BFSubstitutionSet SubSet_002_309_006_003_000(
    &aKeys_002_309_006_003_000[0], &aValues_002_309_006_003_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enIE, Market: 4
   static const I_CHAR* aKeys_002_309_006_004_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      I_("V-E"),
      0x00
   };

   static const I_CHAR* aValues_002_309_006_004_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      I_("Saving Plan EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_006_004_000;
   const BFSubstitutionSet SubSet_002_309_006_004_000(
    &aKeys_002_309_006_004_000[0], &aValues_002_309_006_004_000[0] );
   // Substitution set SystematicPayPACSet.  Language: deDE
   static const I_CHAR* aKeys_002_309_007_000_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      I_("V-E"),
      0x00
   };

   static const I_CHAR* aValues_002_309_007_000_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      I_("Saving Plan EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_007_000_000;
   const BFSubstitutionSet SubSet_002_309_007_000_000(
    &aKeys_002_309_007_000_000[0], &aValues_002_309_007_000_000[0] );
   // Substitution set SystematicPayPACSet.  Language: deDE, Market: 2
   static const I_CHAR* aKeys_002_309_007_002_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_007_002_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_007_002_000;
   const BFSubstitutionSet SubSet_002_309_007_002_000(
    &aKeys_002_309_007_002_000[0], &aValues_002_309_007_002_000[0] );
   // Substitution set SystematicPayPACSet.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_309_007_003_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_007_003_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_007_003_000;
   const BFSubstitutionSet SubSet_002_309_007_003_000(
    &aKeys_002_309_007_003_000[0], &aValues_002_309_007_003_000[0] );
   // Substitution set SystematicPayPACSet.  Language: esEs
   static const I_CHAR* aKeys_002_309_008_000_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      I_("V-E"),
      0x00
   };

   static const I_CHAR* aValues_002_309_008_000_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      I_("Saving Plan EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_008_000_000;
   const BFSubstitutionSet SubSet_002_309_008_000_000(
    &aKeys_002_309_008_000_000[0], &aValues_002_309_008_000_000[0] );
   // Substitution set SystematicPayPACSet.  Language: esEs, Market: 2
   static const I_CHAR* aKeys_002_309_008_002_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_008_002_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_008_002_000;
   const BFSubstitutionSet SubSet_002_309_008_002_000(
    &aKeys_002_309_008_002_000[0], &aValues_002_309_008_002_000[0] );
   // Substitution set SystematicPayPACSet.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_309_008_003_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_008_003_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_008_003_000;
   const BFSubstitutionSet SubSet_002_309_008_003_000(
    &aKeys_002_309_008_003_000[0], &aValues_002_309_008_003_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enGB, Market: 2
   static const I_CHAR* aKeys_002_309_009_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_309_009_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_009_002_000;
   const BFSubstitutionSet SubSet_002_309_009_002_000(
    &aKeys_002_309_009_002_000[0], &aValues_002_309_009_002_000[0] );
   // Substitution set SystematicPayPACSet.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_309_009_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_309_009_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_009_003_000;
   const BFSubstitutionSet SubSet_002_309_009_003_000(
    &aKeys_002_309_009_003_000[0], &aValues_002_309_009_003_000[0] );
   // Substitution set SystematicPayPACSet.  Language: nlNL
   static const I_CHAR* aKeys_002_309_010_000_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      I_("V-E"),
      0x00
   };

   static const I_CHAR* aValues_002_309_010_000_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      I_("Saving Plan EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_010_000_000;
   const BFSubstitutionSet SubSet_002_309_010_000_000(
    &aKeys_002_309_010_000_000[0], &aValues_002_309_010_000_000[0] );
   // Substitution set SystematicPayPACSet.  Language: nlNL, Market: 2
   static const I_CHAR* aKeys_002_309_010_002_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_010_002_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_010_002_000;
   const BFSubstitutionSet SubSet_002_309_010_002_000(
    &aKeys_002_309_010_002_000[0], &aValues_002_309_010_002_000[0] );
   // Substitution set SystematicPayPACSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_309_010_003_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_309_010_003_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_010_003_000;
   const BFSubstitutionSet SubSet_002_309_010_003_000(
    &aKeys_002_309_010_003_000[0], &aValues_002_309_010_003_000[0] );
   // Substitution set SystematicPayPACSet.  Language: nlNL, Market: 4
   static const I_CHAR* aKeys_002_309_010_004_000[] = {
      I_("P-E"),
      I_("P-W"),
      I_("P-C"),
      I_("P-S"),
      I_("P-M"),
      I_("P-X"),
      I_("AT"),
      I_("V-E"),
      0x00
   };

   static const I_CHAR* aValues_002_309_010_004_000[] = {
      I_("PAC EFT"),
      I_("PAC WIRE"),
      I_("PAC CASH"),
      I_("PAC System"),
      I_("PAC Manual"),
      I_("PAC Suppress"),
      I_("Auto Transfer"),
      I_("Saving Plan EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_010_004_000;
   const BFSubstitutionSet SubSet_002_309_010_004_000(
    &aKeys_002_309_010_004_000[0], &aValues_002_309_010_004_000[0] );
   // Substitution set SystematicPayPACSet.  Language: itIT, Market: 2
   static const I_CHAR* aKeys_002_309_011_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_309_011_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_011_002_000;
   const BFSubstitutionSet SubSet_002_309_011_002_000(
    &aKeys_002_309_011_002_000[0], &aValues_002_309_011_002_000[0] );
   // Substitution set SystematicPayPACSet.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_309_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_309_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_011_003_000;
   const BFSubstitutionSet SubSet_002_309_011_003_000(
    &aKeys_002_309_011_003_000[0], &aValues_002_309_011_003_000[0] );
   // Substitution set SystematicPayPACSet.  Language: thTH, Market: 2
   static const I_CHAR* aKeys_002_309_012_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_309_012_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_012_002_000;
   const BFSubstitutionSet SubSet_002_309_012_002_000(
    &aKeys_002_309_012_002_000[0], &aValues_002_309_012_002_000[0] );
   // Substitution set SystematicPayPACSet.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_309_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_309_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_309_012_003_000;
   const BFSubstitutionSet SubSet_002_309_012_003_000(
    &aKeys_002_309_012_003_000[0], &aValues_002_309_012_003_000[0] );
   // Substitution set SystematicPaySWPSet.  Language: enUS
   static const I_CHAR* aKeys_002_310_001_000_000[] = {
      I_("S-E"),
      I_("S-W"),
      I_("S-C"),
      I_("S-S"),
      I_("S-M"),
      I_("S-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_310_001_000_000[] = {
      I_("SWP EFT"),
      I_("SWP WIRE"),
      I_("SWP CASH"),
      I_("SWP System"),
      I_("SWP Manual"),
      I_("SWP Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_310_001_000_000;
   const BFSubstitutionSet SubSet_002_310_001_000_000(
    &aKeys_002_310_001_000_000[0], &aValues_002_310_001_000_000[0] );
   // Substitution set SystematicPaySWPSet.  Language: enCA
   static const I_CHAR* aKeys_002_310_003_000_000[] = {
      I_("S-E"),
      I_("S-W"),
      I_("S-C"),
      I_("S-S"),
      I_("S-M"),
      I_("S-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_310_003_000_000[] = {
      I_("SWP EFT"),
      I_("SWP WIRE"),
      I_("SWP CASH"),
      I_("SWP System"),
      I_("SWP Manual"),
      I_("SWP Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_310_003_000_000;
   const BFSubstitutionSet SubSet_002_310_003_000_000(
    &aKeys_002_310_003_000_000[0], &aValues_002_310_003_000_000[0] );
   // Substitution set SystematicPaySWPSet.  Language: frCA
   static const I_CHAR* aKeys_002_310_005_000_000[] = {
      I_("S-E"),
      I_("S-W"),
      I_("S-C"),
      I_("S-S"),
      I_("S-M"),
      I_("S-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_310_005_000_000[] = {
      I_("PRP TEF"),
      I_("PRP ordre électronique"),
      I_("PRP comptant"),
      I_("PRP système"),
      I_("PRP manuel"),
      I_("PRP suppression"),
      I_("Transfert automatique"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_310_005_000_000;
   const BFSubstitutionSet SubSet_002_310_005_000_000(
    &aKeys_002_310_005_000_000[0], &aValues_002_310_005_000_000[0] );
   // Substitution set SystematicPaySWPSet.  Language: enIE
   static const I_CHAR* aKeys_002_310_006_000_000[] = {
      I_("S-E"),
      I_("S-W"),
      I_("S-C"),
      I_("S-S"),
      I_("S-M"),
      I_("S-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_310_006_000_000[] = {
      I_("SWP EFT"),
      I_("SWP WIRE"),
      I_("SWP CASH"),
      I_("SWP System"),
      I_("SWP Manual"),
      I_("SWP Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_310_006_000_000;
   const BFSubstitutionSet SubSet_002_310_006_000_000(
    &aKeys_002_310_006_000_000[0], &aValues_002_310_006_000_000[0] );
   // Substitution set SystematicPaySWPSet.  Language: deDE
   static const I_CHAR* aKeys_002_310_007_000_000[] = {
      I_("S-E"),
      I_("S-W"),
      I_("S-C"),
      I_("S-S"),
      I_("S-M"),
      I_("S-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_310_007_000_000[] = {
      I_("SWP EFT"),
      I_("SWP WIRE"),
      I_("SWP CASH"),
      I_("SWP System"),
      I_("SWP Manual"),
      I_("SWP Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_310_007_000_000;
   const BFSubstitutionSet SubSet_002_310_007_000_000(
    &aKeys_002_310_007_000_000[0], &aValues_002_310_007_000_000[0] );
   // Substitution set SystematicPaySWPSet.  Language: esEs
   static const I_CHAR* aKeys_002_310_008_000_000[] = {
      I_("S-E"),
      I_("S-W"),
      I_("S-C"),
      I_("S-S"),
      I_("S-M"),
      I_("S-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_310_008_000_000[] = {
      I_("SWP EFT"),
      I_("SWP WIRE"),
      I_("SWP CASH"),
      I_("SWP System"),
      I_("SWP Manual"),
      I_("SWP Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_310_008_000_000;
   const BFSubstitutionSet SubSet_002_310_008_000_000(
    &aKeys_002_310_008_000_000[0], &aValues_002_310_008_000_000[0] );
   // Substitution set SystematicPaySWPSet.  Language: nlNL
   static const I_CHAR* aKeys_002_310_010_000_000[] = {
      I_("S-E"),
      I_("S-W"),
      I_("S-C"),
      I_("S-S"),
      I_("S-M"),
      I_("S-X"),
      I_("AT"),
      0x00
   };

   static const I_CHAR* aValues_002_310_010_000_000[] = {
      I_("SWP EFT"),
      I_("SWP WIRE"),
      I_("SWP CASH"),
      I_("SWP System"),
      I_("SWP Manual"),
      I_("SWP Suppress"),
      I_("Auto Transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_310_010_000_000;
   const BFSubstitutionSet SubSet_002_310_010_000_000(
    &aKeys_002_310_010_000_000[0], &aValues_002_310_010_000_000[0] );
   // Substitution set LV_EsopHistoricalHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_311_001_000_000[] = {
      I_("ModDate"),
      I_("FieldName"),
      I_("OldValue"),
      I_("ModUser"),
      0x00
   };

   static const I_CHAR* aValues_002_311_001_000_000[] = {
      I_("Date of Change"),
      I_("Field"),
      I_("Previous Display"),
      I_("Mod User"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_311_001_000_000;
   const BFSubstitutionSet SubSet_002_311_001_000_000(
    &aKeys_002_311_001_000_000[0], &aValues_002_311_001_000_000[0] );
   // Substitution set LV_EsopHistoricalHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_311_003_000_000[] = {
      I_("ModDate"),
      I_("FieldName"),
      I_("OldValue"),
      I_("ModUser"),
      0x00
   };

   static const I_CHAR* aValues_002_311_003_000_000[] = {
      I_("Date of Change"),
      I_("Field"),
      I_("Previous Display"),
      I_("Mod User"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_311_003_000_000;
   const BFSubstitutionSet SubSet_002_311_003_000_000(
    &aKeys_002_311_003_000_000[0], &aValues_002_311_003_000_000[0] );
   // Substitution set LV_EsopHistoricalHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_311_005_000_000[] = {
      I_("ModDate"),
      I_("FieldName"),
      I_("OldValue"),
      I_("ModUser"),
      0x00
   };

   static const I_CHAR* aValues_002_311_005_000_000[] = {
      I_("Date de changement"),
      I_("Champ"),
      I_("Écran précédent"),
      I_("Midifier l'utilisateur"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_311_005_000_000;
   const BFSubstitutionSet SubSet_002_311_005_000_000(
    &aKeys_002_311_005_000_000[0], &aValues_002_311_005_000_000[0] );
   // Substitution set LV_EsopHistoricalHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_311_006_000_000[] = {
      I_("ModDate"),
      I_("FieldName"),
      I_("OldValue"),
      I_("ModUser"),
      0x00
   };

   static const I_CHAR* aValues_002_311_006_000_000[] = {
      I_("Date of Change"),
      I_("Field"),
      I_("Previous Display"),
      I_("Mod User"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_311_006_000_000;
   const BFSubstitutionSet SubSet_002_311_006_000_000(
    &aKeys_002_311_006_000_000[0], &aValues_002_311_006_000_000[0] );
   // Substitution set LV_EsopHistoricalHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_311_007_000_000[] = {
      I_("ModDate"),
      I_("FieldName"),
      I_("OldValue"),
      I_("ModUser"),
      0x00
   };

   static const I_CHAR* aValues_002_311_007_000_000[] = {
      I_("Date of Change"),
      I_("Field"),
      I_("Previous Display"),
      I_("Mod User"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_311_007_000_000;
   const BFSubstitutionSet SubSet_002_311_007_000_000(
    &aKeys_002_311_007_000_000[0], &aValues_002_311_007_000_000[0] );
   // Substitution set LV_EsopHistoricalHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_311_008_000_000[] = {
      I_("ModDate"),
      I_("FieldName"),
      I_("OldValue"),
      I_("ModUser"),
      0x00
   };

   static const I_CHAR* aValues_002_311_008_000_000[] = {
      I_("Date of Change"),
      I_("Field"),
      I_("Previous Display"),
      I_("Mod User"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_311_008_000_000;
   const BFSubstitutionSet SubSet_002_311_008_000_000(
    &aKeys_002_311_008_000_000[0], &aValues_002_311_008_000_000[0] );
   // Substitution set LV_EsopHistoricalHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_311_010_000_000[] = {
      I_("ModDate"),
      I_("FieldName"),
      I_("OldValue"),
      I_("ModUser"),
      0x00
   };

   static const I_CHAR* aValues_002_311_010_000_000[] = {
      I_("Date of Change"),
      I_("Field"),
      I_("Previous Display"),
      I_("Mod User"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_311_010_000_000;
   const BFSubstitutionSet SubSet_002_311_010_000_000(
    &aKeys_002_311_010_000_000[0], &aValues_002_311_010_000_000[0] );
   // Substitution set AccrualTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_312_001_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_312_001_000_000[] = {
      I_("Interest"),
      I_("Management Fee"),
      I_("Management Fee Rebate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_312_001_000_000;
   const BFSubstitutionSet SubSet_002_312_001_000_000(
    &aKeys_002_312_001_000_000[0], &aValues_002_312_001_000_000[0] );
   // Substitution set AccrualTypeSet.  Language: enCA
   static const I_CHAR* aKeys_002_312_003_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_312_003_000_000[] = {
      I_("Interest"),
      I_("Management Fee"),
      I_("Management Fee Rebate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_312_003_000_000;
   const BFSubstitutionSet SubSet_002_312_003_000_000(
    &aKeys_002_312_003_000_000[0], &aValues_002_312_003_000_000[0] );
   // Substitution set AccrualTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_312_005_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_312_005_000_000[] = {
      I_("Intérêt"),
      I_("Frais de gestion"),
      I_("Remise sur les frais de gestion"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_312_005_000_000;
   const BFSubstitutionSet SubSet_002_312_005_000_000(
    &aKeys_002_312_005_000_000[0], &aValues_002_312_005_000_000[0] );
   // Substitution set AccrualTypeSet.  Language: enIE
   static const I_CHAR* aKeys_002_312_006_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_312_006_000_000[] = {
      I_("Interest Accruals"),
      I_("Management Fee Accruals"),
      I_("Management Fee Rebate Accruals"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_312_006_000_000;
   const BFSubstitutionSet SubSet_002_312_006_000_000(
    &aKeys_002_312_006_000_000[0], &aValues_002_312_006_000_000[0] );
   // Substitution set AccrualTypeSet.  Language: deDE
   static const I_CHAR* aKeys_002_312_007_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_312_007_000_000[] = {
      I_("Interest"),
      I_("Management Fee"),
      I_("Management Fee Rebate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_312_007_000_000;
   const BFSubstitutionSet SubSet_002_312_007_000_000(
    &aKeys_002_312_007_000_000[0], &aValues_002_312_007_000_000[0] );
   // Substitution set AccrualTypeSet.  Language: esEs
   static const I_CHAR* aKeys_002_312_008_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_312_008_000_000[] = {
      I_("Interest"),
      I_("Management Fee"),
      I_("Management Fee Rebate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_312_008_000_000;
   const BFSubstitutionSet SubSet_002_312_008_000_000(
    &aKeys_002_312_008_000_000[0], &aValues_002_312_008_000_000[0] );
   // Substitution set AccrualTypeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_312_010_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_312_010_000_000[] = {
      I_("Rente"),
      I_("Beheerkosten"),
      I_("Management Fee Rebate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_312_010_000_000;
   const BFSubstitutionSet SubSet_002_312_010_000_000(
    &aKeys_002_312_010_000_000[0], &aValues_002_312_010_000_000[0] );
   // Substitution set LV_InterestAccrualHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_313_001_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligibleUnits"),
      I_("IntRate"),
      I_("IntValue"),
      I_("IntPaid"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_313_001_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Undistr. Income"),
      I_("Daily Int"),
      I_("Int Paid"),
      I_("Accum Int"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_313_001_000_000;
   const BFSubstitutionSet SubSet_002_313_001_000_000(
    &aKeys_002_313_001_000_000[0], &aValues_002_313_001_000_000[0] );
   // Substitution set LV_InterestAccrualHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_313_003_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligibleUnits"),
      I_("IntRate"),
      I_("IntValue"),
      I_("IntPaid"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_313_003_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Undistr. Income"),
      I_("Daily Int"),
      I_("Int Paid"),
      I_("Accum Int"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_313_003_000_000;
   const BFSubstitutionSet SubSet_002_313_003_000_000(
    &aKeys_002_313_003_000_000[0], &aValues_002_313_003_000_000[0] );
   // Substitution set LV_InterestAccrualHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_313_005_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligibleUnits"),
      I_("IntRate"),
      I_("IntValue"),
      I_("IntPaid"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_313_005_000_000[] = {
      I_("Fonds"),
      I_("Classe"),
      I_("Date"),
      I_("Unités admissibles"),
      I_("Revenu non distribué"),
      I_("Intérêt quotidien"),
      I_("Intérêt versé"),
      I_("Intérêt accumulé"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_313_005_000_000;
   const BFSubstitutionSet SubSet_002_313_005_000_000(
    &aKeys_002_313_005_000_000[0], &aValues_002_313_005_000_000[0] );
   // Substitution set LV_InterestAccrualHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_313_006_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligibleUnits"),
      I_("IntRate"),
      I_("IntValue"),
      I_("IntPaid"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_313_006_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Int Rate"),
      I_("Daily Int"),
      I_("Int Paid"),
      I_("Accum Int"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_313_006_000_000;
   const BFSubstitutionSet SubSet_002_313_006_000_000(
    &aKeys_002_313_006_000_000[0], &aValues_002_313_006_000_000[0] );
   // Substitution set LV_InterestAccrualHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_313_007_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligibleUnits"),
      I_("IntRate"),
      I_("IntValue"),
      I_("IntPaid"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_313_007_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Undistr. Income"),
      I_("Daily Int"),
      I_("Int Paid"),
      I_("Accum Int"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_313_007_000_000;
   const BFSubstitutionSet SubSet_002_313_007_000_000(
    &aKeys_002_313_007_000_000[0], &aValues_002_313_007_000_000[0] );
   // Substitution set LV_InterestAccrualHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_313_008_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligibleUnits"),
      I_("IntRate"),
      I_("IntValue"),
      I_("IntPaid"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_313_008_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Undistr. Income"),
      I_("Daily Int"),
      I_("Int Paid"),
      I_("Accum Int"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_313_008_000_000;
   const BFSubstitutionSet SubSet_002_313_008_000_000(
    &aKeys_002_313_008_000_000[0], &aValues_002_313_008_000_000[0] );
   // Substitution set LV_InterestAccrualHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_313_010_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligibleUnits"),
      I_("IntRate"),
      I_("IntValue"),
      I_("IntPaid"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_313_010_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Undistr. Income"),
      I_("Daily Int"),
      I_("Int Paid"),
      I_("Accum Int"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_313_010_000_000;
   const BFSubstitutionSet SubSet_002_313_010_000_000(
    &aKeys_002_313_010_000_000[0], &aValues_002_313_010_000_000[0] );
   // Substitution set LV_MFAccrualHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_314_001_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_314_001_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Daily MF"),
      I_("Daily GST"),
      I_("MF Paid"),
      I_("Paid Type"),
      I_("Accum MF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_314_001_000_000;
   const BFSubstitutionSet SubSet_002_314_001_000_000(
    &aKeys_002_314_001_000_000[0], &aValues_002_314_001_000_000[0] );
   // Substitution set LV_MFAccrualHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_314_003_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_314_003_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Daily MF"),
      I_("Daily GST"),
      I_("MF Paid"),
      I_("Paid Type"),
      I_("Accum MF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_314_003_000_000;
   const BFSubstitutionSet SubSet_002_314_003_000_000(
    &aKeys_002_314_003_000_000[0], &aValues_002_314_003_000_000[0] );
   // Substitution set LV_MFAccrualHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_314_005_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_314_005_000_000[] = {
      I_("Fonds"),
      I_("Classe"),
      I_("Date"),
      I_("Unités admissibles"),
      I_("Frais de gestion quotidiens"),
      I_("TPS quotidienne"),
      I_("Frais de gestion payés"),
      I_("Type de paiement"),
      I_("Frais de gestion accumulés"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_314_005_000_000;
   const BFSubstitutionSet SubSet_002_314_005_000_000(
    &aKeys_002_314_005_000_000[0], &aValues_002_314_005_000_000[0] );
   // Substitution set LV_MFAccrualHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_314_006_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_314_006_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Daily MF"),
      I_("Daily GST"),
      I_("MF Paid"),
      I_("Accum MF"),
      I_("Accum MF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_314_006_000_000;
   const BFSubstitutionSet SubSet_002_314_006_000_000(
    &aKeys_002_314_006_000_000[0], &aValues_002_314_006_000_000[0] );
   // Substitution set LV_MFAccrualHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_314_007_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_314_007_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Daily MF"),
      I_("Daily GST"),
      I_("MF Paid"),
      I_("Paid Type"),
      I_("Accum MF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_314_007_000_000;
   const BFSubstitutionSet SubSet_002_314_007_000_000(
    &aKeys_002_314_007_000_000[0], &aValues_002_314_007_000_000[0] );
   // Substitution set LV_MFAccrualHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_314_008_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_314_008_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Daily MF"),
      I_("Daily GST"),
      I_("MF Paid"),
      I_("Paid Type"),
      I_("Accum MF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_314_008_000_000;
   const BFSubstitutionSet SubSet_002_314_008_000_000(
    &aKeys_002_314_008_000_000[0], &aValues_002_314_008_000_000[0] );
   // Substitution set LV_MFAccrualHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_314_010_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_314_010_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Daily MF"),
      I_("Daily GST"),
      I_("MF Paid"),
      I_("Paid Type"),
      I_("Accum MF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_314_010_000_000;
   const BFSubstitutionSet SubSet_002_314_010_000_000(
    &aKeys_002_314_010_000_000[0], &aValues_002_314_010_000_000[0] );
   // Substitution set LV_MFRebateAccrualHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_315_001_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("NRTaxAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_315_001_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Daily MFR"),
      I_("Daily GST"),
      I_("Daily NR Tax"),
      I_("MFR Paid"),
      I_("Paid Type"),
      I_("Accum MFR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_315_001_000_000;
   const BFSubstitutionSet SubSet_002_315_001_000_000(
    &aKeys_002_315_001_000_000[0], &aValues_002_315_001_000_000[0] );
   // Substitution set LV_MFRebateAccrualHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_315_003_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("NRTaxAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_315_003_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Daily MFR"),
      I_("Daily GST"),
      I_("Daily NR Tax"),
      I_("MFR Paid"),
      I_("Paid Type"),
      I_("Accum MFR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_315_003_000_000;
   const BFSubstitutionSet SubSet_002_315_003_000_000(
    &aKeys_002_315_003_000_000[0], &aValues_002_315_003_000_000[0] );
   // Substitution set LV_MFRebateAccrualHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_315_005_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("NRTaxAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_315_005_000_000[] = {
      I_("Fonds"),
      I_("Classe"),
      I_("Date"),
      I_("Unités admissibles "),
      I_("Remise sur les frais de gestion quotidiens"),
      I_("TPS quotidienne"),
      I_("Impôt non déclaré quotidien"),
      I_("Remise sur les frais de gestion payés"),
      I_("Type de paiement"),
      I_("Remise sur les frais de gestion accumulés"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_315_005_000_000;
   const BFSubstitutionSet SubSet_002_315_005_000_000(
    &aKeys_002_315_005_000_000[0], &aValues_002_315_005_000_000[0] );
   // Substitution set LV_MFRebateAccrualHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_315_006_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("NRTaxAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_315_006_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Daily MFR Amt"),
      I_("Daily GST Amt"),
      I_("MFR Paid"),
      I_("Accum MFR"),
      I_("Paid Type"),
      I_("Accum MFR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_315_006_000_000;
   const BFSubstitutionSet SubSet_002_315_006_000_000(
    &aKeys_002_315_006_000_000[0], &aValues_002_315_006_000_000[0] );
   // Substitution set LV_MFRebateAccrualHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_315_007_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("NRTaxAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_315_007_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Daily MFR"),
      I_("Daily GST"),
      I_("Daily NR Tax"),
      I_("MFR Paid"),
      I_("Paid Type"),
      I_("Accum MFR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_315_007_000_000;
   const BFSubstitutionSet SubSet_002_315_007_000_000(
    &aKeys_002_315_007_000_000[0], &aValues_002_315_007_000_000[0] );
   // Substitution set LV_MFRebateAccrualHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_315_008_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("NRTaxAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_315_008_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Daily MFR"),
      I_("Daily GST"),
      I_("Daily NR Tax"),
      I_("MFR Paid"),
      I_("Paid Type"),
      I_("Accum MFR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_315_008_000_000;
   const BFSubstitutionSet SubSet_002_315_008_000_000(
    &aKeys_002_315_008_000_000[0], &aValues_002_315_008_000_000[0] );
   // Substitution set LV_MFRebateAccrualHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_315_010_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("AsofDate"),
      I_("EligUnits"),
      I_("Amount"),
      I_("GSTAmt"),
      I_("NRTaxAmt"),
      I_("AmtPaid"),
      I_("PaidInclude"),
      I_("AccumTotal"),
      0x00
   };

   static const I_CHAR* aValues_002_315_010_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Date"),
      I_("Elig Units"),
      I_("Daily MFR"),
      I_("Daily GST"),
      I_("Daily NR Tax"),
      I_("MFR Paid"),
      I_("Paid Type"),
      I_("Accum MFR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_315_010_000_000;
   const BFSubstitutionSet SubSet_002_315_010_000_000(
    &aKeys_002_315_010_000_000[0], &aValues_002_315_010_000_000[0] );
   // Substitution set LV_FeeParamHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_316_001_000_000[] = {
      I_("FeeCode"),
      I_("FundCode"),
      I_("ClassCode"),
      I_("FundNumber"),
      I_("Rate"),
      I_("ParamFeeType"),
      I_("Status"),
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_316_001_000_000[] = {
      I_("Fee  Code"),
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Rate"),
      I_("Type"),
      I_("Active"),
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_316_001_000_000;
   const BFSubstitutionSet SubSet_002_316_001_000_000(
    &aKeys_002_316_001_000_000[0], &aValues_002_316_001_000_000[0] );
   // Substitution set LV_FeeParamHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_316_003_000_000[] = {
      I_("FeeCode"),
      I_("FundCode"),
      I_("ClassCode"),
      I_("FundNumber"),
      I_("Rate"),
      I_("ParamFeeType"),
      I_("Status"),
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_316_003_000_000[] = {
      I_("Fee  Code"),
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Rate"),
      I_("Type"),
      I_("Active"),
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_316_003_000_000;
   const BFSubstitutionSet SubSet_002_316_003_000_000(
    &aKeys_002_316_003_000_000[0], &aValues_002_316_003_000_000[0] );
   // Substitution set LV_FeeParamHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_316_005_000_000[] = {
      I_("FeeCode"),
      I_("FundCode"),
      I_("ClassCode"),
      I_("FundNumber"),
      I_("Rate"),
      I_("ParamFeeType"),
      I_("Status"),
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_316_005_000_000[] = {
      I_("Code de frais"),
      I_("Fonds"),
      I_("Classe"),
      I_("Numéro"),
      I_("Taux"),
      I_("Type"),
      I_("Actifs"),
      I_("Date d'entrée en vigueur"),
      I_("Date d'arrêt"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_316_005_000_000;
   const BFSubstitutionSet SubSet_002_316_005_000_000(
    &aKeys_002_316_005_000_000[0], &aValues_002_316_005_000_000[0] );
   // Substitution set LV_FeeParamHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_316_006_000_000[] = {
      I_("FeeCode"),
      I_("FundCode"),
      I_("ClassCode"),
      I_("FundNumber"),
      I_("Rate"),
      I_("ParamFeeType"),
      I_("Status"),
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_316_006_000_000[] = {
      I_("Fee  Code"),
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Rate"),
      I_("Type"),
      I_("Active"),
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_316_006_000_000;
   const BFSubstitutionSet SubSet_002_316_006_000_000(
    &aKeys_002_316_006_000_000[0], &aValues_002_316_006_000_000[0] );
   // Substitution set LV_FeeParamHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_316_007_000_000[] = {
      I_("FeeCode"),
      I_("FundCode"),
      I_("ClassCode"),
      I_("FundNumber"),
      I_("Rate"),
      I_("ParamFeeType"),
      I_("Status"),
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_316_007_000_000[] = {
      I_("Fee  Code"),
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Rate"),
      I_("Type"),
      I_("Active"),
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_316_007_000_000;
   const BFSubstitutionSet SubSet_002_316_007_000_000(
    &aKeys_002_316_007_000_000[0], &aValues_002_316_007_000_000[0] );
   // Substitution set LV_FeeParamHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_316_008_000_000[] = {
      I_("FeeCode"),
      I_("FundCode"),
      I_("ClassCode"),
      I_("FundNumber"),
      I_("Rate"),
      I_("ParamFeeType"),
      I_("Status"),
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_316_008_000_000[] = {
      I_("Fee  Code"),
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Rate"),
      I_("Type"),
      I_("Active"),
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_316_008_000_000;
   const BFSubstitutionSet SubSet_002_316_008_000_000(
    &aKeys_002_316_008_000_000[0], &aValues_002_316_008_000_000[0] );
   // Substitution set LV_FeeParamHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_316_010_000_000[] = {
      I_("FeeCode"),
      I_("FundCode"),
      I_("ClassCode"),
      I_("FundNumber"),
      I_("Rate"),
      I_("ParamFeeType"),
      I_("Status"),
      I_("EffectiveDate"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_316_010_000_000[] = {
      I_("Fee  Code"),
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Rate"),
      I_("Type"),
      I_("Actief"),
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_316_010_000_000;
   const BFSubstitutionSet SubSet_002_316_010_000_000(
    &aKeys_002_316_010_000_000[0], &aValues_002_316_010_000_000[0] );
   // Substitution set LV_FeeScaleHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_317_001_000_000[] = {
      I_("Level"),
      I_("LowerBound"),
      I_("UpperBound"),
      I_("ScaleRate"),
      I_("Type"),
      0x00
   };

   static const I_CHAR* aValues_002_317_001_000_000[] = {
      I_("Level"),
      I_("Lower Bound"),
      I_("Upper Bound"),
      I_("Rate"),
      I_("Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_317_001_000_000;
   const BFSubstitutionSet SubSet_002_317_001_000_000(
    &aKeys_002_317_001_000_000[0], &aValues_002_317_001_000_000[0] );
   // Substitution set LV_FeeScaleHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_317_003_000_000[] = {
      I_("Level"),
      I_("LowerBound"),
      I_("UpperBound"),
      I_("ScaleRate"),
      I_("Type"),
      0x00
   };

   static const I_CHAR* aValues_002_317_003_000_000[] = {
      I_("Level"),
      I_("Lower Bound"),
      I_("Upper Bound"),
      I_("Rate"),
      I_("Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_317_003_000_000;
   const BFSubstitutionSet SubSet_002_317_003_000_000(
    &aKeys_002_317_003_000_000[0], &aValues_002_317_003_000_000[0] );
   // Substitution set LV_FeeScaleHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_317_005_000_000[] = {
      I_("Level"),
      I_("LowerBound"),
      I_("UpperBound"),
      I_("ScaleRate"),
      I_("Type"),
      0x00
   };

   static const I_CHAR* aValues_002_317_005_000_000[] = {
      I_("Niveau"),
      I_("Limite minimale"),
      I_("Limite maximale"),
      I_("Taux"),
      I_("Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_317_005_000_000;
   const BFSubstitutionSet SubSet_002_317_005_000_000(
    &aKeys_002_317_005_000_000[0], &aValues_002_317_005_000_000[0] );
   // Substitution set LV_FeeScaleHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_317_006_000_000[] = {
      I_("Level"),
      I_("LowerBound"),
      I_("UpperBound"),
      I_("ScaleRate"),
      I_("Type"),
      0x00
   };

   static const I_CHAR* aValues_002_317_006_000_000[] = {
      I_("Level"),
      I_("Lower Bound"),
      I_("Upper Bound(<)"),
      I_("Rate"),
      I_("Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_317_006_000_000;
   const BFSubstitutionSet SubSet_002_317_006_000_000(
    &aKeys_002_317_006_000_000[0], &aValues_002_317_006_000_000[0] );
   // Substitution set LV_FeeScaleHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_317_007_000_000[] = {
      I_("Level"),
      I_("LowerBound"),
      I_("UpperBound"),
      I_("ScaleRate"),
      I_("Type"),
      0x00
   };

   static const I_CHAR* aValues_002_317_007_000_000[] = {
      I_("Level"),
      I_("Lower Bound"),
      I_("Upper Bound"),
      I_("Rate"),
      I_("Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_317_007_000_000;
   const BFSubstitutionSet SubSet_002_317_007_000_000(
    &aKeys_002_317_007_000_000[0], &aValues_002_317_007_000_000[0] );
   // Substitution set LV_FeeScaleHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_317_008_000_000[] = {
      I_("Level"),
      I_("LowerBound"),
      I_("UpperBound"),
      I_("ScaleRate"),
      I_("Type"),
      0x00
   };

   static const I_CHAR* aValues_002_317_008_000_000[] = {
      I_("Level"),
      I_("Lower Bound"),
      I_("Upper Bound"),
      I_("Rate"),
      I_("Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_317_008_000_000;
   const BFSubstitutionSet SubSet_002_317_008_000_000(
    &aKeys_002_317_008_000_000[0], &aValues_002_317_008_000_000[0] );
   // Substitution set LV_FeeScaleHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_317_010_000_000[] = {
      I_("Level"),
      I_("LowerBound"),
      I_("UpperBound"),
      I_("ScaleRate"),
      I_("Type"),
      0x00
   };

   static const I_CHAR* aValues_002_317_010_000_000[] = {
      I_("Level"),
      I_("Lower Bound"),
      I_("Upper Bound"),
      I_("Rate"),
      I_("Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_317_010_000_000;
   const BFSubstitutionSet SubSet_002_317_010_000_000(
    &aKeys_002_317_010_000_000[0], &aValues_002_317_010_000_000[0] );
   // Substitution set FeeTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_318_001_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_318_001_000_000[] = {
      I_("Flat"),
      I_("Percent"),
      I_("Scale"),
      I_("Tier"),
      I_("Tier By Threshold"),
      I_("Scale by Threshold"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_318_001_000_000;
   const BFSubstitutionSet SubSet_002_318_001_000_000(
    &aKeys_002_318_001_000_000[0], &aValues_002_318_001_000_000[0] );
   // Substitution set FeeTypeSet.  Language: enCA
   static const I_CHAR* aKeys_002_318_003_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_318_003_000_000[] = {
      I_("Flat"),
      I_("Percent"),
      I_("Scale"),
      I_("Tier"),
      I_("Tier By Threshold"),
      I_("Scale by Threshold"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_318_003_000_000;
   const BFSubstitutionSet SubSet_002_318_003_000_000(
    &aKeys_002_318_003_000_000[0], &aValues_002_318_003_000_000[0] );
   // Substitution set FeeTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_318_005_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_318_005_000_000[] = {
      I_("Fixes"),
      I_("Pourcentage"),
      I_("Échelle"),
      I_("Niveau"),
      I_("Tier By Threshold"),
      I_("Scale by Threshold"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_318_005_000_000;
   const BFSubstitutionSet SubSet_002_318_005_000_000(
    &aKeys_002_318_005_000_000[0], &aValues_002_318_005_000_000[0] );
   // Substitution set FeeTypeSet.  Language: enIE
   static const I_CHAR* aKeys_002_318_006_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_318_006_000_000[] = {
      I_("Flat"),
      I_("Percent"),
      I_("Scale"),
      I_("Tier"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_318_006_000_000;
   const BFSubstitutionSet SubSet_002_318_006_000_000(
    &aKeys_002_318_006_000_000[0], &aValues_002_318_006_000_000[0] );
   // Substitution set FeeTypeSet.  Language: deDE
   static const I_CHAR* aKeys_002_318_007_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_318_007_000_000[] = {
      I_("Flat"),
      I_("Percent"),
      I_("Scale"),
      I_("Tier"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_318_007_000_000;
   const BFSubstitutionSet SubSet_002_318_007_000_000(
    &aKeys_002_318_007_000_000[0], &aValues_002_318_007_000_000[0] );
   // Substitution set FeeTypeSet.  Language: esEs
   static const I_CHAR* aKeys_002_318_008_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_318_008_000_000[] = {
      I_("Flat"),
      I_("Percent"),
      I_("Scale"),
      I_("Tier"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_318_008_000_000;
   const BFSubstitutionSet SubSet_002_318_008_000_000(
    &aKeys_002_318_008_000_000[0], &aValues_002_318_008_000_000[0] );
   // Substitution set FeeTypeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_318_010_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_318_010_000_000[] = {
      I_("Flat"),
      I_("Procent"),
      I_("Scale"),
      I_("Tier"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_318_010_000_000;
   const BFSubstitutionSet SubSet_002_318_010_000_000(
    &aKeys_002_318_010_000_000[0], &aValues_002_318_010_000_000[0] );
   // Substitution set FeeCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_320_001_000_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("810"),
      I_("811"),
      I_("812"),
      I_("815"),
      I_("816"),
      I_("142"),
      I_("143"),
      I_("120"),
      I_("212"),
      I_("213"),
      I_("79"),
      I_("81"),
      I_("38"),
      I_("69"),
      I_("700"),
      I_("701"),
      I_("62"),
      I_("63"),
      I_("200"),
      I_("181"),
      I_("182"),
      I_("705"),
      I_("706"),
      I_("220"),
      I_("221"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("154"),
      I_("155"),
      I_("156"),
      I_("820"),
      I_("601"),
      I_("602"),
      I_("85"),
      I_("86"),
      I_("600"),
      I_("87"),
      I_("94"),
      I_("97"),
      I_("707"),
      I_("708"),
      I_("93"),
      I_("604"),
      I_("122"),
      I_("123"),
      I_("133"),
      I_("134"),
      I_("29"),
      I_("98"),
	  I_("127"),
      0x00
   };

   static const I_CHAR* aValues_002_320_001_000_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("26 - Holding Commission"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Provincial Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("110 - Purchase Client Condition"),
      I_("111 - Reinvest Purchase Client Condtion"),
      I_("112 - Purchase Transaction Fee"),
      I_("113 - Redemption Transaction Fee"),
      I_("114 - Aggregated External Charge"),
      I_("115 - Aggregated Commission"),
      I_("116 - Rebate Amount"),
      I_("810 - Management Expense Rate"),
      I_("811 - Distribution Fee"),
      I_("812 - Fee Sharing Rate"),
      I_("815 - Trailer Fees Grandfathered Units"),
      I_("816 - Guarantee Fee"),
      I_("142 - Max DSC Rate"),
      I_("143 - Max number of years in the DSC schedule"),
      I_("120 - Jumbo Commission Fee"),
      I_("212 - Purchase TPA Fee"),
      I_("213 - Redemption TPA Fee"),
      I_("79 - MF Override Tax Rate"),
      I_("81 - MFR Override Tax Rate"),
      I_("38 - Dividend Withholding Tax"),
      I_("69 - Sales Force Additional Commission"),
      I_("700 - GI MVA Fee"),
      I_("701 - GI Admin Fee"),
      I_("62 - Commission Clawback"),
      I_("63 - DCA Clawback"),
      I_("200 - Performance Fee"),
      I_("181 - Mgmt Fee Positive Offset"),
      I_("182 - Mgmt Fee Negative Offset"),
      I_("705 - Sales Credit"),
      I_("706 - Sales Credit Clawback"),
      I_("220 - Bonus rate for Employee"),
      I_("221 - Bonus rate for Agent"),
      I_("151 - Commitment Commission"),
      I_("152 - Grace Period"),
      I_("153 - Fee Reimbursement"),
      I_("154 - Commitment Bonus"),
      I_("155 - Commitment Allocation"),
      I_("156 - Lump sum Allocation"),
      I_("820 - Trailer Fee - Sales Force Additional Trailer Fee"),
      I_("601 - Commission on Death Rollover"),
      I_("602 - Commission on Retirement Rollover"),
      I_("85 - MF QST Override Tax Rate"),
      I_("86 - MFR QST Override Tax  Rate"),
      I_("600 - Sales Force Additional Event Commission"),
      I_("87 - DF HST Override Tax Rate"),
      I_("94 - Dealer Service Fee"),
      I_("97 - DF QST OverrideTax Rate"),
      I_("707 - Commitment Sales Credit"),
      I_("708 - Sales Credit Grace Period"),
      I_("93 - Trailer Fee Rebate"),
      I_("604 - Commission on Switch to Payout Contract"),
      I_("122 - Purchase Spread Fee"),
      I_("123 - Redemption Spread Fee"),
      I_("133 - Consumer Price Index - CPI"),
      I_("134 - Yearly Payout Factor"),
      I_("29 - Daily Interest Fund - Bonus Rate"),
      I_("98 - Floor MFR"),
	  I_("127 - Liquidity Redemption Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_001_000_000;
   const BFSubstitutionSet SubSet_002_320_001_000_000(
    &aKeys_002_320_001_000_000[0], &aValues_002_320_001_000_000[0] );
   // Substitution set FeeCodeSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_320_001_003_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("810"),
      I_("811"),
      I_("812"),
      I_("815"),
      I_("816"),
      I_("142"),
      I_("143"),
      I_("120"),
      I_("212"),
      I_("213"),
      I_("79"),
      I_("81"),
      I_("38"),
      I_("69"),
      I_("700"),
      I_("701"),
      I_("62"),
      I_("63"),
      I_("200"),
      I_("181"),
      I_("182"),
      I_("705"),
      I_("706"),
      I_("220"),
      I_("221"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("154"),
      I_("155"),
      I_("156"),
      I_("820"),
      I_("601"),
      I_("602"),
      I_("85"),
      I_("86"),
      I_("600"),
      I_("87"),
      I_("94"),
      I_("97"),
      I_("707"),
      I_("708"),
      I_("93"),
      I_("604"),
      I_("122"),
      I_("123"),
      I_("133"),
      I_("134"),
      I_("29"),
      I_("98"),
	  I_("127"),
      0x00
   };

   static const I_CHAR* aValues_002_320_001_003_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("26 - Holding Commission"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Provincial Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("110 - Purchase Client Condition"),
      I_("111 - Reinvest Purchase Client Condtion"),
      I_("112 - Purchase Transaction Fee"),
      I_("113 - Redemption Transaction Fee"),
      I_("114 - Aggregated External Charge"),
      I_("115 - Aggregated Commission"),
      I_("116 - Rebate Amount"),
      I_("810 - Management Expense Rate"),
      I_("811 - Distribution Fee"),
      I_("812 - Fee Sharing Rate"),
      I_("815 - Trailer Fees Grandfathered Units"),
      I_("816 - Guarantee Fee"),
      I_("142 - Max DSC Rate"),
      I_("143 - Max number of years in the DSC schedule"),
      I_("120 - Jumbo Commission Fee"),
      I_("212 - Purchase TPA Fee"),
      I_("213 - Redemption TPA Fee"),
      I_("79 - MF Override Tax Rate"),
      I_("81 - MFR Override Tax Rate"),
      I_("38 - Dividend Withholding Tax"),
      I_("69 - Sales Force Additional Commission"),
      I_("700 - GI MVA Fee"),
      I_("701 - GI Admin Fee"),
      I_("62 - Commission Clawback"),
      I_("63 - DCA Clawback"),
      I_("200 - Performance Fee"),
      I_("181 - Mgmt Fee Positive Offset"),
      I_("182 - Mgmt Fee Negative Offset"),
      I_("705 - Sales Credit"),
      I_("706 - Sales Credit Clawback"),
      I_("220 - Bonus rate for Employee"),
      I_("221 - Bonus rate for Agent"),
      I_("151 - Commitment Commission"),
      I_("152 - Grace Period"),
      I_("153 - Fee Reimbursement"),
      I_("154 - Commitment Bonus"),
      I_("155 - Commitment Allocation"),
      I_("156 - Lump sum Allocation"),
      I_("820 - Trailer Fee - Sales Force Additional Trailer Fee"),
      I_("601 - Commission on Death Rollover"),
      I_("602 - Commission on Retirement Rollover"),
      I_("85 - MF QST Override Tax Rate"),
      I_("86 - MFR QST Override Tax  Rate"),
      I_("600 - Sales Force Additional Event Commission"),
      I_("87 - DF HST Override Tax Rate"),
      I_("94 - Dealer Service Fee"),
      I_("97 - DF QST OverrideTax Rate"),
      I_("707 - Commitment Sales Credit"),
      I_("708 - Sales Credit Grace Period"),
      I_("93 - Trailer Fee Rebate"),
      I_("604 - Commission on Switch to Payout Contract"),
      I_("122 - Purchase Spread Fee"),
      I_("123 - Redemption Spread Fee"),
      I_("133 - Consumer Price Index - CPI"),
      I_("134 - Yearly Payout Factor"),
      I_("29 - Daily Interest Fund - Bonus Rate"),
      I_("98 - Floor MFR"),
      I_("127 - Liquidity Redemption Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_001_003_000;
   const BFSubstitutionSet SubSet_002_320_001_003_000(
    &aKeys_002_320_001_003_000[0], &aValues_002_320_001_003_000[0] );
   // Substitution set FeeCodeSet.  Language: enUS, Market: 3, Client: 20
   static const I_CHAR* aKeys_002_320_001_003_020[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("810"),
      I_("811"),
      I_("812"),
      I_("815"),
      I_("816"),
      I_("142"),
      I_("143"),
      I_("120"),
      I_("212"),
      I_("213"),
      I_("79"),
      I_("81"),
      I_("38"),
      I_("69"),
      I_("700"),
      I_("701"),
      I_("62"),
      I_("63"),
      I_("200"),
      I_("181"),
      I_("182"),
      I_("705"),
      I_("706"),
      I_("220"),
      I_("221"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("154"),
      I_("155"),
      I_("156"),
      I_("820"),
      I_("601"),
      I_("602"),
      I_("85"),
      I_("86"),
      I_("600"),
      I_("87"),
      I_("94"),
      I_("97"),
      I_("707"),
      I_("708"),
      I_("93"),
      I_("604"),
      I_("122"),
      I_("123"),
      I_("133"),
      I_("134"),
      I_("29"),
      I_("98"),
      I_("127"),
      0x00
   };

   static const I_CHAR* aValues_002_320_001_003_020[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("26 - Holding Commission"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Capital Gain Withholding Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("110 - Purchase Client Condition"),
      I_("111 - Reinvest Purchase Client Condtion"),
      I_("112 - Purchase Transaction Fee"),
      I_("113 - Redemption Transaction Fee"),
      I_("114 - Aggregated External Charge"),
      I_("115 - Aggregated Commission"),
      I_("116 - Rebate Amount"),
      I_("810 - Management Expense Rate"),
      I_("811 - Distribution Fee"),
      I_("812 - Fee Sharing Rate"),
      I_("815 - Trailer Fees Grandfathered Units"),
      I_("816 - Guarantee Fee"),
      I_("142 - Max DSC Rate"),
      I_("143 - Max number of years in the DSC schedule"),
      I_("120 - Jumbo Commission Fee"),
      I_("212 - Purchase TPA Fee"),
      I_("213 - Redemption TPA Fee"),
      I_("79 - MF Override Tax Rate"),
      I_("81 - MFR Override Tax Rate"),
      I_("38 - Dividend Withholding Tax"),
      I_("69 - Sales Force Additional Commission"),
      I_("700 - GI MVA Fee"),
      I_("701 - GI Admin Fee"),
      I_("62 - Commission Clawback"),
      I_("63 - DCA Clawback"),
      I_("200 - Performance Fee"),
      I_("181 - Mgmt Fee Positive Offset"),
      I_("182 - Mgmt Fee Negative Offset"),
      I_("705 - Sales Credit"),
      I_("706 - Sales Credit Clawback"),
      I_("220 - Bonus rate for Employee"),
      I_("221 - Bonus rate for Agent"),
      I_("151 - Commitment Commission"),
      I_("152 - Grace Period"),
      I_("153 - Fee Reimbursement"),
      I_("154 - Commitment Bonus"),
      I_("155 - Commitment Allocation"),
      I_("156 - Lump sum Allocation"),
      I_("820 - Trailer Fee - Sales Force Additional Trailer Fee"),
      I_("601 - Commission on Death Rollover"),
      I_("602 - Commission on Retirement Rollover"),
      I_("85 - MF QST Override Tax Rate"),
      I_("86 - MFR QST Override Tax  Rate"),
      I_("600 - Sales Force Additional Event Commission"),
      I_("87 - DF HST Override Tax Rate"),
      I_("94 - Dealer Service Fee"),
      I_("97 - DF QST OverrideTax Rate"),
      I_("707 - Commitment Sales Credit"),
      I_("708 - Sales Credit Grace Period"),
      I_("93 - Trailer Fee Rebate"),
      I_("604 - Commission on Switch to Payout Contract"),
      I_("122 - Purchase Spread Fee"),
      I_("123 - Redemption Spread Fee"),
      I_("133 - Consumer Price Index - CPI"),
      I_("134 - Yearly Payout Factor"),
      I_("29 - Daily Interest Fund - Bonus Rate"),
      I_("98 - Floor MFR"),
      I_("127 - Liquidity Redemption Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_001_003_020;
   const BFSubstitutionSet SubSet_002_320_001_003_020(
    &aKeys_002_320_001_003_020[0], &aValues_002_320_001_003_020[0] );
   // Substitution set FeeCodeSet.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_320_001_004_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("810"),
      I_("811"),
      I_("812"),
      I_("815"),
      I_("816"),
      I_("142"),
      I_("143"),
      I_("120"),
      I_("212"),
      I_("213"),
      I_("79"),
      I_("81"),
      I_("38"),
      I_("69"),
      I_("700"),
      I_("701"),
      I_("62"),
      I_("63"),
      I_("200"),
      I_("181"),
      I_("182"),
      I_("705"),
      I_("706"),
      I_("220"),
      I_("221"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("154"),
      I_("155"),
      I_("156"),
      I_("820"),
      I_("601"),
      I_("602"),
      I_("85"),
      I_("86"),
      I_("600"),
      I_("87"),
      I_("94"),
      I_("97"),
      I_("707"),
      I_("708"),
      I_("93"),
      I_("604"),
      I_("122"),
      I_("123"),
      I_("133"),
      I_("134"),
      I_("29"),
      I_("98"),
      I_("127"),
      0x00
   };

   static const I_CHAR* aValues_002_320_001_004_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("26 - Holding Commission"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Provincial Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("110 - Purchase Client Condition"),
      I_("111 - Reinvest Purchase Client Condtion"),
      I_("112 - Purchase Transaction Fee"),
      I_("113 - Redemption Transaction Fee"),
      I_("114 - Aggregated External Charge"),
      I_("115 - Aggregated Commission"),
      I_("116 - Rebate Amount"),
      I_("810 - Management Expense Rate"),
      I_("811 - Distribution Fee"),
      I_("812 - Fee Sharing Rate"),
      I_("815 - Trailer Fees Grandfathered Units"),
      I_("816 - Guarantee Fee"),
      I_("142 - Max DSC Rate"),
      I_("143 - Max number of years in the DSC schedule"),
      I_("120 - Jumbo Commission Fee"),
      I_("212 - Purchase TPA Fee"),
      I_("213 - Redemption TPA Fee"),
      I_("79 - MF Override Tax Rate"),
      I_("81 - MFR Override Tax Rate"),
      I_("38 - Dividend Withholding Tax"),
      I_("69 - Sales Force Additional Commission"),
      I_("700 - GI MVA Fee"),
      I_("701 - GI Admin Fee"),
      I_("62 - Commission Clawback"),
      I_("63 - DCA Clawback"),
      I_("200 - Performance Fee"),
      I_("181 - Mgmt Fee Positive Offset"),
      I_("182 - Mgmt Fee Negative Offset"),
      I_("705 - Sales Credit"),
      I_("706 - Sales Credit Clawback"),
      I_("220 - Bonus rate for Employee"),
      I_("221 - Bonus rate for Agent"),
      I_("151 - Commitment Commission"),
      I_("152 - Grace Period"),
      I_("153 - Fee Reimbursement"),
      I_("154 - Commitment Bonus"),
      I_("155 - Commitment Allocation"),
      I_("156 - Lump sum Allocation"),
      I_("820 - Trailer Fee - Sales Force Additional Trailer Fee"),
      I_("601 - Commission on Death Rollover"),
      I_("602 - Commission on Retirement Rollover"),
      I_("85 - MF QST Override Tax Rate"),
      I_("86 - MFR QST Override Tax  Rate"),
      I_("600 - Sales Force Additional Event Commission"),
      I_("87 - DF HST Override Tax Rate"),
      I_("94 - Dealer Service Fee"),
      I_("97 - DF QST OverrideTax Rate"),
      I_("707 - Commitment Sales Credit"),
      I_("708 - Sales Credit Grace Period"),
      I_("93 - Trailer Fee Rebate"),
      I_("604 - Commission on Switch to Payout Contract"),
      I_("122 - Purchase Spread Fee"),
      I_("123 - Redemption Spread Fee"),
      I_("133 - Consumer Price Index - CPI"),
      I_("134 - Yearly Payout Factor"),
      I_("29 - Daily Interest Fund - Bonus Rate"),
      I_("98 - Floor MFR"),
      I_("127 - Liquidity Redemption Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_001_004_000;
   const BFSubstitutionSet SubSet_002_320_001_004_000(
    &aKeys_002_320_001_004_000[0], &aValues_002_320_001_004_000[0] );
   // Substitution set FeeCodeSet.  Language: enCA
   static const I_CHAR* aKeys_002_320_003_000_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("30"),
      I_("98"),
      0x00
   };

   static const I_CHAR* aValues_002_320_003_000_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Provincial Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("30 - Provincial Tax"),
      I_("98 - Floor MFR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_003_000_000;
   const BFSubstitutionSet SubSet_002_320_003_000_000(
    &aKeys_002_320_003_000_000[0], &aValues_002_320_003_000_000[0] );
   // Substitution set FeeCodeSet.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_320_003_003_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("98"),            
      0x00
   };

   static const I_CHAR* aValues_002_320_003_003_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Provincial Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("98 - Floor MFR"),            
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_003_003_000;
   const BFSubstitutionSet SubSet_002_320_003_003_000(
    &aKeys_002_320_003_003_000[0], &aValues_002_320_003_003_000[0] );
   // Substitution set FeeCodeSet.  Language: enCA, Market: 3, Client: 20
   static const I_CHAR* aKeys_002_320_003_003_020[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("98"),            
      0x00
   };

   static const I_CHAR* aValues_002_320_003_003_020[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Capital Gain Withholding Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("98 - Floor MFR"),            
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_003_003_020;
   const BFSubstitutionSet SubSet_002_320_003_003_020(
    &aKeys_002_320_003_003_020[0], &aValues_002_320_003_003_020[0] );
   // Substitution set FeeCodeSet.  Language: enCA, Market: 4
   static const I_CHAR* aKeys_002_320_003_004_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("98"),
      0x00
   };

   static const I_CHAR* aValues_002_320_003_004_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Provincial Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("98 - Floor MFR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_003_004_000;
   const BFSubstitutionSet SubSet_002_320_003_004_000(
    &aKeys_002_320_003_004_000[0], &aValues_002_320_003_004_000[0] );
   // Substitution set FeeCodeSet.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_320_004_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_320_004_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_004_003_000;
   const BFSubstitutionSet SubSet_002_320_004_003_000(
    &aKeys_002_320_004_003_000[0], &aValues_002_320_004_003_000[0] );
   // Substitution set FeeCodeSet.  Language: frFR, Market: 3, Client: 20
   static const I_CHAR* aKeys_002_320_004_003_020[] = {
      I_("30"),
      0x00
   };

   static const I_CHAR* aValues_002_320_004_003_020[] = {
      I_("30 - Capital Gain Withholding Tax"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_004_003_020;
   const BFSubstitutionSet SubSet_002_320_004_003_020(
    &aKeys_002_320_004_003_020[0], &aValues_002_320_004_003_020[0] );
   // Substitution set FeeCodeSet.  Language: frFR, Market: 4
   static const I_CHAR* aKeys_002_320_004_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_320_004_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_004_004_000;
   const BFSubstitutionSet SubSet_002_320_004_004_000(
    &aKeys_002_320_004_004_000[0], &aValues_002_320_004_004_000[0] );
   // Substitution set FeeCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_320_005_000_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("810"),
      I_("811"),
      I_("812"),
      I_("815"),
      I_("816"),
      I_("142"),
      I_("143"),
      I_("120"),
      I_("212"),
      I_("213"),
      I_("79"),
      I_("81"),
      I_("38"),
      I_("69"),
      I_("700"),
      I_("701"),
      I_("62"),
      I_("63"),
      I_("200"),
      I_("181"),
      I_("182"),
      I_("705"),
      I_("706"),
      I_("220"),
      I_("221"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("154"),
      I_("155"),
      I_("156"),
      I_("820"),
      I_("601"),
      I_("602"),
      I_("85"),
      I_("86"),
      I_("600"),
      I_("87"),
      I_("94"),
      I_("97"),
      I_("707"),
      I_("708"),
      I_("93"),
      I_("604"),
      I_("122"),
      I_("123"),
      I_("133"),
      I_("134"),
      I_("29"),
      I_("98"),            
      I_("127"),            
      0x00
   };

   static const I_CHAR* aValues_002_320_005_000_000[] = {
      I_("8 - Commission de suivi"),
      I_("18 - Frais de gestion quotidiens"),
      I_("95 - Remise sur les frais de gestion"),
      I_("180 - Escompte sur les frais de gestion"),
      I_("1 - Commissions sur les frais d'achat"),
      I_("10 - Commission supplémentaire"),
      I_("101 - Retenue d'impôt étranger/national"),
      I_("102 - Retenue d'impôt sur le dividende"),
      I_("103 - Impôt de réunification"),
      I_("104 - Impôt de dépôt en espèces"),
      I_("105 - Impôt sur les bénéfices"),
      I_("107 - Retenue d'impôt sur le revenu du dividende des frais de gestion - nouvelle loi"),
      I_("11 - Frais de distribution"),
      I_("12 - Commissions maximales sur les frais d'achat/de rachat par défaut"),
      I_("13 - Rachat partiel REER"),
      I_("14 - Rachat total REER"),
      I_("15 - Rachat partiel FERR"),
      I_("16 - Rachat total FERR"),
      I_("17 - Frais SGP"),
      I_("19 - Reprise de commission - rachats"),
      I_("2 - Taux de retenue de commission"),
      I_("20 - Reprise de commission - transferts"),
      I_("21 - Récupération - échanges"),
      I_("22 - Commission sur l'échange"),
      I_("23 - Frais de transfert/d'échange"),
      I_("24 - Frais de répartition de l'actif global"),
      I_("25 - Commission de suivi du SGP"),
      I_("26 - Commission retenue"),
      I_("27 - Commission maximale au niveau du courtier"),
      I_("28 - 1/12 de 1 % des frais administratifs du portefeuille FAR"),
      I_("3 - Frais de rachat"),
      I_("30 - Impôt provincial"),
      I_("301 - Facteur de pourcentage du cours d'achat"),
      I_("302 - Facteur de pourcentage du cours de vente"),
      I_("31 - Impôt fédéral"),
      I_("32 - Frais administratifs d'achat"),
      I_("33 - Paiement de contrat d'achat"),
      I_("34 - Frais administratifs de rachat"),
      I_("35 - Frais administratifs de transfert"),
      I_("36 - Taxe sur la valeur ajoutée"),
      I_("37 - Frais de délivrance de certificat au porteur"),
      I_("39 - Frais de rachat anticipé"),
      I_("4 - Frais de transfert pour les transferts automatiques"),
      I_("40 - Niveau de frais - frais d'achat seulement"),
      I_("400 - Frais d'administration"),
      I_("401 - Frais de gestion annuels"),
      I_("41 - Frais de révocation d'enregistrement"),
      I_("47 - VUB initial"),
      I_("48 - VUB mensuel"),
      I_("49 - Frais d'échange entrant"),
      I_("5 - Frais d'administration REER"),
      I_("50 - Partage de comm. - achat direct"),
      I_("51 - Partage de comm. - achat électronique"),
      I_("52 - Partage de comm. - rachat direct"),
      I_("53 - Partage de comm. - rachat électronique"),
      I_("54 - Partage de comm. - réinvestir le dividende"),
      I_("55 - Partage de comm. - transfert entrant"),
      I_("56 - Partage de comm. - transfert sortant"),
      I_("57 - Partage de comm. - échange entrant"),
      I_("58 - Partage de comm. - échange sortant"),
      I_("59 - Seuil de commission"),
      I_("6 - Frais d'administration de REER autogéré"),
      I_("60 - Partage de comm. - entrée d'argent"),
      I_("61 - Partage de comm. - sortie d'argent"),
      I_("68 - Commission de suivi divisée"),
      I_("7 - Frais d'administration FERR"),
      I_("71 - Impôt provincial TPF"),
      I_("72 - Impôt fédéral TPF"),
      I_("73 - FAR TPF"),
      I_("74 - Frais TPF"),
      I_("75 - TPS TPF"),
      I_("76 - TVH"),
      I_("77 - TVP/TVQ"),
      I_("78 - Taxe sur les produits et services"),
      I_("80 - Commission de suivi - anciennes unités"),
      I_("801 - Commission de suivi - unités de pourcentage de frais"),
      I_("802 - Commission de suivi - unités matures"),
      I_("803 - Commission de suivi - unités sans frais de distribution de revenu"),
      I_("83 - Anciennes unités de commission de suivi (catégorie 2)"),
      I_("88 - Commission de reconduction de FERR/FRV/FRRI"),
      I_("89 - Commission de suivi - partage de commission"),
      I_("9 - Frais d'administration de FERR autogéré"),
      I_("100 - Taxe allemande"),
      I_("118 - Partie Viscount"),
      I_("44 - Frais d'échange sortant"),
      I_("340 - Frais de RA : frais de rachat anticipé"),
      I_("350 - Frais d'OCT : frais d'opérations à court terme"),
      I_("175 - Frais d'administration REEE"),
      I_("173 - Frais de retrait du régime REEE (partiel)"),
      I_("110 - Condition d'achat client"),
      I_("111 - Condition d'achat client de réinvestissement"),
      I_("112 - Frais de transaction d'achat"),
      I_("113 - Frais de transaction de rachat"),
      I_("114 - Frais externes globaux"),
      I_("115 - Commission globale"),
      I_("116 - Montant de la remise"),
      I_("810 - Taux de frais de gestion"),
      I_("811 - Frais de distribution"),
      I_("812 - Taux de partage de frais"),
      I_("815 - Unités bénéficiant d'une clause de droits acquis de commission de suivi"),
      I_("816 - Frais de garantie"),
      I_("142 - Taux FAR maximal"),
      I_("143 - Nombre d'années maximal du tableau FAR"),
      I_("120 - Frais de commission négociables"),
      I_("212 - Frais de tiers administrateur d'achat"),
      I_("213 - Frais de tiers administrateur de rachat"),
      I_("79 - Taux d'imposition de la modification des frais de gestion"),
      I_("81 - Taux d'imposition de la modification de la remise sur les frais de gestion"),
      I_("38 - Retenue d'impôt sur le dividende"),
      I_("69 - Commission supplémentaire de la force de vente"),
      I_("700 - Frais VMA IG"),
      I_("701 - Frais d'administration IG"),
      I_("62 - Récupération de commission"),
      I_("63 - Récupération APSF"),
      I_("200 - Frais de performance"),
      I_("181 - Écart positif de frais de gestion"),
      I_("182 - Écart négatif de frais de gestion"),
      I_("705 - Crédit de vente"),
      I_("706 - Récupération de crédit de vente"),
      I_("220 - Taux boni d'employé"),
      I_("221 - Taux boni d'agent"),
      I_("151 - Commission d'engagement"),
      I_("152 - Délai de tolérance"),
      I_("153 - Remboursement de frais"),
      I_("154 - Boni d'engagement"),
      I_("155 - Répartition d'engagement"),
      I_("156 - Répartition forfaitaire"),
      I_("820 - Commission"),
      I_("601 - Commission de roulement au décès"),
      I_("602 - Commission de roulement à la retraite"),
      I_("85 - MF QST Override Tax Rate"),
      I_("86 - MFR QST Override Tax  Rate"),
      I_("600 - Sales Force Additional Event Commission"),
      I_("87 - DF HST Override Tax Rate"),
      I_("94 - Dealer Service Fee"),
      I_("97 - DF QST OverrideTax Rate"),
      I_("707 - Commitment Sales Credit"),
      I_("708 - Sales Credit Grace Period"),
      I_("93 - Remboursement Commission du Service"),
      I_("604 - Commission on Switch to Payout Contract"),
      I_("122 - Achat Frais de propagation"),
      I_("123 - Rachat Commission de propagation"),
      I_("133 - Consumer Price Index - CPI"),
      I_("134 - Yearly Payout Factor"),
      I_("29 - Daily Interest Fund - Bonus Rate"),
      I_("98 - Floor MFR"),            
      I_("127 - Liquidity Redemption Fee"),            
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_005_000_000;
   const BFSubstitutionSet SubSet_002_320_005_000_000(
    &aKeys_002_320_005_000_000[0], &aValues_002_320_005_000_000[0] );
   // Substitution set FeeCodeSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_320_005_003_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("810"),
      I_("811"),
      I_("812"),
      I_("815"),
      I_("816"),
      I_("142"),
      I_("143"),
      I_("120"),
      I_("212"),
      I_("213"),
      I_("79"),
      I_("81"),
      I_("38"),
      I_("69"),
      I_("700"),
      I_("701"),
      I_("62"),
      I_("63"),
      I_("200"),
      I_("181"),
      I_("182"),
      I_("705"),
      I_("706"),
      I_("220"),
      I_("221"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("154"),
      I_("155"),
      I_("156"),
      I_("820"),
      I_("601"),
      I_("602"),
      I_("85"),
      I_("86"),
      I_("600"),
      I_("87"),
      I_("94"),
      I_("97"),
      I_("707"),
      I_("708"),
      I_("93"),
      I_("604"),
      I_("122"),
      I_("123"),
      I_("133"),
      I_("134"),
      I_("29"),
      I_("98"),            
      I_("127"),            
      0x00
   };

   static const I_CHAR* aValues_002_320_005_003_000[] = {
      I_("8 - Commission de suivi"),
      I_("18 - Frais de gestion quotidiens"),
      I_("95 - Remise sur les frais de gestion"),
      I_("180 - Escompte sur les frais de gestion"),
      I_("1 - Commissions sur les frais d'achat"),
      I_("10 - Commission supplémentaire"),
      I_("101 - Retenue d'impôt étranger/national"),
      I_("102 - Retenue d'impôt sur le dividende"),
      I_("103 - Impôt de réunification"),
      I_("104 - Impôt de dépôt en espèces"),
      I_("105 - Impôt sur les bénéfices"),
      I_("107 - Retenue d'impôt sur le revenu du dividende des frais de gestion - nouvelle loi"),
      I_("11 - Frais de distribution"),
      I_("12 - Commissions maximales sur les frais d'achat/de rachat par défaut"),
      I_("13 - Rachat partiel REER"),
      I_("14 - Rachat total REER"),
      I_("15 - Rachat partiel FERR"),
      I_("16 - Rachat total FERR"),
      I_("17 - Frais SGP"),
      I_("19 - Reprise de commission - rachats"),
      I_("2 - Taux de retenue de commission"),
      I_("20 - Reprise de commission - transferts"),
      I_("21 - Récupération - échanges"),
      I_("22 - Commission sur l'échange"),
      I_("23 - Frais de transfert/d'échange"),
      I_("24 - Frais de répartition de l'actif global"),
      I_("25 - Commission de suivi du SGP"),
      I_("26 - Commission retenue"),
      I_("27 - Commission maximale au niveau du courtier"),
      I_("28 - 1/12 de 1 % des frais administratifs du portefeuille FAR"),
      I_("3 - Frais de rachat"),
      I_("30 - Impôt provincial"),
      I_("301 - Facteur de pourcentage du cours d'achat"),
      I_("302 - Facteur de pourcentage du cours de vente"),
      I_("31 - Impôt fédéral"),
      I_("32 - Frais administratifs d'achat"),
      I_("33 - Paiement de contrat d'achat"),
      I_("34 - Frais administratifs de rachat"),
      I_("35 - Frais administratifs de transfert"),
      I_("36 - Taxe sur la valeur ajoutée"),
      I_("37 - Frais de délivrance de certificat au porteur"),
      I_("39 - Frais de rachat anticipé"),
      I_("4 - Frais de transfert pour les transferts automatiques"),
      I_("40 - Niveau de frais - frais d'achat seulement"),
      I_("400 - Frais d'administration"),
      I_("401 - Frais de gestion annuels"),
      I_("41 - Frais de révocation d'enregistrement"),
      I_("47 - VUB initial"),
      I_("48 - VUB mensuel"),
      I_("49 - Frais d'échange entrant"),
      I_("5 - Frais d'administration REER"),
      I_("50 - Partage de comm. - achat direct"),
      I_("51 - Partage de comm. - achat électronique"),
      I_("52 - Partage de comm. - rachat direct"),
      I_("53 - Partage de comm. - rachat électronique"),
      I_("54 - Partage de comm. - réinvestir le dividende"),
      I_("55 - Partage de comm. - transfert entrant"),
      I_("56 - Partage de comm. - transfert sortant"),
      I_("57 - Partage de comm. - échange entrant"),
      I_("58 - Partage de comm. - échange sortant"),
      I_("59 - Seuil de commission"),
      I_("6 - Frais d'administration de REER autogéré"),
      I_("60 - Partage de comm. - entrée d'argent"),
      I_("61 - Partage de comm. - sortie d'argent"),
      I_("68 - Commission de suivi divisée"),
      I_("7 - Frais d'administration FERR"),
      I_("71 - Impôt provincial TPF"),
      I_("72 - Impôt fédéral TPF"),
      I_("73 - FAR TPF"),
      I_("74 - Frais TPF"),
      I_("75 - TPS TPF"),
      I_("76 - TVH"),
      I_("77 - TVP/TVQ"),
      I_("78 - Taxe sur les produits et services"),
      I_("80 - Commission de suivi - anciennes unités"),
      I_("801 - Commission de suivi - unités de pourcentage de frais"),
      I_("802 - Commission de suivi - unités matures"),
      I_("803 - Commission de suivi - unités sans frais de distribution de revenu"),
      I_("83 - Anciennes unités de commission de suivi (catégorie 2)"),
      I_("88 - Commission de reconduction de FERR/FRV/FRRI"),
      I_("89 - Commission de suivi - partage de commission"),
      I_("9 - Frais d'administration de FERR autogéré"),
      I_("100 - Taxe allemande"),
      I_("118 - Partie Viscount"),
      I_("44 - Frais d'échange sortant"),
      I_("340 - Frais de RA : frais de rachat anticipé"),
      I_("350 - Frais d'OCT : frais d'opérations à court terme"),
      I_("175 - Frais d'administration REEE"),
      I_("173 - Frais de retrait du régime REEE (partiel)"),
      I_("110 - Condition d'achat client"),
      I_("111 - Condition d'achat client de réinvestissement"),
      I_("112 - Frais de transaction d'achat"),
      I_("113 - Frais de transaction de rachat"),
      I_("114 - Frais externes globaux"),
      I_("115 - Commission globale"),
      I_("116 - Montant de la remise"),
      I_("810 - Taux de frais de gestion"),
      I_("811 - Frais de distribution"),
      I_("812 - Taux de partage de frais"),
      I_("815 - Unités bénéficiant d'une clause de droits acquis de commission de suivi"),
      I_("816 - Frais de garantie"),
      I_("142 - Taux FAR maximal"),
      I_("143 - Nombre d'années maximal du tableau FAR"),
      I_("120 - Frais de commission négociables"),
      I_("212 - Frais de tiers administrateur d'achat"),
      I_("213 - Frais de tiers administrateur de rachat"),
      I_("79 - Taux d'imposition de la modification des frais de gestion"),
      I_("81 - Taux d'imposition de la modification de la remise sur les frais de gestion"),
      I_("38 - Retenue d'impôt sur le dividende"),
      I_("69 - Commission supplémentaire de la force de vente"),
      I_("700 - Frais VMA IG"),
      I_("701 - Frais d'administration IG"),
      I_("62 - Récupération de commission"),
      I_("63 - Récupération APSF"),
      I_("200 - Frais de performance"),
      I_("181 - Écart positif de frais de gestion"),
      I_("182 - Écart négatif de frais de gestion"),
      I_("705 - Crédit de vente"),
      I_("706 - Récupération de crédit de vente"),
      I_("220 - Taux boni d'employé"),
      I_("221 - Taux boni d'agent"),
      I_("151 - Commission d'engagement"),
      I_("152 - Délai de tolérance"),
      I_("153 - Remboursement de frais"),
      I_("154 - Boni d'engagement"),
      I_("155 - Répartition d'engagement"),
      I_("156 - Répartition forfaitaire"),
      I_("820 - Commission"),
      I_("601 - Commission de roulement au décès"),
      I_("602 - Commission de roulement à la retraite"),
      I_("85 - MF QST Override Tax Rate"),
      I_("86 - MFR QST Override Tax  Rate"),
      I_("600 - Sales Force Additional Event Commission"),
      I_("87 - DF HST Override Tax Rate"),
      I_("94 - Dealer Service Fee"),
      I_("97 - DF QST OverrideTax Rate"),
      I_("707 - Commitment Sales Credit"),
      I_("708 - Sales Credit Grace Period"),
      I_("93 - Remboursement Commission du Service"),
      I_("604 - Commission on Switch to Payout Contract"),
      I_("122 - Achat Frais de propagation"),
      I_("123 - Rachat Commission de propagation"),
      I_("133 - Consumer Price Index - CPI"),
      I_("134 - Yearly Payout Factor"),
      I_("29 - Daily Interest Fund - Bonus Rate"),
      I_("98 - Floor MFR"),            
      I_("127 - Liquidity Redemption Fee"),            
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_005_003_000;
   const BFSubstitutionSet SubSet_002_320_005_003_000(
    &aKeys_002_320_005_003_000[0], &aValues_002_320_005_003_000[0] );
   // Substitution set FeeCodeSet.  Language: frCA, Market: 3, Client: 20
   static const I_CHAR* aKeys_002_320_005_003_020[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("810"),
      I_("811"),
      I_("812"),
      I_("815"),
      I_("816"),
      I_("142"),
      I_("143"),
      I_("120"),
      I_("212"),
      I_("213"),
      I_("79"),
      I_("81"),
      I_("38"),
      I_("69"),
      I_("700"),
      I_("701"),
      I_("62"),
      I_("63"),
      I_("200"),
      I_("181"),
      I_("182"),
      I_("705"),
      I_("706"),
      I_("220"),
      I_("221"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("154"),
      I_("155"),
      I_("156"),
      I_("820"),
      I_("601"),
      I_("602"),
      I_("85"),
      I_("86"),
      I_("600"),
      I_("87"),
      I_("94"),
      I_("97"),
      I_("707"),
      I_("708"),
      I_("93"),
      I_("604"),
      I_("122"),
      I_("123"),
      I_("133"),
      I_("134"),
      I_("29"),
      I_("98"),            
      I_("127"),            
      0x00
   };

   static const I_CHAR* aValues_002_320_005_003_020[] = {
      I_("8 - Commission de suivi"),
      I_("18 - Frais de gestion quotidiens"),
      I_("95 - Remise sur les frais de gestion"),
      I_("180 - Escompte sur les frais de gestion"),
      I_("1 - Commissions sur les frais d'achat"),
      I_("10 - Commission supplémentaire"),
      I_("101 - Retenue d'impôt étranger/national"),
      I_("102 - Retenue d'impôt sur le dividende"),
      I_("103 - Impôt de réunification"),
      I_("104 - Impôt de dépôt en espèces"),
      I_("105 - Impôt sur les bénéfices"),
      I_("107 - Retenue d'impôt sur le revenu du dividende des frais de gestion - nouvelle loi"),
      I_("11 - Frais de distribution"),
      I_("12 - Commissions maximales sur les frais d'achat/de rachat par défaut"),
      I_("13 - Rachat partiel REER"),
      I_("14 - Rachat total REER"),
      I_("15 - Rachat partiel FERR"),
      I_("16 - Rachat total FERR"),
      I_("17 - Frais SGP"),
      I_("19 - Reprise de commission - rachats"),
      I_("2 - Taux de retenue de commission"),
      I_("20 - Reprise de commission - transferts"),
      I_("21 - Récupération - échanges"),
      I_("22 - Commission sur l'échange"),
      I_("23 - Frais de transfert/d'échange"),
      I_("24 - Frais de répartition de l'actif global"),
      I_("25 - Commission de suivi du SGP"),
      I_("26 - Commission retenue"),
      I_("27 - Commission maximale au niveau du courtier"),
      I_("28 - 1/12 de 1 % des frais administratifs du portefeuille FAR"),
      I_("3 - Frais de rachat"),
      I_("30 - Capital Gain Withholding Tax"),
      I_("301 - Facteur de pourcentage du cours d'achat"),
      I_("302 - Facteur de pourcentage du cours de vente"),
      I_("31 - Impôt fédéral"),
      I_("32 - Frais administratifs d'achat"),
      I_("33 - Paiement de contrat d'achat"),
      I_("34 - Frais administratifs de rachat"),
      I_("35 - Frais administratifs de transfert"),
      I_("36 - Taxe sur la valeur ajoutée"),
      I_("37 - Frais de délivrance de certificat au porteur"),
      I_("39 - Frais de rachat anticipé"),
      I_("4 - Frais de transfert pour les transferts automatiques"),
      I_("40 - Niveau de frais - frais d'achat seulement"),
      I_("400 - Frais d'administration"),
      I_("401 - Frais de gestion annuels"),
      I_("41 - Frais de révocation d'enregistrement"),
      I_("47 - VUB initial"),
      I_("48 - VUB mensuel"),
      I_("49 - Frais d'échange entrant"),
      I_("5 - Frais d'administration REER"),
      I_("50 - Partage de comm. - achat direct"),
      I_("51 - Partage de comm. - achat électronique"),
      I_("52 - Partage de comm. - rachat direct"),
      I_("53 - Partage de comm. - rachat électronique"),
      I_("54 - Partage de comm. - réinvestir le dividende"),
      I_("55 - Partage de comm. - transfert entrant"),
      I_("56 - Partage de comm. - transfert sortant"),
      I_("57 - Partage de comm. - échange entrant"),
      I_("58 - Partage de comm. - échange sortant"),
      I_("59 - Seuil de commission"),
      I_("6 - Frais d'administration de REER autogéré"),
      I_("60 - Partage de comm. - entrée d'argent"),
      I_("61 - Partage de comm. - sortie d'argent"),
      I_("68 - Commission de suivi divisée"),
      I_("7 - Frais d'administration FERR"),
      I_("71 - Impôt provincial TPF"),
      I_("72 - Impôt fédéral TPF"),
      I_("73 - FAR TPF"),
      I_("74 - Frais TPF"),
      I_("75 - TPS TPF"),
      I_("76 - TVH"),
      I_("77 - TVP/TVQ"),
      I_("78 - Taxe sur les produits et services"),
      I_("80 - Commission de suivi - anciennes unités"),
      I_("801 - Commission de suivi - unités de pourcentage de frais"),
      I_("802 - Commission de suivi - unités matures"),
      I_("803 - Commission de suivi - unités sans frais de distribution de revenu"),
      I_("83 - Anciennes unités de commission de suivi (catégorie 2)"),
      I_("88 - Commission de reconduction de FERR/FRV/FRRI"),
      I_("89 - Commission de suivi - partage de commission"),
      I_("9 - Frais d'administration de FERR autogéré"),
      I_("100 - Taxe allemande"),
      I_("118 - Partie Viscount"),
      I_("44 - Frais d'échange sortant"),
      I_("340 - Frais de RA : frais de rachat anticipé"),
      I_("350 - Frais d'OCT : frais d'opérations à court terme"),
      I_("175 - Frais d'administration REEE"),
      I_("173 - Frais de retrait du régime REEE (partiel)"),
      I_("110 - Condition d'achat client"),
      I_("111 - Condition d'achat client de réinvestissement"),
      I_("112 - Frais de transaction d'achat"),
      I_("113 - Frais de transaction de rachat"),
      I_("114 - Frais externes globaux"),
      I_("115 - Commission globale"),
      I_("116 - Montant de la remise"),
      I_("810 - Taux de frais de gestion"),
      I_("811 - Frais de distribution"),
      I_("812 - Taux de partage de frais"),
      I_("815 - Unités bénéficiant d'une clause de droits acquis de commission de suivi"),
      I_("816 - Frais de garantie"),
      I_("142 - Taux FAR maximal"),
      I_("143 - Nombre d'années maximal du tableau FAR"),
      I_("120 - Frais de commission négociables"),
      I_("212 - Frais de tiers administrateur d'achat"),
      I_("213 - Frais de tiers administrateur de rachat"),
      I_("79 - Taux d'imposition de la modification des frais de gestion"),
      I_("81 - Taux d'imposition de la modification de la remise sur les frais de gestion"),
      I_("38 - Retenue d'impôt sur le dividende"),
      I_("69 - Commission supplémentaire de la force de vente"),
      I_("700 - Frais VMA IG"),
      I_("701 - Frais d'administration IG"),
      I_("62 - Récupération de commission"),
      I_("63 - Récupération APSF"),
      I_("200 - Frais de performance"),
      I_("181 - Écart positif de frais de gestion"),
      I_("182 - Écart négatif de frais de gestion"),
      I_("705 - Crédit de vente"),
      I_("706 - Récupération de crédit de vente"),
      I_("220 - Taux boni d'employé"),
      I_("221 - Taux boni d'agent"),
      I_("151 - Commission d'engagement"),
      I_("152 - Délai de tolérance"),
      I_("153 - Remboursement de frais"),
      I_("154 - Boni d'engagement"),
      I_("155 - Répartition d'engagement"),
      I_("156 - Répartition forfaitaire"),
      I_("820 - Commission"),
      I_("601 - Commission de roulement au décès"),
      I_("602 - Commission de roulement à la retraite"),
      I_("85 - MF QST Override Tax Rate"),
      I_("86 - MFR QST Override Tax  Rate"),
      I_("600 - Sales Force Additional Event Commission"),
      I_("87 - DF HST Override Tax Rate"),
      I_("94 - Dealer Service Fee"),
      I_("97 - DF QST OverrideTax Rate"),
      I_("707 - Commitment Sales Credit"),
      I_("708 - Sales Credit Grace Period"),
      I_("93 - Remboursement Commission du Service"),
      I_("604 - Commission on Switch to Payout Contract"),
      I_("122 - Achat Frais de propagation"),
      I_("123 - Rachat Commission de propagation"),
      I_("133 - Consumer Price Index - CPI"),
      I_("134 - Yearly Payout Factor"),
      I_("29 - Daily Interest Fund - Bonus Rate"),
      I_("98 - Floor MFR"),            
      I_("127 - Liquidity Redemption Fee"),            
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_005_003_020;
   const BFSubstitutionSet SubSet_002_320_005_003_020(
    &aKeys_002_320_005_003_020[0], &aValues_002_320_005_003_020[0] );
   // Substitution set FeeCodeSet.  Language: frCA, Market: 4
   static const I_CHAR* aKeys_002_320_005_004_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("810"),
      I_("811"),
      I_("812"),
      I_("815"),
      I_("816"),
      I_("142"),
      I_("143"),
      I_("120"),
      I_("212"),
      I_("213"),
      I_("79"),
      I_("81"),
      I_("38"),
      I_("69"),
      I_("700"),
      I_("701"),
      I_("62"),
      I_("63"),
      I_("200"),
      I_("181"),
      I_("182"),
      I_("705"),
      I_("706"),
      I_("220"),
      I_("221"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("154"),
      I_("155"),
      I_("156"),
      I_("820"),
      I_("601"),
      I_("602"),
      I_("85"),
      I_("86"),
      I_("600"),
      I_("87"),
      I_("94"),
      I_("97"),
      I_("707"),
      I_("708"),
      I_("93"),
      I_("604"),
      I_("122"),
      I_("123"),
      I_("133"),
      I_("134"),
      I_("29"),
      I_("98"),
      I_("127"),            
      0x00
   };

   static const I_CHAR* aValues_002_320_005_004_000[] = {
      I_("8 - Commission de suivi"),
      I_("18 - Frais de gestion quotidiens"),
      I_("95 - Remise sur les frais de gestion"),
      I_("180 - Escompte sur les frais de gestion"),
      I_("1 - Commissions sur les frais d'achat"),
      I_("10 - Commission supplémentaire"),
      I_("101 - Retenue d'impôt étranger/national"),
      I_("102 - Retenue d'impôt sur le dividende"),
      I_("103 - Impôt de réunification"),
      I_("104 - Impôt de dépôt en espèces"),
      I_("105 - Impôt sur les bénéfices"),
      I_("107 - Retenue d'impôt sur le revenu du dividende des frais de gestion - nouvelle loi"),
      I_("11 - Frais de distribution"),
      I_("12 - Commissions maximales sur les frais d'achat/de rachat par défaut"),
      I_("13 - Rachat partiel REER"),
      I_("14 - Rachat total REER"),
      I_("15 - Rachat partiel FERR"),
      I_("16 - Rachat total FERR"),
      I_("17 - Frais SGP"),
      I_("19 - Reprise de commission - rachats"),
      I_("2 - Taux de retenue de commission"),
      I_("20 - Reprise de commission - transferts"),
      I_("21 - Récupération - échanges"),
      I_("22 - Commission sur l'échange"),
      I_("23 - Frais de transfert/d'échange"),
      I_("24 - Frais de répartition de l'actif global"),
      I_("25 - Commission de suivi du SGP"),
      I_("26 - Commission retenue"),
      I_("27 - Commission maximale au niveau du courtier"),
      I_("28 - 1/12 de 1 % des frais administratifs du portefeuille FAR"),
      I_("3 - Frais de rachat"),
      I_("30 - Impôt provincial"),
      I_("301 - Facteur de pourcentage du cours d'achat"),
      I_("302 - Facteur de pourcentage du cours de vente"),
      I_("31 - Impôt fédéral"),
      I_("32 - Frais administratifs d'achat"),
      I_("33 - Paiement de contrat d'achat"),
      I_("34 - Frais administratifs de rachat"),
      I_("35 - Frais administratifs de transfert"),
      I_("36 - Taxe sur la valeur ajoutée"),
      I_("37 - Frais de délivrance de certificat au porteur"),
      I_("39 - Frais de rachat anticipé"),
      I_("4 - Frais de transfert pour les transferts automatiques"),
      I_("40 - Niveau de frais - frais d'achat seulement"),
      I_("400 - Frais d'administration"),
      I_("401 - Frais de gestion annuels"),
      I_("41 - Frais de révocation d'enregistrement"),
      I_("47 - VUB initial"),
      I_("48 - VUB mensuel"),
      I_("49 - Frais d'échange entrant"),
      I_("5 - Frais d'administration REER"),
      I_("50 - Partage de comm. - achat direct"),
      I_("51 - Partage de comm. - achat électronique"),
      I_("52 - Partage de comm. - rachat direct"),
      I_("53 - Partage de comm. - rachat électronique"),
      I_("54 - Partage de comm. - réinvestir le dividende"),
      I_("55 - Partage de comm. - transfert entrant"),
      I_("56 - Partage de comm. - transfert sortant"),
      I_("57 - Partage de comm. - échange entrant"),
      I_("58 - Partage de comm. - échange sortant"),
      I_("59 - Seuil de commission"),
      I_("6 - Frais d'administration de REER autogéré"),
      I_("60 - Partage de comm. - entrée d'argent"),
      I_("61 - Partage de comm. - sortie d'argent"),
      I_("68 - Commission de suivi divisée"),
      I_("7 - Frais d'administration FERR"),
      I_("71 - Impôt provincial TPF"),
      I_("72 - Impôt fédéral TPF"),
      I_("73 - FAR TPF"),
      I_("74 - Frais TPF"),
      I_("75 - TPS TPF"),
      I_("76 - TVH"),
      I_("77 - TVP/TVQ"),
      I_("78 - Taxe sur les produits et services"),
      I_("80 - Commission de suivi - anciennes unités"),
      I_("801 - Commission de suivi - unités de pourcentage de frais"),
      I_("802 - Commission de suivi - unités matures"),
      I_("803 - Commission de suivi - unités sans frais de distribution de revenu"),
      I_("83 - Anciennes unités de commission de suivi (catégorie 2)"),
      I_("88 - Commission de reconduction de FERR/FRV/FRRI"),
      I_("89 - Commission de suivi - partage de commission"),
      I_("9 - Frais d'administration de FERR autogéré"),
      I_("100 - Taxe allemande"),
      I_("118 - Partie Viscount"),
      I_("44 - Frais d'échange sortant"),
      I_("340 - Frais de RA : frais de rachat anticipé"),
      I_("350 - Frais d'OCT : frais d'opérations à court terme"),
      I_("175 - Frais d'administration REEE"),
      I_("173 - Frais de retrait du régime REEE (partiel)"),
      I_("110 - Condition d'achat client"),
      I_("111 - Condition d'achat client de réinvestissement"),
      I_("112 - Frais de transaction d'achat"),
      I_("113 - Frais de transaction de rachat"),
      I_("114 - Frais externes globaux"),
      I_("115 - Commission globale"),
      I_("116 - Montant de la remise"),
      I_("810 - Taux de frais de gestion"),
      I_("811 - Frais de distribution"),
      I_("812 - Taux de partage de frais"),
      I_("815 - Unités bénéficiant d'une clause de droits acquis de commission de suivi"),
      I_("816 - Frais de garantie"),
      I_("142 - Taux FAR maximal"),
      I_("143 - Nombre d'années maximal du tableau FAR"),
      I_("120 - Frais de commission négociables"),
      I_("212 - Frais de tiers administrateur d'achat"),
      I_("213 - Frais de tiers administrateur de rachat"),
      I_("79 - Taux d'imposition de la modification des frais de gestion"),
      I_("81 - Taux d'imposition de la modification de la remise sur les frais de gestion"),
      I_("38 - Retenue d'impôt sur le dividende"),
      I_("69 - Commission supplémentaire de la force de vente"),
      I_("700 - Frais VMA IG"),
      I_("701 - Frais d'administration IG"),
      I_("62 - Récupération de commission"),
      I_("63 - Récupération APSF"),
      I_("200 - Frais de performance"),
      I_("181 - Écart positif de frais de gestion"),
      I_("182 - Écart négatif de frais de gestion"),
      I_("705 - Crédit de vente"),
      I_("706 - Récupération de crédit de vente"),
      I_("220 - Taux boni d'employé"),
      I_("221 - Taux boni d'agent"),
      I_("151 - Commission d'engagement"),
      I_("152 - Délai de tolérance"),
      I_("153 - Remboursement de frais"),
      I_("154 - Boni d'engagement"),
      I_("155 - Répartition d'engagement"),
      I_("156 - Répartition forfaitaire"),
      I_("820 - Commission"),
      I_("601 - Commission de roulement au décès"),
      I_("602 - Commission de roulement à la retraite"),
      I_("85 - MF QST Override Tax Rate"),
      I_("86 - MFR QST Override Tax  Rate"),
      I_("600 - Sales Force Additional Event Commission"),
      I_("87 - DF HST Override Tax Rate"),
      I_("94 - Dealer Service Fee"),
      I_("97 - DF QST OverrideTax Rate"),
      I_("707 - Commitment Sales Credit"),
      I_("708 - Sales Credit Grace Period"),
      I_("93 - Remboursement Commission du Service"),
      I_("604 - Commission on Switch to Payout Contract"),
      I_("122 - Achat Frais de propagation"),
      I_("123 - Rachat Commission de propagation"),
      I_("133 - Consumer Price Index - CPI"),
      I_("134 - Yearly Payout Factor"),
      I_("29 - Daily Interest Fund - Bonus Rate"),
      I_("98 - Floor MFR"),
      I_("127 - Liquidity Redemption Fee"),            
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_005_004_000;
   const BFSubstitutionSet SubSet_002_320_005_004_000(
    &aKeys_002_320_005_004_000[0], &aValues_002_320_005_004_000[0] );
   // Substitution set FeeCodeSet.  Language: enIE
   static const I_CHAR* aKeys_002_320_006_000_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("98"),
      0x00
   };

   static const I_CHAR* aValues_002_320_006_000_000[] = {
      I_("Trailer Fee"),
      I_("Daily  Mgmt Fee"),
      I_("Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("98 - Floor MFR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_006_000_000;
   const BFSubstitutionSet SubSet_002_320_006_000_000(
    &aKeys_002_320_006_000_000[0], &aValues_002_320_006_000_000[0] );
   // Substitution set FeeCodeSet.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_320_006_003_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("98"),            
      0x00
   };

   static const I_CHAR* aValues_002_320_006_003_000[] = {
      I_("Trailer Fee"),
      I_("Daily  Mgmt Fee"),
      I_("Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("98 - Floor MFR"),            
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_006_003_000;
   const BFSubstitutionSet SubSet_002_320_006_003_000(
    &aKeys_002_320_006_003_000[0], &aValues_002_320_006_003_000[0] );
   // Substitution set FeeCodeSet.  Language: enIE, Market: 3, Client: 20
   static const I_CHAR* aKeys_002_320_006_003_020[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("30"),
      I_("98"),            
      0x00
   };

   static const I_CHAR* aValues_002_320_006_003_020[] = {
      I_("Trailer Fee"),
      I_("Daily  Mgmt Fee"),
      I_("Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("30 - Capital Gain Withholding Tax"),
      I_("98 - Floor MFR"),            
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_006_003_020;
   const BFSubstitutionSet SubSet_002_320_006_003_020(
    &aKeys_002_320_006_003_020[0], &aValues_002_320_006_003_020[0] );
   // Substitution set FeeCodeSet.  Language: enIE, Market: 4
   static const I_CHAR* aKeys_002_320_006_004_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("98"),
      0x00
   };

   static const I_CHAR* aValues_002_320_006_004_000[] = {
      I_("Trailer Fee"),
      I_("Daily  Mgmt Fee"),
      I_("Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("98 - Floor MFR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_006_004_000;
   const BFSubstitutionSet SubSet_002_320_006_004_000(
    &aKeys_002_320_006_004_000[0], &aValues_002_320_006_004_000[0] );
   // Substitution set FeeCodeSet.  Language: deDE
   static const I_CHAR* aKeys_002_320_007_000_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("810"),
      I_("811"),
      I_("812"),
      I_("815"),
      I_("30"),
      I_("122"),
      I_("123"),
      I_("98"),
      I_("127"),
      0x00
   };

   static const I_CHAR* aValues_002_320_007_000_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("26 - Holding Commission"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Provincial Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("110 - Purchase Client Condition"),
      I_("111 - Reinvest Purchase Client Condtion"),
      I_("112 - Purchase Transaction Fee"),
      I_("113 - Redemption Transaction Fee"),
      I_("114 - Aggregated External Charge"),
      I_("115 - Aggregated Commission"),
      I_("116 - Rebate Amount"),
      I_("810 - Management Expense Rate"),
      I_("811 - Distribution Fee"),
      I_("812 - Fee Sharing Rate"),
      I_("815 - Trailer Fees Grandfathered Units"),
      I_("30 - Provincial Tax"),
      I_("122 - Purchase Spread Fee"),
      I_("123 - Redemption Spread Fee"),
      I_("98 - Floor MFR"),
      I_("127 - Liquidity Redemption Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_007_000_000;
   const BFSubstitutionSet SubSet_002_320_007_000_000(
    &aKeys_002_320_007_000_000[0], &aValues_002_320_007_000_000[0] );
   // Substitution set FeeCodeSet.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_320_007_003_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("810"),
      I_("811"),
      I_("812"),
      I_("815"),
      I_("122"),
      I_("123"),
      I_("98"),
      I_("127"),
      0x00
   };

   static const I_CHAR* aValues_002_320_007_003_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("26 - Holding Commission"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Provincial Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("110 - Purchase Client Condition"),
      I_("111 - Reinvest Purchase Client Condtion"),
      I_("112 - Purchase Transaction Fee"),
      I_("113 - Redemption Transaction Fee"),
      I_("114 - Aggregated External Charge"),
      I_("115 - Aggregated Commission"),
      I_("116 - Rebate Amount"),
      I_("810 - Management Expense Rate"),
      I_("811 - Distribution Fee"),
      I_("812 - Fee Sharing Rate"),
      I_("815 - Trailer Fees Grandfathered Units"),
      I_("122 - Purchase Spread Fee"),
      I_("123 - Redemption Spread Fee"),
      I_("98 - Floor MFR"),
      I_("127 - Liquidity Redemption Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_007_003_000;
   const BFSubstitutionSet SubSet_002_320_007_003_000(
    &aKeys_002_320_007_003_000[0], &aValues_002_320_007_003_000[0] );
   // Substitution set FeeCodeSet.  Language: deDE, Market: 3, Client: 20
   static const I_CHAR* aKeys_002_320_007_003_020[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("810"),
      I_("811"),
      I_("812"),
      I_("815"),
      I_("122"),
      I_("123"),
      I_("98"),
      I_("127"), 
      0x00
   };

   static const I_CHAR* aValues_002_320_007_003_020[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("26 - Holding Commission"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Capital Gain Withholding Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("110 - Purchase Client Condition"),
      I_("111 - Reinvest Purchase Client Condtion"),
      I_("112 - Purchase Transaction Fee"),
      I_("113 - Redemption Transaction Fee"),
      I_("114 - Aggregated External Charge"),
      I_("115 - Aggregated Commission"),
      I_("116 - Rebate Amount"),
      I_("810 - Management Expense Rate"),
      I_("811 - Distribution Fee"),
      I_("812 - Fee Sharing Rate"),
      I_("815 - Trailer Fees Grandfathered Units"),
      I_("122 - Purchase Spread Fee"),
      I_("123 - Redemption Spread Fee"),
      I_("98 - Floor MFR"), 
      I_("127 - Liquidity Redemption Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_007_003_020;
   const BFSubstitutionSet SubSet_002_320_007_003_020(
    &aKeys_002_320_007_003_020[0], &aValues_002_320_007_003_020[0] );
   // Substitution set FeeCodeSet.  Language: deDE, Market: 4
   static const I_CHAR* aKeys_002_320_007_004_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("810"),
      I_("811"),
      I_("812"),
      I_("815"),
      I_("122"),
      I_("123"),
      I_("98"), 
      I_("127"), 
      0x00
   };

   static const I_CHAR* aValues_002_320_007_004_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("26 - Holding Commission"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Provincial Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("110 - Purchase Client Condition"),
      I_("111 - Reinvest Purchase Client Condtion"),
      I_("112 - Purchase Transaction Fee"),
      I_("113 - Redemption Transaction Fee"),
      I_("114 - Aggregated External Charge"),
      I_("115 - Aggregated Commission"),
      I_("116 - Rebate Amount"),
      I_("810 - Management Expense Rate"),
      I_("811 - Distribution Fee"),
      I_("812 - Fee Sharing Rate"),
      I_("815 - Trailer Fees Grandfathered Units"),
      I_("122 - Purchase Spread Fee"),
      I_("123 - Redemption Spread Fee"),
      I_("98 - Floor MFR"), 
      I_("127 - Liquidity Redemption Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_007_004_000;
   const BFSubstitutionSet SubSet_002_320_007_004_000(
    &aKeys_002_320_007_004_000[0], &aValues_002_320_007_004_000[0] );
   // Substitution set FeeCodeSet.  Language: esEs
   static const I_CHAR* aKeys_002_320_008_000_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("30"),
      I_("98"),
      0x00
   };

   static const I_CHAR* aValues_002_320_008_000_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Provincial Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("30 - Provincial Tax"),
      I_("98 - Floor MFR"),
        0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_008_000_000;
   const BFSubstitutionSet SubSet_002_320_008_000_000(
    &aKeys_002_320_008_000_000[0], &aValues_002_320_008_000_000[0] );
   // Substitution set FeeCodeSet.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_320_008_003_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("98"),
      0x00
   };

   static const I_CHAR* aValues_002_320_008_003_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Provincial Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("98 - Floor MFR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_008_003_000;
   const BFSubstitutionSet SubSet_002_320_008_003_000(
    &aKeys_002_320_008_003_000[0], &aValues_002_320_008_003_000[0] );
   // Substitution set FeeCodeSet.  Language: esEs, Market: 3, Client: 20
   static const I_CHAR* aKeys_002_320_008_003_020[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("98"),            
      0x00
   };

   static const I_CHAR* aValues_002_320_008_003_020[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Capital Gain Withholding Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("98 - Floor MFR"),            
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_008_003_020;
   const BFSubstitutionSet SubSet_002_320_008_003_020(
    &aKeys_002_320_008_003_020[0], &aValues_002_320_008_003_020[0] );
   // Substitution set FeeCodeSet.  Language: esEs, Market: 4
   static const I_CHAR* aKeys_002_320_008_004_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("98"),
      0x00
   };

   static const I_CHAR* aValues_002_320_008_004_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load Commisions"),
      I_("10 - Extra Commission"),
      I_("101 - Foreign/Domestic Withholding Tax"),
      I_("102 - Dividend Withholding Tax"),
      I_("103 - Reunification Tax"),
      I_("104 - Cash Deposit Tax"),
      I_("105 - Corporation Tax"),
      I_("107 - WH Tax for Div Income from MF - New Law"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximum FEL/Default BEL commissions"),
      I_("13 - RRSP partial redemption"),
      I_("14 - RRSP full redemption"),
      I_("15 - RRIF partial redempton"),
      I_("16 - RRIF full redemption"),
      I_("17 - Asset Management Service Fee"),
      I_("19 - Commission Recovery - Redemptions"),
      I_("2 - Commission With-hold Rate"),
      I_("20 - Commission Recovery - Transfers"),
      I_("21 - Clawback - Exchanges"),
      I_("22 - Exchange Commission"),
      I_("23 - Transfer/Exchange Fee"),
      I_("24 - Global Asset Alloc Fee"),
      I_("25 - AMS Trailer Fee"),
      I_("27 - Broker Level Maximum Commission"),
      I_("28 - 1/12th of 1% DSC Holdings Admin Fee"),
      I_("3 - Back End Load Fees"),
      I_("30 - Provincial Tax"),
      I_("301 - Bid Price % Factor"),
      I_("302 - Offer Price % Factor"),
      I_("31 - Federal Tax"),
      I_("32 - Purchase Admin Fee"),
      I_("33 - Purchase Contract Payment"),
      I_("34 - Redemption Admin Fee"),
      I_("35 - Transfer Admin Fee"),
      I_("36 - Value Added Tax"),
      I_("37 - Bearer certificate delivery fee"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Transfer Fee For Auto Transfers"),
      I_("40 - Level Load-FEL Only"),
      I_("400 - Administration Fee"),
      I_("401 - Annual Management Fee"),
      I_("41 - De-Registration Fee"),
      I_("47 - Initial VUB"),
      I_("48 - Monthly VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - RRSP Admin Fee"),
      I_("50 - Split Commission - Direct Purchase"),
      I_("51 - Split Commission - Electronic Purchase"),
      I_("52 - Split Commission - Direct Redemption"),
      I_("53 - Split Commission - Electronic Redemption"),
      I_("54 - Split Commission - Reinvest Dividend"),
      I_("55 - Split Commission - Transfer In"),
      I_("56 - Split Commission - Transfer Out"),
      I_("57 - Split Commission - Exchange In"),
      I_("58 - Split Commission - Exchange Out"),
      I_("59 - Commision Threshold"),
      I_("6 - SDRRSP admin fee"),
      I_("60 - Split Commission - Money In"),
      I_("61 - Split Commission - Money Out"),
      I_("68 - Split Trailer Fee"),
      I_("7 - RRIF Admin Fee"),
      I_("71 - TPF Provtax"),
      I_("72 - TPF Fedtax"),
      I_("73 - TPF DSC"),
      I_("74 - TPF Fees"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Good and Service Tax"),
      I_("80 - Trailer Fees - Old Units"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - RRIF/LIF/LRIF Rollover Commission"),
      I_("89 - Trailer Fee - Split Commission"),
      I_("9 - SDRRIF Admin Fee"),
      I_("100 - German Tax"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("98 - Floor MFR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_008_004_000;
   const BFSubstitutionSet SubSet_002_320_008_004_000(
    &aKeys_002_320_008_004_000[0], &aValues_002_320_008_004_000[0] );
   // Substitution set FeeCodeSet.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_320_009_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_320_009_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_009_003_000;
   const BFSubstitutionSet SubSet_002_320_009_003_000(
    &aKeys_002_320_009_003_000[0], &aValues_002_320_009_003_000[0] );
   // Substitution set FeeCodeSet.  Language: enGB, Market: 3, Client: 20
   static const I_CHAR* aKeys_002_320_009_003_020[] = {
      I_("30"),
      0x00
   };

   static const I_CHAR* aValues_002_320_009_003_020[] = {
      I_("30 - Capital Gain Withholding Tax"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_009_003_020;
   const BFSubstitutionSet SubSet_002_320_009_003_020(
    &aKeys_002_320_009_003_020[0], &aValues_002_320_009_003_020[0] );
   // Substitution set FeeCodeSet.  Language: enGB, Market: 4
   static const I_CHAR* aKeys_002_320_009_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_320_009_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_009_004_000;
   const BFSubstitutionSet SubSet_002_320_009_004_000(
    &aKeys_002_320_009_004_000[0], &aValues_002_320_009_004_000[0] );
   // Substitution set FeeCodeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_320_010_000_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("30"),
      I_("122"),
      I_("123"),
      I_("98"),
      I_("127"),
      0x00
   };

   static const I_CHAR* aValues_002_320_010_000_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load-commissies"),
      I_("10 - Extra commissie"),
      I_("101 - Buitenlandse/binnenlandse bronbelasting"),
      I_("102 - Bronbelasting dividend"),
      I_("103 - Herenigingsbelasting"),
      I_("104 - Belasting contantdeposito"),
      I_("105 - Vennootschapsbelasting"),
      I_("107 - Bronbelasting voor dividendinkomen van geldmarktfonds - nieuwe wet"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximaal FEL-/standaard BEL-commissies"),
      I_("13 - Gedeeltelijke aflossing RRSP"),
      I_("14 - Volledige aflossing RRSP"),
      I_("15 - RRIF partial redempton"),
      I_("16 - Volledige aflossing RRIF"),
      I_("17 - Servicekosten vermogensbeheer"),
      I_("19 - Commissieherstel - Aflossingen"),
      I_("2 - Inhoudingspercentage commissie"),
      I_("20 - Commissieherstel - Overdrachten"),
      I_("21 - Clawback - Ruiltransacties"),
      I_("22 - Ruilcommissie"),
      I_("23 - Kosten overdracht/ruil"),
      I_("24 - Algemene kosten vermogensallocatie"),
      I_("25 - Kosten BBD-verkoopbonus"),
      I_("27 - Maximale commissie makelaarsniveau"),
      I_("28 - 1/12 van 1% beheerkosten OVK-vermogens"),
      I_("3 - Kosten Back End Load"),
      I_("30 - Provincial Tax"),
      I_("301 - Biedprijs % factor"),
      I_("302 - Offerteprijs % factor"),
      I_("31 - Federal Tax"),
      I_("32 - Administratiekosten aankoop"),
      I_("33 - Betaling aankoopovereenkomst"),
      I_("34 - Administratiekosten aflossing"),
      I_("35 - Administratiekosten overdracht"),
      I_("36 - BTW"),
      I_("37 - Leveringskosten certificaten aan toonder"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Overdrachtskosten voor automatische overdrachten"),
      I_("40 - Uitsluitend Level Load-FEL"),
      I_("400 - Administration Fee"),
      I_("401 - Jaarlijkse beheerskosten"),
      I_("41 - Kosten registratie annuleren"),
      I_("47 - Eerste VUB"),
      I_("48 - Maandelijkse VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - Beheerkosten RRSP"),
      I_("50 - Gedeelde commissie - Directe aankoop"),
      I_("51 - Gedeelde commissie - Elektronische aankoop"),
      I_("52 - Gedeelde commissie - Directe aflossing"),
      I_("53 - Gedeelde commissie - Elektronische aflossing"),
      I_("54 - Gedeelde commissie - Dividend opnieuw beleggen"),
      I_("55 - Gedeelde commissie - Overdracht in"),
      I_("56 - Gedeelde commissie - Overdracht uit"),
      I_("57 - Gedeelde commissie ? Ruil binnen"),
      I_("58 - Gedeelde commissie ? Ruil buiten"),
      I_("59 - Commision Threshold"),
      I_("6 - SDBeheerkosten RRSP"),
      I_("60 - Gedeelde commissie - Geld in"),
      I_("61 - Gedeelde commissie - Geld uit"),
      I_("68 - Kosten gesplitste verkoopbonus"),
      I_("7 - Beheerkosten RRIF "),
      I_("71 - Provinciebelasting TPF"),
      I_("72 - Federale belasting TPF"),
      I_("73 - TPF OVK"),
      I_("74 - TPF-kosten"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Belasting over goederen en diensten"),
      I_("80 - Kosten verkoopbonus - Oud"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - Prolongatiecommissie RRIF/LIF/LRIF "),
      I_("89 - Kosten verkoopbonus - gedeelde commissie"),
      I_("9 - SDBeheerkosten RRIF "),
      I_("100 - Duitse belasting"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("110 - Purchase Client Condition"),
      I_("111 - Reinvest Purchase Client Condtion"),
      I_("112 - Purchase Transaction Fee"),
      I_("113 - Redemption Transaction Fee"),
      I_("30 - Provincial Tax"),
      I_("122 - Purchase Spread Fee"),
      I_("123 - Redemption Spread Fee"),
      I_("98 - Floor MFR"),
      I_("127 - Liquidity Redemption Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_010_000_000;
   const BFSubstitutionSet SubSet_002_320_010_000_000(
    &aKeys_002_320_010_000_000[0], &aValues_002_320_010_000_000[0] );
   // Substitution set FeeCodeSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_320_010_003_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("122"),
      I_("123"),
      I_("98"),   
      I_("127"),   
      0x00
   };

   static const I_CHAR* aValues_002_320_010_003_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load-commissies"),
      I_("10 - Extra commissie"),
      I_("101 - Buitenlandse/binnenlandse bronbelasting"),
      I_("102 - Bronbelasting dividend"),
      I_("103 - Herenigingsbelasting"),
      I_("104 - Belasting contantdeposito"),
      I_("105 - Vennootschapsbelasting"),
      I_("107 - Bronbelasting voor dividendinkomen van geldmarktfonds - nieuwe wet"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximaal FEL-/standaard BEL-commissies"),
      I_("13 - Gedeeltelijke aflossing RRSP"),
      I_("14 - Volledige aflossing RRSP"),
      I_("15 - RRIF partial redempton"),
      I_("16 - Volledige aflossing RRIF"),
      I_("17 - Servicekosten vermogensbeheer"),
      I_("19 - Commissieherstel - Aflossingen"),
      I_("2 - Inhoudingspercentage commissie"),
      I_("20 - Commissieherstel - Overdrachten"),
      I_("21 - Clawback - Ruiltransacties"),
      I_("22 - Ruilcommissie"),
      I_("23 - Kosten overdracht/ruil"),
      I_("24 - Algemene kosten vermogensallocatie"),
      I_("25 - Kosten BBD-verkoopbonus"),
      I_("27 - Maximale commissie makelaarsniveau"),
      I_("28 - 1/12 van 1% beheerkosten OVK-vermogens"),
      I_("3 - Kosten Back End Load"),
      I_("30 - Provincial Tax"),
      I_("301 - Biedprijs % factor"),
      I_("302 - Offerteprijs % factor"),
      I_("31 - Federal Tax"),
      I_("32 - Administratiekosten aankoop"),
      I_("33 - Betaling aankoopovereenkomst"),
      I_("34 - Administratiekosten aflossing"),
      I_("35 - Administratiekosten overdracht"),
      I_("36 - BTW"),
      I_("37 - Leveringskosten certificaten aan toonder"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Overdrachtskosten voor automatische overdrachten"),
      I_("40 - Uitsluitend Level Load-FEL"),
      I_("400 - Administration Fee"),
      I_("401 - Jaarlijkse beheerskosten"),
      I_("41 - Kosten registratie annuleren"),
      I_("47 - Eerste VUB"),
      I_("48 - Maandelijkse VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - Beheerkosten RRSP"),
      I_("50 - Gedeelde commissie - Directe aankoop"),
      I_("51 - Gedeelde commissie - Elektronische aankoop"),
      I_("52 - Gedeelde commissie - Directe aflossing"),
      I_("53 - Gedeelde commissie - Elektronische aflossing"),
      I_("54 - Gedeelde commissie - Dividend opnieuw beleggen"),
      I_("55 - Gedeelde commissie - Overdracht in"),
      I_("56 - Gedeelde commissie - Overdracht uit"),
      I_("57 - Gedeelde commissie ? Ruil binnen"),
      I_("58 - Gedeelde commissie ? Ruil buiten"),
      I_("59 - Commision Threshold"),
      I_("6 - SDBeheerkosten RRSP"),
      I_("60 - Gedeelde commissie - Geld in"),
      I_("61 - Gedeelde commissie - Geld uit"),
      I_("68 - Kosten gesplitste verkoopbonus"),
      I_("7 - Beheerkosten RRIF "),
      I_("71 - Provinciebelasting TPF"),
      I_("72 - Federale belasting TPF"),
      I_("73 - TPF OVK"),
      I_("74 - TPF-kosten"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Belasting over goederen en diensten"),
      I_("80 - Kosten verkoopbonus - Oud"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - Prolongatiecommissie RRIF/LIF/LRIF "),
      I_("89 - Kosten verkoopbonus - gedeelde commissie"),
      I_("9 - SDBeheerkosten RRIF "),
      I_("100 - Duitse belasting"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("110 - Purchase Client Condition"),
      I_("111 - Reinvest Purchase Client Condtion"),
      I_("112 - Purchase Transaction Fee"),
      I_("113 - Redemption Transaction Fee"),
      I_("122 - Purchase Spread Fee"),
      I_("123 - Redemption Spread Fee"),
      I_("98 - Floor MFR"),  
      I_("127 - Liquidity Redemption Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_010_003_000;
   const BFSubstitutionSet SubSet_002_320_010_003_000(
    &aKeys_002_320_010_003_000[0], &aValues_002_320_010_003_000[0] );
   // Substitution set FeeCodeSet.  Language: nlNL, Market: 3, Client: 20
   static const I_CHAR* aKeys_002_320_010_003_020[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("122"),
      I_("123"),
      I_("98"),
      I_("127"), 
      0x00
   };

   static const I_CHAR* aValues_002_320_010_003_020[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load-commissies"),
      I_("10 - Extra commissie"),
      I_("101 - Buitenlandse/binnenlandse bronbelasting"),
      I_("102 - Bronbelasting dividend"),
      I_("103 - Herenigingsbelasting"),
      I_("104 - Belasting contantdeposito"),
      I_("105 - Vennootschapsbelasting"),
      I_("107 - Bronbelasting voor dividendinkomen van geldmarktfonds - nieuwe wet"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximaal FEL-/standaard BEL-commissies"),
      I_("13 - Gedeeltelijke aflossing RRSP"),
      I_("14 - Volledige aflossing RRSP"),
      I_("15 - RRIF partial redempton"),
      I_("16 - Volledige aflossing RRIF"),
      I_("17 - Servicekosten vermogensbeheer"),
      I_("19 - Commissieherstel - Aflossingen"),
      I_("2 - Inhoudingspercentage commissie"),
      I_("20 - Commissieherstel - Overdrachten"),
      I_("21 - Clawback - Ruiltransacties"),
      I_("22 - Ruilcommissie"),
      I_("23 - Kosten overdracht/ruil"),
      I_("24 - Algemene kosten vermogensallocatie"),
      I_("25 - Kosten BBD-verkoopbonus"),
      I_("27 - Maximale commissie makelaarsniveau"),
      I_("28 - 1/12 van 1% beheerkosten OVK-vermogens"),
      I_("3 - Kosten Back End Load"),
      I_("30 - Capital Gain Withholding Tax"),
      I_("301 - Biedprijs % factor"),
      I_("302 - Offerteprijs % factor"),
      I_("31 - Federal Tax"),
      I_("32 - Administratiekosten aankoop"),
      I_("33 - Betaling aankoopovereenkomst"),
      I_("34 - Administratiekosten aflossing"),
      I_("35 - Administratiekosten overdracht"),
      I_("36 - BTW"),
      I_("37 - Leveringskosten certificaten aan toonder"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Overdrachtskosten voor automatische overdrachten"),
      I_("40 - Uitsluitend Level Load-FEL"),
      I_("400 - Administration Fee"),
      I_("401 - Jaarlijkse beheerskosten"),
      I_("41 - Kosten registratie annuleren"),
      I_("47 - Eerste VUB"),
      I_("48 - Maandelijkse VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - Beheerkosten RRSP"),
      I_("50 - Gedeelde commissie - Directe aankoop"),
      I_("51 - Gedeelde commissie - Elektronische aankoop"),
      I_("52 - Gedeelde commissie - Directe aflossing"),
      I_("53 - Gedeelde commissie - Elektronische aflossing"),
      I_("54 - Gedeelde commissie - Dividend opnieuw beleggen"),
      I_("55 - Gedeelde commissie - Overdracht in"),
      I_("56 - Gedeelde commissie - Overdracht uit"),
      I_("57 - Gedeelde commissie ? Ruil binnen"),
      I_("58 - Gedeelde commissie ? Ruil buiten"),
      I_("59 - Commision Threshold"),
      I_("6 - SDBeheerkosten RRSP"),
      I_("60 - Gedeelde commissie - Geld in"),
      I_("61 - Gedeelde commissie - Geld uit"),
      I_("68 - Kosten gesplitste verkoopbonus"),
      I_("7 - Beheerkosten RRIF "),
      I_("71 - Provinciebelasting TPF"),
      I_("72 - Federale belasting TPF"),
      I_("73 - TPF OVK"),
      I_("74 - TPF-kosten"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Belasting over goederen en diensten"),
      I_("80 - Kosten verkoopbonus - Oud"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - Prolongatiecommissie RRIF/LIF/LRIF "),
      I_("89 - Kosten verkoopbonus - gedeelde commissie"),
      I_("9 - SDBeheerkosten RRIF "),
      I_("100 - Duitse belasting"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("110 - Purchase Client Condition"),
      I_("111 - Reinvest Purchase Client Condtion"),
      I_("112 - Purchase Transaction Fee"),
      I_("113 - Redemption Transaction Fee"),
      I_("122 - Purchase Spread Fee"),
      I_("123 - Redemption Spread Fee"),
      I_("98 - Floor MFR"),
      I_("127 - Liquidity Redemption Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_010_003_020;
   const BFSubstitutionSet SubSet_002_320_010_003_020(
    &aKeys_002_320_010_003_020[0], &aValues_002_320_010_003_020[0] );
   // Substitution set FeeCodeSet.  Language: nlNL, Market: 4
   static const I_CHAR* aKeys_002_320_010_004_000[] = {
      I_("8"),
      I_("18"),
      I_("95"),
      I_("180"),
      I_("1"),
      I_("10"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("107"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("19"),
      I_("2"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("27"),
      I_("28"),
      I_("3"),
      I_("30"),
      I_("301"),
      I_("302"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("39"),
      I_("4"),
      I_("40"),
      I_("400"),
      I_("401"),
      I_("41"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("5"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("6"),
      I_("60"),
      I_("61"),
      I_("68"),
      I_("7"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("80"),
      I_("801"),
      I_("802"),
      I_("803"),
      I_("83"),
      I_("88"),
      I_("89"),
      I_("9"),
      I_("100"),
      I_("118"),
      I_("44"),
      I_("340"),
      I_("350"),
      I_("175"),
      I_("173"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("122"),
      I_("123"),
      I_("98"),
      I_("127"),
      0x00
   };

   static const I_CHAR* aValues_002_320_010_004_000[] = {
      I_("8 - Trailer Fee"),
      I_("18 - Daily Mgmt Fee"),
      I_("95 - Mgmt Fee Rebate"),
      I_("180 - Mgmt Fee Discount"),
      I_("1 - Front End Load-commissies"),
      I_("10 - Extra commissie"),
      I_("101 - Buitenlandse/binnenlandse bronbelasting"),
      I_("102 - Bronbelasting dividend"),
      I_("103 - Herenigingsbelasting"),
      I_("104 - Belasting contantdeposito"),
      I_("105 - Vennootschapsbelasting"),
      I_("107 - Bronbelasting voor dividendinkomen van geldmarktfonds - nieuwe wet"),
      I_("11 - Distribution Fee"),
      I_("12 - Maximaal FEL-/standaard BEL-commissies"),
      I_("13 - Gedeeltelijke aflossing RRSP"),
      I_("14 - Volledige aflossing RRSP"),
      I_("15 - RRIF partial redempton"),
      I_("16 - Volledige aflossing RRIF"),
      I_("17 - Servicekosten vermogensbeheer"),
      I_("19 - Commissieherstel - Aflossingen"),
      I_("2 - Inhoudingspercentage commissie"),
      I_("20 - Commissieherstel - Overdrachten"),
      I_("21 - Clawback - Ruiltransacties"),
      I_("22 - Ruilcommissie"),
      I_("23 - Kosten overdracht/ruil"),
      I_("24 - Algemene kosten vermogensallocatie"),
      I_("25 - Kosten BBD-verkoopbonus"),
      I_("27 - Maximale commissie makelaarsniveau"),
      I_("28 - 1/12 van 1% beheerkosten OVK-vermogens"),
      I_("3 - Kosten Back End Load"),
      I_("30 - Provincial Tax"),
      I_("301 - Biedprijs % factor"),
      I_("302 - Offerteprijs % factor"),
      I_("31 - Federal Tax"),
      I_("32 - Administratiekosten aankoop"),
      I_("33 - Betaling aankoopovereenkomst"),
      I_("34 - Administratiekosten aflossing"),
      I_("35 - Administratiekosten overdracht"),
      I_("36 - BTW"),
      I_("37 - Leveringskosten certificaten aan toonder"),
      I_("39 - Early Redemption Fee"),
      I_("4 - Overdrachtskosten voor automatische overdrachten"),
      I_("40 - Uitsluitend Level Load-FEL"),
      I_("400 - Administration Fee"),
      I_("401 - Jaarlijkse beheerskosten"),
      I_("41 - Kosten registratie annuleren"),
      I_("47 - Eerste VUB"),
      I_("48 - Maandelijkse VUB"),
      I_("49 - Exchange In Fee"),
      I_("5 - Beheerkosten RRSP"),
      I_("50 - Gedeelde commissie - Directe aankoop"),
      I_("51 - Gedeelde commissie - Elektronische aankoop"),
      I_("52 - Gedeelde commissie - Directe aflossing"),
      I_("53 - Gedeelde commissie - Elektronische aflossing"),
      I_("54 - Gedeelde commissie - Dividend opnieuw beleggen"),
      I_("55 - Gedeelde commissie - Overdracht in"),
      I_("56 - Gedeelde commissie - Overdracht uit"),
      I_("57 - Gedeelde commissie ? Ruil binnen"),
      I_("58 - Gedeelde commissie ? Ruil buiten"),
      I_("59 - Commision Threshold"),
      I_("6 - SDBeheerkosten RRSP"),
      I_("60 - Gedeelde commissie - Geld in"),
      I_("61 - Gedeelde commissie - Geld uit"),
      I_("68 - Kosten gesplitste verkoopbonus"),
      I_("7 - Beheerkosten RRIF "),
      I_("71 - Provinciebelasting TPF"),
      I_("72 - Federale belasting TPF"),
      I_("73 - TPF OVK"),
      I_("74 - TPF-kosten"),
      I_("75 - TPF GST"),
      I_("76 - HST"),
      I_("77 - PST/TVQ"),
      I_("78 - Belasting over goederen en diensten"),
      I_("80 - Kosten verkoopbonus - Oud"),
      I_("801 - Trailer Fees - % Fee Units"),
      I_("802 - Trailer Fees - Matured Units"),
      I_("803 - Trailer Fees - ID Free Units"),
      I_("83 - Trailer Fees Old Units (Category 2)"),
      I_("88 - Prolongatiecommissie RRIF/LIF/LRIF "),
      I_("89 - Kosten verkoopbonus - gedeelde commissie"),
      I_("9 - SDBeheerkosten RRIF "),
      I_("100 - Duitse belasting"),
      I_("118 - Viscount Portion"),
      I_("44 - Exchange Out Fee"),
      I_("340 - ER Fee: Early Redemption Fees"),
      I_("350 - STTR Fee: Short Term Trading Fees"),
      I_("175 - RESP Admin Fee"),
      I_("173 - RESP Plan Withdrawal Fee (Partial)"),
      I_("110 - Purchase Client Condition"),
      I_("111 - Reinvest Purchase Client Condtion"),
      I_("112 - Purchase Transaction Fee"),
      I_("113 - Redemption Transaction Fee"),
      I_("122 - Purchase Spread Fee"),
      I_("123 - Redemption Spread Fee"),
      I_("98 - Floor MFR"),
      I_("127 - Liquidity Redemption Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_010_004_000;
   const BFSubstitutionSet SubSet_002_320_010_004_000(
    &aKeys_002_320_010_004_000[0], &aValues_002_320_010_004_000[0] );
   // Substitution set FeeCodeSet.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_320_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_320_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_011_003_000;
   const BFSubstitutionSet SubSet_002_320_011_003_000(
    &aKeys_002_320_011_003_000[0], &aValues_002_320_011_003_000[0] );
   // Substitution set FeeCodeSet.  Language: itIT, Market: 3, Client: 20
   static const I_CHAR* aKeys_002_320_011_003_020[] = {
      0x00
   };

   static const I_CHAR* aValues_002_320_011_003_020[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_011_003_020;
   const BFSubstitutionSet SubSet_002_320_011_003_020(
    &aKeys_002_320_011_003_020[0], &aValues_002_320_011_003_020[0] );
   // Substitution set FeeCodeSet.  Language: itIT, Market: 4
   static const I_CHAR* aKeys_002_320_011_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_320_011_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_011_004_000;
   const BFSubstitutionSet SubSet_002_320_011_004_000(
    &aKeys_002_320_011_004_000[0], &aValues_002_320_011_004_000[0] );
   // Substitution set FeeCodeSet.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_320_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_320_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_012_003_000;
   const BFSubstitutionSet SubSet_002_320_012_003_000(
    &aKeys_002_320_012_003_000[0], &aValues_002_320_012_003_000[0] );
   // Substitution set FeeCodeSet.  Language: thTH, Market: 3, Client: 20
   static const I_CHAR* aKeys_002_320_012_003_020[] = {
      0x00
   };

   static const I_CHAR* aValues_002_320_012_003_020[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_012_003_020;
   const BFSubstitutionSet SubSet_002_320_012_003_020(
    &aKeys_002_320_012_003_020[0], &aValues_002_320_012_003_020[0] );
   // Substitution set FeeCodeSet.  Language: thTH, Market: 4
   static const I_CHAR* aKeys_002_320_012_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_320_012_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_320_012_004_000;
   const BFSubstitutionSet SubSet_002_320_012_004_000(
    &aKeys_002_320_012_004_000[0], &aValues_002_320_012_004_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_328_001_000_000[] = {
      I_("BirthLastName"),
      I_("BirthFirstName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_001_000_000[] = {
      I_("Birth Last Name"),
      I_("Birth First Name"),
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("S.I.N."),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_001_000_000;
   const BFSubstitutionSet SubSet_002_328_001_000_000(
    &aKeys_002_328_001_000_000[0], &aValues_002_328_001_000_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_328_001_003_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_001_003_000[] = {
      I_("Last Name (L)"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("S.I.N."),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_001_003_000;
   const BFSubstitutionSet SubSet_002_328_001_003_000(
    &aKeys_002_328_001_003_000[0], &aValues_002_328_001_003_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_328_001_004_000[] = {
      I_("BirthFirstName"),
      I_("BirthLastName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_001_004_000[] = {
      I_("Birth Last Name"),
      I_("Birth First Name"),
      I_("Last Name (L)"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_001_004_000;
   const BFSubstitutionSet SubSet_002_328_001_004_000(
    &aKeys_002_328_001_004_000[0], &aValues_002_328_001_004_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_328_003_000_000[] = {
      I_("BirthLastName"),
      I_("BirthFirstName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_003_000_000[] = {
      I_("Birth Last Name"),
      I_("Birth First Name"),
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("S.I.N."),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_003_000_000;
   const BFSubstitutionSet SubSet_002_328_003_000_000(
    &aKeys_002_328_003_000_000[0], &aValues_002_328_003_000_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_328_003_003_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_003_003_000[] = {
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("S.I.N."),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_003_003_000;
   const BFSubstitutionSet SubSet_002_328_003_003_000(
    &aKeys_002_328_003_003_000[0], &aValues_002_328_003_003_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: enCA, Market: 4
   static const I_CHAR* aKeys_002_328_003_004_000[] = {
      I_("BirthLastName"),
      I_("BirthFirstName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_003_004_000[] = {
      I_("Birth Last Name"),
      I_("Birth First Name"),
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_003_004_000;
   const BFSubstitutionSet SubSet_002_328_003_004_000(
    &aKeys_002_328_003_004_000[0], &aValues_002_328_003_004_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_328_004_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_328_004_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_004_003_000;
   const BFSubstitutionSet SubSet_002_328_004_003_000(
    &aKeys_002_328_004_003_000[0], &aValues_002_328_004_003_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: frFR, Market: 4
   static const I_CHAR* aKeys_002_328_004_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_328_004_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_004_004_000;
   const BFSubstitutionSet SubSet_002_328_004_004_000(
    &aKeys_002_328_004_004_000[0], &aValues_002_328_004_004_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_328_005_000_000[] = {
      I_("BirthLastName"),
      I_("BirthFirstName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_005_000_000[] = {
      I_("Nom de famille à la naissance"),
      I_("Prénom à la naissance"),
      I_("Nom de famille"),
      I_("Prénom"),
      I_("Numéro de groupe"),
      I_("Code d'entreprise"),
      I_("Numéro de téléphone"),
      I_("N.A.S."),
      I_("Adresse"),
      I_("Code d'entité"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_005_000_000;
   const BFSubstitutionSet SubSet_002_328_005_000_000(
    &aKeys_002_328_005_000_000[0], &aValues_002_328_005_000_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_328_005_003_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_005_003_000[] = {
      I_("Nom de famille"),
      I_("Prénom"),
      I_("Numéro de groupe"),
      I_("Code d'entreprise"),
      I_("Numéro de téléphone"),
      I_("N.A.S."),
      I_("Adresse"),
      I_("Code d'entité"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_005_003_000;
   const BFSubstitutionSet SubSet_002_328_005_003_000(
    &aKeys_002_328_005_003_000[0], &aValues_002_328_005_003_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: frCA, Market: 4
   static const I_CHAR* aKeys_002_328_005_004_000[] = {
      I_("BirthLastName"),
      I_("BirthFirstName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_005_004_000[] = {
      I_("Nom de famille à la naissance"),
      I_("Prénom à la naissance"),
      I_("Nom de famille"),
      I_("Prénom"),
      I_("Numéro de groupe"),
      I_("Code d'entreprise"),
      I_("Numéro de téléphone"),
      I_("Adresse"),
      I_("Code d'entité"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_005_004_000;
   const BFSubstitutionSet SubSet_002_328_005_004_000(
    &aKeys_002_328_005_004_000[0], &aValues_002_328_005_004_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_328_006_000_000[] = {
      I_("BirthLastName"),
      I_("BirthFirstName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_006_000_000[] = {
      I_("Birth Last Name"),
      I_("Birth First Name"),
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("S.I.N."),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_006_000_000;
   const BFSubstitutionSet SubSet_002_328_006_000_000(
    &aKeys_002_328_006_000_000[0], &aValues_002_328_006_000_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_328_006_003_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_006_003_000[] = {
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("S.I.N."),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_006_003_000;
   const BFSubstitutionSet SubSet_002_328_006_003_000(
    &aKeys_002_328_006_003_000[0], &aValues_002_328_006_003_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: enIE, Market: 4
   static const I_CHAR* aKeys_002_328_006_004_000[] = {
      I_("BirthLastName"),
      I_("BirthFirstName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_006_004_000[] = {
      I_("Birth Last Name"),
      I_("Birth First Name"),
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_006_004_000;
   const BFSubstitutionSet SubSet_002_328_006_004_000(
    &aKeys_002_328_006_004_000[0], &aValues_002_328_006_004_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_328_007_000_000[] = {
      I_("BirthLastName"),
      I_("BirthFirstName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_007_000_000[] = {
      I_("Birth Last Name"),
      I_("Birth First Name"),
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("S.I.N."),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_007_000_000;
   const BFSubstitutionSet SubSet_002_328_007_000_000(
    &aKeys_002_328_007_000_000[0], &aValues_002_328_007_000_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_328_007_003_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_007_003_000[] = {
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("S.I.N."),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_007_003_000;
   const BFSubstitutionSet SubSet_002_328_007_003_000(
    &aKeys_002_328_007_003_000[0], &aValues_002_328_007_003_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: deDE, Market: 4
   static const I_CHAR* aKeys_002_328_007_004_000[] = {
      I_("BirthLastName"),
      I_("BirthFirstName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_007_004_000[] = {
      I_("Birth Last Name"),
      I_("Birth First Name"),
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_007_004_000;
   const BFSubstitutionSet SubSet_002_328_007_004_000(
    &aKeys_002_328_007_004_000[0], &aValues_002_328_007_004_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_328_008_000_000[] = {
      I_("BirthLastName"),
      I_("BirthFirstName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_008_000_000[] = {
      I_("Birth Last Name"),
      I_("Birth First Name"),
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("S.I.N."),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_008_000_000;
   const BFSubstitutionSet SubSet_002_328_008_000_000(
    &aKeys_002_328_008_000_000[0], &aValues_002_328_008_000_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_328_008_003_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_008_003_000[] = {
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("S.I.N."),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_008_003_000;
   const BFSubstitutionSet SubSet_002_328_008_003_000(
    &aKeys_002_328_008_003_000[0], &aValues_002_328_008_003_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: esEs, Market: 4
   static const I_CHAR* aKeys_002_328_008_004_000[] = {
      I_("BirthLastName"),
      I_("BirthFirstName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_008_004_000[] = {
      I_("Birth Last Name"),
      I_("Birth First Name"),
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_008_004_000;
   const BFSubstitutionSet SubSet_002_328_008_004_000(
    &aKeys_002_328_008_004_000[0], &aValues_002_328_008_004_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_328_009_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_328_009_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_009_003_000;
   const BFSubstitutionSet SubSet_002_328_009_003_000(
    &aKeys_002_328_009_003_000[0], &aValues_002_328_009_003_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: enGB, Market: 4
   static const I_CHAR* aKeys_002_328_009_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_328_009_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_009_004_000;
   const BFSubstitutionSet SubSet_002_328_009_004_000(
    &aKeys_002_328_009_004_000[0], &aValues_002_328_009_004_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_328_010_000_000[] = {
      I_("BirthLastName"),
      I_("BirthFirstName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_010_000_000[] = {
      I_("Birth Last Name"),
      I_("Birth First Name"),
      I_("Last Name"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("S.I.N."),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_010_000_000;
   const BFSubstitutionSet SubSet_002_328_010_000_000(
    &aKeys_002_328_010_000_000[0], &aValues_002_328_010_000_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_328_010_003_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("SIN"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_010_003_000[] = {
      I_("Last Name (L)"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("S.I.N."),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_010_003_000;
   const BFSubstitutionSet SubSet_002_328_010_003_000(
    &aKeys_002_328_010_003_000[0], &aValues_002_328_010_003_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: nlNL, Market: 4
   static const I_CHAR* aKeys_002_328_010_004_000[] = {
      I_("BirthFirstName"),
      I_("BirthLastName"),
      I_("LastName"),
      I_("FirstName"),
      I_("AcctGroup"),
      I_("CompanyCode"),
      I_("HomePhone"),
      I_("Address1"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_328_010_004_000[] = {
      I_("Birth Last Name"),
      I_("Birth First Name"),
      I_("Last Name (L)"),
      I_("First Name"),
      I_("Group Number"),
      I_("Company Code"),
      I_("Telephone Number"),
      I_("Address"),
      I_("Entity ID"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_010_004_000;
   const BFSubstitutionSet SubSet_002_328_010_004_000(
    &aKeys_002_328_010_004_000[0], &aValues_002_328_010_004_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_328_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_328_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_011_003_000;
   const BFSubstitutionSet SubSet_002_328_011_003_000(
    &aKeys_002_328_011_003_000[0], &aValues_002_328_011_003_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: itIT, Market: 4
   static const I_CHAR* aKeys_002_328_011_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_328_011_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_011_004_000;
   const BFSubstitutionSet SubSet_002_328_011_004_000(
    &aKeys_002_328_011_004_000[0], &aValues_002_328_011_004_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_328_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_328_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_012_003_000;
   const BFSubstitutionSet SubSet_002_328_012_003_000(
    &aKeys_002_328_012_003_000[0], &aValues_002_328_012_003_000[0] );
   // Substitution set LV_VerifySearchSNAPHeadingSet.  Language: thTH, Market: 4
   static const I_CHAR* aKeys_002_328_012_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_328_012_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_328_012_004_000;
   const BFSubstitutionSet SubSet_002_328_012_004_000(
    &aKeys_002_328_012_004_000[0], &aValues_002_328_012_004_000[0] );
}
