// BFDataImpl implementation file for DataSet DSTC0043.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:58 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0043_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0043_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0043_VWRepeat_Record() { return new dsi_DSTC0043_VWRepeat_Record; }

dsi_DSTC0043_VWRepeat_Record::dsi_DSTC0043_VWRepeat_Record()
: BFDataImpl( 40000540 )
, AddrCode_( ifds::AddrCode, &ifds::s_FldProp_AddrCode )
, AddrCodeDesc_( ifds::AddrCodeDesc, &ifds::s_FldProp_AddrCodeDesc )
, Name1_( ifds::Name1, &ifds::s_FldProp_Name1 )
, Name2_( ifds::Name2, &ifds::s_FldProp_Name2 )
, AddrLine1_( ifds::AddrLine1, &ifds::s_FldProp_AddrLine1 )
, AddrLine2_( ifds::AddrLine2, &ifds::s_FldProp_AddrLine2 )
, AddrLine3_( ifds::AddrLine3, &ifds::s_FldProp_AddrLine3 )
, AddrLine4_( ifds::AddrLine4, &ifds::s_FldProp_AddrLine4 )
, AddrLine5_( ifds::AddrLine5, &ifds::s_FldProp_AddrLine5 )
, PostalCode_( ifds::PostalCode, &ifds::s_FldProp_PostalCode )
, CountryCode_( ifds::CountryCode, &ifds::s_FldProp_CountryCode )
, CountryName_( ifds::CountryName, &ifds::s_FldProp_CountryName )
, Confirm_( ifds::Confirm, &ifds::s_FldProp_Confirm )
, EffectiveDate_( ifds::EffectiveDate, &ifds::s_FldProp_EffectiveDate )
, StopDate_( ifds::StopDate, &ifds::s_FldProp_StopDate )
, ProcessDate_( ifds::ProcessDate, &ifds::s_FldProp_ProcessDate )
, ModDate_( ifds::ModDate, &ifds::s_FldProp_ModDate )
, Username_( ifds::Username, &ifds::s_FldProp_Username )
, ModUser_( ifds::ModUser, &ifds::s_FldProp_ModUser )
, City_( ifds::City, &ifds::s_FldProp_City )
, Salutation_( ifds::Salutation, &ifds::s_FldProp_Salutation )
, AddressFileVer_( ifds::AddressFileVer, &ifds::s_FldProp_AddressFileVer )
, AddressFileRid_( ifds::AddressFileRid, &ifds::s_FldProp_AddressFileRid )
, AddrStatus_( ifds::AddrStatus, &ifds::s_FldProp_AddrStatus )
, RegAddrCode_( ifds::RegAddrCode, &ifds::s_FldProp_RegAddrCode )
, ProvinceCanadaUS_( ifds::ProvinceCanadaUS, &ifds::s_FldProp_ProvinceCanadaUS )
, RetMailDate_( ifds::RetMailDate, &ifds::s_FldProp_RetMailDate )
, RetMailFlag_( ifds::RetMailFlag, &ifds::s_FldProp_RetMailFlag )
, RetMailReasonCode_( ifds::RetMailReasonCode, &ifds::s_FldProp_RetMailReasonCode )
, UnclmRetMailStage_( ifds::UnclmRetMailStage, &ifds::s_FldProp_UnclmRetMailStage )
, UnclmStmtDate_( ifds::UnclmStmtDate, &ifds::s_FldProp_UnclmStmtDate )
, UnclmRemitDate_( ifds::UnclmRemitDate, &ifds::s_FldProp_UnclmRemitDate )
, StageStampDate_( ifds::StageStampDate, &ifds::s_FldProp_StageStampDate )
, UnclmComment_( ifds::UnclmComment, &ifds::s_FldProp_UnclmComment )
, StageAssignBy_( ifds::StageAssignBy, &ifds::s_FldProp_StageAssignBy )
, SkipValidate_( ifds::SkipValidate, &ifds::s_FldProp_SkipValidate )
, VerifyStat_( ifds::VerifyStat, &ifds::s_FldProp_VerifyStat )
{
   cFields_ = 37;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0043_VWRepeat_Record::~dsi_DSTC0043_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0043_VWRepeat_Record::clone()
{
   dsi_DSTC0043_VWRepeat_Record* p = new dsi_DSTC0043_VWRepeat_Record;
   p->AddrCode_ = AddrCode_;
   p->AddrCodeDesc_ = AddrCodeDesc_;
   p->Name1_ = Name1_;
   p->Name2_ = Name2_;
   p->AddrLine1_ = AddrLine1_;
   p->AddrLine2_ = AddrLine2_;
   p->AddrLine3_ = AddrLine3_;
   p->AddrLine4_ = AddrLine4_;
   p->AddrLine5_ = AddrLine5_;
   p->PostalCode_ = PostalCode_;
   p->CountryCode_ = CountryCode_;
   p->CountryName_ = CountryName_;
   p->Confirm_ = Confirm_;
   p->EffectiveDate_ = EffectiveDate_;
   p->StopDate_ = StopDate_;
   p->ProcessDate_ = ProcessDate_;
   p->ModDate_ = ModDate_;
   p->Username_ = Username_;
   p->ModUser_ = ModUser_;
   p->City_ = City_;
   p->Salutation_ = Salutation_;
   p->AddressFileVer_ = AddressFileVer_;
   p->AddressFileRid_ = AddressFileRid_;
   p->AddrStatus_ = AddrStatus_;
   p->RegAddrCode_ = RegAddrCode_;
   p->ProvinceCanadaUS_ = ProvinceCanadaUS_;
   p->RetMailDate_ = RetMailDate_;
   p->RetMailFlag_ = RetMailFlag_;
   p->RetMailReasonCode_ = RetMailReasonCode_;
   p->UnclmRetMailStage_ = UnclmRetMailStage_;
   p->UnclmStmtDate_ = UnclmStmtDate_;
   p->UnclmRemitDate_ = UnclmRemitDate_;
   p->StageStampDate_ = StageStampDate_;
   p->UnclmComment_ = UnclmComment_;
   p->StageAssignBy_ = StageAssignBy_;
   p->SkipValidate_ = SkipValidate_;
   p->VerifyStat_ = VerifyStat_;
   return(p);
}

BFDataField* dsi_DSTC0043_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40000277: return ( &AddrCode_ ); break; // AddrCode
      case 40000541: return ( &AddrCodeDesc_ ); break; // AddrCodeDesc
      case 40000542: return ( &Name1_ ); break; // Name1
      case 40000543: return ( &Name2_ ); break; // Name2
      case 40000280: return ( &AddrLine1_ ); break; // AddrLine1
      case 40000281: return ( &AddrLine2_ ); break; // AddrLine2
      case 40000282: return ( &AddrLine3_ ); break; // AddrLine3
      case 40000283: return ( &AddrLine4_ ); break; // AddrLine4
      case 40000284: return ( &AddrLine5_ ); break; // AddrLine5
      case 40000143: return ( &PostalCode_ ); break; // PostalCode
      case 40000344: return ( &CountryCode_ ); break; // CountryCode
      case 40000544: return ( &CountryName_ ); break; // CountryName
      case 40000569: return ( &Confirm_ ); break; // Confirm
      case 40000327: return ( &EffectiveDate_ ); break; // EffectiveDate
      case 40000279: return ( &StopDate_ ); break; // StopDate
      case 40000216: return ( &ProcessDate_ ); break; // ProcessDate
      case 40000217: return ( &ModDate_ ); break; // ModDate
      case 40000117: return ( &Username_ ); break; // Username
      case 40000218: return ( &ModUser_ ); break; // ModUser
      case 40000576: return ( &City_ ); break; // City
      case 40000416: return ( &Salutation_ ); break; // Salutation
      case 40000953: return ( &AddressFileVer_ ); break; // AddressFileVer
      case 40000954: return ( &AddressFileRid_ ); break; // AddressFileRid
      case 40001056: return ( &AddrStatus_ ); break; // AddrStatus
      case 40000993: return ( &RegAddrCode_ ); break; // RegAddrCode
      case 40003769: return ( &ProvinceCanadaUS_ ); break; // ProvinceCanadaUS
      case 40004012: return ( &RetMailDate_ ); break; // RetMailDate
      case 40004013: return ( &RetMailFlag_ ); break; // RetMailFlag
      case 40005890: return ( &RetMailReasonCode_ ); break; // RetMailReasonCode
      case 40005891: return ( &UnclmRetMailStage_ ); break; // UnclmRetMailStage
      case 40005892: return ( &UnclmStmtDate_ ); break; // UnclmStmtDate
      case 40005893: return ( &UnclmRemitDate_ ); break; // UnclmRemitDate
      case 40005863: return ( &StageStampDate_ ); break; // StageStampDate
      case 40005894: return ( &UnclmComment_ ); break; // UnclmComment
      case 40005924: return ( &StageAssignBy_ ); break; // StageAssignBy
      case 40005990: return ( &SkipValidate_ ); break; // SkipValidate
      case 40006046: return ( &VerifyStat_ ); break; // VerifyStat
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0043_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0043_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0043_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 37 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &AddrCode_; break;
            case 1: aFlds_[1] = &AddrCodeDesc_; break;
            case 2: aFlds_[2] = &Name1_; break;
            case 3: aFlds_[3] = &Name2_; break;
            case 4: aFlds_[4] = &AddrLine1_; break;
            case 5: aFlds_[5] = &AddrLine2_; break;
            case 6: aFlds_[6] = &AddrLine3_; break;
            case 7: aFlds_[7] = &AddrLine4_; break;
            case 8: aFlds_[8] = &AddrLine5_; break;
            case 9: aFlds_[9] = &PostalCode_; break;
            case 10: aFlds_[10] = &CountryCode_; break;
            case 11: aFlds_[11] = &CountryName_; break;
            case 12: aFlds_[12] = &Confirm_; break;
            case 13: aFlds_[13] = &EffectiveDate_; break;
            case 14: aFlds_[14] = &StopDate_; break;
            case 15: aFlds_[15] = &ProcessDate_; break;
            case 16: aFlds_[16] = &ModDate_; break;
            case 17: aFlds_[17] = &Username_; break;
            case 18: aFlds_[18] = &ModUser_; break;
            case 19: aFlds_[19] = &City_; break;
            case 20: aFlds_[20] = &Salutation_; break;
            case 21: aFlds_[21] = &AddressFileVer_; break;
            case 22: aFlds_[22] = &AddressFileRid_; break;
            case 23: aFlds_[23] = &AddrStatus_; break;
            case 24: aFlds_[24] = &RegAddrCode_; break;
            case 25: aFlds_[25] = &ProvinceCanadaUS_; break;
            case 26: aFlds_[26] = &RetMailDate_; break;
            case 27: aFlds_[27] = &RetMailFlag_; break;
            case 28: aFlds_[28] = &RetMailReasonCode_; break;
            case 29: aFlds_[29] = &UnclmRetMailStage_; break;
            case 30: aFlds_[30] = &UnclmStmtDate_; break;
            case 31: aFlds_[31] = &UnclmRemitDate_; break;
            case 32: aFlds_[32] = &StageStampDate_; break;
            case 33: aFlds_[33] = &UnclmComment_; break;
            case 34: aFlds_[34] = &StageAssignBy_; break;
            case 35: aFlds_[35] = &SkipValidate_; break;
            case 36: aFlds_[36] = &VerifyStat_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0043_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0043_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0043_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 200 );
}

unsigned long dsi_DSTC0043_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 1510 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0043_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0043_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0043_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40000277: return( true );
      case 40000541: return( true );
      case 40000542: return( true );
      case 40000543: return( true );
      case 40000280: return( true );
      case 40000281: return( true );
      case 40000282: return( true );
      case 40000283: return( true );
      case 40000284: return( true );
      case 40000143: return( true );
      case 40000344: return( true );
      case 40000544: return( true );
      case 40000569: return( true );
      case 40000327: return( true );
      case 40000279: return( true );
      case 40000216: return( true );
      case 40000217: return( true );
      case 40000117: return( true );
      case 40000218: return( true );
      case 40000576: return( true );
      case 40000416: return( true );
      case 40000953: return( true );
      case 40000954: return( true );
      case 40001056: return( true );
      case 40000993: return( true );
      case 40003769: return( true );
      case 40004012: return( true );
      case 40004013: return( true );
      case 40005890: return( true );
      case 40005891: return( true );
      case 40005892: return( true );
      case 40005893: return( true );
      case 40005863: return( true );
      case 40005894: return( true );
      case 40005924: return( true );
      case 40005990: return( true );
      case 40006046: return( true );
   }
   return false;
}

