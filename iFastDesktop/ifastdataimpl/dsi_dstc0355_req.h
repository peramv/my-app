// BFDataImpl header file for DataSet DSTC0355.REQ
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId SessionId;
   extern const BFTextFieldId User_Id;
   extern const BFTextFieldId LanguageCode;
   extern const BFTextFieldId CompanyId;
   extern const BFTextFieldId Track;
   extern const BFTextFieldId Activity;
   extern const BFTextFieldId RunMode;
   extern const BFTextFieldId RvCode;
   extern const BFTextFieldId OnStmt;
   extern const BFTextFieldId Accountable;
   extern const BFTextFieldId ConfirmRequired;
   extern const BFTextFieldId CancelCheque;
   extern const BFTextFieldId Remarks1;
   extern const BFTextFieldId Remarks2;
   extern const BFTextFieldId Remarks3;
   extern const BFTextFieldId Batch;
   extern const BFDecimalFieldId Trace;
   extern const BFTextFieldId TranStatus;
   extern const BFTextFieldId TransType;
   extern const BFDecimalFieldId Version;
   extern const BFDecimalFieldId TradeAdjustID;
   extern const BFTextFieldId CancellationType;
   extern const BFDateFieldId TradeDate;
   extern const BFTextFieldId Fund;
   extern const BFTextFieldId Class;
   extern const BFTextFieldId Rebook;
   extern const BFTextFieldId MCHFileIndicator;
   extern const BFTextFieldId SecRecFileIndicator;
   extern const BFTextFieldId RbkMCHFileIndicator;
   extern const BFTextFieldId RbkSecRecFileIndicator;
   extern const BFNumericFieldId RepeatCount;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_SessionId;
   extern const BFDataFieldProperties s_FldProp_User_Id;
   extern const BFDataFieldProperties s_FldProp_LanguageCode;
   extern const BFDataFieldProperties s_FldProp_CompanyId;
   extern const BFDataFieldProperties s_FldProp_Track;
   extern const BFDataFieldProperties s_FldProp_Activity;
   extern const BFDataFieldProperties s_FldProp_RunMode;
   extern const BFDataFieldProperties s_FldProp_RvCode;
   extern const BFDataFieldProperties s_FldProp_OnStmt;
   extern const BFDataFieldProperties s_FldProp_Accountable;
   extern const BFDataFieldProperties s_FldProp_ConfirmRequired;
   extern const BFDataFieldProperties s_FldProp_CancelCheque;
   extern const BFDataFieldProperties s_FldProp_Remarks1;
   extern const BFDataFieldProperties s_FldProp_Remarks2;
   extern const BFDataFieldProperties s_FldProp_Remarks3;
   extern const BFDataFieldProperties s_FldProp_Batch;
   extern const BFDataFieldProperties s_FldProp_Trace;
   extern const BFDataFieldProperties s_FldProp_TranStatus;
   extern const BFDataFieldProperties s_FldProp_TransType;
   extern const BFDataFieldProperties s_FldProp_Version;
   extern const BFDataFieldProperties s_FldProp_TradeAdjustID;
   extern const BFDataFieldProperties s_FldProp_CancellationType;
   extern const BFDataFieldProperties s_FldProp_TradeDate;
   extern const BFDataFieldProperties s_FldProp_Fund;
   extern const BFDataFieldProperties s_FldProp_Class;
   extern const BFDataFieldProperties s_FldProp_Rebook;
   extern const BFDataFieldProperties s_FldProp_MCHFileIndicator;
   extern const BFDataFieldProperties s_FldProp_SecRecFileIndicator;
   extern const BFDataFieldProperties s_FldProp_RbkMCHFileIndicator;
   extern const BFDataFieldProperties s_FldProp_RbkSecRecFileIndicator;
   extern const BFDataFieldProperties s_FldProp_RepeatCount;
}


class dsi_DSTC0355_REQ : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0355_REQ();
   virtual ~dsi_DSTC0355_REQ();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[31];
   // Field Declarations
   BFTextField_60 SessionId_;
   BFTextField_60 User_Id_;
   BFTextField_60 LanguageCode_;
   BFTextField_60 CompanyId_;
   BFTextField_1 Track_;
   BFTextField_60 Activity_;
   BFTextField_60 RunMode_;
   BFTextField_60 RvCode_;
   BFTextField_1 OnStmt_;
   BFTextField_60 Accountable_;
   BFTextField_1 ConfirmRequired_;
   BFTextField_1 CancelCheque_;
   BFTextField<50> Remarks1_;
   BFTextField<50> Remarks2_;
   BFTextField<50> Remarks3_;
   BFTextField_60 Batch_;
   BFDecimalField Trace_;
   BFTextField<5> TranStatus_;
   BFTextField_60 TransType_;
   BFDecimalField Version_;
   BFDecimalField TradeAdjustID_;
   BFTextField_60 CancellationType_;
   BFDateField TradeDate_;
   BFTextField_60 Fund_;
   BFTextField_60 Class_;
   BFTextField_2 Rebook_;
   BFTextField_60 MCHFileIndicator_;
   BFTextField_60 SecRecFileIndicator_;
   BFTextField_60 RbkMCHFileIndicator_;
   BFTextField_60 RbkSecRecFileIndicator_;
   BFNumericField RepeatCount_;

};
