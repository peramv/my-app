// BFDataImpl header file for DataSet DSTC0387.REQRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId RunMode;
   extern const BFTextFieldId FundCode;
   extern const BFTextFieldId ClassCode;
   extern const BFTextFieldId RuleType;
   extern const BFDateFieldId EffectiveDate;
   extern const BFDateFieldId StopDate;
   extern const BFDecimalFieldId OverrideAmt;
   extern const BFTextFieldId OverrideLogical;
   extern const BFTextFieldId OverrideChar;
   extern const BFNumericFieldId AcctControlsID;
   extern const BFNumericFieldId AcctControlsVer;
   extern const BFNumericFieldId AcctControlsRID;
   extern const BFTextFieldId FundGroup;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_RunMode;
   extern const BFDataFieldProperties s_FldProp_FundCode;
   extern const BFDataFieldProperties s_FldProp_ClassCode;
   extern const BFDataFieldProperties s_FldProp_RuleType;
   extern const BFDataFieldProperties s_FldProp_EffectiveDate;
   extern const BFDataFieldProperties s_FldProp_StopDate;
   extern const BFDataFieldProperties s_FldProp_OverrideAmt;
   extern const BFDataFieldProperties s_FldProp_OverrideLogical;
   extern const BFDataFieldProperties s_FldProp_OverrideChar;
   extern const BFDataFieldProperties s_FldProp_AcctControlsID;
   extern const BFDataFieldProperties s_FldProp_AcctControlsVer;
   extern const BFDataFieldProperties s_FldProp_AcctControlsRID;
   extern const BFDataFieldProperties s_FldProp_FundGroup;
}


class dsi_DSTC0387_REQRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0387_REQRepeat_Record();
   virtual ~dsi_DSTC0387_REQRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[13];
   // Field Declarations
   BFTextField_60 RunMode_;
   BFTextField<200> FundCode_;
   BFTextField<120> ClassCode_;
   BFTextField_60 RuleType_;
   BFDateField EffectiveDate_;
   BFDateField StopDate_;
   BFDecimalField OverrideAmt_;
   BFTextField_1 OverrideLogical_;
   BFTextField_60 OverrideChar_;
   BFNumericField AcctControlsID_;
   BFNumericField AcctControlsVer_;
   BFNumericField AcctControlsRID_;
   BFTextField_60 FundGroup_;
};
