// Data Field Properties
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdataid.hpp>
#include "ifast_substitutions.h"
#include "ifast_masks.h"

namespace ifds
{
   extern const BFTextFieldId ConfirmAwdHeading;
   extern const BFTextFieldId ConfirmTransHeading;
   extern const BFTextFieldId ShareholderAddressHeadingSet;
   extern const BFTextFieldId EntityAddressHeadingSet;
   extern const BFTextFieldId AddressMailingHeadingSet;
   extern const BFTextFieldId SystematicFeeSet;
   extern const BFTextFieldId EntityIDSHeadingSet;
   extern const BFTextFieldId ConfirmID;
   extern const BFTextFieldId ScreenDesc;
   extern const BFTextFieldId ConfirmRemark;
   extern const BFTextFieldId ConfirmAWD;
   extern const BFTextFieldId BusinessArea;
   extern const BFTextFieldId WorkType;
   extern const BFDataId DSTCCONF_VW;
   extern const BFDataId DSTCCONF_VWRepeat_Record;
   extern const BFDataId DSTCCAWD_VW;
   extern const BFDataId DSTCCAWD_VWRepeat_Record;
   extern const BFTextFieldId WorkAssgn;
   extern const BFTextFieldId AWDComment;
   extern const BFTextFieldId COA_Titles_Fld;
   extern const BFTextFieldId COA_Stops_Fld;
   extern const BFTextFieldId COA_Screens_Fld;
   extern const BFTextFieldId COA_Fees_Fld;
   extern const BFTextFieldId COA_Suppresses_Fld;
   extern const BFTextFieldId COA_Misc_Fld;
   extern const BFTextFieldId ShareholderAddress;
   extern const BFTextFieldId kShareholderAddress;
   extern const BFTextFieldId EntityAddress;
   extern const BFTextFieldId BankListHeadingSet;
   extern const BFDataId DSTC0055_VWRepeat_Record;
   extern const BFDataId DSTC0055_VW;
   extern const BFTextFieldId SystematicKey;
   extern const BFDataId DSTC0080_VW;
   extern const BFTextFieldId LV_DefaultAllocShrHeading;
   extern const BFTextFieldId LV_DefaultAllocAcctHeading;
   extern const BFTextFieldId FrequencySetID;
   extern const BFDataId DSTC0114_REQ;
   extern const BFDataId DSTC0114_VW;
   extern const BFDecimalFieldId AcctTotalPercent;
   extern const BFDecimalFieldId FundTotalPercent;
   extern const BFTextFieldId PlanTypeDesc;
   extern const BFTextFieldId AccountTypes;
   extern const BFTextFieldId Certificate;
   extern const BFTextFieldId SelfDirected;
   extern const BFTextFieldId LockedIn;
   extern const BFTextFieldId TaxByJuris;
   extern const BFTextFieldId FedJurisAllowed;
   extern const BFTextFieldId NomTaxRcpt;
   extern const BFTextFieldId AvailNonRes;
   extern const BFTextFieldId ReinDistOnly;
   extern const BFTextFieldId MinimumApplies;
   extern const BFTextFieldId MaximumApplies;
   extern const BFTextFieldId GICallowed;
   extern const BFTextFieldId PACallowed;
   extern const BFTextFieldId SWPallowed;
   extern const BFTextFieldId AdminFeeDefn;
   extern const BFTextFieldId MailList1;
   extern const BFTextFieldId MailList2;
   extern const BFTextFieldId MailList3;
   extern const BFTextFieldId MailList4;
   extern const BFTextFieldId MailList5;
   extern const BFTextFieldId MailList6;
   extern const BFTextFieldId MailList7;
   extern const BFTextFieldId MailList8;
   extern const BFTextFieldId MailList9;
   extern const BFTextFieldId MailList10;
   extern const BFTextFieldId MailList11;
   extern const BFTextFieldId MailList12;
   extern const BFTextFieldId TaxCashDist1;
   extern const BFTextFieldId TaxCashDist2;
   extern const BFTextFieldId TaxCashDist3;
   extern const BFTextFieldId TaxEarlyClose1;
   extern const BFTextFieldId TaxEarlyClose2;
   extern const BFTextFieldId TaxEarlyClose3;
   extern const BFTextFieldId TaxFullRdmp1;
   extern const BFTextFieldId TaxFullRdmp2;
   extern const BFTextFieldId TaxFullRdmp3;
   extern const BFTextFieldId TaxNotional1;
   extern const BFTextFieldId TaxNotional2;
   extern const BFTextFieldId TaxNotional3;
   extern const BFTextFieldId TaxPartRdmp1;
   extern const BFTextFieldId TaxPartRdmp2;
   extern const BFTextFieldId TaxPartRdmp3;
   extern const BFTextFieldId TaxPurchase1;
   extern const BFTextFieldId TaxPurchase2;
   extern const BFTextFieldId TaxPurchase3;
   extern const BFTextFieldId TaxReinvDist1;
   extern const BFTextFieldId TaxReinvDist2;
   extern const BFTextFieldId TaxReinvDist3;
   extern const BFTextFieldId TaxSwitches1;
   extern const BFTextFieldId TaxSwitches2;
   extern const BFTextFieldId TaxSwitches3;
   extern const BFTextFieldId TaxTransfers1;
   extern const BFTextFieldId TaxTransfers2;
   extern const BFTextFieldId TaxTransfers3;
   extern const BFTextFieldId ClientEquiv;
   extern const BFDataId DSTC0087_REQ;
   extern const BFDataId DSTC0087_VW;
   extern const BFDataId DSTC0087_VWRepeat_Record;
   extern const BFDataId DSTC0098_REQ;
   extern const BFDataId DSTC0101_REQ;
   extern const BFDataId DSTC0098_VWRepeat_Record;
   extern const BFDataId DSTC0098_VW;
   extern const BFDataId DSTC0101_VWRepeat_Record;
   extern const BFNumericFieldId Precision;
   extern const BFTextFieldId RoundMethod;
   extern const BFDataId DSTC0101_VW;
   extern const BFDecimalFieldId KAddrFileVer;
   extern const BFDecimalFieldId KAddrFileRid;
   extern const BFTextFieldId CompoundDate;
   extern const BFTextFieldId MandAddLines;
   extern const BFTextFieldId FlatPercentDesc;
   extern const BFTextFieldId AcctTypeX;
   extern const BFTextFieldId BranchListHeading;
   extern const BFTextFieldId SlsRepListHeading;
   extern const BFTextFieldId FundClass;
   extern const BFDecimalFieldId SettledValueAcctCurr;
   extern const BFTextFieldId DistributionHeadingSet1;
   extern const BFTextFieldId Address;
   extern const BFTextFieldId KanaAddress;
   extern const BFTextFieldId Option;
   extern const BFTextFieldId DistributionTransType;
   extern const BFTextFieldId SortBy;
   extern const BFDateFieldId CurrSysDate;
   extern const BFTimeFieldId CurrSysTime;
   extern const BFTextFieldId DummyDistributionPayType;
   extern const BFDataId DSTC0089_VW;
   extern const BFTextFieldId MorganAcctTypeForT;
   extern const BFTextFieldId MorganAcctTypeForX;
   extern const BFTextFieldId MorganTaxType;
   extern const BFNumericFieldId LastActiveShrNum;
   extern const BFTextFieldId EffectiveStopDate;
   extern const BFTextFieldId SrchEntType;
   extern const BFTextFieldId TransFound;
   extern const BFTextFieldId BrokerListHeading;
   extern const BFTextFieldId BankInstrCombo3;
   extern const BFDataId DSTC0120_REQ;
   extern const BFDataId DSTC0120_VW;
   extern const BFDataId DSTC0120_VWRepeat_Record;
   extern const BFTextFieldId DataFound;
   extern const BFTextFieldId ShouldAskForRep;
   extern const BFTextFieldId SearchBroker;
   extern const BFTextFieldId SearchBrokerUsing;
   extern const BFTextFieldId ReplaceAsDefault;
   extern const BFTextFieldId EntityTypeToUpdateEntity;
   extern const BFTextFieldId EntityTypeForNewEntity;
   extern const BFTextFieldId rxTransType;
   extern const BFTextFieldId PayTypeAddrCode;
   extern const BFTextFieldId PayTypeBankNum;
   extern const BFDataId DSTC0115_REQ;
   extern const BFDataId DSTC0115_REQRepeat_Record;
   extern const BFTextFieldId UseEnteredFee;
   extern const BFTextFieldId TxRcptIssued;
   extern const BFTextFieldId BackDatedReason;
   extern const BFDecimalFieldId GICId;
   extern const BFDecimalFieldId Trace;
   extern const BFNumericFieldId InterDetlRid;
   extern const BFDataId DSTC0115_VW;
   extern const BFNumericFieldId MinWithAge;
   extern const BFTextFieldId ExistSIN;
   extern const BFTextFieldId ValidTaxJuris;
   extern const BFTextFieldId ExistBenAddr;
   extern const BFTextFieldId ExistEscrow;
   extern const BFTextFieldId ExistBeneficiary;
   extern const BFTextFieldId ExistAlloc;
   extern const BFTextFieldId OutWireOrd;
   extern const BFTextFieldId SlsRepActive;
   extern const BFTextFieldId ClosingContr;
   extern const BFTextFieldId ContrMatured;
   extern const BFTextFieldId Age69;
   extern const BFTextFieldId DeathClaim;
   extern const BFDateFieldId FirstEffective;
   extern const BFTextFieldId RIFSrcOfFund;
   extern const BFTextFieldId RIFSrcOfFundDesc;
   extern const BFDataId DSTC0068_VWRepeat_Record;
   extern const BFDataId DSTC0068_VW;
   extern const BFDataId DSTC0068_REQ;
   extern const BFTextFieldId TradesPayType;
   extern const BFTextFieldId TradesTransType;
   extern const BFTextFieldId EmptySetField;
   extern const BFTextFieldId Trading_AllocationHeadingSet;
   extern const BFTextFieldId TradingBanks_HeadingSet;
   extern const BFTextFieldId TradingHeadingSet;
   extern const BFTextFieldId TradingAttributesHeadingSet;
   extern const BFDataId DSTC0105_REQ;
   extern const BFTextFieldId ContractType;
   extern const BFDecimalFieldId ContractTypeId;
   extern const BFTextFieldId PolicyNum;
   extern const BFIntegerFieldId ContractTerm;
   extern const BFTextFieldId ContractTermDesc;
   extern const BFIntegerFieldId AnnivMonth;
   extern const BFIntegerFieldId AnnivDay;
   extern const BFDateFieldId LastResetDate;
   extern const BFTextFieldId MaturityType;
   extern const BFTextFieldId MaturityTypeDesc;
   extern const BFTextFieldId AgeBasedOn;
   extern const BFTextFieldId AgeBasedOnDesc;
   extern const BFDateFieldId LegalMaturityDate;
   extern const BFDateFieldId UserMaturityDate;
   extern const BFTextFieldId Status;
   extern const BFDateFieldId BailMaturityDate;

   //------------------------------------------------------------------
   // Field s_FldProp_ConfirmAwdHeading (1200)
   //------------------------------------------------------------------
   const DString& s_FldProp_ConfirmAwdHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1200_4( I_(" ") );
      return( dstrDefValue_1200_4 );
   }
   const DString& s_FldProp_ConfirmAwdHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1200_4( I_("ConfirmAwdHeading ") );
      return( dstrFldLabel_1200_4 );
   }
   PBF_SSC subset_super_chooser_2_1200( const ClientLocale& locale )
   {
      return chooser_ss_002_106; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ConfirmAwdHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,ConfirmAwdHeading // fieldId
      ,0 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ConfirmAwdHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ConfirmAwdHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1200 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ConfirmTransHeading (1201)
   //------------------------------------------------------------------
   const DString& s_FldProp_ConfirmTransHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1201_5( I_(" ") );
      return( dstrDefValue_1201_5 );
   }
   const DString& s_FldProp_ConfirmTransHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1201_5( I_("ConfirmTransHeading ") );
      return( dstrFldLabel_1201_5 );
   }
   PBF_SSC subset_super_chooser_2_1201( const ClientLocale& locale )
   {
      return chooser_ss_002_107; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ConfirmTransHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,ConfirmTransHeading // fieldId
      ,0 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ConfirmTransHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ConfirmTransHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1201 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShareholderAddressHeadingSet (1202)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShareholderAddressHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1202_4( I_("0") );
         return( dstrDefValue_1202_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1202_7( I_("") );
         return( dstrDefValue_1202_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1202_8( I_("") );
         return( dstrDefValue_1202_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1202_5( I_("") );
         return( dstrDefValue_1202_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1202_1( I_("") );
         return( dstrDefValue_1202_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1202_6( I_("0") );
         return( dstrDefValue_1202_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1202_3( I_("") );
         return( dstrDefValue_1202_3 );
      }
      static const DString dstrDefValue_1202_1( I_("") );
      return( dstrDefValue_1202_1 );
   }
   const DString& s_FldProp_ShareholderAddressHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1202_4( I_("ShareholderAddressHeadingSet ") );
         return( dstrFldLabel_1202_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1202_7( I_("ShareholderAddressHeadingSet ") );
         return( dstrFldLabel_1202_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1202_8( I_("ShareholderAddressHeadingSet ") );
         return( dstrFldLabel_1202_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1202_5( I_("ShareholderAddressHeadingSet ") );
         return( dstrFldLabel_1202_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1202_1( I_("ShareholderAddressHeadingSet ") );
         return( dstrFldLabel_1202_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1202_6( I_("ShareholderAddressHeadingSet ") );
         return( dstrFldLabel_1202_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1202_3( I_("ShareholderAddressHeadingSet ") );
         return( dstrFldLabel_1202_3 );
      }
      static const DString dstrFldLabel_1202_1( I_("ShareholderAddressHeadingSet ") );
      return( dstrFldLabel_1202_1 );
   }
   PBF_SSC subset_super_chooser_2_1202( const ClientLocale& locale )
   {
      return chooser_ss_002_108; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShareholderAddressHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShareholderAddressHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShareholderAddressHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShareholderAddressHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1202 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityAddressHeadingSet (1203)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityAddressHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1203_4( I_("0") );
         return( dstrDefValue_1203_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1203_7( I_("") );
         return( dstrDefValue_1203_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1203_5( I_("") );
         return( dstrDefValue_1203_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1203_8( I_("") );
         return( dstrDefValue_1203_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1203_3( I_("") );
         return( dstrDefValue_1203_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1203_1( I_("") );
         return( dstrDefValue_1203_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1203_6( I_("0") );
         return( dstrDefValue_1203_6 );
      }
      static const DString dstrDefValue_1203_1( I_("") );
      return( dstrDefValue_1203_1 );
   }
   const DString& s_FldProp_EntityAddressHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1203_4( I_("EntityAddressHeadingSet ") );
         return( dstrFldLabel_1203_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1203_7( I_("EntityAddressHeadingSet ") );
         return( dstrFldLabel_1203_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1203_5( I_("EntityAddressHeadingSet ") );
         return( dstrFldLabel_1203_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1203_8( I_("EntityAddressHeadingSet ") );
         return( dstrFldLabel_1203_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1203_3( I_("EntityAddressHeadingSet ") );
         return( dstrFldLabel_1203_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1203_1( I_("EntityAddressHeadingSet ") );
         return( dstrFldLabel_1203_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1203_6( I_("EntityAddressHeadingSet ") );
         return( dstrFldLabel_1203_6 );
      }
      static const DString dstrFldLabel_1203_1( I_("EntityAddressHeadingSet ") );
      return( dstrFldLabel_1203_1 );
   }
   PBF_SSC subset_super_chooser_2_1203( const ClientLocale& locale )
   {
      return chooser_ss_002_109; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityAddressHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,EntityAddressHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EntityAddressHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EntityAddressHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1203 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddressMailingHeadingSet (1204)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddressMailingHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1204_5( I_("") );
         return( dstrDefValue_1204_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1204_7( I_("") );
         return( dstrDefValue_1204_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1204_8( I_("") );
         return( dstrDefValue_1204_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1204_6( I_("0") );
         return( dstrDefValue_1204_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1204_4( I_("0") );
         return( dstrDefValue_1204_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1204_3( I_("") );
         return( dstrDefValue_1204_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1204_1( I_("") );
         return( dstrDefValue_1204_1 );
      }
      static const DString dstrDefValue_1204_1( I_("") );
      return( dstrDefValue_1204_1 );
   }
   const DString& s_FldProp_AddressMailingHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1204_5( I_("AddressMailingHeadingSet  ") );
         return( dstrFldLabel_1204_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1204_7( I_("AddressMailingHeadingSet  ") );
         return( dstrFldLabel_1204_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1204_8( I_("AddressMailingHeadingSet  ") );
         return( dstrFldLabel_1204_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1204_6( I_("AddressMailingHeadingSet  ") );
         return( dstrFldLabel_1204_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1204_4( I_("AddressMailingHeadingSet  ") );
         return( dstrFldLabel_1204_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1204_3( I_("AddressMailingHeadingSet  ") );
         return( dstrFldLabel_1204_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1204_1( I_("AddressMailingHeadingSet  ") );
         return( dstrFldLabel_1204_1 );
      }
      static const DString dstrFldLabel_1204_1( I_("AddressMailingHeadingSet  ") );
      return( dstrFldLabel_1204_1 );
   }
   PBF_SSC subset_super_chooser_2_1204( const ClientLocale& locale )
   {
      return chooser_ss_002_110; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddressMailingHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddressMailingHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddressMailingHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddressMailingHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1204 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SystematicFeeSet (1205)
   //------------------------------------------------------------------
   const DString& s_FldProp_SystematicFeeSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1205_3( I_("") );
         return( dstrDefValue_1205_3 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1205_7( I_("") );
         return( dstrDefValue_1205_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1205_6( I_("0") );
         return( dstrDefValue_1205_6 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1205_8( I_("") );
         return( dstrDefValue_1205_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1205_1( I_("") );
         return( dstrDefValue_1205_1 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1205_5( I_("") );
         return( dstrDefValue_1205_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1205_4( I_("0") );
         return( dstrDefValue_1205_4 );
      }
      static const DString dstrDefValue_1205_1( I_("") );
      return( dstrDefValue_1205_1 );
   }
   const DString& s_FldProp_SystematicFeeSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1205_3( I_("SystematicFeeSet ") );
         return( dstrFldLabel_1205_3 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1205_7( I_("SystematicFeeSet ") );
         return( dstrFldLabel_1205_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1205_6( I_("SystematicFeeSet ") );
         return( dstrFldLabel_1205_6 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1205_8( I_("SystematicFeeSet ") );
         return( dstrFldLabel_1205_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1205_1( I_("SystematicFeeSet ") );
         return( dstrFldLabel_1205_1 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1205_5( I_("SystematicFeeSet ") );
         return( dstrFldLabel_1205_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1205_4( I_("SystematicFeeSet ") );
         return( dstrFldLabel_1205_4 );
      }
      static const DString dstrFldLabel_1205_1( I_("SystematicFeeSet ") );
      return( dstrFldLabel_1205_1 );
   }
   PBF_SSC subset_super_chooser_2_1205( const ClientLocale& locale )
   {
      return chooser_ss_002_111; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SystematicFeeSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,SystematicFeeSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SystematicFeeSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SystematicFeeSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1205 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityIDSHeadingSet (1206)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityIDSHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1206_4( I_("0") );
         return( dstrDefValue_1206_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1206_7( I_("") );
         return( dstrDefValue_1206_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1206_5( I_("") );
         return( dstrDefValue_1206_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1206_8( I_("") );
         return( dstrDefValue_1206_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1206_3( I_("") );
         return( dstrDefValue_1206_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1206_1( I_("") );
         return( dstrDefValue_1206_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1206_6( I_("0") );
         return( dstrDefValue_1206_6 );
      }
      static const DString dstrDefValue_1206_1( I_("") );
      return( dstrDefValue_1206_1 );
   }
   const DString& s_FldProp_EntityIDSHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1206_4( I_("EntityIDSHeadingSet ") );
         return( dstrFldLabel_1206_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1206_7( I_("EntityIDSHeadingSet ") );
         return( dstrFldLabel_1206_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1206_5( I_("EntityIDSHeadingSet ") );
         return( dstrFldLabel_1206_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1206_8( I_("EntityIDSHeadingSet ") );
         return( dstrFldLabel_1206_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1206_3( I_("EntityIDSHeadingSet ") );
         return( dstrFldLabel_1206_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1206_1( I_("EntityIDSHeadingSet ") );
         return( dstrFldLabel_1206_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1206_6( I_("EntityIDSHeadingSet ") );
         return( dstrFldLabel_1206_6 );
      }
      static const DString dstrFldLabel_1206_1( I_("EntityIDSHeadingSet ") );
      return( dstrFldLabel_1206_1 );
   }
   PBF_SSC subset_super_chooser_2_1206( const ClientLocale& locale )
   {
      return chooser_ss_002_112; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityIDSHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,EntityIDSHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EntityIDSHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EntityIDSHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1206 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ConfirmID (1207)
   //------------------------------------------------------------------
   const DString& s_FldProp_ConfirmID_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1207_5( I_(" ") );
      return( dstrDefValue_1207_5 );
   }
   const DString& s_FldProp_ConfirmID_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1207_5( I_("ConfirmID ") );
      return( dstrFldLabel_1207_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ConfirmID(
       BFDataFieldProperties::Type::text // field is a text field
      ,ConfirmID // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ConfirmID_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ConfirmID_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ScreenDesc (1208)
   //------------------------------------------------------------------
   const DString& s_FldProp_ScreenDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1208_5( I_(" ") );
      return( dstrDefValue_1208_5 );
   }
   const DString& s_FldProp_ScreenDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1208_5( I_("ScreenDesc ") );
      return( dstrFldLabel_1208_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ScreenDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,ScreenDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ScreenDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ScreenDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ConfirmRemark (1209)
   //------------------------------------------------------------------
   const DString& s_FldProp_ConfirmRemark_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1209_4( I_(" ") );
      return( dstrDefValue_1209_4 );
   }
   const DString& s_FldProp_ConfirmRemark_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1209_4( I_("ConfirmRemark ") );
      return( dstrFldLabel_1209_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ConfirmRemark(
       BFDataFieldProperties::Type::text // field is a text field
      ,ConfirmRemark // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ConfirmRemark_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ConfirmRemark_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ConfirmAWD (1210)
   //------------------------------------------------------------------
   const DString& s_FldProp_ConfirmAWD_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1210_5( I_(" ") );
      return( dstrDefValue_1210_5 );
   }
   const DString& s_FldProp_ConfirmAWD_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1210_5( I_("ConfirmAWD ") );
      return( dstrFldLabel_1210_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ConfirmAWD(
       BFDataFieldProperties::Type::text // field is a text field
      ,ConfirmAWD // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ConfirmAWD_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ConfirmAWD_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BusinessArea (1211)
   //------------------------------------------------------------------
   const DString& s_FldProp_BusinessArea_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1211_7( I_(" ") );
      return( dstrDefValue_1211_7 );
   }
   const DString& s_FldProp_BusinessArea_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1211_7( I_("BusinessArea ") );
      return( dstrFldLabel_1211_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BusinessArea(
       BFDataFieldProperties::Type::text // field is a text field
      ,BusinessArea // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BusinessArea_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BusinessArea_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WorkType (1212)
   //------------------------------------------------------------------
   const DString& s_FldProp_WorkType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1212_4( I_(" ") );
      return( dstrDefValue_1212_4 );
   }
   const DString& s_FldProp_WorkType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1212_4( I_("WorkType ") );
      return( dstrFldLabel_1212_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WorkType(
       BFDataFieldProperties::Type::text // field is a text field
      ,WorkType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WorkType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WorkType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WorkAssgn (1217)
   //------------------------------------------------------------------
   const DString& s_FldProp_WorkAssgn_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1217_1( I_(" ") );
      return( dstrDefValue_1217_1 );
   }
   const DString& s_FldProp_WorkAssgn_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1217_1( I_("WorkAssgn ") );
      return( dstrFldLabel_1217_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WorkAssgn(
       BFDataFieldProperties::Type::text // field is a text field
      ,WorkAssgn // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WorkAssgn_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WorkAssgn_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AWDComment (1218)
   //------------------------------------------------------------------
   const DString& s_FldProp_AWDComment_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1218_5( I_(" ") );
      return( dstrDefValue_1218_5 );
   }
   const DString& s_FldProp_AWDComment_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1218_5( I_("AWDComment ") );
      return( dstrFldLabel_1218_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AWDComment(
       BFDataFieldProperties::Type::text // field is a text field
      ,AWDComment // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AWDComment_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AWDComment_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_COA_Titles_Fld (1219)
   //------------------------------------------------------------------
   const DString& s_FldProp_COA_Titles_Fld_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1219_7( I_("  ") );
      return( dstrDefValue_1219_7 );
   }
   const DString& s_FldProp_COA_Titles_Fld_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1219_7( I_("COATitlesFld  ") );
      return( dstrFldLabel_1219_7 );
   }
   PBF_SSC subset_super_chooser_2_1219( const ClientLocale& locale )
   {
      return chooser_ss_002_114; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_COA_Titles_Fld(
       BFDataFieldProperties::Type::text // field is a text field
      ,COA_Titles_Fld // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_COA_Titles_Fld_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_COA_Titles_Fld_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1219 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_COA_Stops_Fld (1220)
   //------------------------------------------------------------------
   const DString& s_FldProp_COA_Stops_Fld_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1220_4( I_("  ") );
      return( dstrDefValue_1220_4 );
   }
   const DString& s_FldProp_COA_Stops_Fld_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1220_4( I_("COAStops  ") );
      return( dstrFldLabel_1220_4 );
   }
   PBF_SSC subset_super_chooser_2_1220( const ClientLocale& locale )
   {
      return chooser_ss_002_115; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_COA_Stops_Fld(
       BFDataFieldProperties::Type::text // field is a text field
      ,COA_Stops_Fld // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_COA_Stops_Fld_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_COA_Stops_Fld_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1220 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_COA_Screens_Fld (1221)
   //------------------------------------------------------------------
   const DString& s_FldProp_COA_Screens_Fld_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1221_6( I_(" ") );
      return( dstrDefValue_1221_6 );
   }
   const DString& s_FldProp_COA_Screens_Fld_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1221_6( I_("COA Screens ") );
      return( dstrFldLabel_1221_6 );
   }
   PBF_SSC subset_super_chooser_2_1221( const ClientLocale& locale )
   {
      return chooser_ss_002_116; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_COA_Screens_Fld(
       BFDataFieldProperties::Type::text // field is a text field
      ,COA_Screens_Fld // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_COA_Screens_Fld_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_COA_Screens_Fld_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1221 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_COA_Fees_Fld (1222)
   //------------------------------------------------------------------
   const DString& s_FldProp_COA_Fees_Fld_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1222_4( I_(" ") );
      return( dstrDefValue_1222_4 );
   }
   const DString& s_FldProp_COA_Fees_Fld_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1222_4( I_("COA Fees ") );
      return( dstrFldLabel_1222_4 );
   }
   PBF_SSC subset_super_chooser_2_1222( const ClientLocale& locale )
   {
      return chooser_ss_002_117; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_COA_Fees_Fld(
       BFDataFieldProperties::Type::text // field is a text field
      ,COA_Fees_Fld // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_COA_Fees_Fld_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_COA_Fees_Fld_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1222 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_COA_Suppresses_Fld (1223)
   //------------------------------------------------------------------
   const DString& s_FldProp_COA_Suppresses_Fld_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1223_5( I_(" ") );
      return( dstrDefValue_1223_5 );
   }
   const DString& s_FldProp_COA_Suppresses_Fld_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1223_5( I_("COASuppresses ") );
      return( dstrFldLabel_1223_5 );
   }
   PBF_SSC subset_super_chooser_2_1223( const ClientLocale& locale )
   {
      return chooser_ss_002_118; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_COA_Suppresses_Fld(
       BFDataFieldProperties::Type::text // field is a text field
      ,COA_Suppresses_Fld // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_COA_Suppresses_Fld_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_COA_Suppresses_Fld_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1223 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_COA_Misc_Fld (1224)
   //------------------------------------------------------------------
   const DString& s_FldProp_COA_Misc_Fld_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1224_5( I_(" ") );
      return( dstrDefValue_1224_5 );
   }
   const DString& s_FldProp_COA_Misc_Fld_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1224_5( I_("COAMisc ") );
      return( dstrFldLabel_1224_5 );
   }
   PBF_SSC subset_super_chooser_2_1224( const ClientLocale& locale )
   {
      return chooser_ss_002_119; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_COA_Misc_Fld(
       BFDataFieldProperties::Type::text // field is a text field
      ,COA_Misc_Fld // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_COA_Misc_Fld_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_COA_Misc_Fld_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1224 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShareholderAddress (1225)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShareholderAddress_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1225_4( I_("0") );
         return( dstrDefValue_1225_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1225_8( I_("") );
         return( dstrDefValue_1225_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1225_7( I_("") );
         return( dstrDefValue_1225_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1225_5( I_("") );
         return( dstrDefValue_1225_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1225_3( I_("") );
         return( dstrDefValue_1225_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1225_1( I_("") );
         return( dstrDefValue_1225_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1225_6( I_("0") );
         return( dstrDefValue_1225_6 );
      }
      static const DString dstrDefValue_1225_1( I_("") );
      return( dstrDefValue_1225_1 );
   }
   const DString& s_FldProp_ShareholderAddress_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1225_4( I_("ShareholderAddress ") );
         return( dstrFldLabel_1225_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1225_8( I_("ShareholderAddress ") );
         return( dstrFldLabel_1225_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1225_7( I_("ShareholderAddress ") );
         return( dstrFldLabel_1225_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1225_5( I_("ShareholderAddress ") );
         return( dstrFldLabel_1225_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1225_3( I_("ShareholderAddress ") );
         return( dstrFldLabel_1225_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1225_1( I_("ShareholderAddress ") );
         return( dstrFldLabel_1225_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1225_6( I_("ShareholderAddress ") );
         return( dstrFldLabel_1225_6 );
      }
      static const DString dstrFldLabel_1225_1( I_("ShareholderAddress ") );
      return( dstrFldLabel_1225_1 );
   }
   PBF_SSC subset_super_chooser_2_1225( const ClientLocale& locale )
   {
      return chooser_ss_002_120; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShareholderAddress(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShareholderAddress // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShareholderAddress_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShareholderAddress_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1225 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_kShareholderAddress (1226)
   //------------------------------------------------------------------
   const DString& s_FldProp_kShareholderAddress_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1226_4( I_("0") );
         return( dstrDefValue_1226_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1226_5( I_("") );
         return( dstrDefValue_1226_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1226_8( I_("") );
         return( dstrDefValue_1226_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1226_7( I_("") );
         return( dstrDefValue_1226_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1226_1( I_("") );
         return( dstrDefValue_1226_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1226_3( I_("") );
         return( dstrDefValue_1226_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1226_6( I_("0") );
         return( dstrDefValue_1226_6 );
      }
      static const DString dstrDefValue_1226_1( I_("") );
      return( dstrDefValue_1226_1 );
   }
   const DString& s_FldProp_kShareholderAddress_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1226_4( I_("kShareholderAddress ") );
         return( dstrFldLabel_1226_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1226_5( I_("kShareholderAddress ") );
         return( dstrFldLabel_1226_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1226_8( I_("kShareholderAddress ") );
         return( dstrFldLabel_1226_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1226_7( I_("kShareholderAddress ") );
         return( dstrFldLabel_1226_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1226_1( I_("kShareholderAddress ") );
         return( dstrFldLabel_1226_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1226_3( I_("kShareholderAddress ") );
         return( dstrFldLabel_1226_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1226_6( I_("kShareholderAddress ") );
         return( dstrFldLabel_1226_6 );
      }
      static const DString dstrFldLabel_1226_1( I_("kShareholderAddress ") );
      return( dstrFldLabel_1226_1 );
   }
   PBF_SSC subset_super_chooser_2_1226( const ClientLocale& locale )
   {
      return chooser_ss_002_121; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_kShareholderAddress(
       BFDataFieldProperties::Type::text // field is a text field
      ,kShareholderAddress // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_kShareholderAddress_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_kShareholderAddress_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1226 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityAddress (1227)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityAddress_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1227_4( I_("0") );
         return( dstrDefValue_1227_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1227_7( I_("") );
         return( dstrDefValue_1227_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1227_5( I_("") );
         return( dstrDefValue_1227_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1227_8( I_("") );
         return( dstrDefValue_1227_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1227_3( I_("") );
         return( dstrDefValue_1227_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1227_1( I_("") );
         return( dstrDefValue_1227_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1227_6( I_("0") );
         return( dstrDefValue_1227_6 );
      }
      static const DString dstrDefValue_1227_1( I_("") );
      return( dstrDefValue_1227_1 );
   }
   const DString& s_FldProp_EntityAddress_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1227_4( I_("EntityAddress ") );
         return( dstrFldLabel_1227_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1227_7( I_("EntityAddress ") );
         return( dstrFldLabel_1227_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1227_5( I_("EntityAddress ") );
         return( dstrFldLabel_1227_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1227_8( I_("EntityAddress ") );
         return( dstrFldLabel_1227_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1227_3( I_("EntityAddress ") );
         return( dstrFldLabel_1227_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1227_1( I_("EntityAddress ") );
         return( dstrFldLabel_1227_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1227_6( I_("EntityAddress ") );
         return( dstrFldLabel_1227_6 );
      }
      static const DString dstrFldLabel_1227_1( I_("EntityAddress ") );
      return( dstrFldLabel_1227_1 );
   }
   PBF_SSC subset_super_chooser_2_1227( const ClientLocale& locale )
   {
      return chooser_ss_002_122; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityAddress(
       BFDataFieldProperties::Type::text // field is a text field
      ,EntityAddress // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EntityAddress_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EntityAddress_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1227 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankListHeadingSet (1228)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankListHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1228_5( I_("") );
         return( dstrDefValue_1228_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1228_7( I_("") );
         return( dstrDefValue_1228_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1228_8( I_("") );
         return( dstrDefValue_1228_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1228_6( I_("0") );
         return( dstrDefValue_1228_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1228_3( I_("") );
         return( dstrDefValue_1228_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1228_1( I_("") );
         return( dstrDefValue_1228_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1228_4( I_("0") );
         return( dstrDefValue_1228_4 );
      }
      static const DString dstrDefValue_1228_1( I_("") );
      return( dstrDefValue_1228_1 );
   }
   const DString& s_FldProp_BankListHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1228_5( I_("BankListHeadingSet  ") );
         return( dstrFldLabel_1228_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1228_7( I_("BankListHeadingSet  ") );
         return( dstrFldLabel_1228_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1228_8( I_("BankListHeadingSet  ") );
         return( dstrFldLabel_1228_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1228_6( I_("BankListHeadingSet  ") );
         return( dstrFldLabel_1228_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1228_3( I_("BankListHeadingSet  ") );
         return( dstrFldLabel_1228_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1228_1( I_("BankListHeadingSet  ") );
         return( dstrFldLabel_1228_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1228_4( I_("BankListHeadingSet  ") );
         return( dstrFldLabel_1228_4 );
      }
      static const DString dstrFldLabel_1228_1( I_("BankListHeadingSet  ") );
      return( dstrFldLabel_1228_1 );
   }
   PBF_SSC subset_super_chooser_2_1228( const ClientLocale& locale )
   {
      return chooser_ss_002_123; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankListHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankListHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankListHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankListHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1228 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SystematicKey (1231)
   //------------------------------------------------------------------
   const DString& s_FldProp_SystematicKey_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1231_3( I_("0") );
      return( dstrDefValue_1231_3 );
   }
   const DString& s_FldProp_SystematicKey_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1231_3( I_("SystematicKey") );
      return( dstrFldLabel_1231_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SystematicKey(
       BFDataFieldProperties::Type::text // field is a text field
      ,SystematicKey // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SystematicKey_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SystematicKey_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_DefaultAllocShrHeading (1233)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_DefaultAllocShrHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1233_5( I_("") );
         return( dstrDefValue_1233_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1233_8( I_("") );
         return( dstrDefValue_1233_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1233_7( I_("") );
         return( dstrDefValue_1233_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1233_6( I_("0") );
         return( dstrDefValue_1233_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1233_4( I_("0") );
         return( dstrDefValue_1233_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1233_3( I_("") );
         return( dstrDefValue_1233_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1233_1( I_("") );
         return( dstrDefValue_1233_1 );
      }
      static const DString dstrDefValue_1233_1( I_("") );
      return( dstrDefValue_1233_1 );
   }
   const DString& s_FldProp_LV_DefaultAllocShrHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1233_5( I_("LV_DefaultAllocShrHeading") );
         return( dstrFldLabel_1233_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1233_8( I_("LV_DefaultAllocShrHeading") );
         return( dstrFldLabel_1233_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1233_7( I_("LV_DefaultAllocShrHeading") );
         return( dstrFldLabel_1233_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1233_6( I_("LV_DefaultAllocShrHeading") );
         return( dstrFldLabel_1233_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1233_4( I_("LV_DefaultAllocShrHeading") );
         return( dstrFldLabel_1233_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1233_3( I_("LV_DefaultAllocShrHeading") );
         return( dstrFldLabel_1233_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1233_1( I_("LV_DefaultAllocShrHeading") );
         return( dstrFldLabel_1233_1 );
      }
      static const DString dstrFldLabel_1233_1( I_("LV_DefaultAllocShrHeading") );
      return( dstrFldLabel_1233_1 );
   }
   PBF_SSC subset_super_chooser_2_1233( const ClientLocale& locale )
   {
      return chooser_ss_002_124; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_DefaultAllocShrHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_DefaultAllocShrHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_DefaultAllocShrHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_DefaultAllocShrHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1233 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_DefaultAllocAcctHeading (1234)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_DefaultAllocAcctHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1234_5( I_("") );
         return( dstrDefValue_1234_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1234_4( I_("0") );
         return( dstrDefValue_1234_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1234_8( I_("") );
         return( dstrDefValue_1234_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1234_7( I_("") );
         return( dstrDefValue_1234_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1234_1( I_("") );
         return( dstrDefValue_1234_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1234_3( I_("") );
         return( dstrDefValue_1234_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1234_6( I_("0") );
         return( dstrDefValue_1234_6 );
      }
      static const DString dstrDefValue_1234_1( I_("") );
      return( dstrDefValue_1234_1 );
   }
   const DString& s_FldProp_LV_DefaultAllocAcctHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1234_5( I_("LV_DefaultAllocAcctHeading") );
         return( dstrFldLabel_1234_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1234_4( I_("LV_DefaultAllocAcctHeading") );
         return( dstrFldLabel_1234_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1234_8( I_("LV_DefaultAllocAcctHeading") );
         return( dstrFldLabel_1234_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1234_7( I_("LV_DefaultAllocAcctHeading") );
         return( dstrFldLabel_1234_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1234_1( I_("LV_DefaultAllocAcctHeading") );
         return( dstrFldLabel_1234_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1234_3( I_("LV_DefaultAllocAcctHeading") );
         return( dstrFldLabel_1234_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1234_6( I_("LV_DefaultAllocAcctHeading") );
         return( dstrFldLabel_1234_6 );
      }
      static const DString dstrFldLabel_1234_1( I_("LV_DefaultAllocAcctHeading") );
      return( dstrFldLabel_1234_1 );
   }
   PBF_SSC subset_super_chooser_2_1234( const ClientLocale& locale )
   {
      return chooser_ss_002_125; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_DefaultAllocAcctHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_DefaultAllocAcctHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_DefaultAllocAcctHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_DefaultAllocAcctHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1234 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrequencySetID (1235)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrequencySetID_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1235_4( I_("0") );
      return( dstrDefValue_1235_4 );
   }
   const DString& s_FldProp_FrequencySetID_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1235_4( I_("FrequencySetID ") );
      return( dstrFldLabel_1235_4 );
   }
   PBF_SSC subset_super_chooser_2_1235( const ClientLocale& locale )
   {
      return chooser_ss_002_127; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrequencySetID(
       BFDataFieldProperties::Type::text // field is a text field
      ,FrequencySetID // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FrequencySetID_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FrequencySetID_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1235 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctTotalPercent (1238)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctTotalPercent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1238_4( I_("0.0000 ") );
      return( dstrDefValue_1238_4 );
   }
   double s_FldProp_AcctTotalPercent_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000  );
   }
   const DString& s_FldProp_AcctTotalPercent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1238_4( I_("AcctTotalPercent ") );
      return( dstrFldLabel_1238_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctTotalPercent(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctTotalPercent // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_AcctTotalPercent_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctTotalPercent_d_DVF // default value
      ,s_FldProp_AcctTotalPercent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundTotalPercent (1239)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundTotalPercent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1239_5( I_("0.0000 ") );
      return( dstrDefValue_1239_5 );
   }
   double s_FldProp_FundTotalPercent_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000  );
   }
   const DString& s_FldProp_FundTotalPercent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1239_5( I_("FundTotalPercent ") );
      return( dstrFldLabel_1239_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundTotalPercent(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FundTotalPercent // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_FundTotalPercent_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FundTotalPercent_d_DVF // default value
      ,s_FldProp_FundTotalPercent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PlanTypeDesc (1240)
   //------------------------------------------------------------------
   const DString& s_FldProp_PlanTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1240_5( I_("0") );
      return( dstrDefValue_1240_5 );
   }
   const DString& s_FldProp_PlanTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1240_5( I_("PlanTypeDesc   ") );
      return( dstrFldLabel_1240_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PlanTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,PlanTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PlanTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PlanTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccountTypes (1241)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccountTypes_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1241_4( I_("  ") );
      return( dstrDefValue_1241_4 );
   }
   const DString& s_FldProp_AccountTypes_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1241_4( I_("AccountTypes  ") );
      return( dstrFldLabel_1241_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccountTypes(
       BFDataFieldProperties::Type::text // field is a text field
      ,AccountTypes // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AccountTypes_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccountTypes_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Certificate (1242)
   //------------------------------------------------------------------
   const DString& s_FldProp_Certificate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1242_3( I_(" ") );
      return( dstrDefValue_1242_3 );
   }
   const DString& s_FldProp_Certificate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1242_3( I_("Certificate  ") );
      return( dstrFldLabel_1242_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Certificate(
       BFDataFieldProperties::Type::text // field is a text field
      ,Certificate // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Certificate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Certificate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SelfDirected (1243)
   //------------------------------------------------------------------
   const DString& s_FldProp_SelfDirected_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1243_1( I_(" ") );
      return( dstrDefValue_1243_1 );
   }
   const DString& s_FldProp_SelfDirected_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1243_1( I_("SelfDirected  ") );
      return( dstrFldLabel_1243_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SelfDirected(
       BFDataFieldProperties::Type::text // field is a text field
      ,SelfDirected // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SelfDirected_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SelfDirected_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LockedIn (1244)
   //------------------------------------------------------------------
   const DString& s_FldProp_LockedIn_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1244_5( I_("Y") );
      return( dstrDefValue_1244_5 );
   }
   const DString& s_FldProp_LockedIn_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1244_5( I_("LockedIn  ") );
      return( dstrFldLabel_1244_5 );
   }
   PBF_SSC subset_super_chooser_2_1244( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LockedIn(
       BFDataFieldProperties::Type::text // field is a text field
      ,LockedIn // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LockedIn_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LockedIn_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1244 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxByJuris (1245)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxByJuris_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1245_7( I_(" ") );
      return( dstrDefValue_1245_7 );
   }
   const DString& s_FldProp_TaxByJuris_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1245_7( I_("TaxByJuris  ") );
      return( dstrFldLabel_1245_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxByJuris(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxByJuris // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxByJuris_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxByJuris_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FedJurisAllowed (1246)
   //------------------------------------------------------------------
   const DString& s_FldProp_FedJurisAllowed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1246_4( I_("Y") );
      return( dstrDefValue_1246_4 );
   }
   const DString& s_FldProp_FedJurisAllowed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1246_4( I_("FedJurisAllowed  ") );
      return( dstrFldLabel_1246_4 );
   }
   PBF_SSC subset_super_chooser_2_1246( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FedJurisAllowed(
       BFDataFieldProperties::Type::text // field is a text field
      ,FedJurisAllowed // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FedJurisAllowed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FedJurisAllowed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1246 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NomTaxRcpt (1247)
   //------------------------------------------------------------------
   const DString& s_FldProp_NomTaxRcpt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1247_6( I_(" ") );
      return( dstrDefValue_1247_6 );
   }
   const DString& s_FldProp_NomTaxRcpt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1247_6( I_("NomTaxRcpt  ") );
      return( dstrFldLabel_1247_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NomTaxRcpt(
       BFDataFieldProperties::Type::text // field is a text field
      ,NomTaxRcpt // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NomTaxRcpt_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NomTaxRcpt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AvailNonRes (1248)
   //------------------------------------------------------------------
   const DString& s_FldProp_AvailNonRes_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1248_4( I_(" ") );
      return( dstrDefValue_1248_4 );
   }
   const DString& s_FldProp_AvailNonRes_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1248_4( I_("AvailNonRes  ") );
      return( dstrFldLabel_1248_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AvailNonRes(
       BFDataFieldProperties::Type::text // field is a text field
      ,AvailNonRes // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AvailNonRes_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AvailNonRes_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ReinDistOnly (1249)
   //------------------------------------------------------------------
   const DString& s_FldProp_ReinDistOnly_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1249_5( I_(" ") );
      return( dstrDefValue_1249_5 );
   }
   const DString& s_FldProp_ReinDistOnly_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1249_5( I_("ReinDistOnly  ") );
      return( dstrFldLabel_1249_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ReinDistOnly(
       BFDataFieldProperties::Type::text // field is a text field
      ,ReinDistOnly // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ReinDistOnly_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ReinDistOnly_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinimumApplies (1250)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinimumApplies_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1250_5( I_(" ") );
      return( dstrDefValue_1250_5 );
   }
   const DString& s_FldProp_MinimumApplies_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1250_5( I_("MinimumApplies  ") );
      return( dstrFldLabel_1250_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinimumApplies(
       BFDataFieldProperties::Type::text // field is a text field
      ,MinimumApplies // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MinimumApplies_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MinimumApplies_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaximumApplies (1251)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaximumApplies_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1251_4( I_(" ") );
      return( dstrDefValue_1251_4 );
   }
   const DString& s_FldProp_MaximumApplies_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1251_4( I_("MaximumApplies  ") );
      return( dstrFldLabel_1251_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaximumApplies(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaximumApplies // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaximumApplies_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaximumApplies_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GICallowed (1252)
   //------------------------------------------------------------------
   const DString& s_FldProp_GICallowed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1252_5( I_(" ") );
      return( dstrDefValue_1252_5 );
   }
   const DString& s_FldProp_GICallowed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1252_5( I_("GICallowed  ") );
      return( dstrFldLabel_1252_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GICallowed(
       BFDataFieldProperties::Type::text // field is a text field
      ,GICallowed // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GICallowed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GICallowed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PACallowed (1253)
   //------------------------------------------------------------------
   const DString& s_FldProp_PACallowed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1253_5( I_(" ") );
      return( dstrDefValue_1253_5 );
   }
   const DString& s_FldProp_PACallowed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1253_5( I_("PACallowed  ") );
      return( dstrFldLabel_1253_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PACallowed(
       BFDataFieldProperties::Type::text // field is a text field
      ,PACallowed // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PACallowed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PACallowed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SWPallowed (1254)
   //------------------------------------------------------------------
   const DString& s_FldProp_SWPallowed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1254_4( I_("N") );
      return( dstrDefValue_1254_4 );
   }
   const DString& s_FldProp_SWPallowed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1254_4( I_("SWPallowed") );
      return( dstrFldLabel_1254_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SWPallowed(
       BFDataFieldProperties::Type::text // field is a text field
      ,SWPallowed // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SWPallowed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SWPallowed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdminFeeDefn (1255)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdminFeeDefn_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1255_3( I_("  ") );
      return( dstrDefValue_1255_3 );
   }
   const DString& s_FldProp_AdminFeeDefn_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1255_3( I_("AdminFeeDefn  ") );
      return( dstrFldLabel_1255_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdminFeeDefn(
       BFDataFieldProperties::Type::text // field is a text field
      ,AdminFeeDefn // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AdminFeeDefn_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AdminFeeDefn_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MailList1 (1256)
   //------------------------------------------------------------------
   const DString& s_FldProp_MailList1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1256_1( I_("  ") );
      return( dstrDefValue_1256_1 );
   }
   const DString& s_FldProp_MailList1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1256_1( I_("MailList1  ") );
      return( dstrFldLabel_1256_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MailList1(
       BFDataFieldProperties::Type::text // field is a text field
      ,MailList1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MailList1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MailList1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MailList2 (1257)
   //------------------------------------------------------------------
   const DString& s_FldProp_MailList2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1257_5( I_("  ") );
      return( dstrDefValue_1257_5 );
   }
   const DString& s_FldProp_MailList2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1257_5( I_("MailList2  ") );
      return( dstrFldLabel_1257_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MailList2(
       BFDataFieldProperties::Type::text // field is a text field
      ,MailList2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MailList2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MailList2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MailList3 (1258)
   //------------------------------------------------------------------
   const DString& s_FldProp_MailList3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1258_7( I_("  ") );
      return( dstrDefValue_1258_7 );
   }
   const DString& s_FldProp_MailList3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1258_7( I_("MailList3   ") );
      return( dstrFldLabel_1258_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MailList3(
       BFDataFieldProperties::Type::text // field is a text field
      ,MailList3 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MailList3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MailList3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MailList4 (1259)
   //------------------------------------------------------------------
   const DString& s_FldProp_MailList4_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1259_4( I_("  ") );
      return( dstrDefValue_1259_4 );
   }
   const DString& s_FldProp_MailList4_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1259_4( I_("MailList4  ") );
      return( dstrFldLabel_1259_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MailList4(
       BFDataFieldProperties::Type::text // field is a text field
      ,MailList4 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MailList4_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MailList4_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MailList5 (1260)
   //------------------------------------------------------------------
   const DString& s_FldProp_MailList5_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1260_5( I_("  ") );
      return( dstrDefValue_1260_5 );
   }
   const DString& s_FldProp_MailList5_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1260_5( I_("MailList5  ") );
      return( dstrFldLabel_1260_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MailList5(
       BFDataFieldProperties::Type::text // field is a text field
      ,MailList5 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MailList5_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MailList5_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MailList6 (1261)
   //------------------------------------------------------------------
   const DString& s_FldProp_MailList6_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1261_4( I_("  ") );
      return( dstrDefValue_1261_4 );
   }
   const DString& s_FldProp_MailList6_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1261_4( I_("MailList6  ") );
      return( dstrFldLabel_1261_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MailList6(
       BFDataFieldProperties::Type::text // field is a text field
      ,MailList6 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MailList6_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MailList6_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MailList7 (1262)
   //------------------------------------------------------------------
   const DString& s_FldProp_MailList7_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1262_4( I_("  ") );
      return( dstrDefValue_1262_4 );
   }
   const DString& s_FldProp_MailList7_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1262_4( I_("MailList7  ") );
      return( dstrFldLabel_1262_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MailList7(
       BFDataFieldProperties::Type::text // field is a text field
      ,MailList7 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MailList7_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MailList7_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MailList8 (1263)
   //------------------------------------------------------------------
   const DString& s_FldProp_MailList8_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1263_4( I_("  ") );
      return( dstrDefValue_1263_4 );
   }
   const DString& s_FldProp_MailList8_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1263_4( I_("MailList8  ") );
      return( dstrFldLabel_1263_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MailList8(
       BFDataFieldProperties::Type::text // field is a text field
      ,MailList8 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MailList8_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MailList8_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MailList9 (1264)
   //------------------------------------------------------------------
   const DString& s_FldProp_MailList9_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1264_6( I_("  ") );
      return( dstrDefValue_1264_6 );
   }
   const DString& s_FldProp_MailList9_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1264_6( I_("MailList9  ") );
      return( dstrFldLabel_1264_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MailList9(
       BFDataFieldProperties::Type::text // field is a text field
      ,MailList9 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MailList9_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MailList9_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MailList10 (1265)
   //------------------------------------------------------------------
   const DString& s_FldProp_MailList10_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1265_7( I_("  ") );
      return( dstrDefValue_1265_7 );
   }
   const DString& s_FldProp_MailList10_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1265_7( I_("MailList10  ") );
      return( dstrFldLabel_1265_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MailList10(
       BFDataFieldProperties::Type::text // field is a text field
      ,MailList10 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MailList10_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MailList10_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MailList11 (1266)
   //------------------------------------------------------------------
   const DString& s_FldProp_MailList11_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1266_3( I_("  ") );
      return( dstrDefValue_1266_3 );
   }
   const DString& s_FldProp_MailList11_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1266_3( I_("MailList11  ") );
      return( dstrFldLabel_1266_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MailList11(
       BFDataFieldProperties::Type::text // field is a text field
      ,MailList11 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MailList11_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MailList11_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MailList12 (1267)
   //------------------------------------------------------------------
   const DString& s_FldProp_MailList12_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1267_6( I_("  ") );
      return( dstrDefValue_1267_6 );
   }
   const DString& s_FldProp_MailList12_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1267_6( I_("MailList12  ") );
      return( dstrFldLabel_1267_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MailList12(
       BFDataFieldProperties::Type::text // field is a text field
      ,MailList12 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MailList12_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MailList12_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxCashDist1 (1268)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxCashDist1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1268_3( I_(" ") );
      return( dstrDefValue_1268_3 );
   }
   const DString& s_FldProp_TaxCashDist1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1268_3( I_("TaxCashDist1  ") );
      return( dstrFldLabel_1268_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxCashDist1(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxCashDist1 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxCashDist1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxCashDist1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxCashDist2 (1269)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxCashDist2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1269_6( I_(" ") );
      return( dstrDefValue_1269_6 );
   }
   const DString& s_FldProp_TaxCashDist2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1269_6( I_("TaxCashDist2  ") );
      return( dstrFldLabel_1269_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxCashDist2(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxCashDist2 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxCashDist2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxCashDist2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxCashDist3 (1270)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxCashDist3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1270_8( I_(" ") );
      return( dstrDefValue_1270_8 );
   }
   const DString& s_FldProp_TaxCashDist3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1270_8( I_("TaxCashDist3  ") );
      return( dstrFldLabel_1270_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxCashDist3(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxCashDist3 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxCashDist3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxCashDist3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxEarlyClose1 (1271)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxEarlyClose1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1271_3( I_(" ") );
      return( dstrDefValue_1271_3 );
   }
   const DString& s_FldProp_TaxEarlyClose1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1271_3( I_("TaxCashDist1   ") );
      return( dstrFldLabel_1271_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxEarlyClose1(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxEarlyClose1 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxEarlyClose1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxEarlyClose1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxEarlyClose2 (1272)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxEarlyClose2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1272_5( I_(" ") );
      return( dstrDefValue_1272_5 );
   }
   const DString& s_FldProp_TaxEarlyClose2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1272_5( I_("TaxEarlyClose2  ") );
      return( dstrFldLabel_1272_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxEarlyClose2(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxEarlyClose2 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxEarlyClose2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxEarlyClose2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxEarlyClose3 (1273)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxEarlyClose3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1273_3( I_(" ") );
      return( dstrDefValue_1273_3 );
   }
   const DString& s_FldProp_TaxEarlyClose3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1273_3( I_("TaxEarlyClose3 ") );
      return( dstrFldLabel_1273_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxEarlyClose3(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxEarlyClose3 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxEarlyClose3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxEarlyClose3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxFullRdmp1 (1274)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxFullRdmp1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1274_5( I_(" ") );
      return( dstrDefValue_1274_5 );
   }
   const DString& s_FldProp_TaxFullRdmp1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1274_5( I_("TaxFullRdmp1  ") );
      return( dstrFldLabel_1274_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxFullRdmp1(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxFullRdmp1 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxFullRdmp1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxFullRdmp1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxFullRdmp2 (1275)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxFullRdmp2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1275_3( I_(" ") );
      return( dstrDefValue_1275_3 );
   }
   const DString& s_FldProp_TaxFullRdmp2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1275_3( I_("TaxFullRdmp2 ") );
      return( dstrFldLabel_1275_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxFullRdmp2(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxFullRdmp2 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxFullRdmp2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxFullRdmp2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxFullRdmp3 (1276)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxFullRdmp3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1276_3( I_(" ") );
      return( dstrDefValue_1276_3 );
   }
   const DString& s_FldProp_TaxFullRdmp3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1276_3( I_("TaxFullRdmp3  ") );
      return( dstrFldLabel_1276_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxFullRdmp3(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxFullRdmp3 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxFullRdmp3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxFullRdmp3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxNotional1 (1277)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxNotional1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1277_4( I_(" ") );
      return( dstrDefValue_1277_4 );
   }
   const DString& s_FldProp_TaxNotional1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1277_4( I_("TaxNotional1  ") );
      return( dstrFldLabel_1277_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxNotional1(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxNotional1 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxNotional1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxNotional1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxNotional2 (1278)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxNotional2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1278_6( I_(" ") );
      return( dstrDefValue_1278_6 );
   }
   const DString& s_FldProp_TaxNotional2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1278_6( I_("TaxNotional2  ") );
      return( dstrFldLabel_1278_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxNotional2(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxNotional2 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxNotional2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxNotional2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxNotional3 (1279)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxNotional3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1279_4( I_(" ") );
      return( dstrDefValue_1279_4 );
   }
   const DString& s_FldProp_TaxNotional3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1279_4( I_("TaxNotional3  ") );
      return( dstrFldLabel_1279_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxNotional3(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxNotional3 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxNotional3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxNotional3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxPartRdmp1 (1280)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxPartRdmp1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1280_5( I_(" ") );
      return( dstrDefValue_1280_5 );
   }
   const DString& s_FldProp_TaxPartRdmp1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1280_5( I_("TaxPartRdmp1  ") );
      return( dstrFldLabel_1280_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxPartRdmp1(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxPartRdmp1 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxPartRdmp1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxPartRdmp1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxPartRdmp2 (1281)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxPartRdmp2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1281_5( I_(" ") );
      return( dstrDefValue_1281_5 );
   }
   const DString& s_FldProp_TaxPartRdmp2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1281_5( I_("TaxPartRdmp2  ") );
      return( dstrFldLabel_1281_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxPartRdmp2(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxPartRdmp2 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxPartRdmp2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxPartRdmp2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxPartRdmp3 (1282)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxPartRdmp3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1282_4( I_(" ") );
      return( dstrDefValue_1282_4 );
   }
   const DString& s_FldProp_TaxPartRdmp3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1282_4( I_("TaxPartRdmp3  ") );
      return( dstrFldLabel_1282_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxPartRdmp3(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxPartRdmp3 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxPartRdmp3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxPartRdmp3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxPurchase1 (1283)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxPurchase1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1283_3( I_(" ") );
      return( dstrDefValue_1283_3 );
   }
   const DString& s_FldProp_TaxPurchase1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1283_3( I_("TaxPurchase1  ") );
      return( dstrFldLabel_1283_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxPurchase1(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxPurchase1 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxPurchase1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxPurchase1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxPurchase2 (1284)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxPurchase2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1284_1( I_(" ") );
      return( dstrDefValue_1284_1 );
   }
   const DString& s_FldProp_TaxPurchase2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1284_1( I_("TaxPurchase2  ") );
      return( dstrFldLabel_1284_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxPurchase2(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxPurchase2 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxPurchase2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxPurchase2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxPurchase3 (1285)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxPurchase3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1285_6( I_(" ") );
      return( dstrDefValue_1285_6 );
   }
   const DString& s_FldProp_TaxPurchase3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1285_6( I_("TaxPurchase3  ") );
      return( dstrFldLabel_1285_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxPurchase3(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxPurchase3 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxPurchase3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxPurchase3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxReinvDist1 (1286)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxReinvDist1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1286_7( I_(" ") );
      return( dstrDefValue_1286_7 );
   }
   const DString& s_FldProp_TaxReinvDist1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1286_7( I_("TaxReinvDist1  ") );
      return( dstrFldLabel_1286_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxReinvDist1(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxReinvDist1 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxReinvDist1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxReinvDist1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxReinvDist2 (1287)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxReinvDist2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1287_4( I_(" ") );
      return( dstrDefValue_1287_4 );
   }
   const DString& s_FldProp_TaxReinvDist2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1287_4( I_("TaxReinvDist2  ") );
      return( dstrFldLabel_1287_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxReinvDist2(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxReinvDist2 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxReinvDist2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxReinvDist2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxReinvDist3 (1288)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxReinvDist3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1288_5( I_(" ") );
      return( dstrDefValue_1288_5 );
   }
   const DString& s_FldProp_TaxReinvDist3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1288_5( I_("TaxReinvDist3  ") );
      return( dstrFldLabel_1288_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxReinvDist3(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxReinvDist3 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxReinvDist3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxReinvDist3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxSwitches1 (1289)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxSwitches1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1289_4( I_(" ") );
      return( dstrDefValue_1289_4 );
   }
   const DString& s_FldProp_TaxSwitches1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1289_4( I_("TaxSwitches1  ") );
      return( dstrFldLabel_1289_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxSwitches1(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxSwitches1 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxSwitches1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxSwitches1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxSwitches2 (1290)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxSwitches2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1290_4( I_(" ") );
      return( dstrDefValue_1290_4 );
   }
   const DString& s_FldProp_TaxSwitches2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1290_4( I_("TaxSwitches2  ") );
      return( dstrFldLabel_1290_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxSwitches2(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxSwitches2 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxSwitches2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxSwitches2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxSwitches3 (1291)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxSwitches3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1291_4( I_(" ") );
      return( dstrDefValue_1291_4 );
   }
   const DString& s_FldProp_TaxSwitches3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1291_4( I_("TaxSwitches3  ") );
      return( dstrFldLabel_1291_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxSwitches3(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxSwitches3 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxSwitches3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxSwitches3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxTransfers1 (1292)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxTransfers1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1292_5( I_(" ") );
      return( dstrDefValue_1292_5 );
   }
   const DString& s_FldProp_TaxTransfers1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1292_5( I_("TaxTransfers1  ") );
      return( dstrFldLabel_1292_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxTransfers1(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxTransfers1 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxTransfers1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxTransfers1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxTransfers2 (1293)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxTransfers2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1293_4( I_(" ") );
      return( dstrDefValue_1293_4 );
   }
   const DString& s_FldProp_TaxTransfers2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1293_4( I_("TaxTransfers2  ") );
      return( dstrFldLabel_1293_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxTransfers2(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxTransfers2 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxTransfers2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxTransfers2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxTransfers3 (1294)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxTransfers3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1294_5( I_(" ") );
      return( dstrDefValue_1294_5 );
   }
   const DString& s_FldProp_TaxTransfers3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1294_5( I_("TaxTransfers3  ") );
      return( dstrFldLabel_1294_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxTransfers3(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxTransfers3 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxTransfers3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxTransfers3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ClientEquiv (1295)
   //------------------------------------------------------------------
   const DString& s_FldProp_ClientEquiv_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1295_4( I_(" ") );
      return( dstrDefValue_1295_4 );
   }
   const DString& s_FldProp_ClientEquiv_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1295_4( I_("ClientEquiv ") );
      return( dstrFldLabel_1295_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ClientEquiv(
       BFDataFieldProperties::Type::text // field is a text field
      ,ClientEquiv // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ClientEquiv_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ClientEquiv_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Precision (1304)
   //------------------------------------------------------------------
   const DString& s_FldProp_Precision_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1304_4( I_("0") );
      return( dstrDefValue_1304_4 );
   }
   DIINT64 s_FldProp_Precision_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_Precision_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1304_4( I_("Precision ") );
      return( dstrFldLabel_1304_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Precision(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,Precision // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_Precision_s_DVF // default value
      ,s_FldProp_Precision_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_Precision_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RoundMethod (1305)
   //------------------------------------------------------------------
   const DString& s_FldProp_RoundMethod_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1305_4( I_("0") );
      return( dstrDefValue_1305_4 );
   }
   const DString& s_FldProp_RoundMethod_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1305_4( I_("RoundMethod ") );
      return( dstrFldLabel_1305_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RoundMethod(
       BFDataFieldProperties::Type::text // field is a text field
      ,RoundMethod // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RoundMethod_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RoundMethod_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_KAddrFileVer (1307)
   //------------------------------------------------------------------
   const DString& s_FldProp_KAddrFileVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1307_5( I_("0") );
      return( dstrDefValue_1307_5 );
   }
   double s_FldProp_KAddrFileVer_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_KAddrFileVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1307_5( I_("KAddrFileVer ") );
      return( dstrFldLabel_1307_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_KAddrFileVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,KAddrFileVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_KAddrFileVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_KAddrFileVer_d_DVF // default value
      ,s_FldProp_KAddrFileVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_KAddrFileRid (1308)
   //------------------------------------------------------------------
   const DString& s_FldProp_KAddrFileRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1308_4( I_("0") );
      return( dstrDefValue_1308_4 );
   }
   double s_FldProp_KAddrFileRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_KAddrFileRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1308_4( I_("KAddrFileRid") );
      return( dstrFldLabel_1308_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_KAddrFileRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,KAddrFileRid // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_KAddrFileRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_KAddrFileRid_d_DVF // default value
      ,s_FldProp_KAddrFileRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CompoundDate (1309)
   //------------------------------------------------------------------
   const DString& s_FldProp_CompoundDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1309_4( I_(" ") );
      return( dstrDefValue_1309_4 );
   }
   const DString& s_FldProp_CompoundDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1309_4( I_("CompoundDate ") );
      return( dstrFldLabel_1309_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CompoundDate(
       BFDataFieldProperties::Type::text // field is a text field
      ,CompoundDate // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CompoundDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CompoundDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MandAddLines (1310)
   //------------------------------------------------------------------
   const DString& s_FldProp_MandAddLines_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1310_4( I_("3") );
      return( dstrDefValue_1310_4 );
   }
   const DString& s_FldProp_MandAddLines_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1310_4( I_("MandAddLines ") );
      return( dstrFldLabel_1310_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MandAddLines(
       BFDataFieldProperties::Type::text // field is a text field
      ,MandAddLines // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MandAddLines_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MandAddLines_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FlatPercentDesc (1311)
   //------------------------------------------------------------------
   const DString& s_FldProp_FlatPercentDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1311_4( I_(" ") );
      return( dstrDefValue_1311_4 );
   }
   const DString& s_FldProp_FlatPercentDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1311_4( I_("FlatPercentDesc ") );
      return( dstrFldLabel_1311_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FlatPercentDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,FlatPercentDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FlatPercentDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FlatPercentDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctTypeX (1312)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctTypeX_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1312_4( I_("  ") );
      return( dstrDefValue_1312_4 );
   }
   const DString& s_FldProp_AcctTypeX_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1312_4( I_("AcctTypeX  ") );
      return( dstrFldLabel_1312_4 );
   }
   PBF_SSC subset_super_chooser_2_1312( const ClientLocale& locale )
   {
      return chooser_ss_002_129; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctTypeX(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctTypeX // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctTypeX_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctTypeX_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1312 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BranchListHeading (1313)
   //------------------------------------------------------------------
   const DString& s_FldProp_BranchListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1313_4( I_("0") );
         return( dstrDefValue_1313_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1313_7( I_("") );
         return( dstrDefValue_1313_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1313_8( I_("") );
         return( dstrDefValue_1313_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1313_5( I_("") );
         return( dstrDefValue_1313_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1313_1( I_("") );
         return( dstrDefValue_1313_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1313_6( I_("0") );
         return( dstrDefValue_1313_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1313_3( I_("") );
         return( dstrDefValue_1313_3 );
      }
      static const DString dstrDefValue_1313_1( I_("") );
      return( dstrDefValue_1313_1 );
   }
   const DString& s_FldProp_BranchListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1313_4( I_("BranchListHeading  ") );
         return( dstrFldLabel_1313_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1313_7( I_("BranchListHeading  ") );
         return( dstrFldLabel_1313_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1313_8( I_("BranchListHeading  ") );
         return( dstrFldLabel_1313_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1313_5( I_("BranchListHeading  ") );
         return( dstrFldLabel_1313_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1313_1( I_("BranchListHeading  ") );
         return( dstrFldLabel_1313_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1313_6( I_("BranchListHeading  ") );
         return( dstrFldLabel_1313_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1313_3( I_("BranchListHeading  ") );
         return( dstrFldLabel_1313_3 );
      }
      static const DString dstrFldLabel_1313_1( I_("BranchListHeading  ") );
      return( dstrFldLabel_1313_1 );
   }
   PBF_SSC subset_super_chooser_2_1313( const ClientLocale& locale )
   {
      return chooser_ss_002_130; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BranchListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,BranchListHeading // fieldId
      ,0 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BranchListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BranchListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1313 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsRepListHeading (1314)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsRepListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1314_4( I_("0") );
         return( dstrDefValue_1314_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1314_8( I_("") );
         return( dstrDefValue_1314_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1314_7( I_("") );
         return( dstrDefValue_1314_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1314_5( I_("") );
         return( dstrDefValue_1314_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1314_3( I_("") );
         return( dstrDefValue_1314_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1314_1( I_("") );
         return( dstrDefValue_1314_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1314_6( I_("0") );
         return( dstrDefValue_1314_6 );
      }
      static const DString dstrDefValue_1314_1( I_("") );
      return( dstrDefValue_1314_1 );
   }
   const DString& s_FldProp_SlsRepListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1314_4( I_("SlsRepListHeading  ") );
         return( dstrFldLabel_1314_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1314_8( I_("SlsRepListHeading  ") );
         return( dstrFldLabel_1314_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1314_7( I_("SlsRepListHeading  ") );
         return( dstrFldLabel_1314_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1314_5( I_("SlsRepListHeading  ") );
         return( dstrFldLabel_1314_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1314_3( I_("SlsRepListHeading  ") );
         return( dstrFldLabel_1314_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1314_1( I_("SlsRepListHeading  ") );
         return( dstrFldLabel_1314_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1314_6( I_("SlsRepListHeading  ") );
         return( dstrFldLabel_1314_6 );
      }
      static const DString dstrFldLabel_1314_1( I_("SlsRepListHeading  ") );
      return( dstrFldLabel_1314_1 );
   }
   PBF_SSC subset_super_chooser_2_1314( const ClientLocale& locale )
   {
      return chooser_ss_002_131; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsRepListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,SlsRepListHeading // fieldId
      ,0 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsRepListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SlsRepListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1314 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundClass (1315)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundClass_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1315_3( I_(" ") );
      return( dstrDefValue_1315_3 );
   }
   const DString& s_FldProp_FundClass_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1315_3( I_("FundClass ") );
      return( dstrFldLabel_1315_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundClass(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundClass // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundClass_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundClass_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettledValueAcctCurr (1316)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettledValueAcctCurr_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1316_4( I_("0") );
         return( dstrDefValue_1316_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1316_8( I_("0") );
         return( dstrDefValue_1316_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1316_7( I_("0") );
         return( dstrDefValue_1316_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1316_5( I_("0") );
         return( dstrDefValue_1316_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1316_3( I_("0") );
         return( dstrDefValue_1316_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1316_1( I_("0") );
         return( dstrDefValue_1316_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1316_6( I_("0") );
         return( dstrDefValue_1316_6 );
      }
      static const DString dstrDefValue_1316_1( I_("0") );
      return( dstrDefValue_1316_1 );
   }
   double s_FldProp_SettledValueAcctCurr_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_SettledValueAcctCurr_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1316_4( I_("SettledValueSysCurr") );
         return( dstrFldLabel_1316_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1316_8( I_("SettledValueAcctCurr") );
         return( dstrFldLabel_1316_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1316_7( I_("SettledValueAcctCurr") );
         return( dstrFldLabel_1316_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1316_5( I_("SettledValueSysCurr") );
         return( dstrFldLabel_1316_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1316_3( I_("SettledValueAcctCurr") );
         return( dstrFldLabel_1316_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1316_1( I_("SettledValueAcctCurr") );
         return( dstrFldLabel_1316_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1316_6( I_("SettledValueAcctCurr") );
         return( dstrFldLabel_1316_6 );
      }
      static const DString dstrFldLabel_1316_1( I_("SettledValueAcctCurr") );
      return( dstrFldLabel_1316_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettledValueAcctCurr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,SettledValueAcctCurr // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_SettledValueAcctCurr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_SettledValueAcctCurr_d_DVF // default value
      ,s_FldProp_SettledValueAcctCurr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DistributionHeadingSet1 (1317)
   //------------------------------------------------------------------
   const DString& s_FldProp_DistributionHeadingSet1_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1317_4( I_("0") );
         return( dstrDefValue_1317_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1317_5( I_("") );
         return( dstrDefValue_1317_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1317_8( I_("") );
         return( dstrDefValue_1317_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1317_7( I_("") );
         return( dstrDefValue_1317_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1317_1( I_("") );
         return( dstrDefValue_1317_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1317_3( I_("") );
         return( dstrDefValue_1317_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1317_6( I_("0") );
         return( dstrDefValue_1317_6 );
      }
      static const DString dstrDefValue_1317_1( I_("") );
      return( dstrDefValue_1317_1 );
   }
   const DString& s_FldProp_DistributionHeadingSet1_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1317_4( I_("DistributionHeadingSet1") );
         return( dstrFldLabel_1317_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1317_5( I_("DistributionHeadingSet1") );
         return( dstrFldLabel_1317_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1317_8( I_("DistributionHeadingSet1") );
         return( dstrFldLabel_1317_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1317_7( I_("DistributionHeadingSet1") );
         return( dstrFldLabel_1317_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1317_1( I_("DistributionHeadingSet1") );
         return( dstrFldLabel_1317_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1317_3( I_("DistributionHeadingSet1") );
         return( dstrFldLabel_1317_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1317_6( I_("DistributionHeadingSet1") );
         return( dstrFldLabel_1317_6 );
      }
      static const DString dstrFldLabel_1317_1( I_("DistributionHeadingSet1") );
      return( dstrFldLabel_1317_1 );
   }
   PBF_SSC subset_super_chooser_2_1317( const ClientLocale& locale )
   {
      return chooser_ss_002_132; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DistributionHeadingSet1(
       BFDataFieldProperties::Type::text // field is a text field
      ,DistributionHeadingSet1 // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DistributionHeadingSet1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DistributionHeadingSet1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1317 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Address (1318)
   //------------------------------------------------------------------
   const DString& s_FldProp_Address_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1318_4( I_("    ") );
      return( dstrDefValue_1318_4 );
   }
   const DString& s_FldProp_Address_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1318_4( I_("Address") );
      return( dstrFldLabel_1318_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Address(
       BFDataFieldProperties::Type::text // field is a text field
      ,Address // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Address_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Address_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_KanaAddress (1319)
   //------------------------------------------------------------------
   const DString& s_FldProp_KanaAddress_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1319_4( I_("   ") );
      return( dstrDefValue_1319_4 );
   }
   const DString& s_FldProp_KanaAddress_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1319_4( I_("KanaAddress") );
      return( dstrFldLabel_1319_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_KanaAddress(
       BFDataFieldProperties::Type::text // field is a text field
      ,KanaAddress // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_KanaAddress_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_KanaAddress_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Option (1320)
   //------------------------------------------------------------------
   const DString& s_FldProp_Option_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1320_4( I_("0") );
      return( dstrDefValue_1320_4 );
   }
   const DString& s_FldProp_Option_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1320_4( I_("Option") );
      return( dstrFldLabel_1320_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Option(
       BFDataFieldProperties::Type::text // field is a text field
      ,Option // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Option_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Option_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DistributionTransType (1321)
   //------------------------------------------------------------------
   const DString& s_FldProp_DistributionTransType_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1321_4( I_("0") );
         return( dstrDefValue_1321_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1321_5( I_("") );
         return( dstrDefValue_1321_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1321_8( I_("") );
         return( dstrDefValue_1321_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1321_7( I_("") );
         return( dstrDefValue_1321_7 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1321_3( I_("") );
         return( dstrDefValue_1321_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1321_1( I_("") );
         return( dstrDefValue_1321_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1321_6( I_("0") );
         return( dstrDefValue_1321_6 );
      }
      static const DString dstrDefValue_1321_1( I_("") );
      return( dstrDefValue_1321_1 );
   }
   const DString& s_FldProp_DistributionTransType_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1321_4( I_("DistributionTransType") );
         return( dstrFldLabel_1321_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1321_5( I_("DistributionTransType") );
         return( dstrFldLabel_1321_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1321_8( I_("DistributionTransType") );
         return( dstrFldLabel_1321_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1321_7( I_("DistributionTransType") );
         return( dstrFldLabel_1321_7 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1321_3( I_("DistributionTransType") );
         return( dstrFldLabel_1321_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1321_1( I_("DistributionTransType") );
         return( dstrFldLabel_1321_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1321_6( I_("DistributionTransType") );
         return( dstrFldLabel_1321_6 );
      }
      static const DString dstrFldLabel_1321_1( I_("DistributionTransType") );
      return( dstrFldLabel_1321_1 );
   }
   PBF_SSC subset_super_chooser_2_1321( const ClientLocale& locale )
   {
      return chooser_ss_002_134; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DistributionTransType(
       BFDataFieldProperties::Type::text // field is a text field
      ,DistributionTransType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DistributionTransType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DistributionTransType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1321 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SortBy (1322)
   //------------------------------------------------------------------
   const DString& s_FldProp_SortBy_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1322_4( I_(" ") );
      return( dstrDefValue_1322_4 );
   }
   const DString& s_FldProp_SortBy_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1322_4( I_("SortBy") );
      return( dstrFldLabel_1322_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SortBy(
       BFDataFieldProperties::Type::text // field is a text field
      ,SortBy // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SortBy_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SortBy_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CurrSysDate (1323)
   //------------------------------------------------------------------
   const DString& s_FldProp_CurrSysDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1323_5( I_(" ") );
      return( dstrDefValue_1323_5 );
   }
   const DString& s_FldProp_CurrSysDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1323_5( I_("CurrSysDate") );
      return( dstrFldLabel_1323_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CurrSysDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,CurrSysDate // fieldId
      ,12 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CurrSysDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CurrSysDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CurrSysTime (1324)
   //------------------------------------------------------------------
   const DString& s_FldProp_CurrSysTime_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1324_4( I_(" ") );
      return( dstrDefValue_1324_4 );
   }
   const DString& s_FldProp_CurrSysTime_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1324_4( I_("CurrSysTime") );
      return( dstrFldLabel_1324_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CurrSysTime(
       BFDataFieldProperties::Type::time // field is a time field
      ,CurrSysTime // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CurrSysTime_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CurrSysTime_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DummyDistributionPayType (1325)
   //------------------------------------------------------------------
   const DString& s_FldProp_DummyDistributionPayType_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1325_4( I_("0") );
         return( dstrDefValue_1325_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1325_5( I_("") );
         return( dstrDefValue_1325_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1325_8( I_("") );
         return( dstrDefValue_1325_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1325_7( I_("") );
         return( dstrDefValue_1325_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1325_1( I_("") );
         return( dstrDefValue_1325_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1325_3( I_("") );
         return( dstrDefValue_1325_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1325_6( I_("0") );
         return( dstrDefValue_1325_6 );
      }
      static const DString dstrDefValue_1325_1( I_("") );
      return( dstrDefValue_1325_1 );
   }
   const DString& s_FldProp_DummyDistributionPayType_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1325_4( I_("DummyDistributionPayType") );
         return( dstrFldLabel_1325_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1325_5( I_("DummyDistributionPayType") );
         return( dstrFldLabel_1325_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1325_8( I_("DummyDistributionPayType") );
         return( dstrFldLabel_1325_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1325_7( I_("DummyDistributionPayType") );
         return( dstrFldLabel_1325_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1325_1( I_("DummyDistributionPayType") );
         return( dstrFldLabel_1325_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1325_3( I_("DummyDistributionPayType") );
         return( dstrFldLabel_1325_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1325_6( I_("DummyDistributionPayType") );
         return( dstrFldLabel_1325_6 );
      }
      static const DString dstrFldLabel_1325_1( I_("DummyDistributionPayType") );
      return( dstrFldLabel_1325_1 );
   }
   PBF_SSC subset_super_chooser_2_1325( const ClientLocale& locale )
   {
      return chooser_ss_002_135; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DummyDistributionPayType(
       BFDataFieldProperties::Type::text // field is a text field
      ,DummyDistributionPayType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DummyDistributionPayType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DummyDistributionPayType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1325 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MorganAcctTypeForT (1327)
   //------------------------------------------------------------------
   const DString& s_FldProp_MorganAcctTypeForT_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1327_5( I_(" ") );
      return( dstrDefValue_1327_5 );
   }
   const DString& s_FldProp_MorganAcctTypeForT_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1327_5( I_("MorganAcctTypeForT") );
      return( dstrFldLabel_1327_5 );
   }
   PBF_SSC subset_super_chooser_2_1327( const ClientLocale& locale )
   {
      return chooser_ss_002_137; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MorganAcctTypeForT(
       BFDataFieldProperties::Type::text // field is a text field
      ,MorganAcctTypeForT // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MorganAcctTypeForT_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MorganAcctTypeForT_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1327 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MorganAcctTypeForX (1328)
   //------------------------------------------------------------------
   const DString& s_FldProp_MorganAcctTypeForX_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1328_4( I_(" ") );
      return( dstrDefValue_1328_4 );
   }
   const DString& s_FldProp_MorganAcctTypeForX_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1328_4( I_("MorganAcctTypeForX") );
      return( dstrFldLabel_1328_4 );
   }
   PBF_SSC subset_super_chooser_2_1328( const ClientLocale& locale )
   {
      return chooser_ss_002_138; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MorganAcctTypeForX(
       BFDataFieldProperties::Type::text // field is a text field
      ,MorganAcctTypeForX // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MorganAcctTypeForX_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MorganAcctTypeForX_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1328 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MorganTaxType (1329)
   //------------------------------------------------------------------
   const DString& s_FldProp_MorganTaxType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1329_5( I_(" ") );
      return( dstrDefValue_1329_5 );
   }
   const DString& s_FldProp_MorganTaxType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1329_5( I_("MorganTaxType") );
      return( dstrFldLabel_1329_5 );
   }
   PBF_SSC subset_super_chooser_2_1329( const ClientLocale& locale )
   {
      return chooser_ss_002_136; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MorganTaxType(
       BFDataFieldProperties::Type::text // field is a text field
      ,MorganTaxType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MorganTaxType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MorganTaxType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1329 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastActiveShrNum (1330)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastActiveShrNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1330_6( I_("0") );
      return( dstrDefValue_1330_6 );
   }
   DIINT64 s_FldProp_LastActiveShrNum_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_LastActiveShrNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1330_6( I_("LastActiveShrNum") );
      return( dstrFldLabel_1330_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastActiveShrNum(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,LastActiveShrNum // fieldId
      ,17 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_27 // mask chooser function
      ,s_FldProp_LastActiveShrNum_s_DVF // default value
      ,s_FldProp_LastActiveShrNum_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_LastActiveShrNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EffectiveStopDate (1331)
   //------------------------------------------------------------------
   const DString& s_FldProp_EffectiveStopDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1331_4( I_(" ") );
      return( dstrDefValue_1331_4 );
   }
   const DString& s_FldProp_EffectiveStopDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1331_4( I_("EffectiveStopDate ") );
      return( dstrFldLabel_1331_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EffectiveStopDate(
       BFDataFieldProperties::Type::text // field is a text field
      ,EffectiveStopDate // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EffectiveStopDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EffectiveStopDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrchEntType (1332)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrchEntType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1332_4( I_(" ") );
      return( dstrDefValue_1332_4 );
   }
   const DString& s_FldProp_SrchEntType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1332_4( I_("SrchEntType") );
      return( dstrFldLabel_1332_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrchEntType(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrchEntType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrchEntType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrchEntType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransFound (1333)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransFound_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1333_4( I_(" ") );
      return( dstrDefValue_1333_4 );
   }
   const DString& s_FldProp_TransFound_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1333_4( I_("TransFound") );
      return( dstrFldLabel_1333_4 );
   }
   PBF_SSC subset_super_chooser_2_1333( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransFound(
       BFDataFieldProperties::Type::text // field is a text field
      ,TransFound // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransFound_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TransFound_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1333 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BrokerListHeading (1334)
   //------------------------------------------------------------------
   const DString& s_FldProp_BrokerListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1334_4( I_("0") );
         return( dstrDefValue_1334_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1334_5( I_("") );
         return( dstrDefValue_1334_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1334_8( I_("") );
         return( dstrDefValue_1334_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1334_7( I_("") );
         return( dstrDefValue_1334_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1334_1( I_("") );
         return( dstrDefValue_1334_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1334_3( I_("") );
         return( dstrDefValue_1334_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1334_6( I_("0") );
         return( dstrDefValue_1334_6 );
      }
      static const DString dstrDefValue_1334_1( I_("") );
      return( dstrDefValue_1334_1 );
   }
   const DString& s_FldProp_BrokerListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1334_4( I_("BrokerListHeading") );
         return( dstrFldLabel_1334_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1334_5( I_("BrokerListHeading") );
         return( dstrFldLabel_1334_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1334_8( I_("BrokerListHeading") );
         return( dstrFldLabel_1334_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1334_7( I_("BrokerListHeading") );
         return( dstrFldLabel_1334_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1334_1( I_("BrokerListHeading") );
         return( dstrFldLabel_1334_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1334_3( I_("BrokerListHeading") );
         return( dstrFldLabel_1334_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1334_6( I_("BrokerListHeading") );
         return( dstrFldLabel_1334_6 );
      }
      static const DString dstrFldLabel_1334_1( I_("BrokerListHeading") );
      return( dstrFldLabel_1334_1 );
   }
   PBF_SSC subset_super_chooser_2_1334( const ClientLocale& locale )
   {
      return chooser_ss_002_139; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BrokerListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,BrokerListHeading // fieldId
      ,0 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BrokerListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BrokerListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1334 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankInstrCombo3 (1335)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankInstrCombo3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1335_4( I_(" ") );
      return( dstrDefValue_1335_4 );
   }
   const DString& s_FldProp_BankInstrCombo3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1335_4( I_("BankInstrCombo3") );
      return( dstrFldLabel_1335_4 );
   }
   PBF_SSC subset_super_chooser_2_1335( const ClientLocale& locale )
   {
      return chooser_ss_002_140; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankInstrCombo3(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankInstrCombo3 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankInstrCombo3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankInstrCombo3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1335 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DataFound (1339)
   //------------------------------------------------------------------
   const DString& s_FldProp_DataFound_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1339_4( I_("N") );
      return( dstrDefValue_1339_4 );
   }
   const DString& s_FldProp_DataFound_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1339_4( I_("DataFound") );
      return( dstrFldLabel_1339_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DataFound(
       BFDataFieldProperties::Type::text // field is a text field
      ,DataFound // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DataFound_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DataFound_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShouldAskForRep (1340)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShouldAskForRep_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1340_4( I_("N") );
      return( dstrDefValue_1340_4 );
   }
   const DString& s_FldProp_ShouldAskForRep_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1340_4( I_("ShouldAskForRep") );
      return( dstrFldLabel_1340_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShouldAskForRep(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShouldAskForRep // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShouldAskForRep_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShouldAskForRep_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchBroker (1341)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchBroker_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1341_4( I_("0") );
      return( dstrDefValue_1341_4 );
   }
   const DString& s_FldProp_SearchBroker_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1341_4( I_("SearchBroker") );
      return( dstrFldLabel_1341_4 );
   }
   PBF_SSC subset_super_chooser_2_1341( const ClientLocale& locale )
   {
      return chooser_ss_002_141; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchBroker(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchBroker // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchBroker_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchBroker_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1341 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchBrokerUsing (1342)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchBrokerUsing_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1342_5( I_("0") );
      return( dstrDefValue_1342_5 );
   }
   const DString& s_FldProp_SearchBrokerUsing_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1342_5( I_("SearchBrokerUsing") );
      return( dstrFldLabel_1342_5 );
   }
   PBF_SSC subset_super_chooser_2_1342( const ClientLocale& locale )
   {
      return chooser_ss_002_142; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchBrokerUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchBrokerUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchBrokerUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchBrokerUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1342 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ReplaceAsDefault (1343)
   //------------------------------------------------------------------
   const DString& s_FldProp_ReplaceAsDefault_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1343_4( I_("N") );
      return( dstrDefValue_1343_4 );
   }
   const DString& s_FldProp_ReplaceAsDefault_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1343_4( I_("ReplaceAsDefault") );
      return( dstrFldLabel_1343_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ReplaceAsDefault(
       BFDataFieldProperties::Type::text // field is a text field
      ,ReplaceAsDefault // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ReplaceAsDefault_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ReplaceAsDefault_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityTypeToUpdateEntity (1344)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityTypeToUpdateEntity_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1344_5( I_(" ") );
      return( dstrDefValue_1344_5 );
   }
   const DString& s_FldProp_EntityTypeToUpdateEntity_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1344_5( I_("EntityTypeToUpdateEntity") );
      return( dstrFldLabel_1344_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityTypeToUpdateEntity(
       BFDataFieldProperties::Type::text // field is a text field
      ,EntityTypeToUpdateEntity // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EntityTypeToUpdateEntity_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EntityTypeToUpdateEntity_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityTypeForNewEntity (1345)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityTypeForNewEntity_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1345_5( I_(" ") );
      return( dstrDefValue_1345_5 );
   }
   const DString& s_FldProp_EntityTypeForNewEntity_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1345_5( I_("EntityTypeForNewEntity") );
      return( dstrFldLabel_1345_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityTypeForNewEntity(
       BFDataFieldProperties::Type::text // field is a text field
      ,EntityTypeForNewEntity // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EntityTypeForNewEntity_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EntityTypeForNewEntity_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxTransType (1346)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxTransType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1346_4( I_(" ") );
      return( dstrDefValue_1346_4 );
   }
   const DString& s_FldProp_rxTransType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1346_4( I_("rxTransType") );
      return( dstrFldLabel_1346_4 );
   }
   PBF_SSC subset_super_chooser_2_1346( const ClientLocale& locale )
   {
      return chooser_ss_002_073; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxTransType(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxTransType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxTransType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxTransType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1346 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayTypeAddrCode (1347)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayTypeAddrCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1347_4( I_(" ") );
      return( dstrDefValue_1347_4 );
   }
   const DString& s_FldProp_PayTypeAddrCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1347_4( I_("PayTypeAddrCode") );
      return( dstrFldLabel_1347_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayTypeAddrCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayTypeAddrCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayTypeAddrCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayTypeAddrCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayTypeBankNum (1348)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayTypeBankNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1348_4( I_(" ") );
      return( dstrDefValue_1348_4 );
   }
   const DString& s_FldProp_PayTypeBankNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1348_4( I_("PayTypeBankNum") );
      return( dstrFldLabel_1348_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayTypeBankNum(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayTypeBankNum // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayTypeBankNum_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayTypeBankNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UseEnteredFee (1351)
   //------------------------------------------------------------------
   const DString& s_FldProp_UseEnteredFee_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1351_4( I_("N") );
      return( dstrDefValue_1351_4 );
   }
   const DString& s_FldProp_UseEnteredFee_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1351_4( I_("Override Fee Flag") );
      return( dstrFldLabel_1351_4 );
   }
   PBF_SSC subset_super_chooser_2_1351( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UseEnteredFee(
       BFDataFieldProperties::Type::text // field is a text field
      ,UseEnteredFee // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_UseEnteredFee_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_UseEnteredFee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1351 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TxRcptIssued (1352)
   //------------------------------------------------------------------
   const DString& s_FldProp_TxRcptIssued_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1352_4( I_("N") );
      return( dstrDefValue_1352_4 );
   }
   const DString& s_FldProp_TxRcptIssued_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1352_4( I_("TaxReceiptIssued") );
      return( dstrFldLabel_1352_4 );
   }
   PBF_SSC subset_super_chooser_2_1352( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TxRcptIssued(
       BFDataFieldProperties::Type::text // field is a text field
      ,TxRcptIssued // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TxRcptIssued_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TxRcptIssued_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1352 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BackDatedReason (1353)
   //------------------------------------------------------------------
   const DString& s_FldProp_BackDatedReason_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1353_8( I_(" ") );
      return( dstrDefValue_1353_8 );
   }
   const DString& s_FldProp_BackDatedReason_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1353_8( I_("BackDatedReason") );
      return( dstrFldLabel_1353_8 );
   }
   PBF_SSC subset_super_chooser_2_1353( const ClientLocale& locale )
   {
      return chooser_ss_002_211; // defined in ifast_substitutions_chooser_7.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BackDatedReason(
       BFDataFieldProperties::Type::text // field is a text field
      ,BackDatedReason // fieldId
      ,2 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BackDatedReason_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BackDatedReason_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1353 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GICId (1354)
   //------------------------------------------------------------------
   const DString& s_FldProp_GICId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1354_4( I_("0") );
      return( dstrDefValue_1354_4 );
   }
   double s_FldProp_GICId_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_GICId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1354_4( I_("GICID") );
      return( dstrFldLabel_1354_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GICId(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GICId // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_GICId_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GICId_d_DVF // default value
      ,s_FldProp_GICId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Trace (1355)
   //------------------------------------------------------------------
   const DString& s_FldProp_Trace_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1355_4( I_("0") );
      return( dstrDefValue_1355_4 );
   }
   double s_FldProp_Trace_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_Trace_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1355_4( I_("Trace") );
      return( dstrFldLabel_1355_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Trace(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Trace // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_Trace_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Trace_d_DVF // default value
      ,s_FldProp_Trace_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InterDetlRid (1356)
   //------------------------------------------------------------------
   const DString& s_FldProp_InterDetlRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1356_4( I_("0") );
      return( dstrDefValue_1356_4 );
   }
   DIINT64 s_FldProp_InterDetlRid_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_InterDetlRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1356_4( I_("InterDetlRid") );
      return( dstrFldLabel_1356_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InterDetlRid(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,InterDetlRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InterDetlRid_s_DVF // default value
      ,s_FldProp_InterDetlRid_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_InterDetlRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinWithAge (1358)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinWithAge_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1358_8( I_(" ") );
      return( dstrDefValue_1358_8 );
   }
   DIINT64 s_FldProp_MinWithAge_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MinWithAge_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1358_8( I_("MinWithAge") );
      return( dstrFldLabel_1358_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinWithAge(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,MinWithAge // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_MinWithAge_s_DVF // default value
      ,s_FldProp_MinWithAge_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_MinWithAge_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExistSIN (1359)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExistSIN_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1359_7( I_(" ") );
      return( dstrDefValue_1359_7 );
   }
   const DString& s_FldProp_ExistSIN_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1359_7( I_("ExistSIN") );
      return( dstrFldLabel_1359_7 );
   }
   PBF_SSC subset_super_chooser_2_1359( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExistSIN(
       BFDataFieldProperties::Type::text // field is a text field
      ,ExistSIN // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ExistSIN_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ExistSIN_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1359 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ValidTaxJuris (1360)
   //------------------------------------------------------------------
   const DString& s_FldProp_ValidTaxJuris_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1360_5( I_(" ") );
      return( dstrDefValue_1360_5 );
   }
   const DString& s_FldProp_ValidTaxJuris_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1360_5( I_("ValidTaxJuris") );
      return( dstrFldLabel_1360_5 );
   }
   PBF_SSC subset_super_chooser_2_1360( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ValidTaxJuris(
       BFDataFieldProperties::Type::text // field is a text field
      ,ValidTaxJuris // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ValidTaxJuris_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ValidTaxJuris_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1360 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExistBenAddr (1361)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExistBenAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1361_4( I_(" ") );
      return( dstrDefValue_1361_4 );
   }
   const DString& s_FldProp_ExistBenAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1361_4( I_("ExistBenAddr") );
      return( dstrFldLabel_1361_4 );
   }
   PBF_SSC subset_super_chooser_2_1361( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExistBenAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,ExistBenAddr // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ExistBenAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ExistBenAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1361 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExistEscrow (1362)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExistEscrow_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1362_4( I_(" ") );
      return( dstrDefValue_1362_4 );
   }
   const DString& s_FldProp_ExistEscrow_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1362_4( I_("ExistEscrow") );
      return( dstrFldLabel_1362_4 );
   }
   PBF_SSC subset_super_chooser_2_1362( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExistEscrow(
       BFDataFieldProperties::Type::text // field is a text field
      ,ExistEscrow // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ExistEscrow_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ExistEscrow_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1362 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExistBeneficiary (1363)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExistBeneficiary_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1363_4( I_("N") );
         return( dstrDefValue_1363_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1363_8( I_("N") );
         return( dstrDefValue_1363_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1363_7( I_("N") );
         return( dstrDefValue_1363_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1363_5( I_("N") );
         return( dstrDefValue_1363_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1363_3( I_("N") );
         return( dstrDefValue_1363_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1363_1( I_("N") );
         return( dstrDefValue_1363_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1363_6( I_("N") );
         return( dstrDefValue_1363_6 );
      }
      static const DString dstrDefValue_1363_1( I_("N") );
      return( dstrDefValue_1363_1 );
   }
   const DString& s_FldProp_ExistBeneficiary_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1363_4( I_("ExistBeneficiary") );
         return( dstrFldLabel_1363_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1363_8( I_("ExistBeneficiary") );
         return( dstrFldLabel_1363_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1363_7( I_("ExistBeneficiary") );
         return( dstrFldLabel_1363_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1363_5( I_("ExistBeneficiary") );
         return( dstrFldLabel_1363_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1363_3( I_("ExistBeneficiary") );
         return( dstrFldLabel_1363_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1363_1( I_("ExistBeneficiary") );
         return( dstrFldLabel_1363_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1363_6( I_("ExistBeneficiary") );
         return( dstrFldLabel_1363_6 );
      }
      static const DString dstrFldLabel_1363_1( I_("ExistBeneficiary") );
      return( dstrFldLabel_1363_1 );
   }
   PBF_SSC subset_super_chooser_2_1363( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExistBeneficiary(
       BFDataFieldProperties::Type::text // field is a text field
      ,ExistBeneficiary // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ExistBeneficiary_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ExistBeneficiary_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1363 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExistAlloc (1364)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExistAlloc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1364_4( I_(" ") );
      return( dstrDefValue_1364_4 );
   }
   const DString& s_FldProp_ExistAlloc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1364_4( I_("ExistAlloc") );
      return( dstrFldLabel_1364_4 );
   }
   PBF_SSC subset_super_chooser_2_1364( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExistAlloc(
       BFDataFieldProperties::Type::text // field is a text field
      ,ExistAlloc // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ExistAlloc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ExistAlloc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1364 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OutWireOrd (1365)
   //------------------------------------------------------------------
   const DString& s_FldProp_OutWireOrd_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1365_4( I_(" ") );
      return( dstrDefValue_1365_4 );
   }
   const DString& s_FldProp_OutWireOrd_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1365_4( I_("OutWireOrd") );
      return( dstrFldLabel_1365_4 );
   }
   PBF_SSC subset_super_chooser_2_1365( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OutWireOrd(
       BFDataFieldProperties::Type::text // field is a text field
      ,OutWireOrd // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OutWireOrd_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OutWireOrd_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1365 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsRepActive (1366)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsRepActive_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1366_4( I_(" ") );
      return( dstrDefValue_1366_4 );
   }
   const DString& s_FldProp_SlsRepActive_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1366_4( I_("SlsRepActive") );
      return( dstrFldLabel_1366_4 );
   }
   PBF_SSC subset_super_chooser_2_1366( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsRepActive(
       BFDataFieldProperties::Type::text // field is a text field
      ,SlsRepActive // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsRepActive_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SlsRepActive_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1366 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ClosingContr (1367)
   //------------------------------------------------------------------
   const DString& s_FldProp_ClosingContr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1367_4( I_(" ") );
      return( dstrDefValue_1367_4 );
   }
   const DString& s_FldProp_ClosingContr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1367_4( I_("ClosingContr") );
      return( dstrFldLabel_1367_4 );
   }
   PBF_SSC subset_super_chooser_2_1367( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ClosingContr(
       BFDataFieldProperties::Type::text // field is a text field
      ,ClosingContr // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ClosingContr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ClosingContr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1367 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ContrMatured (1368)
   //------------------------------------------------------------------
   const DString& s_FldProp_ContrMatured_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1368_5( I_(" ") );
      return( dstrDefValue_1368_5 );
   }
   const DString& s_FldProp_ContrMatured_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1368_5( I_("ContrMatured") );
      return( dstrFldLabel_1368_5 );
   }
   PBF_SSC subset_super_chooser_2_1368( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ContrMatured(
       BFDataFieldProperties::Type::text // field is a text field
      ,ContrMatured // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ContrMatured_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ContrMatured_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1368 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Age69 (1369)
   //------------------------------------------------------------------
   const DString& s_FldProp_Age69_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1369_4( I_(" ") );
      return( dstrDefValue_1369_4 );
   }
   const DString& s_FldProp_Age69_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1369_4( I_("Age69") );
      return( dstrFldLabel_1369_4 );
   }
   PBF_SSC subset_super_chooser_2_1369( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Age69(
       BFDataFieldProperties::Type::text // field is a text field
      ,Age69 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Age69_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Age69_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1369 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DeathClaim (1370)
   //------------------------------------------------------------------
   const DString& s_FldProp_DeathClaim_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1370_4( I_(" ") );
      return( dstrDefValue_1370_4 );
   }
   const DString& s_FldProp_DeathClaim_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1370_4( I_("DeathClaim") );
      return( dstrFldLabel_1370_4 );
   }
   PBF_SSC subset_super_chooser_2_1370( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DeathClaim(
       BFDataFieldProperties::Type::text // field is a text field
      ,DeathClaim // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DeathClaim_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DeathClaim_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1370 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FirstEffective (1371)
   //------------------------------------------------------------------
   const DString& s_FldProp_FirstEffective_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1371_4( I_(" ") );
      return( dstrDefValue_1371_4 );
   }
   const DString& s_FldProp_FirstEffective_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1371_4( I_("FirstEffective") );
      return( dstrFldLabel_1371_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FirstEffective(
       BFDataFieldProperties::Type::date // field is a date field
      ,FirstEffective // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FirstEffective_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FirstEffective_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RIFSrcOfFund (1372)
   //------------------------------------------------------------------
   const DString& s_FldProp_RIFSrcOfFund_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1372_5( I_("I") );
         return( dstrDefValue_1372_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1372_7( I_("I") );
         return( dstrDefValue_1372_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1372_8( I_("I") );
         return( dstrDefValue_1372_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1372_6( I_("I") );
         return( dstrDefValue_1372_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1372_3( I_("I") );
         return( dstrDefValue_1372_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1372_1( I_("I") );
         return( dstrDefValue_1372_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1372_4( I_(" ") );
         return( dstrDefValue_1372_4 );
      }
      static const DString dstrDefValue_1372_1( I_("I") );
      return( dstrDefValue_1372_1 );
   }
   const DString& s_FldProp_RIFSrcOfFund_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1372_5( I_("RIFSrcOfFund") );
         return( dstrFldLabel_1372_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1372_7( I_("RIFSrcOfFund") );
         return( dstrFldLabel_1372_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1372_8( I_("RIFSrcOfFund") );
         return( dstrFldLabel_1372_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1372_6( I_("RIFSrcOfFund") );
         return( dstrFldLabel_1372_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1372_3( I_("RIFSrcOfFund") );
         return( dstrFldLabel_1372_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1372_1( I_("RIFSrcOfFund") );
         return( dstrFldLabel_1372_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1372_4( I_("RIFSrcOfFund") );
         return( dstrFldLabel_1372_4 );
      }
      static const DString dstrFldLabel_1372_1( I_("RIFSrcOfFund") );
      return( dstrFldLabel_1372_1 );
   }
   PBF_SSC subset_super_chooser_2_1372( const ClientLocale& locale )
   {
      return chooser_ss_002_143; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RIFSrcOfFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,RIFSrcOfFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RIFSrcOfFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RIFSrcOfFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1372 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RIFSrcOfFundDesc (1373)
   //------------------------------------------------------------------
   const DString& s_FldProp_RIFSrcOfFundDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1373_4( I_(" ") );
      return( dstrDefValue_1373_4 );
   }
   const DString& s_FldProp_RIFSrcOfFundDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1373_4( I_("RIFSrcOfFundDesc") );
      return( dstrFldLabel_1373_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RIFSrcOfFundDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,RIFSrcOfFundDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RIFSrcOfFundDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RIFSrcOfFundDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradesPayType (1377)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradesPayType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1377_4( I_("E") );
      return( dstrDefValue_1377_4 );
   }
   const DString& s_FldProp_TradesPayType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1377_4( I_("TradesPayType") );
      return( dstrFldLabel_1377_4 );
   }
   PBF_SSC subset_super_chooser_2_1377( const ClientLocale& locale )
   {
      return chooser_ss_002_147; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradesPayType(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradesPayType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradesPayType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradesPayType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1377 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradesTransType (1378)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradesTransType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1378_4( I_("ED") );
      return( dstrDefValue_1378_4 );
   }
   const DString& s_FldProp_TradesTransType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1378_4( I_("TradesTransType") );
      return( dstrFldLabel_1378_4 );
   }
   PBF_SSC subset_super_chooser_2_1378( const ClientLocale& locale )
   {
      return chooser_ss_002_148; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradesTransType(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradesTransType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradesTransType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradesTransType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1378 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EmptySetField (1379)
   //------------------------------------------------------------------
   const DString& s_FldProp_EmptySetField_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1379_8( I_(" ") );
      return( dstrDefValue_1379_8 );
   }
   const DString& s_FldProp_EmptySetField_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1379_8( I_("EmptySetField") );
      return( dstrFldLabel_1379_8 );
   }
   PBF_SSC subset_super_chooser_2_1379( const ClientLocale& locale )
   {
      return chooser_ss_002_149; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EmptySetField(
       BFDataFieldProperties::Type::text // field is a text field
      ,EmptySetField // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EmptySetField_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EmptySetField_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1379 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Trading_AllocationHeadingSet (1380)
   //------------------------------------------------------------------
   const DString& s_FldProp_Trading_AllocationHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1380_4( I_(" ") );
      return( dstrDefValue_1380_4 );
   }
   const DString& s_FldProp_Trading_AllocationHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1380_4( I_("Trading_AllocationHeadingSet") );
      return( dstrFldLabel_1380_4 );
   }
   PBF_SSC subset_super_chooser_2_1380( const ClientLocale& locale )
   {
      return chooser_ss_002_150; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Trading_AllocationHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,Trading_AllocationHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Trading_AllocationHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Trading_AllocationHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1380 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradingBanks_HeadingSet (1381)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradingBanks_HeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1381_5( I_(" ") );
      return( dstrDefValue_1381_5 );
   }
   const DString& s_FldProp_TradingBanks_HeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1381_5( I_("TradingBanks_HeadingSet") );
      return( dstrFldLabel_1381_5 );
   }
   PBF_SSC subset_super_chooser_2_1381( const ClientLocale& locale )
   {
      return chooser_ss_002_151; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradingBanks_HeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradingBanks_HeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradingBanks_HeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradingBanks_HeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1381 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradingHeadingSet (1382)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradingHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1382_4( I_(" ") );
      return( dstrDefValue_1382_4 );
   }
   const DString& s_FldProp_TradingHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1382_4( I_("TradingHeadingSet") );
      return( dstrFldLabel_1382_4 );
   }
   PBF_SSC subset_super_chooser_2_1382( const ClientLocale& locale )
   {
      return chooser_ss_002_152; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradingHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradingHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradingHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradingHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1382 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradingAttributesHeadingSet (1383)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradingAttributesHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1383_4( I_(" ") );
      return( dstrDefValue_1383_4 );
   }
   const DString& s_FldProp_TradingAttributesHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1383_4( I_("TradingAttributesHeadingSet") );
      return( dstrFldLabel_1383_4 );
   }
   PBF_SSC subset_super_chooser_2_1383( const ClientLocale& locale )
   {
      return chooser_ss_002_153; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradingAttributesHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradingAttributesHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradingAttributesHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradingAttributesHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1383 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ContractType (1385)
   //------------------------------------------------------------------
   const DString& s_FldProp_ContractType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1385_4( I_("") );
      return( dstrDefValue_1385_4 );
   }
   const DString& s_FldProp_ContractType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1385_4( I_("ContractType") );
      return( dstrFldLabel_1385_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ContractType(
       BFDataFieldProperties::Type::text // field is a text field
      ,ContractType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ContractType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ContractType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ContractTypeId (1386)
   //------------------------------------------------------------------
   const DString& s_FldProp_ContractTypeId_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1386_5( I_("00000000") );
         return( dstrDefValue_1386_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1386_7( I_("00000000") );
         return( dstrDefValue_1386_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1386_8( I_("00000000") );
         return( dstrDefValue_1386_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1386_6( I_("00000000") );
         return( dstrDefValue_1386_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1386_3( I_("00000000") );
         return( dstrDefValue_1386_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1386_1( I_("00000000") );
         return( dstrDefValue_1386_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1386_4( I_("") );
         return( dstrDefValue_1386_4 );
      }
      static const DString dstrDefValue_1386_1( I_("00000000") );
      return( dstrDefValue_1386_1 );
   }
   double s_FldProp_ContractTypeId_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0 );
      }
      return( 00000000 );
   }
   const DString& s_FldProp_ContractTypeId_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1386_5( I_("ContractTypeId") );
         return( dstrFldLabel_1386_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1386_7( I_("ContractTypeId") );
         return( dstrFldLabel_1386_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1386_8( I_("ContractTypeId") );
         return( dstrFldLabel_1386_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1386_6( I_("ContractTypeId") );
         return( dstrFldLabel_1386_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1386_3( I_("ContractTypeId") );
         return( dstrFldLabel_1386_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1386_1( I_("ContractTypeId") );
         return( dstrFldLabel_1386_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1386_4( I_("ContractTypeId") );
         return( dstrFldLabel_1386_4 );
      }
      static const DString dstrFldLabel_1386_1( I_("ContractTypeId") );
      return( dstrFldLabel_1386_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ContractTypeId(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ContractTypeId // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_ContractTypeId_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ContractTypeId_d_DVF // default value
      ,s_FldProp_ContractTypeId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PolicyNum (1387)
   //------------------------------------------------------------------
   const DString& s_FldProp_PolicyNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1387_4( I_("") );
      return( dstrDefValue_1387_4 );
   }
   const DString& s_FldProp_PolicyNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1387_4( I_("PolicyNum") );
      return( dstrFldLabel_1387_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PolicyNum(
       BFDataFieldProperties::Type::text // field is a text field
      ,PolicyNum // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PolicyNum_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PolicyNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ContractTerm (1388)
   //------------------------------------------------------------------
   const DString& s_FldProp_ContractTerm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1388_5( I_("10") );
      return( dstrDefValue_1388_5 );
   }
   DIINT64 s_FldProp_ContractTerm_i_DVF( const ClientLocale& locale )
   {
      return( 10 );
   }
   const DString& s_FldProp_ContractTerm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1388_5( I_("ContractTerm") );
      return( dstrFldLabel_1388_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ContractTerm(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,ContractTerm // fieldId
      ,13 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_ContractTerm_s_DVF // default value
      ,s_FldProp_ContractTerm_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_ContractTerm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ContractTermDesc (1389)
   //------------------------------------------------------------------
   const DString& s_FldProp_ContractTermDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1389_1( I_("YEARS") );
      return( dstrDefValue_1389_1 );
   }
   const DString& s_FldProp_ContractTermDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1389_1( I_("ContractTermDesc") );
      return( dstrFldLabel_1389_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ContractTermDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,ContractTermDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ContractTermDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ContractTermDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AnnivMonth (1390)
   //------------------------------------------------------------------
   const DString& s_FldProp_AnnivMonth_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1390_4( I_("") );
      return( dstrDefValue_1390_4 );
   }
   DIINT64 s_FldProp_AnnivMonth_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AnnivMonth_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1390_4( I_("AnnivMonth") );
      return( dstrFldLabel_1390_4 );
   }
   PBF_SSC subset_super_chooser_2_1390( const ClientLocale& locale )
   {
      return chooser_ss_002_158; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AnnivMonth(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,AnnivMonth // fieldId
      ,13 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_AnnivMonth_s_DVF // default value
      ,s_FldProp_AnnivMonth_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AnnivMonth_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1390 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AnnivDay (1391)
   //------------------------------------------------------------------
   const DString& s_FldProp_AnnivDay_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1391_4( I_("") );
      return( dstrDefValue_1391_4 );
   }
   DIINT64 s_FldProp_AnnivDay_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AnnivDay_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1391_4( I_("AnnivDay") );
      return( dstrFldLabel_1391_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AnnivDay(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,AnnivDay // fieldId
      ,13 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_AnnivDay_s_DVF // default value
      ,s_FldProp_AnnivDay_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AnnivDay_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastResetDate (1392)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastResetDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1392_4( I_("") );
      return( dstrDefValue_1392_4 );
   }
   const DString& s_FldProp_LastResetDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1392_4( I_("LastResetDate") );
      return( dstrFldLabel_1392_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastResetDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,LastResetDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LastResetDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LastResetDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaturityType (1393)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaturityType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1393_4( I_("01") );
      return( dstrDefValue_1393_4 );
   }
   const DString& s_FldProp_MaturityType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1393_4( I_("MaturityType") );
      return( dstrFldLabel_1393_4 );
   }
   PBF_SSC subset_super_chooser_2_1393( const ClientLocale& locale )
   {
      return chooser_ss_002_155; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaturityType(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaturityType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaturityType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaturityType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1393 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaturityTypeDesc (1394)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaturityTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1394_4( I_("0") );
      return( dstrDefValue_1394_4 );
   }
   const DString& s_FldProp_MaturityTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1394_4( I_("MaturityTypeDesc") );
      return( dstrFldLabel_1394_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaturityTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaturityTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaturityTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaturityTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AgeBasedOn (1395)
   //------------------------------------------------------------------
   const DString& s_FldProp_AgeBasedOn_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1395_4( I_("01") );
      return( dstrDefValue_1395_4 );
   }
   const DString& s_FldProp_AgeBasedOn_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1395_4( I_("AgeBasedOn") );
      return( dstrFldLabel_1395_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AgeBasedOn(
       BFDataFieldProperties::Type::text // field is a text field
      ,AgeBasedOn // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AgeBasedOn_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AgeBasedOn_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AgeBasedOnDesc (1396)
   //------------------------------------------------------------------
   const DString& s_FldProp_AgeBasedOnDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1396_4( I_("0") );
      return( dstrDefValue_1396_4 );
   }
   const DString& s_FldProp_AgeBasedOnDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1396_4( I_("AgeBasedOnDesc") );
      return( dstrFldLabel_1396_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AgeBasedOnDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,AgeBasedOnDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AgeBasedOnDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AgeBasedOnDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LegalMaturityDate (1397)
   //------------------------------------------------------------------
   const DString& s_FldProp_LegalMaturityDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1397_5( I_("") );
      return( dstrDefValue_1397_5 );
   }
   const DString& s_FldProp_LegalMaturityDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1397_5( I_("LegalMaturityDate") );
      return( dstrFldLabel_1397_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LegalMaturityDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,LegalMaturityDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LegalMaturityDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LegalMaturityDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UserMaturityDate (1398)
   //------------------------------------------------------------------
   const DString& s_FldProp_UserMaturityDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1398_4( I_("") );
      return( dstrDefValue_1398_4 );
   }
   const DString& s_FldProp_UserMaturityDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1398_4( I_("UserMaturityDate") );
      return( dstrFldLabel_1398_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UserMaturityDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,UserMaturityDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_UserMaturityDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_UserMaturityDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Status (1399)
   //------------------------------------------------------------------
   const DString& s_FldProp_Status_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1399_4( I_("01") );
      return( dstrDefValue_1399_4 );
   }
   const DString& s_FldProp_Status_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1399_4( I_("Status") );
      return( dstrFldLabel_1399_4 );
   }
   PBF_SSC subset_super_chooser_2_1399( const ClientLocale& locale )
   {
      return chooser_ss_002_156; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Status(
       BFDataFieldProperties::Type::text // field is a text field
      ,Status // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Status_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Status_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1399 // substitution set super chooser
      );
}
