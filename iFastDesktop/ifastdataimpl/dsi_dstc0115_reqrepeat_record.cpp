// BFDataImpl implementation file for DataSet DSTC0115.REQRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// ViewsGenerator: Generated on : Friday, June 16, 2017 14:00:21


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0115_reqrepeat_record.h"


// This function creates an instance of dsi_DSTC0115_REQRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0115_REQRepeat_Record() { return new dsi_DSTC0115_REQRepeat_Record; }

dsi_DSTC0115_REQRepeat_Record::dsi_DSTC0115_REQRepeat_Record()
: BFDataImpl( 40001350 )
, AllocRunMode_( ifds::AllocRunMode, &ifds::s_FldProp_AllocRunMode )
, FundCode_( ifds::FundCode, &ifds::s_FldProp_FundCode )
, ClassCode_( ifds::ClassCode, &ifds::s_FldProp_ClassCode )
, AllocPercentage_( ifds::AllocPercentage, &ifds::s_FldProp_AllocPercentage )
, AllocAmount_( ifds::AllocAmount, &ifds::s_FldProp_AllocAmount )
, DistribDetlRid_( ifds::DistribDetlRid, &ifds::s_FldProp_DistribDetlRid )
, AccountNum_( ifds::AccountNum, &ifds::s_FldProp_AccountNum )
, AcctPrcnt_( ifds::AcctPrcnt, &ifds::s_FldProp_AcctPrcnt )
, AcctLvlVer_( ifds::AcctLvlVer, &ifds::s_FldProp_AcctLvlVer )
, AcctLvlRid_( ifds::AcctLvlRid, &ifds::s_FldProp_AcctLvlRid )
, DistribDetlVer_( ifds::DistribDetlVer, &ifds::s_FldProp_DistribDetlVer )
, CommRunMode_( ifds::CommRunMode, &ifds::s_FldProp_CommRunMode )
, TradesPayType_( ifds::TradesPayType, &ifds::s_FldProp_TradesPayType )
, Fixed_( ifds::Fixed, &ifds::s_FldProp_Fixed )
, GrossOrNet_( ifds::GrossOrNet, &ifds::s_FldProp_GrossOrNet )
, CommPrcnt_( ifds::CommPrcnt, &ifds::s_FldProp_CommPrcnt )
, BrokerCode_( ifds::BrokerCode, &ifds::s_FldProp_BrokerCode )
, BranchCode_( ifds::BranchCode, &ifds::s_FldProp_BranchCode )
, SlsrepCode_( ifds::SlsrepCode, &ifds::s_FldProp_SlsrepCode )
, CommLevel_( ifds::CommLevel, &ifds::s_FldProp_CommLevel )
, CommRate_( ifds::CommRate, &ifds::s_FldProp_CommRate )
, AcctLvlRunMode_( ifds::AcctLvlRunMode, &ifds::s_FldProp_AcctLvlRunMode )
, AcctLvlAmount_( ifds::AcctLvlAmount, &ifds::s_FldProp_AcctLvlAmount )
, RenunAmount_( ifds::RenunAmount, &ifds::s_FldProp_RenunAmount )
, SplitCommRid_( ifds::SplitCommRid, &ifds::s_FldProp_SplitCommRid )
, RecordType_( ifds::RecordType, &ifds::s_FldProp_RecordType )
, AllocAmtType_( ifds::AllocAmtType, &ifds::s_FldProp_AllocAmtType )
, TransFeeCode_( ifds::TransFeeCode, &ifds::s_FldProp_TransFeeCode )
, FeeType_( ifds::FeeType, &ifds::s_FldProp_FeeType )
, FeeRate_( ifds::FeeRate, &ifds::s_FldProp_FeeRate )
, Currency_( ifds::Currency, &ifds::s_FldProp_Currency )
, ChargeOption_( ifds::ChargeOption, &ifds::s_FldProp_ChargeOption )
, TradeFeeOption_( ifds::TradeFeeOption, &ifds::s_FldProp_TradeFeeOption )
, TransFeeRID_( ifds::TransFeeRID, &ifds::s_FldProp_TransFeeRID )
, OrigFeeType_( ifds::OrigFeeType, &ifds::s_FldProp_OrigFeeType )
, OrigFeeRate_( ifds::OrigFeeRate, &ifds::s_FldProp_OrigFeeRate )
, DilRunMode_( ifds::DilRunMode, &ifds::s_FldProp_DilRunMode )
, AccCode_( ifds::AccCode, &ifds::s_FldProp_AccCode )
, ReasonCode_( ifds::ReasonCode, &ifds::s_FldProp_ReasonCode )
, RespDate_( ifds::RespDate, &ifds::s_FldProp_RespDate )
, RspPrcnt_( ifds::RspPrcnt, &ifds::s_FldProp_RspPrcnt )
, DilVersion_( ifds::DilVersion, &ifds::s_FldProp_DilVersion )
, SplitAccCodeRID_( ifds::SplitAccCodeRID, &ifds::s_FldProp_SplitAccCodeRID )
, TPIPayEntity_( ifds::TPIPayEntity, &ifds::s_FldProp_TPIPayEntity )
, TPIPaymentFor_( ifds::TPIPaymentFor, &ifds::s_FldProp_TPIPaymentFor )
, TPIPayType_( ifds::TPIPayType, &ifds::s_FldProp_TPIPayType )
, TPIACHProcessor_( ifds::TPIACHProcessor, &ifds::s_FldProp_TPIACHProcessor )
, TPIPayMethod_( ifds::TPIPayMethod, &ifds::s_FldProp_TPIPayMethod )
, TPIBankCharge_( ifds::TPIBankCharge, &ifds::s_FldProp_TPIBankCharge )
, TPIPayCurrency_( ifds::TPIPayCurrency, &ifds::s_FldProp_TPIPayCurrency )
, TPIUsePayEntAddr_( ifds::TPIUsePayEntAddr, &ifds::s_FldProp_TPIUsePayEntAddr )
, TPIAddress1_( ifds::TPIAddress1, &ifds::s_FldProp_TPIAddress1 )
, TPIAddress2_( ifds::TPIAddress2, &ifds::s_FldProp_TPIAddress2 )
, TPIAddress3_( ifds::TPIAddress3, &ifds::s_FldProp_TPIAddress3 )
, TPIAddress4_( ifds::TPIAddress4, &ifds::s_FldProp_TPIAddress4 )
, TPIAddress5_( ifds::TPIAddress5, &ifds::s_FldProp_TPIAddress5 )
, TPIAddrCntry_( ifds::TPIAddrCntry, &ifds::s_FldProp_TPIAddrCntry )
, TPIAddrPSTL_( ifds::TPIAddrPSTL, &ifds::s_FldProp_TPIAddrPSTL )
, TPIDirectTo_( ifds::TPIDirectTo, &ifds::s_FldProp_TPIDirectTo )
, TPIReinvAccount_( ifds::TPIReinvAccount, &ifds::s_FldProp_TPIReinvAccount )
, TPIPercentage_( ifds::TPIPercentage, &ifds::s_FldProp_TPIPercentage )
, TPIConsolLevel_( ifds::TPIConsolLevel, &ifds::s_FldProp_TPIConsolLevel )
, TPIConsolType_( ifds::TPIConsolType, &ifds::s_FldProp_TPIConsolType )
, RecTypeVersion_( ifds::RecTypeVersion, &ifds::s_FldProp_RecTypeVersion )
, RecTypRecid_( ifds::RecTypRecid, &ifds::s_FldProp_RecTypRecid )
, RecTypRunMode_( ifds::RecTypRunMode, &ifds::s_FldProp_RecTypRunMode )
, TPIPayInstructID_( ifds::TPIPayInstructID, &ifds::s_FldProp_TPIPayInstructID )
, BillingToEntityType_( ifds::BillingToEntityType, &ifds::s_FldProp_BillingToEntityType )
, BillingToEntity_( ifds::BillingToEntity, &ifds::s_FldProp_BillingToEntity )
, AssociatedAcctNum_( ifds::AssociatedAcctNum, &ifds::s_FldProp_AssociatedAcctNum )
, MultiStlLocRunMode_( ifds::MultiStlLocRunMode, &ifds::s_FldProp_MultiStlLocRunMode )
, SettleLocCode_( ifds::SettleLocCode, &ifds::s_FldProp_SettleLocCode )
, TransClrSettlAmt_( ifds::TransClrSettlAmt, &ifds::s_FldProp_TransClrSettlAmt )
, ForAccount_( ifds::ForAccount, &ifds::s_FldProp_ForAccount )
, TransClrSettlUUID_( ifds::TransClrSettlUUID, &ifds::s_FldProp_TransClrSettlUUID )
, InFavourOf_( ifds::InFavourOf, &ifds::s_FldProp_InFavourOf )
, DeliveryTo_( ifds::DeliveryTo, &ifds::s_FldProp_DeliveryTo )
, EntityAllocRunMode_( ifds::EntityAllocRunMode, &ifds::s_FldProp_EntityAllocRunMode )
, AllocEntityType_( ifds::AllocEntityType, &ifds::s_FldProp_AllocEntityType )
, AllocEntityTypeSeq_( ifds::AllocEntityTypeSeq, &ifds::s_FldProp_AllocEntityTypeSeq )
, RESPBenefId_( ifds::RESPBenefId, &ifds::s_FldProp_RESPBenefId )
, RESPAllocAmt_( ifds::RESPAllocAmt, &ifds::s_FldProp_RESPAllocAmt )
, RESPAllocPrcnt_( ifds::RESPAllocPrcnt, &ifds::s_FldProp_RESPAllocPrcnt )
, RESPTrfAllocRunMode_( ifds::RESPTrfAllocRunMode, &ifds::s_FldProp_RESPTrfAllocRunMode )
, RecordLevel_( ifds::RecordLevel, &ifds::s_FldProp_RecordLevel )
, RESPTrfAllocEntityTypeFrom_( ifds::RESPTrfAllocEntityTypeFrom, &ifds::s_FldProp_RESPTrfAllocEntityTypeFrom )
, RESPTrfEntityTypeSeqFrom_( ifds::RESPTrfEntityTypeSeqFrom, &ifds::s_FldProp_RESPTrfEntityTypeSeqFrom )
, RESPBenefIDFrom_( ifds::RESPBenefIDFrom, &ifds::s_FldProp_RESPBenefIDFrom )
, RESPTrfAllocEntityTypeTo_( ifds::RESPTrfAllocEntityTypeTo, &ifds::s_FldProp_RESPTrfAllocEntityTypeTo )
, RESPTrfEntityTypeSeqTo_( ifds::RESPTrfEntityTypeSeqTo, &ifds::s_FldProp_RESPTrfEntityTypeSeqTo )
, RESPBenefIDTo_( ifds::RESPBenefIDTo, &ifds::s_FldProp_RESPBenefIDTo )
, YTDContr_( ifds::YTDContr, &ifds::s_FldProp_YTDContr )
, TDContr_( ifds::TDContr, &ifds::s_FldProp_TDContr )
, GrantAmount_( ifds::GrantAmount, &ifds::s_FldProp_GrantAmount )
, AdditionalGrant_( ifds::AdditionalGrant, &ifds::s_FldProp_AdditionalGrant )
, CLBAmount_( ifds::CLBAmount, &ifds::s_FldProp_CLBAmount )
, PGrantAmount_( ifds::PGrantAmount, &ifds::s_FldProp_PGrantAmount )
, TDRedContrib_( ifds::TDRedContrib, &ifds::s_FldProp_TDRedContrib )
, TDRedEarning_( ifds::TDRedEarning, &ifds::s_FldProp_TDRedEarning )
, RedCESG_( ifds::RedCESG, &ifds::s_FldProp_RedCESG )
, RedCLB_( ifds::RedCLB, &ifds::s_FldProp_RedCLB )
, RedPGrant_( ifds::RedPGrant, &ifds::s_FldProp_RedPGrant )
, UCAmt_( ifds::UCAmt, &ifds::s_FldProp_UCAmt )
, ACAmt_( ifds::ACAmt, &ifds::s_FldProp_ACAmt )
, Pre98ContribAmt_( ifds::Pre98ContribAmt, &ifds::s_FldProp_Pre98ContribAmt )
, Pre98RedContribAmt_( ifds::Pre98RedContribAmt, &ifds::s_FldProp_Pre98RedContribAmt )
, TransferPercent_( ifds::TransferPercent, &ifds::s_FldProp_TransferPercent )
, QESIUCAmount_( ifds::QESIUCAmount, &ifds::s_FldProp_QESIUCAmount )
, QESIACAmount_( ifds::QESIACAmount, &ifds::s_FldProp_QESIACAmount )
, QESIYTDContribution_( ifds::QESIYTDContribution, &ifds::s_FldProp_QESIYTDContribution )
, QESIBasicGrant_( ifds::QESIBasicGrant, &ifds::s_FldProp_QESIBasicGrant )
, QESIIncreaseAmt_( ifds::QESIIncreaseAmt, &ifds::s_FldProp_QESIIncreaseAmt )
, Pre98QESIContrib_( ifds::Pre98QESIContrib, &ifds::s_FldProp_Pre98QESIContrib )
, Pre2007QESIContrib_( ifds::Pre2007QESIContrib, &ifds::s_FldProp_Pre2007QESIContrib )
, RESPExtTrDetlUUID_( ifds::RESPExtTrDetlUUID, &ifds::s_FldProp_RESPExtTrDetlUUID )
, RESPExtTrDetlVer_( ifds::RESPExtTrDetlVer, &ifds::s_FldProp_RESPExtTrDetlVer )
, RESPContrDetlUUID_( ifds::RESPContrDetlUUID, &ifds::s_FldProp_RESPContrDetlUUID )
, RESPContrDetlVer_( ifds::RESPContrDetlVer, &ifds::s_FldProp_RESPContrDetlVer )
, EligibleTransfer_( ifds::EligibleTransfer, &ifds::s_FldProp_EligibleTransfer )
, TotTransfINDC_( ifds::TotTransfINDC, &ifds::s_FldProp_TotTransfINDC )
, HistNonTrustYear_( ifds::HistNonTrustYear, &ifds::s_FldProp_HistNonTrustYear )
, CESGPaid_( ifds::CESGPaid, &ifds::s_FldProp_CESGPaid )
, SelInvRunMode_( ifds::SelInvRunMode, &ifds::s_FldProp_SelInvRunMode )
, InvHisInvestId_( ifds::InvHisInvestId, &ifds::s_FldProp_InvHisInvestId )
, InvSummId_( ifds::InvSummId, &ifds::s_FldProp_InvSummId )
, SelInvAmtType_( ifds::SelInvAmtType, &ifds::s_FldProp_SelInvAmtType )
, SelInvAmount_( ifds::SelInvAmount, &ifds::s_FldProp_SelInvAmount )
, BenefRunMode_( ifds::BenefRunMode, &ifds::s_FldProp_BenefRunMode )
, BenefAddrCode_( ifds::BenefAddrCode, &ifds::s_FldProp_BenefAddrCode )
, BenefAddrLevel_( ifds::BenefAddrLevel, &ifds::s_FldProp_BenefAddrLevel )
, BenefPrcnt_( ifds::BenefPrcnt, &ifds::s_FldProp_BenefPrcnt )
, BenefAmount_( ifds::BenefAmount, &ifds::s_FldProp_BenefAmount )
, BenefUnits_( ifds::BenefUnits, &ifds::s_FldProp_BenefUnits )
, BenefEntityID_( ifds::BenefEntityID, &ifds::s_FldProp_BenefEntityID )
, QESIPaid_( ifds::QESIPaid, &ifds::s_FldProp_QESIPaid )
, IsResidualCESG_( ifds::IsResidualCESG, &ifds::s_FldProp_IsResidualCESG )
, DilutionNSM_( ifds::DilutionNSM, &ifds::s_FldProp_DilutionNSM )
, ExSysDilPymtNSM_( ifds::ExSysDilPymtNSM, &ifds::s_FldProp_ExSysDilPymtNSM )
, SAGESGrant_( ifds::SAGESGrant, &ifds::s_FldProp_SAGESGrant )
, SAGESUCAmount_( ifds::SAGESUCAmount, &ifds::s_FldProp_SAGESUCAmount )
, SAGESACAmount_( ifds::SAGESACAmount, &ifds::s_FldProp_SAGESACAmount )
, BCTESGGrant_( ifds::BCTESGGrant, &ifds::s_FldProp_BCTESGGrant )
, UCRedAmt_( ifds::UCRedAmt, &ifds::s_FldProp_UCRedAmt )
, ACRedAmt_( ifds::ACRedAmt, &ifds::s_FldProp_ACRedAmt )
, SAGESRedUCAmt_( ifds::SAGESRedUCAmt, &ifds::s_FldProp_SAGESRedUCAmt )
, SAGESRedACAmt_( ifds::SAGESRedACAmt, &ifds::s_FldProp_SAGESRedACAmt )
, QESIRedUCAmt_( ifds::QESIRedUCAmt, &ifds::s_FldProp_QESIRedUCAmt )
, QESIRedACAmt_( ifds::QESIRedACAmt, &ifds::s_FldProp_QESIRedACAmt )
, QESIRedYTDContrib_( ifds::QESIRedYTDContrib, &ifds::s_FldProp_QESIRedYTDContrib )
, Pre2007QESIRedContrib_( ifds::Pre2007QESIRedContrib, &ifds::s_FldProp_Pre2007QESIRedContrib )
, RedAdditionalGrant_( ifds::RedAdditionalGrant, &ifds::s_FldProp_RedAdditionalGrant )
, RedSAGES_( ifds::RedSAGES, &ifds::s_FldProp_RedSAGES )
, QESIRedBasic_( ifds::QESIRedBasic, &ifds::s_FldProp_QESIRedBasic )
, QESIRedIncrease_( ifds::QESIRedIncrease, &ifds::s_FldProp_QESIRedIncrease )
, RedBCTESG_( ifds::RedBCTESG, &ifds::s_FldProp_RedBCTESG )
{
    cFields_ = 155;
    memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0115_REQRepeat_Record::~dsi_DSTC0115_REQRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0115_REQRepeat_Record::clone()
{
    dsi_DSTC0115_REQRepeat_Record* p = new dsi_DSTC0115_REQRepeat_Record;
    p->AllocRunMode_ = AllocRunMode_;
    p->FundCode_ = FundCode_;
    p->ClassCode_ = ClassCode_;
    p->AllocPercentage_ = AllocPercentage_;
    p->AllocAmount_ = AllocAmount_;
    p->DistribDetlRid_ = DistribDetlRid_;
    p->AccountNum_ = AccountNum_;
    p->AcctPrcnt_ = AcctPrcnt_;
    p->AcctLvlVer_ = AcctLvlVer_;
    p->AcctLvlRid_ = AcctLvlRid_;
    p->DistribDetlVer_ = DistribDetlVer_;
    p->CommRunMode_ = CommRunMode_;
    p->TradesPayType_ = TradesPayType_;
    p->Fixed_ = Fixed_;
    p->GrossOrNet_ = GrossOrNet_;
    p->CommPrcnt_ = CommPrcnt_;
    p->BrokerCode_ = BrokerCode_;
    p->BranchCode_ = BranchCode_;
    p->SlsrepCode_ = SlsrepCode_;
    p->CommLevel_ = CommLevel_;
    p->CommRate_ = CommRate_;
    p->AcctLvlRunMode_ = AcctLvlRunMode_;
    p->AcctLvlAmount_ = AcctLvlAmount_;
    p->RenunAmount_ = RenunAmount_;
    p->SplitCommRid_ = SplitCommRid_;
    p->RecordType_ = RecordType_;
    p->AllocAmtType_ = AllocAmtType_;
    p->TransFeeCode_ = TransFeeCode_;
    p->FeeType_ = FeeType_;
    p->FeeRate_ = FeeRate_;
    p->Currency_ = Currency_;
    p->ChargeOption_ = ChargeOption_;
    p->TradeFeeOption_ = TradeFeeOption_;
    p->TransFeeRID_ = TransFeeRID_;
    p->OrigFeeType_ = OrigFeeType_;
    p->OrigFeeRate_ = OrigFeeRate_;
    p->DilRunMode_ = DilRunMode_;
    p->AccCode_ = AccCode_;
    p->ReasonCode_ = ReasonCode_;
    p->RespDate_ = RespDate_;
    p->RspPrcnt_ = RspPrcnt_;
    p->DilVersion_ = DilVersion_;
    p->SplitAccCodeRID_ = SplitAccCodeRID_;
    p->TPIPayEntity_ = TPIPayEntity_;
    p->TPIPaymentFor_ = TPIPaymentFor_;
    p->TPIPayType_ = TPIPayType_;
    p->TPIACHProcessor_ = TPIACHProcessor_;
    p->TPIPayMethod_ = TPIPayMethod_;
    p->TPIBankCharge_ = TPIBankCharge_;
    p->TPIPayCurrency_ = TPIPayCurrency_;
    p->TPIUsePayEntAddr_ = TPIUsePayEntAddr_;
    p->TPIAddress1_ = TPIAddress1_;
    p->TPIAddress2_ = TPIAddress2_;
    p->TPIAddress3_ = TPIAddress3_;
    p->TPIAddress4_ = TPIAddress4_;
    p->TPIAddress5_ = TPIAddress5_;
    p->TPIAddrCntry_ = TPIAddrCntry_;
    p->TPIAddrPSTL_ = TPIAddrPSTL_;
    p->TPIDirectTo_ = TPIDirectTo_;
    p->TPIReinvAccount_ = TPIReinvAccount_;
    p->TPIPercentage_ = TPIPercentage_;
    p->TPIConsolLevel_ = TPIConsolLevel_;
    p->TPIConsolType_ = TPIConsolType_;
    p->RecTypeVersion_ = RecTypeVersion_;
    p->RecTypRecid_ = RecTypRecid_;
    p->RecTypRunMode_ = RecTypRunMode_;
    p->TPIPayInstructID_ = TPIPayInstructID_;
    p->BillingToEntityType_ = BillingToEntityType_;
    p->BillingToEntity_ = BillingToEntity_;
    p->AssociatedAcctNum_ = AssociatedAcctNum_;
    p->MultiStlLocRunMode_ = MultiStlLocRunMode_;
    p->SettleLocCode_ = SettleLocCode_;
    p->TransClrSettlAmt_ = TransClrSettlAmt_;
    p->ForAccount_ = ForAccount_;
    p->TransClrSettlUUID_ = TransClrSettlUUID_;
    p->InFavourOf_ = InFavourOf_;
    p->DeliveryTo_ = DeliveryTo_;
    p->EntityAllocRunMode_ = EntityAllocRunMode_;
    p->AllocEntityType_ = AllocEntityType_;
    p->AllocEntityTypeSeq_ = AllocEntityTypeSeq_;
    p->RESPBenefId_ = RESPBenefId_;
    p->RESPAllocAmt_ = RESPAllocAmt_;
    p->RESPAllocPrcnt_ = RESPAllocPrcnt_;
    p->RESPTrfAllocRunMode_ = RESPTrfAllocRunMode_;
    p->RecordLevel_ = RecordLevel_;
    p->RESPTrfAllocEntityTypeFrom_ = RESPTrfAllocEntityTypeFrom_;
    p->RESPTrfEntityTypeSeqFrom_ = RESPTrfEntityTypeSeqFrom_;
    p->RESPBenefIDFrom_ = RESPBenefIDFrom_;
    p->RESPTrfAllocEntityTypeTo_ = RESPTrfAllocEntityTypeTo_;
    p->RESPTrfEntityTypeSeqTo_ = RESPTrfEntityTypeSeqTo_;
    p->RESPBenefIDTo_ = RESPBenefIDTo_;
    p->YTDContr_ = YTDContr_;
    p->TDContr_ = TDContr_;
    p->GrantAmount_ = GrantAmount_;
    p->AdditionalGrant_ = AdditionalGrant_;
    p->CLBAmount_ = CLBAmount_;
    p->PGrantAmount_ = PGrantAmount_;
    p->TDRedContrib_ = TDRedContrib_;
    p->TDRedEarning_ = TDRedEarning_;
    p->RedCESG_ = RedCESG_;
    p->RedCLB_ = RedCLB_;
    p->RedPGrant_ = RedPGrant_;
    p->UCAmt_ = UCAmt_;
    p->ACAmt_ = ACAmt_;
    p->Pre98ContribAmt_ = Pre98ContribAmt_;
    p->Pre98RedContribAmt_ = Pre98RedContribAmt_;
    p->TransferPercent_ = TransferPercent_;
    p->QESIUCAmount_ = QESIUCAmount_;
    p->QESIACAmount_ = QESIACAmount_;
    p->QESIYTDContribution_ = QESIYTDContribution_;
    p->QESIBasicGrant_ = QESIBasicGrant_;
    p->QESIIncreaseAmt_ = QESIIncreaseAmt_;
    p->Pre98QESIContrib_ = Pre98QESIContrib_;
    p->Pre2007QESIContrib_ = Pre2007QESIContrib_;
    p->RESPExtTrDetlUUID_ = RESPExtTrDetlUUID_;
    p->RESPExtTrDetlVer_ = RESPExtTrDetlVer_;
    p->RESPContrDetlUUID_ = RESPContrDetlUUID_;
    p->RESPContrDetlVer_ = RESPContrDetlVer_;
    p->EligibleTransfer_ = EligibleTransfer_;
    p->TotTransfINDC_ = TotTransfINDC_;
    p->HistNonTrustYear_ = HistNonTrustYear_;
    p->CESGPaid_ = CESGPaid_;
    p->SelInvRunMode_ = SelInvRunMode_;
    p->InvHisInvestId_ = InvHisInvestId_;
    p->InvSummId_ = InvSummId_;
    p->SelInvAmtType_ = SelInvAmtType_;
    p->SelInvAmount_ = SelInvAmount_;
    p->BenefRunMode_ = BenefRunMode_;
    p->BenefAddrCode_ = BenefAddrCode_;
    p->BenefAddrLevel_ = BenefAddrLevel_;
    p->BenefPrcnt_ = BenefPrcnt_;
    p->BenefAmount_ = BenefAmount_;
    p->BenefUnits_ = BenefUnits_;
    p->BenefEntityID_ = BenefEntityID_;
    p->QESIPaid_ = QESIPaid_;
    p->IsResidualCESG_ = IsResidualCESG_;
    p->DilutionNSM_ = DilutionNSM_;
    p->ExSysDilPymtNSM_ = ExSysDilPymtNSM_;
    p->SAGESGrant_ = SAGESGrant_;
    p->SAGESUCAmount_ = SAGESUCAmount_;
    p->SAGESACAmount_ = SAGESACAmount_;
    p->BCTESGGrant_ = BCTESGGrant_;
    p->UCRedAmt_ = UCRedAmt_;
    p->ACRedAmt_ = ACRedAmt_;
    p->SAGESRedUCAmt_ = SAGESRedUCAmt_;
    p->SAGESRedACAmt_ = SAGESRedACAmt_;
    p->QESIRedUCAmt_ = QESIRedUCAmt_;
    p->QESIRedACAmt_ = QESIRedACAmt_;
    p->QESIRedYTDContrib_ = QESIRedYTDContrib_;
    p->Pre2007QESIRedContrib_ = Pre2007QESIRedContrib_;
    p->RedAdditionalGrant_ = RedAdditionalGrant_;
    p->RedSAGES_ = RedSAGES_;
    p->QESIRedBasic_ = QESIRedBasic_;
    p->QESIRedIncrease_ = QESIRedIncrease_;
    p->RedBCTESG_ = RedBCTESG_;
    return(p);
}

BFDataField* dsi_DSTC0115_REQRepeat_Record::getElement( const BFFieldId& id )
{
    switch( id.getId() ) {
        case 40001032: return ( &AllocRunMode_ ); break; // AllocRunMode
        case 40000049: return ( &FundCode_ ); break; // FundCode
        case 40000050: return ( &ClassCode_ ); break; // ClassCode
        case 40001035: return ( &AllocPercentage_ ); break; // AllocPercentage
        case 40000292: return ( &AllocAmount_ ); break; // AllocAmount
        case 40000950: return ( &DistribDetlRid_ ); break; // DistribDetlRid
        case 40000040: return ( &AccountNum_ ); break; // AccountNum
        case 40002286: return ( &AcctPrcnt_ ); break; // AcctPrcnt
        case 40002289: return ( &AcctLvlVer_ ); break; // AcctLvlVer
        case 40002290: return ( &AcctLvlRid_ ); break; // AcctLvlRid
        case 40000949: return ( &DistribDetlVer_ ); break; // DistribDetlVer
        case 40002455: return ( &CommRunMode_ ); break; // CommRunMode
        case 40001377: return ( &TradesPayType_ ); break; // TradesPayType
        case 40002213: return ( &Fixed_ ); break; // Fixed
        case 40000234: return ( &GrossOrNet_ ); break; // GrossOrNet
        case 40002211: return ( &CommPrcnt_ ); break; // CommPrcnt
        case 40000044: return ( &BrokerCode_ ); break; // BrokerCode
        case 40000045: return ( &BranchCode_ ); break; // BranchCode
        case 40000656: return ( &SlsrepCode_ ); break; // SlsrepCode
        case 40002240: return ( &CommLevel_ ); break; // CommLevel
        case 40002444: return ( &CommRate_ ); break; // CommRate
        case 40002461: return ( &AcctLvlRunMode_ ); break; // AcctLvlRunMode
        case 40002496: return ( &AcctLvlAmount_ ); break; // AcctLvlAmount
        case 40005048: return ( &RenunAmount_ ); break; // RenunAmount
        case 40002963: return ( &SplitCommRid_ ); break; // SplitCommRid
        case 40000951: return ( &RecordType_ ); break; // RecordType
        case 40003199: return ( &AllocAmtType_ ); break; // AllocAmtType
        case 40004710: return ( &TransFeeCode_ ); break; // TransFeeCode
        case 40000728: return ( &FeeType_ ); break; // FeeType
        case 40004370: return ( &FeeRate_ ); break; // FeeRate
        case 40000180: return ( &Currency_ ); break; // Currency
        case 40004602: return ( &ChargeOption_ ); break; // ChargeOption
        case 40004603: return ( &TradeFeeOption_ ); break; // TradeFeeOption
        case 40004606: return ( &TransFeeRID_ ); break; // TransFeeRID
        case 40004604: return ( &OrigFeeType_ ); break; // OrigFeeType
        case 40004838: return ( &OrigFeeRate_ ); break; // OrigFeeRate
        case 40005238: return ( &DilRunMode_ ); break; // DilRunMode
        case 40005239: return ( &AccCode_ ); break; // AccCode
        case 40000618: return ( &ReasonCode_ ); break; // ReasonCode
        case 40005082: return ( &RespDate_ ); break; // RespDate
        case 40005240: return ( &RspPrcnt_ ); break; // RspPrcnt
        case 40005088: return ( &DilVersion_ ); break; // DilVersion
        case 40005083: return ( &SplitAccCodeRID_ ); break; // SplitAccCodeRID
        case 40005493: return ( &TPIPayEntity_ ); break; // TPIPayEntity
        case 40005494: return ( &TPIPaymentFor_ ); break; // TPIPaymentFor
        case 40005495: return ( &TPIPayType_ ); break; // TPIPayType
        case 40005496: return ( &TPIACHProcessor_ ); break; // TPIACHProcessor
        case 40005497: return ( &TPIPayMethod_ ); break; // TPIPayMethod
        case 40005498: return ( &TPIBankCharge_ ); break; // TPIBankCharge
        case 40005500: return ( &TPIPayCurrency_ ); break; // TPIPayCurrency
        case 40005501: return ( &TPIUsePayEntAddr_ ); break; // TPIUsePayEntAddr
        case 40005502: return ( &TPIAddress1_ ); break; // TPIAddress1
        case 40005503: return ( &TPIAddress2_ ); break; // TPIAddress2
        case 40005504: return ( &TPIAddress3_ ); break; // TPIAddress3
        case 40005505: return ( &TPIAddress4_ ); break; // TPIAddress4
        case 40005506: return ( &TPIAddress5_ ); break; // TPIAddress5
        case 40005507: return ( &TPIAddrCntry_ ); break; // TPIAddrCntry
        case 40005508: return ( &TPIAddrPSTL_ ); break; // TPIAddrPSTL
        case 40005509: return ( &TPIDirectTo_ ); break; // TPIDirectTo
        case 40005510: return ( &TPIReinvAccount_ ); break; // TPIReinvAccount
        case 40005513: return ( &TPIPercentage_ ); break; // TPIPercentage
        case 40005514: return ( &TPIConsolLevel_ ); break; // TPIConsolLevel
        case 40005515: return ( &TPIConsolType_ ); break; // TPIConsolType
        case 40005516: return ( &RecTypeVersion_ ); break; // RecTypeVersion
        case 40005518: return ( &RecTypRecid_ ); break; // RecTypRecid
        case 40005519: return ( &RecTypRunMode_ ); break; // RecTypRunMode
        case 40005521: return ( &TPIPayInstructID_ ); break; // TPIPayInstructID
        case 40005692: return ( &BillingToEntityType_ ); break; // BillingToEntityType
        case 40005704: return ( &BillingToEntity_ ); break; // BillingToEntity
        case 40005703: return ( &AssociatedAcctNum_ ); break; // AssociatedAcctNum
        case 40006016: return ( &MultiStlLocRunMode_ ); break; // MultiStlLocRunMode
        case 40006017: return ( &SettleLocCode_ ); break; // SettleLocCode
        case 40006018: return ( &TransClrSettlAmt_ ); break; // TransClrSettlAmt
        case 40004823: return ( &ForAccount_ ); break; // ForAccount
        case 40006020: return ( &TransClrSettlUUID_ ); break; // TransClrSettlUUID
        case 40002178: return ( &InFavourOf_ ); break; // InFavourOf
        case 40004822: return ( &DeliveryTo_ ); break; // DeliveryTo
        case 40006130: return ( &EntityAllocRunMode_ ); break; // EntityAllocRunMode
        case 40006131: return ( &AllocEntityType_ ); break; // AllocEntityType
        case 40006132: return ( &AllocEntityTypeSeq_ ); break; // AllocEntityTypeSeq
        case 40006114: return ( &RESPBenefId_ ); break; // RESPBenefId
        case 40006115: return ( &RESPAllocAmt_ ); break; // RESPAllocAmt
        case 40006116: return ( &RESPAllocPrcnt_ ); break; // RESPAllocPrcnt
        case 40006189: return ( &RESPTrfAllocRunMode_ ); break; // RESPTrfAllocRunMode
        case 40006190: return ( &RecordLevel_ ); break; // RecordLevel
        case 40006191: return ( &RESPTrfAllocEntityTypeFrom_ ); break; // RESPTrfAllocEntityTypeFrom
        case 40006192: return ( &RESPTrfEntityTypeSeqFrom_ ); break; // RESPTrfEntityTypeSeqFrom
        case 40006233: return ( &RESPBenefIDFrom_ ); break; // RESPBenefIDFrom
        case 40006193: return ( &RESPTrfAllocEntityTypeTo_ ); break; // RESPTrfAllocEntityTypeTo
        case 40006194: return ( &RESPTrfEntityTypeSeqTo_ ); break; // RESPTrfEntityTypeSeqTo
        case 40006195: return ( &RESPBenefIDTo_ ); break; // RESPBenefIDTo
        case 40000787: return ( &YTDContr_ ); break; // YTDContr
        case 40006198: return ( &TDContr_ ); break; // TDContr
        case 40001511: return ( &GrantAmount_ ); break; // GrantAmount
        case 40006202: return ( &AdditionalGrant_ ); break; // AdditionalGrant
        case 40006203: return ( &CLBAmount_ ); break; // CLBAmount
        case 40006204: return ( &PGrantAmount_ ); break; // PGrantAmount
        case 40006205: return ( &TDRedContrib_ ); break; // TDRedContrib
        case 40000771: return ( &TDRedEarning_ ); break; // TDRedEarning
        case 40006207: return ( &RedCESG_ ); break; // RedCESG
        case 40006208: return ( &RedCLB_ ); break; // RedCLB
        case 40006209: return ( &RedPGrant_ ); break; // RedPGrant
        case 40001515: return ( &UCAmt_ ); break; // UCAmt
        case 40001510: return ( &ACAmt_ ); break; // ACAmt
        case 40006210: return ( &Pre98ContribAmt_ ); break; // Pre98ContribAmt
        case 40006212: return ( &Pre98RedContribAmt_ ); break; // Pre98RedContribAmt
        case 40006213: return ( &TransferPercent_ ); break; // TransferPercent
        case 40006216: return ( &QESIUCAmount_ ); break; // QESIUCAmount
        case 40006217: return ( &QESIACAmount_ ); break; // QESIACAmount
        case 40006218: return ( &QESIYTDContribution_ ); break; // QESIYTDContribution
        case 40006219: return ( &QESIBasicGrant_ ); break; // QESIBasicGrant
        case 40006220: return ( &QESIIncreaseAmt_ ); break; // QESIIncreaseAmt
        case 40006221: return ( &Pre98QESIContrib_ ); break; // Pre98QESIContrib
        case 40006222: return ( &Pre2007QESIContrib_ ); break; // Pre2007QESIContrib
        case 40006223: return ( &RESPExtTrDetlUUID_ ); break; // RESPExtTrDetlUUID
        case 40006224: return ( &RESPExtTrDetlVer_ ); break; // RESPExtTrDetlVer
        case 40006225: return ( &RESPContrDetlUUID_ ); break; // RESPContrDetlUUID
        case 40006117: return ( &RESPContrDetlVer_ ); break; // RESPContrDetlVer
        case 40006258: return ( &EligibleTransfer_ ); break; // EligibleTransfer
        case 40006369: return ( &TotTransfINDC_ ); break; // TotTransfINDC
        case 40006368: return ( &HistNonTrustYear_ ); break; // HistNonTrustYear
        case 40006417: return ( &CESGPaid_ ); break; // CESGPaid
        case 40006713: return ( &SelInvRunMode_ ); break; // SelInvRunMode
        case 40006534: return ( &InvHisInvestId_ ); break; // InvHisInvestId
        case 40004394: return ( &InvSummId_ ); break; // InvSummId
        case 40006714: return ( &SelInvAmtType_ ); break; // SelInvAmtType
        case 40006718: return ( &SelInvAmount_ ); break; // SelInvAmount
        case 40006974: return ( &BenefRunMode_ ); break; // BenefRunMode
        case 40006956: return ( &BenefAddrCode_ ); break; // BenefAddrCode
        case 40006957: return ( &BenefAddrLevel_ ); break; // BenefAddrLevel
        case 40006958: return ( &BenefPrcnt_ ); break; // BenefPrcnt
        case 40006959: return ( &BenefAmount_ ); break; // BenefAmount
        case 40006960: return ( &BenefUnits_ ); break; // BenefUnits
        case 40006955: return ( &BenefEntityID_ ); break; // BenefEntityID
        case 40007017: return ( &QESIPaid_ ); break; // QESIPaid
        case 40007191: return ( &IsResidualCESG_ ); break; // IsResidualCESG
        case 40007323: return ( &DilutionNSM_ ); break; // DilutionNSM
        case 40007324: return ( &ExSysDilPymtNSM_ ); break; // ExSysDilPymtNSM
        case 40007354: return ( &SAGESGrant_ ); break; // SAGESGrant
        case 40007355: return ( &SAGESUCAmount_ ); break; // SAGESUCAmount
        case 40007356: return ( &SAGESACAmount_ ); break; // SAGESACAmount
        case 40007538: return ( &BCTESGGrant_ ); break; // BCTESGGrant
        case 40007759: return ( &UCRedAmt_ ); break; // UCRedAmt
        case 40007760: return ( &ACRedAmt_ ); break; // ACRedAmt
        case 40007761: return ( &SAGESRedUCAmt_ ); break; // SAGESRedUCAmt
        case 40007762: return ( &SAGESRedACAmt_ ); break; // SAGESRedACAmt
        case 40007763: return ( &QESIRedUCAmt_ ); break; // QESIRedUCAmt
        case 40007764: return ( &QESIRedACAmt_ ); break; // QESIRedACAmt
        case 40007765: return ( &QESIRedYTDContrib_ ); break; // QESIRedYTDContrib
        case 40007766: return ( &Pre2007QESIRedContrib_ ); break; // Pre2007QESIRedContrib
        case 40007767: return ( &RedAdditionalGrant_ ); break; // RedAdditionalGrant
        case 40007768: return ( &RedSAGES_ ); break; // RedSAGES
        case 40007769: return ( &QESIRedBasic_ ); break; // QESIRedBasic
        case 40007770: return ( &QESIRedIncrease_ ); break; // QESIRedIncrease
        case 40007771: return ( &RedBCTESG_ ); break; // RedBCTESG
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0115_REQRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0115_REQRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0115_REQRepeat_Record::getElementByIndex( unsigned int iField )
{
    if ( iField >=0 && iField < 155 )
    {
        BFDataField* pField = aFlds_[iField];
        if( NULL == pField )
        {
            switch(iField)
            {
                case 0: aFlds_[0] = &AllocRunMode_; break;
                case 1: aFlds_[1] = &FundCode_; break;
                case 2: aFlds_[2] = &ClassCode_; break;
                case 3: aFlds_[3] = &AllocPercentage_; break;
                case 4: aFlds_[4] = &AllocAmount_; break;
                case 5: aFlds_[5] = &DistribDetlRid_; break;
                case 6: aFlds_[6] = &AccountNum_; break;
                case 7: aFlds_[7] = &AcctPrcnt_; break;
                case 8: aFlds_[8] = &AcctLvlVer_; break;
                case 9: aFlds_[9] = &AcctLvlRid_; break;
                case 10: aFlds_[10] = &DistribDetlVer_; break;
                case 11: aFlds_[11] = &CommRunMode_; break;
                case 12: aFlds_[12] = &TradesPayType_; break;
                case 13: aFlds_[13] = &Fixed_; break;
                case 14: aFlds_[14] = &GrossOrNet_; break;
                case 15: aFlds_[15] = &CommPrcnt_; break;
                case 16: aFlds_[16] = &BrokerCode_; break;
                case 17: aFlds_[17] = &BranchCode_; break;
                case 18: aFlds_[18] = &SlsrepCode_; break;
                case 19: aFlds_[19] = &CommLevel_; break;
                case 20: aFlds_[20] = &CommRate_; break;
                case 21: aFlds_[21] = &AcctLvlRunMode_; break;
                case 22: aFlds_[22] = &AcctLvlAmount_; break;
                case 23: aFlds_[23] = &RenunAmount_; break;
                case 24: aFlds_[24] = &SplitCommRid_; break;
                case 25: aFlds_[25] = &RecordType_; break;
                case 26: aFlds_[26] = &AllocAmtType_; break;
                case 27: aFlds_[27] = &TransFeeCode_; break;
                case 28: aFlds_[28] = &FeeType_; break;
                case 29: aFlds_[29] = &FeeRate_; break;
                case 30: aFlds_[30] = &Currency_; break;
                case 31: aFlds_[31] = &ChargeOption_; break;
                case 32: aFlds_[32] = &TradeFeeOption_; break;
                case 33: aFlds_[33] = &TransFeeRID_; break;
                case 34: aFlds_[34] = &OrigFeeType_; break;
                case 35: aFlds_[35] = &OrigFeeRate_; break;
                case 36: aFlds_[36] = &DilRunMode_; break;
                case 37: aFlds_[37] = &AccCode_; break;
                case 38: aFlds_[38] = &ReasonCode_; break;
                case 39: aFlds_[39] = &RespDate_; break;
                case 40: aFlds_[40] = &RspPrcnt_; break;
                case 41: aFlds_[41] = &DilVersion_; break;
                case 42: aFlds_[42] = &SplitAccCodeRID_; break;
                case 43: aFlds_[43] = &TPIPayEntity_; break;
                case 44: aFlds_[44] = &TPIPaymentFor_; break;
                case 45: aFlds_[45] = &TPIPayType_; break;
                case 46: aFlds_[46] = &TPIACHProcessor_; break;
                case 47: aFlds_[47] = &TPIPayMethod_; break;
                case 48: aFlds_[48] = &TPIBankCharge_; break;
                case 49: aFlds_[49] = &TPIPayCurrency_; break;
                case 50: aFlds_[50] = &TPIUsePayEntAddr_; break;
                case 51: aFlds_[51] = &TPIAddress1_; break;
                case 52: aFlds_[52] = &TPIAddress2_; break;
                case 53: aFlds_[53] = &TPIAddress3_; break;
                case 54: aFlds_[54] = &TPIAddress4_; break;
                case 55: aFlds_[55] = &TPIAddress5_; break;
                case 56: aFlds_[56] = &TPIAddrCntry_; break;
                case 57: aFlds_[57] = &TPIAddrPSTL_; break;
                case 58: aFlds_[58] = &TPIDirectTo_; break;
                case 59: aFlds_[59] = &TPIReinvAccount_; break;
                case 60: aFlds_[60] = &TPIPercentage_; break;
                case 61: aFlds_[61] = &TPIConsolLevel_; break;
                case 62: aFlds_[62] = &TPIConsolType_; break;
                case 63: aFlds_[63] = &RecTypeVersion_; break;
                case 64: aFlds_[64] = &RecTypRecid_; break;
                case 65: aFlds_[65] = &RecTypRunMode_; break;
                case 66: aFlds_[66] = &TPIPayInstructID_; break;
                case 67: aFlds_[67] = &BillingToEntityType_; break;
                case 68: aFlds_[68] = &BillingToEntity_; break;
                case 69: aFlds_[69] = &AssociatedAcctNum_; break;
                case 70: aFlds_[70] = &MultiStlLocRunMode_; break;
                case 71: aFlds_[71] = &SettleLocCode_; break;
                case 72: aFlds_[72] = &TransClrSettlAmt_; break;
                case 73: aFlds_[73] = &ForAccount_; break;
                case 74: aFlds_[74] = &TransClrSettlUUID_; break;
                case 75: aFlds_[75] = &InFavourOf_; break;
                case 76: aFlds_[76] = &DeliveryTo_; break;
                case 77: aFlds_[77] = &EntityAllocRunMode_; break;
                case 78: aFlds_[78] = &AllocEntityType_; break;
                case 79: aFlds_[79] = &AllocEntityTypeSeq_; break;
                case 80: aFlds_[80] = &RESPBenefId_; break;
                case 81: aFlds_[81] = &RESPAllocAmt_; break;
                case 82: aFlds_[82] = &RESPAllocPrcnt_; break;
                case 83: aFlds_[83] = &RESPTrfAllocRunMode_; break;
                case 84: aFlds_[84] = &RecordLevel_; break;
                case 85: aFlds_[85] = &RESPTrfAllocEntityTypeFrom_; break;
                case 86: aFlds_[86] = &RESPTrfEntityTypeSeqFrom_; break;
                case 87: aFlds_[87] = &RESPBenefIDFrom_; break;
                case 88: aFlds_[88] = &RESPTrfAllocEntityTypeTo_; break;
                case 89: aFlds_[89] = &RESPTrfEntityTypeSeqTo_; break;
                case 90: aFlds_[90] = &RESPBenefIDTo_; break;
                case 91: aFlds_[91] = &YTDContr_; break;
                case 92: aFlds_[92] = &TDContr_; break;
                case 93: aFlds_[93] = &GrantAmount_; break;
                case 94: aFlds_[94] = &AdditionalGrant_; break;
                case 95: aFlds_[95] = &CLBAmount_; break;
                case 96: aFlds_[96] = &PGrantAmount_; break;
                case 97: aFlds_[97] = &TDRedContrib_; break;
                case 98: aFlds_[98] = &TDRedEarning_; break;
                case 99: aFlds_[99] = &RedCESG_; break;
                case 100: aFlds_[100] = &RedCLB_; break;
                case 101: aFlds_[101] = &RedPGrant_; break;
                case 102: aFlds_[102] = &UCAmt_; break;
                case 103: aFlds_[103] = &ACAmt_; break;
                case 104: aFlds_[104] = &Pre98ContribAmt_; break;
                case 105: aFlds_[105] = &Pre98RedContribAmt_; break;
                case 106: aFlds_[106] = &TransferPercent_; break;
                case 107: aFlds_[107] = &QESIUCAmount_; break;
                case 108: aFlds_[108] = &QESIACAmount_; break;
                case 109: aFlds_[109] = &QESIYTDContribution_; break;
                case 110: aFlds_[110] = &QESIBasicGrant_; break;
                case 111: aFlds_[111] = &QESIIncreaseAmt_; break;
                case 112: aFlds_[112] = &Pre98QESIContrib_; break;
                case 113: aFlds_[113] = &Pre2007QESIContrib_; break;
                case 114: aFlds_[114] = &RESPExtTrDetlUUID_; break;
                case 115: aFlds_[115] = &RESPExtTrDetlVer_; break;
                case 116: aFlds_[116] = &RESPContrDetlUUID_; break;
                case 117: aFlds_[117] = &RESPContrDetlVer_; break;
                case 118: aFlds_[118] = &EligibleTransfer_; break;
                case 119: aFlds_[119] = &TotTransfINDC_; break;
                case 120: aFlds_[120] = &HistNonTrustYear_; break;
                case 121: aFlds_[121] = &CESGPaid_; break;
                case 122: aFlds_[122] = &SelInvRunMode_; break;
                case 123: aFlds_[123] = &InvHisInvestId_; break;
                case 124: aFlds_[124] = &InvSummId_; break;
                case 125: aFlds_[125] = &SelInvAmtType_; break;
                case 126: aFlds_[126] = &SelInvAmount_; break;
                case 127: aFlds_[127] = &BenefRunMode_; break;
                case 128: aFlds_[128] = &BenefAddrCode_; break;
                case 129: aFlds_[129] = &BenefAddrLevel_; break;
                case 130: aFlds_[130] = &BenefPrcnt_; break;
                case 131: aFlds_[131] = &BenefAmount_; break;
                case 132: aFlds_[132] = &BenefUnits_; break;
                case 133: aFlds_[133] = &BenefEntityID_; break;
                case 134: aFlds_[134] = &QESIPaid_; break;
                case 135: aFlds_[135] = &IsResidualCESG_; break;
                case 136: aFlds_[136] = &DilutionNSM_; break;
                case 137: aFlds_[137] = &ExSysDilPymtNSM_; break;
                case 138: aFlds_[138] = &SAGESGrant_; break;
                case 139: aFlds_[139] = &SAGESUCAmount_; break;
                case 140: aFlds_[140] = &SAGESACAmount_; break;
                case 141: aFlds_[141] = &BCTESGGrant_; break;
                case 142: aFlds_[142] = &UCRedAmt_; break;
                case 143: aFlds_[143] = &ACRedAmt_; break;
                case 144: aFlds_[144] = &SAGESRedUCAmt_; break;
                case 145: aFlds_[145] = &SAGESRedACAmt_; break;
                case 146: aFlds_[146] = &QESIRedUCAmt_; break;
                case 147: aFlds_[147] = &QESIRedACAmt_; break;
                case 148: aFlds_[148] = &QESIRedYTDContrib_; break;
                case 149: aFlds_[149] = &Pre2007QESIRedContrib_; break;
                case 150: aFlds_[150] = &RedAdditionalGrant_; break;
                case 151: aFlds_[151] = &RedSAGES_; break;
                case 152: aFlds_[152] = &QESIRedBasic_; break;
                case 153: aFlds_[153] = &QESIRedIncrease_; break;
                case 154: aFlds_[154] = &RedBCTESG_; break;
            }
            pField = aFlds_[iField];
            if( NULL == pField ) return( NULL );
        }
        return( pField );
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0115_REQRepeat_Record::getElementByIndex( unsigned int iField ) const
{
    return( ( const_cast< dsi_DSTC0115_REQRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0115_REQRepeat_Record::getLargestDefinedField( void ) const
{
    return( 200 );
}

unsigned long dsi_DSTC0115_REQRepeat_Record::getDefinedByteLength( void ) const
{
    return( 5308 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0115_REQRepeat_Record::exists( const BFFieldId& id ) const
{
    return dsi_DSTC0115_REQRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0115_REQRepeat_Record::fieldExists( const BFFieldId& id )
{
    switch( id.getId() )
    {
        case 40001032: return ( true );
        case 40000049: return ( true );
        case 40000050: return ( true );
        case 40001035: return ( true );
        case 40000292: return ( true );
        case 40000950: return ( true );
        case 40000040: return ( true );
        case 40002286: return ( true );
        case 40002289: return ( true );
        case 40002290: return ( true );
        case 40000949: return ( true );
        case 40002455: return ( true );
        case 40001377: return ( true );
        case 40002213: return ( true );
        case 40000234: return ( true );
        case 40002211: return ( true );
        case 40000044: return ( true );
        case 40000045: return ( true );
        case 40000656: return ( true );
        case 40002240: return ( true );
        case 40002444: return ( true );
        case 40002461: return ( true );
        case 40002496: return ( true );
        case 40005048: return ( true );
        case 40002963: return ( true );
        case 40000951: return ( true );
        case 40003199: return ( true );
        case 40004710: return ( true );
        case 40000728: return ( true );
        case 40004370: return ( true );
        case 40000180: return ( true );
        case 40004602: return ( true );
        case 40004603: return ( true );
        case 40004606: return ( true );
        case 40004604: return ( true );
        case 40004838: return ( true );
        case 40005238: return ( true );
        case 40005239: return ( true );
        case 40000618: return ( true );
        case 40005082: return ( true );
        case 40005240: return ( true );
        case 40005088: return ( true );
        case 40005083: return ( true );
        case 40005493: return ( true );
        case 40005494: return ( true );
        case 40005495: return ( true );
        case 40005496: return ( true );
        case 40005497: return ( true );
        case 40005498: return ( true );
        case 40005500: return ( true );
        case 40005501: return ( true );
        case 40005502: return ( true );
        case 40005503: return ( true );
        case 40005504: return ( true );
        case 40005505: return ( true );
        case 40005506: return ( true );
        case 40005507: return ( true );
        case 40005508: return ( true );
        case 40005509: return ( true );
        case 40005510: return ( true );
        case 40005513: return ( true );
        case 40005514: return ( true );
        case 40005515: return ( true );
        case 40005516: return ( true );
        case 40005518: return ( true );
        case 40005519: return ( true );
        case 40005521: return ( true );
        case 40005692: return ( true );
        case 40005704: return ( true );
        case 40005703: return ( true );
        case 40006016: return ( true );
        case 40006017: return ( true );
        case 40006018: return ( true );
        case 40004823: return ( true );
        case 40006020: return ( true );
        case 40002178: return ( true );
        case 40004822: return ( true );
        case 40006130: return ( true );
        case 40006131: return ( true );
        case 40006132: return ( true );
        case 40006114: return ( true );
        case 40006115: return ( true );
        case 40006116: return ( true );
        case 40006189: return ( true );
        case 40006190: return ( true );
        case 40006191: return ( true );
        case 40006192: return ( true );
        case 40006233: return ( true );
        case 40006193: return ( true );
        case 40006194: return ( true );
        case 40006195: return ( true );
        case 40000787: return ( true );
        case 40006198: return ( true );
        case 40001511: return ( true );
        case 40006202: return ( true );
        case 40006203: return ( true );
        case 40006204: return ( true );
        case 40006205: return ( true );
        case 40000771: return ( true );
        case 40006207: return ( true );
        case 40006208: return ( true );
        case 40006209: return ( true );
        case 40001515: return ( true );
        case 40001510: return ( true );
        case 40006210: return ( true );
        case 40006212: return ( true );
        case 40006213: return ( true );
        case 40006216: return ( true );
        case 40006217: return ( true );
        case 40006218: return ( true );
        case 40006219: return ( true );
        case 40006220: return ( true );
        case 40006221: return ( true );
        case 40006222: return ( true );
        case 40006223: return ( true );
        case 40006224: return ( true );
        case 40006225: return ( true );
        case 40006117: return ( true );
        case 40006258: return ( true );
        case 40006369: return ( true );
        case 40006368: return ( true );
        case 40006417: return ( true );
        case 40006713: return ( true );
        case 40006534: return ( true );
        case 40004394: return ( true );
        case 40006714: return ( true );
        case 40006718: return ( true );
        case 40006974: return ( true );
        case 40006956: return ( true );
        case 40006957: return ( true );
        case 40006958: return ( true );
        case 40006959: return ( true );
        case 40006960: return ( true );
        case 40006955: return ( true );
        case 40007017: return ( true );
        case 40007191: return ( true );
        case 40007323: return ( true );
        case 40007324: return ( true );
        case 40007354: return ( true );
        case 40007355: return ( true );
        case 40007356: return ( true );
        case 40007538: return ( true );
        case 40007759: return ( true );
        case 40007760: return ( true );
        case 40007761: return ( true );
        case 40007762: return ( true );
        case 40007763: return ( true );
        case 40007764: return ( true );
        case 40007765: return ( true );
        case 40007766: return ( true );
        case 40007767: return ( true );
        case 40007768: return ( true );
        case 40007769: return ( true );
        case 40007770: return ( true );
        case 40007771: return ( true );
    }
    return false;
}

