// BFDataImpl implementation file for DataSet DSTC0436.VW
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0436_vw.h"


// This function creates an instance of dsi_DSTC0436_VW
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0436_VW() { return new dsi_DSTC0436_VW; }

dsi_DSTC0436_VW::dsi_DSTC0436_VW()
: BFDataImpl( 40006801 )
, WarnCode_( ifds::WarnCode, &ifds::s_FldProp_WarnCode )
, WarnDesc_( ifds::WarnDesc, &ifds::s_FldProp_WarnDesc )
, WarnValue1_( ifds::WarnValue1, &ifds::s_FldProp_WarnValue1 )
, WarnValue2_( ifds::WarnValue2, &ifds::s_FldProp_WarnValue2 )
, WarnValue3_( ifds::WarnValue3, &ifds::s_FldProp_WarnValue3 )
, WarnValue4_( ifds::WarnValue4, &ifds::s_FldProp_WarnValue4 )
{
   cFields_ = 6;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0436_VW::~dsi_DSTC0436_VW()
{
}

BFDataImpl* dsi_DSTC0436_VW::clone()
{
   dsi_DSTC0436_VW* p = new dsi_DSTC0436_VW;
   p->WarnCode_ = WarnCode_;
   p->WarnDesc_ = WarnDesc_;
   p->WarnValue1_ = WarnValue1_;
   p->WarnValue2_ = WarnValue2_;
   p->WarnValue3_ = WarnValue3_;
   p->WarnValue4_ = WarnValue4_;
   return(p);
}

BFDataField* dsi_DSTC0436_VW::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40005181: return ( &WarnCode_ ); break; // WarnCode
      case 40005182: return ( &WarnDesc_ ); break; // WarnDesc
      case 40006808: return ( &WarnValue1_ ); break; // WarnValue1
      case 40006809: return ( &WarnValue2_ ); break; // WarnValue2
      case 40006810: return ( &WarnValue3_ ); break; // WarnValue3
      case 40006811: return ( &WarnValue4_ ); break; // WarnValue4
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0436_VW::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0436_VW* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0436_VW::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 6 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &WarnCode_; break;
            case 1: aFlds_[1] = &WarnDesc_; break;
            case 2: aFlds_[2] = &WarnValue1_; break;
            case 3: aFlds_[3] = &WarnValue2_; break;
            case 4: aFlds_[4] = &WarnValue3_; break;
            case 5: aFlds_[5] = &WarnValue4_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0436_VW::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0436_VW* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0436_VW::getLargestDefinedField( void ) const
{
   return( 60 );
}

unsigned long dsi_DSTC0436_VW::getDefinedByteLength( void ) const
{
   return( 307 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0436_VW::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0436_VW::fieldExists( id );
}

bool dsi_DSTC0436_VW::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40005181: return( true );
      case 40005182: return( true );
      case 40006808: return( true );
      case 40006809: return( true );
      case 40006810: return( true );
      case 40006811: return( true );
   }
   return false;
}

