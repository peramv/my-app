// Data Field Properties
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdataid.hpp>
#include "ifast_substitutions.h"
#include "ifast_masks.h"

namespace ifds
{
   extern const BFTextFieldId AcctAlloc;
   extern const BFTextFieldId ClanPlan;
   extern const BFDataId DSTC0050_VW;
   extern const BFDataId DSTC0050_VWRepeat_Record;
   extern const BFTextFieldId EntityType;
   extern const BFTextFieldId EntityTypeDesc;
   extern const BFNumericFieldId SeqNumber;
   extern const BFTextFieldId RelateCode;
   extern const BFTextFieldId RelateCodeShip;
   extern const BFTextFieldId AuthTrade;
   extern const BFTextFieldId Irrevocable;
   extern const BFDateFieldId BenDeff;
   extern const BFTextFieldId DepositionCode;
   extern const BFTextFieldId DepostitionDesc;
   extern const BFTextFieldId JointType;
   extern const BFTextFieldId JointTypeDesc;
   extern const BFTextFieldId EscrowFund;
   extern const BFTextFieldId EscrowClass;
   extern const BFTextFieldId ReasonCode;
   extern const BFTextFieldId ReasonDesc;
   extern const BFDateFieldId EscrowDeff;
   extern const BFDateFieldId EscrowStopDate;
   extern const BFDataId DSTC0051_VW;
   extern const BFDateFieldId DofBirth;
   extern const BFTextFieldId Language;
   extern const BFTextFieldId BusinessPhone;
   extern const BFTextFieldId BusinessExt;
   extern const BFTextFieldId BusinessFax;
   extern const BFTextFieldId Telex;
   extern const BFTextFieldId Email;
   extern const BFDateFieldId DofDeath;
   extern const BFDateFieldId DofDeathNotice;
   extern const BFDataId DSTC0051_VWRepeat_Record;
   extern const BFTextFieldId IdType;
   extern const BFTextFieldId IdTypeDesc;
   extern const BFTextFieldId IdValue;
   extern const BFDateFieldId IdDate;
   extern const BFDataId DSTC1052_VW;
   extern const BFDataId DSTC1052_VWRepeat_Record;
   extern const BFTextFieldId rxShrNumber;
   extern const BFTextFieldId AcctUseCode;
   extern const BFTextFieldId AcctUseDesc;
   extern const BFTextFieldId PayReason1;
   extern const BFTextFieldId PayReason2;
   extern const BFDataId DSTC0053_VW;
   extern const BFDataId DSTC0053_VWRepeat_Record;
   extern const BFNumericFieldId AccountTo;
   extern const BFTextFieldId AcctToName;
   extern const BFTextFieldId FundTo;
   extern const BFTextFieldId ClassTo;
   extern const BFTextFieldId AmtTypeCode;
   extern const BFTextFieldId AmtTypeDesc;
   extern const BFTextFieldId BatchUser;
   extern const BFTextFieldId BatchName;
   extern const BFNumericFieldId BatchTrace;
   extern const BFDataId DSTC0054_VW;
   extern const BFTextFieldId SlsrepCode;
   extern const BFTextFieldId SettleCurrName;
   extern const BFTextFieldId FlatPercent;
   extern const BFTextFieldId BELFee;
   extern const BFDecimalFieldId AdminFee;
   extern const BFDecimalFieldId OverrideDSC;
   extern const BFTextFieldId OverrideTax;
   extern const BFDecimalFieldId FedTaxRate;
   extern const BFTextFieldId FedTaxPUD;
   extern const BFDecimalFieldId ProvTaxRate;
   extern const BFTextFieldId ProvTaxPUD;
   extern const BFTextFieldId ProvSalesName;
   extern const BFTextFieldId Payment;
   extern const BFTextFieldId AddrLine;
   extern const BFTextFieldId ExpGNSettle;
   extern const BFTextFieldId RoundFlagDesc;
   extern const BFTextFieldId CreditFreq;
   extern const BFTextFieldId CreditFreqDesc;
   extern const BFTextFieldId ExtraCommission;
   extern const BFTextFieldId CertRequired;
   extern const BFTextFieldId CertIssued;
   extern const BFTextFieldId ExclMFCSSettle;
   extern const BFDateFieldId GuaranteeDate;
   extern const BFDateFieldId MaturityDate;
   extern const BFDecimalFieldId InterestRate;
   extern const BFTextFieldId DepId;
   extern const BFTextFieldId RejCode;
   extern const BFTextFieldId RejCodeDesc;
   extern const BFDateFieldId DateStamp;
   extern const BFTextFieldId TimeStamp;
   extern const BFDataId DSTC0056_VW;
   extern const BFDataId DSTC0056_VWRepeat_Record;
   extern const BFTextFieldId ClassE;
   extern const BFTextFieldId ClassF;
   extern const BFNumericFieldId AdditionalDays;
   extern const BFDecimalFieldId MinInitPurAmt;
   extern const BFDecimalFieldId MinSubPurAmt;
   extern const BFDecimalFieldId MinInitRedAmt;
   extern const BFDecimalFieldId MinSubRedAmt;
   extern const BFDecimalFieldId MinPAC;
   extern const BFDecimalFieldId MinSWP;
   extern const BFDecimalFieldId MinFndClsBal;
   extern const BFDecimalFieldId MinAcctBal;
   extern const BFTextFieldId StopPurchase;
   extern const BFTextFieldId StopRedemption;
   extern const BFTextFieldId StopTrxferIn;
   extern const BFTextFieldId StopTrxferOut;
   extern const BFTextFieldId OverrideDSCAllow;
   extern const BFTextFieldId FixedPrice;
   extern const BFDecimalFieldId FixedRate;
   extern const BFDateFieldId LastValDate;
   extern const BFDateFieldId LastDivDate;
   extern const BFDataId DSTC0057_VW;
   extern const BFDataId DSTC0057_VWRepeat_Record;
   extern const BFTextFieldId ERepLastName;
   extern const BFTextFieldId ERepFirstName;
   extern const BFTextFieldId DefaultAddrCode;
   extern const BFTextFieldId AuthorizedToTrade;
   extern const BFDataId DSTC0058_VW;
   extern const BFDataId DSTC0058_VWRepeat_Record;
   extern const BFDataId DSTC0059_VW;
   extern const BFDataId DSTC0059_VWRepeat_Record;
   extern const BFNumericFieldId AutoTrfId;
   extern const BFTextFieldId FromFund;
   extern const BFTextFieldId FromClass;
   extern const BFTextFieldId ToFund;
   extern const BFTextFieldId ToClass;
   extern const BFNumericFieldId ToAccount;
   extern const BFTextFieldId ToAcctLName;
   extern const BFTextFieldId ToAcctFName;
   extern const BFTextFieldId AmtType;
   extern const BFDecimalFieldId FELFee;
   extern const BFTextFieldId FeeType;
   extern const BFTextFieldId ApplyBELFee;
   extern const BFTextFieldId Frequency;
   extern const BFTextFieldId FreqCodeDesc;
   extern const BFDataId DSTC0060_VW;
   extern const BFDataId DSTC0060_VWRepeat_Record;
   extern const BFDataId DSTC0061_VW;
   extern const BFDataId DSTC0061_VWRepeat_Record;
   extern const BFDataId DSTC0062_VW;
   extern const BFDataId DSTC0062_VWRepeat_Record;
   extern const BFTextFieldId rxFund;
   extern const BFTextFieldId rxClass;
   extern const BFDecimalFieldId EligUnits;
   extern const BFDecimalFieldId IntRate;
   extern const BFBigDecimalFieldId IntValue;
   extern const BFDecimalFieldId IntPaid;
   extern const BFBigDecimalFieldId AccumTotal;
   extern const BFDataId DSTC0063_VW;
   extern const BFDataId DSTC0063_VWRepeat_Record;
   extern const BFTextFieldId ElongName1;
   extern const BFTextFieldId ElongName2;
   extern const BFTextFieldId EShortName;
   extern const BFTextFieldId FLongName;
   extern const BFTextFieldId FLongName2;
   extern const BFTextFieldId FShortName;
   extern const BFTextFieldId FundType;
   extern const BFTextFieldId FundTypeDesc;
   extern const BFTextFieldId CusipNum;
   extern const BFTextFieldId PriceAtClass;
   extern const BFDataId DSTC0064_VW;
   extern const BFDataId DSTC0064_VWRepeat_Record;
   extern const BFNumericFieldId FunctionId;
   extern const BFTextFieldId F_active;
   extern const BFTextFieldId InqPerm;
   extern const BFTextFieldId AddPerm;
   extern const BFTextFieldId ModPerm;
   extern const BFTextFieldId DelPerm;
   extern const BFDataId DSTC0066_VW;
   extern const BFDateFieldId TerminateDate;
   extern const BFDecimalFieldId ToDateContr;
   extern const BFTextFieldId PlanNum;
   extern const BFDecimalFieldId GrantRepayable;
   extern const BFTextFieldId CESGEligible;
   extern const BFDecimalFieldId TDRedEarning;
   extern const BFTextFieldId GFathered;
   extern const BFDecimalFieldId CurrEarning;
   extern const BFTextFieldId RESPStatus;
   extern const BFTextFieldId RESPStatDesc;
   extern const BFDecimalFieldId RedLifeContr;
   extern const BFDecimalFieldId RedUCAmt;
   extern const BFDecimalFieldId RedACAmt;
   extern const BFDecimalFieldId RedNetGrant;
   extern const BFDecimalFieldId AcctLifeContr;
   extern const BFDecimalFieldId AcctUCAmt;
   extern const BFDecimalFieldId AcctACAmt;
   extern const BFDecimalFieldId AcctNetGrant;
   extern const BFDecimalFieldId AcctEAP;
   extern const BFDataId DSTC0066_VWRepeat_Record;
   extern const BFTextFieldId BeneName;
   extern const BFDecimalFieldId YTDContr;
   extern const BFDecimalFieldId LifeContr;
   extern const BFDecimalFieldId UnAssisted;
   extern const BFDecimalFieldId Assisted;
   extern const BFDecimalFieldId NetGrant;
   extern const BFDecimalFieldId EAPayment;
   extern const BFDataId DSTC0069_VW;
   extern const BFDataId DSTC0069_VWRepeat_Record;
   extern const BFNumericFieldId rxShrNum;
   extern const BFTextFieldId TaxJurisCode;
   extern const BFTextFieldId TaxJurisName;
   extern const BFTextFieldId ResProvCode;
   extern const BFTextFieldId ResProvName;
   extern const BFTextFieldId GroupCode;

   //------------------------------------------------------------------
   // Field s_FldProp_AcctAlloc (600)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctAlloc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_600_5( I_("N") );
      return( dstrDefValue_600_5 );
   }
   const DString& s_FldProp_AcctAlloc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_600_5( I_("AcctAlloc") );
      return( dstrFldLabel_600_5 );
   }
   PBF_SSC subset_super_chooser_2_600( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctAlloc(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctAlloc // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctAlloc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctAlloc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_600 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ClanPlan (601)
   //------------------------------------------------------------------
   const DString& s_FldProp_ClanPlan_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_601_4( I_(" ") );
      return( dstrDefValue_601_4 );
   }
   const DString& s_FldProp_ClanPlan_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_601_4( I_("ClanPlan") );
      return( dstrFldLabel_601_4 );
   }
   PBF_SSC subset_super_chooser_2_601( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ClanPlan(
       BFDataFieldProperties::Type::text // field is a text field
      ,ClanPlan // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ClanPlan_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ClanPlan_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_601 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityType (604)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_604_4( I_("   ") );
      return( dstrDefValue_604_4 );
   }
   const DString& s_FldProp_EntityType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_604_4( I_("EntityType  ") );
      return( dstrFldLabel_604_4 );
   }
   PBF_SSC subset_super_chooser_2_604( const ClientLocale& locale )
   {
      return chooser_ss_002_020; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityType(
       BFDataFieldProperties::Type::text // field is a text field
      ,EntityType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EntityType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EntityType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_604 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityTypeDesc (605)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_605_5( I_("                                                  ") );
      return( dstrDefValue_605_5 );
   }
   const DString& s_FldProp_EntityTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_605_5( I_("EntityTypeDesc ") );
      return( dstrFldLabel_605_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,EntityTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EntityTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EntityTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SeqNumber (606)
   //------------------------------------------------------------------
   const DString& s_FldProp_SeqNumber_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_606_5( I_("0000000000") );
      return( dstrDefValue_606_5 );
   }
   DIINT64 s_FldProp_SeqNumber_i_DVF( const ClientLocale& locale )
   {
      return( 0000000000 );
   }
   const DString& s_FldProp_SeqNumber_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_606_5( I_("SeqNumber ") );
      return( dstrFldLabel_606_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SeqNumber(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,SeqNumber // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_SeqNumber_s_DVF // default value
      ,s_FldProp_SeqNumber_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_SeqNumber_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RelateCode (607)
   //------------------------------------------------------------------
   const DString& s_FldProp_RelateCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_607_4( I_("                                                  ") );
      return( dstrDefValue_607_4 );
   }
   const DString& s_FldProp_RelateCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_607_4( I_("RelateCode  ") );
      return( dstrFldLabel_607_4 );
   }
   PBF_SSC subset_super_chooser_2_607( const ClientLocale& locale )
   {
      return chooser_ss_002_040; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RelateCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,RelateCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RelateCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RelateCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_607 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RelateCodeShip (608)
   //------------------------------------------------------------------
   const DString& s_FldProp_RelateCodeShip_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_608_4( I_("   ") );
      return( dstrDefValue_608_4 );
   }
   const DString& s_FldProp_RelateCodeShip_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_608_4( I_("RelateCodeShip  ") );
      return( dstrFldLabel_608_4 );
   }
   PBF_SSC subset_super_chooser_2_608( const ClientLocale& locale )
   {
      return chooser_ss_002_040; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RelateCodeShip(
       BFDataFieldProperties::Type::text // field is a text field
      ,RelateCodeShip // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RelateCodeShip_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RelateCodeShip_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_608 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AuthTrade (609)
   //------------------------------------------------------------------
   const DString& s_FldProp_AuthTrade_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_609_4( I_("N") );
      return( dstrDefValue_609_4 );
   }
   const DString& s_FldProp_AuthTrade_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_609_4( I_("AuthTrade") );
      return( dstrFldLabel_609_4 );
   }
   PBF_SSC subset_super_chooser_2_609( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AuthTrade(
       BFDataFieldProperties::Type::text // field is a text field
      ,AuthTrade // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AuthTrade_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AuthTrade_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_609 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Irrevocable (610)
   //------------------------------------------------------------------
   const DString& s_FldProp_Irrevocable_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_610_5( I_("N") );
      return( dstrDefValue_610_5 );
   }
   const DString& s_FldProp_Irrevocable_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_610_5( I_("Irrevocable   ") );
      return( dstrFldLabel_610_5 );
   }
   PBF_SSC subset_super_chooser_2_610( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Irrevocable(
       BFDataFieldProperties::Type::text // field is a text field
      ,Irrevocable // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Irrevocable_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Irrevocable_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_610 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenDeff (611)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenDeff_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_611_4( I_("         ") );
      return( dstrDefValue_611_4 );
   }
   const DString& s_FldProp_BenDeff_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_611_4( I_("BenDeff ") );
      return( dstrFldLabel_611_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenDeff(
       BFDataFieldProperties::Type::date // field is a date field
      ,BenDeff // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BenDeff_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BenDeff_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DepositionCode (612)
   //------------------------------------------------------------------
   const DString& s_FldProp_DepositionCode_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_612_5( I_("") );
         return( dstrDefValue_612_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_612_7( I_("01") );
         return( dstrDefValue_612_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_612_8( I_("01") );
         return( dstrDefValue_612_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_612_6( I_("01") );
         return( dstrDefValue_612_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_612_4( I_("01") );
         return( dstrDefValue_612_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_612_3( I_("01") );
         return( dstrDefValue_612_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_612_1( I_("") );
         return( dstrDefValue_612_1 );
      }
      static const DString dstrDefValue_612_1( I_("") );
      return( dstrDefValue_612_1 );
   }
   const DString& s_FldProp_DepositionCode_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_612_5( I_("DepositionCode") );
         return( dstrFldLabel_612_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_612_7( I_("DepositionCode") );
         return( dstrFldLabel_612_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_612_8( I_("DepositionCode") );
         return( dstrFldLabel_612_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_612_6( I_("DepositionCode") );
         return( dstrFldLabel_612_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_612_4( I_("DepositionCode") );
         return( dstrFldLabel_612_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_612_3( I_("DepositionCode") );
         return( dstrFldLabel_612_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_612_1( I_("DepositionCode") );
         return( dstrFldLabel_612_1 );
      }
      static const DString dstrFldLabel_612_1( I_("DepositionCode") );
      return( dstrFldLabel_612_1 );
   }
   PBF_SSC subset_super_chooser_2_612( const ClientLocale& locale )
   {
      return chooser_ss_002_019; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DepositionCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,DepositionCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DepositionCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DepositionCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_612 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DepostitionDesc (613)
   //------------------------------------------------------------------
   const DString& s_FldProp_DepostitionDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_613_8( I_("                                                  ") );
      return( dstrDefValue_613_8 );
   }
   const DString& s_FldProp_DepostitionDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_613_8( I_("DepostitionDesc ") );
      return( dstrFldLabel_613_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DepostitionDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,DepostitionDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DepostitionDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DepostitionDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_JointType (614)
   //------------------------------------------------------------------
   const DString& s_FldProp_JointType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_614_4( I_("01") );
      return( dstrDefValue_614_4 );
   }
   const DString& s_FldProp_JointType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_614_4( I_("JointType") );
      return( dstrFldLabel_614_4 );
   }
   PBF_SSC subset_super_chooser_2_614( const ClientLocale& locale )
   {
      return chooser_ss_002_026; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_JointType(
       BFDataFieldProperties::Type::text // field is a text field
      ,JointType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_JointType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_JointType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_614 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_JointTypeDesc (615)
   //------------------------------------------------------------------
   const DString& s_FldProp_JointTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_615_5( I_("                                                  ") );
      return( dstrDefValue_615_5 );
   }
   const DString& s_FldProp_JointTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_615_5( I_("JointTypeDesc ") );
      return( dstrFldLabel_615_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_JointTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,JointTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_JointTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_JointTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EscrowFund (616)
   //------------------------------------------------------------------
   const DString& s_FldProp_EscrowFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_616_4( I_("                                                  ") );
      return( dstrDefValue_616_4 );
   }
   const DString& s_FldProp_EscrowFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_616_4( I_("EscrowFund ") );
      return( dstrFldLabel_616_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EscrowFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,EscrowFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EscrowFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EscrowFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EscrowClass (617)
   //------------------------------------------------------------------
   const DString& s_FldProp_EscrowClass_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_617_4( I_("                                                  ") );
      return( dstrDefValue_617_4 );
   }
   const DString& s_FldProp_EscrowClass_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_617_4( I_("EscrowClass ") );
      return( dstrFldLabel_617_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EscrowClass(
       BFDataFieldProperties::Type::text // field is a text field
      ,EscrowClass // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EscrowClass_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EscrowClass_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ReasonCode (618)
   //------------------------------------------------------------------
   const DString& s_FldProp_ReasonCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_618_5( I_("                                                  ") );
      return( dstrDefValue_618_5 );
   }
   const DString& s_FldProp_ReasonCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_618_5( I_("ReasonCode ") );
      return( dstrFldLabel_618_5 );
   }
   PBF_SSC subset_super_chooser_2_618( const ClientLocale& locale )
   {
      return chooser_ss_002_029; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ReasonCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,ReasonCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ReasonCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ReasonCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_618 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ReasonDesc (619)
   //------------------------------------------------------------------
   const DString& s_FldProp_ReasonDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_619_4( I_("                                                  ") );
      return( dstrDefValue_619_4 );
   }
   const DString& s_FldProp_ReasonDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_619_4( I_("ReasonDesc ") );
      return( dstrFldLabel_619_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ReasonDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,ReasonDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ReasonDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ReasonDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EscrowDeff (620)
   //------------------------------------------------------------------
   const DString& s_FldProp_EscrowDeff_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_620_4( I_("         ") );
      return( dstrDefValue_620_4 );
   }
   const DString& s_FldProp_EscrowDeff_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_620_4( I_("EscrowDeff ") );
      return( dstrFldLabel_620_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EscrowDeff(
       BFDataFieldProperties::Type::date // field is a date field
      ,EscrowDeff // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EscrowDeff_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EscrowDeff_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EscrowStopDate (621)
   //------------------------------------------------------------------
   const DString& s_FldProp_EscrowStopDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_621_4( I_("         ") );
      return( dstrDefValue_621_4 );
   }
   const DString& s_FldProp_EscrowStopDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_621_4( I_("EscrowStopDate ") );
      return( dstrFldLabel_621_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EscrowStopDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,EscrowStopDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EscrowStopDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EscrowStopDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DofBirth (623)
   //------------------------------------------------------------------
   const DString& s_FldProp_DofBirth_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_623_5( I_("         ") );
      return( dstrDefValue_623_5 );
   }
   const DString& s_FldProp_DofBirth_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_623_5( I_("DofBirth ") );
      return( dstrFldLabel_623_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DofBirth(
       BFDataFieldProperties::Type::date // field is a date field
      ,DofBirth // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DofBirth_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DofBirth_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Language (624)
   //------------------------------------------------------------------
   const DString& s_FldProp_Language_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_624_4( I_("   ") );
      return( dstrDefValue_624_4 );
   }
   const DString& s_FldProp_Language_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_624_4( I_("Language  ") );
      return( dstrFldLabel_624_4 );
   }
   PBF_SSC subset_super_chooser_2_624( const ClientLocale& locale )
   {
      return chooser_ss_002_028; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Language(
       BFDataFieldProperties::Type::text // field is a text field
      ,Language // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Language_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Language_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_624 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BusinessPhone (625)
   //------------------------------------------------------------------
   const DString& s_FldProp_BusinessPhone_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_625_5( I_("                                                  ") );
      return( dstrDefValue_625_5 );
   }
   const DString& s_FldProp_BusinessPhone_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_625_5( I_("BusinessPhone ") );
      return( dstrFldLabel_625_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BusinessPhone(
       BFDataFieldProperties::Type::text // field is a text field
      ,BusinessPhone // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BusinessPhone_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BusinessPhone_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BusinessExt (626)
   //------------------------------------------------------------------
   const DString& s_FldProp_BusinessExt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_626_8( I_("                                                  ") );
      return( dstrDefValue_626_8 );
   }
   const DString& s_FldProp_BusinessExt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_626_8( I_("BusinessExt ") );
      return( dstrFldLabel_626_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BusinessExt(
       BFDataFieldProperties::Type::text // field is a text field
      ,BusinessExt // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BusinessExt_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BusinessExt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BusinessFax (627)
   //------------------------------------------------------------------
   const DString& s_FldProp_BusinessFax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_627_4( I_("                                                  ") );
      return( dstrDefValue_627_4 );
   }
   const DString& s_FldProp_BusinessFax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_627_4( I_("BusinessFax ") );
      return( dstrFldLabel_627_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BusinessFax(
       BFDataFieldProperties::Type::text // field is a text field
      ,BusinessFax // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BusinessFax_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BusinessFax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Telex (628)
   //------------------------------------------------------------------
   const DString& s_FldProp_Telex_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_628_5( I_("                                                  ") );
      return( dstrDefValue_628_5 );
   }
   const DString& s_FldProp_Telex_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_628_5( I_("Telex ") );
      return( dstrFldLabel_628_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Telex(
       BFDataFieldProperties::Type::text // field is a text field
      ,Telex // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Telex_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Telex_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Email (629)
   //------------------------------------------------------------------
   const DString& s_FldProp_Email_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_629_4( I_("                                                  ") );
         return( dstrDefValue_629_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_629_7( I_("                                                  ") );
         return( dstrDefValue_629_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_629_8( I_("                                                  ") );
         return( dstrDefValue_629_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_629_5( I_("                                                  ") );
         return( dstrDefValue_629_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_629_1( I_("                                 ") );
         return( dstrDefValue_629_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_629_6( I_("                                                  ") );
         return( dstrDefValue_629_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_629_3( I_("                                                  ") );
         return( dstrDefValue_629_3 );
      }
      static const DString dstrDefValue_629_1( I_("                                 ") );
      return( dstrDefValue_629_1 );
   }
   const DString& s_FldProp_Email_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_629_4( I_("Email ") );
         return( dstrFldLabel_629_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_629_7( I_("Email ") );
         return( dstrFldLabel_629_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_629_8( I_("Email ") );
         return( dstrFldLabel_629_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_629_5( I_("Email ") );
         return( dstrFldLabel_629_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_629_1( I_("Email ") );
         return( dstrFldLabel_629_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_629_6( I_("Email ") );
         return( dstrFldLabel_629_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_629_3( I_("Email ") );
         return( dstrFldLabel_629_3 );
      }
      static const DString dstrFldLabel_629_1( I_("Email ") );
      return( dstrFldLabel_629_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Email(
       BFDataFieldProperties::Type::text // field is a text field
      ,Email // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Email_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Email_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DofDeath (630)
   //------------------------------------------------------------------
   const DString& s_FldProp_DofDeath_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_630_4( I_("         ") );
      return( dstrDefValue_630_4 );
   }
   const DString& s_FldProp_DofDeath_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_630_4( I_("DofDeath ") );
      return( dstrFldLabel_630_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DofDeath(
       BFDataFieldProperties::Type::date // field is a date field
      ,DofDeath // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DofDeath_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DofDeath_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DofDeathNotice (631)
   //------------------------------------------------------------------
   const DString& s_FldProp_DofDeathNotice_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_631_5( I_("         ") );
      return( dstrDefValue_631_5 );
   }
   const DString& s_FldProp_DofDeathNotice_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_631_5( I_("DofDeathNotice ") );
      return( dstrFldLabel_631_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DofDeathNotice(
       BFDataFieldProperties::Type::date // field is a date field
      ,DofDeathNotice // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DofDeathNotice_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DofDeathNotice_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IdType (633)
   //------------------------------------------------------------------
   const DString& s_FldProp_IdType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_633_4( I_("06") );
      return( dstrDefValue_633_4 );
   }
   const DString& s_FldProp_IdType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_633_4( I_("IdType   ") );
      return( dstrFldLabel_633_4 );
   }
   PBF_SSC subset_super_chooser_2_633( const ClientLocale& locale )
   {
      return chooser_ss_002_023; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IdType(
       BFDataFieldProperties::Type::text // field is a text field
      ,IdType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IdType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IdType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_633 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IdTypeDesc (634)
   //------------------------------------------------------------------
   const DString& s_FldProp_IdTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_634_4( I_("                                                  ") );
      return( dstrDefValue_634_4 );
   }
   const DString& s_FldProp_IdTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_634_4( I_("IdTypeDesc ") );
      return( dstrFldLabel_634_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IdTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,IdTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IdTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IdTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IdValue (635)
   //------------------------------------------------------------------
   const DString& s_FldProp_IdValue_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_635_4( I_("                                                  ") );
      return( dstrDefValue_635_4 );
   }
   const DString& s_FldProp_IdValue_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_635_4( I_("IdValue ") );
      return( dstrFldLabel_635_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IdValue(
       BFDataFieldProperties::Type::text // field is a text field
      ,IdValue // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IdValue_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IdValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IdDate (636)
   //------------------------------------------------------------------
   const DString& s_FldProp_IdDate_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_636_5( I_("         ") );
         return( dstrDefValue_636_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_636_8( I_("") );
         return( dstrDefValue_636_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_636_7( I_("") );
         return( dstrDefValue_636_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_636_6( I_("") );
         return( dstrDefValue_636_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_636_3( I_("") );
         return( dstrDefValue_636_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_636_1( I_("") );
         return( dstrDefValue_636_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_636_4( I_("         ") );
         return( dstrDefValue_636_4 );
      }
      static const DString dstrDefValue_636_1( I_("") );
      return( dstrDefValue_636_1 );
   }
   const DString& s_FldProp_IdDate_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_636_5( I_("IdDate ") );
         return( dstrFldLabel_636_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_636_8( I_("IdDate ") );
         return( dstrFldLabel_636_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_636_7( I_("IdDate ") );
         return( dstrFldLabel_636_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_636_6( I_("IdDate ") );
         return( dstrFldLabel_636_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_636_3( I_("IdDate ") );
         return( dstrFldLabel_636_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_636_1( I_("IdDate ") );
         return( dstrFldLabel_636_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_636_4( I_("IdDate ") );
         return( dstrFldLabel_636_4 );
      }
      static const DString dstrFldLabel_636_1( I_("IdDate ") );
      return( dstrFldLabel_636_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IdDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,IdDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IdDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IdDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxShrNumber (639)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxShrNumber_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_639_5( I_("                                                  ") );
      return( dstrDefValue_639_5 );
   }
   const DString& s_FldProp_rxShrNumber_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_639_5( I_("rxShrNumber ") );
      return( dstrFldLabel_639_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxShrNumber(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxShrNumber // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxShrNumber_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxShrNumber_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctUseCode (640)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctUseCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_640_4( I_("") );
      return( dstrDefValue_640_4 );
   }
   const DString& s_FldProp_AcctUseCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_640_4( I_("AcctUseCode") );
      return( dstrFldLabel_640_4 );
   }
   PBF_SSC subset_super_chooser_2_640( const ClientLocale& locale )
   {
      return chooser_ss_002_370; // defined in ifast_substitutions_chooser_12.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctUseCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctUseCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctUseCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctUseCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_640 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctUseDesc (641)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctUseDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_641_5( I_("                                                  ") );
      return( dstrDefValue_641_5 );
   }
   const DString& s_FldProp_AcctUseDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_641_5( I_("AcctUseDesc ") );
      return( dstrFldLabel_641_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctUseDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctUseDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctUseDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctUseDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayReason1 (642)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayReason1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_642_4( I_("                                                  ") );
      return( dstrDefValue_642_4 );
   }
   const DString& s_FldProp_PayReason1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_642_4( I_("PayReason1  ") );
      return( dstrFldLabel_642_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayReason1(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayReason1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayReason1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayReason1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayReason2 (643)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayReason2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_643_4( I_("                                                  ") );
      return( dstrDefValue_643_4 );
   }
   const DString& s_FldProp_PayReason2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_643_4( I_("PayReason2 ") );
      return( dstrFldLabel_643_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayReason2(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayReason2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayReason2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayReason2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccountTo (646)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccountTo_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_646_4( I_("0") );
      return( dstrDefValue_646_4 );
   }
   DIINT64 s_FldProp_AccountTo_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AccountTo_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_646_4( I_("AccountTo") );
      return( dstrFldLabel_646_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccountTo(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AccountTo // fieldId
      ,17 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_27 // mask chooser function
      ,s_FldProp_AccountTo_s_DVF // default value
      ,s_FldProp_AccountTo_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AccountTo_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctToName (647)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctToName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_647_4( I_("                                                  ") );
      return( dstrDefValue_647_4 );
   }
   const DString& s_FldProp_AcctToName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_647_4( I_("AcctToName ") );
      return( dstrFldLabel_647_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctToName(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctToName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctToName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctToName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundTo (648)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundTo_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_648_4( I_("                                                  ") );
      return( dstrDefValue_648_4 );
   }
   const DString& s_FldProp_FundTo_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_648_4( I_("FundTo ") );
      return( dstrFldLabel_648_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundTo(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundTo // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundTo_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundTo_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ClassTo (649)
   //------------------------------------------------------------------
   const DString& s_FldProp_ClassTo_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_649_5( I_("                                                  ") );
      return( dstrDefValue_649_5 );
   }
   const DString& s_FldProp_ClassTo_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_649_5( I_("ClassTo ") );
      return( dstrFldLabel_649_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ClassTo(
       BFDataFieldProperties::Type::text // field is a text field
      ,ClassTo // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ClassTo_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ClassTo_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmtTypeCode (650)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmtTypeCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_650_4( I_("                                                  ") );
      return( dstrDefValue_650_4 );
   }
   const DString& s_FldProp_AmtTypeCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_650_4( I_("AmtTypeCode ") );
      return( dstrFldLabel_650_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmtTypeCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,AmtTypeCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AmtTypeCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AmtTypeCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmtTypeDesc (651)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmtTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_651_5( I_("                                                  ") );
      return( dstrDefValue_651_5 );
   }
   const DString& s_FldProp_AmtTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_651_5( I_("AmtTypeDesc ") );
      return( dstrFldLabel_651_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmtTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,AmtTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AmtTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AmtTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BatchUser (652)
   //------------------------------------------------------------------
   const DString& s_FldProp_BatchUser_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_652_5( I_("                                                  ") );
      return( dstrDefValue_652_5 );
   }
   const DString& s_FldProp_BatchUser_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_652_5( I_("BatchUser ") );
      return( dstrFldLabel_652_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BatchUser(
       BFDataFieldProperties::Type::text // field is a text field
      ,BatchUser // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BatchUser_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BatchUser_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BatchName (653)
   //------------------------------------------------------------------
   const DString& s_FldProp_BatchName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_653_4( I_("                                                  ") );
      return( dstrDefValue_653_4 );
   }
   const DString& s_FldProp_BatchName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_653_4( I_("BatchName ") );
      return( dstrFldLabel_653_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BatchName(
       BFDataFieldProperties::Type::text // field is a text field
      ,BatchName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BatchName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BatchName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BatchTrace (654)
   //------------------------------------------------------------------
   const DString& s_FldProp_BatchTrace_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_654_5( I_("0000000000") );
      return( dstrDefValue_654_5 );
   }
   DIINT64 s_FldProp_BatchTrace_i_DVF( const ClientLocale& locale )
   {
      return( 0000000000 );
   }
   const DString& s_FldProp_BatchTrace_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_654_5( I_("BatchTrace ") );
      return( dstrFldLabel_654_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BatchTrace(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,BatchTrace // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_BatchTrace_s_DVF // default value
      ,s_FldProp_BatchTrace_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_BatchTrace_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsrepCode (656)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsrepCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_656_4( I_("                                                  ") );
      return( dstrDefValue_656_4 );
   }
   const DString& s_FldProp_SlsrepCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_656_4( I_("SlsrepCode ") );
      return( dstrFldLabel_656_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsrepCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,SlsrepCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsrepCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SlsrepCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleCurrName (657)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleCurrName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_657_5( I_("                                                  ") );
      return( dstrDefValue_657_5 );
   }
   const DString& s_FldProp_SettleCurrName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_657_5( I_("SettleCurrName ") );
      return( dstrFldLabel_657_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleCurrName(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettleCurrName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettleCurrName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettleCurrName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FlatPercent (658)
   //------------------------------------------------------------------
   const DString& s_FldProp_FlatPercent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_658_5( I_("N") );
      return( dstrDefValue_658_5 );
   }
   const DString& s_FldProp_FlatPercent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_658_5( I_("FlatPercent") );
      return( dstrFldLabel_658_5 );
   }
   PBF_SSC subset_super_chooser_2_658( const ClientLocale& locale )
   {
      return chooser_ss_002_111; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FlatPercent(
       BFDataFieldProperties::Type::text // field is a text field
      ,FlatPercent // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FlatPercent_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FlatPercent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_658 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BELFee (659)
   //------------------------------------------------------------------
   const DString& s_FldProp_BELFee_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_659_4( I_("N") );
      return( dstrDefValue_659_4 );
   }
   const DString& s_FldProp_BELFee_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_659_4( I_("BELFee") );
      return( dstrFldLabel_659_4 );
   }
   PBF_SSC subset_super_chooser_2_659( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BELFee(
       BFDataFieldProperties::Type::text // field is a text field
      ,BELFee // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BELFee_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BELFee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_659 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdminFee (660)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdminFee_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_660_4( I_("0.0000000000") );
         return( dstrDefValue_660_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_660_5( I_("0") );
         return( dstrDefValue_660_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_660_8( I_("0") );
         return( dstrDefValue_660_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_660_7( I_("0") );
         return( dstrDefValue_660_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_660_1( I_("0") );
         return( dstrDefValue_660_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_660_3( I_("0") );
         return( dstrDefValue_660_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_660_6( I_("0") );
         return( dstrDefValue_660_6 );
      }
      static const DString dstrDefValue_660_1( I_("0") );
      return( dstrDefValue_660_1 );
   }
   double s_FldProp_AdminFee_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_AdminFee_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_660_4( I_("AdminFee ") );
         return( dstrFldLabel_660_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_660_5( I_("AdminFee ") );
         return( dstrFldLabel_660_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_660_8( I_("AdminFee ") );
         return( dstrFldLabel_660_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_660_7( I_("AdminFee ") );
         return( dstrFldLabel_660_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_660_1( I_("AdminFee ") );
         return( dstrFldLabel_660_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_660_3( I_("AdminFee ") );
         return( dstrFldLabel_660_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_660_6( I_("AdminFee ") );
         return( dstrFldLabel_660_6 );
      }
      static const DString dstrFldLabel_660_1( I_("AdminFee ") );
      return( dstrFldLabel_660_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdminFee(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AdminFee // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_AdminFee_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AdminFee_d_DVF // default value
      ,s_FldProp_AdminFee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OverrideDSC (661)
   //------------------------------------------------------------------
   const DString& s_FldProp_OverrideDSC_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_661_4( I_("0") );
      return( dstrDefValue_661_4 );
   }
   double s_FldProp_OverrideDSC_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_OverrideDSC_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_661_4( I_("OverrideDSC  ") );
      return( dstrFldLabel_661_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OverrideDSC(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,OverrideDSC // fieldId
      ,2 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_19 // mask chooser function
      ,s_FldProp_OverrideDSC_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_OverrideDSC_d_DVF // default value
      ,s_FldProp_OverrideDSC_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OverrideTax (662)
   //------------------------------------------------------------------
   const DString& s_FldProp_OverrideTax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_662_5( I_("N") );
      return( dstrDefValue_662_5 );
   }
   const DString& s_FldProp_OverrideTax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_662_5( I_("OverrideTax ") );
      return( dstrFldLabel_662_5 );
   }
   PBF_SSC subset_super_chooser_2_662( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OverrideTax(
       BFDataFieldProperties::Type::text // field is a text field
      ,OverrideTax // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OverrideTax_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OverrideTax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_662 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FedTaxRate (663)
   //------------------------------------------------------------------
   const DString& s_FldProp_FedTaxRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_663_4( I_("0.0000000000") );
      return( dstrDefValue_663_4 );
   }
   double s_FldProp_FedTaxRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_FedTaxRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_663_4( I_("FedTaxRate ") );
      return( dstrFldLabel_663_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FedTaxRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FedTaxRate // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_FedTaxRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FedTaxRate_d_DVF // default value
      ,s_FldProp_FedTaxRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FedTaxPUD (664)
   //------------------------------------------------------------------
   const DString& s_FldProp_FedTaxPUD_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_664_5( I_(" ") );
      return( dstrDefValue_664_5 );
   }
   const DString& s_FldProp_FedTaxPUD_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_664_5( I_("FedTaxPUD ") );
      return( dstrFldLabel_664_5 );
   }
   PBF_SSC subset_super_chooser_2_664( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FedTaxPUD(
       BFDataFieldProperties::Type::text // field is a text field
      ,FedTaxPUD // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FedTaxPUD_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FedTaxPUD_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_664 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvTaxRate (665)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvTaxRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_665_8( I_("0.0000000000") );
      return( dstrDefValue_665_8 );
   }
   double s_FldProp_ProvTaxRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_ProvTaxRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_665_8( I_("ProvTaxRate ") );
      return( dstrFldLabel_665_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvTaxRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ProvTaxRate // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_ProvTaxRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ProvTaxRate_d_DVF // default value
      ,s_FldProp_ProvTaxRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvTaxPUD (666)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvTaxPUD_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_666_4( I_(" ") );
      return( dstrDefValue_666_4 );
   }
   const DString& s_FldProp_ProvTaxPUD_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_666_4( I_("ProvTaxPUD ") );
      return( dstrFldLabel_666_4 );
   }
   PBF_SSC subset_super_chooser_2_666( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvTaxPUD(
       BFDataFieldProperties::Type::text // field is a text field
      ,ProvTaxPUD // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ProvTaxPUD_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ProvTaxPUD_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_666 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvSalesName (667)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvSalesName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_667_5( I_("                                                  ") );
      return( dstrDefValue_667_5 );
   }
   const DString& s_FldProp_ProvSalesName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_667_5( I_("ProvSalesName ") );
      return( dstrFldLabel_667_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvSalesName(
       BFDataFieldProperties::Type::text // field is a text field
      ,ProvSalesName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ProvSalesName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ProvSalesName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Payment (668)
   //------------------------------------------------------------------
   const DString& s_FldProp_Payment_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_668_4( I_("                                                  ") );
      return( dstrDefValue_668_4 );
   }
   const DString& s_FldProp_Payment_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_668_4( I_("Payment ") );
      return( dstrFldLabel_668_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Payment(
       BFDataFieldProperties::Type::text // field is a text field
      ,Payment // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Payment_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Payment_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrLine (669)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrLine_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_669_4( I_("                                                  ") );
      return( dstrDefValue_669_4 );
   }
   const DString& s_FldProp_AddrLine_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_669_4( I_("AddrLine ") );
      return( dstrFldLabel_669_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrLine(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrLine // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrLine_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrLine_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExpGNSettle (670)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExpGNSettle_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_670_5( I_("G") );
      return( dstrDefValue_670_5 );
   }
   const DString& s_FldProp_ExpGNSettle_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_670_5( I_("ExpGNSettle") );
      return( dstrFldLabel_670_5 );
   }
   PBF_SSC subset_super_chooser_2_670( const ClientLocale& locale )
   {
      return chooser_ss_002_189; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExpGNSettle(
       BFDataFieldProperties::Type::text // field is a text field
      ,ExpGNSettle // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ExpGNSettle_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ExpGNSettle_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_670 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RoundFlagDesc (671)
   //------------------------------------------------------------------
   const DString& s_FldProp_RoundFlagDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_671_4( I_("                                                  ") );
      return( dstrDefValue_671_4 );
   }
   const DString& s_FldProp_RoundFlagDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_671_4( I_("RoundFlagDesc ") );
      return( dstrFldLabel_671_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RoundFlagDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,RoundFlagDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RoundFlagDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RoundFlagDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CreditFreq (672)
   //------------------------------------------------------------------
   const DString& s_FldProp_CreditFreq_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_672_4( I_("                                                  ") );
      return( dstrDefValue_672_4 );
   }
   const DString& s_FldProp_CreditFreq_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_672_4( I_("CreditFreq ") );
      return( dstrFldLabel_672_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CreditFreq(
       BFDataFieldProperties::Type::text // field is a text field
      ,CreditFreq // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CreditFreq_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CreditFreq_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CreditFreqDesc (673)
   //------------------------------------------------------------------
   const DString& s_FldProp_CreditFreqDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_673_4( I_("                                                  ") );
      return( dstrDefValue_673_4 );
   }
   const DString& s_FldProp_CreditFreqDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_673_4( I_("CreditFreqDesc ") );
      return( dstrFldLabel_673_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CreditFreqDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,CreditFreqDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CreditFreqDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CreditFreqDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExtraCommission (674)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExtraCommission_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_674_4( I_(" ") );
      return( dstrDefValue_674_4 );
   }
   const DString& s_FldProp_ExtraCommission_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_674_4( I_("ExtraCommission ") );
      return( dstrFldLabel_674_4 );
   }
   PBF_SSC subset_super_chooser_2_674( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExtraCommission(
       BFDataFieldProperties::Type::text // field is a text field
      ,ExtraCommission // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ExtraCommission_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ExtraCommission_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_674 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CertRequired (675)
   //------------------------------------------------------------------
   const DString& s_FldProp_CertRequired_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_675_5( I_(" ") );
      return( dstrDefValue_675_5 );
   }
   const DString& s_FldProp_CertRequired_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_675_5( I_("CertRequired ") );
      return( dstrFldLabel_675_5 );
   }
   PBF_SSC subset_super_chooser_2_675( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CertRequired(
       BFDataFieldProperties::Type::text // field is a text field
      ,CertRequired // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CertRequired_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CertRequired_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_675 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CertIssued (676)
   //------------------------------------------------------------------
   const DString& s_FldProp_CertIssued_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_676_4( I_("N") );
      return( dstrDefValue_676_4 );
   }
   const DString& s_FldProp_CertIssued_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_676_4( I_("CertIssued ") );
      return( dstrFldLabel_676_4 );
   }
   PBF_SSC subset_super_chooser_2_676( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CertIssued(
       BFDataFieldProperties::Type::text // field is a text field
      ,CertIssued // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CertIssued_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CertIssued_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_676 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExclMFCSSettle (677)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExclMFCSSettle_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_677_5( I_(" ") );
      return( dstrDefValue_677_5 );
   }
   const DString& s_FldProp_ExclMFCSSettle_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_677_5( I_("ExclMFCSSettle ") );
      return( dstrFldLabel_677_5 );
   }
   PBF_SSC subset_super_chooser_2_677( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExclMFCSSettle(
       BFDataFieldProperties::Type::text // field is a text field
      ,ExclMFCSSettle // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ExclMFCSSettle_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ExclMFCSSettle_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_677 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuaranteeDate (678)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuaranteeDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_678_5( I_("         ") );
      return( dstrDefValue_678_5 );
   }
   const DString& s_FldProp_GuaranteeDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_678_5( I_("GuaranteeDate ") );
      return( dstrFldLabel_678_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuaranteeDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,GuaranteeDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GuaranteeDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GuaranteeDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaturityDate (679)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaturityDate_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_679_4( I_("         ") );
         return( dstrDefValue_679_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_679_7( I_("         ") );
         return( dstrDefValue_679_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_679_5( I_("         ") );
         return( dstrDefValue_679_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_679_8( I_("         ") );
         return( dstrDefValue_679_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_679_3( I_("         ") );
         return( dstrDefValue_679_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_679_1( I_("") );
         return( dstrDefValue_679_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_679_6( I_("         ") );
         return( dstrDefValue_679_6 );
      }
      static const DString dstrDefValue_679_1( I_("") );
      return( dstrDefValue_679_1 );
   }
   const DString& s_FldProp_MaturityDate_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_679_4( I_("MaturityDate ") );
         return( dstrFldLabel_679_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_679_7( I_("MaturityDate ") );
         return( dstrFldLabel_679_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_679_5( I_("MaturityDate ") );
         return( dstrFldLabel_679_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_679_8( I_("MaturityDate ") );
         return( dstrFldLabel_679_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_679_3( I_("MaturityDate ") );
         return( dstrFldLabel_679_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_679_1( I_("MaturityDate ") );
         return( dstrFldLabel_679_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_679_6( I_("MaturityDate ") );
         return( dstrFldLabel_679_6 );
      }
      static const DString dstrFldLabel_679_1( I_("MaturityDate ") );
      return( dstrFldLabel_679_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaturityDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,MaturityDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaturityDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaturityDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InterestRate (680)
   //------------------------------------------------------------------
   const DString& s_FldProp_InterestRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_680_5( I_("0.0000000000") );
      return( dstrDefValue_680_5 );
   }
   double s_FldProp_InterestRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_InterestRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_680_5( I_("InterestRate ") );
      return( dstrFldLabel_680_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InterestRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,InterestRate // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_22 // mask chooser function
      ,s_FldProp_InterestRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_InterestRate_d_DVF // default value
      ,s_FldProp_InterestRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DepId (681)
   //------------------------------------------------------------------
   const DString& s_FldProp_DepId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_681_4( I_("                                                  ") );
      return( dstrDefValue_681_4 );
   }
   const DString& s_FldProp_DepId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_681_4( I_("DepId ") );
      return( dstrFldLabel_681_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DepId(
       BFDataFieldProperties::Type::text // field is a text field
      ,DepId // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DepId_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DepId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RejCode (682)
   //------------------------------------------------------------------
   const DString& s_FldProp_RejCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_682_4( I_("                                                  ") );
      return( dstrDefValue_682_4 );
   }
   const DString& s_FldProp_RejCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_682_4( I_("RejCode ") );
      return( dstrFldLabel_682_4 );
   }
   PBF_SSC subset_super_chooser_2_682( const ClientLocale& locale )
   {
      return chooser_ss_002_041; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RejCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,RejCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RejCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RejCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_682 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RejCodeDesc (683)
   //------------------------------------------------------------------
   const DString& s_FldProp_RejCodeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_683_5( I_("                                                  ") );
      return( dstrDefValue_683_5 );
   }
   const DString& s_FldProp_RejCodeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_683_5( I_("RejCodeDesc ") );
      return( dstrFldLabel_683_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RejCodeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,RejCodeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RejCodeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RejCodeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DateStamp (684)
   //------------------------------------------------------------------
   const DString& s_FldProp_DateStamp_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_684_5( I_("         ") );
      return( dstrDefValue_684_5 );
   }
   const DString& s_FldProp_DateStamp_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_684_5( I_("DateStamp ") );
      return( dstrFldLabel_684_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DateStamp(
       BFDataFieldProperties::Type::date // field is a date field
      ,DateStamp // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DateStamp_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DateStamp_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TimeStamp (685)
   //------------------------------------------------------------------
   const DString& s_FldProp_TimeStamp_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_685_4( I_("                                                  ") );
      return( dstrDefValue_685_4 );
   }
   const DString& s_FldProp_TimeStamp_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_685_4( I_("TimeStamp ") );
      return( dstrFldLabel_685_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TimeStamp(
       BFDataFieldProperties::Type::text // field is a text field
      ,TimeStamp // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TimeStamp_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TimeStamp_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ClassE (688)
   //------------------------------------------------------------------
   const DString& s_FldProp_ClassE_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_688_5( I_("                                                  ") );
      return( dstrDefValue_688_5 );
   }
   const DString& s_FldProp_ClassE_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_688_5( I_("ClassE ") );
      return( dstrFldLabel_688_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ClassE(
       BFDataFieldProperties::Type::text // field is a text field
      ,ClassE // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ClassE_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ClassE_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ClassF (689)
   //------------------------------------------------------------------
   const DString& s_FldProp_ClassF_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_689_4( I_("                                                  ") );
      return( dstrDefValue_689_4 );
   }
   const DString& s_FldProp_ClassF_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_689_4( I_("ClassF ") );
      return( dstrFldLabel_689_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ClassF(
       BFDataFieldProperties::Type::text // field is a text field
      ,ClassF // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ClassF_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ClassF_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdditionalDays (690)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdditionalDays_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_690_5( I_("0000000000") );
      return( dstrDefValue_690_5 );
   }
   DIINT64 s_FldProp_AdditionalDays_i_DVF( const ClientLocale& locale )
   {
      return( 0000000000 );
   }
   const DString& s_FldProp_AdditionalDays_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_690_5( I_("AdditionalDays ") );
      return( dstrFldLabel_690_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdditionalDays(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AdditionalDays // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_AdditionalDays_s_DVF // default value
      ,s_FldProp_AdditionalDays_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AdditionalDays_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinInitPurAmt (691)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinInitPurAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_691_8( I_("0.0000000000") );
      return( dstrDefValue_691_8 );
   }
   double s_FldProp_MinInitPurAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_MinInitPurAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_691_8( I_("MinInitPurAmt ") );
      return( dstrFldLabel_691_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinInitPurAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinInitPurAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinInitPurAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinInitPurAmt_d_DVF // default value
      ,s_FldProp_MinInitPurAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinSubPurAmt (692)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinSubPurAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_692_4( I_("0.0000000000") );
      return( dstrDefValue_692_4 );
   }
   double s_FldProp_MinSubPurAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_MinSubPurAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_692_4( I_("MinSubPurAmt ") );
      return( dstrFldLabel_692_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinSubPurAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinSubPurAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinSubPurAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinSubPurAmt_d_DVF // default value
      ,s_FldProp_MinSubPurAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinInitRedAmt (693)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinInitRedAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_693_5( I_("0.0000000000") );
      return( dstrDefValue_693_5 );
   }
   double s_FldProp_MinInitRedAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_MinInitRedAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_693_5( I_("MinInitRedAmt ") );
      return( dstrFldLabel_693_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinInitRedAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinInitRedAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinInitRedAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinInitRedAmt_d_DVF // default value
      ,s_FldProp_MinInitRedAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinSubRedAmt (694)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinSubRedAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_694_4( I_("0.0000000000") );
      return( dstrDefValue_694_4 );
   }
   double s_FldProp_MinSubRedAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_MinSubRedAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_694_4( I_("MinSubRedAmt ") );
      return( dstrFldLabel_694_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinSubRedAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinSubRedAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinSubRedAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinSubRedAmt_d_DVF // default value
      ,s_FldProp_MinSubRedAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinPAC (695)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinPAC_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_695_4( I_("0.0000000000") );
      return( dstrDefValue_695_4 );
   }
   double s_FldProp_MinPAC_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_MinPAC_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_695_4( I_("MinPAC ") );
      return( dstrFldLabel_695_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinPAC(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinPAC // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinPAC_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinPAC_d_DVF // default value
      ,s_FldProp_MinPAC_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinSWP (696)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinSWP_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_696_5( I_("0.0000000000") );
      return( dstrDefValue_696_5 );
   }
   double s_FldProp_MinSWP_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_MinSWP_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_696_5( I_("MinSWP ") );
      return( dstrFldLabel_696_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinSWP(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinSWP // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinSWP_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinSWP_d_DVF // default value
      ,s_FldProp_MinSWP_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinFndClsBal (697)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinFndClsBal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_697_4( I_("0.0000000000") );
      return( dstrDefValue_697_4 );
   }
   double s_FldProp_MinFndClsBal_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_MinFndClsBal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_697_4( I_("MinFndClsBal ") );
      return( dstrFldLabel_697_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinFndClsBal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinFndClsBal // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinFndClsBal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinFndClsBal_d_DVF // default value
      ,s_FldProp_MinFndClsBal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinAcctBal (698)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinAcctBal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_698_4( I_("0.0000000000") );
      return( dstrDefValue_698_4 );
   }
   double s_FldProp_MinAcctBal_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_MinAcctBal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_698_4( I_("MinAcctBal ") );
      return( dstrFldLabel_698_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinAcctBal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinAcctBal // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinAcctBal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinAcctBal_d_DVF // default value
      ,s_FldProp_MinAcctBal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopPurchase (699)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopPurchase_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_699_4( I_("N") );
      return( dstrDefValue_699_4 );
   }
   const DString& s_FldProp_StopPurchase_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_699_4( I_("StopPurchase") );
      return( dstrFldLabel_699_4 );
   }
   PBF_SSC subset_super_chooser_2_699( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopPurchase(
       BFDataFieldProperties::Type::text // field is a text field
      ,StopPurchase // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopPurchase_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopPurchase_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_699 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopRedemption (700)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopRedemption_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_700_4( I_("N") );
      return( dstrDefValue_700_4 );
   }
   const DString& s_FldProp_StopRedemption_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_700_4( I_("StopRedemption  ") );
      return( dstrFldLabel_700_4 );
   }
   PBF_SSC subset_super_chooser_2_700( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopRedemption(
       BFDataFieldProperties::Type::text // field is a text field
      ,StopRedemption // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopRedemption_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopRedemption_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_700 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopTrxferIn (701)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopTrxferIn_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_701_5( I_("N") );
      return( dstrDefValue_701_5 );
   }
   const DString& s_FldProp_StopTrxferIn_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_701_5( I_("StopTrxferIn") );
      return( dstrFldLabel_701_5 );
   }
   PBF_SSC subset_super_chooser_2_701( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopTrxferIn(
       BFDataFieldProperties::Type::text // field is a text field
      ,StopTrxferIn // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopTrxferIn_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopTrxferIn_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_701 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopTrxferOut (702)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopTrxferOut_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_702_4( I_("N") );
      return( dstrDefValue_702_4 );
   }
   const DString& s_FldProp_StopTrxferOut_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_702_4( I_("StopTrxferOut") );
      return( dstrFldLabel_702_4 );
   }
   PBF_SSC subset_super_chooser_2_702( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopTrxferOut(
       BFDataFieldProperties::Type::text // field is a text field
      ,StopTrxferOut // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopTrxferOut_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopTrxferOut_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_702 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OverrideDSCAllow (703)
   //------------------------------------------------------------------
   const DString& s_FldProp_OverrideDSCAllow_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_703_5( I_(" ") );
      return( dstrDefValue_703_5 );
   }
   const DString& s_FldProp_OverrideDSCAllow_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_703_5( I_("OverrideDSCAllow ") );
      return( dstrFldLabel_703_5 );
   }
   PBF_SSC subset_super_chooser_2_703( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OverrideDSCAllow(
       BFDataFieldProperties::Type::text // field is a text field
      ,OverrideDSCAllow // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OverrideDSCAllow_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OverrideDSCAllow_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_703 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FixedPrice (704)
   //------------------------------------------------------------------
   const DString& s_FldProp_FixedPrice_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_704_5( I_(" ") );
      return( dstrDefValue_704_5 );
   }
   const DString& s_FldProp_FixedPrice_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_704_5( I_("FixedPrice ") );
      return( dstrFldLabel_704_5 );
   }
   PBF_SSC subset_super_chooser_2_704( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FixedPrice(
       BFDataFieldProperties::Type::text // field is a text field
      ,FixedPrice // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FixedPrice_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FixedPrice_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_704 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FixedRate (705)
   //------------------------------------------------------------------
   const DString& s_FldProp_FixedRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_705_4( I_("0.0000000000") );
      return( dstrDefValue_705_4 );
   }
   double s_FldProp_FixedRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_FixedRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_705_4( I_("FixedRate ") );
      return( dstrFldLabel_705_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FixedRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FixedRate // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_FixedRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FixedRate_d_DVF // default value
      ,s_FldProp_FixedRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastValDate (706)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastValDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_706_5( I_("         ") );
      return( dstrDefValue_706_5 );
   }
   const DString& s_FldProp_LastValDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_706_5( I_("LastValDate ") );
      return( dstrFldLabel_706_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastValDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,LastValDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LastValDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LastValDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastDivDate (707)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastDivDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_707_4( I_("         ") );
      return( dstrDefValue_707_4 );
   }
   const DString& s_FldProp_LastDivDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_707_4( I_("LastDivDate ") );
      return( dstrFldLabel_707_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastDivDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,LastDivDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LastDivDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LastDivDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ERepLastName (710)
   //------------------------------------------------------------------
   const DString& s_FldProp_ERepLastName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_710_5( I_("                                                  ") );
      return( dstrDefValue_710_5 );
   }
   const DString& s_FldProp_ERepLastName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_710_5( I_("ERepLastName ") );
      return( dstrFldLabel_710_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ERepLastName(
       BFDataFieldProperties::Type::text // field is a text field
      ,ERepLastName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ERepLastName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ERepLastName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ERepFirstName (711)
   //------------------------------------------------------------------
   const DString& s_FldProp_ERepFirstName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_711_4( I_("                                                  ") );
      return( dstrDefValue_711_4 );
   }
   const DString& s_FldProp_ERepFirstName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_711_4( I_("ERepFirstName ") );
      return( dstrFldLabel_711_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ERepFirstName(
       BFDataFieldProperties::Type::text // field is a text field
      ,ERepFirstName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ERepFirstName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ERepFirstName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DefaultAddrCode (712)
   //------------------------------------------------------------------
   const DString& s_FldProp_DefaultAddrCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_712_4( I_("                                                  ") );
      return( dstrDefValue_712_4 );
   }
   const DString& s_FldProp_DefaultAddrCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_712_4( I_("DefaultAddrCode ") );
      return( dstrFldLabel_712_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DefaultAddrCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,DefaultAddrCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DefaultAddrCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DefaultAddrCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AuthorizedToTrade (713)
   //------------------------------------------------------------------
   const DString& s_FldProp_AuthorizedToTrade_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_713_4( I_("N") );
      return( dstrDefValue_713_4 );
   }
   const DString& s_FldProp_AuthorizedToTrade_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_713_4( I_("AuthorizedToTrade   ") );
      return( dstrFldLabel_713_4 );
   }
   PBF_SSC subset_super_chooser_2_713( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AuthorizedToTrade(
       BFDataFieldProperties::Type::text // field is a text field
      ,AuthorizedToTrade // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AuthorizedToTrade_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AuthorizedToTrade_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_713 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AutoTrfId (718)
   //------------------------------------------------------------------
   const DString& s_FldProp_AutoTrfId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_718_4( I_("000000000000") );
      return( dstrDefValue_718_4 );
   }
   DIINT64 s_FldProp_AutoTrfId_i_DVF( const ClientLocale& locale )
   {
      return( 000000000000 );
   }
   const DString& s_FldProp_AutoTrfId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_718_4( I_("AutoTrfId ") );
      return( dstrFldLabel_718_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AutoTrfId(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AutoTrfId // fieldId
      ,12 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AutoTrfId_s_DVF // default value
      ,s_FldProp_AutoTrfId_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AutoTrfId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FromFund (719)
   //------------------------------------------------------------------
   const DString& s_FldProp_FromFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_719_5( I_("                                                  ") );
      return( dstrDefValue_719_5 );
   }
   const DString& s_FldProp_FromFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_719_5( I_("FromFund ") );
      return( dstrFldLabel_719_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FromFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,FromFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FromFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FromFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FromClass (720)
   //------------------------------------------------------------------
   const DString& s_FldProp_FromClass_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_720_4( I_("                                                  ") );
      return( dstrDefValue_720_4 );
   }
   const DString& s_FldProp_FromClass_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_720_4( I_("FromClass ") );
      return( dstrFldLabel_720_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FromClass(
       BFDataFieldProperties::Type::text // field is a text field
      ,FromClass // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FromClass_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FromClass_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ToFund (721)
   //------------------------------------------------------------------
   const DString& s_FldProp_ToFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_721_4( I_("                                                  ") );
      return( dstrDefValue_721_4 );
   }
   const DString& s_FldProp_ToFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_721_4( I_("ToFund ") );
      return( dstrFldLabel_721_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ToFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,ToFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ToFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ToFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ToClass (722)
   //------------------------------------------------------------------
   const DString& s_FldProp_ToClass_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_722_5( I_("                                                  ") );
      return( dstrDefValue_722_5 );
   }
   const DString& s_FldProp_ToClass_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_722_5( I_("ToClass ") );
      return( dstrFldLabel_722_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ToClass(
       BFDataFieldProperties::Type::text // field is a text field
      ,ToClass // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ToClass_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ToClass_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ToAccount (723)
   //------------------------------------------------------------------
   const DString& s_FldProp_ToAccount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_723_4( I_("00000000000000000") );
      return( dstrDefValue_723_4 );
   }
   DIINT64 s_FldProp_ToAccount_i_DVF( const ClientLocale& locale )
   {
      return( 00000000000000000 );
   }
   const DString& s_FldProp_ToAccount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_723_4( I_("ToAccount ") );
      return( dstrFldLabel_723_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ToAccount(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,ToAccount // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_27 // mask chooser function
      ,s_FldProp_ToAccount_s_DVF // default value
      ,s_FldProp_ToAccount_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_ToAccount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ToAcctLName (724)
   //------------------------------------------------------------------
   const DString& s_FldProp_ToAcctLName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_724_4( I_("                                                  ") );
      return( dstrDefValue_724_4 );
   }
   const DString& s_FldProp_ToAcctLName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_724_4( I_("ToAcctLName ") );
      return( dstrFldLabel_724_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ToAcctLName(
       BFDataFieldProperties::Type::text // field is a text field
      ,ToAcctLName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ToAcctLName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ToAcctLName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ToAcctFName (725)
   //------------------------------------------------------------------
   const DString& s_FldProp_ToAcctFName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_725_4( I_("                                                  ") );
      return( dstrDefValue_725_4 );
   }
   const DString& s_FldProp_ToAcctFName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_725_4( I_("ToAcctFName ") );
      return( dstrFldLabel_725_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ToAcctFName(
       BFDataFieldProperties::Type::text // field is a text field
      ,ToAcctFName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ToAcctFName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ToAcctFName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmtType (726)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmtType_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_726_4( I_("Amount") );
         return( dstrDefValue_726_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_726_7( I_("D") );
         return( dstrDefValue_726_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_726_5( I_("D") );
         return( dstrDefValue_726_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_726_8( I_("D") );
         return( dstrDefValue_726_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_726_3( I_("D") );
         return( dstrDefValue_726_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_726_1( I_("D") );
         return( dstrDefValue_726_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_726_6( I_("Amount") );
         return( dstrDefValue_726_6 );
      }
      static const DString dstrDefValue_726_1( I_("D") );
      return( dstrDefValue_726_1 );
   }
   const DString& s_FldProp_AmtType_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_726_4( I_("AmtType") );
         return( dstrFldLabel_726_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_726_7( I_("AmtType") );
         return( dstrFldLabel_726_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_726_5( I_("AmtType") );
         return( dstrFldLabel_726_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_726_8( I_("AmtType") );
         return( dstrFldLabel_726_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_726_3( I_("AmtType") );
         return( dstrFldLabel_726_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_726_1( I_("AmtType") );
         return( dstrFldLabel_726_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_726_6( I_("AmtType") );
         return( dstrFldLabel_726_6 );
      }
      static const DString dstrFldLabel_726_1( I_("AmtType") );
      return( dstrFldLabel_726_1 );
   }
   PBF_SSC subset_super_chooser_2_726( const ClientLocale& locale )
   {
      return chooser_ss_002_154; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmtType(
       BFDataFieldProperties::Type::text // field is a text field
      ,AmtType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AmtType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AmtType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_726 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FELFee (727)
   //------------------------------------------------------------------
   const DString& s_FldProp_FELFee_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_727_5( I_("0.0000000000") );
      return( dstrDefValue_727_5 );
   }
   double s_FldProp_FELFee_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_FELFee_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_727_5( I_("FELFee ") );
      return( dstrFldLabel_727_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FELFee(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FELFee // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_FELFee_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FELFee_d_DVF // default value
      ,s_FldProp_FELFee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeType (728)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_728_4( I_("                                                  ") );
      return( dstrDefValue_728_4 );
   }
   const DString& s_FldProp_FeeType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_728_4( I_("FeeType ") );
      return( dstrFldLabel_728_4 );
   }
   PBF_SSC subset_super_chooser_2_728( const ClientLocale& locale )
   {
      return chooser_ss_002_318; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeType(
       BFDataFieldProperties::Type::text // field is a text field
      ,FeeType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FeeType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_728 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ApplyBELFee (729)
   //------------------------------------------------------------------
   const DString& s_FldProp_ApplyBELFee_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_729_5( I_(" ") );
      return( dstrDefValue_729_5 );
   }
   const DString& s_FldProp_ApplyBELFee_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_729_5( I_("ApplyBELFee ") );
      return( dstrFldLabel_729_5 );
   }
   PBF_SSC subset_super_chooser_2_729( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ApplyBELFee(
       BFDataFieldProperties::Type::text // field is a text field
      ,ApplyBELFee // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ApplyBELFee_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ApplyBELFee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_729 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Frequency (730)
   //------------------------------------------------------------------
   const DString& s_FldProp_Frequency_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_730_5( I_("8") );
         return( dstrDefValue_730_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_730_8( I_("8") );
         return( dstrDefValue_730_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_730_7( I_("8") );
         return( dstrDefValue_730_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_730_6( I_("8") );
         return( dstrDefValue_730_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_730_3( I_("8") );
         return( dstrDefValue_730_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_730_1( I_("8") );
         return( dstrDefValue_730_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_730_4( I_("                                                  ") );
         return( dstrDefValue_730_4 );
      }
      static const DString dstrDefValue_730_1( I_("8") );
      return( dstrDefValue_730_1 );
   }
   const DString& s_FldProp_Frequency_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_730_5( I_("Frequency  ") );
         return( dstrFldLabel_730_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_730_8( I_("Frequency  ") );
         return( dstrFldLabel_730_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_730_7( I_("Frequency  ") );
         return( dstrFldLabel_730_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_730_6( I_("Frequency  ") );
         return( dstrFldLabel_730_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_730_3( I_("Frequency  ") );
         return( dstrFldLabel_730_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_730_1( I_("Frequency  ") );
         return( dstrFldLabel_730_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_730_4( I_("Frequency  ") );
         return( dstrFldLabel_730_4 );
      }
      static const DString dstrFldLabel_730_1( I_("Frequency  ") );
      return( dstrFldLabel_730_1 );
   }
   PBF_SSC subset_super_chooser_2_730( const ClientLocale& locale )
   {
      return chooser_ss_002_127; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Frequency(
       BFDataFieldProperties::Type::text // field is a text field
      ,Frequency // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Frequency_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Frequency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_730 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FreqCodeDesc (731)
   //------------------------------------------------------------------
   const DString& s_FldProp_FreqCodeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_731_4( I_("                                                  ") );
      return( dstrDefValue_731_4 );
   }
   const DString& s_FldProp_FreqCodeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_731_4( I_("FreqCodeDesc ") );
      return( dstrFldLabel_731_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FreqCodeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,FreqCodeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FreqCodeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FreqCodeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxFund (738)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_738_4( I_("                                                  ") );
      return( dstrDefValue_738_4 );
   }
   const DString& s_FldProp_rxFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_738_4( I_("rxFund ") );
      return( dstrFldLabel_738_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxClass (739)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxClass_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_739_4( I_("                                                  ") );
      return( dstrDefValue_739_4 );
   }
   const DString& s_FldProp_rxClass_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_739_4( I_("rxClass ") );
      return( dstrFldLabel_739_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxClass(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxClass // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxClass_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxClass_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EligUnits (740)
   //------------------------------------------------------------------
   const DString& s_FldProp_EligUnits_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_740_5( I_("0") );
         return( dstrDefValue_740_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_740_8( I_("0") );
         return( dstrDefValue_740_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_740_7( I_("0") );
         return( dstrDefValue_740_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_740_6( I_("0") );
         return( dstrDefValue_740_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_740_3( I_("0") );
         return( dstrDefValue_740_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_740_1( I_("0") );
         return( dstrDefValue_740_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_740_4( I_("0.0000000000") );
         return( dstrDefValue_740_4 );
      }
      static const DString dstrDefValue_740_1( I_("0") );
      return( dstrDefValue_740_1 );
   }
   double s_FldProp_EligUnits_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      return( 0 );
   }
   const DString& s_FldProp_EligUnits_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_740_5( I_("EligUnits ") );
         return( dstrFldLabel_740_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_740_8( I_("EligUnits ") );
         return( dstrFldLabel_740_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_740_7( I_("EligUnits ") );
         return( dstrFldLabel_740_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_740_6( I_("EligUnits ") );
         return( dstrFldLabel_740_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_740_3( I_("EligUnits ") );
         return( dstrFldLabel_740_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_740_1( I_("EligUnits ") );
         return( dstrFldLabel_740_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_740_4( I_("EligUnits ") );
         return( dstrFldLabel_740_4 );
      }
      static const DString dstrFldLabel_740_1( I_("EligUnits ") );
      return( dstrFldLabel_740_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EligUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EligUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_EligUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EligUnits_d_DVF // default value
      ,s_FldProp_EligUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IntRate (741)
   //------------------------------------------------------------------
   const DString& s_FldProp_IntRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_741_4( I_("0000000000000.0000000000") );
      return( dstrDefValue_741_4 );
   }
   double s_FldProp_IntRate_d_DVF( const ClientLocale& locale )
   {
      return( 0000000000000.0000000000 );
   }
   const DString& s_FldProp_IntRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_741_4( I_("IntRate ") );
      return( dstrFldLabel_741_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IntRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,IntRate // fieldId
      ,28 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_IntRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_IntRate_d_DVF // default value
      ,s_FldProp_IntRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IntValue (742)
   //------------------------------------------------------------------
   const DString& s_FldProp_IntValue_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_742_5( I_("0.0000000000") );
      return( dstrDefValue_742_5 );
   }
   const DString& s_FldProp_IntValue_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_742_5( I_("IntValue ") );
      return( dstrFldLabel_742_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IntValue(
       BFDataFieldProperties::Type::bigdecimal // field is a "big decimal" field
      ,IntValue // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_IntValue_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IntValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IntPaid (743)
   //------------------------------------------------------------------
   const DString& s_FldProp_IntPaid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_743_8( I_("0.0000000000") );
      return( dstrDefValue_743_8 );
   }
   double s_FldProp_IntPaid_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_IntPaid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_743_8( I_("IntPaid ") );
      return( dstrFldLabel_743_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IntPaid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,IntPaid // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_IntPaid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_IntPaid_d_DVF // default value
      ,s_FldProp_IntPaid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccumTotal (744)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccumTotal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_744_4( I_("0.0000000000") );
      return( dstrDefValue_744_4 );
   }
   const DString& s_FldProp_AccumTotal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_744_4( I_("AccumTotal ") );
      return( dstrFldLabel_744_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccumTotal(
       BFDataFieldProperties::Type::bigdecimal // field is a "big decimal" field
      ,AccumTotal // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_AccumTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccumTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ElongName1 (747)
   //------------------------------------------------------------------
   const DString& s_FldProp_ElongName1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_747_4( I_("                                                  ") );
      return( dstrDefValue_747_4 );
   }
   const DString& s_FldProp_ElongName1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_747_4( I_("ElongName1 ") );
      return( dstrFldLabel_747_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ElongName1(
       BFDataFieldProperties::Type::text // field is a text field
      ,ElongName1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ElongName1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ElongName1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ElongName2 (748)
   //------------------------------------------------------------------
   const DString& s_FldProp_ElongName2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_748_5( I_("                                                  ") );
      return( dstrDefValue_748_5 );
   }
   const DString& s_FldProp_ElongName2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_748_5( I_("ElongName2 ") );
      return( dstrFldLabel_748_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ElongName2(
       BFDataFieldProperties::Type::text // field is a text field
      ,ElongName2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ElongName2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ElongName2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EShortName (749)
   //------------------------------------------------------------------
   const DString& s_FldProp_EShortName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_749_4( I_("                                                  ") );
      return( dstrDefValue_749_4 );
   }
   const DString& s_FldProp_EShortName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_749_4( I_("EShortName ") );
      return( dstrFldLabel_749_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EShortName(
       BFDataFieldProperties::Type::text // field is a text field
      ,EShortName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EShortName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EShortName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FLongName (750)
   //------------------------------------------------------------------
   const DString& s_FldProp_FLongName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_750_4( I_("                                                  ") );
      return( dstrDefValue_750_4 );
   }
   const DString& s_FldProp_FLongName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_750_4( I_("FLongName ") );
      return( dstrFldLabel_750_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FLongName(
       BFDataFieldProperties::Type::text // field is a text field
      ,FLongName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FLongName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FLongName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FLongName2 (751)
   //------------------------------------------------------------------
   const DString& s_FldProp_FLongName2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_751_4( I_("                                                  ") );
      return( dstrDefValue_751_4 );
   }
   const DString& s_FldProp_FLongName2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_751_4( I_("FLongName2 ") );
      return( dstrFldLabel_751_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FLongName2(
       BFDataFieldProperties::Type::text // field is a text field
      ,FLongName2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FLongName2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FLongName2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FShortName (752)
   //------------------------------------------------------------------
   const DString& s_FldProp_FShortName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_752_4( I_("                                                  ") );
      return( dstrDefValue_752_4 );
   }
   const DString& s_FldProp_FShortName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_752_4( I_("FShortName ") );
      return( dstrFldLabel_752_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FShortName(
       BFDataFieldProperties::Type::text // field is a text field
      ,FShortName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FShortName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FShortName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundType (753)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_753_5( I_("                                                  ") );
      return( dstrDefValue_753_5 );
   }
   const DString& s_FldProp_FundType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_753_5( I_("FundType ") );
      return( dstrFldLabel_753_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundType(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundTypeDesc (754)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_754_4( I_("                                                  ") );
      return( dstrDefValue_754_4 );
   }
   const DString& s_FldProp_FundTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_754_4( I_("FundTypeDesc ") );
      return( dstrFldLabel_754_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CusipNum (755)
   //------------------------------------------------------------------
   const DString& s_FldProp_CusipNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_755_5( I_("                                                  ") );
      return( dstrDefValue_755_5 );
   }
   const DString& s_FldProp_CusipNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_755_5( I_("CusipNum ") );
      return( dstrFldLabel_755_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CusipNum(
       BFDataFieldProperties::Type::text // field is a text field
      ,CusipNum // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CusipNum_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CusipNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PriceAtClass (756)
   //------------------------------------------------------------------
   const DString& s_FldProp_PriceAtClass_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_756_5( I_(" ") );
      return( dstrDefValue_756_5 );
   }
   const DString& s_FldProp_PriceAtClass_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_756_5( I_("PriceAtClass ") );
      return( dstrFldLabel_756_5 );
   }
   PBF_SSC subset_super_chooser_2_756( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PriceAtClass(
       BFDataFieldProperties::Type::text // field is a text field
      ,PriceAtClass // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PriceAtClass_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PriceAtClass_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_756 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FunctionId (759)
   //------------------------------------------------------------------
   const DString& s_FldProp_FunctionId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_759_4( I_("0000000000") );
      return( dstrDefValue_759_4 );
   }
   DIINT64 s_FldProp_FunctionId_i_DVF( const ClientLocale& locale )
   {
      return( 0000000000 );
   }
   const DString& s_FldProp_FunctionId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_759_4( I_("FunctionId  ") );
      return( dstrFldLabel_759_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FunctionId(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,FunctionId // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_FunctionId_s_DVF // default value
      ,s_FldProp_FunctionId_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_FunctionId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_F_active (760)
   //------------------------------------------------------------------
   const DString& s_FldProp_F_active_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_760_4( I_(" ") );
      return( dstrDefValue_760_4 );
   }
   const DString& s_FldProp_F_active_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_760_4( I_("F_active ") );
      return( dstrFldLabel_760_4 );
   }
   PBF_SSC subset_super_chooser_2_760( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_F_active(
       BFDataFieldProperties::Type::text // field is a text field
      ,F_active // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_F_active_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_F_active_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_760 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InqPerm (761)
   //------------------------------------------------------------------
   const DString& s_FldProp_InqPerm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_761_5( I_("N") );
      return( dstrDefValue_761_5 );
   }
   const DString& s_FldProp_InqPerm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_761_5( I_("InqPerm") );
      return( dstrFldLabel_761_5 );
   }
   PBF_SSC subset_super_chooser_2_761( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InqPerm(
       BFDataFieldProperties::Type::text // field is a text field
      ,InqPerm // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InqPerm_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InqPerm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_761 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddPerm (762)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddPerm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_762_5( I_("N") );
      return( dstrDefValue_762_5 );
   }
   const DString& s_FldProp_AddPerm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_762_5( I_("AddPerm  ") );
      return( dstrFldLabel_762_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddPerm(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddPerm // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddPerm_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddPerm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ModPerm (763)
   //------------------------------------------------------------------
   const DString& s_FldProp_ModPerm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_763_4( I_("N") );
      return( dstrDefValue_763_4 );
   }
   const DString& s_FldProp_ModPerm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_763_4( I_("ModPerm ") );
      return( dstrFldLabel_763_4 );
   }
   PBF_SSC subset_super_chooser_2_763( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ModPerm(
       BFDataFieldProperties::Type::text // field is a text field
      ,ModPerm // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ModPerm_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ModPerm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_763 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DelPerm (764)
   //------------------------------------------------------------------
   const DString& s_FldProp_DelPerm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_764_4( I_(" ") );
      return( dstrDefValue_764_4 );
   }
   const DString& s_FldProp_DelPerm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_764_4( I_("DelPerm ") );
      return( dstrFldLabel_764_4 );
   }
   PBF_SSC subset_super_chooser_2_764( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DelPerm(
       BFDataFieldProperties::Type::text // field is a text field
      ,DelPerm // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DelPerm_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DelPerm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_764 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TerminateDate (766)
   //------------------------------------------------------------------
   const DString& s_FldProp_TerminateDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_766_5( I_("         ") );
      return( dstrDefValue_766_5 );
   }
   const DString& s_FldProp_TerminateDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_766_5( I_("TerminateDate ") );
      return( dstrFldLabel_766_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TerminateDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,TerminateDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TerminateDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TerminateDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ToDateContr (767)
   //------------------------------------------------------------------
   const DString& s_FldProp_ToDateContr_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_767_4( I_("0.0000000000") );
         return( dstrDefValue_767_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_767_7( I_("0") );
         return( dstrDefValue_767_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_767_5( I_("0") );
         return( dstrDefValue_767_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_767_8( I_("0") );
         return( dstrDefValue_767_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_767_3( I_("0") );
         return( dstrDefValue_767_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_767_1( I_("0") );
         return( dstrDefValue_767_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_767_6( I_("0") );
         return( dstrDefValue_767_6 );
      }
      static const DString dstrDefValue_767_1( I_("0") );
      return( dstrDefValue_767_1 );
   }
   double s_FldProp_ToDateContr_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_ToDateContr_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_767_4( I_("ToDateContr ") );
         return( dstrFldLabel_767_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_767_7( I_("ToDateContr ") );
         return( dstrFldLabel_767_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_767_5( I_("ToDateContr ") );
         return( dstrFldLabel_767_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_767_8( I_("ToDateContr ") );
         return( dstrFldLabel_767_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_767_3( I_("ToDateContr ") );
         return( dstrFldLabel_767_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_767_1( I_("ToDateContr ") );
         return( dstrFldLabel_767_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_767_6( I_("ToDateContr ") );
         return( dstrFldLabel_767_6 );
      }
      static const DString dstrFldLabel_767_1( I_("ToDateContr ") );
      return( dstrFldLabel_767_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ToDateContr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ToDateContr // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ToDateContr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ToDateContr_d_DVF // default value
      ,s_FldProp_ToDateContr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PlanNum (768)
   //------------------------------------------------------------------
   const DString& s_FldProp_PlanNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_768_5( I_("                                                  ") );
      return( dstrDefValue_768_5 );
   }
   const DString& s_FldProp_PlanNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_768_5( I_("PlanNum  ") );
      return( dstrFldLabel_768_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PlanNum(
       BFDataFieldProperties::Type::text // field is a text field
      ,PlanNum // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PlanNum_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PlanNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GrantRepayable (769)
   //------------------------------------------------------------------
   const DString& s_FldProp_GrantRepayable_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_769_8( I_("0000000000000.0000000000") );
      return( dstrDefValue_769_8 );
   }
   double s_FldProp_GrantRepayable_d_DVF( const ClientLocale& locale )
   {
      return( 0000000000000.0000000000 );
   }
   const DString& s_FldProp_GrantRepayable_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_769_8( I_("GrantRepayable") );
      return( dstrFldLabel_769_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GrantRepayable(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GrantRepayable // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GrantRepayable_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GrantRepayable_d_DVF // default value
      ,s_FldProp_GrantRepayable_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CESGEligible (770)
   //------------------------------------------------------------------
   const DString& s_FldProp_CESGEligible_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_770_4( I_(" ") );
      return( dstrDefValue_770_4 );
   }
   const DString& s_FldProp_CESGEligible_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_770_4( I_("CESGEligible ") );
      return( dstrFldLabel_770_4 );
   }
   PBF_SSC subset_super_chooser_2_770( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CESGEligible(
       BFDataFieldProperties::Type::text // field is a text field
      ,CESGEligible // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CESGEligible_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CESGEligible_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_770 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TDRedEarning (771)
   //------------------------------------------------------------------
   const DString& s_FldProp_TDRedEarning_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_771_5( I_("0.0000000000") );
      return( dstrDefValue_771_5 );
   }
   double s_FldProp_TDRedEarning_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_TDRedEarning_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_771_5( I_("TDRedEarning ") );
      return( dstrFldLabel_771_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TDRedEarning(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TDRedEarning // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_TDRedEarning_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TDRedEarning_d_DVF // default value
      ,s_FldProp_TDRedEarning_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GFathered (772)
   //------------------------------------------------------------------
   const DString& s_FldProp_GFathered_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_772_4( I_(" ") );
      return( dstrDefValue_772_4 );
   }
   const DString& s_FldProp_GFathered_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_772_4( I_("GFathered ") );
      return( dstrFldLabel_772_4 );
   }
   PBF_SSC subset_super_chooser_2_772( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GFathered(
       BFDataFieldProperties::Type::text // field is a text field
      ,GFathered // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GFathered_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GFathered_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_772 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CurrEarning (773)
   //------------------------------------------------------------------
   const DString& s_FldProp_CurrEarning_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_773_4( I_("0.0000000000") );
      return( dstrDefValue_773_4 );
   }
   double s_FldProp_CurrEarning_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_CurrEarning_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_773_4( I_("CurrEarning ") );
      return( dstrFldLabel_773_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CurrEarning(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,CurrEarning // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_CurrEarning_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_CurrEarning_d_DVF // default value
      ,s_FldProp_CurrEarning_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RESPStatus (774)
   //------------------------------------------------------------------
   const DString& s_FldProp_RESPStatus_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_774_5( I_("                                                  ") );
      return( dstrDefValue_774_5 );
   }
   const DString& s_FldProp_RESPStatus_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_774_5( I_("RESPStatus ") );
      return( dstrFldLabel_774_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RESPStatus(
       BFDataFieldProperties::Type::text // field is a text field
      ,RESPStatus // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RESPStatus_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RESPStatus_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RESPStatDesc (775)
   //------------------------------------------------------------------
   const DString& s_FldProp_RESPStatDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_775_4( I_("                                                  ") );
      return( dstrDefValue_775_4 );
   }
   const DString& s_FldProp_RESPStatDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_775_4( I_("RESPStatDesc ") );
      return( dstrFldLabel_775_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RESPStatDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,RESPStatDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RESPStatDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RESPStatDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RedLifeContr (776)
   //------------------------------------------------------------------
   const DString& s_FldProp_RedLifeContr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_776_4( I_("0.0000000000") );
      return( dstrDefValue_776_4 );
   }
   double s_FldProp_RedLifeContr_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_RedLifeContr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_776_4( I_("RedLifeContr ") );
      return( dstrFldLabel_776_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RedLifeContr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RedLifeContr // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_1 // mask chooser function
      ,s_FldProp_RedLifeContr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RedLifeContr_d_DVF // default value
      ,s_FldProp_RedLifeContr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RedUCAmt (777)
   //------------------------------------------------------------------
   const DString& s_FldProp_RedUCAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_777_4( I_("0.0000000000") );
      return( dstrDefValue_777_4 );
   }
   double s_FldProp_RedUCAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_RedUCAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_777_4( I_("RedUCAmt ") );
      return( dstrFldLabel_777_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RedUCAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RedUCAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_RedUCAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RedUCAmt_d_DVF // default value
      ,s_FldProp_RedUCAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RedACAmt (778)
   //------------------------------------------------------------------
   const DString& s_FldProp_RedACAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_778_4( I_("0.0000000000") );
      return( dstrDefValue_778_4 );
   }
   double s_FldProp_RedACAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_RedACAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_778_4( I_("RedACAmt ") );
      return( dstrFldLabel_778_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RedACAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RedACAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_RedACAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RedACAmt_d_DVF // default value
      ,s_FldProp_RedACAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RedNetGrant (779)
   //------------------------------------------------------------------
   const DString& s_FldProp_RedNetGrant_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_779_5( I_("0.0000000000") );
      return( dstrDefValue_779_5 );
   }
   double s_FldProp_RedNetGrant_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_RedNetGrant_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_779_5( I_("RedNetGrant ") );
      return( dstrFldLabel_779_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RedNetGrant(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RedNetGrant // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_RedNetGrant_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RedNetGrant_d_DVF // default value
      ,s_FldProp_RedNetGrant_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctLifeContr (780)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctLifeContr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_780_4( I_("0.0000000000") );
      return( dstrDefValue_780_4 );
   }
   double s_FldProp_AcctLifeContr_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_AcctLifeContr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_780_4( I_("AcctLifeContr ") );
      return( dstrFldLabel_780_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctLifeContr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctLifeContr // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_AcctLifeContr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctLifeContr_d_DVF // default value
      ,s_FldProp_AcctLifeContr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctUCAmt (781)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctUCAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_781_5( I_("0.0000000000") );
      return( dstrDefValue_781_5 );
   }
   double s_FldProp_AcctUCAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_AcctUCAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_781_5( I_("AcctUCAmt ") );
      return( dstrFldLabel_781_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctUCAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctUCAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_AcctUCAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctUCAmt_d_DVF // default value
      ,s_FldProp_AcctUCAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctACAmt (782)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctACAmt_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_782_5( I_("0") );
         return( dstrDefValue_782_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_782_8( I_("0") );
         return( dstrDefValue_782_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_782_7( I_("0") );
         return( dstrDefValue_782_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_782_6( I_("0") );
         return( dstrDefValue_782_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_782_3( I_("0") );
         return( dstrDefValue_782_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_782_1( I_("0") );
         return( dstrDefValue_782_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_782_4( I_("0.0000000000") );
         return( dstrDefValue_782_4 );
      }
      static const DString dstrDefValue_782_1( I_("0") );
      return( dstrDefValue_782_1 );
   }
   double s_FldProp_AcctACAmt_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      return( 0 );
   }
   const DString& s_FldProp_AcctACAmt_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_782_5( I_("AcctACAmt ") );
         return( dstrFldLabel_782_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_782_8( I_("AcctACAmt ") );
         return( dstrFldLabel_782_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_782_7( I_("AcctACAmt ") );
         return( dstrFldLabel_782_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_782_6( I_("AcctACAmt ") );
         return( dstrFldLabel_782_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_782_3( I_("AcctACAmt ") );
         return( dstrFldLabel_782_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_782_1( I_("AcctACAmt ") );
         return( dstrFldLabel_782_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_782_4( I_("AcctACAmt ") );
         return( dstrFldLabel_782_4 );
      }
      static const DString dstrFldLabel_782_1( I_("AcctACAmt ") );
      return( dstrFldLabel_782_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctACAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctACAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_AcctACAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctACAmt_d_DVF // default value
      ,s_FldProp_AcctACAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctNetGrant (783)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctNetGrant_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_783_4( I_("0.0000000000") );
      return( dstrDefValue_783_4 );
   }
   double s_FldProp_AcctNetGrant_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_AcctNetGrant_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_783_4( I_("AcctNetGrant ") );
      return( dstrFldLabel_783_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctNetGrant(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctNetGrant // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_AcctNetGrant_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctNetGrant_d_DVF // default value
      ,s_FldProp_AcctNetGrant_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctEAP (784)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctEAP_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_784_5( I_("0") );
         return( dstrDefValue_784_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_784_8( I_("0") );
         return( dstrDefValue_784_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_784_7( I_("0") );
         return( dstrDefValue_784_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_784_6( I_("0") );
         return( dstrDefValue_784_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_784_4( I_("0.0000000000") );
         return( dstrDefValue_784_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_784_3( I_("0") );
         return( dstrDefValue_784_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_784_1( I_("0") );
         return( dstrDefValue_784_1 );
      }
      static const DString dstrDefValue_784_1( I_("0") );
      return( dstrDefValue_784_1 );
   }
   double s_FldProp_AcctEAP_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_AcctEAP_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_784_5( I_("AcctEAP ") );
         return( dstrFldLabel_784_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_784_8( I_("AcctEAP ") );
         return( dstrFldLabel_784_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_784_7( I_("AcctEAP ") );
         return( dstrFldLabel_784_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_784_6( I_("AcctEAP ") );
         return( dstrFldLabel_784_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_784_4( I_("AcctEAP ") );
         return( dstrFldLabel_784_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_784_3( I_("AcctEAP ") );
         return( dstrFldLabel_784_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_784_1( I_("AcctEAP ") );
         return( dstrFldLabel_784_1 );
      }
      static const DString dstrFldLabel_784_1( I_("AcctEAP ") );
      return( dstrFldLabel_784_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctEAP(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctEAP // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_AcctEAP_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctEAP_d_DVF // default value
      ,s_FldProp_AcctEAP_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BeneName (786)
   //------------------------------------------------------------------
   const DString& s_FldProp_BeneName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_786_4( I_("                                                  ") );
      return( dstrDefValue_786_4 );
   }
   const DString& s_FldProp_BeneName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_786_4( I_("BeneName ") );
      return( dstrFldLabel_786_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BeneName(
       BFDataFieldProperties::Type::text // field is a text field
      ,BeneName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BeneName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BeneName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_YTDContr (787)
   //------------------------------------------------------------------
   const DString& s_FldProp_YTDContr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_787_5( I_("0000000000000.0000000000") );
      return( dstrDefValue_787_5 );
   }
   double s_FldProp_YTDContr_d_DVF( const ClientLocale& locale )
   {
      return( 0000000000000.0000000000 );
   }
   const DString& s_FldProp_YTDContr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_787_5( I_("YTDContr") );
      return( dstrFldLabel_787_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_YTDContr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,YTDContr // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_YTDContr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_YTDContr_d_DVF // default value
      ,s_FldProp_YTDContr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LifeContr (788)
   //------------------------------------------------------------------
   const DString& s_FldProp_LifeContr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_788_5( I_("0.0000000000") );
      return( dstrDefValue_788_5 );
   }
   double s_FldProp_LifeContr_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_LifeContr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_788_5( I_("LifeContr ") );
      return( dstrFldLabel_788_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LifeContr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,LifeContr // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_1 // mask chooser function
      ,s_FldProp_LifeContr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_LifeContr_d_DVF // default value
      ,s_FldProp_LifeContr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnAssisted (789)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnAssisted_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_789_4( I_("0.0000000000") );
         return( dstrDefValue_789_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_789_8( I_("0") );
         return( dstrDefValue_789_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_789_7( I_("0") );
         return( dstrDefValue_789_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_789_5( I_("0") );
         return( dstrDefValue_789_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_789_3( I_("0") );
         return( dstrDefValue_789_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_789_1( I_("0") );
         return( dstrDefValue_789_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_789_6( I_("0") );
         return( dstrDefValue_789_6 );
      }
      static const DString dstrDefValue_789_1( I_("0") );
      return( dstrDefValue_789_1 );
   }
   double s_FldProp_UnAssisted_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_UnAssisted_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_789_4( I_("UnAssisted ") );
         return( dstrFldLabel_789_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_789_8( I_("UnAssisted ") );
         return( dstrFldLabel_789_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_789_7( I_("UnAssisted ") );
         return( dstrFldLabel_789_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_789_5( I_("UnAssisted ") );
         return( dstrFldLabel_789_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_789_3( I_("UnAssisted ") );
         return( dstrFldLabel_789_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_789_1( I_("UnAssisted ") );
         return( dstrFldLabel_789_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_789_6( I_("UnAssisted ") );
         return( dstrFldLabel_789_6 );
      }
      static const DString dstrFldLabel_789_1( I_("UnAssisted ") );
      return( dstrFldLabel_789_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnAssisted(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnAssisted // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_UnAssisted_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnAssisted_d_DVF // default value
      ,s_FldProp_UnAssisted_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Assisted (790)
   //------------------------------------------------------------------
   const DString& s_FldProp_Assisted_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_790_4( I_("0.0000000000") );
      return( dstrDefValue_790_4 );
   }
   double s_FldProp_Assisted_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_Assisted_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_790_4( I_("Assisted ") );
      return( dstrFldLabel_790_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Assisted(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Assisted // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_Assisted_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Assisted_d_DVF // default value
      ,s_FldProp_Assisted_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetGrant (791)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetGrant_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_791_4( I_("0.0000000000") );
      return( dstrDefValue_791_4 );
   }
   double s_FldProp_NetGrant_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_NetGrant_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_791_4( I_("NetGrant ") );
      return( dstrFldLabel_791_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetGrant(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,NetGrant // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_NetGrant_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_NetGrant_d_DVF // default value
      ,s_FldProp_NetGrant_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EAPayment (792)
   //------------------------------------------------------------------
   const DString& s_FldProp_EAPayment_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_792_5( I_("0.0000000000") );
      return( dstrDefValue_792_5 );
   }
   double s_FldProp_EAPayment_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_EAPayment_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_792_5( I_("EAPayment ") );
      return( dstrFldLabel_792_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EAPayment(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EAPayment // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_EAPayment_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EAPayment_d_DVF // default value
      ,s_FldProp_EAPayment_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxShrNum (795)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxShrNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_795_8( I_("0") );
      return( dstrDefValue_795_8 );
   }
   DIINT64 s_FldProp_rxShrNum_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_rxShrNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_795_8( I_("rxShrNum ") );
      return( dstrFldLabel_795_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxShrNum(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,rxShrNum // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_3 // mask chooser function
      ,s_FldProp_rxShrNum_s_DVF // default value
      ,s_FldProp_rxShrNum_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_rxShrNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxJurisCode (796)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxJurisCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_796_4( I_("0000") );
      return( dstrDefValue_796_4 );
   }
   const DString& s_FldProp_TaxJurisCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_796_4( I_("TaxJurisCode  ") );
      return( dstrFldLabel_796_4 );
   }
   PBF_SSC subset_super_chooser_2_796( const ClientLocale& locale )
   {
      return chooser_ss_002_013; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxJurisCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxJurisCode // fieldId
      ,250 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxJurisCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxJurisCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_796 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxJurisName (797)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxJurisName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_797_5( I_("                                                  ") );
      return( dstrDefValue_797_5 );
   }
   const DString& s_FldProp_TaxJurisName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_797_5( I_("TaxJurisName ") );
      return( dstrFldLabel_797_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxJurisName(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxJurisName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxJurisName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxJurisName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ResProvCode (798)
   //------------------------------------------------------------------
   const DString& s_FldProp_ResProvCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_798_4( I_("0000") );
      return( dstrDefValue_798_4 );
   }
   const DString& s_FldProp_ResProvCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_798_4( I_("ResProvCode  ") );
      return( dstrFldLabel_798_4 );
   }
   PBF_SSC subset_super_chooser_2_798( const ClientLocale& locale )
   {
      return chooser_ss_002_013; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ResProvCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,ResProvCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ResProvCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ResProvCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_798 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ResProvName (799)
   //------------------------------------------------------------------
   const DString& s_FldProp_ResProvName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_799_4( I_("                                                  ") );
      return( dstrDefValue_799_4 );
   }
   const DString& s_FldProp_ResProvName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_799_4( I_("ResProvName ") );
      return( dstrFldLabel_799_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ResProvName(
       BFDataFieldProperties::Type::text // field is a text field
      ,ResProvName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ResProvName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ResProvName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );
}
