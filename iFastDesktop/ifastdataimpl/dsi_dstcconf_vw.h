// BFDataImpl header file for DataSet DSTCCONF.VW
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFNumericFieldId Using_AWD;
   extern const BFTextFieldId BusinessArea;
   extern const BFTextFieldId WorkType;
   extern const BFTextFieldId StatusDesc;
   extern const BFTextFieldId Batch;
   extern const BFTextFieldId Remarks;
   extern const BFTextFieldId AWDComment;
   extern const BFTextFieldId Option;
   extern const BFTextFieldId UpdAllNonFin;
   extern const BFTextFieldId AWDObjectId;
   extern const BFTextFieldId AWDCrda;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_Using_AWD;
   extern const BFDataFieldProperties s_FldProp_BusinessArea;
   extern const BFDataFieldProperties s_FldProp_WorkType;
   extern const BFDataFieldProperties s_FldProp_StatusDesc;
   extern const BFDataFieldProperties s_FldProp_Batch;
   extern const BFDataFieldProperties s_FldProp_Remarks;
   extern const BFDataFieldProperties s_FldProp_AWDComment;
   extern const BFDataFieldProperties s_FldProp_Option;
   extern const BFDataFieldProperties s_FldProp_UpdAllNonFin;
   extern const BFDataFieldProperties s_FldProp_AWDObjectId;
   extern const BFDataFieldProperties s_FldProp_AWDCrda;
}


class dsi_DSTCCONF_VW : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTCCONF_VW();
   virtual ~dsi_DSTCCONF_VW();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[11];
   // Field Declarations
   BFNumericField Using_AWD_;
   BFTextField_60 BusinessArea_;
   BFTextField_60 WorkType_;
   BFTextField_60 StatusDesc_;
   BFTextField_60 Batch_;
   BFTextField_1 Remarks_;
   BFTextField_1 AWDComment_;
   BFTextField<20> Option_;
   BFTextField<3> UpdAllNonFin_;
   BFTextField_60 AWDObjectId_;
   BFTextField_60 AWDCrda_;

};
