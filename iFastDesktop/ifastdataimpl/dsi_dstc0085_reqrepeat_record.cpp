// BFDataImpl implementation file for DataSet DSTC0085.REQRepeat_Record
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Monday, April 04, 2016 02:57:22


#include "stdafx.h"
#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0085_reqrepeat_record.h"


// This function creates an instance of dsi_DSTC0085_REQRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0085_REQRepeat_Record() { return new dsi_DSTC0085_REQRepeat_Record; }

dsi_DSTC0085_REQRepeat_Record::dsi_DSTC0085_REQRepeat_Record()
: BFDataImpl( 40001043 )
, Remark1_( ifds::Remark1, &ifds::s_FldProp_Remark1 )
, Remark2_( ifds::Remark2, &ifds::s_FldProp_Remark2 )
, Remark3_( ifds::Remark3, &ifds::s_FldProp_Remark3 )
, Remark4_( ifds::Remark4, &ifds::s_FldProp_Remark4 )
, Remark5_( ifds::Remark5, &ifds::s_FldProp_Remark5 )
, Remark6_( ifds::Remark6, &ifds::s_FldProp_Remark6 )
, Remark7_( ifds::Remark7, &ifds::s_FldProp_Remark7 )
, Remark8_( ifds::Remark8, &ifds::s_FldProp_Remark8 )
, Remark9_( ifds::Remark9, &ifds::s_FldProp_Remark9 )
, Remark10_( ifds::Remark10, &ifds::s_FldProp_Remark10 )
, EffectiveDate_( ifds::EffectiveDate, &ifds::s_FldProp_EffectiveDate )
, TransNote_( ifds::TransNote, &ifds::s_FldProp_TransNote )
, Active_( ifds::Active, &ifds::s_FldProp_Active )
, RemarksDetlRid_( ifds::RemarksDetlRid, &ifds::s_FldProp_RemarksDetlRid )
, RemarksDetlVer_( ifds::RemarksDetlVer, &ifds::s_FldProp_RemarksDetlVer )
, RunMode_( ifds::RunMode, &ifds::s_FldProp_RunMode )
, RemarkType_( ifds::RemarkType, &ifds::s_FldProp_RemarkType )
, AccountNum_( ifds::AccountNum, &ifds::s_FldProp_AccountNum )
, RemarkAlert_( ifds::RemarkAlert, &ifds::s_FldProp_RemarkAlert )
{
    cFields_ = 19;
    memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0085_REQRepeat_Record::~dsi_DSTC0085_REQRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0085_REQRepeat_Record::clone()
{
    dsi_DSTC0085_REQRepeat_Record* p = new dsi_DSTC0085_REQRepeat_Record;
    p->Remark1_ = Remark1_;
    p->Remark2_ = Remark2_;
    p->Remark3_ = Remark3_;
    p->Remark4_ = Remark4_;
    p->Remark5_ = Remark5_;
    p->Remark6_ = Remark6_;
    p->Remark7_ = Remark7_;
    p->Remark8_ = Remark8_;
    p->Remark9_ = Remark9_;
    p->Remark10_ = Remark10_;
    p->EffectiveDate_ = EffectiveDate_;
    p->TransNote_ = TransNote_;
    p->Active_ = Active_;
    p->RemarksDetlRid_ = RemarksDetlRid_;
    p->RemarksDetlVer_ = RemarksDetlVer_;
    p->RunMode_ = RunMode_;
    p->RemarkType_ = RemarkType_;
    p->AccountNum_ = AccountNum_;
    p->RemarkAlert_ = RemarkAlert_;
    return(p);
}

BFDataField* dsi_DSTC0085_REQRepeat_Record::getElement( const BFFieldId& id )
{
    switch( id.getId() ) {
        case 40000078: return ( &Remark1_ ); break; // Remark1
        case 40000079: return ( &Remark2_ ); break; // Remark2
        case 40000080: return ( &Remark3_ ); break; // Remark3
        case 40000081: return ( &Remark4_ ); break; // Remark4
        case 40000082: return ( &Remark5_ ); break; // Remark5
        case 40000083: return ( &Remark6_ ); break; // Remark6
        case 40000084: return ( &Remark7_ ); break; // Remark7
        case 40000085: return ( &Remark8_ ); break; // Remark8
        case 40000086: return ( &Remark9_ ); break; // Remark9
        case 40000087: return ( &Remark10_ ); break; // Remark10
        case 40000327: return ( &EffectiveDate_ ); break; // EffectiveDate
        case 40000221: return ( &TransNote_ ); break; // TransNote
        case 40000222: return ( &Active_ ); break; // Active
        case 40000912: return ( &RemarksDetlRid_ ); break; // RemarksDetlRid
        case 40000911: return ( &RemarksDetlVer_ ); break; // RemarksDetlVer
        case 40000990: return ( &RunMode_ ); break; // RunMode
        case 40004015: return ( &RemarkType_ ); break; // RemarkType
        case 40000040: return ( &AccountNum_ ); break; // AccountNum
        case 40007601: return ( &RemarkAlert_ ); break; // RemarkAlert
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0085_REQRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0085_REQRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0085_REQRepeat_Record::getElementByIndex( unsigned int iField )
{
    if ( iField >=0 && iField < 19 )
    {
        BFDataField* pField = aFlds_[iField];
        if( NULL == pField )
        {
            switch(iField)
            {
                case 0: aFlds_[0] = &Remark1_; break;
                case 1: aFlds_[1] = &Remark2_; break;
                case 2: aFlds_[2] = &Remark3_; break;
                case 3: aFlds_[3] = &Remark4_; break;
                case 4: aFlds_[4] = &Remark5_; break;
                case 5: aFlds_[5] = &Remark6_; break;
                case 6: aFlds_[6] = &Remark7_; break;
                case 7: aFlds_[7] = &Remark8_; break;
                case 8: aFlds_[8] = &Remark9_; break;
                case 9: aFlds_[9] = &Remark10_; break;
                case 10: aFlds_[10] = &EffectiveDate_; break;
                case 11: aFlds_[11] = &TransNote_; break;
                case 12: aFlds_[12] = &Active_; break;
                case 13: aFlds_[13] = &RemarksDetlRid_; break;
                case 14: aFlds_[14] = &RemarksDetlVer_; break;
                case 15: aFlds_[15] = &RunMode_; break;
                case 16: aFlds_[16] = &RemarkType_; break;
                case 17: aFlds_[17] = &AccountNum_; break;
                case 18: aFlds_[18] = &RemarkAlert_; break;
            }
            pField = aFlds_[iField];
            if( NULL == pField ) return( NULL );
        }
        return( pField );
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0085_REQRepeat_Record::getElementByIndex( unsigned int iField ) const
{
    return( ( const_cast< dsi_DSTC0085_REQRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0085_REQRepeat_Record::getLargestDefinedField( void ) const
{
    return( 100 );
}

unsigned long dsi_DSTC0085_REQRepeat_Record::getDefinedByteLength( void ) const
{
    return( 1258 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0085_REQRepeat_Record::exists( const BFFieldId& id ) const
{
    return dsi_DSTC0085_REQRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0085_REQRepeat_Record::fieldExists( const BFFieldId& id )
{
    switch( id.getId() )
    {
        case 40000078: return ( true );
        case 40000079: return ( true );
        case 40000080: return ( true );
        case 40000081: return ( true );
        case 40000082: return ( true );
        case 40000083: return ( true );
        case 40000084: return ( true );
        case 40000085: return ( true );
        case 40000086: return ( true );
        case 40000087: return ( true );
        case 40000327: return ( true );
        case 40000221: return ( true );
        case 40000222: return ( true );
        case 40000912: return ( true );
        case 40000911: return ( true );
        case 40000990: return ( true );
        case 40004015: return ( true );
        case 40000040: return ( true );
        case 40007601: return ( true );
    }
    return false;
}

