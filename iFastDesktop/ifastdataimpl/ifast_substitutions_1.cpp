// BFSubstitutionSet objects
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Wednesday, January 02, 2019 16:38:51

#include "stdafx.h"
#include <commonport.h>
#include <clientlocale.hpp>

namespace ifds
{
   // Substitution set PriceCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_030_001_000_000[] = {
      I_("AT"),
      I_("CV"),
      I_("RV"),
      I_("SP"),
      I_("SU"),
      I_("UI"),
      I_("AV"),
      I_("SC"),
      I_("SB"),
      I_("SR"),
      I_("SE"),
      I_("S1"),
      I_("S2"),
      I_("HC"),
      I_("EX"),
      I_("RE"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      0x00
   };

   static const I_CHAR* aValues_002_030_001_000_000[] = {
      I_("Average Trust Money(ATM) Price"),
      I_("Catastrophic Unit Price"),
      I_("Redemption Unit Price"),
      I_("Standard Unit Price"),
      I_("Subscription Unit Price"),
      I_("Un-Allocated Income"),
      I_("Standard Unit Price"),
      I_("SP - Client Instructed"),
      I_("SP - Backdated trades"),
      I_("SP - Redemption Re-Class"),
      I_("SP - Equalization trades"),
      I_("SP - Other I"),
      I_("SP - Other II"),
      I_("Hard CLose Price"),
      I_("Ex - Redemption Price"),
      I_("Re - Investment Unit Price"),
      I_("A1 - Price Point"),
      I_("A2 - Price Point"),
      I_("A3 - Price Point"),
      I_("A4 - Price Point"),
      I_("A5 - Price Point"),
      I_("A6 - Price Point"),
      I_("A7 - Price Point"),
      I_("A8 - Price Point"),
      I_("A9 - Price Point"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_030_001_000_000;
   const BFSubstitutionSet SubSet_002_030_001_000_000(
    &aKeys_002_030_001_000_000[0], &aValues_002_030_001_000_000[0] );
   // Substitution set PriceCodeSet.  Language: enCA
   static const I_CHAR* aKeys_002_030_003_000_000[] = {
      I_("AT"),
      I_("CV"),
      I_("RV"),
      I_("SP"),
      I_("SU"),
      I_("UI"),
      I_("AV"),
      I_("SC"),
      I_("SB"),
      I_("SR"),
      I_("SE"),
      I_("S1"),
      I_("S2"),
      I_("HC"),
      I_("EX"),
      I_("RE"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      0x00
   };

   static const I_CHAR* aValues_002_030_003_000_000[] = {
      I_("Average Trust Money(ATM) Price"),
      I_("Catastrophic Unit Price"),
      I_("Redemption Unit Price"),
      I_("Standard Unit Price"),
      I_("Subscription Unit Price"),
      I_("Un-Allocated Income"),
      I_("Standard Unit Price"),
      I_("SP - Client Instructed"),
      I_("SP - Backdated trades"),
      I_("SP - Redemption Re-Class"),
      I_("SP - Equalization trades"),
      I_("SP - Other I"),
      I_("SP - Other II"),
      I_("Hard CLose Price"),
      I_("Ex - Redemption Price"),
      I_("Re - Investment Unit Price"),
      I_("A1 - Price Point"),
      I_("A2 - Price Point"),
      I_("A3 - Price Point"),
      I_("A4 - Price Point"),
      I_("A5 - Price Point"),
      I_("A6 - Price Point"),
      I_("A7 - Price Point"),
      I_("A8 - Price Point"),
      I_("A9 - Price Point"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_030_003_000_000;
   const BFSubstitutionSet SubSet_002_030_003_000_000(
    &aKeys_002_030_003_000_000[0], &aValues_002_030_003_000_000[0] );
   // Substitution set PriceCodeSet.  Language: frFR
   static const I_CHAR* aKeys_002_030_004_000_000[] = {
      I_("AT"),
      I_("CV"),
      I_("RV"),
      I_("SP"),
      I_("SU"),
      I_("UI"),
      I_("AV"),
      I_("SC"),
      I_("SB"),
      I_("SR"),
      I_("SE"),
      I_("S1"),
      I_("S2"),
      I_("HC"),
      I_("EX"),
      I_("RE"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      0x00
   };

   static const I_CHAR* aValues_002_030_004_000_000[] = {
      I_("Average Trust Money(ATM) Price"),
      I_("Catastrophic Unit Price"),
      I_("Redemption Unit Price"),
      I_("Standard Unit Price"),
      I_("Subscription Unit Price"),
      I_("Un-Allocated Income"),
      I_("Standard Unit Price"),
      I_("SP - Client Instructed"),
      I_("SP - Backdated trades"),
      I_("SP - Redemption Re-Class"),
      I_("SP - Equalization trades"),
      I_("SP - Other I"),
      I_("SP - Other II"),
      I_("Hard CLose Price"),
      I_("Ex - Redemption Price"),
	  I_("Re - Investment Unit Price"),
      I_("A1 - Price Point"),
      I_("A2 - Price Point"),
      I_("A3 - Price Point"),
      I_("A4 - Price Point"),
      I_("A5 - Price Point"),
      I_("A6 - Price Point"),
      I_("A7 - Price Point"),
      I_("A8 - Price Point"),
      I_("A9 - Price Point"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_030_004_000_000;
   const BFSubstitutionSet SubSet_002_030_004_000_000(
    &aKeys_002_030_004_000_000[0], &aValues_002_030_004_000_000[0] );
   // Substitution set PriceCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_030_005_000_000[] = {
      I_("AT"),
      I_("CV"),
      I_("RV"),
      I_("SP"),
      I_("SU"),
      I_("UI"),
      I_("AV"),
      I_("SC"),
      I_("SB"),
      I_("SR"),
      I_("SE"),
      I_("S1"),
      I_("S2"),
      I_("HC"),
      I_("EX"),
      I_("RE"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      0x00
   };

   static const I_CHAR* aValues_002_030_005_000_000[] = {
      I_("Prix de la somme moyenne en fiducie"),
      I_("Prix unitaire catastrophique"),
      I_("Prix unitaire de rachat"),
      I_("Prix unitaire standard"),
      I_("Prix unitaire de souscription"),
      I_("Revenu non réparti"),
      I_("Standard Unit Price"),
      I_("SP - Client Instructed"),
      I_("SP - Backdated trades"),
      I_("SP - Redemption Re-Class"),
      I_("SP - Equalization trades"),
      I_("SP - Other I"),
      I_("SP - Other II"),
      I_("Hard CLose Price"),
      I_("Ex - Redemption Price"),
      I_("Re - Investment Unit Price"),
      I_("A1 - Price Point"),
      I_("A2 - Price Point"),
      I_("A3 - Price Point"),
      I_("A4 - Price Point"),
      I_("A5 - Price Point"),
      I_("A6 - Price Point"),
      I_("A7 - Price Point"),
      I_("A8 - Price Point"),
      I_("A9 - Price Point"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_030_005_000_000;
   const BFSubstitutionSet SubSet_002_030_005_000_000(
    &aKeys_002_030_005_000_000[0], &aValues_002_030_005_000_000[0] );
   // Substitution set PriceCodeSet.  Language: enIE
   static const I_CHAR* aKeys_002_030_006_000_000[] = {
      I_("AT"),
      I_("CV"),
      I_("RV"),
      I_("SP"),
      I_("SU"),
      I_("UI"),
      I_("AV"),
      I_("SC"),
      I_("SB"),
      I_("SR"),
      I_("SE"),
      I_("S1"),
      I_("S2"),
      I_("HC"),
      I_("EX"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      0x00
   };

   static const I_CHAR* aValues_002_030_006_000_000[] = {
      I_("Average Trust Money(ATM) Price"),
      I_("Catastrophic Unit Price"),
      I_("Redemption Unit Price"),
      I_("Standard Unit Price"),
      I_("Subscription Unit Price"),
      I_("Un-Allocated Income"),
      I_("Standard Unit Price"),
      I_("SP - Client Instructed"),
      I_("SP - Backdated trades"),
      I_("SP - Redemption Re-Class"),
      I_("SP - Equalization trades"),
      I_("SP - Other I"),
      I_("SP - Other II"),
      I_("Hard CLose Price"),
      I_("Ex - Redemption Price"),
      I_("A1 - Price Point"),
      I_("A2 - Price Point"),
      I_("A3 - Price Point"),
      I_("A4 - Price Point"),
      I_("A5 - Price Point"),
      I_("A6 - Price Point"),
      I_("A7 - Price Point"),
      I_("A8 - Price Point"),
      I_("A9 - Price Point"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_030_006_000_000;
   const BFSubstitutionSet SubSet_002_030_006_000_000(
    &aKeys_002_030_006_000_000[0], &aValues_002_030_006_000_000[0] );
   // Substitution set PriceCodeSet.  Language: deDE
   static const I_CHAR* aKeys_002_030_007_000_000[] = {
      I_("AT"),
      I_("CV"),
      I_("RV"),
      I_("SP"),
      I_("SU"),
      I_("UI"),
      I_("AV"),
      I_("SC"),
      I_("SB"),
      I_("SR"),
      I_("SE"),
      I_("S1"),
      I_("S2"),
      I_("HC"),
      I_("EX"),
	  I_("RE"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      0x00
   };

   static const I_CHAR* aValues_002_030_007_000_000[] = {
      I_("Average Trust Money(ATM) Price"),
      I_("Catastrophic Unit Price"),
      I_("Redemption Unit Price"),
      I_("Standard Unit Price"),
      I_("Subscription Unit Price"),
      I_("Un-Allocated Income"),
      I_("Standard Unit Price"),
      I_("SP - Client Instructed"),
      I_("SP - Backdated trades"),
      I_("SP - Redemption Re-Class"),
      I_("SP - Equalization trades"),
      I_("SP - Other I"),
      I_("SP - Other II"),
      I_("Hard CLose Price"),
      I_("Ex - Redemption Price"),
      I_("Re - Investment Unit Price"),
      I_("A1 - Price Point"),
      I_("A2 - Price Point"),
      I_("A3 - Price Point"),
      I_("A4 - Price Point"),
      I_("A5 - Price Point"),
      I_("A6 - Price Point"),
      I_("A7 - Price Point"),
      I_("A8 - Price Point"),
      I_("A9 - Price Point"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_030_007_000_000;
   const BFSubstitutionSet SubSet_002_030_007_000_000(
    &aKeys_002_030_007_000_000[0], &aValues_002_030_007_000_000[0] );
   // Substitution set PriceCodeSet.  Language: esEs
   static const I_CHAR* aKeys_002_030_008_000_000[] = {
      I_("AT"),
      I_("CV"),
      I_("RV"),
      I_("SP"),
      I_("SU"),
      I_("UI"),
      I_("AV"),
      I_("SC"),
      I_("SB"),
      I_("SR"),
      I_("SE"),
      I_("S1"),
      I_("S2"),
      I_("HC"),
      I_("EX"),
      I_("RE"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      0x00
   };

   static const I_CHAR* aValues_002_030_008_000_000[] = {
      I_("Average Trust Money(ATM) Price"),
      I_("Catastrophic Unit Price"),
      I_("Redemption Unit Price"),
      I_("Standard Unit Price"),
      I_("Subscription Unit Price"),
      I_("Un-Allocated Income"),
      I_("Standard Unit Price"),
      I_("SP - Client Instructed"),
      I_("SP - Backdated trades"),
      I_("SP - Redemption Re-Class"),
      I_("SP - Equalization trades"),
      I_("SP - Other I"),
      I_("SP - Other II"),
      I_("Hard CLose Price"),
      I_("Ex - Redemption Price"),
      I_("Re - Investment Unit Price"),
      I_("A1 - Price Point"),
      I_("A2 - Price Point"),
      I_("A3 - Price Point"),
      I_("A4 - Price Point"),
      I_("A5 - Price Point"),
      I_("A6 - Price Point"),
      I_("A7 - Price Point"),
      I_("A8 - Price Point"),
      I_("A9 - Price Point"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_030_008_000_000;
   const BFSubstitutionSet SubSet_002_030_008_000_000(
    &aKeys_002_030_008_000_000[0], &aValues_002_030_008_000_000[0] );
   // Substitution set PriceCodeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_030_010_000_000[] = {
      I_("AT"),
      I_("CV"),
      I_("RV"),
      I_("SP"),
      I_("SU"),
      I_("UI"),
      I_("AV"),
      I_("SC"),
      I_("SB"),
      I_("SR"),
      I_("SE"),
      I_("S1"),
      I_("S2"),
      I_("HC"),
      I_("EX"),
      I_("RE"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      0x00
   };

   static const I_CHAR* aValues_002_030_010_000_000[] = {
      I_("ATM-prijs (Average Trust Money)"),
      I_("Catastrofale eenheidsprijs"),
      I_("Eenheidsprijs aflossing"),
      I_("Standaard eenheidsprijs"),
      I_("Eenheidsprijs abonnement"),
      I_("Niet-gealloceerd inkomen"),
      I_("Standard Unit Price"),
      I_("SP - Client Instructed"),
      I_("SP - Backdated trades"),
      I_("SP - Redemption Re-Class"),
      I_("SP - Equalization trades"),
      I_("SP - Other I"),
      I_("SP - Other II"),
      I_("Hard CLose Price"),
      I_("Ex - Redemption Price"),
	  I_("Re - Investment Unit Price"),
      I_("A1 - Price Point"),
      I_("A2 - Price Point"),
      I_("A3 - Price Point"),
      I_("A4 - Price Point"),
      I_("A5 - Price Point"),
      I_("A6 - Price Point"),
      I_("A7 - Price Point"),
      I_("A8 - Price Point"),
      I_("A9 - Price Point"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_030_010_000_000;
   const BFSubstitutionSet SubSet_002_030_010_000_000(
    &aKeys_002_030_010_000_000[0], &aValues_002_030_010_000_000[0] );
   // Substitution set MaritalCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_031_001_000_000[] = {
      I_("4"),
      I_("2"),
      I_("1"),
      I_("3"),
      I_("5"),
      I_("6"),
      0x00
   };

   static const I_CHAR* aValues_002_031_001_000_000[] = {
      I_("Divorced"),
      I_("Married"),
      I_("Single"),
      I_("Separated"),
      I_("Widowed"),
      I_("Common Law"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_031_001_000_000;
   const BFSubstitutionSet SubSet_002_031_001_000_000(
    &aKeys_002_031_001_000_000[0], &aValues_002_031_001_000_000[0] );
   // Substitution set MaritalCodeSet.  Language: enCA
   static const I_CHAR* aKeys_002_031_003_000_000[] = {
      I_("4"),
      I_("2"),
      I_("1"),
      I_("3"),
      I_("5"),
      I_("6"),
      0x00
   };

   static const I_CHAR* aValues_002_031_003_000_000[] = {
      I_("Divorced"),
      I_("Married"),
      I_("Single"),
      I_("Separated"),
      I_("Widowed"),
      I_("Common Law"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_031_003_000_000;
   const BFSubstitutionSet SubSet_002_031_003_000_000(
    &aKeys_002_031_003_000_000[0], &aValues_002_031_003_000_000[0] );
   // Substitution set MaritalCodeSet.  Language: frFR
   static const I_CHAR* aKeys_002_031_004_000_000[] = {
      I_("4"),
      I_("2"),
      I_("1"),
      I_("3"),
      I_("5"),
      I_("6"),
      0x00
   };

   static const I_CHAR* aValues_002_031_004_000_000[] = {
      I_("Divorce(e)"),
      I_("Marie(e)"),
      I_("Single"),
      I_("Separe(e)"),
      I_("Veuf(ve)"),
      I_("Conjoint de fait"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_031_004_000_000;
   const BFSubstitutionSet SubSet_002_031_004_000_000(
    &aKeys_002_031_004_000_000[0], &aValues_002_031_004_000_000[0] );
   // Substitution set MaritalCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_031_005_000_000[] = {
      I_("4"),
      I_("2"),
      I_("1"),
      I_("3"),
      I_("5"),
      I_("6"),
      0x00
   };

   static const I_CHAR* aValues_002_031_005_000_000[] = {
      I_("Divorcé(e) "),
      I_("Marié(e) "),
      I_("Célibataire"),
      I_("Séparé(e) "),
      I_("Veuf/veuve"),
      I_("Conjoint(e) de fait"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_031_005_000_000;
   const BFSubstitutionSet SubSet_002_031_005_000_000(
    &aKeys_002_031_005_000_000[0], &aValues_002_031_005_000_000[0] );
   // Substitution set MaritalCodeSet.  Language: enIE
   static const I_CHAR* aKeys_002_031_006_000_000[] = {
      I_("4"),
      I_("2"),
      I_("1"),
      I_("3"),
      I_("5"),
      I_("6"),
      0x00
   };

   static const I_CHAR* aValues_002_031_006_000_000[] = {
      I_("Divorced"),
      I_("Married"),
      I_("Single"),
      I_("Separated"),
      I_("Widowed"),
      I_("Common Law"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_031_006_000_000;
   const BFSubstitutionSet SubSet_002_031_006_000_000(
    &aKeys_002_031_006_000_000[0], &aValues_002_031_006_000_000[0] );
   // Substitution set MaritalCodeSet.  Language: deDE
   static const I_CHAR* aKeys_002_031_007_000_000[] = {
      I_("4"),
      I_("2"),
      I_("1"),
      I_("3"),
      I_("5"),
      I_("6"),
      0x00
   };

   static const I_CHAR* aValues_002_031_007_000_000[] = {
      I_("Divorced"),
      I_("Married"),
      I_("Single"),
      I_("Separated"),
      I_("Widowed"),
      I_("Lebensgefährte"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_031_007_000_000;
   const BFSubstitutionSet SubSet_002_031_007_000_000(
    &aKeys_002_031_007_000_000[0], &aValues_002_031_007_000_000[0] );
   // Substitution set MaritalCodeSet.  Language: esEs
   static const I_CHAR* aKeys_002_031_008_000_000[] = {
      I_("4"),
      I_("2"),
      I_("1"),
      I_("3"),
      I_("5"),
      I_("6"),
      0x00
   };

   static const I_CHAR* aValues_002_031_008_000_000[] = {
      I_("Divorced"),
      I_("Married"),
      I_("Single"),
      I_("Separated"),
      I_("Widowed"),
      I_("Cónyuge de hecho"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_031_008_000_000;
   const BFSubstitutionSet SubSet_002_031_008_000_000(
    &aKeys_002_031_008_000_000[0], &aValues_002_031_008_000_000[0] );
   // Substitution set MaritalCodeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_031_010_000_000[] = {
      I_("4"),
      I_("2"),
      I_("1"),
      I_("3"),
      I_("5"),
      I_("6"),
      0x00
   };

   static const I_CHAR* aValues_002_031_010_000_000[] = {
      I_("Gescheiden"),
      I_("Getrouwd"),
      I_("Alleenstaand"),
      I_("Van tafel en bed gescheiden"),
      I_("Weduwnaar/weduwe"),
      I_("Gewoonterechtechtgenoot"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_031_010_000_000;
   const BFSubstitutionSet SubSet_002_031_010_000_000(
    &aKeys_002_031_010_000_000[0], &aValues_002_031_010_000_000[0] );
   // Substitution set NetWorthCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_032_001_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      0x00
   };

   static const I_CHAR* aValues_002_032_001_000_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      I_("Under $50,000"),
      I_("$50,001 - $125,000"),
      I_("$125,001 - $250,000"),
      I_("$250,001 - $500,000"),
      I_("Over $500,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_001_000_000;
   const BFSubstitutionSet SubSet_002_032_001_000_000(
    &aKeys_002_032_001_000_000[0], &aValues_002_032_001_000_000[0] );
   // Substitution set NetWorthCodeSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_032_001_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_001_003_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_001_003_000;
   const BFSubstitutionSet SubSet_002_032_001_003_000(
    &aKeys_002_032_001_003_000[0], &aValues_002_032_001_003_000[0] );
   // Substitution set NetWorthCodeSet.  Language: enUS, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_032_001_003_017[] = {
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      0x00
   };

   static const I_CHAR* aValues_002_032_001_003_017[] = {
      I_("Under $50,000"),
      I_("$50,001 - $125,000"),
      I_("$125,001 - $250,000"),
      I_("$250,001 - $500,000"),
      I_("Over $500,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_001_003_017;
   const BFSubstitutionSet SubSet_002_032_001_003_017(
    &aKeys_002_032_001_003_017[0], &aValues_002_032_001_003_017[0] );
   // Substitution set NetWorthCodeSet.  Language: enUS, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_032_001_003_018[] = {
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      0x00
   };

   static const I_CHAR* aValues_002_032_001_003_018[] = {
      I_("Under $50,000"),
      I_("$50,001 - $125,000"),
      I_("$125,001 - $250,000"),
      I_("$250,001 - $500,000"),
      I_("Over $500,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_001_003_018;
   const BFSubstitutionSet SubSet_002_032_001_003_018(
    &aKeys_002_032_001_003_018[0], &aValues_002_032_001_003_018[0] );
   // Substitution set NetWorthCodeSet.  Language: enUS, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_032_001_003_019[] = {
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      0x00
   };

   static const I_CHAR* aValues_002_032_001_003_019[] = {
      I_("Under $50,000"),
      I_("$50,001 - $125,000"),
      I_("$125,001 - $250,000"),
      I_("$250,001 - $500,000"),
      I_("Over $500,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_001_003_019;
   const BFSubstitutionSet SubSet_002_032_001_003_019(
    &aKeys_002_032_001_003_019[0], &aValues_002_032_001_003_019[0] );
   // Substitution set NetWorthCodeSet.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_032_001_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_001_004_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_001_004_000;
   const BFSubstitutionSet SubSet_002_032_001_004_000(
    &aKeys_002_032_001_004_000[0], &aValues_002_032_001_004_000[0] );
   // Substitution set NetWorthCodeSet.  Language: enCA
   static const I_CHAR* aKeys_002_032_003_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_003_000_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_003_000_000;
   const BFSubstitutionSet SubSet_002_032_003_000_000(
    &aKeys_002_032_003_000_000[0], &aValues_002_032_003_000_000[0] );
   // Substitution set NetWorthCodeSet.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_032_003_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_003_003_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_003_003_000;
   const BFSubstitutionSet SubSet_002_032_003_003_000(
    &aKeys_002_032_003_003_000[0], &aValues_002_032_003_003_000[0] );
   // Substitution set NetWorthCodeSet.  Language: enCA, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_032_003_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_003_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_003_003_017;
   const BFSubstitutionSet SubSet_002_032_003_003_017(
    &aKeys_002_032_003_003_017[0], &aValues_002_032_003_003_017[0] );
   // Substitution set NetWorthCodeSet.  Language: enCA, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_032_003_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_003_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_003_003_018;
   const BFSubstitutionSet SubSet_002_032_003_003_018(
    &aKeys_002_032_003_003_018[0], &aValues_002_032_003_003_018[0] );
   // Substitution set NetWorthCodeSet.  Language: enCA, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_032_003_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_003_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_003_003_019;
   const BFSubstitutionSet SubSet_002_032_003_003_019(
    &aKeys_002_032_003_003_019[0], &aValues_002_032_003_003_019[0] );
   // Substitution set NetWorthCodeSet.  Language: enCA, Market: 4
   static const I_CHAR* aKeys_002_032_003_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_003_004_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_003_004_000;
   const BFSubstitutionSet SubSet_002_032_003_004_000(
    &aKeys_002_032_003_004_000[0], &aValues_002_032_003_004_000[0] );
   // Substitution set NetWorthCodeSet.  Language: frFR
   static const I_CHAR* aKeys_002_032_004_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_004_000_000[] = {
      I_("Moins de 20.000 dollars"),
      I_("De 20.000 a 50.000 dollars"),
      I_("De 50.000 a 100.000 dollars"),
      I_("De 100.000 a 250.000 dollars"),
      I_("De 250.00 a 500.000 dollars"),
      I_("De 500.000 a 600.000 dollars"),
      I_("Plus de 600.000 dollars"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_004_000_000;
   const BFSubstitutionSet SubSet_002_032_004_000_000(
    &aKeys_002_032_004_000_000[0], &aValues_002_032_004_000_000[0] );
   // Substitution set NetWorthCodeSet.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_032_004_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_004_003_000[] = {
      I_("Moins de 20.000 dollars"),
      I_("De 20.000 a 50.000 dollars"),
      I_("De 50.000 a 100.000 dollars"),
      I_("De 100.000 a 250.000 dollars"),
      I_("De 250.00 a 500.000 dollars"),
      I_("De 500.000 a 600.000 dollars"),
      I_("Plus de 600.000 dollars"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_004_003_000;
   const BFSubstitutionSet SubSet_002_032_004_003_000(
    &aKeys_002_032_004_003_000[0], &aValues_002_032_004_003_000[0] );
   // Substitution set NetWorthCodeSet.  Language: frFR, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_032_004_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_004_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_004_003_017;
   const BFSubstitutionSet SubSet_002_032_004_003_017(
    &aKeys_002_032_004_003_017[0], &aValues_002_032_004_003_017[0] );
   // Substitution set NetWorthCodeSet.  Language: frFR, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_032_004_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_004_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_004_003_018;
   const BFSubstitutionSet SubSet_002_032_004_003_018(
    &aKeys_002_032_004_003_018[0], &aValues_002_032_004_003_018[0] );
   // Substitution set NetWorthCodeSet.  Language: frFR, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_032_004_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_004_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_004_003_019;
   const BFSubstitutionSet SubSet_002_032_004_003_019(
    &aKeys_002_032_004_003_019[0], &aValues_002_032_004_003_019[0] );
   // Substitution set NetWorthCodeSet.  Language: frFR, Market: 4
   static const I_CHAR* aKeys_002_032_004_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_004_004_000[] = {
      I_("Moins de 20.000 dollars"),
      I_("De 20.000 a 50.000 dollars"),
      I_("De 50.000 a 100.000 dollars"),
      I_("De 100.000 a 250.000 dollars"),
      I_("De 250.00 a 500.000 dollars"),
      I_("De 500.000 a 600.000 dollars"),
      I_("Plus de 600.000 dollars"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_004_004_000;
   const BFSubstitutionSet SubSet_002_032_004_004_000(
    &aKeys_002_032_004_004_000[0], &aValues_002_032_004_004_000[0] );
   // Substitution set NetWorthCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_032_005_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      0x00
   };

   static const I_CHAR* aValues_002_032_005_000_000[] = {
      I_("Moins de 20 000 $"),
      I_("20 000 $ à 50 000 $"),
      I_("50 000 $ à 100 000 $"),
      I_("100 000 $ à 250 000 $"),
      I_("250 000 $ à 500 000$"),
      I_("500 000 $ à 600 000 $"),
      I_("Plus de 600 000 $"),
      I_("Moins de 50 000 $"),
      I_("50 001 $ à 125 000 $"),
      I_("125 001 $ à 250 000 $"),
      I_("250 001 $ à 500 000 $"),
      I_("Plus de 500 000 $"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_005_000_000;
   const BFSubstitutionSet SubSet_002_032_005_000_000(
    &aKeys_002_032_005_000_000[0], &aValues_002_032_005_000_000[0] );
   // Substitution set NetWorthCodeSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_032_005_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_005_003_000[] = {
      I_("Moins de 20 000 $"),
      I_("20 000 $ à 50 000 $"),
      I_("50 000 $ à 100 000 $"),
      I_("100 000 $ à 250 000 $"),
      I_("250 000 $ à 500 000$"),
      I_("500 000 $ à 600 000 $"),
      I_("Plus de 600 000 $"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_005_003_000;
   const BFSubstitutionSet SubSet_002_032_005_003_000(
    &aKeys_002_032_005_003_000[0], &aValues_002_032_005_003_000[0] );
   // Substitution set NetWorthCodeSet.  Language: frCA, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_032_005_003_017[] = {
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      0x00
   };

   static const I_CHAR* aValues_002_032_005_003_017[] = {
      I_("Moins de 50 000 $"),
      I_("50 001 $ à 125 000 $"),
      I_("125 001 $ à 250 000 $"),
      I_("250 001 $ à 500 000 $"),
      I_("Plus de 500 000 $"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_005_003_017;
   const BFSubstitutionSet SubSet_002_032_005_003_017(
    &aKeys_002_032_005_003_017[0], &aValues_002_032_005_003_017[0] );
   // Substitution set NetWorthCodeSet.  Language: frCA, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_032_005_003_018[] = {
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      0x00
   };

   static const I_CHAR* aValues_002_032_005_003_018[] = {
      I_("Moins de 50 000 $"),
      I_("50 001 $ à 125 000 $"),
      I_("125 001 $ à 250 000 $"),
      I_("250 001 $ à 500 000 $"),
      I_("Plus de 500 000 $"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_005_003_018;
   const BFSubstitutionSet SubSet_002_032_005_003_018(
    &aKeys_002_032_005_003_018[0], &aValues_002_032_005_003_018[0] );
   // Substitution set NetWorthCodeSet.  Language: frCA, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_032_005_003_019[] = {
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      0x00
   };

   static const I_CHAR* aValues_002_032_005_003_019[] = {
      I_("Moins de 50 000 $"),
      I_("50 001 $ à 125 000 $"),
      I_("125 001 $ à 250 000 $"),
      I_("250 001 $ à 500 000 $"),
      I_("Plus de 500 000 $"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_005_003_019;
   const BFSubstitutionSet SubSet_002_032_005_003_019(
    &aKeys_002_032_005_003_019[0], &aValues_002_032_005_003_019[0] );
   // Substitution set NetWorthCodeSet.  Language: frCA, Market: 4
   static const I_CHAR* aKeys_002_032_005_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_005_004_000[] = {
      I_("Moins de 20 000 $"),
      I_("20 000 $ à 50 000 $"),
      I_("50 000 $ à 100 000 $"),
      I_("100 000 $ à 250 000 $"),
      I_("250 000 $ à 500 000$"),
      I_("500 000 $ à 600 000 $"),
      I_("Plus de 600 000 $"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_005_004_000;
   const BFSubstitutionSet SubSet_002_032_005_004_000(
    &aKeys_002_032_005_004_000[0], &aValues_002_032_005_004_000[0] );
   // Substitution set NetWorthCodeSet.  Language: enIE
   static const I_CHAR* aKeys_002_032_006_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_006_000_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_006_000_000;
   const BFSubstitutionSet SubSet_002_032_006_000_000(
    &aKeys_002_032_006_000_000[0], &aValues_002_032_006_000_000[0] );
   // Substitution set NetWorthCodeSet.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_032_006_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_006_003_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_006_003_000;
   const BFSubstitutionSet SubSet_002_032_006_003_000(
    &aKeys_002_032_006_003_000[0], &aValues_002_032_006_003_000[0] );
   // Substitution set NetWorthCodeSet.  Language: enIE, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_032_006_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_006_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_006_003_017;
   const BFSubstitutionSet SubSet_002_032_006_003_017(
    &aKeys_002_032_006_003_017[0], &aValues_002_032_006_003_017[0] );
   // Substitution set NetWorthCodeSet.  Language: enIE, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_032_006_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_006_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_006_003_018;
   const BFSubstitutionSet SubSet_002_032_006_003_018(
    &aKeys_002_032_006_003_018[0], &aValues_002_032_006_003_018[0] );
   // Substitution set NetWorthCodeSet.  Language: enIE, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_032_006_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_006_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_006_003_019;
   const BFSubstitutionSet SubSet_002_032_006_003_019(
    &aKeys_002_032_006_003_019[0], &aValues_002_032_006_003_019[0] );
   // Substitution set NetWorthCodeSet.  Language: enIE, Market: 4
   static const I_CHAR* aKeys_002_032_006_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_006_004_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_006_004_000;
   const BFSubstitutionSet SubSet_002_032_006_004_000(
    &aKeys_002_032_006_004_000[0], &aValues_002_032_006_004_000[0] );
   // Substitution set NetWorthCodeSet.  Language: deDE
   static const I_CHAR* aKeys_002_032_007_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_007_000_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_007_000_000;
   const BFSubstitutionSet SubSet_002_032_007_000_000(
    &aKeys_002_032_007_000_000[0], &aValues_002_032_007_000_000[0] );
   // Substitution set NetWorthCodeSet.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_032_007_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_007_003_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_007_003_000;
   const BFSubstitutionSet SubSet_002_032_007_003_000(
    &aKeys_002_032_007_003_000[0], &aValues_002_032_007_003_000[0] );
   // Substitution set NetWorthCodeSet.  Language: deDE, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_032_007_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_007_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_007_003_017;
   const BFSubstitutionSet SubSet_002_032_007_003_017(
    &aKeys_002_032_007_003_017[0], &aValues_002_032_007_003_017[0] );
   // Substitution set NetWorthCodeSet.  Language: deDE, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_032_007_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_007_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_007_003_018;
   const BFSubstitutionSet SubSet_002_032_007_003_018(
    &aKeys_002_032_007_003_018[0], &aValues_002_032_007_003_018[0] );
   // Substitution set NetWorthCodeSet.  Language: deDE, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_032_007_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_007_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_007_003_019;
   const BFSubstitutionSet SubSet_002_032_007_003_019(
    &aKeys_002_032_007_003_019[0], &aValues_002_032_007_003_019[0] );
   // Substitution set NetWorthCodeSet.  Language: deDE, Market: 4
   static const I_CHAR* aKeys_002_032_007_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_007_004_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_007_004_000;
   const BFSubstitutionSet SubSet_002_032_007_004_000(
    &aKeys_002_032_007_004_000[0], &aValues_002_032_007_004_000[0] );
   // Substitution set NetWorthCodeSet.  Language: esEs
   static const I_CHAR* aKeys_002_032_008_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_008_000_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_008_000_000;
   const BFSubstitutionSet SubSet_002_032_008_000_000(
    &aKeys_002_032_008_000_000[0], &aValues_002_032_008_000_000[0] );
   // Substitution set NetWorthCodeSet.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_032_008_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_008_003_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_008_003_000;
   const BFSubstitutionSet SubSet_002_032_008_003_000(
    &aKeys_002_032_008_003_000[0], &aValues_002_032_008_003_000[0] );
   // Substitution set NetWorthCodeSet.  Language: esEs, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_032_008_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_008_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_008_003_017;
   const BFSubstitutionSet SubSet_002_032_008_003_017(
    &aKeys_002_032_008_003_017[0], &aValues_002_032_008_003_017[0] );
   // Substitution set NetWorthCodeSet.  Language: esEs, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_032_008_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_008_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_008_003_018;
   const BFSubstitutionSet SubSet_002_032_008_003_018(
    &aKeys_002_032_008_003_018[0], &aValues_002_032_008_003_018[0] );
   // Substitution set NetWorthCodeSet.  Language: esEs, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_032_008_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_008_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_008_003_019;
   const BFSubstitutionSet SubSet_002_032_008_003_019(
    &aKeys_002_032_008_003_019[0], &aValues_002_032_008_003_019[0] );
   // Substitution set NetWorthCodeSet.  Language: esEs, Market: 4
   static const I_CHAR* aKeys_002_032_008_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_008_004_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_008_004_000;
   const BFSubstitutionSet SubSet_002_032_008_004_000(
    &aKeys_002_032_008_004_000[0], &aValues_002_032_008_004_000[0] );
   // Substitution set NetWorthCodeSet.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_032_009_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_009_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_009_003_000;
   const BFSubstitutionSet SubSet_002_032_009_003_000(
    &aKeys_002_032_009_003_000[0], &aValues_002_032_009_003_000[0] );
   // Substitution set NetWorthCodeSet.  Language: enGB, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_032_009_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_009_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_009_003_017;
   const BFSubstitutionSet SubSet_002_032_009_003_017(
    &aKeys_002_032_009_003_017[0], &aValues_002_032_009_003_017[0] );
   // Substitution set NetWorthCodeSet.  Language: enGB, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_032_009_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_009_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_009_003_018;
   const BFSubstitutionSet SubSet_002_032_009_003_018(
    &aKeys_002_032_009_003_018[0], &aValues_002_032_009_003_018[0] );
   // Substitution set NetWorthCodeSet.  Language: enGB, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_032_009_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_009_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_009_003_019;
   const BFSubstitutionSet SubSet_002_032_009_003_019(
    &aKeys_002_032_009_003_019[0], &aValues_002_032_009_003_019[0] );
   // Substitution set NetWorthCodeSet.  Language: enGB, Market: 4
   static const I_CHAR* aKeys_002_032_009_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_009_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_009_004_000;
   const BFSubstitutionSet SubSet_002_032_009_004_000(
    &aKeys_002_032_009_004_000[0], &aValues_002_032_009_004_000[0] );
   // Substitution set NetWorthCodeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_032_010_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_010_000_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_010_000_000;
   const BFSubstitutionSet SubSet_002_032_010_000_000(
    &aKeys_002_032_010_000_000[0], &aValues_002_032_010_000_000[0] );
   // Substitution set NetWorthCodeSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_032_010_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_010_003_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_010_003_000;
   const BFSubstitutionSet SubSet_002_032_010_003_000(
    &aKeys_002_032_010_003_000[0], &aValues_002_032_010_003_000[0] );
   // Substitution set NetWorthCodeSet.  Language: nlNL, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_032_010_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_010_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_010_003_017;
   const BFSubstitutionSet SubSet_002_032_010_003_017(
    &aKeys_002_032_010_003_017[0], &aValues_002_032_010_003_017[0] );
   // Substitution set NetWorthCodeSet.  Language: nlNL, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_032_010_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_010_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_010_003_018;
   const BFSubstitutionSet SubSet_002_032_010_003_018(
    &aKeys_002_032_010_003_018[0], &aValues_002_032_010_003_018[0] );
   // Substitution set NetWorthCodeSet.  Language: nlNL, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_032_010_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_010_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_010_003_019;
   const BFSubstitutionSet SubSet_002_032_010_003_019(
    &aKeys_002_032_010_003_019[0], &aValues_002_032_010_003_019[0] );
   // Substitution set NetWorthCodeSet.  Language: nlNL, Market: 4
   static const I_CHAR* aKeys_002_032_010_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      0x00
   };

   static const I_CHAR* aValues_002_032_010_004_000[] = {
      I_("Under $20,000"),
      I_("$20,000 - $50,000"),
      I_("$50,000 - $100,000"),
      I_("$100,000 - $250,000"),
      I_("$250,000 - $500,000"),
      I_("$500,000 - $600,000"),
      I_("Over $600,000"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_010_004_000;
   const BFSubstitutionSet SubSet_002_032_010_004_000(
    &aKeys_002_032_010_004_000[0], &aValues_002_032_010_004_000[0] );
   // Substitution set NetWorthCodeSet.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_032_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_011_003_000;
   const BFSubstitutionSet SubSet_002_032_011_003_000(
    &aKeys_002_032_011_003_000[0], &aValues_002_032_011_003_000[0] );
   // Substitution set NetWorthCodeSet.  Language: itIT, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_032_011_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_011_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_011_003_017;
   const BFSubstitutionSet SubSet_002_032_011_003_017(
    &aKeys_002_032_011_003_017[0], &aValues_002_032_011_003_017[0] );
   // Substitution set NetWorthCodeSet.  Language: itIT, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_032_011_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_011_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_011_003_018;
   const BFSubstitutionSet SubSet_002_032_011_003_018(
    &aKeys_002_032_011_003_018[0], &aValues_002_032_011_003_018[0] );
   // Substitution set NetWorthCodeSet.  Language: itIT, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_032_011_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_011_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_011_003_019;
   const BFSubstitutionSet SubSet_002_032_011_003_019(
    &aKeys_002_032_011_003_019[0], &aValues_002_032_011_003_019[0] );
   // Substitution set NetWorthCodeSet.  Language: itIT, Market: 4
   static const I_CHAR* aKeys_002_032_011_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_011_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_011_004_000;
   const BFSubstitutionSet SubSet_002_032_011_004_000(
    &aKeys_002_032_011_004_000[0], &aValues_002_032_011_004_000[0] );
   // Substitution set NetWorthCodeSet.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_032_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_012_003_000;
   const BFSubstitutionSet SubSet_002_032_012_003_000(
    &aKeys_002_032_012_003_000[0], &aValues_002_032_012_003_000[0] );
   // Substitution set NetWorthCodeSet.  Language: thTH, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_032_012_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_012_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_012_003_017;
   const BFSubstitutionSet SubSet_002_032_012_003_017(
    &aKeys_002_032_012_003_017[0], &aValues_002_032_012_003_017[0] );
   // Substitution set NetWorthCodeSet.  Language: thTH, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_032_012_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_012_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_012_003_018;
   const BFSubstitutionSet SubSet_002_032_012_003_018(
    &aKeys_002_032_012_003_018[0], &aValues_002_032_012_003_018[0] );
   // Substitution set NetWorthCodeSet.  Language: thTH, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_032_012_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_012_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_012_003_019;
   const BFSubstitutionSet SubSet_002_032_012_003_019(
    &aKeys_002_032_012_003_019[0], &aValues_002_032_012_003_019[0] );
   // Substitution set NetWorthCodeSet.  Language: thTH, Market: 4
   static const I_CHAR* aKeys_002_032_012_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_032_012_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_032_012_004_000;
   const BFSubstitutionSet SubSet_002_032_012_004_000(
    &aKeys_002_032_012_004_000[0], &aValues_002_032_012_004_000[0] );
   // Substitution set InvObjCode.  Language: enUS
   static const I_CHAR* aKeys_002_033_001_000_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_033_001_000_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      I_("Stability"),
      I_("Stability & Growth"),
      I_("Growth & Stability"),
      I_("Growth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_001_000_000;
   const BFSubstitutionSet SubSet_002_033_001_000_000(
    &aKeys_002_033_001_000_000[0], &aValues_002_033_001_000_000[0] );
   // Substitution set InvObjCode.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_033_001_003_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_001_003_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_001_003_000;
   const BFSubstitutionSet SubSet_002_033_001_003_000(
    &aKeys_002_033_001_003_000[0], &aValues_002_033_001_003_000[0] );
   // Substitution set InvObjCode.  Language: enUS, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_033_001_003_003[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_033_001_003_003[] = {
      I_("Aggressive Growth"),
      I_("Moderate Growth"),
      I_("Growth and Income"),
      I_("Income"),
      I_("Conservative"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_001_003_003;
   const BFSubstitutionSet SubSet_002_033_001_003_003(
    &aKeys_002_033_001_003_003[0], &aValues_002_033_001_003_003[0] );
   // Substitution set InvObjCode.  Language: enUS, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_033_001_003_011[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_033_001_003_011[] = {
      I_("Aggressive Growth"),
      I_("Moderate Growth"),
      I_("Growth and Income"),
      I_("Income"),
      I_("Conservative"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_001_003_011;
   const BFSubstitutionSet SubSet_002_033_001_003_011(
    &aKeys_002_033_001_003_011[0], &aValues_002_033_001_003_011[0] );
   // Substitution set InvObjCode.  Language: enUS, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_033_001_003_014[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_033_001_003_014[] = {
      I_("Aggressive Growth"),
      I_("Moderate Growth"),
      I_("Growth and Income"),
      I_("Income"),
      I_("Conservative"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_001_003_014;
   const BFSubstitutionSet SubSet_002_033_001_003_014(
    &aKeys_002_033_001_003_014[0], &aValues_002_033_001_003_014[0] );
   // Substitution set InvObjCode.  Language: enUS, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_033_001_003_017[] = {
      I_("01"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_033_001_003_017[] = {
      I_("Long Term Growth"),
      I_("Stability"),
      I_("Stability & Growth"),
      I_("Growth & Stability"),
      I_("Growth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_001_003_017;
   const BFSubstitutionSet SubSet_002_033_001_003_017(
    &aKeys_002_033_001_003_017[0], &aValues_002_033_001_003_017[0] );
   // Substitution set InvObjCode.  Language: enUS, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_033_001_003_018[] = {
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_033_001_003_018[] = {
      I_("Stability"),
      I_("Stability & Growth"),
      I_("Growth & Stability"),
      I_("Growth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_001_003_018;
   const BFSubstitutionSet SubSet_002_033_001_003_018(
    &aKeys_002_033_001_003_018[0], &aValues_002_033_001_003_018[0] );
   // Substitution set InvObjCode.  Language: enUS, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_033_001_003_019[] = {
      I_("01"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_033_001_003_019[] = {
      I_("Long Term Growth"),
      I_("Stability"),
      I_("Stability & Growth"),
      I_("Growth & Stability"),
      I_("Growth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_001_003_019;
   const BFSubstitutionSet SubSet_002_033_001_003_019(
    &aKeys_002_033_001_003_019[0], &aValues_002_033_001_003_019[0] );
   // Substitution set InvObjCode.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_033_001_004_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_001_004_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_001_004_000;
   const BFSubstitutionSet SubSet_002_033_001_004_000(
    &aKeys_002_033_001_004_000[0], &aValues_002_033_001_004_000[0] );
   // Substitution set InvObjCode.  Language: enCA
   static const I_CHAR* aKeys_002_033_003_000_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_003_000_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_003_000_000;
   const BFSubstitutionSet SubSet_002_033_003_000_000(
    &aKeys_002_033_003_000_000[0], &aValues_002_033_003_000_000[0] );
   // Substitution set InvObjCode.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_033_003_003_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_003_003_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_003_003_000;
   const BFSubstitutionSet SubSet_002_033_003_003_000(
    &aKeys_002_033_003_003_000[0], &aValues_002_033_003_003_000[0] );
   // Substitution set InvObjCode.  Language: enCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_033_003_003_003[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_003_003_003[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_003_003_003;
   const BFSubstitutionSet SubSet_002_033_003_003_003(
    &aKeys_002_033_003_003_003[0], &aValues_002_033_003_003_003[0] );
   // Substitution set InvObjCode.  Language: enCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_033_003_003_011[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_003_003_011[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_003_003_011;
   const BFSubstitutionSet SubSet_002_033_003_003_011(
    &aKeys_002_033_003_003_011[0], &aValues_002_033_003_003_011[0] );
   // Substitution set InvObjCode.  Language: enCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_033_003_003_014[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_003_003_014[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_003_003_014;
   const BFSubstitutionSet SubSet_002_033_003_003_014(
    &aKeys_002_033_003_003_014[0], &aValues_002_033_003_003_014[0] );
   // Substitution set InvObjCode.  Language: enCA, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_033_003_003_017[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_033_003_003_017[] = {
      I_("Long Term Growth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_003_003_017;
   const BFSubstitutionSet SubSet_002_033_003_003_017(
    &aKeys_002_033_003_003_017[0], &aValues_002_033_003_003_017[0] );
   // Substitution set InvObjCode.  Language: enCA, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_033_003_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_003_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_003_003_018;
   const BFSubstitutionSet SubSet_002_033_003_003_018(
    &aKeys_002_033_003_003_018[0], &aValues_002_033_003_003_018[0] );
   // Substitution set InvObjCode.  Language: enCA, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_033_003_003_019[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_033_003_003_019[] = {
      I_("Long Term Growth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_003_003_019;
   const BFSubstitutionSet SubSet_002_033_003_003_019(
    &aKeys_002_033_003_003_019[0], &aValues_002_033_003_003_019[0] );
   // Substitution set InvObjCode.  Language: enCA, Market: 4
   static const I_CHAR* aKeys_002_033_003_004_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_003_004_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_003_004_000;
   const BFSubstitutionSet SubSet_002_033_003_004_000(
    &aKeys_002_033_003_004_000[0], &aValues_002_033_003_004_000[0] );
   // Substitution set InvObjCode.  Language: frFR
   static const I_CHAR* aKeys_002_033_004_000_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_004_000_000[] = {
      I_("Growth and Income"),
      I_("Revenus"),
      I_("Croissance a long terme"),
      I_("Securite maximum"),
      I_("Epargne court terme"),
      I_("Benefices dus a speculations"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_004_000_000;
   const BFSubstitutionSet SubSet_002_033_004_000_000(
    &aKeys_002_033_004_000_000[0], &aValues_002_033_004_000_000[0] );
   // Substitution set InvObjCode.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_033_004_003_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_004_003_000[] = {
      I_("Growth and Income"),
      I_("Revenus"),
      I_("Croissance a long terme"),
      I_("Securite maximum"),
      I_("Epargne court terme"),
      I_("Benefices dus a speculations"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_004_003_000;
   const BFSubstitutionSet SubSet_002_033_004_003_000(
    &aKeys_002_033_004_003_000[0], &aValues_002_033_004_003_000[0] );
   // Substitution set InvObjCode.  Language: frFR, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_033_004_003_003[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_004_003_003[] = {
      I_("Growth and Income"),
      I_("Revenus"),
      I_("Croissance a long terme"),
      I_("Securite maximum"),
      I_("Epargne court terme"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_004_003_003;
   const BFSubstitutionSet SubSet_002_033_004_003_003(
    &aKeys_002_033_004_003_003[0], &aValues_002_033_004_003_003[0] );
   // Substitution set InvObjCode.  Language: frFR, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_033_004_003_011[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_004_003_011[] = {
      I_("Growth and Income"),
      I_("Revenus"),
      I_("Croissance a long terme"),
      I_("Securite maximum"),
      I_("Epargne court terme"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_004_003_011;
   const BFSubstitutionSet SubSet_002_033_004_003_011(
    &aKeys_002_033_004_003_011[0], &aValues_002_033_004_003_011[0] );
   // Substitution set InvObjCode.  Language: frFR, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_033_004_003_014[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_004_003_014[] = {
      I_("Growth and Income"),
      I_("Revenus"),
      I_("Croissance a long terme"),
      I_("Securite maximum"),
      I_("Epargne court terme"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_004_003_014;
   const BFSubstitutionSet SubSet_002_033_004_003_014(
    &aKeys_002_033_004_003_014[0], &aValues_002_033_004_003_014[0] );
   // Substitution set InvObjCode.  Language: frFR, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_033_004_003_017[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_033_004_003_017[] = {
      I_("Croissance a long terme"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_004_003_017;
   const BFSubstitutionSet SubSet_002_033_004_003_017(
    &aKeys_002_033_004_003_017[0], &aValues_002_033_004_003_017[0] );
   // Substitution set InvObjCode.  Language: frFR, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_033_004_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_004_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_004_003_018;
   const BFSubstitutionSet SubSet_002_033_004_003_018(
    &aKeys_002_033_004_003_018[0], &aValues_002_033_004_003_018[0] );
   // Substitution set InvObjCode.  Language: frFR, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_033_004_003_019[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_033_004_003_019[] = {
      I_("Croissance a long terme"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_004_003_019;
   const BFSubstitutionSet SubSet_002_033_004_003_019(
    &aKeys_002_033_004_003_019[0], &aValues_002_033_004_003_019[0] );
   // Substitution set InvObjCode.  Language: frFR, Market: 4
   static const I_CHAR* aKeys_002_033_004_004_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_004_004_000[] = {
      I_("Growth and Income"),
      I_("Revenus"),
      I_("Croissance a long terme"),
      I_("Securite maximum"),
      I_("Epargne court terme"),
      I_("Benefices dus a speculations"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_004_004_000;
   const BFSubstitutionSet SubSet_002_033_004_004_000(
    &aKeys_002_033_004_004_000[0], &aValues_002_033_004_004_000[0] );
   // Substitution set InvObjCode.  Language: frCA
   static const I_CHAR* aKeys_002_033_005_000_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_033_005_000_000[] = {
      I_("Croissance et revenu"),
      I_("Revenu"),
      I_("Croissance à long terme"),
      I_("Sécurité maximale"),
      I_("Épargne à court terme"),
      I_("Bénéfices de spéculation"),
      I_("Stabilité"),
      I_("Stabilité et croissance"),
      I_("Croissance et stabilité"),
      I_("Croissance"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_005_000_000;
   const BFSubstitutionSet SubSet_002_033_005_000_000(
    &aKeys_002_033_005_000_000[0], &aValues_002_033_005_000_000[0] );
   // Substitution set InvObjCode.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_033_005_003_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_005_003_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_005_003_000;
   const BFSubstitutionSet SubSet_002_033_005_003_000(
    &aKeys_002_033_005_003_000[0], &aValues_002_033_005_003_000[0] );
   // Substitution set InvObjCode.  Language: frCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_033_005_003_003[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_033_005_003_003[] = {
      I_("Aggressive Growth"),
      I_("Moderate Growth"),
      I_("Growth and Income"),
      I_("Income"),
      I_("Conservative"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_005_003_003;
   const BFSubstitutionSet SubSet_002_033_005_003_003(
    &aKeys_002_033_005_003_003[0], &aValues_002_033_005_003_003[0] );
   // Substitution set InvObjCode.  Language: frCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_033_005_003_011[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_033_005_003_011[] = {
      I_("Aggressive Growth"),
      I_("Moderate Growth"),
      I_("Growth and Income"),
      I_("Income"),
      I_("Conservative"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_005_003_011;
   const BFSubstitutionSet SubSet_002_033_005_003_011(
    &aKeys_002_033_005_003_011[0], &aValues_002_033_005_003_011[0] );
   // Substitution set InvObjCode.  Language: frCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_033_005_003_014[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_033_005_003_014[] = {
      I_("Aggressive Growth"),
      I_("Moderate Growth"),
      I_("Growth and Income"),
      I_("Income"),
      I_("Conservative"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_005_003_014;
   const BFSubstitutionSet SubSet_002_033_005_003_014(
    &aKeys_002_033_005_003_014[0], &aValues_002_033_005_003_014[0] );
   // Substitution set InvObjCode.  Language: frCA, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_033_005_003_017[] = {
      I_("01"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_033_005_003_017[] = {
      I_("Long Term Growth"),
      I_("Stabilité"),
      I_("Stabilité et croissance"),
      I_("Croissance et stabilité"),
      I_("Croissance"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_005_003_017;
   const BFSubstitutionSet SubSet_002_033_005_003_017(
    &aKeys_002_033_005_003_017[0], &aValues_002_033_005_003_017[0] );
   // Substitution set InvObjCode.  Language: frCA, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_033_005_003_018[] = {
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_033_005_003_018[] = {
      I_("Stabilité"),
      I_("Stabilité et croissance"),
      I_("Croissance et stabilité"),
      I_("Croissance"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_005_003_018;
   const BFSubstitutionSet SubSet_002_033_005_003_018(
    &aKeys_002_033_005_003_018[0], &aValues_002_033_005_003_018[0] );
   // Substitution set InvObjCode.  Language: frCA, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_033_005_003_019[] = {
      I_("01"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_033_005_003_019[] = {
      I_("Long Term Growth"),
      I_("Stabilité"),
      I_("Stabilité et croissance"),
      I_("Croissance et stabilité"),
      I_("Croissance"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_005_003_019;
   const BFSubstitutionSet SubSet_002_033_005_003_019(
    &aKeys_002_033_005_003_019[0], &aValues_002_033_005_003_019[0] );
   // Substitution set InvObjCode.  Language: frCA, Market: 4
   static const I_CHAR* aKeys_002_033_005_004_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_005_004_000[] = {
      I_("Croissance et revenu"),
      I_("Revenu"),
      I_("Croissance à long terme"),
      I_("Sécurité maximale"),
      I_("Épargne à court terme"),
      I_("Bénéfices de spéculation"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_005_004_000;
   const BFSubstitutionSet SubSet_002_033_005_004_000(
    &aKeys_002_033_005_004_000[0], &aValues_002_033_005_004_000[0] );
   // Substitution set InvObjCode.  Language: enIE
   static const I_CHAR* aKeys_002_033_006_000_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_006_000_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_006_000_000;
   const BFSubstitutionSet SubSet_002_033_006_000_000(
    &aKeys_002_033_006_000_000[0], &aValues_002_033_006_000_000[0] );
   // Substitution set InvObjCode.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_033_006_003_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_006_003_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_006_003_000;
   const BFSubstitutionSet SubSet_002_033_006_003_000(
    &aKeys_002_033_006_003_000[0], &aValues_002_033_006_003_000[0] );
   // Substitution set InvObjCode.  Language: enIE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_033_006_003_003[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_006_003_003[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_006_003_003;
   const BFSubstitutionSet SubSet_002_033_006_003_003(
    &aKeys_002_033_006_003_003[0], &aValues_002_033_006_003_003[0] );
   // Substitution set InvObjCode.  Language: enIE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_033_006_003_011[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_006_003_011[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_006_003_011;
   const BFSubstitutionSet SubSet_002_033_006_003_011(
    &aKeys_002_033_006_003_011[0], &aValues_002_033_006_003_011[0] );
   // Substitution set InvObjCode.  Language: enIE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_033_006_003_014[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_006_003_014[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_006_003_014;
   const BFSubstitutionSet SubSet_002_033_006_003_014(
    &aKeys_002_033_006_003_014[0], &aValues_002_033_006_003_014[0] );
   // Substitution set InvObjCode.  Language: enIE, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_033_006_003_017[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_033_006_003_017[] = {
      I_("Long Term Growth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_006_003_017;
   const BFSubstitutionSet SubSet_002_033_006_003_017(
    &aKeys_002_033_006_003_017[0], &aValues_002_033_006_003_017[0] );
   // Substitution set InvObjCode.  Language: enIE, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_033_006_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_006_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_006_003_018;
   const BFSubstitutionSet SubSet_002_033_006_003_018(
    &aKeys_002_033_006_003_018[0], &aValues_002_033_006_003_018[0] );
   // Substitution set InvObjCode.  Language: enIE, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_033_006_003_019[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_033_006_003_019[] = {
      I_("Long Term Growth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_006_003_019;
   const BFSubstitutionSet SubSet_002_033_006_003_019(
    &aKeys_002_033_006_003_019[0], &aValues_002_033_006_003_019[0] );
   // Substitution set InvObjCode.  Language: enIE, Market: 4
   static const I_CHAR* aKeys_002_033_006_004_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_006_004_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_006_004_000;
   const BFSubstitutionSet SubSet_002_033_006_004_000(
    &aKeys_002_033_006_004_000[0], &aValues_002_033_006_004_000[0] );
   // Substitution set InvObjCode.  Language: deDE
   static const I_CHAR* aKeys_002_033_007_000_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_007_000_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_007_000_000;
   const BFSubstitutionSet SubSet_002_033_007_000_000(
    &aKeys_002_033_007_000_000[0], &aValues_002_033_007_000_000[0] );
   // Substitution set InvObjCode.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_033_007_003_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_007_003_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_007_003_000;
   const BFSubstitutionSet SubSet_002_033_007_003_000(
    &aKeys_002_033_007_003_000[0], &aValues_002_033_007_003_000[0] );
   // Substitution set InvObjCode.  Language: deDE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_033_007_003_003[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_007_003_003[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_007_003_003;
   const BFSubstitutionSet SubSet_002_033_007_003_003(
    &aKeys_002_033_007_003_003[0], &aValues_002_033_007_003_003[0] );
   // Substitution set InvObjCode.  Language: deDE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_033_007_003_011[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_007_003_011[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_007_003_011;
   const BFSubstitutionSet SubSet_002_033_007_003_011(
    &aKeys_002_033_007_003_011[0], &aValues_002_033_007_003_011[0] );
   // Substitution set InvObjCode.  Language: deDE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_033_007_003_014[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_007_003_014[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_007_003_014;
   const BFSubstitutionSet SubSet_002_033_007_003_014(
    &aKeys_002_033_007_003_014[0], &aValues_002_033_007_003_014[0] );
   // Substitution set InvObjCode.  Language: deDE, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_033_007_003_017[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_033_007_003_017[] = {
      I_("Long Term Growth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_007_003_017;
   const BFSubstitutionSet SubSet_002_033_007_003_017(
    &aKeys_002_033_007_003_017[0], &aValues_002_033_007_003_017[0] );
   // Substitution set InvObjCode.  Language: deDE, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_033_007_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_007_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_007_003_018;
   const BFSubstitutionSet SubSet_002_033_007_003_018(
    &aKeys_002_033_007_003_018[0], &aValues_002_033_007_003_018[0] );
   // Substitution set InvObjCode.  Language: deDE, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_033_007_003_019[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_033_007_003_019[] = {
      I_("Long Term Growth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_007_003_019;
   const BFSubstitutionSet SubSet_002_033_007_003_019(
    &aKeys_002_033_007_003_019[0], &aValues_002_033_007_003_019[0] );
   // Substitution set InvObjCode.  Language: deDE, Market: 4
   static const I_CHAR* aKeys_002_033_007_004_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_007_004_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_007_004_000;
   const BFSubstitutionSet SubSet_002_033_007_004_000(
    &aKeys_002_033_007_004_000[0], &aValues_002_033_007_004_000[0] );
   // Substitution set InvObjCode.  Language: esEs
   static const I_CHAR* aKeys_002_033_008_000_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_008_000_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_008_000_000;
   const BFSubstitutionSet SubSet_002_033_008_000_000(
    &aKeys_002_033_008_000_000[0], &aValues_002_033_008_000_000[0] );
   // Substitution set InvObjCode.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_033_008_003_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_008_003_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_008_003_000;
   const BFSubstitutionSet SubSet_002_033_008_003_000(
    &aKeys_002_033_008_003_000[0], &aValues_002_033_008_003_000[0] );
   // Substitution set InvObjCode.  Language: esEs, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_033_008_003_003[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_008_003_003[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_008_003_003;
   const BFSubstitutionSet SubSet_002_033_008_003_003(
    &aKeys_002_033_008_003_003[0], &aValues_002_033_008_003_003[0] );
   // Substitution set InvObjCode.  Language: esEs, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_033_008_003_011[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_008_003_011[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_008_003_011;
   const BFSubstitutionSet SubSet_002_033_008_003_011(
    &aKeys_002_033_008_003_011[0], &aValues_002_033_008_003_011[0] );
   // Substitution set InvObjCode.  Language: esEs, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_033_008_003_014[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_033_008_003_014[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_008_003_014;
   const BFSubstitutionSet SubSet_002_033_008_003_014(
    &aKeys_002_033_008_003_014[0], &aValues_002_033_008_003_014[0] );
   // Substitution set InvObjCode.  Language: esEs, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_033_008_003_017[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_033_008_003_017[] = {
      I_("Long Term Growth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_008_003_017;
   const BFSubstitutionSet SubSet_002_033_008_003_017(
    &aKeys_002_033_008_003_017[0], &aValues_002_033_008_003_017[0] );
   // Substitution set InvObjCode.  Language: esEs, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_033_008_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_008_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_008_003_018;
   const BFSubstitutionSet SubSet_002_033_008_003_018(
    &aKeys_002_033_008_003_018[0], &aValues_002_033_008_003_018[0] );
   // Substitution set InvObjCode.  Language: esEs, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_033_008_003_019[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_033_008_003_019[] = {
      I_("Long Term Growth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_008_003_019;
   const BFSubstitutionSet SubSet_002_033_008_003_019(
    &aKeys_002_033_008_003_019[0], &aValues_002_033_008_003_019[0] );
   // Substitution set InvObjCode.  Language: esEs, Market: 4
   static const I_CHAR* aKeys_002_033_008_004_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_008_004_000[] = {
      I_("Growth and Income"),
      I_("Income"),
      I_("Long Term Growth"),
      I_("Maximum Security"),
      I_("Short Term Savings"),
      I_("Speculative Profits"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_008_004_000;
   const BFSubstitutionSet SubSet_002_033_008_004_000(
    &aKeys_002_033_008_004_000[0], &aValues_002_033_008_004_000[0] );
   // Substitution set InvObjCode.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_033_009_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_009_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_009_003_000;
   const BFSubstitutionSet SubSet_002_033_009_003_000(
    &aKeys_002_033_009_003_000[0], &aValues_002_033_009_003_000[0] );
   // Substitution set InvObjCode.  Language: enGB, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_033_009_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_009_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_009_003_003;
   const BFSubstitutionSet SubSet_002_033_009_003_003(
    &aKeys_002_033_009_003_003[0], &aValues_002_033_009_003_003[0] );
   // Substitution set InvObjCode.  Language: enGB, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_033_009_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_009_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_009_003_011;
   const BFSubstitutionSet SubSet_002_033_009_003_011(
    &aKeys_002_033_009_003_011[0], &aValues_002_033_009_003_011[0] );
   // Substitution set InvObjCode.  Language: enGB, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_033_009_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_009_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_009_003_014;
   const BFSubstitutionSet SubSet_002_033_009_003_014(
    &aKeys_002_033_009_003_014[0], &aValues_002_033_009_003_014[0] );
   // Substitution set InvObjCode.  Language: enGB, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_033_009_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_009_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_009_003_017;
   const BFSubstitutionSet SubSet_002_033_009_003_017(
    &aKeys_002_033_009_003_017[0], &aValues_002_033_009_003_017[0] );
   // Substitution set InvObjCode.  Language: enGB, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_033_009_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_009_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_009_003_018;
   const BFSubstitutionSet SubSet_002_033_009_003_018(
    &aKeys_002_033_009_003_018[0], &aValues_002_033_009_003_018[0] );
   // Substitution set InvObjCode.  Language: enGB, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_033_009_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_009_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_009_003_019;
   const BFSubstitutionSet SubSet_002_033_009_003_019(
    &aKeys_002_033_009_003_019[0], &aValues_002_033_009_003_019[0] );
   // Substitution set InvObjCode.  Language: enGB, Market: 4
   static const I_CHAR* aKeys_002_033_009_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_009_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_009_004_000;
   const BFSubstitutionSet SubSet_002_033_009_004_000(
    &aKeys_002_033_009_004_000[0], &aValues_002_033_009_004_000[0] );
   // Substitution set InvObjCode.  Language: nlNL
   static const I_CHAR* aKeys_002_033_010_000_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_010_000_000[] = {
      I_("Groei en inkomen"),
      I_("Inkomen"),
      I_("Langetermijn-groei"),
      I_("Maximale veiligheid"),
      I_("Spaargeld korte termijn"),
      I_("Speculatieve winsten"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_010_000_000;
   const BFSubstitutionSet SubSet_002_033_010_000_000(
    &aKeys_002_033_010_000_000[0], &aValues_002_033_010_000_000[0] );
   // Substitution set InvObjCode.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_033_010_003_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_010_003_000[] = {
      I_("Groei en inkomen"),
      I_("Inkomen"),
      I_("Langetermijn-groei"),
      I_("Maximale veiligheid"),
      I_("Spaargeld korte termijn"),
      I_("Speculatieve winsten"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_010_003_000;
   const BFSubstitutionSet SubSet_002_033_010_003_000(
    &aKeys_002_033_010_003_000[0], &aValues_002_033_010_003_000[0] );
   // Substitution set InvObjCode.  Language: nlNL, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_033_010_003_003[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_033_010_003_003[] = {
      I_("Agressieve groei"),
      I_("Bescheiden groei"),
      I_("Groei en inkomen"),
      I_("Inkomen"),
      I_("Conservatief"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_010_003_003;
   const BFSubstitutionSet SubSet_002_033_010_003_003(
    &aKeys_002_033_010_003_003[0], &aValues_002_033_010_003_003[0] );
   // Substitution set InvObjCode.  Language: nlNL, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_033_010_003_011[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_033_010_003_011[] = {
      I_("Agressieve groei"),
      I_("Bescheiden groei"),
      I_("Groei en inkomen"),
      I_("Inkomen"),
      I_("Conservatief"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_010_003_011;
   const BFSubstitutionSet SubSet_002_033_010_003_011(
    &aKeys_002_033_010_003_011[0], &aValues_002_033_010_003_011[0] );
   // Substitution set InvObjCode.  Language: nlNL, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_033_010_003_014[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_033_010_003_014[] = {
      I_("Agressieve groei"),
      I_("Bescheiden groei"),
      I_("Groei en inkomen"),
      I_("Inkomen"),
      I_("Conservatief"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_010_003_014;
   const BFSubstitutionSet SubSet_002_033_010_003_014(
    &aKeys_002_033_010_003_014[0], &aValues_002_033_010_003_014[0] );
   // Substitution set InvObjCode.  Language: nlNL, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_033_010_003_017[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_033_010_003_017[] = {
      I_("Langetermijn-groei"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_010_003_017;
   const BFSubstitutionSet SubSet_002_033_010_003_017(
    &aKeys_002_033_010_003_017[0], &aValues_002_033_010_003_017[0] );
   // Substitution set InvObjCode.  Language: nlNL, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_033_010_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_010_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_010_003_018;
   const BFSubstitutionSet SubSet_002_033_010_003_018(
    &aKeys_002_033_010_003_018[0], &aValues_002_033_010_003_018[0] );
   // Substitution set InvObjCode.  Language: nlNL, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_033_010_003_019[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_033_010_003_019[] = {
      I_("Langetermijn-groei"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_010_003_019;
   const BFSubstitutionSet SubSet_002_033_010_003_019(
    &aKeys_002_033_010_003_019[0], &aValues_002_033_010_003_019[0] );
   // Substitution set InvObjCode.  Language: nlNL, Market: 4
   static const I_CHAR* aKeys_002_033_010_004_000[] = {
      I_("02"),
      I_("03"),
      I_("01"),
      I_("05"),
      I_("04"),
      I_("06"),
      0x00
   };

   static const I_CHAR* aValues_002_033_010_004_000[] = {
      I_("Groei en inkomen"),
      I_("Inkomen"),
      I_("Langetermijn-groei"),
      I_("Maximale veiligheid"),
      I_("Spaargeld korte termijn"),
      I_("Speculatieve winsten"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_010_004_000;
   const BFSubstitutionSet SubSet_002_033_010_004_000(
    &aKeys_002_033_010_004_000[0], &aValues_002_033_010_004_000[0] );
   // Substitution set InvObjCode.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_033_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_011_003_000;
   const BFSubstitutionSet SubSet_002_033_011_003_000(
    &aKeys_002_033_011_003_000[0], &aValues_002_033_011_003_000[0] );
   // Substitution set InvObjCode.  Language: itIT, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_033_011_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_011_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_011_003_003;
   const BFSubstitutionSet SubSet_002_033_011_003_003(
    &aKeys_002_033_011_003_003[0], &aValues_002_033_011_003_003[0] );
   // Substitution set InvObjCode.  Language: itIT, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_033_011_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_011_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_011_003_011;
   const BFSubstitutionSet SubSet_002_033_011_003_011(
    &aKeys_002_033_011_003_011[0], &aValues_002_033_011_003_011[0] );
   // Substitution set InvObjCode.  Language: itIT, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_033_011_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_011_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_011_003_014;
   const BFSubstitutionSet SubSet_002_033_011_003_014(
    &aKeys_002_033_011_003_014[0], &aValues_002_033_011_003_014[0] );
   // Substitution set InvObjCode.  Language: itIT, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_033_011_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_011_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_011_003_017;
   const BFSubstitutionSet SubSet_002_033_011_003_017(
    &aKeys_002_033_011_003_017[0], &aValues_002_033_011_003_017[0] );
   // Substitution set InvObjCode.  Language: itIT, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_033_011_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_011_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_011_003_018;
   const BFSubstitutionSet SubSet_002_033_011_003_018(
    &aKeys_002_033_011_003_018[0], &aValues_002_033_011_003_018[0] );
   // Substitution set InvObjCode.  Language: itIT, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_033_011_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_011_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_011_003_019;
   const BFSubstitutionSet SubSet_002_033_011_003_019(
    &aKeys_002_033_011_003_019[0], &aValues_002_033_011_003_019[0] );
   // Substitution set InvObjCode.  Language: itIT, Market: 4
   static const I_CHAR* aKeys_002_033_011_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_011_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_011_004_000;
   const BFSubstitutionSet SubSet_002_033_011_004_000(
    &aKeys_002_033_011_004_000[0], &aValues_002_033_011_004_000[0] );
   // Substitution set InvObjCode.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_033_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_012_003_000;
   const BFSubstitutionSet SubSet_002_033_012_003_000(
    &aKeys_002_033_012_003_000[0], &aValues_002_033_012_003_000[0] );
   // Substitution set InvObjCode.  Language: thTH, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_033_012_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_012_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_012_003_003;
   const BFSubstitutionSet SubSet_002_033_012_003_003(
    &aKeys_002_033_012_003_003[0], &aValues_002_033_012_003_003[0] );
   // Substitution set InvObjCode.  Language: thTH, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_033_012_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_012_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_012_003_011;
   const BFSubstitutionSet SubSet_002_033_012_003_011(
    &aKeys_002_033_012_003_011[0], &aValues_002_033_012_003_011[0] );
   // Substitution set InvObjCode.  Language: thTH, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_033_012_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_012_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_012_003_014;
   const BFSubstitutionSet SubSet_002_033_012_003_014(
    &aKeys_002_033_012_003_014[0], &aValues_002_033_012_003_014[0] );
   // Substitution set InvObjCode.  Language: thTH, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_033_012_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_012_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_012_003_017;
   const BFSubstitutionSet SubSet_002_033_012_003_017(
    &aKeys_002_033_012_003_017[0], &aValues_002_033_012_003_017[0] );
   // Substitution set InvObjCode.  Language: thTH, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_033_012_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_012_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_012_003_018;
   const BFSubstitutionSet SubSet_002_033_012_003_018(
    &aKeys_002_033_012_003_018[0], &aValues_002_033_012_003_018[0] );
   // Substitution set InvObjCode.  Language: thTH, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_033_012_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_012_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_012_003_019;
   const BFSubstitutionSet SubSet_002_033_012_003_019(
    &aKeys_002_033_012_003_019[0], &aValues_002_033_012_003_019[0] );
   // Substitution set InvObjCode.  Language: thTH, Market: 4
   static const I_CHAR* aKeys_002_033_012_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_033_012_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_033_012_004_000;
   const BFSubstitutionSet SubSet_002_033_012_004_000(
    &aKeys_002_033_012_004_000[0], &aValues_002_033_012_004_000[0] );
   // Substitution set OccupationCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_034_001_000_000[] = {
      I_("02"),
      I_("03"),
      I_("06"),
      I_("04"),
      I_("07"),
      I_("08"),
      I_("05"),
      I_("01"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("89"),
      I_("90"),
      I_("91"),
      I_("92"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("96"),
      I_("97"),
      I_("98"),
      I_("99"),
      I_("100"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("106"),
      I_("107"),
      I_("108"),
      I_("109"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("117"),
      I_("118"),
      I_("119"),
      I_("120"),
      I_("121"),
      I_("122"),
      I_("123"),
      I_("124"),
      I_("125"),
      I_("126"),
      I_("127"),
      I_("128"),
      I_("129"),
      I_("130"),
      I_("131"),
      I_("132"),
      I_("133"),
      I_("134"),
      I_("135"),
      I_("136"),
      I_("137"),
      I_("138"),
      I_("139"),
      I_("140"),
      I_("141"),
      I_("142"),
      I_("143"),
      I_("144"),
      I_("145"),
      I_("146"),
      I_("147"),
      I_("148"),
      I_("149"),
      I_("150"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("154"),
      I_("155"),
      I_("156"),
      I_("157"),
      I_("158"),
      I_("159"),
      I_("160"),
      I_("161"),
      I_("162"),
      I_("163"),
      I_("164"),
      I_("165"),
      I_("166"),
      I_("167"),
      I_("168"),
      I_("169"),
      I_("170"),
      I_("171"),
      I_("172"),
      I_("173"),
      I_("174"),
      I_("175"),
      I_("176"),
      I_("177"),
      I_("178"),
      I_("179"),
      I_("180"),
      0x00
   };

   static const I_CHAR* aValues_002_034_001_000_000[] = {
      I_("Accountant"),
      I_("Actuary"),
      I_("Clerical"),
      I_("Manager"),
      I_("Mechanic"),
      I_("Other"),
      I_("Technician"),
      I_("Lawyer"),
      I_("Doctor"),
      I_("Dentist"),
      I_("Notary"),
      I_("Pharmacist"),
      I_("Architect"),
      I_("Orthi"),
      I_("Engineer"),
      I_("Ortho"),
      I_("CGA"),
      I_("CMA"),
      I_("ADM AGREES"),
      I_("FMRQ"),
      I_("General Practitioner"),
      I_("Children's Physician"),
      I_("Children's Dentist"),
      I_("Children's Notary"),
      I_("Children's Pharmacist"),
      I_("Children's Architect"),
      I_("Joint Physician"),
      I_("Human Resource"),
      I_("Forest Engineer"),
      I_("Orthophonist & Audiologist"),
      I_("General Accountant"),
      I_("Management Accountant"),
      I_("Joint Architect"),
      I_("Joint Dentist"),
      I_("Joint Accountant"),
      I_("Joint Pharmacist"),
      I_("Accountant Other"),
      I_("Dentist Other"),
      I_("Pharmacist Other"),
      I_("Physician Other"),
      I_("Architect Other"),
      I_("Joint Notary"),
      I_("Notary Other"),
      I_("FMSQ & Co Employee"),
      I_("Accountant/Auditor/Finance"),
      I_("Administration/Customer Service"),
      I_("Analyst/Consultant/Project Manager"),
      I_("Human Resources/Payroll/Recruitment"),
      I_("Lawyer (Corporate/Associate)/Compliance"),
      I_("Management/Manager/Supervisor"),
      I_("Marketing/Sales"),
      I_("Owner/Executive/Officer"),
      I_("Persons with Disabilities (no prior occupation)"),
      I_("Retired"),
      I_("Technology Management/Support"),
      I_("Unemployed"),
      I_("Agriculturist/Worker"),
      I_("Cigarette/Cannabis distribution"),
      I_("Farmer (crop)"),
      I_("Farmer (livestock)"),
      I_("Fisheries Worker"),
      I_("Forestry Worker"),
      I_("Landscaping Worker"),
      I_("Mining/Metals Worker"),
      I_("Oil/Gas Sector Worker"),
      I_("Trapper/Hunter"),
      I_("Actor/Artist/Author/Designer"),
      I_("Athlete/Coach/Trainer/Official"),
      I_("Facility Staff (teams, clubs, stadiums)"),
      I_("Gallery/Theatre/Film Production"),
      I_("Gambling/Casino/Lottery Employee"),
      I_("Journalist/Editor/Broadcaster"),
      I_("Musician/Conductor/Dancer"),
      I_("Photographer"),
      I_("Sports and Recreation Worker"),
      I_("Writer/Translator/Communications"),
      I_("Child Care/Daycare"),
      I_("Counsellor"),
      I_("Librarians, archivists, conservators and curators"),
      I_("Principal/Dean"),
      I_("Professor/Teacher/Instructor"),
      I_("Student"),
      I_("Actuary/Statistician/Mathematician"),
      I_("Agent/Broker/Financial Planner"),
      I_("ATM Owner/Operator"),
      I_("Bank/Trust/Credit Union Teller"),
      I_("Financial Investor/Day Trader"),
      I_("Insurance Adjuster/Underwriter"),
      I_("Money Service Business Worker"),
      I_("Councilor for Municipality or Region"),
      I_("Deputy Minister/Crown Corp/Agency Executive"),
      I_("Diplomat/Ambassador"),
      I_("Member of Legislature/Mayor"),
      I_("Policy Advisor"),
      I_("Dietician/Nutritionist"),
      I_("Doctor - Specialists"),
      I_("Doctor (Family)/Dentist"),
      I_("Health Practioner-Other"),
      I_("Home Care Workers"),
      I_("Massage/Spa - Registered"),
      I_("Massage/Spa - Unregistered"),
      I_("Nurse/Midwife/Therapists"),
      I_("Pharmaceutical Sales Representative"),
      I_("Pharmacist"),
      I_("Psychologist/Social Worker/Counsellor"),
      I_("Technical Health/Dental Occupations"),
      I_("Veterinarian"),
      I_("Veterinary Support/Animal Care"),
      I_("Butcher/Food Manufacturing"),
      I_("Chef/Baker/Cook/Catering"),
      I_("Event/Conference Planner"),
      I_("Facility Services/Janitor/Cleaning"),
      I_("Hotel Services Worker"),
      I_("Restaurant Worker"),
      I_("Tourism/Amusement Park/Arcade"),
      I_("Ambulance/Paramedics/Firefighters"),
      I_("Judge/Justice of the Peace"),
      I_("Law Clerk/Paralegal/Legal Assistant"),
      I_("Law Enforcement Officer/Corrections/Parole"),
      I_("Lawyer (Partner or with Trust Account)"),
      I_("Notary Public"),
      I_("Security Guard/Installer/Investigators"),
      I_("Arms/Ammunition/Military Sales/Worker"),
      I_("Commissioned Officer"),
      I_("Non-Commissioned Member"),
      I_("Senior Officer (Level 0/1)"),
      I_("Art or Antique Dealer"),
      I_("Auction/Consignment Store/Pawn Broker"),
      I_("Bar/Nightclub/Adult Entertainment Worker"),
      I_("Charity - Registered"),
      I_("Charity - Unregistered"),
      I_("Convenience Store"),
      I_("Fashion industry  worker"),
      I_("Food/Grocery Employee"),
      I_("Funeral Service Worker/Director"),
      I_("Hair Care/Beautician/Nails/Cosmetics"),
      I_("Homemaker (no prior career)"),
      I_("Liquor Store Employee"),
      I_("Liquor Store Owner (Non-Government)"),
      I_("Non-Gov Organizations"),
      I_("Not-for-profit (non charity)"),
      I_("Parking Attendant/Garages"),
      I_("Precious Metals, Stones and Jewel Dealers"),
      I_("Real estate Agents/Brokers"),
      I_("Religious Worker"),
      I_("Retail Goods Store employee"),
      I_("Supply Chain/Logistics Worker"),
      I_("Telemarketing/Collections/Recoveries"),
      I_("Vending Machine Operator"),
      I_("Agriculture/Biology/Food Scientist"),
      I_("Chemist/Physicist"),
      I_("Geologist/Archeology"),
      I_("Multimedia publishing/Web Designer"),
      I_("Scientist in natural sciences"),
      I_("Software Design/Engineer/Developer"),
      I_("Systems Analyst/Programmer/Developer"),
      I_("Technical Writer/Communicator"),
      I_("Technologist/Technician"),
      I_("Architects/Planners/Engineers"),
      I_("Building Trades/Helpers/Labourers"),
      I_("Buyer/Supply Chain"),
      I_("Contractor/Supervisors"),
      I_("Electrician/Plumber/HVAC & Apprentices"),
      I_("Factory Worker/Labourer"),
      I_("Heavy Equipment Worker"),
      I_("Public Works Maintenance"),
      I_("Skilled Tradesperson/Labourer"),
      I_("Waste/Recycling Collector"),
      I_("Yard Worker"),
      I_("Air Controller"),
      I_("Airport Worker/Flight Attendant"),
      I_("Boat and Plane dealerships"),
      I_("Driver/Delivery Person/Postal Worker"),
      I_("Driver/Pilot/Engineer/(Truck/Bus/Rail/Plane)"),
      I_("New/Used Car/Truck dealership"),
      I_("Taxi/Limousine"),
      I_("Warehouse/Logistics/Shipping - Domestic"),
      I_("Warehouse/Logistics/Shipping/International"),
      I_("Travel Agent"),
      I_("Mechanic/Machinist/Tool & Die"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_034_001_000_000;
   const BFSubstitutionSet SubSet_002_034_001_000_000(
    &aKeys_002_034_001_000_000[0], &aValues_002_034_001_000_000[0] );
   // Substitution set OccupationCodeSet.  Language: enCA
   static const I_CHAR* aKeys_002_034_003_000_000[] = {
      I_("02"),
      I_("03"),
      I_("06"),
      I_("04"),
      I_("07"),
      I_("08"),
      I_("05"),
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_034_003_000_000[] = {
      I_("Accountant"),
      I_("Actuary"),
      I_("Clerical"),
      I_("Manager"),
      I_("Mechanic"),
      I_("Other"),
      I_("Technician"),
      I_("Lawyer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_034_003_000_000;
   const BFSubstitutionSet SubSet_002_034_003_000_000(
    &aKeys_002_034_003_000_000[0], &aValues_002_034_003_000_000[0] );
   // Substitution set OccupationCodeSet.  Language: frFR
   static const I_CHAR* aKeys_002_034_004_000_000[] = {
      I_("02"),
      I_("03"),
      I_("06"),
      I_("04"),
      I_("07"),
      I_("08"),
      I_("05"),
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_034_004_000_000[] = {
      I_("Comptable"),
      I_("Actuaire"),
      I_("Employe de bureau"),
      I_("Directeur"),
      I_("Mechanic"),
      I_("Autre"),
      I_("Technicien"),
      I_("Avocat"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_034_004_000_000;
   const BFSubstitutionSet SubSet_002_034_004_000_000(
    &aKeys_002_034_004_000_000[0], &aValues_002_034_004_000_000[0] );
   // Substitution set OccupationCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_034_005_000_000[] = {
      I_("02"),
      I_("03"),
      I_("06"),
      I_("04"),
      I_("07"),
      I_("08"),
      I_("05"),
      I_("01"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("89"),
      I_("90"),
      I_("91"),
      I_("92"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("96"),
      I_("97"),
      I_("98"),
      I_("99"),
      I_("100"),
      I_("101"),
      I_("102"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("106"),
      I_("107"),
      I_("108"),
      I_("109"),
      I_("110"),
      I_("111"),
      I_("112"),
      I_("113"),
      I_("114"),
      I_("115"),
      I_("116"),
      I_("117"),
      I_("118"),
      I_("119"),
      I_("120"),
      I_("121"),
      I_("122"),
      I_("123"),
      I_("124"),
      I_("125"),
      I_("126"),
      I_("127"),
      I_("128"),
      I_("129"),
      I_("130"),
      I_("131"),
      I_("132"),
      I_("133"),
      I_("134"),
      I_("135"),
      I_("136"),
      I_("137"),
      I_("138"),
      I_("139"),
      I_("140"),
      I_("141"),
      I_("142"),
      I_("143"),
      I_("144"),
      I_("145"),
      I_("146"),
      I_("147"),
      I_("148"),
      I_("149"),
      I_("150"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("154"),
      I_("155"),
      I_("156"),
      I_("157"),
      I_("158"),
      I_("159"),
      I_("160"),
      I_("161"),
      I_("162"),
      I_("163"),
      I_("164"),
      I_("165"),
      I_("166"),
      I_("167"),
      I_("168"),
      I_("169"),
      I_("170"),
      I_("171"),
      I_("172"),
      I_("173"),
      I_("174"),
      I_("175"),
      I_("176"),
      I_("177"),
      I_("178"),
      I_("179"),
      I_("180"),
      0x00
   };

   static const I_CHAR* aValues_002_034_005_000_000[] = {
      I_("Comptable"),
      I_("Actuaire"),
      I_("Employé de bureau"),
      I_("Directeur/gestionnaire"),
      I_("Mécanicien"),
      I_("Autre"),
      I_("Technicien"),
      I_("Avocat"),
      I_("Médecin"),
      I_("Dentiste"),
      I_("Notaire"),
      I_("Pharmacien"),
      I_("Architecte"),
      I_("Orthi"),
      I_("Ingénieur"),
      I_("Ortho"),
      I_("CGA"),
      I_("CMA"),
      I_("Administrateur agréé"),
      I_("Fonctionnaire du ministère du Revenu du Québec"),
      I_("Omnipraticien"),
      I_("Pédiatre"),
      I_("Dentiste pédiatrique"),
      I_("Notaire pédiatrique"),
      I_("Pharmacien pédiatrique"),
      I_("Architecte pédiatrique"),
      I_("Médecin commun"),
      I_("Ressources humaines"),
      I_("Ingénieur forestier"),
      I_("Orthophoniste et audiologiste"),
      I_("Comptable général"),
      I_("Comptable en gestion"),
      I_("Architecte commun"),
      I_("Dentiste commun"),
      I_("Comptable commun"),
      I_("Pharmacien commun"),
      I_("Autre comptable"),
      I_("Autre dentiste"),
      I_("Autre pharmacien"),
      I_("Autre médecin"),
      I_("Autre architecte"),
      I_("Joint Notary"),
      I_("Notary Other"),
      I_("FMSQ & Co Employee"),
      I_("Comptabilité/Audit/Finance"),
      I_("Administration/Service à la clientèle"),
      I_("Analyste/Consultant/Gestionnaire de projet"),
      I_("Ressources humaines/Paie/Recrutement"),
      I_("Droit (entreprise/collaborateur)/Conformité"),
      I_("Gestion/Gestionnaire/Supervision"),
      I_("Marketing/Ventes"),
      I_("Propriétaire/Dirigeant/Cadre"),
      I_("Personnes handicapées (aucun emploi précédent)"),
      I_("Retraité"),
      I_("Technologie/Gestion/Soutien"),
      I_("Sans emploi"),
      I_("Agriculteur/Travailleur"),
      I_("Cigarette/Distribution de cannabis"),
      I_("Agriculture (récolte)"),
      I_("Agriculture (cheptel)"),
      I_("Pêcheur"),
      I_("Travailleur forestier"),
      I_("Aménagement paysager"),
      I_("Extraction minière/Travailleur du secteur des métaux"),
      I_("Travailleur des secteurs Pétrole/Gaz"),
      I_("Piégeur/Chasseur"),
      I_("Acteur/Artiste/Auteur/Concepteur"),
      I_("Athlète/Entraineur/Préposé/Officiel"),
      I_("Employé technique (équipes, clubs, stades)"),
      I_("Galerie/Théâtre/Production audiovisuelle"),
      I_("Employé d'établissement de jeu/Casino/Loterie"),
      I_("Journaliste/Rédacteur en chef/Diffuseur"),
      I_("Musicien/Chef d'orchestre/Danseur"),
      I_("Photographe"),
      I_("Employé dans le secteur des sports et des loisirs"),
      I_("Écrivain/Traducteur/Communications"),
      I_("Puériculture/Garderie"),
      I_("Conseiller"),
      I_("Libraire, archivistes, conservateurs et curateurs"),
      I_("Principal/Doyen"),
      I_("Professeur/Instructeur"),
      I_("Étudiant"),
      I_("Actuaire/Statisticien/Mathématicien"),
      I_("Agent/Courtier/Planification financière"),
      I_("Propriétaire de GA/Opérateur"),
      I_("Banque/Fiducie/Caissier Credit Union"),
      I_("Investisseur financier/Spéculateur sur séance"),
      I_("Expert/Souscripteur en assurance"),
      I_("Employé d'entreprise de services monétaires"),
      I_("Conseiller municipal ou régional"),
      I_("Ministère adjoint/Société de la couronne/Cadre de la fonction publique"),
      I_("Diplomate/Ambassadeur"),
      I_("Membre d'une assemblée législative/Maire"),
      I_("Conseiller public"),
      I_("Diététicien/Nutritionniste"),
      I_("Docteur - Spécialistes"),
      I_("Médecin de famille/Dentiste"),
      I_("Praticien médical - Autre"),
      I_("Soins de santé à domicile"),
      I_("Massage/Spa - autorisé"),
      I_("Massage/Spa - non autorisé"),
      I_("Infirmière/Sage-femme/Thérapeute"),
      I_("Représentant pharmaceutique"),
      I_("Pharmacien"),
      I_("Psychologue/Travailleur social/Conseiller"),
      I_("Praticien de santé/dentaire"),
      I_("Vétérinaire"),
      I_("Soutien vétérinaire/Soins des animaux"),
      I_("Transformation alimentaire/Boucherie"),
      I_("Chef/Boulanger-pâtissier/Restauration"),
      I_("Planification de conférences/Évènements"),
      I_("Services immobiliers/Conciergerie/Nettoyage"),
      I_("Employé d'hôtellerie"),
      I_("Employé de restauration"),
      I_("Tourisme/Parc d'attraction/Salle de jeux électroniques"),
      I_("Ambulance/Paramédical/Pompiers"),
      I_("Juge/Juge de paix"),
      I_("Assistant judiciaire/Parajuriste/Assistant juridique"),
      I_("Agent de police/Services correctionnels/Liberté conditionnelle"),
      I_("Avocat (associé ou avec compte en fiducie)"),
      I_("Notaire public"),
      I_("Gardien de sécurité/Installateur/Investigateurs"),
      I_("Armes/Munitions/Ventes militaires/Travailleur"),
      I_("Officier commissionné"),
      I_("Membre non commissionné"),
      I_("Officier principal (niveau 0/1)"),
      I_("Art/Antiquaire"),
      I_("Adjudication/Établissement de consignation/Prêteur sur gage"),
      I_("Bar/Boîte de nuit/Divertissement pour adulte"),
      I_("Organisme de bienfaisance - autorisé"),
      I_("Organisme de bienfaisance - non autorisé"),
      I_("Dépanneurs"),
      I_("Travailleur du secteur de la mode"),
      I_("Alimentation/Épicerie"),
      I_("Employé/Directeur de services funéraires"),
      I_("Soins capillaires/Esthétique/Ongles/Cosmétiques"),
      I_("Auxiliaire familial (aucune expérience précédente)"),
      I_("Employé de magasin d'alcool"),
      I_("Propriétaire de magasin d'alcool (non public)"),
      I_("Organisation non gouvernementale"),
      I_("Organisme sans but lucratif (autre que de bienfaisance)"),
      I_("Employé de stationnement/Garages"),
      I_("Pierres et métaux précieux, joaillerie"),
      I_("Agents immobilier/Courtiers"),
      I_("Travailleur religieux"),
      I_("Employé de magasin général et détaillant"),
      I_("Chaine d'approvisionnement/Logistique"),
      I_("Télémarketing/recouvrement"),
      I_("Exploitant de distributeurs automatiques"),
      I_("Agriculture/Biologie/Sciences de la nutrition"),
      I_("Chimie/Physique"),
      I_("Géologie/Archéologie"),
      I_("Édition multimédia/Concepteur Web"),
      I_("Scientifique/Sciences naturelles"),
      I_("Conception de logiciel/Ingénieur/Développeur"),
      I_("Analyste système/Programmation/Développeur"),
      I_("Rédacteur technique/Communicateur"),
      I_("Technologue/Technicien"),
      I_("Architecture/Planificateurs/Ingénieurs"),
      I_("Construction/Auxiliaire/Ouvrier"),
      I_("Acheteur/Chaîne d'approvisionnement"),
      I_("Entrepreneur/Superviseur"),
      I_("Électricien/Plombier/CVCA et apprentis"),
      I_("Ouvrier"),
      I_("Travailleur sur équipement lourd"),
      I_("Entretien travaux publics"),
      I_("Personne de métier qualifié/Ouvrier"),
      I_("Déchet/Collecte et recyclage"),
      I_("Ouvrier de gare de triage"),
      I_("Contrôleur aérien"),
      I_("Employé d'aéroport/Agent de bord"),
      I_("Concessionnaires avions/Concessionnaires bateaux"),
      I_("Chauffeur/Livreur/Postier"),
      I_("Chauffeur/Pilote/Ingénierie (Camion/Bus/Rail/Avion)"),
      I_("Concessions automobiles/camions neufs/usagés"),
      I_("Taxi/Limousine"),
      I_("Commerce de gros/Logistique/Transport/Intérieur"),
      I_("Commerce de gros/Logistique/Transport/International"),
      I_("Agent de voyage"),
      I_("Mécanicien/Usineur/Moules et outils"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_034_005_000_000;
   const BFSubstitutionSet SubSet_002_034_005_000_000(
    &aKeys_002_034_005_000_000[0], &aValues_002_034_005_000_000[0] );
   // Substitution set OccupationCodeSet.  Language: enIE
   static const I_CHAR* aKeys_002_034_006_000_000[] = {
      I_("02"),
      I_("03"),
      I_("06"),
      I_("04"),
      I_("07"),
      I_("08"),
      I_("05"),
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_034_006_000_000[] = {
      I_("Accountant"),
      I_("Actuary"),
      I_("Clerical"),
      I_("Manager"),
      I_("Mechanic"),
      I_("Other"),
      I_("Technician"),
      I_("Lawyer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_034_006_000_000;
   const BFSubstitutionSet SubSet_002_034_006_000_000(
    &aKeys_002_034_006_000_000[0], &aValues_002_034_006_000_000[0] );
   // Substitution set OccupationCodeSet.  Language: deDE
   static const I_CHAR* aKeys_002_034_007_000_000[] = {
      I_("02"),
      I_("03"),
      I_("06"),
      I_("04"),
      I_("07"),
      I_("08"),
      I_("05"),
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_034_007_000_000[] = {
      I_("Accountant"),
      I_("Actuary"),
      I_("Clerical"),
      I_("Manager"),
      I_("Mechanic"),
      I_("Other"),
      I_("Technician"),
      I_("Lawyer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_034_007_000_000;
   const BFSubstitutionSet SubSet_002_034_007_000_000(
    &aKeys_002_034_007_000_000[0], &aValues_002_034_007_000_000[0] );
   // Substitution set OccupationCodeSet.  Language: esEs
   static const I_CHAR* aKeys_002_034_008_000_000[] = {
      I_("02"),
      I_("03"),
      I_("06"),
      I_("04"),
      I_("07"),
      I_("08"),
      I_("05"),
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_034_008_000_000[] = {
      I_("Accountant"),
      I_("Actuary"),
      I_("Clerical"),
      I_("Manager"),
      I_("Mechanic"),
      I_("Other"),
      I_("Technician"),
      I_("Lawyer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_034_008_000_000;
   const BFSubstitutionSet SubSet_002_034_008_000_000(
    &aKeys_002_034_008_000_000[0], &aValues_002_034_008_000_000[0] );
   // Substitution set OccupationCodeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_034_010_000_000[] = {
      I_("02"),
      I_("03"),
      I_("06"),
      I_("04"),
      I_("07"),
      I_("08"),
      I_("05"),
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_034_010_000_000[] = {
      I_("Accountant"),
      I_("Actuaris"),
      I_("Geestelijke"),
      I_("Manager"),
      I_("Mecanicien"),
      I_("Overig"),
      I_("Technicus"),
      I_("Advocaat"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_034_010_000_000;
   const BFSubstitutionSet SubSet_002_034_010_000_000(
    &aKeys_002_034_010_000_000[0], &aValues_002_034_010_000_000[0] );
   // Substitution set OverrideDSCSet.  Language: enUS
   static const I_CHAR* aKeys_002_035_001_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_035_001_000_000[] = {
      I_("No DSC Override"),
      I_("Flat Amount DSC Override"),
      I_("Percentage DSC Override"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_035_001_000_000;
   const BFSubstitutionSet SubSet_002_035_001_000_000(
    &aKeys_002_035_001_000_000[0], &aValues_002_035_001_000_000[0] );
   // Substitution set OverrideDSCSet.  Language: enCA
   static const I_CHAR* aKeys_002_035_003_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_035_003_000_000[] = {
      I_("No DSC Override"),
      I_("Flat Amount DSC Override"),
      I_("Percentage DSC Override"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_035_003_000_000;
   const BFSubstitutionSet SubSet_002_035_003_000_000(
    &aKeys_002_035_003_000_000[0], &aValues_002_035_003_000_000[0] );
   // Substitution set OverrideDSCSet.  Language: frFR
   static const I_CHAR* aKeys_002_035_004_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_035_004_000_000[] = {
      I_("No DSC Override"),
      I_("Annulation commission souscription differee forfaitaire"),
      I_("Annulation commission souscription differee pourcentage"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_035_004_000_000;
   const BFSubstitutionSet SubSet_002_035_004_000_000(
    &aKeys_002_035_004_000_000[0], &aValues_002_035_004_000_000[0] );
   // Substitution set OverrideDSCSet.  Language: frCA
   static const I_CHAR* aKeys_002_035_005_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_035_005_000_000[] = {
      I_("Aucune modification des FAR"),
      I_("Modification du montant fixe des FAR"),
      I_("Modification du pourcentage des FAR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_035_005_000_000;
   const BFSubstitutionSet SubSet_002_035_005_000_000(
    &aKeys_002_035_005_000_000[0], &aValues_002_035_005_000_000[0] );
   // Substitution set OverrideDSCSet.  Language: enIE
   static const I_CHAR* aKeys_002_035_006_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_035_006_000_000[] = {
      I_("No DSC Override"),
      I_("Flat Amount DSC Override"),
      I_("Percentage DSC Override"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_035_006_000_000;
   const BFSubstitutionSet SubSet_002_035_006_000_000(
    &aKeys_002_035_006_000_000[0], &aValues_002_035_006_000_000[0] );
   // Substitution set OverrideDSCSet.  Language: deDE
   static const I_CHAR* aKeys_002_035_007_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_035_007_000_000[] = {
      I_("No DSC Override"),
      I_("Flat Amount DSC Override"),
      I_("Percentage DSC Override"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_035_007_000_000;
   const BFSubstitutionSet SubSet_002_035_007_000_000(
    &aKeys_002_035_007_000_000[0], &aValues_002_035_007_000_000[0] );
   // Substitution set OverrideDSCSet.  Language: esEs
   static const I_CHAR* aKeys_002_035_008_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_035_008_000_000[] = {
      I_("No DSC Override"),
      I_("Flat Amount DSC Override"),
      I_("Percentage DSC Override"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_035_008_000_000;
   const BFSubstitutionSet SubSet_002_035_008_000_000(
    &aKeys_002_035_008_000_000[0], &aValues_002_035_008_000_000[0] );
   // Substitution set OverrideDSCSet.  Language: nlNL
   static const I_CHAR* aKeys_002_035_010_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_035_010_000_000[] = {
      I_("OVK niet vervangen"),
      I_("Vast bedrag OVK vervangen"),
      I_("Percentage DSC Override"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_035_010_000_000;
   const BFSubstitutionSet SubSet_002_035_010_000_000(
    &aKeys_002_035_010_000_000[0], &aValues_002_035_010_000_000[0] );
   // Substitution set OrderSourceSet.  Language: enUS
   static const I_CHAR* aKeys_002_036_001_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_036_001_000_000[] = {
      I_("Dealer"),
      I_("Fund Company"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_036_001_000_000;
   const BFSubstitutionSet SubSet_002_036_001_000_000(
    &aKeys_002_036_001_000_000[0], &aValues_002_036_001_000_000[0] );
   // Substitution set OrderSourceSet.  Language: enCA
   static const I_CHAR* aKeys_002_036_003_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_036_003_000_000[] = {
      I_("Dealer"),
      I_("Fund Company"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_036_003_000_000;
   const BFSubstitutionSet SubSet_002_036_003_000_000(
    &aKeys_002_036_003_000_000[0], &aValues_002_036_003_000_000[0] );
   // Substitution set OrderSourceSet.  Language: frFR
   static const I_CHAR* aKeys_002_036_004_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_036_004_000_000[] = {
      I_("Agent"),
      I_("Société de fonds"),
      I_("Intermediaire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_036_004_000_000;
   const BFSubstitutionSet SubSet_002_036_004_000_000(
    &aKeys_002_036_004_000_000[0], &aValues_002_036_004_000_000[0] );
   // Substitution set OrderSourceSet.  Language: frCA
   static const I_CHAR* aKeys_002_036_005_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_036_005_000_000[] = {
      I_("Courtier"),
      I_("Société de fonds"),
      I_("Intermédiaire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_036_005_000_000;
   const BFSubstitutionSet SubSet_002_036_005_000_000(
    &aKeys_002_036_005_000_000[0], &aValues_002_036_005_000_000[0] );
   // Substitution set OrderSourceSet.  Language: enIE
   static const I_CHAR* aKeys_002_036_006_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_036_006_000_000[] = {
      I_("Dealer"),
      I_("Fund Company"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_036_006_000_000;
   const BFSubstitutionSet SubSet_002_036_006_000_000(
    &aKeys_002_036_006_000_000[0], &aValues_002_036_006_000_000[0] );
   // Substitution set OrderSourceSet.  Language: deDE
   static const I_CHAR* aKeys_002_036_007_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_036_007_000_000[] = {
      I_("Dealer"),
      I_("Fund Company"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_036_007_000_000;
   const BFSubstitutionSet SubSet_002_036_007_000_000(
    &aKeys_002_036_007_000_000[0], &aValues_002_036_007_000_000[0] );
   // Substitution set OrderSourceSet.  Language: esEs
   static const I_CHAR* aKeys_002_036_008_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_036_008_000_000[] = {
      I_("Dealer"),
      I_("Fund Company"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_036_008_000_000;
   const BFSubstitutionSet SubSet_002_036_008_000_000(
    &aKeys_002_036_008_000_000[0], &aValues_002_036_008_000_000[0] );
   // Substitution set OrderSourceSet.  Language: nlNL
   static const I_CHAR* aKeys_002_036_010_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_036_010_000_000[] = {
      I_("Handelaar"),
      I_("Fondsbedrijf"),
      I_("Tussenpersoon"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_036_010_000_000;
   const BFSubstitutionSet SubSet_002_036_010_000_000(
    &aKeys_002_036_010_000_000[0], &aValues_002_036_010_000_000[0] );
   // Substitution set SrcOfFundSet.  Language: enUS
   static const I_CHAR* aKeys_002_037_001_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("30"),
      I_("32"),
      I_("99"),
      I_("A9"),
      I_("AA"),
      I_("AB"),
      I_("AC"),
      I_("AD"),
      I_("AE"),
      I_("AF"),
      I_("AG"),
      I_("AH"),
      I_("AI"),
      I_("AJ"),
      I_("AK"),
      I_("AL"),
      I_("AM"),
      I_("AP"),
      I_("AR"),
      I_("AT"),
      I_("AU"),
      I_("AV"),
      I_("AZ"),
      I_("BP"),
      I_("C9"),
      I_("CA"),
      I_("CB"),
      I_("CD"),
      I_("CE"),
      I_("CF"),
      I_("CL"),
      I_("CP"),
      I_("CR"),
      I_("CS"),
      I_("DC"),
      I_("DD"),
      I_("DR"),
      I_("EA"),
      I_("EB"),
      I_("EC"),
      I_("ED"),
      I_("ES"),
      I_("F2"),
      I_("F3"),
      I_("FB"),
      I_("FC"),
      I_("FF"),
      I_("FG"),
      I_("FI"),
      I_("FM"),
      I_("FO"),
      I_("FS"),
      I_("FT"),
      I_("FV"),
      I_("G1"),
      I_("G2"),
      I_("G3"),
      I_("G8"),
      I_("G9"),
      I_("GA"),
      I_("GB"),
      I_("GC"),
      I_("GD"),
      I_("GE"),
      I_("GF"),
      I_("GH"),
      I_("GI"),
      I_("GM"),
      I_("GO"),
      I_("GP"),
      I_("GS"),
      I_("GT"),
      I_("H9"),
      I_("HA"),
      I_("I9"),
      I_("IA"),
      I_("IB"),
      I_("IC"),
      I_("ID"),
      I_("IE"),
      I_("IF"),
      I_("IG"),
      I_("IH"),
      I_("II"),
      I_("IJ"),
      I_("IK"),
      I_("IL"),
      I_("IM"),
      I_("IN"),
      I_("L1"),
      I_("L2"),
      I_("L3"),
      I_("LA"),
      I_("LB"),
      I_("LC"),
      I_("LF"),
      I_("LH"),
      I_("LM"),
      I_("LO"),
      I_("LS"),
      I_("LT"),
      I_("N9"),
      I_("NA"),
      I_("NB"),
      I_("NC"),
      I_("ND"),
      I_("NE"),
      I_("NF"),
      I_("NG"),
      I_("NH"),
      I_("NI"),
      I_("NJ"),
      I_("OA"),
      I_("OL"),
      I_("OM"),
      I_("OO"),
      I_("PC"),
      I_("RE"),
      I_("RI"),
      I_("RT"),
      I_("RV"),
      I_("SC"),
      I_("SD"),
      I_("T1"),
      I_("T2"),
      I_("T3"),
      I_("TB"),
      I_("TG"),
      I_("TI"),
      I_("TM"),
      I_("TO"),
      I_("TS"),
      I_("TT"),
      I_("UA"),
      I_("UL"),
      I_("UM"),
      I_("UO"),
      I_("VF"),
      I_("VT"),
      I_("VV"),
      I_("XC"),
      I_("XT"),
      I_("PP"),
      I_("RC"),
      I_("RD"),
      I_("SC"),
      I_("TV"),
      I_("11"),
      I_("22"),
      I_("33"),
      I_("44"),
      I_("55"),
      I_("66"),
      0x00
   };

   static const I_CHAR* aValues_002_037_001_000_000[] = {
      I_("DOM. CHEQ - Domestic Cheque"),
      I_("FOR. CHEQ - Foreign Cheque"),
      I_("PAC -  Pre-Authorized Cheque"),
      I_("Cash Receipt - Luxembourg"),
      I_("Bank Bill Payment Service"),
      I_("FBPS"),
      I_("Inlandsschecks"),
      I_("DM Bearer Cheque"),
      I_("DM Cheque to Order"),
      I_("Debit Entry (Bank To Collect)"),
      I_("Debit Entry (Payee To Collect"),
      I_("Returned Direct Debit"),
      I_("DM Eurocheque"),
      I_("Debit Entry (Unknown)"),
      I_("Debit Entry (Int'l Transfer Below Reporting Threshold)"),
      I_("Reverse Transfer (Paid Twice By Mistake)"),
      I_("Transfer Credit Entry (Foreign)"),
      I_("Transfer Credit Entry (Domestic)"),
      I_("Standing Order Credit Entry (Regular Savings Plan)"),
      I_("Capital-building Fringe Benefit (Employer's Savings Plan)"),
      I_("Transition"),
      I_("Transfer Credit Entry"),
      I_("DM Cheque to Arrive"),
      I_("Returned Transfer"),
      I_("CASH-CLIENT"),
      I_("OTHER INTERNAL - SEG FUNDS"),
      I_("ACCUMLUTATED ANNUITY"),
      I_("AFFINITY SEG FUND"),
      I_("MLI GROUP SEG FUND"),
      I_("MLI ILC INVESTOR"),
      I_("NAL INVESTOR"),
      I_("VISTA FUND"),
      I_("GIF1 to GIF1"),
      I_("GIF2 to GIF2"),
      I_("B to E"),
      I_("G to O"),
      I_("B to G"),
      I_("E to O"),
      I_("O to E"),
      I_("AP"),
      I_("DM&CM Maturity Withdrawal"),
      I_("Deposit Maturity Top-Up Purchase"),
      I_("Commercial Union"),
      I_("Vista Conversion"),
      I_("ZURICH LIFE"),
      I_("Bonus Payment"),
      I_("OTHER INTERNAL - LIFE"),
      I_("AFFINITY GIC FUND"),
      I_("MLI GROUP GIC"),
      I_("MLI ILC LIFE"),
      I_("NAL ACCT"),
      I_("TERM ACCOUNT"),
      I_("Clan Plan"),
      I_("Lif - Purchase external"),
      I_("SEG Contract Maturity Auto-Redemption"),
      I_("Lif - surrender external (CHEQUE)"),
      I_("Death (Cheque)"),
      I_("Death (DDS)"),
      I_("SEG Deposit Maturity Auto-Redemption"),
      I_("Lif - scheduled payment (DDS)"),
      I_("MANULIFE CABOT"),
      I_("MANULIFE SECURITIES"),
      I_("Lif - death (DDS)"),
      I_("Lif - surrender external (DDS)"),
      I_("From Product 2"),
      I_("From Product 3"),
      I_("From BVT"),
      I_("From Calgary"),
      I_("Lif - term to term   No accounting"),
      I_("From Guaranteed RRIF"),
      I_("From ICA - Fixed"),
      I_("From Mutual"),
      I_("From Other"),
      I_("From ICA - Seg"),
      I_("From Triplan"),
      I_("Lif - from term to variable"),
      I_("Lif - to product A"),
      I_("Lif - to product B"),
      I_("Lif - to product C"),
      I_("MANULIFE BANK"),
      I_("OTHER BANKS"),
      I_("BANK OF MONTREAL"),
      I_("BANK OF NOVA SCOTIA"),
      I_("CIBC"),
      I_("NATIONAL BANK"),
      I_("ROYAL BANK"),
      I_("TORONTO DOMINION BANK"),
      I_("MANUBANK RSP LOAN"),
      I_("MANUBANK LEVERAGE"),
      I_("Lif - to mutual"),
      I_("Lif - to other"),
      I_("GROUP CONTRIBUTION"),
      I_("Lif - to ICA seg"),
      I_("Lif - to Tri-Plan"),
      I_("OTHER TRUST"),
      I_("CANADA TRUST"),
      I_("OTHER FUND COMPANIES"),
      I_("AGF"),
      I_("ALTAMIRA"),
      I_("CI MUTUAL FUNDS"),
      I_("CT FUND SERVICES"),
      I_("DYNAMIC"),
      I_("FIDELITY"),
      I_("GLOBAL STRATEGY"),
      I_("INVESTORS GROUP"),
      I_("MACKENZIE"),
      I_("MD MANAGEMENT LTD"),
      I_("TALVEST"),
      I_("TEMPLETON"),
      I_("TRIMARK"),
      I_("SPECTRUM UNITED"),
      I_("Lif - from product A"),
      I_("Lif - from product B"),
      I_("Lif - from product C"),
      I_("MRS"),
      I_("Lif - from BVT"),
      I_("Lif - from Calgary"),
      I_("Lif - from ICA fixed"),
      I_("Lif - from other"),
      I_("Lif - from Mutual"),
      I_("Loan"),
      I_("Lif - from ICA seg"),
      I_("Lif - from Tri-Plan"),
      I_("Other Insurance Companies"),
      I_("Great West Life"),
      I_("London"),
      I_("MLI"),
      I_("Canada Life"),
      I_("Maritime Life"),
      I_("Empire"),
      I_("Industrial Alliance"),
      I_("Royal Life"),
      I_("Standard Life"),
      I_("Sun Life"),
      I_("External Adjusted Contribution"),
      I_("External Lump Sum Contribution"),
      I_("External Matching Contribution"),
      I_("External Other Contribution"),
      I_("Purchase External"),
      I_("Reinvestment"),
      I_("Lif - Reinvestment  No accounting"),
      I_("Term to Term"),
      I_("Variable to Variable"),
      I_("Surrender (Cheque)"),
      I_("Surrender (DDS)"),
      I_("To Product 1"),
      I_("To Product 2"),
      I_("To Product 3"),
      I_("To BVT"),
      I_("TO GUARANTEED RRIF"),
      I_("To ICA - Fixed"),
      I_("To Mutual"),
      I_("To Other"),
      I_("To ICA - Seg"),
      I_("To Triplan"),
      I_("Internal Adjusted Contribution"),
      I_("Internal Lump Sum Contribution"),
      I_("Internal Matching Contribution"),
      I_("Internal Other Contribution"),
      I_("Lif - from variable to term"),
      I_("From Variable to Term"),
      I_("Lif - variable to variable No accounting"),
      I_("Exchanges"),
      I_("External Transfers"),
      I_("Purchase (PAC)"),
      I_("EFT Redemption (SWP)"),
      I_("Redemption (SWP)"),
      I_("Transfer (Ext. RRSP)"),
      I_("Term Reinvest"),
      I_("External"),
      I_("To/From Segfund Product"),
      I_("To/From Guaranteed Product"),
      I_("To/From Other Business Unit"),
      I_("Conversion Transaction"),
      I_("TPS Program"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_037_001_000_000;
   const BFSubstitutionSet SubSet_002_037_001_000_000(
    &aKeys_002_037_001_000_000[0], &aValues_002_037_001_000_000[0] );
   // Substitution set SrcOfFundSet.  Language: enCA
   static const I_CHAR* aKeys_002_037_003_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("11"),
      I_("12"),
      I_("13"),
      0x00
   };

   static const I_CHAR* aValues_002_037_003_000_000[] = {
      I_("Broker Cheque"),
      I_("Personal Cheque"),
      I_("PAC - Pre-Authorized Cheque"),
      I_("Cash Receipt - Luxembourg"),
      I_("Bank Bill Payment Service"),
      I_("FBPS"),
      I_("Deposit source"),
      I_("Clan Plan"),
      I_("Group Contribution"),
      I_("Loan"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_037_003_000_000;
   const BFSubstitutionSet SubSet_002_037_003_000_000(
    &aKeys_002_037_003_000_000[0], &aValues_002_037_003_000_000[0] );
   // Substitution set SrcOfFundSet.  Language: frFR
   static const I_CHAR* aKeys_002_037_004_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("11"),
      I_("12"),
      I_("13"),
      0x00
   };

   static const I_CHAR* aValues_002_037_004_000_000[] = {
      I_("Broker Cheque"),
      I_("Cheque personnel"),
      I_("Cheque certifie"),
      I_("Cash Receipt - Luxembourg"),
      I_("Service paiement effets de banque"),
      I_("FBPS"),
      I_("Source du depot"),
      I_("Plan famille"),
      I_("Contribution groupe"),
      I_("Emprunt"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_037_004_000_000;
   const BFSubstitutionSet SubSet_002_037_004_000_000(
    &aKeys_002_037_004_000_000[0], &aValues_002_037_004_000_000[0] );
   // Substitution set SrcOfFundSet.  Language: frCA
   static const I_CHAR* aKeys_002_037_005_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("30"),
      I_("32"),
      I_("99"),
      I_("A9"),
      I_("AA"),
      I_("AB"),
      I_("AC"),
      I_("AD"),
      I_("AE"),
      I_("AF"),
      I_("AG"),
      I_("AH"),
      I_("AI"),
      I_("AJ"),
      I_("AK"),
      I_("AL"),
      I_("AM"),
      I_("AP"),
      I_("AR"),
      I_("AT"),
      I_("AU"),
      I_("AV"),
      I_("AZ"),
      I_("BP"),
      I_("C9"),
      I_("CA"),
      I_("CB"),
      I_("CD"),
      I_("CE"),
      I_("CF"),
      I_("CL"),
      I_("CP"),
      I_("CR"),
      I_("CS"),
      I_("DC"),
      I_("DD"),
      I_("DR"),
      I_("EA"),
      I_("EB"),
      I_("EC"),
      I_("ED"),
      I_("ES"),
      I_("F2"),
      I_("F3"),
      I_("FB"),
      I_("FC"),
      I_("FF"),
      I_("FG"),
      I_("FI"),
      I_("FM"),
      I_("FO"),
      I_("FS"),
      I_("FT"),
      I_("FV"),
      I_("G1"),
      I_("G2"),
      I_("G3"),
      I_("G8"),
      I_("G9"),
      I_("GA"),
      I_("GB"),
      I_("GC"),
      I_("GD"),
      I_("GE"),
      I_("GF"),
      I_("GH"),
      I_("GI"),
      I_("GM"),
      I_("GO"),
      I_("GP"),
      I_("GS"),
      I_("GT"),
      I_("H9"),
      I_("HA"),
      I_("I9"),
      I_("IA"),
      I_("IB"),
      I_("IC"),
      I_("ID"),
      I_("IE"),
      I_("IF"),
      I_("IG"),
      I_("IH"),
      I_("II"),
      I_("IJ"),
      I_("IK"),
      I_("IL"),
      I_("IM"),
      I_("IN"),
      I_("L1"),
      I_("L2"),
      I_("L3"),
      I_("LA"),
      I_("LB"),
      I_("LC"),
      I_("LF"),
      I_("LH"),
      I_("LM"),
      I_("LO"),
      I_("LS"),
      I_("LT"),
      I_("N9"),
      I_("NA"),
      I_("NB"),
      I_("NC"),
      I_("ND"),
      I_("NE"),
      I_("NF"),
      I_("NG"),
      I_("NH"),
      I_("NI"),
      I_("NJ"),
      I_("OA"),
      I_("OL"),
      I_("OM"),
      I_("OO"),
      I_("PC"),
      I_("RE"),
      I_("RI"),
      I_("RT"),
      I_("RV"),
      I_("SC"),
      I_("SD"),
      I_("T1"),
      I_("T2"),
      I_("T3"),
      I_("TB"),
      I_("TG"),
      I_("TI"),
      I_("TM"),
      I_("TO"),
      I_("TS"),
      I_("TT"),
      I_("UA"),
      I_("UL"),
      I_("UM"),
      I_("UO"),
      I_("VF"),
      I_("VT"),
      I_("VV"),
      I_("XC"),
      I_("XT"),
      I_("PP"),
      I_("RC"),
      I_("RD"),
      I_("SC"),
      I_("TV"),
      I_("11"),
      I_("22"),
      I_("33"),
      I_("44"),
      I_("55"),
      I_("66"),
      0x00
   };

   static const I_CHAR* aValues_002_037_005_000_000[] = {
      I_("CHÈQUE NAT. - chèque national"),
      I_("CHÈQUE ÉTR. - chèque de l'étranger"),
      I_("PAC - prélèvements autorisés par chèque"),
      I_("Reçu de caisse - Luxembourg"),
      I_("Service de paiement de facture bancaire"),
      I_("Système de planification des finances"),
      I_("Chèques nationaux"),
      I_("Chèque au porteur de note de débit"),
      I_("Chèque de note de débit à l'ordre"),
      I_("Écriture de débit (la banque perçoit)"),
      I_("Écriture de débit (le bénéficiaire perçoit)"),
      I_("Remboursement de débit direct"),
      I_("Eurochèque de note de débit"),
      I_("Écriture de débit (inconnu)"),
      I_("Écriture de débit (transfert des rel. int. sous le seuil de déclaration)"),
      I_("Transfert annulé (payé en double par erreur)"),
      I_("Écriture de crédit du transfert (à l'étranger)"),
      I_("Écriture de crédit du transfert (national)"),
      I_("Écriture de crédit de l'ordre permanent (régime d'épargne régulier)"),
      I_("Avantages sociaux de capitalisation (régime d'épargne de l'employeur)"),
      I_("Transition"),
      I_("Écriture de crédit du transfert"),
      I_("Chèque de note de débit à suivre"),
      I_("Transfert remboursé"),
      I_("CLIENT-COMPTANT"),
      I_("Autre interne - fonds distincts"),
      I_("Rente accumulée"),
      I_("Fonds distincts Affinité"),
      I_("Fonds distincts groupe MLI"),
      I_("MLI ILC INVESTOR"),
      I_("NAL INVESTOR"),
      I_("FONDS VISTA"),
      I_("GIF1 à GIF1"),
      I_("GIF2 à GIF2"),
      I_("B à E"),
      I_("G à O"),
      I_("B à G"),
      I_("E à O"),
      I_("O à E"),
      I_("Achat automatique"),
      I_("Retrait à échéance de note de débit et de note de crédit"),
      I_("Achat complémentaire d'échéance de dépôt"),
      I_("Union commerciale"),
      I_("Conversion vista"),
      I_("ZURICH LIFE"),
      I_("Paiement boni"),
      I_("AUTRE INTERNE - VIE"),
      I_("FONDS CPG AFFINITÉ"),
      I_("CPG GROUPE MLI"),
      I_("MLI ILC LIFE"),
      I_("COMPTE NATIONAL"),
      I_("COMPTE À TERME"),
      I_("Régime de clan"),
      I_("FRV - achat externe"),
      I_("Autorachat à l'échéance du contrat de fonds distincts"),
      I_("FRV - rachat externe (CHÈQUE)"),
      I_("Décès (chèque)"),
      I_("Décès (SVA)"),
      I_("Autorachat à l'échéance du dépôt de fonds distincts"),
      I_("FRV - versement périodique (SVA)"),
      I_("MANUVIE-CABOT"),
      I_("PLACEMENTS MANUVIE"),
      I_("FRV - décès (SVA)"),
      I_("FRV - rachat externe (SVA)"),
      I_("Du produit 2"),
      I_("Du produit 3"),
      I_("De BVT"),
      I_("De Calgary"),
      I_("FRV - terme à terme, aucune comptabilité"),
      I_("D'un FERR garanti"),
      I_("D'un ICA - fixe"),
      I_("D'un mutuel"),
      I_("D'un autre"),
      I_("D'un ICA - fonds distincts"),
      I_("D'un Triplan"),
      I_("FRV - de terme à variable"),
      I_("FRV - vers produit A"),
      I_("FRV - vers produit B"),
      I_("FRV - vers produit C"),
      I_("BANQUE MANUVIE"),
      I_("AUTRES BANQUES"),
      I_("BANQUE DE MONTRÉAL"),
      I_("BANQUE DE NOUVELLE-ÉCOSSE"),
      I_("CIBC"),
      I_("BANQUE NATIONALE"),
      I_("BANQUE ROYALE"),
      I_("BANQUE TORONTO-DOMINION"),
      I_("PRÊT RER BANQUE MANUVIE"),
      I_("LEVIER FINANCIER BANQUE MANUVIE"),
      I_("FRV - vers commun de placement"),
      I_("FRV - vers autre"),
      I_("COTISATION DE GROUPE"),
      I_("FRV -  vers ICA fonds distincts"),
      I_("FRV - vers Triplan"),
      I_("AUTRE FIDUCIE"),
      I_("CANADA TRUST"),
      I_("AUTRES SOCIÉTÉS DE FONDS"),
      I_("AGF"),
      I_("ALTAMIRA"),
      I_("CI FONDS COMMUNS"),
      I_("CT FUND SERVICES"),
      I_("FONDS DYNAMIQUE"),
      I_("FIDELITY"),
      I_("STRATÉGIE GLOBALE"),
      I_("GROUPE INVESTORS"),
      I_("MACKENZIE"),
      I_("MD MANAGEMENT LTD"),
      I_("TALVEST"),
      I_("TEMPLETON"),
      I_("TRIMARK"),
      I_("SPECTRUM UNITED"),
      I_("FRV - du produit A"),
      I_("FRV - du produit B"),
      I_("FRV - du produit C"),
      I_("MRS"),
      I_("FRV - de BVT"),
      I_("FRV - de Calgary"),
      I_("FRV - d'un ICA fixe"),
      I_("FRV - à partir d'autres"),
      I_("FRV - d'un commun de placement"),
      I_("Prêt"),
      I_("FRV - de fonds distincts ICA"),
      I_("FRV - d'un Triplan"),
      I_("Autres sociétés d'assurance"),
      I_("Great-West"),
      I_("London"),
      I_("MLI"),
      I_("Canada-Vie"),
      I_("La Maritime"),
      I_("Empire"),
      I_("Industrielle Alliance"),
      I_("Royal Life"),
      I_("Standard Life"),
      I_("Sun Life"),
      I_("Cotisation externe ajustée"),
      I_("Cotisation forfaitaire externe"),
      I_("Cotisation de contrepartie externe"),
      I_("Autre cotisation externe"),
      I_("Achat externe"),
      I_("Réinvestissement"),
      I_("FRV - réinvestissement, aucune comptablité"),
      I_("Terme à terme"),
      I_("Variable à variable"),
      I_("Rachat (Chèque)"),
      I_("Rachat (SVA)"),
      I_("Vers produit 1"),
      I_("Vers produit 2"),
      I_("Vers produit 3"),
      I_("Vers BVT"),
      I_("VERS FERR GARANTI"),
      I_("Vers ICA - fixe"),
      I_("Vers mutuel"),
      I_("Vers autre"),
      I_("Vers ICA - fonds distincts"),
      I_("Vers Triplan"),
      I_("Cotisation interne ajustée"),
      I_("Cotisation forfaitaire interne"),
      I_("Cotisation de contrepartie interne"),
      I_("Autre cotisation interne"),
      I_("FRV - de variable à terme"),
      I_("De variable à terme"),
      I_("FRV - variable à variable, aucune comptabilité"),
      I_("Échanges"),
      I_("Transferts externes"),
      I_("Achat (PAC)"),
      I_("Rachat TEF (PRP)"),
      I_("Rachat (PRP)"),
      I_("Transfert (REEE ext.)"),
      I_("Réinvestissement à terme"),
      I_("Externe"),
      I_("Vers/d'un produit de fonds distincts"),
      I_("Vers/d'un produit garanti"),
      I_("Vers/d'une autre unité d'affaires"),
      I_("Transaction de conversion"),
      I_("Programme STT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_037_005_000_000;
   const BFSubstitutionSet SubSet_002_037_005_000_000(
    &aKeys_002_037_005_000_000[0], &aValues_002_037_005_000_000[0] );
   // Substitution set SrcOfFundSet.  Language: enIE
   static const I_CHAR* aKeys_002_037_006_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("11"),
      I_("12"),
      I_("13"),
      0x00
   };

   static const I_CHAR* aValues_002_037_006_000_000[] = {
      I_("Broker Cheque"),
      I_("Personal Cheque"),
      I_("PAC - Pre-Authorized Cheque"),
      I_("Cash Receipt - Luxembourg"),
      I_("Bank Bill Payment Service"),
      I_("FBPS"),
      I_("Deposit source"),
      I_("Clan Plan"),
      I_("Group Contribution"),
      I_("Loan"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_037_006_000_000;
   const BFSubstitutionSet SubSet_002_037_006_000_000(
    &aKeys_002_037_006_000_000[0], &aValues_002_037_006_000_000[0] );
   // Substitution set SrcOfFundSet.  Language: deDE
   static const I_CHAR* aKeys_002_037_007_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("30"),
      I_("32"),
      I_("99"),
      I_("A9"),
      I_("AA"),
      I_("AB"),
      I_("AC"),
      I_("AD"),
      I_("AE"),
      I_("AF"),
      I_("AG"),
      I_("AH"),
      I_("AI"),
      I_("AJ"),
      I_("AK"),
      I_("AL"),
      I_("AM"),
      I_("AP"),
      I_("AR"),
      I_("AT"),
      I_("AU"),
      I_("AV"),
      I_("AZ"),
      I_("BP"),
      I_("C9"),
      I_("CA"),
      I_("CB"),
      I_("CD"),
      I_("CE"),
      I_("CF"),
      I_("CL"),
      I_("CP"),
      I_("CR"),
      I_("CS"),
      I_("DC"),
      I_("DD"),
      I_("DR"),
      I_("EA"),
      I_("EB"),
      I_("EC"),
      I_("ED"),
      I_("ES"),
      I_("F2"),
      I_("F3"),
      I_("FB"),
      I_("FC"),
      I_("FF"),
      I_("FG"),
      I_("FI"),
      I_("FM"),
      I_("FO"),
      I_("FS"),
      I_("FT"),
      I_("FV"),
      I_("G1"),
      I_("G2"),
      I_("G3"),
      I_("G8"),
      I_("G9"),
      I_("GA"),
      I_("GB"),
      I_("GC"),
      I_("GD"),
      I_("GE"),
      I_("GF"),
      I_("GH"),
      I_("GI"),
      I_("GM"),
      I_("GO"),
      I_("GP"),
      I_("GS"),
      I_("GT"),
      I_("H9"),
      I_("HA"),
      I_("I9"),
      I_("IA"),
      I_("IB"),
      I_("IC"),
      I_("ID"),
      I_("IE"),
      I_("IF"),
      I_("IG"),
      I_("IH"),
      I_("II"),
      I_("IJ"),
      I_("IK"),
      I_("IL"),
      I_("IM"),
      I_("IN"),
      I_("L1"),
      I_("L2"),
      I_("L3"),
      I_("LA"),
      I_("LB"),
      I_("LC"),
      I_("LF"),
      I_("LH"),
      I_("LM"),
      I_("LO"),
      I_("LS"),
      I_("LT"),
      I_("N9"),
      I_("NA"),
      I_("NB"),
      I_("NC"),
      I_("ND"),
      I_("NE"),
      I_("NF"),
      I_("NG"),
      I_("NH"),
      I_("NI"),
      I_("NJ"),
      I_("OA"),
      I_("OL"),
      I_("OM"),
      I_("OO"),
      I_("PC"),
      I_("RE"),
      I_("RI"),
      I_("RT"),
      I_("RV"),
      I_("SC"),
      I_("SD"),
      I_("T1"),
      I_("T2"),
      I_("T3"),
      I_("TB"),
      I_("TG"),
      I_("TI"),
      I_("TM"),
      I_("TO"),
      I_("TS"),
      I_("TT"),
      I_("UA"),
      I_("UL"),
      I_("UM"),
      I_("UO"),
      I_("VF"),
      I_("VT"),
      I_("VV"),
      I_("XC"),
      I_("XT"),
      I_("PP"),
      I_("RC"),
      I_("RD"),
      I_("SC"),
      I_("TV"),
      0x00
   };

   static const I_CHAR* aValues_002_037_007_000_000[] = {
      I_("Broker Cheque"),
      I_("Personal Cheque"),
      I_("PAC - Pre-Authorized Cheque"),
      I_("Cash Receipt - Luxembourg"),
      I_("Bank Bill Payment Service"),
      I_("FBPS"),
      I_("Deposit source"),
      I_("Clan Plan"),
      I_("Group Contribution"),
      I_("Loan"),
      I_("Debit Entry (Payee To Collect"),
      I_("Returned Direct Debit"),
      I_("DM Eurocheque"),
      I_("Debit Entry (Unknown)"),
      I_("Debit Entry (Int'l Transfer Below Reporting Threshold)"),
      I_("Reverse Transfer (Paid Twice By Mistake)"),
      I_("Transfer Credit Entry (Foreign)"),
      I_("Transfer Credit Entry (Domestic)"),
      I_("Standing Order Credit Entry (Regular Savings Plan)"),
      I_("Capital-building Fringe Benefit (Employer's Savings Plan)"),
      I_("Transition"),
      I_("Transfer Credit Entry"),
      I_("DM Cheque to Arrive"),
      I_("Returned Transfer"),
      I_("CASH-CLIENT"),
      I_("OTHER INTERNAL - SEG FUNDS"),
      I_("ACCUMLUTATED ANNUITY"),
      I_("AFFINITY SEG FUND"),
      I_("MLI GROUP SEG FUND"),
      I_("MLI ILC INVESTOR"),
      I_("NAL INVESTOR"),
      I_("AF"),
      I_("GIF1 to GIF1"),
      I_("GIF2 to GIF2"),
      I_("B to E"),
      I_("G to O"),
      I_("B to G"),
      I_("E to O"),
      I_("O to E"),
      I_("AP"),
      I_("DM&CM Maturity Withdrawal"),
      I_("Deposit Maturity Top-Up Purchase"),
      I_("Commercial Union"),
      I_("Vista Conversion"),
      I_("ZURICH LIFE"),
      I_("Bonus Payment"),
      I_("OTHER INTERNAL - LIFE"),
      I_("AFFINITY GIC FUND"),
      I_("MLI GROUP GIC"),
      I_("MLI ILC LIFE"),
      I_("NAL ACCT"),
      I_("TERM ACCOUNT"),
      I_("Clan Plan"),
      I_("Lif - Purchase external"),
      I_("SEG Contract Maturity Auto-Redemption"),
      I_("Lif - surrender external (CHEQUE)"),
      I_("Death (Cheque)"),
      I_("Death (DDS)"),
      I_("SEG Deposit Maturity Auto-Redemption"),
      I_("Lif - scheduled payment (DDS)"),
      I_("MANULIFE CABOT"),
      I_("MANULIFE SECURITIES"),
      I_("Lif - death (DDS)"),
      I_("Lif - surrender external (DDS)"),
      I_("From Product 2"),
      I_("From Product 3"),
      I_("From BVT"),
      I_("From Calgary"),
      I_("Lif - term to term   No accounting"),
      I_("From Guaranteed RRIF"),
      I_("From ICA - Fixed"),
      I_("From Mutual"),
      I_("From Other"),
      I_("From ICA - Seg"),
      I_("From Triplan"),
      I_("Lif - from term to variable"),
      I_("Lif - to product A"),
      I_("Lif - to product B"),
      I_("Lif - to product C"),
      I_("MANULIFE BANK"),
      I_("OTHER BANKS"),
      I_("BANK OF MONTREAL"),
      I_("BANK OF NOVA SCOTIA"),
      I_("CIBC"),
      I_("NATIONAL BANK"),
      I_("ROYAL BANK"),
      I_("TORONTO DOMINION BANK"),
      I_("MANUBANK RSP LOAN"),
      I_("MANUBANK LEVERAGE"),
      I_("Lif - to mutual"),
      I_("Lif - to other"),
      I_("GROUP CONTRIBUTION"),
      I_("Lif - to ICA seg"),
      I_("Lif - to Tri-Plan"),
      I_("OTHER TRUST"),
      I_("CANADA TRUST"),
      I_("OTHER FUND COMPANIES"),
      I_("AGF"),
      I_("ALTAMIRA"),
      I_("CI MUTUAL FUNDS"),
      I_("CT FUND SERVICES"),
      I_("DYNAMIC"),
      I_("FIDELITY"),
      I_("GLOBAL STRATEGY"),
      I_("INVESTORS GROUP"),
      I_("MACKENZIE"),
      I_("MD MANAGEMENT LTD"),
      I_("TALVEST"),
      I_("TEMPLETON"),
      I_("TRIMARK"),
      I_("SPECTRUM UNITED"),
      I_("Lif - from product A"),
      I_("Lif - from product B"),
      I_("Lif - from product C"),
      I_("MRS"),
      I_("Lif - from BVT"),
      I_("Lif - from Calgary"),
      I_("Lif - from ICA fixed"),
      I_("Lif - from other"),
      I_("Lif - from Mutual"),
      I_("Loan"),
      I_("Lif - from ICA seg"),
      I_("Lif - from Tri-Plan"),
      I_("Other Insurance Companies"),
      I_("Great West Life"),
      I_("London"),
      I_("MLI"),
      I_("Canada Life"),
      I_("Maritime Life"),
      I_("Empire"),
      I_("Industrial Alliance"),
      I_("Royal Life"),
      I_("Standard Life"),
      I_("Sun Life"),
      I_("External Adjusted Contribution"),
      I_("External Lump Sum Contribution"),
      I_("External Matching Contribution"),
      I_("External Other Contribution"),
      I_("Purchase External"),
      I_("Reinvestment"),
      I_("Lif - Reinvestment  No accounting"),
      I_("Term to Term"),
      I_("Variable to Variable"),
      I_("Surrender (Cheque)"),
      I_("Surrender (DDS)"),
      I_("To Product 1"),
      I_("To Product 2"),
      I_("To Product 3"),
      I_("To BVT"),
      I_("TO GUARANTEED RRIF"),
      I_("To ICA - Fixed"),
      I_("To Mutual"),
      I_("To Other"),
      I_("To ICA - Seg"),
      I_("To Triplan"),
      I_("Internal Adjusted Contribution"),
      I_("Internal Lump Sum Contribution"),
      I_("Internal Matching Contribution"),
      I_("Internal Other Contribution"),
      I_("Lif - from variable to term"),
      I_("From Variable to Term"),
      I_("Lif - variable to variable No accounting"),
      I_("Exchanges"),
      I_("External Transfers"),
      I_("Purchase (PAC)"),
      I_("EFT Redemption (SWP)"),
      I_("Redemption (SWP)"),
      I_("Transfer (Ext. RRSP)"),
      I_("Term Reinvest"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_037_007_000_000;
   const BFSubstitutionSet SubSet_002_037_007_000_000(
    &aKeys_002_037_007_000_000[0], &aValues_002_037_007_000_000[0] );
   // Substitution set SrcOfFundSet.  Language: esEs
   static const I_CHAR* aKeys_002_037_008_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("11"),
      I_("12"),
      I_("13"),
      0x00
   };

   static const I_CHAR* aValues_002_037_008_000_000[] = {
      I_("Broker Cheque"),
      I_("Personal Cheque"),
      I_("PAC - Pre-Authorized Cheque"),
      I_("Cash Receipt - Luxembourg"),
      I_("Bank Bill Payment Service"),
      I_("FBPS"),
      I_("Deposit source"),
      I_("Clan Plan"),
      I_("Group Contribution"),
      I_("Loan"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_037_008_000_000;
   const BFSubstitutionSet SubSet_002_037_008_000_000(
    &aKeys_002_037_008_000_000[0], &aValues_002_037_008_000_000[0] );
   // Substitution set SrcOfFundSet.  Language: nlNL
   static const I_CHAR* aKeys_002_037_010_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("11"),
      I_("12"),
      I_("13"),
      0x00
   };

   static const I_CHAR* aValues_002_037_010_000_000[] = {
      I_("Makelaarscheque"),
      I_("Persoonlijke cheque"),
      I_("PAC - Pre-Authorized Cheque"),
      I_("Contante ontvangst - Luxemburg"),
      I_("Betalingsdienst bankfactuur"),
      I_("FBPS"),
      I_("depositobron"),
      I_("Clan Plan"),
      I_("GROEPSBIJDRAGE"),
      I_("Lening"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_037_010_000_000;
   const BFSubstitutionSet SubSet_002_037_010_000_000(
    &aKeys_002_037_010_000_000[0], &aValues_002_037_010_000_000[0] );
   // Substitution set PayTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_038_001_000_000[] = {
      I_("B"),
      I_("C"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_001_000_000[] = {
      I_("BACS"),
      I_("Cash"),
      I_("EFT"),
      I_("Manual"),
      I_("System"),
      I_("Wire"),
      I_("Suppress"),
      I_("To Account"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_001_000_000;
   const BFSubstitutionSet SubSet_002_038_001_000_000(
    &aKeys_002_038_001_000_000[0], &aValues_002_038_001_000_000[0] );
   // Substitution set PayTypeSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_038_001_003_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_001_003_000[] = {
      I_("EFT"),
      I_("Manual"),
      I_("System"),
      I_("Wire"),
      I_("Suppress"),
      I_("To Account"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_001_003_000;
   const BFSubstitutionSet SubSet_002_038_001_003_000(
    &aKeys_002_038_001_003_000[0], &aValues_002_038_001_003_000[0] );
   // Substitution set PayTypeSet.  Language: enUS, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_038_001_003_003[] = {
      I_("E"),
      I_("W"),
      I_("S"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_001_003_003[] = {
      I_("Debit account on file"),
      I_("Pay by check or wire"),
      I_("System"),
      I_("To Account"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_001_003_003;
   const BFSubstitutionSet SubSet_002_038_001_003_003(
    &aKeys_002_038_001_003_003[0], &aValues_002_038_001_003_003[0] );
   // Substitution set PayTypeSet.  Language: enUS, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_038_001_003_011[] = {
      I_("E"),
      I_("W"),
      I_("S"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_001_003_011[] = {
      I_("Debit account on file"),
      I_("Pay by check or wire"),
      I_("System"),
      I_("To Account"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_001_003_011;
   const BFSubstitutionSet SubSet_002_038_001_003_011(
    &aKeys_002_038_001_003_011[0], &aValues_002_038_001_003_011[0] );
   // Substitution set PayTypeSet.  Language: enUS, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_038_001_003_014[] = {
      I_("E"),
      I_("W"),
      I_("S"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_001_003_014[] = {
      I_("Debit account on file"),
      I_("Pay by check or wire"),
      I_("System"),
      I_("To Account"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_001_003_014;
   const BFSubstitutionSet SubSet_002_038_001_003_014(
    &aKeys_002_038_001_003_014[0], &aValues_002_038_001_003_014[0] );
   // Substitution set PayTypeSet.  Language: enCA
   static const I_CHAR* aKeys_002_038_003_000_000[] = {
      I_("B"),
      I_("C"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_003_000_000[] = {
      I_("BACS"),
      I_("Cash"),
      I_("EFT"),
      I_("Manual"),
      I_("System"),
      I_("Wire"),
      I_("Suppress"),
      I_("To Account"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_003_000_000;
   const BFSubstitutionSet SubSet_002_038_003_000_000(
    &aKeys_002_038_003_000_000[0], &aValues_002_038_003_000_000[0] );
   // Substitution set PayTypeSet.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_038_003_003_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_003_003_000[] = {
      I_("EFT"),
      I_("Manual"),
      I_("System"),
      I_("Wire"),
      I_("Suppress"),
      I_("To Account"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_003_003_000;
   const BFSubstitutionSet SubSet_002_038_003_003_000(
    &aKeys_002_038_003_003_000[0], &aValues_002_038_003_003_000[0] );
   // Substitution set PayTypeSet.  Language: enCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_038_003_003_003[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_003_003_003[] = {
      I_("EFT"),
      I_("System"),
      I_("Wire"),
      I_("To Account"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_003_003_003;
   const BFSubstitutionSet SubSet_002_038_003_003_003(
    &aKeys_002_038_003_003_003[0], &aValues_002_038_003_003_003[0] );
   // Substitution set PayTypeSet.  Language: enCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_038_003_003_011[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_003_003_011[] = {
      I_("EFT"),
      I_("System"),
      I_("Wire"),
      I_("To Account"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_003_003_011;
   const BFSubstitutionSet SubSet_002_038_003_003_011(
    &aKeys_002_038_003_003_011[0], &aValues_002_038_003_003_011[0] );
   // Substitution set PayTypeSet.  Language: enCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_038_003_003_014[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_003_003_014[] = {
      I_("EFT"),
      I_("System"),
      I_("Wire"),
      I_("To Account"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_003_003_014;
   const BFSubstitutionSet SubSet_002_038_003_003_014(
    &aKeys_002_038_003_003_014[0], &aValues_002_038_003_003_014[0] );
   // Substitution set PayTypeSet.  Language: frFR
   static const I_CHAR* aKeys_002_038_004_000_000[] = {
      I_("B"),
      I_("C"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_038_004_000_000[] = {
      I_("BACS"),
      I_("Numéraire"),
      I_("TEF"),
      I_("Manuel"),
      I_("Systeme"),
      I_("Télégraphique"),
      I_("Supprimer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_004_000_000;
   const BFSubstitutionSet SubSet_002_038_004_000_000(
    &aKeys_002_038_004_000_000[0], &aValues_002_038_004_000_000[0] );
   // Substitution set PayTypeSet.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_038_004_003_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_038_004_003_000[] = {
      I_("TEF"),
      I_("Manuel"),
      I_("Systeme"),
      I_("Télégraphique"),
      I_("Supprimer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_004_003_000;
   const BFSubstitutionSet SubSet_002_038_004_003_000(
    &aKeys_002_038_004_003_000[0], &aValues_002_038_004_003_000[0] );
   // Substitution set PayTypeSet.  Language: frFR, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_038_004_003_003[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      0x00
   };

   static const I_CHAR* aValues_002_038_004_003_003[] = {
      I_("TEF"),
      I_("Systeme"),
      I_("Télégraphique"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_004_003_003;
   const BFSubstitutionSet SubSet_002_038_004_003_003(
    &aKeys_002_038_004_003_003[0], &aValues_002_038_004_003_003[0] );
   // Substitution set PayTypeSet.  Language: frFR, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_038_004_003_011[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      0x00
   };

   static const I_CHAR* aValues_002_038_004_003_011[] = {
      I_("TEF"),
      I_("Systeme"),
      I_("Télégraphique"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_004_003_011;
   const BFSubstitutionSet SubSet_002_038_004_003_011(
    &aKeys_002_038_004_003_011[0], &aValues_002_038_004_003_011[0] );
   // Substitution set PayTypeSet.  Language: frFR, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_038_004_003_014[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      0x00
   };

   static const I_CHAR* aValues_002_038_004_003_014[] = {
      I_("TEF"),
      I_("Systeme"),
      I_("Télégraphique"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_004_003_014;
   const BFSubstitutionSet SubSet_002_038_004_003_014(
    &aKeys_002_038_004_003_014[0], &aValues_002_038_004_003_014[0] );
   // Substitution set PayTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_038_005_000_000[] = {
      I_("B"),
      I_("C"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_005_000_000[] = {
      I_("BACS"),
      I_("Comptant"),
      I_("TEF"),
      I_("Manuel"),
      I_("Système"),
      I_("Opération électronique"),
      I_("Supprimer"),
      I_("Compte cible"),
      I_("Dépôt direct TEF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_005_000_000;
   const BFSubstitutionSet SubSet_002_038_005_000_000(
    &aKeys_002_038_005_000_000[0], &aValues_002_038_005_000_000[0] );
   // Substitution set PayTypeSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_038_005_003_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_005_003_000[] = {
      I_("TEF"),
      I_("Manuel"),
      I_("Système"),
      I_("Opération électronique"),
      I_("Supprimer"),
      I_("Compte cible"),
      I_("Dépôt direct TEF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_005_003_000;
   const BFSubstitutionSet SubSet_002_038_005_003_000(
    &aKeys_002_038_005_003_000[0], &aValues_002_038_005_003_000[0] );
   // Substitution set PayTypeSet.  Language: frCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_038_005_003_003[] = {
      I_("E"),
      I_("W"),
      I_("S"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_005_003_003[] = {
      I_("TEF"),
      I_("Opération électronique"),
      I_("Système"),
      I_("Compte cible"),
      I_("Dépôt direct TEF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_005_003_003;
   const BFSubstitutionSet SubSet_002_038_005_003_003(
    &aKeys_002_038_005_003_003[0], &aValues_002_038_005_003_003[0] );
   // Substitution set PayTypeSet.  Language: frCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_038_005_003_011[] = {
      I_("E"),
      I_("W"),
      I_("S"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_005_003_011[] = {
      I_("TEF"),
      I_("Opération électronique"),
      I_("Système"),
      I_("Compte cible"),
      I_("Dépôt direct TEF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_005_003_011;
   const BFSubstitutionSet SubSet_002_038_005_003_011(
    &aKeys_002_038_005_003_011[0], &aValues_002_038_005_003_011[0] );
   // Substitution set PayTypeSet.  Language: frCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_038_005_003_014[] = {
      I_("E"),
      I_("W"),
      I_("S"),
      I_("T"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_038_005_003_014[] = {
      I_("TEF"),
      I_("Opération électronique"),
      I_("Système"),
      I_("Compte cible"),
      I_("Dépôt direct TEF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_005_003_014;
   const BFSubstitutionSet SubSet_002_038_005_003_014(
    &aKeys_002_038_005_003_014[0], &aValues_002_038_005_003_014[0] );
   // Substitution set PayTypeSet.  Language: enIE
   static const I_CHAR* aKeys_002_038_006_000_000[] = {
      I_("B"),
      I_("C"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_038_006_000_000[] = {
      I_("BACS"),
      I_("Cash"),
      I_("EFT"),
      I_("Manual"),
      I_("System"),
      I_("Wire"),
      I_("Suppress"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_006_000_000;
   const BFSubstitutionSet SubSet_002_038_006_000_000(
    &aKeys_002_038_006_000_000[0], &aValues_002_038_006_000_000[0] );
   // Substitution set PayTypeSet.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_038_006_003_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_038_006_003_000[] = {
      I_("EFT"),
      I_("Manual"),
      I_("System"),
      I_("Wire"),
      I_("Suppress"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_006_003_000;
   const BFSubstitutionSet SubSet_002_038_006_003_000(
    &aKeys_002_038_006_003_000[0], &aValues_002_038_006_003_000[0] );
   // Substitution set PayTypeSet.  Language: enIE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_038_006_003_003[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      0x00
   };

   static const I_CHAR* aValues_002_038_006_003_003[] = {
      I_("EFT"),
      I_("System"),
      I_("Wire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_006_003_003;
   const BFSubstitutionSet SubSet_002_038_006_003_003(
    &aKeys_002_038_006_003_003[0], &aValues_002_038_006_003_003[0] );
   // Substitution set PayTypeSet.  Language: enIE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_038_006_003_011[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      0x00
   };

   static const I_CHAR* aValues_002_038_006_003_011[] = {
      I_("EFT"),
      I_("System"),
      I_("Wire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_006_003_011;
   const BFSubstitutionSet SubSet_002_038_006_003_011(
    &aKeys_002_038_006_003_011[0], &aValues_002_038_006_003_011[0] );
   // Substitution set PayTypeSet.  Language: enIE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_038_006_003_014[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      0x00
   };

   static const I_CHAR* aValues_002_038_006_003_014[] = {
      I_("EFT"),
      I_("System"),
      I_("Wire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_006_003_014;
   const BFSubstitutionSet SubSet_002_038_006_003_014(
    &aKeys_002_038_006_003_014[0], &aValues_002_038_006_003_014[0] );
   // Substitution set PayTypeSet.  Language: deDE
   static const I_CHAR* aKeys_002_038_007_000_000[] = {
      I_("B"),
      I_("C"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_007_000_000[] = {
      I_("BACS"),
      I_("Cash"),
      I_("EFT"),
      I_("Manual"),
      I_("System"),
      I_("Wire"),
      I_("Suppress"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_007_000_000;
   const BFSubstitutionSet SubSet_002_038_007_000_000(
    &aKeys_002_038_007_000_000[0], &aValues_002_038_007_000_000[0] );
   // Substitution set PayTypeSet.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_038_007_003_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_007_003_000[] = {
      I_("EFT"),
      I_("Manual"),
      I_("System"),
      I_("Wire"),
      I_("Suppress"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_007_003_000;
   const BFSubstitutionSet SubSet_002_038_007_003_000(
    &aKeys_002_038_007_003_000[0], &aValues_002_038_007_003_000[0] );
   // Substitution set PayTypeSet.  Language: deDE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_038_007_003_003[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_007_003_003[] = {
      I_("EFT"),
      I_("System"),
      I_("Wire"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_007_003_003;
   const BFSubstitutionSet SubSet_002_038_007_003_003(
    &aKeys_002_038_007_003_003[0], &aValues_002_038_007_003_003[0] );
   // Substitution set PayTypeSet.  Language: deDE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_038_007_003_011[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_007_003_011[] = {
      I_("EFT"),
      I_("System"),
      I_("Wire"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_007_003_011;
   const BFSubstitutionSet SubSet_002_038_007_003_011(
    &aKeys_002_038_007_003_011[0], &aValues_002_038_007_003_011[0] );
   // Substitution set PayTypeSet.  Language: deDE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_038_007_003_014[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_007_003_014[] = {
      I_("EFT"),
      I_("System"),
      I_("Wire"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_007_003_014;
   const BFSubstitutionSet SubSet_002_038_007_003_014(
    &aKeys_002_038_007_003_014[0], &aValues_002_038_007_003_014[0] );
   // Substitution set PayTypeSet.  Language: esEs
   static const I_CHAR* aKeys_002_038_008_000_000[] = {
      I_("B"),
      I_("C"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_008_000_000[] = {
      I_("BACS"),
      I_("Cash"),
      I_("EFT"),
      I_("Manual"),
      I_("System"),
      I_("Wire"),
      I_("Suppress"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_008_000_000;
   const BFSubstitutionSet SubSet_002_038_008_000_000(
    &aKeys_002_038_008_000_000[0], &aValues_002_038_008_000_000[0] );
   // Substitution set PayTypeSet.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_038_008_003_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_008_003_000[] = {
      I_("EFT"),
      I_("Manual"),
      I_("System"),
      I_("Wire"),
      I_("Suppress"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_008_003_000;
   const BFSubstitutionSet SubSet_002_038_008_003_000(
    &aKeys_002_038_008_003_000[0], &aValues_002_038_008_003_000[0] );
   // Substitution set PayTypeSet.  Language: esEs, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_038_008_003_003[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_008_003_003[] = {
      I_("EFT"),
      I_("System"),
      I_("Wire"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_008_003_003;
   const BFSubstitutionSet SubSet_002_038_008_003_003(
    &aKeys_002_038_008_003_003[0], &aValues_002_038_008_003_003[0] );
   // Substitution set PayTypeSet.  Language: esEs, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_038_008_003_011[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_008_003_011[] = {
      I_("EFT"),
      I_("System"),
      I_("Wire"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_008_003_011;
   const BFSubstitutionSet SubSet_002_038_008_003_011(
    &aKeys_002_038_008_003_011[0], &aValues_002_038_008_003_011[0] );
   // Substitution set PayTypeSet.  Language: esEs, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_038_008_003_014[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_008_003_014[] = {
      I_("EFT"),
      I_("System"),
      I_("Wire"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_008_003_014;
   const BFSubstitutionSet SubSet_002_038_008_003_014(
    &aKeys_002_038_008_003_014[0], &aValues_002_038_008_003_014[0] );
   // Substitution set PayTypeSet.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_038_009_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_038_009_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_009_003_000;
   const BFSubstitutionSet SubSet_002_038_009_003_000(
    &aKeys_002_038_009_003_000[0], &aValues_002_038_009_003_000[0] );
   // Substitution set PayTypeSet.  Language: enGB, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_038_009_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_038_009_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_009_003_003;
   const BFSubstitutionSet SubSet_002_038_009_003_003(
    &aKeys_002_038_009_003_003[0], &aValues_002_038_009_003_003[0] );
   // Substitution set PayTypeSet.  Language: enGB, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_038_009_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_038_009_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_009_003_011;
   const BFSubstitutionSet SubSet_002_038_009_003_011(
    &aKeys_002_038_009_003_011[0], &aValues_002_038_009_003_011[0] );
   // Substitution set PayTypeSet.  Language: enGB, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_038_009_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_038_009_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_009_003_014;
   const BFSubstitutionSet SubSet_002_038_009_003_014(
    &aKeys_002_038_009_003_014[0], &aValues_002_038_009_003_014[0] );
   // Substitution set PayTypeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_038_010_000_000[] = {
      I_("B"),
      I_("C"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_010_000_000[] = {
      I_("BACS"),
      I_("CONTANT"),
      I_("EFT"),
      I_("Manual"),
      I_("System"),
      I_("Telegrafisch"),
      I_("Negeren"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_010_000_000;
   const BFSubstitutionSet SubSet_002_038_010_000_000(
    &aKeys_002_038_010_000_000[0], &aValues_002_038_010_000_000[0] );
   // Substitution set PayTypeSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_038_010_003_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("W"),
      I_("X"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_010_003_000[] = {
      I_("EFT"),
      I_("Manual"),
      I_("System"),
      I_("Telegrafisch"),
      I_("Negeren"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_010_003_000;
   const BFSubstitutionSet SubSet_002_038_010_003_000(
    &aKeys_002_038_010_003_000[0], &aValues_002_038_010_003_000[0] );
   // Substitution set PayTypeSet.  Language: nlNL, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_038_010_003_003[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_010_003_003[] = {
      I_("EFT"),
      I_("System"),
      I_("Telegrafisch"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_010_003_003;
   const BFSubstitutionSet SubSet_002_038_010_003_003(
    &aKeys_002_038_010_003_003[0], &aValues_002_038_010_003_003[0] );
   // Substitution set PayTypeSet.  Language: nlNL, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_038_010_003_011[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_010_003_011[] = {
      I_("EFT"),
      I_("System"),
      I_("Telegrafisch"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_010_003_011;
   const BFSubstitutionSet SubSet_002_038_010_003_011(
    &aKeys_002_038_010_003_011[0], &aValues_002_038_010_003_011[0] );
   // Substitution set PayTypeSet.  Language: nlNL, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_038_010_003_014[] = {
      I_("E"),
      I_("S"),
      I_("W"),
      I_("T"),
      0x00
   };

   static const I_CHAR* aValues_002_038_010_003_014[] = {
      I_("EFT"),
      I_("System"),
      I_("Telegrafisch"),
      I_("To Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_010_003_014;
   const BFSubstitutionSet SubSet_002_038_010_003_014(
    &aKeys_002_038_010_003_014[0], &aValues_002_038_010_003_014[0] );
   // Substitution set PayTypeSet.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_038_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_038_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_011_003_000;
   const BFSubstitutionSet SubSet_002_038_011_003_000(
    &aKeys_002_038_011_003_000[0], &aValues_002_038_011_003_000[0] );
   // Substitution set PayTypeSet.  Language: itIT, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_038_011_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_038_011_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_011_003_003;
   const BFSubstitutionSet SubSet_002_038_011_003_003(
    &aKeys_002_038_011_003_003[0], &aValues_002_038_011_003_003[0] );
   // Substitution set PayTypeSet.  Language: itIT, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_038_011_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_038_011_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_011_003_011;
   const BFSubstitutionSet SubSet_002_038_011_003_011(
    &aKeys_002_038_011_003_011[0], &aValues_002_038_011_003_011[0] );
   // Substitution set PayTypeSet.  Language: itIT, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_038_011_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_038_011_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_011_003_014;
   const BFSubstitutionSet SubSet_002_038_011_003_014(
    &aKeys_002_038_011_003_014[0], &aValues_002_038_011_003_014[0] );
   // Substitution set PayTypeSet.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_038_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_038_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_012_003_000;
   const BFSubstitutionSet SubSet_002_038_012_003_000(
    &aKeys_002_038_012_003_000[0], &aValues_002_038_012_003_000[0] );
   // Substitution set PayTypeSet.  Language: thTH, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_038_012_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_038_012_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_012_003_003;
   const BFSubstitutionSet SubSet_002_038_012_003_003(
    &aKeys_002_038_012_003_003[0], &aValues_002_038_012_003_003[0] );
   // Substitution set PayTypeSet.  Language: thTH, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_038_012_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_038_012_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_012_003_011;
   const BFSubstitutionSet SubSet_002_038_012_003_011(
    &aKeys_002_038_012_003_011[0], &aValues_002_038_012_003_011[0] );
   // Substitution set PayTypeSet.  Language: thTH, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_038_012_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_038_012_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_038_012_003_014;
   const BFSubstitutionSet SubSet_002_038_012_003_014(
    &aKeys_002_038_012_003_014[0], &aValues_002_038_012_003_014[0] );
   // Substitution set RedCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_039_001_000_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("72"),
      I_("RD"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      I_("82"),
      I_("87"),
      I_("89"),
      I_("38"),
      I_("MS"),
      I_("GF"),
      I_("43"),
      I_("44"),
      I_("NU"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("QU"),
      I_("73"),
      I_("78"),
      I_("86"),
      I_("Q1"),
      I_("Q2"),
      I_("Q3"),
      I_("39"),
      I_("TA"),
      I_("RC"),
      I_("RM"),
      I_("UP"),
      I_("40"),
      I_("55"),
      I_("81"),
      I_("DF"),
      I_("UC"),
      I_("B1"),
      I_("SR"),
      I_("SC"),
      I_("BR"),
      I_("EP"),
      I_("AG"),
      I_("AR"),
      I_("GR"),
      I_("IR"),
      I_("RL"),
      I_("BP"),
      I_("DP"),
      I_("GP"),
      I_("LP"),
      I_("RT"),
      I_("CT"),
      I_("TW"),
      I_("RB"),
      I_("RG"),
      0x00
   };

   static const I_CHAR* aValues_002_039_001_000_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("End of Year Adjustment (RRIF/LIF/RLIF/LRIF)"),
      I_("End of Year Adjustment(RRIF/LIF/LRIF)"),
      I_("External Fees"),
      I_("External RRSP Transfer"),
      I_("External RRSP Transfer - close account"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("FC Penalty"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Full Transfer Out (Close a/c) RRIF/LIF/RLIF/LRIF"),
      I_("Full Transfer Out(Close a/c) RRIF/LIF/LRIF"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("GIC Maturity"),
      I_("GIC Maturity"),
      I_("Home Buying Plan (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("LIF/RLIF/LIRA Full Transfer Out"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("LIF/RLIF/LRIF Excess to LIRA/RLSP"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP Withdrawal"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Qualifying Death Tfr - Child(RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("RESP  Earnings to Private Inst - Close Acct"),
      I_("RESP Earning to non-private"),
      I_("RESP Earning to private"),
      I_("RESP Earnings to Beneficiary"),
      I_("RESP Earnings to Beneficiary - Close Acct"),
      I_("RESP Earnings to non-educational"),
      I_("RESP Earnings to non-Private Inst - Close Acct"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP for Non Education -  Close Acct"),
      I_("RESP Redeem Contributions"),
      I_("RESP Redeem Contributions - Close Acct"),
      I_("RESP to RRSP - Close Acct"),
      I_("RESP Transfer Out"),
      I_("RESP Transfer Out - Close A/C"),
      I_("RRSP Transfer"),
      I_("RRSP Transfer - close account"),
      I_("RRSP Transfer - close account"),
      I_("Shortened Life Expectancy"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Transfer to purchaseAnnuity from RRIF etc"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Merger Transfer At Cost"),
      I_("T1036 Home Buying Plan - Close"),
      I_("Financial hard ship LIF/RLIF/LRIF"),
      I_("Financial hard ship LIRA/locked-in RRSP/RLSP"),
      I_("Transfer Out to External"),
      I_("Redirect Distribution"),
      I_("Fee for Transfer of cost"),
      I_("Administration"),
      I_("Fee for bearer shares delivery (book)"),
      I_("Fee for bearer shares delivery (physical)"),
      I_("Fee for Duplicates of confirmations"),
      I_("Fee for Duplicates of account statements"),
      I_("Fee for Pledges"),
      I_("Fee for Address investigation"),
      I_("Fee for shareholder death investigation"),
      I_("HVBM-Others"),
      I_("HVBL"),
      I_("Dexia"),
      I_("Structured Notes Rollover"),
      I_("SSB Merger Share Adjustment"),
      I_("Guarantee Fee"),
      I_("Locked-IN to Non Locked-IN Registered"),
      I_("Locked-IN to Non Registered"),
      I_("Nominal Units"),
      I_("CLB Return"),
      I_("ACES Return"),
      I_("RESP Earnings to non resident Beneficiary"),
      I_("60 L"),
      I_("Transfer to External TFSA"),
      I_("QESI Special Tax Redemption"),
      I_("RESP Overcontribution Withdrawal"),
      I_("QESI Basic Adjustment"),
      I_("QESI Increase Adjustment"),
      I_("QESI Interest Payment"),
      I_("Fixed Income Minimum Rebalance Exchange Out"),
      I_("HST Fund Merge Transfer At Cost"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      I_("Unclaimed Property Redemption"),
      I_("EQ Redemption"),
      I_("Tolerance Fees"),
      I_("PAC Decrease Fee"),
      I_("Dealer Service Fee"),
      I_("Unit Conversion"),
      I_("AIP Transfer to RDSP"),
      I_("SAGES Grant Return"),
      I_("SAGES Correction"),
      I_("BCTESG Return"),
      I_("EAP and PSE Trades"),
      I_("Additional CESG Repayment"),
      I_("Additional CESG Return"),
      I_("Basic CESG Return"),
      I_("QESI Increase Special Tax Redemption"),
      I_("Redemption Re-Classification"),
      I_("RDSP Bond Repayment"),
      I_("RDSP DAP Payment"),
      I_("RDSP Grant Repayment"),
      I_("RDSP LDAP Payment"),
      I_("External RDSP Transfer"),
      I_("External TFSA Transfer - close account"),
      I_("RDSP Termination Withdrawal"),
      I_("RDSP Bond Return"),
      I_("RDSP Grant Return"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_001_000_000;
   const BFSubstitutionSet SubSet_002_039_001_000_000(
    &aKeys_002_039_001_000_000[0], &aValues_002_039_001_000_000[0] );
   // Substitution set RedCodeSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_039_001_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("89"),
      I_("90"),
      I_("91"),
      I_("92"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("97"),
      I_("98"),
      I_("99"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      I_("B1"),
      I_("Be"),
      I_("BR"),
      I_("Ca"),
      I_("Co"),
      I_("De"),
      I_("DF"),
      I_("EF"),
      I_("En"),
      I_("EP"),
      I_("Ex"),
      I_("Fi"),
      I_("Fo"),
      I_("FP"),
      I_("Fu"),
      I_("Ga"),
      I_("GF"),
      I_("GI"),
      I_("HI"),
      I_("HO"),
      I_("HS"),
      I_("In"),
      I_("LI"),
      I_("Ma"),
      I_("Mi"),
      I_("MS"),
      I_("No"),
      I_("NS"),
      I_("NU"),
      I_("Op"),
      I_("Pa"),
      I_("Q1"),
      I_("Q2"),
      I_("Q3"),
      I_("QU"),
      I_("RC"),
      I_("RD"),
      I_("Re"),
      I_("RM"),
      I_("RR"),
      I_("SC"),
      I_("Sh"),
      I_("SR"),
      I_("T2"),
      I_("TA"),
      I_("Tr"),
      I_("UP"),
      I_("AG"),
      I_("AR"),
      I_("GR"),
      I_("IR"),
      I_("BP"),
      I_("DP"),
      I_("GP"),
      I_("LP"),
      I_("RT"),
      I_("CT"),
      I_("TW"),
      I_("RB"),
      I_("RG"),
      0x00
   };

   static const I_CHAR* aValues_002_039_001_003_000[] = {
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("RRSP Transfer"),
      I_("RRSP Transfer - close account"),
      I_("External RRSP Transfer"),
      I_("External RRSP Transfer - close account"),
      I_("Death"),
      I_("Death Transfer"),
      I_("Refund of Excess"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Trustee Fee"),
      I_("Foreign Content Excess Tranfer"),
      I_("Home Buying Plan (RRSP)"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("GIC Maturity"),
      I_("End of Year Adjustment (RRIF/LIF/RLIF/LRIF)"),
      I_("Shortened Life Expectancy"),
      I_("LLP Withdrawal"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("In Kind Transfer"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Marriage Breakdown"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Structured Notes Rollover"),
      I_("Fixed Income Minimum Rebalance Exchange Out"),
      I_("EQ Redemption"),
      I_("Non-resident qualified death transaction"),
      I_("Locked-IN to Non Locked-IN Registered"),
      I_("Locked-IN to Non Registered"),
      I_("Transfering to Seg MM fund"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Fund Merger Transfer At Cost"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("Full Transfer Out (Close a/c) RRIF/LIF/RLIF/LRIF"),
      I_("Transfer to purchaseAnnuity from RRIF etc"),
      I_("LIF/RLIF/LRIF Excess to LIRA/LRSP"),
      I_("Tolerance Fees"),
      I_("LIF/RLIF/LIRA Full Transfer Out"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr - Child(RRIF/LIF/LRIF)"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("RESP Redeem Contributions"),
      I_("RESP Earnings to Beneficiary"),
      I_("RESP Earning to non-private"),
      I_("RESP Earning to private"),
      I_("RESP Transfer Out"),
      I_("RESP Transfer Out - Close A/C"),
      I_("RESP Earnings to non-educational"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP Redeem Contributions - Close Acct"),
      I_("RESP Earnings to Beneficiary - Close Acct"),
      I_("RESP Earnings to non-Private Inst - Close Acct"),
      I_("RESP  Earnings to Private Inst - Close Acct"),
      I_("Transfer Out to External"),
      I_("Transfer to External TFSA"),
      I_("T1036 Home Buying Plan - Close"),
      I_("CLB Return"),
      I_("ACES Return"),
      I_("RESP Earnings to non resident Beneficiary"),
      I_("QESI Basic Special Tax Redemption"),
      I_("RESP for Non Education -  Close Acct"),
      I_("RESP to RRSP - Close Acct"),
      I_("PAC Decrease Fee"),
      I_("HVBM-Others"),
      I_("Basic CESG Repayment"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("RESP Overcontribution Withdrawal"),
      I_("HVBL"),
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Dexia"),
      I_("Close Fund"),
      I_("Management Fee"),
      I_("Non-Resident Withholding Tax"),
      I_("Annual Fee"),
      I_("Transfer to GIC"),
      I_("Early Redemption Fee"),
      I_("NSF Cheque Fee"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Fee for Transfer of cost"),
      I_("Administration"),
      I_("Fee for bearer shares delivery (book)"),
      I_("Fee for bearer shares delivery (physical)"),
      I_("Fee for Duplicates of confirmations"),
      I_("Fee for Duplicates of account statements"),
      I_("Fee for Pledges"),
      I_("Fee for Address investigation"),
      I_("Fee for shareholder death investigation"),
      I_("AIP Transfer to RDSP"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("BCTESG Return"),
      I_("Cash Payment - close account"),
      I_("Commission Payment"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Dealer Service Fee"),
      I_("External Fees"),
      I_("End of Year Adjustment(RRIF/LIF/LRIF)"),
      I_("EAP and PSE Trades"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Foreign Content"),
      I_("FC Penalty"),
      I_("Full Transfer Out(Close a/c) RRIF/LIF/LRIF"),
      I_("Garnishment"),
      I_("Guarantee Fee"),
      I_("GIC Maturity"),
      I_("Financial hard ship LIF/RLIF/LRIF"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("Financial hard ship LIRA/locked-in RRSP/RLSP"),
      I_("Interest Only"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("Management Fee"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("SSB Merger Share Adjustment"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("Nominal Units"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("QESI Basic Adjustment"),
      I_("QESI Increase Adjustment"),
      I_("QESI Interest Payment"),
      I_("60 L"),
      I_("Fund Re-designation at Cost"),
      I_("Redirect Distribution"),
      I_("Refund of Excess"),
      I_("Fund Re-designation at Market"),
      I_("RRSP Transfer - close account"),
      I_("SAGES Correction"),
      I_("Shortened Life Expectancy"),
      I_("SAGES Grant Return"),
      I_("T2220 - close Account"),
      I_("HST Fund Merge Transfer At Cost"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Unclaimed Property Redemption"),
      I_("Additional CESG Repayment"),
      I_("Additional CESG Return"),
      I_("Basic CESG Return"),
      I_("QESI Increase Special Tax Redemption"),
      I_("RDSP Bond Repayment"),
      I_("RDSP DAP Payment"),
      I_("RDSP Grant Repayment"),
      I_("RDSP LDAP Payment"),
      I_("External RDSP Transfer"),
      I_("External TFSA Transfer - close account"),
      I_("RDSP Termination Withdrawal"),
      I_("RDSP Bond Return"),
      I_("RDSP Grant Return"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_001_003_000;
   const BFSubstitutionSet SubSet_002_039_001_003_000(
    &aKeys_002_039_001_003_000[0], &aValues_002_039_001_003_000[0] );
   // Substitution set RedCodeSet.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_039_001_004_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("EF"),
      I_("FP"),
      I_("Fo"),
      I_("14"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("84"),
      I_("85"),
      I_("09"),
      I_("Re"),
      I_("23"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("72"),
      I_("RD"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      I_("82"),
      I_("87"),
      I_("89"),
      I_("38"),
      I_("MS"),
      I_("GF"),
      I_("43"),
      I_("44"),
      I_("NU"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("QU"),
      I_("73"),
      I_("78"),
      I_("13"),
      I_("86"),
      I_("91"),
      I_("95"),
      I_("Q1"),
      I_("Q2"),
      I_("Q3"),
      I_("39"),
      I_("TA"),
      I_("RC"),
      I_("RM"),
      I_("UP"),
      I_("40"),
      I_("55"),
      I_("81"),
      I_("DF"),
      I_("UC"),
      I_("B1"),
      I_("SR"),
      I_("SC"),
      I_("BR"),
      I_("RL"),
      I_("CT"),
      0x00
   };

   static const I_CHAR* aValues_002_039_001_004_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("CESGReturn"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("External Fees"),
      I_("FC Penalty"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("Shortend Life Exppectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Merger Transfer At Cost"),
      I_("T1036 Home Buying Plan - Close"),
      I_("Financial hard ship LIF/RLIF/LRIF"),
      I_("Financial hard ship LIRA/locked-in RRSP/RLSP"),
      I_("Transfer Out to External"),
      I_("Redirect Distribution"),
      I_("Fee for Transfer of cost"),
      I_("Administration"),
      I_("Fee for bearer shares delivery (book)"),
      I_("Fee for bearer shares delivery (physical)"),
      I_("Fee for Duplicates of confirmations"),
      I_("Fee for Duplicates of account statements"),
      I_("Fee for Pledges"),
      I_("Fee for Address investigation"),
      I_("Fee for shareholder death investigation"),
      I_("HVBM-Others"),
      I_("HVBL"),
      I_("Dexia"),
      I_("Structured Notes Rollover"),
      I_("SSB Merger Share Adjustment"),
      I_("Guarantee Fee"),
      I_("Locked-IN to Non Locked-IN Registered"),
      I_("Locked-IN to Non Registered"),
      I_("Nominal Units"),
      I_("CLB Return"),
      I_("ACES Return"),
      I_("RESP Earnings to non resident Beneficiary"),
      I_("60 L"),
      I_("Transfer to External TFSA"),
      I_("QESI Basic Special Tax Redemption"),
      I_("Trustee Fee"),
      I_("RESP Overcontribution Withdrawal"),
      I_("Management Fee"),
      I_("Early Redemption Fee"),
      I_("QESI Basic Adjustment"),
      I_("QESI Increase Adjustment"),
      I_("QESI Interest Payment"),
      I_("Fixed Income Minimum Rebalance Exchange Out"),
      I_("HST Fund Merge Transfer At Cost"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      I_("Unclaimed Property Redemption"),
      I_("EQ Redemption"),
      I_("Tolerance Fees"),
      I_("PAC Decrease Fee"),
      I_("Dealer Service Fee"),
      I_("Unit Conversion"),
      I_("AIP Transfer to RDSP"),
      /* *** WARNING 101-1 *** RedCodeSet [39] is missing frCA value for key B1.  enUS value is "AIP Transfer to RDSP".  Client: Default [0], Market: Lux [4]". */

      I_("SAGES Grant Return"),
      I_("SAGES Correction"),
      I_("BCTESG Return"),
      I_("Redemption Re-Classification"),
      I_("External TFSA Transfer - close account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_001_004_000;
   const BFSubstitutionSet SubSet_002_039_001_004_000(
    &aKeys_002_039_001_004_000[0], &aValues_002_039_001_004_000[0] );
   // Substitution set RedCodeSet.  Language: enCA
   static const I_CHAR* aKeys_002_039_003_000_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_003_000_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("End of Year Adjustment (RRIF/LIF/RLIF/LRIF)"),
      I_("End of Year Adjustment(RRIF/LIF/LRIF)"),
      I_("External Fees"),
      I_("External RRSP Transfer"),
      I_("External RRSP Transfer - close account"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("FC Penalty"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Full Transfer Out (Close a/c) RRIF/LIF/RLIF/LRIF"),
      I_("Full Transfer Out(Close a/c) RRIF/LIF/LRIF"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("GIC Maturity"),
      I_("GIC Maturity"),
      I_("Home Buying Plan (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("LIF/RLIF/LIRA Full Transfer Out"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("LIF/RLIF/LRIF Excess to LIRA/LRSP"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP Withdrawal"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Qualifying Death Tfr - Child(RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("RESP  Earnings to Private Inst - Close Acct"),
      I_("RESP Earning to non-private"),
      I_("RESP Earning to private"),
      I_("RESP Earnings to Beneficiary"),
      I_("RESP Earnings to Beneficiary - Close Acct"),
      I_("RESP Earnings to non-educational"),
      I_("RESP Earnings to non-Private Inst - Close Acct"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP for Non Education -  Close Acct"),
      I_("RESP Redeem Contributions"),
      I_("RESP Redeem Contributions - Close Acct"),
      I_("RESP to RRSP - Close Acct"),
      I_("RESP Transfer Out"),
      I_("RESP Transfer Out - Close A/C"),
      I_("RRSP Transfer"),
      I_("RRSP Transfer - close account"),
      I_("RRSP Transfer - close account"),
      I_("Shortened Life Expectancy"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Transfer to purchaseAnnuity from RRIF etc"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Merger Transfer At Cost"),
      I_("T1036 Home Buying Plan - Close"),
      I_("Financial hard ship LIF/RLIF/LRIF"),
      I_("Financial hard ship LIRA/locked-in RRSP/RLSP"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_003_000_000;
   const BFSubstitutionSet SubSet_002_039_003_000_000(
    &aKeys_002_039_003_000_000[0], &aValues_002_039_003_000_000[0] );
   // Substitution set RedCodeSet.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_039_003_003_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_003_003_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("End of Year Adjustment (RRIF/LIF/RLIF/LRIF)"),
      I_("End of Year Adjustment(RRIF/LIF/LRIF)"),
      I_("External Fees"),
      I_("External RRSP Transfer"),
      I_("External RRSP Transfer - close account"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("FC Penalty"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Full Transfer Out (Close a/c) RRIF/LIF/RLIF/LRIF"),
      I_("Full Transfer Out(Close a/c) RRIF/LIF/LRIF"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("GIC Maturity"),
      I_("GIC Maturity"),
      I_("Home Buying Plan (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("LIF/RLIF/LIRA Full Transfer Out"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("LIF/RLIF/LRIF Excess to LIRA/LRSP"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP Withdrawal"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Qualifying Death Tfr - Child(RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("RESP  Earnings to Private Inst - Close Acct"),
      I_("RESP Earning to non-private"),
      I_("RESP Earning to private"),
      I_("RESP Earnings to Beneficiary"),
      I_("RESP Earnings to Beneficiary - Close Acct"),
      I_("RESP Earnings to non-educational"),
      I_("RESP Earnings to non-Private Inst - Close Acct"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP for Non Education -  Close Acct"),
      I_("RESP Redeem Contributions"),
      I_("RESP Redeem Contributions - Close Acct"),
      I_("RESP to RRSP - Close Acct"),
      I_("RESP Transfer Out"),
      I_("RESP Transfer Out - Close A/C"),
      I_("RRSP Transfer"),
      I_("RRSP Transfer - close account"),
      I_("RRSP Transfer - close account"),
      I_("Shortened Life Expectancy"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Transfer to purchaseAnnuity from RRIF etc"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Merger Transfer At Cost"),
      I_("T1036 Home Buying Plan - Close"),
      I_("Financial hard ship LIF/RLIF/LRIF"),
      I_("Financial hard ship LIRA/locked-in RRSP/RLSP"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_003_003_000;
   const BFSubstitutionSet SubSet_002_039_003_003_000(
    &aKeys_002_039_003_003_000[0], &aValues_002_039_003_003_000[0] );
   // Substitution set RedCodeSet.  Language: enCA, Market: 4
   static const I_CHAR* aKeys_002_039_003_004_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("EF"),
      I_("FP"),
      I_("Fo"),
      I_("14"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("84"),
      I_("85"),
      I_("09"),
      I_("Re"),
      I_("23"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_003_004_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("External Fees"),
      I_("FC Penalty"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Merger Transfer At Cost"),
      I_("T1036 Home Buying Plan - Close"),
      I_("Financial hard ship LIF/RLIF/LRIF"),
      I_("Financial hard ship LIRA/locked-in RRSP/RLSP"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_003_004_000;
   const BFSubstitutionSet SubSet_002_039_003_004_000(
    &aKeys_002_039_003_004_000[0], &aValues_002_039_003_004_000[0] );
   // Substitution set RedCodeSet.  Language: frFR
   static const I_CHAR* aKeys_002_039_004_000_000[] = {
      I_("88"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("10"),
      I_("Mi"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("Tr"),
      I_("53"),
      I_("13"),
      I_("39"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_004_000_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Certificat au porteur"),
      I_("Virement bancaire - certif. au porteur"),
      I_("Virement bancaire - certif. au porteur"),
      I_("Paiement en numéraire"),
      I_("Paiement en numéraire - cloture compte"),
      I_("Paiement en numéraire - cloture compte"),
      I_("Paiement en numéraire propriete/bénéficiaire"),
      I_("Remboursement SCEE de base"),
      I_("Close Fund"),
      I_("Paiement de commission"),
      I_("Deces"),
      I_("Deces - montant global"),
      I_("Deces - montant global - cloture de compte"),
      I_("Garantie deces<SYSTEM USE ONLY>"),
      I_("Virement deces"),
      I_("Death Transfer to Annuity"),
      I_("Virement deces en rentes - cloture de compte"),
      I_("Virement direct deces - successeur rente"),
      I_("Ajustement de fin d'exercice (RRIF/LIF/LRIF)"),
      I_("Ajustement de fin d'exercice (RRIF/LIF/LRIF)"),
      I_("External Fees"),
      I_("Virement externe RRSP"),
      I_("Virement externe RRSP - cloture compte"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Devise etrangere"),
      I_("Foreign Content Excess Tranfer"),
      I_("Virement total sortant (clot compte) RRIF/LIF/LRIF"),
      I_("Virement global sortant (clot compte)RRIF/LIF/LRIF"),
      I_("Saisie-arret"),
      I_("Saisie-arret"),
      I_("GIC Maturity"),
      I_("GIC Maturity"),
      I_("HOME BUYING PLAN (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("Virement dans la parite initiale"),
      I_("Interets inclus"),
      I_("Interets seuls"),
      I_("Investissement seulement"),
      I_("LIF/RLIF/LIRA Full Transfer Out"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("Excedent LIF/LRIF a LIRA"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP Withdrawal"),
      I_("Frais de gestion"),
      I_("Frais de gestion"),
      I_("T2220 Marriage Breakdown"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Retenue a la source non resident"),
      I_("Retenue a la source non resident"),
      I_("Frais pour fonds insuffisants"),
      I_("Frais pour fonds insuffisants"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Virement partiel sortant de RRIF/LIF/LRIF"),
      I_("Virement partiel sortant de RRIF/LIF/LRIF"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Virement qual. deces - enfant (RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Remboursement excedent"),
      I_("Remboursement excedent"),
      I_("Gains a personne physique RESP - cloture compte"),
      I_("Gains a personne morale RESP"),
      I_("Gains a personne physique RESP"),
      I_("Gains au bénéficiaire RESP"),
      I_("Gains au bénéficiaire RESP - cloture compte"),
      I_("Gains a non scolaire RESP"),
      I_("Gains a personne morale RESP - cloture compte"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP non scolaire - cloture de compte"),
      I_("Remboursement contributions RESP"),
      I_("Remboursement contributions RESP - cloture compte"),
      I_("RESP to RRSP - Close Acct"),
      I_("Virement sortant RESP"),
      I_("Virement sortant RESP - cloture compte"),
      I_("Virement RRSP"),
      I_("RRSP Transfere - close account"),
      I_("Virement RRSP - cloture de compte"),
      I_("Esperance de vie ecourtee"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - cloture de compte"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Virement pour souscription/rente de RRIF etc"),
      I_("Redevance fiduciaire"),
      I_("M-Ichange sortant de rM-iM-iquilibrage du minimum de titres M-` revenu fixe"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_004_000_000;
   const BFSubstitutionSet SubSet_002_039_004_000_000(
    &aKeys_002_039_004_000_000[0], &aValues_002_039_004_000_000[0] );
   // Substitution set RedCodeSet.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_039_004_003_000[] = {
      I_("88"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("10"),
      I_("Mi"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("Tr"),
      I_("53"),
      I_("13"),
      I_("39"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_004_003_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Certificat au porteur"),
      I_("Virement bancaire - certif. au porteur"),
      I_("Virement bancaire - certif. au porteur"),
      I_("Paiement en numéraire"),
      I_("Paiement en numéraire - cloture compte"),
      I_("Paiement en numéraire - cloture compte"),
      I_("Paiement en numéraire propriete/bénéficiaire"),
      I_("Remboursement SCEE de base"),
      I_("Close Fund"),
      I_("Paiement de commission"),
      I_("Deces"),
      I_("Deces - montant global"),
      I_("Deces - montant global - cloture de compte"),
      I_("Garantie deces<SYSTEM USE ONLY>"),
      I_("Virement deces"),
      I_("Death Transfer to Annuity"),
      I_("Virement deces en rentes - cloture de compte"),
      I_("Virement direct deces - successeur rente"),
      I_("Ajustement de fin d'exercice (RRIF/LIF/LRIF)"),
      I_("Ajustement de fin d'exercice (RRIF/LIF/LRIF)"),
      I_("External Fees"),
      I_("Virement externe RRSP"),
      I_("Virement externe RRSP - cloture compte"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Devise etrangere"),
      I_("Foreign Content Excess Tranfer"),
      I_("Virement total sortant (clot compte) RRIF/LIF/LRIF"),
      I_("Virement global sortant (clot compte)RRIF/LIF/LRIF"),
      I_("Saisie-arret"),
      I_("Saisie-arret"),
      I_("GIC Maturity"),
      I_("GIC Maturity"),
      I_("HOME BUYING PLAN (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("Virement dans la parite initiale"),
      I_("Interets inclus"),
      I_("Interets seuls"),
      I_("Investissement seulement"),
      I_("LIF/RLIF/LIRA Full Transfer Out"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("Excedent LIF/LRIF a LIRA"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP Withdrawal"),
      I_("Frais de gestion"),
      I_("Frais de gestion"),
      I_("T2220 Marriage Breakdown"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Retenue a la source non resident"),
      I_("Retenue a la source non resident"),
      I_("Frais pour fonds insuffisants"),
      I_("Frais pour fonds insuffisants"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Virement partiel sortant de RRIF/LIF/LRIF"),
      I_("Virement partiel sortant de RRIF/LIF/LRIF"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Virement qual. deces - enfant (RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Remboursement excedent"),
      I_("Remboursement excedent"),
      I_("Gains a personne physique RESP - cloture compte"),
      I_("Gains a personne morale RESP"),
      I_("Gains a personne physique RESP"),
      I_("Gains au bénéficiaire RESP"),
      I_("Gains au bénéficiaire RESP - cloture compte"),
      I_("Gains a non scolaire RESP"),
      I_("Gains a personne morale RESP - cloture compte"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP non scolaire - cloture de compte"),
      I_("Remboursement contributions RESP"),
      I_("Remboursement contributions RESP - cloture compte"),
      I_("RESP to RRSP - Close Acct"),
      I_("Virement sortant RESP"),
      I_("Virement sortant RESP - cloture compte"),
      I_("Virement RRSP"),
      I_("RRSP Transfere - close account"),
      I_("Virement RRSP - cloture de compte"),
      I_("Esperance de vie ecourtee"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - cloture de compte"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Virement pour souscription/rente de RRIF etc"),
      I_("Redevance fiduciaire"),
      I_("M-Ichange sortant de rM-iM-iquilibrage du minimum de titres M-` revenu fixe"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_004_003_000;
   const BFSubstitutionSet SubSet_002_039_004_003_000(
    &aKeys_002_039_004_003_000[0], &aValues_002_039_004_003_000[0] );
   // Substitution set RedCodeSet.  Language: frFR, Market: 4
   static const I_CHAR* aKeys_002_039_004_004_000[] = {
      I_("88"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("EF"),
      I_("Fo"),
      I_("14"),
      I_("50"),
      I_("Ga"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("84"),
      I_("85"),
      I_("09"),
      I_("Re"),
      I_("23"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("13"),
      I_("39"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_004_004_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Certificat au porteur"),
      I_("Virement bancaire - certif. au porteur"),
      I_("Virement bancaire - certif. au porteur"),
      I_("Paiement en numéraire"),
      I_("Paiement en numéraire - cloture compte"),
      I_("Paiement en numéraire - cloture compte"),
      I_("Paiement en numéraire propriete/bénéficiaire"),
      I_("Remboursement SCEE de base"),
      I_("Close Fund"),
      I_("Paiement de commission"),
      I_("Deces"),
      I_("Deces - montant global"),
      I_("Deces - montant global - cloture de compte"),
      I_("Garantie deces<SYSTEM USE ONLY>"),
      I_("Virement deces"),
      I_("Death Transfer to Annuity"),
      I_("Virement deces en rentes - cloture de compte"),
      I_("Virement direct deces - successeur rente"),
      I_("External Fees"),
      I_("Devise etrangere"),
      I_("Foreign Content Excess Tranfer"),
      I_("Saisie-arret"),
      I_("Saisie-arret"),
      I_("Virement dans la parite initiale"),
      I_("Interets inclus"),
      I_("Interets seuls"),
      I_("Investissement seulement"),
      I_("Frais de gestion"),
      I_("Frais de gestion"),
      I_("T2220 Marriage Breakdown"),
      I_("Retenue a la source non resident"),
      I_("Retenue a la source non resident"),
      I_("Frais pour fonds insuffisants"),
      I_("Frais pour fonds insuffisants"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Remboursement excedent"),
      I_("Remboursement excedent"),
      I_("Esperance de vie ecourtee"),
      I_("T2220 - cloture de compte"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Redevance fiduciaire"),
      I_("M-Ichange sortant de rM-iM-iquilibrage du minimum de titres M-` revenu fixe"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_004_004_000;
   const BFSubstitutionSet SubSet_002_039_004_004_000(
    &aKeys_002_039_004_004_000[0], &aValues_002_039_004_004_000[0] );
   // Substitution set RedCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_039_005_000_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("72"),
      I_("RD"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      I_("82"),
      I_("87"),
      I_("89"),
      I_("38"),
      I_("MS"),
      I_("GF"),
      I_("43"),
      I_("44"),
      I_("NU"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("QU"),
      I_("73"),
      I_("78"),
      I_("86"),
      I_("Q1"),
      I_("Q2"),
      I_("Q3"),
      I_("39"),
      I_("TA"),
      I_("RC"),
      I_("RM"),
      I_("UP"),
      I_("40"),
      I_("55"),
      I_("81"),
      I_("DF"),
      I_("UC"),
      I_("SR"),
      I_("SC"),
      I_("BR"),
      I_("B1"),
      I_("EP"),
      I_("AG"),
      I_("AR"),
      I_("GR"),
      I_("IR"),
      I_("BP"),
      I_("DP"),
      I_("GP"),
      I_("LP"),
      I_("RT"),
      I_("CT"),
      I_("TW"),
      I_("RB"),
      I_("RG"),
      0x00
   };

   static const I_CHAR* aValues_002_039_005_000_000[] = {
      I_("1/12e de 1 sur les frais d'administration du portefeuille FAR"),
      I_("Frais annuels"),
      I_("Certificat au porteur"),
      I_("Certificat au porteur - transfert de la banque"),
      I_("Certificat au porteur - transfert de la banque"),
      I_("Paiement comptant"),
      I_("Paiement comptant - fermer le compte"),
      I_("Paiement comptant - fermer le compte"),
      I_("Paiement comptant à la succession/au bénéfiaire"),
      I_("Remboursement SCEE de base"),
      I_("Fermer le fonds"),
      I_("Paiement de commission"),
      I_("Décès"),
      I_("Décès - montant forfaitaire"),
      I_("Décès - montant forfaitaire - fermer le compte"),
      I_("Garantie de réclamation en raison de décès<UTILISATION DU SYSTÈME SEULEMENT>"),
      I_("Transfert au décès"),
      I_("Transfert au décès vers une rente"),
      I_("Transfert au décès vers une rente - fermer le compte"),
      I_("Transfert au décès direct au crédirentier successeur"),
      I_("Frais de rachat anticipé"),
      I_("Ajustement de fin d'exercice financier (FERR/FRV/FRVR/FRRI)"),
      I_("Ajustement de fin d'exercice financier (FERR/FRV/FRRI)"),
      I_("Frais externes"),
      I_("Transfert REER externe"),
      I_("Transfert REER externe - fermer le compte"),
      I_("Transfert REER externe (T2033) - fermer le compte"),
      I_("Pénalité de devise étrangère"),
      I_("Versement de première année FERR/FRV/FRVR/FRRI"),
      I_("Versement de première année FERR/FRV/FRVR/FRRI"),
      I_("Contenu étranger"),
      I_("Transfert d'excédent de contenu étranger"),
      I_("Transfert sortant total (fermer le compte) FERR/FRV/FRVR/FRRI"),
      I_("Transfert sortant total (fermer le compte) FERR/FRV/FRRI"),
      I_("Transfert de fonds fusionné au marché"),
      I_("Saisie-arrêt"),
      I_("Saisie-arrêt"),
      I_("Échéance CPG"),
      I_("Échéance CPG"),
      I_("Régime d'accession à la propriété (REER)"),
      I_("Régime d'accession à la propriété (REER)"),
      I_("Transfert en nature"),
      I_("Intérêt inclus"),
      I_("Intérêt seulement"),
      I_("Intérêt seulement"),
      I_("Transfert sortant total FRV/FRVR/CRI"),
      I_("Transfert sortant FRV/FRVR/CRI/FRRP"),
      I_("Excédent FRV/FRVR/FRRI à CRI/REIR"),
      I_("Excédent FRV/FRVR à FRI"),
      I_("Retrait REEP"),
      I_("Frais de gestion"),
      I_("Frais de gestion"),
      I_("Rupture d'union"),
      I_("Rupture d'union – fermer le compte"),
      I_("Versement minimum FERR/FRV/FRVR/FRRI"),
      I_("Versement minimum FERR/FRV/FRVR/FRRI"),
      I_("Transaction de succession qualifiée pour non-résident"),
      I_("Retenue d'impôt pour non-résident"),
      I_("Retenue d'impôt pour non-résident"),
      I_("Frais de chèque sans provision"),
      I_("Frais de chèque sans provision"),
      I_("Versement optionnel FERR/FRV/FRVR/FRRI"),
      I_("Versement optionnel FERR/FRV/FRVR/FRRI"),
      I_("Transfert sortant partiel de FERR/FRV/FRVR/FRRI"),
      I_("Transfert sortant partiel de FERR/FRV/FRVR/FRRI"),
      I_("Capital EPS"),
      I_("Capital EPS - fermer le compte"),
      I_("Transfert décès admissible - enfant (FERR/FRV/FRVR)"),
      I_("Transfert décès admissible - conjoint (FERR/FRV/FRVR)"),
      I_("Remboursement d'excédent"),
      I_("Remboursement d'excédent"),
      I_("Revenus REEE à institution privée - fermer le compte"),
      I_("Revenus REEE à institution scolaire publique"),
      I_("Revenus REEE à institution scolaire privée"),
      I_("Revenus REEE au bénéficiaire (PAE)"),
      I_("Revenus REEE au bénéficiaire (PAE) – fermer le compte"),
      I_("Revenus REEE à institution non éducationnelle"),
      I_("Revenus REEE à institution non privée - fermer le compte"),
      I_("Revenus REEE à REER (cotisation/conjoint)"),
      I_("REEE pour institution non éducationnelle - fermer le compte"),
      I_("Cotisations de remboursement REEE"),
      I_("Cotisations de remboursement REEE - fermer compte"),
      I_("REEE à REER - fermer le compte"),
      I_("Transfert sortant REEE"),
      I_("Transfert sortant REEE - fermer le compte"),
      I_("Transfert REER"),
      I_("Transfert REER - fermeture de compte"),
      I_("Transfert REER - fermeture de compte"),
      I_("Espérance de vie réduite"),
      I_("Espérance de vie réduite"),
      I_("T2220 - fermer le compte"),
      I_("Transfert au coût"),
      I_("Transfert au coût avec cession"),
      I_("Transfert à un CPG"),
      I_("Transfert d'un FERR pour l'achat d'une rente"),
      I_("Transfert d'un FERR pour l'achat d'une rente, etc."),
      I_("Transfert d'un fonds d'APSF à un fonds sous-jacent"),
      I_("Transfert à un fonds distinct du marché monétaire"),
      I_("Frais de fiducie"),
      I_("Transfert de fonds fusionné au coût"),
      I_("Régime d'accession à la propriété T1036 - fermer"),
      I_("Difficultés financières FRV/FRVR/FRRI"),
      I_("Difficultés financières CRI/REER immobilisé/REIR"),
      I_("Transfert sortant à l'externe"),
      I_("Réinvestissement de la distribution"),
      I_("Frais pour transfert de coûts"),
      I_("Administration"),
      I_("Frais de livraison de parts au porteur (enregistrés)"),
      I_("Frais de livraison de parts au porteur (matériels)"),
      I_("Frais pour les copies des confirmations"),
      I_("Frais pour les copies des relevés du compte"),
      I_("Frais pour les engagements"),
      I_("Frais pour l'enquête d'adresse"),
      I_("Frais pour l'enquête de succession du détenteur"),
      I_("HVBM - autres"),
      I_("HBVL"),
      I_("Dexia"),
      I_("Reconduction d'obligations structurées"),
      I_("Ajustement des parts fusionnées SSB"),
      I_("Frais de garantie"),
      I_("Immobilisé à non immobilisé enregistré"),
      I_("Immobilisé à non enregistré"),
      I_("Unités nominales"),
      I_("Remboursement BEC"),
      I_("Remboursement ACES"),
      I_("Revenus REEE à bénéficiaire non-résident"),
      I_("60 L"),
      I_("Transfert à CELI externe"),
      I_("Remboursement d'impôt spécial d’IQEE"),
      I_("Retrait de cotisation subventionnée REEE"),
      I_("Ajustement de base IQEE"),
      I_("Ajustement à la hausse IQEE"),
      I_("Paiement d'intérêt l'IQEE"),
      I_("Échange sortant de rebalancement minimal du revenu fixe"),
      I_("Transfert au coût de la fusion de fonds TVH"),
      I_("Nouvelle désignation du fonds au coût"),
      I_("Nouvelle désignation du fonds à la valeur marchande"),
      I_("Rachat de biens non réclamés"),
      I_("Rachat EQ"),
      I_("Frais de tolérance"),
      I_("Frais de diminution de PAC"),
      I_("Dealer Service Fee"),
      I_("Conversion des unités"),
      I_("Retour de subvention SEEAS"),
      I_("Correction SEEAS"),
      I_("Remboursement de SEEEFCB"),
      I_("Transfert PRA vers REEI"),
      I_("Transaction PAE et EPS"),
      I_("Remboursement  de la SCEE supplémentaire"),
      I_("Retour de la SCEE supplémentaire"),
      I_("Retour SCEE de base"),
      I_("Remboursement d’impôt spécial de la majoration d’IQEE"),
      I_("RDSP Bond Repayment"),
      I_("RDSP DAP Payment"),
      I_("RDSP Grant Repayment"),
      I_("RDSP LDAP Payment"),
      I_("External RDSP Transfer"),
      I_("Transfert CELI externe – fermer le compte"),
      I_("RDSP Termination Withdrawal"),
      I_("RDSP Bond Return"),
      I_("RDSP Grant Return"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_005_000_000;
   const BFSubstitutionSet SubSet_002_039_005_000_000(
    &aKeys_002_039_005_000_000[0], &aValues_002_039_005_000_000[0] );
   // Substitution set RedCodeSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_039_005_003_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("72"),
      I_("RD"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      I_("82"),
      I_("87"),
      I_("89"),
      I_("38"),
      I_("MS"),
      I_("GF"),
      I_("43"),
      I_("44"),
      I_("NU"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("QU"),
      I_("73"),
      I_("78"),
      I_("86"),
      I_("Q1"),
      I_("Q2"),
      I_("Q3"),
      I_("39"),
      I_("TA"),
      I_("RC"),
      I_("RM"),
      I_("UP"),
      I_("40"),
      I_("55"),
      I_("81"),
      I_("DF"),
      I_("SR"),
      I_("SC"),
      I_("B1"),
      I_("EP"),
      I_("BR"),
      I_("AG"),
      I_("AR"),
      I_("GR"),
      I_("IR"),
      I_("BP"),
      I_("DP"),
      I_("GP"),
      I_("LP"),
      I_("RT"),
      I_("CT"),
      I_("TW"),
      I_("RB"),
      I_("RG"),
      0x00
   };

   static const I_CHAR* aValues_002_039_005_003_000[] = {
      I_("1/12e de 1 sur les frais d'administration du portefeuille FAR"),
      I_("Frais annuels"),
      I_("Certificat au porteur"),
      I_("Certificat au porteur - transfert de la banque"),
      I_("Certificat au porteur - transfert de la banque"),
      I_("Paiement comptant"),
      I_("Paiement comptant - fermer le compte"),
      I_("Paiement comptant - fermer le compte"),
      I_("Paiement comptant à la succession/au bénéfiaire"),
      I_("Remboursement SCEE de base"),
      I_("Fermer le fonds"),
      I_("Paiement de commission"),
      I_("Décès"),
      I_("Décès - montant forfaitaire"),
      I_("Décès - montant forfaitaire - fermer le compte"),
      I_("Garantie de réclamation en raison de décès<UTILISATION DU SYSTÈME SEULEMENT>"),
      I_("Transfert au décès"),
      I_("Transfert au décès vers une rente"),
      I_("Transfert au décès vers une rente - fermer le compte"),
      I_("Transfert au décès direct au crédirentier successeur"),
      I_("Frais de rachat anticipé"),
      I_("Ajustement de fin d'exercice financier (FERR/FRV/FRVR/FRRI)"),
      I_("Ajustement de fin d'exercice financier (FERR/FRV/FRRI)"),
      I_("Frais externes"),
      I_("Transfert REER externe"),
      I_("Transfert REER externe - fermer le compte"),
      I_("Transfert REER externe (T2033) - fermer le compte"),
      I_("Pénalité de devise étrangère"),
      I_("Versement de première année FERR/FRV/FRVR/FRRI"),
      I_("Versement de première année FERR/FRV/FRVR/FRRI"),
      I_("Contenu étranger"),
      I_("Transfert d'excédent de contenu étranger"),
      I_("Transfert sortant total (fermer le compte) FERR/FRV/FRVR/FRRI"),
      I_("Transfert sortant total (fermer le compte) FERR/FRV/FRRI"),
      I_("Transfert de fonds fusionné au marché"),
      I_("Saisie-arrêt"),
      I_("Saisie-arrêt"),
      I_("Échéance CPG"),
      I_("Échéance CPG"),
      I_("Régime d'accession à la propriété (REER)"),
      I_("Régime d'accession à la propriété (REER)"),
      I_("Transfert en nature"),
      I_("Intérêt inclus"),
      I_("Intérêt seulement"),
      I_("Intérêt seulement"),
      I_("Transfert sortant total FRV/FRVR/CRI"),
      I_("Transfert sortant FRV/FRVR/CRI/FRRP"),
      I_("Excédent FRV/FRVR/FRRI à CRI/REIR"),
      I_("Excédent FRV/FRVR à FRI"),
      I_("Retrait REEP"),
      I_("Frais de gestion"),
      I_("Frais de gestion"),
      I_("Rupture d'union"),
      I_("Rupture d'union – fermer le compte"),
      I_("Versement minimum FERR/FRV/FRVR/FRRI"),
      I_("Versement minimum FERR/FRV/FRVR/FRRI"),
      I_("Transaction de succession qualifiée pour non-résident"),
      I_("Retenue d'impôt pour non-résident"),
      I_("Retenue d'impôt pour non-résident"),
      I_("Frais de chèque sans provision"),
      I_("Frais de chèque sans provision"),
      I_("Versement optionnel FERR/FRV/FRVR/FRRI"),
      I_("Versement optionnel FERR/FRV/FRVR/FRRI"),
      I_("Transfert sortant partiel de FERR/FRV/FRVR/FRRI"),
      I_("Transfert sortant partiel de FERR/FRV/FRVR/FRRI"),
      I_("Capital EPS"),
      I_("Capital EPS - fermer le compte"),
      I_("Transfert décès admissible - enfant (FERR/FRV/FRVR)"),
      I_("Transfert décès admissible - conjoint (FERR/FRV/FRVR)"),
      I_("Remboursement d'excédent"),
      I_("Remboursement d'excédent"),
      I_("Revenus REEE à institution privée - fermer le compte"),
      I_("Revenus REEE à institution scolaire publique"),
      I_("Revenus REEE à institution scolaire privée"),
      I_("Revenus REEE au bénéficiaire (PAE)"),
      I_("Revenus REEE au bénéficiaire (PAE) – fermer le compte"),
      I_("Revenus REEE à institution non éducationnelle"),
      I_("Revenus REEE à institution non privée - fermer le compte"),
      I_("Revenus REEE à REER (cotisation/conjoint)"),
      I_("REEE pour institution non éducationnelle - fermer le compte"),
      I_("Cotisations de remboursement REEE"),
      I_("Cotisations de remboursement REEE - fermer compte"),
      I_("REEE à REER - fermer le compte"),
      I_("Transfert sortant REEE"),
      I_("Transfert sortant REEE - fermer le compte"),
      I_("Transfert REER"),
      I_("Transfert REER - fermeture de compte"),
      I_("Transfert REER - fermeture de compte"),
      I_("Espérance de vie réduite"),
      I_("Espérance de vie réduite"),
      I_("T2220 - fermer le compte"),
      I_("Transfert au coût"),
      I_("Transfert au coût avec cession"),
      I_("Transfert à un CPG"),
      I_("Transfert d'un FERR pour l'achat d'une rente"),
      I_("Transfert d'un FERR pour l'achat d'une rente, etc."),
      I_("Transfert d'un fonds d'APSF à un fonds sous-jacent"),
      I_("Transfert à un fonds distinct du marché monétaire"),
      I_("Frais de fiducie"),
      I_("Transfert de fonds fusionné au coût"),
      I_("Régime d'accession à la propriété T1036 - fermer"),
      I_("Difficultés financières FRV/FRVR/FRRI"),
      I_("Difficultés financières CRI/REER immobilisé/REIR"),
      I_("Transfert sortant à l'externe"),
      I_("Réinvestissement de la distribution"),
      I_("Frais pour transfert de coûts"),
      I_("Administration"),
      I_("Frais de livraison de parts au porteur (enregistrés)"),
      I_("Frais de livraison de parts au porteur (matériels)"),
      I_("Frais pour les copies des confirmations"),
      I_("Frais pour les copies des relevés du compte"),
      I_("Frais pour les engagements"),
      I_("Frais pour l'enquête d'adresse"),
      I_("Frais pour l'enquête de succession du détenteur"),
      I_("HVBM - autres"),
      I_("HBVL"),
      I_("Dexia"),
      I_("Reconduction d'obligations structurées"),
      I_("Ajustement des parts fusionnées SSB"),
      I_("Frais de garantie"),
      I_("Immobilisé à non immobilisé enregistré"),
      I_("Immobilisé à non enregistré"),
      I_("Unités nominales"),
      I_("Remboursement BEC"),
      I_("Remboursement ACES"),
      I_("Revenus REEE à bénéficiaire non-résident"),
      I_("60 L"),
      I_("Transfert à CELI externe"),
      I_("Remboursement d'impôt spécial d’IQEE"),
      I_("Retrait de cotisation subventionnée REEE"),
      I_("Ajustement de base IQEE"),
      I_("Ajustement à la hausse IQEE"),
      I_("Paiement d'intérêt l'IQEE"),
      I_("Échange sortant de rebalancement minimal du revenu fixe"),
      I_("Transfert au coût de la fusion de fonds TVH"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      I_("Rachat de biens non réclamés"),
      I_("Rachat EQ"),
      I_("Frais de tolérance"),
      I_("Frais de diminution de PAC"),
      I_("Dealer Service Fee"),
      I_("Retour de subvention SEEAS"),
      I_("Correction SEEAS"),
      I_("Transfert PRA vers REEI"),
      I_("Transaction PAE et EPS"),
      I_("Remboursement de SEEEFCB"),
      I_("Remboursement  de la SCEE supplémentaire"),
      I_("Retour de la SCEE supplémentaire"),
      I_("Retour SCEE de base"),
      I_("Remboursement d’impôt spécial de la majoration d’IQEE"),
      I_("RDSP Bond Repayment"),
      I_("RDSP DAP Payment"),
      I_("RDSP Grant Repayment"),
      I_("RDSP LDAP Payment"),
      I_("External RDSP Transfer"),
      I_("Transfert CELI externe – fermer le compte"),
      I_("RDSP Termination Withdrawal"),
      I_("RDSP Bond Return"),
      I_("RDSP Grant Return"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_005_003_000;
   const BFSubstitutionSet SubSet_002_039_005_003_000(
    &aKeys_002_039_005_003_000[0], &aValues_002_039_005_003_000[0] );
   // Substitution set RedCodeSet.  Language: frCA, Market: 4
   static const I_CHAR* aKeys_002_039_005_004_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("EF"),
      I_("FP"),
      I_("Fo"),
      I_("14"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("84"),
      I_("85"),
      I_("09"),
      I_("Re"),
      I_("23"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("72"),
      I_("RD"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      I_("82"),
      I_("87"),
      I_("89"),
      I_("38"),
      I_("MS"),
      I_("GF"),
      I_("43"),
      I_("44"),
      I_("NU"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("QU"),
      I_("73"),
      I_("78"),
      I_("13"),
      I_("86"),
      I_("91"),
      I_("95"),
      I_("Q1"),
      I_("Q2"),
      I_("Q3"),
      I_("39"),
      I_("TA"),
      I_("RC"),
      I_("RM"),
      I_("UP"),
      I_("40"),
      I_("55"),
      I_("81"),
      I_("DF"),
      I_("UC"),
      I_("SR"),
      I_("SC"),
      I_("B1"),
      I_("CT"),
      0x00
   };

   static const I_CHAR* aValues_002_039_005_004_000[] = {
      I_("1/12e de 1 sur les frais d'administration du portefeuille FAR"),
      I_("Frais annuels"),
      I_("Certificat au porteur"),
      I_("Certificat au porteur - transfert de la banque"),
      I_("Certificat au porteur - transfert de la banque"),
      I_("Paiement comptant"),
      I_("Paiement comptant - fermer le compte"),
      I_("Paiement comptant - fermer le compte"),
      I_("Paiement comptant à la succession/au bénéfiaire"),
      I_("Remboursement SCEE de base"),
      I_("Fermer le fonds"),
      I_("Paiement de commission"),
      I_("Décès"),
      I_("Décès - montant forfaitaire"),
      I_("Décès - montant forfaitaire - fermer le compte"),
      I_("Garantie de réclamation en raison de décès<UTILISATION DU SYSTÈME SEULEMENT>"),
      I_("Transfert au décès"),
      I_("Transfert au décès vers une rente"),
      I_("Transfert au décès vers une rente - fermer le compte"),
      I_("Transfert au décès direct au crédirentier successeur"),
      I_("Frais de rachat anticipé"),
      I_("Frais externes"),
      I_("Pénalité de devise étrangère"),
      I_("Contenu étranger"),
      I_("Transfert d'excédent de contenu étranger"),
      I_("Transfert de fonds fusionné au marché"),
      I_("Saisie-arrêt"),
      I_("Saisie-arrêt"),
      I_("Transfert en nature"),
      I_("Intérêt inclus"),
      I_("Intérêt seulement"),
      I_("Intérêt seulement"),
      I_("Frais de gestion"),
      I_("Frais de gestion"),
      I_("Rupture d'union"),
      I_("Rupture d'union – fermer le compte"),
      I_("Transaction de succession qualifiée pour non-résident"),
      I_("Retenue d'impôt pour non-résident"),
      I_("Retenue d'impôt pour non-résident"),
      I_("Frais de chèque sans provision"),
      I_("Frais de chèque sans provision"),
      I_("Capital EPS"),
      I_("Capital EPS - fermer le compte"),
      I_("Remboursement d'excédent"),
      I_("Remboursement d'excédent"),
      I_("Espérance de vie réduite"),
      I_("T2220 - fermer le compte"),
      I_("Transfert au coût"),
      I_("Transfert au coût avec cession"),
      I_("Transfert à un CPG"),
      I_("Transfert d'un fonds d'APSF à un fonds sous-jacent"),
      I_("Transfert à un fonds distinct du marché monétaire"),
      I_("Frais de fiducie"),
      I_("Transfert de fonds fusionné au coût"),
      I_("Régime d'accession à la propriété T1036 - fermer"),
      I_("Difficultés financières FRV/FRVR/FRRI"),
      I_("Difficultés financières CRI/REER immobilisé/REIR"),
      I_("Transfert sortant à l'externe"),
      I_("Réinvestissement de la distribution"),
      I_("Frais pour transfert de coûts"),
      I_("Administration"),
      I_("Frais de livraison de parts au porteur (enregistrés)"),
      I_("Frais de livraison de parts au porteur (matériels)"),
      I_("Frais pour les copies des confirmations"),
      I_("Frais pour les copies des relevés du compte"),
      I_("Frais pour les engagements"),
      I_("Frais pour l'enquête d'adresse"),
      I_("Frais pour l'enquête de succession du détenteur"),
      I_("HVBM - autres"),
      I_("HBVL"),
      I_("Dexia"),
      I_("Reconduction d'obligations structurées"),
      I_("Ajustement des parts fusionnées SSB"),
      I_("Frais de garantie"),
      I_("Immobilisé à non immobilisé enregistré"),
      I_("Immobilisé à non enregistré"),
      I_("Unités nominales"),
      I_("Remboursement BEC"),
      I_("Remboursement ACES"),
      I_("Revenus REEE à bénéficiaire non-résident"),
      I_("60 L"),
      I_("Transfert à CELI externe"),
      I_("Remboursement d'impôt spécial d’IQEE"),
      I_("Frais de fiducie"),
      I_("Retrait de cotisation subventionnée REEE"),
      I_("Frais de gestion"),
      I_("Frais de rachat anticipé"),
      I_("Ajustement de base IQEE"),
      I_("Ajustement à la hausse IQEE"),
      I_("Paiement d'intérêt l'IQEE"),
      I_("Échange sortant de rebalancement minimal du revenu fixe"),
      I_("Transfert au coût de la fusion de fonds TVH"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      I_("Rachat de biens non réclamés"),
      I_("Rachat EQ"),
      I_("Frais de tolérance"),
      I_("Frais de diminution de PAC"),
      I_("Dealer Service Fee"),
      I_("Conversion des unités"),
      I_("Retour de subvention SEEAS"),
      I_("Correction SEEAS"),
      I_("Transfert PRA vers REEI"),
      I_("Transfert CELI externe - fermer le compte"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_005_004_000;
   const BFSubstitutionSet SubSet_002_039_005_004_000(
    &aKeys_002_039_005_004_000[0], &aValues_002_039_005_004_000[0] );
   // Substitution set RedCodeSet.  Language: enIE
   static const I_CHAR* aKeys_002_039_006_000_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_006_000_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("End of Year Adjustment (RRIF/LIF/RLIF/LRIF)"),
      I_("End of Year Adjustment(RRIF/LIF/LRIF)"),
      I_("External Fees"),
      I_("External RRSP Transfer"),
      I_("External RRSP Transfer - close account"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("FC Penalty"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Full Transfer Out (Close a/c) RRIF/LIF/RLIF/LRIF"),
      I_("Full Transfer Out(Close a/c) RRIF/LIF/LRIF"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("GIC Maturity"),
      I_("GIC Maturity"),
      I_("Home Buying Plan (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("LIF/RLIF/LIRA Full Transfer Out"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("LIF/RLIF/LRIF Excess to LIRA/LRSP"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP Withdrawal"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Qualifying Death Tfr - Child(RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("RESP  Earnings to Private Inst - Close Acct"),
      I_("RESP Earning to non-private"),
      I_("RESP Earning to private"),
      I_("RESP Earnings to Beneficiary"),
      I_("RESP Earnings to Beneficiary - Close Acct"),
      I_("RESP Earnings to non-educational"),
      I_("RESP Earnings to non-Private Inst - Close Acct"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP for Non Education -  Close Acct"),
      I_("RESP Redeem Contributions"),
      I_("RESP Redeem Contributions - Close Acct"),
      I_("RESP to RRSP - Close Acct"),
      I_("RESP Transfer Out"),
      I_("RESP Transfer Out - Close A/C"),
      I_("RRSP Transfer"),
      I_("RRSP Transfer - close account"),
      I_("RRSP Transfer - close account"),
      I_("Shortened Life Expectancy"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Transfer to purchaseAnnuity from RRIF etc"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_006_000_000;
   const BFSubstitutionSet SubSet_002_039_006_000_000(
    &aKeys_002_039_006_000_000[0], &aValues_002_039_006_000_000[0] );
   // Substitution set RedCodeSet.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_039_006_003_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_006_003_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("End of Year Adjustment (RRIF/LIF/RLIF/LRIF)"),
      I_("End of Year Adjustment(RRIF/LIF/LRIF)"),
      I_("External Fees"),
      I_("External RRSP Transfer"),
      I_("External RRSP Transfer - close account"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("FC Penalty"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Full Transfer Out (Close a/c) RRIF/LIF/RLIF/LRIF"),
      I_("Full Transfer Out(Close a/c) RRIF/LIF/LRIF"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("GIC Maturity"),
      I_("GIC Maturity"),
      I_("Home Buying Plan (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("LIF/RLIF/LIRA Full Transfer Out"),
      I_("LIF/LIRA Transfer Out"),
      I_("LIF/RLIF/LRIF Excess to LIRA/LRSP"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP Withdrawal"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Qualifying Death Tfr - Child(RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("RESP  Earnings to Private Inst - Close Acct"),
      I_("RESP Earning to non-private"),
      I_("RESP Earning to private"),
      I_("RESP Earnings to Beneficiary"),
      I_("RESP Earnings to Beneficiary - Close Acct"),
      I_("RESP Earnings to non-educational"),
      I_("RESP Earnings to non-Private Inst - Close Acct"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP for Non Education -  Close Acct"),
      I_("RESP Redeem Contributions"),
      I_("RESP Redeem Contributions - Close Acct"),
      I_("RESP to RRSP - Close Acct"),
      I_("RESP Transfer Out"),
      I_("RESP Transfer Out - Close A/C"),
      I_("RRSP Transfer"),
      I_("RRSP Transfer - close account"),
      I_("RRSP Transfer - close account"),
      I_("Shortend Life Exppectancy"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Transfer to purchaseAnnuity from RRIF etc"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_006_003_000;
   const BFSubstitutionSet SubSet_002_039_006_003_000(
    &aKeys_002_039_006_003_000[0], &aValues_002_039_006_003_000[0] );
   // Substitution set RedCodeSet.  Language: enIE, Market: 4
   static const I_CHAR* aKeys_002_039_006_004_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("EF"),
      I_("FP"),
      I_("Fo"),
      I_("14"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("84"),
      I_("85"),
      I_("09"),
      I_("Re"),
      I_("23"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_006_004_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("External Fees"),
      I_("FC Penalty"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("Shortend Life Exppectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_006_004_000;
   const BFSubstitutionSet SubSet_002_039_006_004_000(
    &aKeys_002_039_006_004_000[0], &aValues_002_039_006_004_000[0] );
   // Substitution set RedCodeSet.  Language: deDE
   static const I_CHAR* aKeys_002_039_007_000_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("72"),
      I_("RD"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      I_("82"),
      I_("87"),
      I_("89"),
      I_("38"),
      I_("MS"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_007_000_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("End of Year Adjustment (RRIF/LIF/RLIF/LRIF)"),
      I_("End of Year Adjustment(RRIF/LIF/LRIF)"),
      I_("External Fees"),
      I_("External RRSP Transfer"),
      I_("External RRSP Transfer - close account"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("FC Penalty"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Full Transfer Out (Close a/c) RRIF/LIF/RLIF/LRIF"),
      I_("Full Transfer Out(Close a/c) RRIF/LIF/LRIF"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("GIC Maturity"),
      I_("GIC Maturity"),
      I_("Home Buying Plan (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("LIF/RLIF/LIRA Full Transfer Out"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("LIF/RLIF/LRIF Excess to LIRA/LRSP"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP Withdrawal"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Qualifying Death Tfr - Child(RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("RESP  Earnings to Private Inst - Close Acct"),
      I_("RESP Earning to non-private"),
      I_("RESP Earning to private"),
      I_("RESP Earnings to Beneficiary"),
      I_("RESP Earnings to Beneficiary - Close Acct"),
      I_("RESP Earnings to non-educational"),
      I_("RESP Earnings to non-Private Inst - Close Acct"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP for Non Education -  Close Acct"),
      I_("RESP Redeem Contributions"),
      I_("RESP Redeem Contributions - Close Acct"),
      I_("RESP to RRSP - Close Acct"),
      I_("RESP Transfer Out"),
      I_("RESP Transfer Out - Close A/C"),
      I_("RRSP Transfer"),
      I_("RRSP Transfer - close account"),
      I_("RRSP Transfer - close account"),
      I_("Shortened Life Expectancy"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Transfer to purchaseAnnuity from RRIF etc"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Merger Transfer At Cost"),
      I_("T1036 Home Buying Plan - Close"),
      I_("Financial hard ship LIF/RLIF/LRIF"),
      I_("Financial hard ship LIRA/locked-in RRSP/RLSP"),
      I_("Transfer Out to External"),
      I_("Redirect Distribution"),
      I_("Fee for Transfer of cost"),
      I_("Administration"),
      I_("Fee for bearer shares delivery (book)"),
      I_("Fee for bearer shares delivery (physical)"),
      I_("Fee for Duplicates of confirmations"),
      I_("Fee for Duplicates of account statements"),
      I_("Fee for Pledges"),
      I_("Fee for Address investigation"),
      I_("Fee for shareholder death investigation"),
      I_("HVBM-Others"),
      I_("HVBL"),
      I_("Dexia"),
      I_("Structured Notes Rollover"),
      I_("Merger Share Adjustment"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_007_000_000;
   const BFSubstitutionSet SubSet_002_039_007_000_000(
    &aKeys_002_039_007_000_000[0], &aValues_002_039_007_000_000[0] );
   // Substitution set RedCodeSet.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_039_007_003_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("72"),
      I_("RD"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      I_("82"),
      I_("87"),
      I_("89"),
      I_("38"),
      I_("MS"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_007_003_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("End of Year Adjustment (RRIF/LIF/RLIF/LRIF)"),
      I_("End of Year Adjustment(RRIF/LIF/LRIF)"),
      I_("External Fees"),
      I_("External RRSP Transfer"),
      I_("External RRSP Transfer - close account"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("FC Penalty"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Full Transfer Out (Close a/c) RRIF/LIF/RLIF/LRIF"),
      I_("Full Transfer Out(Close a/c) RRIF/LIF/LRIF"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("GIC Maturity"),
      I_("GIC Maturity"),
      I_("Home Buying Plan (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("LIF/RLIF/LIRA Full Transfer Out"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("LIF/RLIF/LRIF Excess to LIRA/LRSP"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP Withdrawal"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Qualifying Death Tfr - Child(RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("RESP  Earnings to Private Inst - Close Acct"),
      I_("RESP Earning to non-private"),
      I_("RESP Earning to private"),
      I_("RESP Earnings to Beneficiary"),
      I_("RESP Earnings to Beneficiary - Close Acct"),
      I_("RESP Earnings to non-educational"),
      I_("RESP Earnings to non-Private Inst - Close Acct"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP for Non Education -  Close Acct"),
      I_("RESP Redeem Contributions"),
      I_("RESP Redeem Contributions - Close Acct"),
      I_("RESP to RRSP - Close Acct"),
      I_("RESP Transfer Out"),
      I_("RESP Transfer Out - Close A/C"),
      I_("RRSP Transfer"),
      I_("RRSP Transfer - close account"),
      I_("RRSP Transfer - close account"),
      I_("Shortened Life Expectancy"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Transfer to purchaseAnnuity from RRIF etc"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Merger Transfer At Cost"),
      I_("T1036 Home Buying Plan - Close"),
      I_("Financial hard ship LIF/RLIF/LRIF"),
      I_("Financial hard ship LIRA/locked-in RRSP/RLSP"),
      I_("Transfer Out to External"),
      I_("Redirect Distribution"),
      I_("Fee for Transfer of cost"),
      I_("Administration"),
      I_("Fee for bearer shares delivery (book)"),
      I_("Fee for bearer shares delivery (physical)"),
      I_("Fee for Duplicates of confirmations"),
      I_("Fee for Duplicates of account statements"),
      I_("Fee for Pledges"),
      I_("Fee for Address investigation"),
      I_("Fee for shareholder death investigation"),
      I_("HVBM-Others"),
      I_("HVBL"),
      I_("Dexia"),
      I_("Structured Notes Rollover"),
      I_("Merger Share Adjustment"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_007_003_000;
   const BFSubstitutionSet SubSet_002_039_007_003_000(
    &aKeys_002_039_007_003_000[0], &aValues_002_039_007_003_000[0] );
   // Substitution set RedCodeSet.  Language: deDE, Market: 4
   static const I_CHAR* aKeys_002_039_007_004_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("EF"),
      I_("FP"),
      I_("Fo"),
      I_("14"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("84"),
      I_("85"),
      I_("09"),
      I_("Re"),
      I_("23"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("72"),
      I_("RD"),
      I_("A1"),
      I_("A2"),
      I_("A3"),
      I_("A4"),
      I_("A5"),
      I_("A6"),
      I_("A7"),
      I_("A8"),
      I_("A9"),
      I_("82"),
      I_("87"),
      I_("89"),
      I_("38"),
      I_("MS"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_007_004_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("External Fees"),
      I_("FC Penalty"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Merger Transfer At Cost"),
      I_("T1036 Home Buying Plan - Close"),
      I_("Financial hard ship LIF/RLIF/LRIF"),
      I_("Financial hard ship LIRA/locked-in RRSP/RLSP"),
      I_("Transfer Out to External"),
      I_("Redirect Distribution"),
      I_("Fee for Transfer of cost"),
      I_("Administration"),
      I_("Fee for bearer shares delivery (book)"),
      I_("Fee for bearer shares delivery (physical)"),
      I_("Fee for Duplicates of confirmations"),
      I_("Fee for Duplicates of account statements"),
      I_("Fee for Pledges"),
      I_("Fee for Address investigation"),
      I_("Fee for shareholder death investigation"),
      I_("HVBM-Others"),
      I_("HVBL"),
      I_("Dexia"),
      I_("Structured Notes Rollover"),
      I_("Merger Share Adjustment"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_007_004_000;
   const BFSubstitutionSet SubSet_002_039_007_004_000(
    &aKeys_002_039_007_004_000[0], &aValues_002_039_007_004_000[0] );
   // Substitution set RedCodeSet.  Language: esEs
   static const I_CHAR* aKeys_002_039_008_000_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_008_000_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("End of Year Adjustment (RRIF/LIF/RLIF/LRIF)"),
      I_("End of Year Adjustment(RRIF/LIF/LRIF)"),
      I_("External Fees"),
      I_("External RRSP Transfer"),
      I_("External RRSP Transfer - close account"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("FC Penalty"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Full Transfer Out (Close a/c) RRIF/LIF/RLIF/LRIF"),
      I_("Full Transfer Out(Close a/c) RRIF/LIF/LRIF"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("GIC Maturity"),
      I_("GIC Maturity"),
      I_("Home Buying Plan (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("LIF/RLIF/LIRA Full Transfer Out"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("LIF/RLIF/LRIF Excess to LIRA/LRSP"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP Withdrawal"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Qualifying Death Tfr - Child(RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("RESP  Earnings to Private Inst - Close Acct"),
      I_("RESP Earning to non-private"),
      I_("RESP Earning to private"),
      I_("RESP Earnings to Beneficiary"),
      I_("RESP Earnings to Beneficiary - Close Acct"),
      I_("RESP Earnings to non-educational"),
      I_("RESP Earnings to non-Private Inst - Close Acct"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP for Non Education -  Close Acct"),
      I_("RESP Redeem Contributions"),
      I_("RESP Redeem Contributions - Close Acct"),
      I_("RESP to RRSP - Close Acct"),
      I_("RESP Transfer Out"),
      I_("RESP Transfer Out - Close A/C"),
      I_("RRSP Transfer"),
      I_("RRSP Transfer - close account"),
      I_("RRSP Transfer - close account"),
      I_("Shortened Life Expectancy"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Transfer to purchaseAnnuity from RRIF etc"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_008_000_000;
   const BFSubstitutionSet SubSet_002_039_008_000_000(
    &aKeys_002_039_008_000_000[0], &aValues_002_039_008_000_000[0] );
   // Substitution set RedCodeSet.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_039_008_003_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_008_003_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("End of Year Adjustment (RRIF/LIF/RLIF/LRIF)"),
      I_("End of Year Adjustment(RRIF/LIF/LRIF)"),
      I_("External Fees"),
      I_("External RRSP Transfer"),
      I_("External RRSP Transfer - close account"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("FC Penalty"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("First Year RRIF/LIF/RLIF/LRIF Payment"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Full Transfer Out (Close a/c) RRIF/LIF/RLIF/LRIF"),
      I_("Full Transfer Out(Close a/c) RRIF/LIF/LRIF"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("GIC Maturity"),
      I_("GIC Maturity"),
      I_("Home Buying Plan (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("LIF/RLIF/LIRA Full Transfer Out"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("LIF/RLIF/LRIF Excess to LIRA/LRSP"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP Withdrawal"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Minimum RRIF/LIF/RLIF/LRIF Payment"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Optional RRIF/LIF/RLIF/LRIF Payment"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("Partial Transfer Out of RRIF/LIF/RLIF/LRIF"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Qualifying Death Tfr - Child(RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("RESP  Earnings to Private Inst - Close Acct"),
      I_("RESP Earning to non-private"),
      I_("RESP Earning to private"),
      I_("RESP Earnings to Beneficiary"),
      I_("RESP Earnings to Beneficiary - Close Acct"),
      I_("RESP Earnings to non-educational"),
      I_("RESP Earnings to non-Private Inst - Close Acct"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP for Non Education -  Close Acct"),
      I_("RESP Redeem Contributions"),
      I_("RESP Redeem Contributions - Close Acct"),
      I_("RESP to RRSP - Close Acct"),
      I_("RESP Transfer Out"),
      I_("RESP Transfer Out - Close A/C"),
      I_("RRSP Transfer"),
      I_("RRSP Transfer - close account"),
      I_("RRSP Transfer - close account"),
      I_("Shortened Life Expectancy"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Transfer to purchaseAnnuity from RRIF etc"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_008_003_000;
   const BFSubstitutionSet SubSet_002_039_008_003_000(
    &aKeys_002_039_008_003_000[0], &aValues_002_039_008_003_000[0] );
   // Substitution set RedCodeSet.  Language: esEs, Market: 4
   static const I_CHAR* aKeys_002_039_008_004_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("EF"),
      I_("FP"),
      I_("Fo"),
      I_("14"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("84"),
      I_("85"),
      I_("09"),
      I_("Re"),
      I_("23"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_008_004_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Annual Fee"),
      I_("Bearer Certificate"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Bearer Certificate - Transfer from Bank"),
      I_("Cash Payment"),
      I_("Cash Payment - close account"),
      I_("Cash Payment - close account"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commission Payment"),
      I_("Death"),
      I_("Death - Lump Sum"),
      I_("Death - Lump Sum - Close account"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Death Transfer"),
      I_("Death Transfer to Annuity"),
      I_("Death Transfer to Annuity - Close Account"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Early Redemption Fee"),
      I_("External Fees"),
      I_("FC Penalty"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Fund Merger Transfer At Market"),
      I_("Garnishment"),
      I_("Garnishment"),
      I_("In Kind Transfer"),
      I_("Including Interest"),
      I_("Interest Only"),
      I_("Interest Only"),
      I_("Management Fee"),
      I_("Management Fee"),
      I_("Marriage Breakdown"),
      I_("Marriage Breakdown - Close A/C"),
      I_("Non-resident qualified death transaction"),
      I_("Non-Resident Withholding Tax"),
      I_("Non-Resident Withholding Tax"),
      I_("NSF Cheque Fee"),
      I_("NSF Cheque Fee"),
      I_("PSE Capital"),
      I_("PSE Capital - Close A/C"),
      I_("Refund of Excess"),
      I_("Refund of Excess"),
      I_("Shortened Life Expectancy"),
      I_("T2220 - close Account"),
      I_("Transfer At Cost"),
      I_("Transfer At Cost with Disposition"),
      I_("Transfer to GIC"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Transfering to Seg MM fund"),
      I_("Trustee Fee"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_008_004_000;
   const BFSubstitutionSet SubSet_002_039_008_004_000(
    &aKeys_002_039_008_004_000[0], &aValues_002_039_008_004_000[0] );
   // Substitution set RedCodeSet.  Language: enGB
   static const I_CHAR* aKeys_002_039_009_000_000[] = {
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_009_000_000[] = {
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_009_000_000;
   const BFSubstitutionSet SubSet_002_039_009_000_000(
    &aKeys_002_039_009_000_000[0], &aValues_002_039_009_000_000[0] );
   // Substitution set RedCodeSet.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_039_009_003_000[] = {
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_009_003_000[] = {
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_009_003_000;
   const BFSubstitutionSet SubSet_002_039_009_003_000(
    &aKeys_002_039_009_003_000[0], &aValues_002_039_009_003_000[0] );
   // Substitution set RedCodeSet.  Language: enGB, Market: 4
   static const I_CHAR* aKeys_002_039_009_004_000[] = {
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_009_004_000[] = {
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_009_004_000;
   const BFSubstitutionSet SubSet_002_039_009_004_000(
    &aKeys_002_039_009_004_000[0], &aValues_002_039_009_004_000[0] );
   // Substitution set RedCodeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_039_010_000_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("72"),
      I_("RD"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_010_000_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Jaarkosten"),
      I_("Certificaat aan toonder"),
      I_("Certificaat aan toonder - Overdracht van bank"),
      I_("Certificaat aan toonder - Overdracht van bank"),
      I_("Contante betaling"),
      I_("Contante betaling - account sluiten"),
      I_("Contante betaling - account sluiten"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commissiebetaling"),
      I_("Overlijden"),
      I_("Death - Lump Sum"),
      I_("Overlijden - Bedrag ineens - account sluiten"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Overlijdensoverdracht"),
      I_("Overlijdensoverdracht naar lijfrente"),
      I_("Overlijdensoverdracht naar lijfrente - account sluiten"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Kosten vervroegde aflossing"),
      I_("Eindejaarsaanpassing (RRIF/LIF/LRIF)"),
      I_("End of Year Adjustment(RRIF/LIF/LRIF)"),
      I_("Externe kosten"),
      I_("Externe RRSP-overdracht"),
      I_("Externe RRSP-overdracht - account sluiten"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("FC Penalty"),
      I_("Betaling eerste jaar  RRIF/LIF/LRIF"),
      I_("Betaling eerste jaar  RRIF/LIF/LRIF"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Volledige overdracht uit (account sluiten) RRIF/LIF/LRIF"),
      I_("Full Transfer Out(Close a/c) RRIF/LIF/LRIF"),
      I_("Fund Merger Transfer At Market"),
      I_("Beslaglegging"),
      I_("Beslaglegging"),
      I_("GIC-vervaldatum"),
      I_("GIC-vervaldatum"),
      I_("HOME BUYING PLAN (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("In Kind Transfer"),
      I_("Inclusief rente"),
      I_("Alleen rente"),
      I_("Alleen rente"),
      I_("LIF/LIRA Volledige overdracht uit"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("Surplus LIF/LRIF naar LIRA"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP-opname"),
      I_("Beheerkosten"),
      I_("Beheerkosten"),
      I_("Stuklopen huwelijk"),
      I_("Stuklopen huwelijk - account sluiten"),
      I_("Minimumbetaling RRIF/LIF/LRIF"),
      I_("Minimumbetaling RRIF/LIF/LRIF"),
      I_("Gekwalificeerde overlijdenstransactie niet-inwoner"),
      I_("Bronbelasting voor niet-ingezetenen"),
      I_("Bronbelasting voor niet-ingezetenen"),
      I_("NSF-chequekosten"),
      I_("NSF-chequekosten"),
      I_("Optionele betaling RRIF/LIF/LRIF"),
      I_("Optionele betaling RRIF/LIF/LRIF"),
      I_("Gedeeltelijke overdracht uit van RRIF/LIF/LRIF"),
      I_("Gedeeltelijke overdracht uit van RRIF/LIF/LRIF"),
      I_("PSE-kapitaal"),
      I_("PSE-kapitaal - account sluiten"),
      I_("Qualifying Death Tfr - Child(RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Terugstorten van surplus"),
      I_("Terugstorten van surplus"),
      I_("RESP  Earnings to Private Inst - Close Acct"),
      I_("RESP Earning to non-private"),
      I_("RESP Earning to private"),
      I_("RESP-inkomsten naar begunstigde"),
      I_("RESP Earnings to Beneficiary - Close Acct"),
      I_("RESP Earnings to non-educational"),
      I_("RESP Earnings to non-Private Inst - Close Acct"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP for Non Education -  Close Acct"),
      I_("RESP bijdragen aflossen"),
      I_("RESP Redeem Contributions - Close Acct"),
      I_("RESP to RRSP - Close Acct"),
      I_("RESP-overdracht uit"),
      I_("RESP-overdracht uit - account sluiten"),
      I_("RRSP-overdracht"),
      I_("RRSP-overdracht - account sluiten"),
      I_("RRSP-overdracht - account sluiten"),
      I_("Shortened Life Expectancy"),
      I_("Verkorte levensverwachting"),
      I_("T2220 - account sluiten"),
      I_("Overdracht tegen kosten"),
      I_("Overdracht tegen kosten met beschikking"),
      I_("Transfer to GIC"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Transfer to purchaseAnnuity from RRIF etc"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Wordt overgedragen aan Seg MM-fonds"),
      I_("Trusteekosten"),
      I_("Fund Merger Transfer At Cost"),
      I_("T1036 Home Buying Plan - Close"),
      I_("Financial hard ship LIF/RLIF/LRIF"),
      I_("Financial hard ship LIRA/locked-in RRSP/RLSP"),
      I_("Transfer Out to External"),
      I_("Redirect Distribution"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_010_000_000;
   const BFSubstitutionSet SubSet_002_039_010_000_000(
    &aKeys_002_039_010_000_000[0], &aValues_002_039_010_000_000[0] );
   // Substitution set RedCodeSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_039_010_003_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("19"),
      I_("En"),
      I_("EF"),
      I_("05"),
      I_("06"),
      I_("Ex"),
      I_("FP"),
      I_("12"),
      I_("Fi"),
      I_("Fo"),
      I_("14"),
      I_("52"),
      I_("Fu"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("18"),
      I_("GI"),
      I_("15"),
      I_("HO"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("56"),
      I_("28"),
      I_("54"),
      I_("LI"),
      I_("24"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("10"),
      I_("Mi"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("11"),
      I_("Op"),
      I_("51"),
      I_("Pa"),
      I_("84"),
      I_("85"),
      I_("58"),
      I_("57"),
      I_("09"),
      I_("Re"),
      I_("71"),
      I_("62"),
      I_("63"),
      I_("61"),
      I_("69"),
      I_("66"),
      I_("70"),
      I_("67"),
      I_("79"),
      I_("60"),
      I_("68"),
      I_("80"),
      I_("64"),
      I_("65"),
      I_("03"),
      I_("04"),
      I_("RR"),
      I_("23"),
      I_("Sh"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("Tr"),
      I_("53"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("72"),
      I_("RD"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_010_003_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Jaarkosten"),
      I_("Certificaat aan toonder"),
      I_("Certificaat aan toonder - Overdracht van bank"),
      I_("Certificaat aan toonder - Overdracht van bank"),
      I_("Contante betaling"),
      I_("Contante betaling - account sluiten"),
      I_("Contante betaling - account sluiten"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commissiebetaling"),
      I_("Overlijden"),
      I_("Death - Lump Sum"),
      I_("Overlijden - Bedrag ineens - account sluiten"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Overlijdensoverdracht"),
      I_("Overlijdensoverdracht naar lijfrente"),
      I_("Overlijdensoverdracht naar lijfrente - account sluiten"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Kosten vervroegde aflossing"),
      I_("Eindejaarsaanpassing (RRIF/LIF/LRIF)"),
      I_("End of Year Adjustment(RRIF/LIF/LRIF)"),
      I_("Externe kosten"),
      I_("Externe RRSP-overdracht"),
      I_("Externe RRSP-overdracht - account sluiten"),
      I_("External RRSP(T20333) Tfr - close acct"),
      I_("FC Penalty"),
      I_("Betaling eerste jaar  RRIF/LIF/LRIF"),
      I_("Betaling eerste jaar  RRIF/LIF/LRIF"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Volledige overdracht uit (account sluiten) RRIF/LIF/LRIF"),
      I_("Full Transfer Out(Close a/c) RRIF/LIF/LRIF"),
      I_("Fund Merger Transfer At Market"),
      I_("Beslaglegging"),
      I_("Beslaglegging"),
      I_("GIC-vervaldatum"),
      I_("GIC-vervaldatum"),
      I_("HOME BUYING PLAN (RRSP)"),
      I_("HOME BUYING PLAN(RRSP)"),
      I_("In Kind Transfer"),
      I_("Inclusief rente"),
      I_("Alleen rente"),
      I_("Alleen rente"),
      I_("LIF/LIRA Volledige overdracht uit"),
      I_("LIF/RLIF/LIRA/PRIF Transfer Out"),
      I_("Surplus LIF/LRIF naar LIRA"),
      I_("LIF/LRIF Excess to LIRF"),
      I_("LLP-opname"),
      I_("Beheerkosten"),
      I_("Beheerkosten"),
      I_("Stuklopen huwelijk"),
      I_("Stuklopen huwelijk - account sluiten"),
      I_("Minimumbetaling RRIF/LIF/LRIF"),
      I_("Minimumbetaling RRIF/LIF/LRIF"),
      I_("Gekwalificeerde overlijdenstransactie niet-inwoner"),
      I_("Bronbelasting voor niet-ingezetenen"),
      I_("Bronbelasting voor niet-ingezetenen"),
      I_("NSF-chequekosten"),
      I_("NSF-chequekosten"),
      I_("Optionele betaling RRIF/LIF/LRIF"),
      I_("Optionele betaling RRIF/LIF/LRIF"),
      I_("Gedeeltelijke overdracht uit van RRIF/LIF/LRIF"),
      I_("Gedeeltelijke overdracht uit van RRIF/LIF/LRIF"),
      I_("PSE-kapitaal"),
      I_("PSE-kapitaal - account sluiten"),
      I_("Qualifying Death Tfr - Child(RRIF/LIF/LRIF)"),
      I_("Qualifying Death Tfr- Spouse (RRIF/LIF/LRIF)"),
      I_("Terugstorten van surplus"),
      I_("Terugstorten van surplus"),
      I_("RESP  Earnings to Private Inst - Close Acct"),
      I_("RESP Earning to non-private"),
      I_("RESP Earning to private"),
      I_("RESP-inkomsten naar begunstigde"),
      I_("RESP Earnings to Beneficiary - Close Acct"),
      I_("RESP Earnings to non-educational"),
      I_("RESP Earnings to non-Private Inst - Close Acct"),
      I_("RESP Earnings to RRSP(contrib/spouse"),
      I_("RESP for Non Education -  Close Acct"),
      I_("RESP bijdragen aflossen"),
      I_("RESP Redeem Contributions - Close Acct"),
      I_("RESP to RRSP - Close Acct"),
      I_("RESP-overdracht uit"),
      I_("RESP-overdracht uit - account sluiten"),
      I_("RRSP-overdracht"),
      I_("RRSP-overdracht - account sluiten"),
      I_("RRSP-overdracht - account sluiten"),
      I_("Shortend Life Exppectancy"),
      I_("Verkorte levensverwachting"),
      I_("T2220 - account sluiten"),
      I_("Overdracht tegen kosten"),
      I_("Overdracht tegen kosten met beschikking"),
      I_("Transfer to GIC"),
      I_("Transfer to Purchase Annuity from RRIF"),
      I_("Transfer to purchaseAnnuity from RRIF etc"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Wordt overgedragen aan Seg MM-fonds"),
      I_("Trusteekosten"),
      I_("Fund Merger Transfer At Cost"),
      I_("T1036 Home Buying Plan - Close"),
      I_("Financial hard ship LIF/RLIF/LRIF"),
      I_("Financial hard ship LIRA/locked-in RRSP/RLSP"),
      I_("Transfer Out to External"),
      I_("Redirect Distribution"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_010_003_000;
   const BFSubstitutionSet SubSet_002_039_010_003_000(
    &aKeys_002_039_010_003_000[0], &aValues_002_039_010_003_000[0] );
   // Substitution set RedCodeSet.  Language: nlNL, Market: 4
   static const I_CHAR* aKeys_002_039_010_004_000[] = {
      I_("88"),
      I_("93"),
      I_("16"),
      I_("17"),
      I_("Be"),
      I_("01"),
      I_("02"),
      I_("Ca"),
      I_("37"),
      I_("83"),
      I_("90"),
      I_("Co"),
      I_("07"),
      I_("34"),
      I_("35"),
      I_("De"),
      I_("08"),
      I_("32"),
      I_("33"),
      I_("59"),
      I_("95"),
      I_("EF"),
      I_("FP"),
      I_("Fo"),
      I_("14"),
      I_("48"),
      I_("50"),
      I_("Ga"),
      I_("27"),
      I_("98"),
      I_("99"),
      I_("In"),
      I_("91"),
      I_("Ma"),
      I_("30"),
      I_("29"),
      I_("41"),
      I_("92"),
      I_("No"),
      I_("97"),
      I_("NS"),
      I_("84"),
      I_("85"),
      I_("09"),
      I_("Re"),
      I_("23"),
      I_("T2"),
      I_("25"),
      I_("26"),
      I_("94"),
      I_("46"),
      I_("45"),
      I_("13"),
      I_("47"),
      I_("74"),
      I_("HI"),
      I_("HS"),
      I_("72"),
      I_("RD"),
      I_("RC"),
      I_("RM"),
      0x00
   };

   static const I_CHAR* aValues_002_039_010_004_000[] = {
      I_("1/12th of 1 DSC Holdings Admin Fee"),
      I_("Jaarkosten"),
      I_("Certificaat aan toonder"),
      I_("Certificaat aan toonder - Overdracht van bank"),
      I_("Certificaat aan toonder - Overdracht van bank"),
      I_("Contante betaling"),
      I_("Contante betaling - account sluiten"),
      I_("Contante betaling - account sluiten"),
      I_("Cash Payment to Estate/beneficiary"),
      I_("Basic CESG Repayment"),
      I_("Close Fund"),
      I_("Commissiebetaling"),
      I_("Overlijden"),
      I_("Death - Lump Sum"),
      I_("Overlijden - Bedrag ineens - account sluiten"),
      I_("Death Claim Guarantee<SYSTEM USE ONLY>"),
      I_("Overlijdensoverdracht"),
      I_("Overlijdensoverdracht naar lijfrente"),
      I_("Overlijdensoverdracht naar lijfrente - account sluiten"),
      I_("Direct Death Xfer to successor annuitant"),
      I_("Kosten vervroegde aflossing"),
      I_("Externe kosten"),
      I_("FC Penalty"),
      I_("Foreign Content"),
      I_("Foreign Content Excess Tranfer"),
      I_("Fund Merger Transfer At Market"),
      I_("Beslaglegging"),
      I_("Beslaglegging"),
      I_("In Kind Transfer"),
      I_("Inclusief rente"),
      I_("Alleen rente"),
      I_("Alleen rente"),
      I_("Beheerkosten"),
      I_("Beheerkosten"),
      I_("Stuklopen huwelijk"),
      I_("Stuklopen huwelijk - account sluiten"),
      I_("Gekwalificeerde overlijdenstransactie niet-inwoner"),
      I_("Bronbelasting voor niet-ingezetenen"),
      I_("Bronbelasting voor niet-ingezetenen"),
      I_("NSF-chequekosten"),
      I_("NSF-chequekosten"),
      I_("PSE-kapitaal"),
      I_("PSE-kapitaal - account sluiten"),
      I_("Terugstorten van surplus"),
      I_("Terugstorten van surplus"),
      I_("Shortend Life Exppectancy"),
      I_("T2220 - account sluiten"),
      I_("Overdracht tegen kosten"),
      I_("Overdracht tegen kosten met beschikking"),
      I_("Transfer to GIC"),
      I_("Transfer to underlying fund from DCAF"),
      I_("Wordt overgedragen aan Seg MM-fonds"),
      I_("Trusteekosten"),
      I_("Fund Merger Transfer At Cost"),
      I_("T1036 Home Buying Plan - Close"),
      I_("Financial hard ship LIF/RLIF/LRIF"),
      I_("Financial hard ship LIRA/locked-in RRSP/RLSP"),
      I_("Transfer Out to External"),
      I_("Redirect Distribution"),
      I_("Fund Re-designation at Cost"),
      I_("Fund Re-designation at Market"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_010_004_000;
   const BFSubstitutionSet SubSet_002_039_010_004_000(
    &aKeys_002_039_010_004_000[0], &aValues_002_039_010_004_000[0] );
   // Substitution set RedCodeSet.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_039_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_039_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_011_003_000;
   const BFSubstitutionSet SubSet_002_039_011_003_000(
    &aKeys_002_039_011_003_000[0], &aValues_002_039_011_003_000[0] );
   // Substitution set RedCodeSet.  Language: itIT, Market: 4
   static const I_CHAR* aKeys_002_039_011_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_039_011_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_011_004_000;
   const BFSubstitutionSet SubSet_002_039_011_004_000(
    &aKeys_002_039_011_004_000[0], &aValues_002_039_011_004_000[0] );
   // Substitution set RedCodeSet.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_039_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_039_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_012_003_000;
   const BFSubstitutionSet SubSet_002_039_012_003_000(
    &aKeys_002_039_012_003_000[0], &aValues_002_039_012_003_000[0] );
   // Substitution set RedCodeSet.  Language: thTH, Market: 4
   static const I_CHAR* aKeys_002_039_012_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_039_012_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_039_012_004_000;
   const BFSubstitutionSet SubSet_002_039_012_004_000(
    &aKeys_002_039_012_004_000[0], &aValues_002_039_012_004_000[0] );
   // Substitution set RelateCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_040_001_000_000[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("60"),
      I_("90"),
      I_("99"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_040_001_000_000[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Spouse"),
      I_("Sibling"),
      I_("Uncle/Aunt"),
      I_("Cousin"),
      I_("Nephew/Niece"),
      I_("Unrelated"),
      I_("Other"),
      I_("Unknown"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      I_("NOT DESIGNATED"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_001_000_000;
   const BFSubstitutionSet SubSet_002_040_001_000_000(
    &aKeys_002_040_001_000_000[0], &aValues_002_040_001_000_000[0] );
   // Substitution set RelateCodeSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_040_001_003_000[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("60"),
      I_("90"),
      I_("99"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_040_001_003_000[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Spouse"),
      I_("Sibling"),
      I_("Uncle/Aunt"),
      I_("Cousin"),
      I_("Nephew/Niece"),
      I_("Unrelated"),
      I_("Other"),
      I_("Unknown"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      I_("NOT DESIGNATED"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_001_003_000;
   const BFSubstitutionSet SubSet_002_040_001_003_000(
    &aKeys_002_040_001_003_000[0], &aValues_002_040_001_003_000[0] );
   // Substitution set RelateCodeSet.  Language: enUS, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_040_001_003_003[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_040_001_003_003[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      I_("NOT DESIGNATED"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_001_003_003;
   const BFSubstitutionSet SubSet_002_040_001_003_003(
    &aKeys_002_040_001_003_003[0], &aValues_002_040_001_003_003[0] );
   // Substitution set RelateCodeSet.  Language: enUS, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_040_001_003_011[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_040_001_003_011[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      I_("NOT DESIGNATED"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_001_003_011;
   const BFSubstitutionSet SubSet_002_040_001_003_011(
    &aKeys_002_040_001_003_011[0], &aValues_002_040_001_003_011[0] );
   // Substitution set RelateCodeSet.  Language: enUS, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_040_001_003_014[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_040_001_003_014[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      I_("NOT DESIGNATED"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_001_003_014;
   const BFSubstitutionSet SubSet_002_040_001_003_014(
    &aKeys_002_040_001_003_014[0], &aValues_002_040_001_003_014[0] );
   // Substitution set RelateCodeSet.  Language: enCA
   static const I_CHAR* aKeys_002_040_003_000_000[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("60"),
      I_("90"),
      I_("99"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_003_000_000[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Spouse"),
      I_("Sibling"),
      I_("Uncle/Aunt"),
      I_("Cousin"),
      I_("Nephew/Niece"),
      I_("Unrelated"),
      I_("Other"),
      I_("Unknown"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_003_000_000;
   const BFSubstitutionSet SubSet_002_040_003_000_000(
    &aKeys_002_040_003_000_000[0], &aValues_002_040_003_000_000[0] );
   // Substitution set RelateCodeSet.  Language: enCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_040_003_003_003[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_003_003_003[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_003_003_003;
   const BFSubstitutionSet SubSet_002_040_003_003_003(
    &aKeys_002_040_003_003_003[0], &aValues_002_040_003_003_003[0] );
   // Substitution set RelateCodeSet.  Language: enCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_040_003_003_011[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_003_003_011[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_003_003_011;
   const BFSubstitutionSet SubSet_002_040_003_003_011(
    &aKeys_002_040_003_003_011[0], &aValues_002_040_003_003_011[0] );
   // Substitution set RelateCodeSet.  Language: enCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_040_003_003_014[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_003_003_014[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_003_003_014;
   const BFSubstitutionSet SubSet_002_040_003_003_014(
    &aKeys_002_040_003_003_014[0], &aValues_002_040_003_003_014[0] );
   // Substitution set RelateCodeSet.  Language: frFR
   static const I_CHAR* aKeys_002_040_004_000_000[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      0x00
   };

   static const I_CHAR* aValues_002_040_004_000_000[] = {
      I_("NOT DESIGNATED"),
      I_("WIFE"),
      I_("HUSBAND"),
      I_("MOTHER"),
      I_("FATHER"),
      I_("DAUGHTER"),
      I_("SON"),
      I_("SISTER"),
      I_("BROTHER"),
      I_("NIECE"),
      I_("NEPHEW"),
      I_("AUNT"),
      I_("UNCLE"),
      I_("PARENTS"),
      I_("CHILDREN"),
      I_("GRANDMOTHER"),
      I_("GRANDFATHER"),
      I_("GRANDPARENTS"),
      I_("GRANDCHILDREN"),
      I_("COMMON LAW SPOUSE"),
      I_("GRANDSON"),
      I_("GRANDDAUGHTER"),
      I_("FRIEND"),
      I_("AMI"),
      I_("AMIE"),
      I_("SEE APPLICATION FORM"),
      I_("ESTATE"),
      I_("TRUSTEE"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_004_000_000;
   const BFSubstitutionSet SubSet_002_040_004_000_000(
    &aKeys_002_040_004_000_000[0], &aValues_002_040_004_000_000[0] );
   // Substitution set RelateCodeSet.  Language: frFR, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_040_004_003_003[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      0x00
   };

   static const I_CHAR* aValues_002_040_004_003_003[] = {
      I_("NOT DESIGNATED"),
      I_("WIFE"),
      I_("HUSBAND"),
      I_("MOTHER"),
      I_("FATHER"),
      I_("DAUGHTER"),
      I_("SON"),
      I_("SISTER"),
      I_("BROTHER"),
      I_("NIECE"),
      I_("NEPHEW"),
      I_("AUNT"),
      I_("UNCLE"),
      I_("PARENTS"),
      I_("CHILDREN"),
      I_("GRANDMOTHER"),
      I_("GRANDFATHER"),
      I_("GRANDPARENTS"),
      I_("GRANDCHILDREN"),
      I_("COMMON LAW SPOUSE"),
      I_("GRANDSON"),
      I_("GRANDDAUGHTER"),
      I_("FRIEND"),
      I_("AMI"),
      I_("AMIE"),
      I_("SEE APPLICATION FORM"),
      I_("ESTATE"),
      I_("TRUSTEE"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_004_003_003;
   const BFSubstitutionSet SubSet_002_040_004_003_003(
    &aKeys_002_040_004_003_003[0], &aValues_002_040_004_003_003[0] );
   // Substitution set RelateCodeSet.  Language: frFR, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_040_004_003_011[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      0x00
   };

   static const I_CHAR* aValues_002_040_004_003_011[] = {
      I_("NOT DESIGNATED"),
      I_("WIFE"),
      I_("HUSBAND"),
      I_("MOTHER"),
      I_("FATHER"),
      I_("DAUGHTER"),
      I_("SON"),
      I_("SISTER"),
      I_("BROTHER"),
      I_("NIECE"),
      I_("NEPHEW"),
      I_("AUNT"),
      I_("UNCLE"),
      I_("PARENTS"),
      I_("CHILDREN"),
      I_("GRANDMOTHER"),
      I_("GRANDFATHER"),
      I_("GRANDPARENTS"),
      I_("GRANDCHILDREN"),
      I_("COMMON LAW SPOUSE"),
      I_("GRANDSON"),
      I_("GRANDDAUGHTER"),
      I_("FRIEND"),
      I_("AMI"),
      I_("AMIE"),
      I_("SEE APPLICATION FORM"),
      I_("ESTATE"),
      I_("TRUSTEE"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_004_003_011;
   const BFSubstitutionSet SubSet_002_040_004_003_011(
    &aKeys_002_040_004_003_011[0], &aValues_002_040_004_003_011[0] );
   // Substitution set RelateCodeSet.  Language: frFR, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_040_004_003_014[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      0x00
   };

   static const I_CHAR* aValues_002_040_004_003_014[] = {
      I_("NOT DESIGNATED"),
      I_("WIFE"),
      I_("HUSBAND"),
      I_("MOTHER"),
      I_("FATHER"),
      I_("DAUGHTER"),
      I_("SON"),
      I_("SISTER"),
      I_("BROTHER"),
      I_("NIECE"),
      I_("NEPHEW"),
      I_("AUNT"),
      I_("UNCLE"),
      I_("PARENTS"),
      I_("CHILDREN"),
      I_("GRANDMOTHER"),
      I_("GRANDFATHER"),
      I_("GRANDPARENTS"),
      I_("GRANDCHILDREN"),
      I_("COMMON LAW SPOUSE"),
      I_("GRANDSON"),
      I_("GRANDDAUGHTER"),
      I_("FRIEND"),
      I_("AMI"),
      I_("AMIE"),
      I_("SEE APPLICATION FORM"),
      I_("ESTATE"),
      I_("TRUSTEE"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_004_003_014;
   const BFSubstitutionSet SubSet_002_040_004_003_014(
    &aKeys_002_040_004_003_014[0], &aValues_002_040_004_003_014[0] );
   // Substitution set RelateCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_040_005_000_000[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("60"),
      I_("90"),
      I_("99"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_040_005_000_000[] = {
      I_("Aucune désignation"),
      I_("Épouse"),
      I_("Époux"),
      I_("Mère"),
      I_("Père"),
      I_("Fille"),
      I_("Fils"),
      I_("Soeur"),
      I_("Frère"),
      I_("Nièce"),
      I_("Neveu"),
      I_("Tante"),
      I_("Oncle"),
      I_("Parents"),
      I_("Enfants"),
      I_("Grand-mère"),
      I_("Grand-père"),
      I_("Grands-parents"),
      I_("Petits-enfants"),
      I_("Conjoint de fait"),
      I_("Petit-fils"),
      I_("Petite-fille"),
      I_("Ami(e)"),
      I_("Ami"),
      I_("Amie"),
      I_("Voir la proposition"),
      I_("Succession"),
      I_("Fiduciaire"),
      I_("Conjoint"),
      I_("Frère/sœur"),
      I_("Oncle/tante"),
      I_("Cousin(e)"),
      I_("Neveu/nièce"),
      I_("Sans lien de parenté"),
      I_("Autre"),
      I_("Inconnu"),
      I_("Soi-même"),
      I_("Beau-frère"),
      I_("Belle-soeur"),
      I_("Belle-mère"),
      I_("Beau-père"),
      I_("Tuteur"),
      I_("AUCUNE DÉSIGNATION"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_005_000_000;
   const BFSubstitutionSet SubSet_002_040_005_000_000(
    &aKeys_002_040_005_000_000[0], &aValues_002_040_005_000_000[0] );
   // Substitution set RelateCodeSet.  Language: frCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_040_005_003_003[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_040_005_003_003[] = {
      I_("NON SPECIFIE"),
      I_("EPOUSE"),
      I_("EPOUX"),
      I_("MERE"),
      I_("PERE"),
      I_("FILLE"),
      I_("FILS"),
      I_("SOEUR"),
      I_("FRERE"),
      I_("NIECE"),
      I_("NEVEU"),
      I_("TANTE"),
      I_("ONCLE"),
      I_("PARENTS"),
      I_("ENFANT"),
      I_("GRAND-MERE"),
      I_("GRAND-PERE"),
      I_("GRANDS-PARENTS"),
      I_("PETITS-ENFANTS"),
      I_("EPOUX SOUS REGIME COMMUNAUTE DES BIENS"),
      I_("PETIT-FILS"),
      I_("PETITE-FILLE"),
      I_("AMI(E)"),
      I_("AMI"),
      I_("AMIE"),
      I_("CF FORMULAIRE D'INSCRIPTION"),
      I_("SUCCESSION"),
      I_("Fiduciaire"),
      I_("Soi-même"),
      I_("Beau-frère"),
      I_("Belle-soeur"),
      I_("Belle-mère"),
      I_("Beau-père"),
      I_("Tuteur"),
      I_("AUCUNE DÉSIGNATION"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_005_003_003;
   const BFSubstitutionSet SubSet_002_040_005_003_003(
    &aKeys_002_040_005_003_003[0], &aValues_002_040_005_003_003[0] );
   // Substitution set RelateCodeSet.  Language: frCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_040_005_003_011[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_040_005_003_011[] = {
      I_("NON SPECIFIE"),
      I_("EPOUSE"),
      I_("EPOUX"),
      I_("MERE"),
      I_("PERE"),
      I_("FILLE"),
      I_("FILS"),
      I_("SOEUR"),
      I_("FRERE"),
      I_("NIECE"),
      I_("NEVEU"),
      I_("TANTE"),
      I_("ONCLE"),
      I_("PARENTS"),
      I_("ENFANT"),
      I_("GRAND-MERE"),
      I_("GRAND-PERE"),
      I_("GRANDS-PARENTS"),
      I_("PETITS-ENFANTS"),
      I_("EPOUX SOUS REGIME COMMUNAUTE DES BIENS"),
      I_("PETIT-FILS"),
      I_("PETITE-FILLE"),
      I_("AMI(E)"),
      I_("AMI"),
      I_("AMIE"),
      I_("CF FORMULAIRE D'INSCRIPTION"),
      I_("SUCCESSION"),
      I_("Fiduciaire"),
      I_("Soi-même"),
      I_("Beau-frère"),
      I_("Belle-soeur"),
      I_("Belle-mère"),
      I_("Beau-père"),
      I_("Tuteur"),
      I_("AUCUNE DÉSIGNATION"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_005_003_011;
   const BFSubstitutionSet SubSet_002_040_005_003_011(
    &aKeys_002_040_005_003_011[0], &aValues_002_040_005_003_011[0] );
   // Substitution set RelateCodeSet.  Language: frCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_040_005_003_014[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_040_005_003_014[] = {
      I_("NON SPECIFIE"),
      I_("EPOUSE"),
      I_("EPOUX"),
      I_("MERE"),
      I_("PERE"),
      I_("FILLE"),
      I_("FILS"),
      I_("SOEUR"),
      I_("FRERE"),
      I_("NIECE"),
      I_("NEVEU"),
      I_("TANTE"),
      I_("ONCLE"),
      I_("PARENTS"),
      I_("ENFANT"),
      I_("GRAND-MERE"),
      I_("GRAND-PERE"),
      I_("GRANDS-PARENTS"),
      I_("PETITS-ENFANTS"),
      I_("EPOUX SOUS REGIME COMMUNAUTE DES BIENS"),
      I_("PETIT-FILS"),
      I_("PETITE-FILLE"),
      I_("AMI(E)"),
      I_("AMI"),
      I_("AMIE"),
      I_("CF FORMULAIRE D'INSCRIPTION"),
      I_("SUCCESSION"),
      I_("Fiduciaire"),
      I_("Soi-même"),
      I_("Beau-frère"),
      I_("Belle-soeur"),
      I_("Belle-mère"),
      I_("Beau-père"),
      I_("Tuteur"),
      I_("AUCUNE DÉSIGNATION"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_005_003_014;
   const BFSubstitutionSet SubSet_002_040_005_003_014(
    &aKeys_002_040_005_003_014[0], &aValues_002_040_005_003_014[0] );
   // Substitution set RelateCodeSet.  Language: enIE
   static const I_CHAR* aKeys_002_040_006_000_000[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("60"),
      I_("90"),
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_040_006_000_000[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Spouse"),
      I_("Sibling"),
      I_("Uncle/Aunt"),
      I_("Cousin"),
      I_("Nephew/Niece"),
      I_("Unrelated"),
      I_("Other"),
      I_("Unknown"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_006_000_000;
   const BFSubstitutionSet SubSet_002_040_006_000_000(
    &aKeys_002_040_006_000_000[0], &aValues_002_040_006_000_000[0] );
   // Substitution set RelateCodeSet.  Language: enIE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_040_006_003_003[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      0x00
   };

   static const I_CHAR* aValues_002_040_006_003_003[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_006_003_003;
   const BFSubstitutionSet SubSet_002_040_006_003_003(
    &aKeys_002_040_006_003_003[0], &aValues_002_040_006_003_003[0] );
   // Substitution set RelateCodeSet.  Language: enIE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_040_006_003_011[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      0x00
   };

   static const I_CHAR* aValues_002_040_006_003_011[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_006_003_011;
   const BFSubstitutionSet SubSet_002_040_006_003_011(
    &aKeys_002_040_006_003_011[0], &aValues_002_040_006_003_011[0] );
   // Substitution set RelateCodeSet.  Language: enIE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_040_006_003_014[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      0x00
   };

   static const I_CHAR* aValues_002_040_006_003_014[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_006_003_014;
   const BFSubstitutionSet SubSet_002_040_006_003_014(
    &aKeys_002_040_006_003_014[0], &aValues_002_040_006_003_014[0] );
   // Substitution set RelateCodeSet.  Language: deDE
   static const I_CHAR* aKeys_002_040_007_000_000[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("60"),
      I_("90"),
      I_("99"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_007_000_000[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Spouse"),
      I_("Sibling"),
      I_("Uncle/Aunt"),
      I_("Cousin"),
      I_("Nephew/Niece"),
      I_("Unrelated"),
      I_("Other"),
      I_("Unknown"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_007_000_000;
   const BFSubstitutionSet SubSet_002_040_007_000_000(
    &aKeys_002_040_007_000_000[0], &aValues_002_040_007_000_000[0] );
   // Substitution set RelateCodeSet.  Language: deDE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_040_007_003_003[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_007_003_003[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_007_003_003;
   const BFSubstitutionSet SubSet_002_040_007_003_003(
    &aKeys_002_040_007_003_003[0], &aValues_002_040_007_003_003[0] );
   // Substitution set RelateCodeSet.  Language: deDE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_040_007_003_011[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_007_003_011[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_007_003_011;
   const BFSubstitutionSet SubSet_002_040_007_003_011(
    &aKeys_002_040_007_003_011[0], &aValues_002_040_007_003_011[0] );
   // Substitution set RelateCodeSet.  Language: deDE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_040_007_003_014[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_007_003_014[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_007_003_014;
   const BFSubstitutionSet SubSet_002_040_007_003_014(
    &aKeys_002_040_007_003_014[0], &aValues_002_040_007_003_014[0] );
   // Substitution set RelateCodeSet.  Language: esEs
   static const I_CHAR* aKeys_002_040_008_000_000[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("60"),
      I_("90"),
      I_("99"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_008_000_000[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Spouse"),
      I_("Sibling"),
      I_("Uncle/Aunt"),
      I_("Cousin"),
      I_("Nephew/Niece"),
      I_("Unrelated"),
      I_("Other"),
      I_("Unknown"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_008_000_000;
   const BFSubstitutionSet SubSet_002_040_008_000_000(
    &aKeys_002_040_008_000_000[0], &aValues_002_040_008_000_000[0] );
   // Substitution set RelateCodeSet.  Language: esEs, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_040_008_003_003[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_008_003_003[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_008_003_003;
   const BFSubstitutionSet SubSet_002_040_008_003_003(
    &aKeys_002_040_008_003_003[0], &aValues_002_040_008_003_003[0] );
   // Substitution set RelateCodeSet.  Language: esEs, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_040_008_003_011[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_008_003_011[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_008_003_011;
   const BFSubstitutionSet SubSet_002_040_008_003_011(
    &aKeys_002_040_008_003_011[0], &aValues_002_040_008_003_011[0] );
   // Substitution set RelateCodeSet.  Language: esEs, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_040_008_003_014[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_008_003_014[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Estate"),
      I_("Trustee"),
      I_("Self"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_008_003_014;
   const BFSubstitutionSet SubSet_002_040_008_003_014(
    &aKeys_002_040_008_003_014[0], &aValues_002_040_008_003_014[0] );
   // Substitution set RelateCodeSet.  Language: enGB, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_040_009_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_040_009_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_009_003_003;
   const BFSubstitutionSet SubSet_002_040_009_003_003(
    &aKeys_002_040_009_003_003[0], &aValues_002_040_009_003_003[0] );
   // Substitution set RelateCodeSet.  Language: enGB, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_040_009_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_040_009_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_009_003_011;
   const BFSubstitutionSet SubSet_002_040_009_003_011(
    &aKeys_002_040_009_003_011[0], &aValues_002_040_009_003_011[0] );
   // Substitution set RelateCodeSet.  Language: enGB, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_040_009_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_040_009_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_009_003_014;
   const BFSubstitutionSet SubSet_002_040_009_003_014(
    &aKeys_002_040_009_003_014[0], &aValues_002_040_009_003_014[0] );
   // Substitution set RelateCodeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_040_010_000_000[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("60"),
      I_("90"),
      I_("99"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_010_000_000[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Nalatenschap"),
      I_("Trustee"),
      I_("Spouse"),
      I_("Sibling"),
      I_("Uncle/Aunt"),
      I_("Cousin"),
      I_("Nephew/Niece"),
      I_("Unrelated"),
      I_("Overig"),
      I_("Unknown"),
      I_("Zelf"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_010_000_000;
   const BFSubstitutionSet SubSet_002_040_010_000_000(
    &aKeys_002_040_010_000_000[0], &aValues_002_040_010_000_000[0] );
   // Substitution set RelateCodeSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_040_010_003_000[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("60"),
      I_("90"),
      I_("99"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_010_003_000[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Nalatenschap"),
      I_("Trustee"),
      I_("Spouse"),
      I_("Sibling"),
      I_("Uncle/Aunt"),
      I_("Cousin"),
      I_("Nephew/Niece"),
      I_("Unrelated"),
      I_("Overig"),
      I_("Unknown"),
      I_("Zelf"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_010_003_000;
   const BFSubstitutionSet SubSet_002_040_010_003_000(
    &aKeys_002_040_010_003_000[0], &aValues_002_040_010_003_000[0] );
   // Substitution set RelateCodeSet.  Language: nlNL, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_040_010_003_003[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_010_003_003[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Nalatenschap"),
      I_("Trustee"),
      I_("Zelf"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_010_003_003;
   const BFSubstitutionSet SubSet_002_040_010_003_003(
    &aKeys_002_040_010_003_003[0], &aValues_002_040_010_003_003[0] );
   // Substitution set RelateCodeSet.  Language: nlNL, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_040_010_003_011[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_010_003_011[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Nalatenschap"),
      I_("Trustee"),
      I_("Zelf"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_010_003_011;
   const BFSubstitutionSet SubSet_002_040_010_003_011(
    &aKeys_002_040_010_003_011[0], &aValues_002_040_010_003_011[0] );
   // Substitution set RelateCodeSet.  Language: nlNL, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_040_010_003_014[] = {
      I_("0"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("30"),
      I_("40"),
      I_("50"),
      I_("41"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      0x00
   };

   static const I_CHAR* aValues_002_040_010_003_014[] = {
      I_("Not Designated"),
      I_("Wife"),
      I_("Husband"),
      I_("Mother"),
      I_("Father"),
      I_("Daughter"),
      I_("Son"),
      I_("Sister"),
      I_("Brother"),
      I_("Niece"),
      I_("Nephew"),
      I_("Aunt"),
      I_("Uncle"),
      I_("Parents"),
      I_("Children"),
      I_("Grandmother"),
      I_("Grandfather"),
      I_("Grandparents"),
      I_("Grandchildren"),
      I_("Common Law Spouse"),
      I_("Grandson"),
      I_("Granddaughter"),
      I_("Friend"),
      I_("Ami"),
      I_("Amie"),
      I_("See Application Form"),
      I_("Nalatenschap"),
      I_("Trustee"),
      I_("Zelf"),
      I_("Brother in Law"),
      I_("Sister in Law"),
      I_("Mother in Law"),
      I_("Father in Law"),
      I_("Guardian"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_010_003_014;
   const BFSubstitutionSet SubSet_002_040_010_003_014(
    &aKeys_002_040_010_003_014[0], &aValues_002_040_010_003_014[0] );
   // Substitution set RelateCodeSet.  Language: itIT, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_040_011_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_040_011_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_011_003_003;
   const BFSubstitutionSet SubSet_002_040_011_003_003(
    &aKeys_002_040_011_003_003[0], &aValues_002_040_011_003_003[0] );
   // Substitution set RelateCodeSet.  Language: itIT, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_040_011_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_040_011_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_011_003_011;
   const BFSubstitutionSet SubSet_002_040_011_003_011(
    &aKeys_002_040_011_003_011[0], &aValues_002_040_011_003_011[0] );
   // Substitution set RelateCodeSet.  Language: itIT, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_040_011_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_040_011_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_011_003_014;
   const BFSubstitutionSet SubSet_002_040_011_003_014(
    &aKeys_002_040_011_003_014[0], &aValues_002_040_011_003_014[0] );
   // Substitution set RelateCodeSet.  Language: thTH, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_040_012_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_040_012_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_012_003_003;
   const BFSubstitutionSet SubSet_002_040_012_003_003(
    &aKeys_002_040_012_003_003[0], &aValues_002_040_012_003_003[0] );
   // Substitution set RelateCodeSet.  Language: thTH, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_040_012_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_040_012_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_012_003_011;
   const BFSubstitutionSet SubSet_002_040_012_003_011(
    &aKeys_002_040_012_003_011[0], &aValues_002_040_012_003_011[0] );
   // Substitution set RelateCodeSet.  Language: thTH, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_040_012_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_040_012_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_040_012_003_014;
   const BFSubstitutionSet SubSet_002_040_012_003_014(
    &aKeys_002_040_012_003_014[0], &aValues_002_040_012_003_014[0] );
   // Substitution set RejCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_041_001_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("106"),
      I_("107"),
      I_("11"),
      I_("117"),
      I_("118"),
      I_("119"),
      I_("12"),
      I_("120"),
      I_("121"),
      I_("122"),
      I_("123"),
      I_("125"),
      I_("127"),
      I_("128"),
      I_("129"),
      I_("13"),
      I_("134"),
      I_("135"),
      I_("136"),
      I_("137"),
      I_("138"),
      I_("139"),
      I_("14"),
      I_("140"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("181"),
      I_("182"),
      I_("183"),
      I_("184"),
      I_("186"),
      I_("187"),
      I_("188"),
      I_("189"),
      I_("19"),
      I_("190"),
      I_("191"),
      I_("192"),
      I_("193"),
      I_("194"),
      I_("195"),
      I_("196"),
      I_("197"),
      I_("198"),
      I_("199"),
      I_("20"),
      I_("200"),
      I_("202"),
      I_("203"),
      I_("204"),
      I_("205"),
      I_("206"),
      I_("207"),
      I_("208"),
      I_("209"),
      I_("21"),
      I_("210"),
      I_("211"),
      I_("212"),
      I_("216"),
      I_("217"),
      I_("218"),
      I_("219"),
      I_("22"),
      I_("221"),
      I_("222"),
      I_("223"),
      I_("224"),
      I_("229"),
      I_("23"),
      I_("230"),
      I_("231"),
      I_("232"),
      I_("236"),
      I_("237"),
      I_("238"),
      I_("239"),
      I_("24"),
      I_("240"),
      I_("241"),
      I_("242"),
      I_("243"),
      I_("244"),
      I_("245"),
      I_("246"),
      I_("247"),
      I_("248"),
      I_("249"),
      I_("25"),
      I_("250"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("300"),
      I_("305"),
      I_("31"),
      I_("314"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("89"),
      I_("90"),
      I_("91"),
      I_("92"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("96"),
      I_("97"),
      I_("98"),
      I_("99"),
      I_("100"),
      I_("116"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("260"),
      I_("261"),
      I_("262"),
      I_("263"),
      I_("266"),
      I_("316"),
      I_("317"),
      I_("319"),
      I_("320"),
      I_("321"),
      I_("322"),
      I_("324"),
      I_("325"),
      I_("326"),
      I_("327"),
      I_("328"),
      I_("329"),
      I_("330"),
      I_("331"),
      I_("332"),
      I_("333"),
      I_("335"),
      I_("102"),
      I_("111"),
      I_("166"),
      I_("167"),
      I_("168"),
      I_("169"),
      I_("101"),
      I_("113"),
      I_("141"),
      I_("142"),
      I_("143"),
      I_("144"),
      I_("145"),
      I_("146"),
      I_("147"),
      I_("148"),
      I_("235"),
      I_("338"),
      I_("339"),
      I_("340"),
      I_("341"),
      I_("342"),
      I_("343"),
      I_("344"),
      I_("345"),
      I_("346"),
      I_("351"),
      I_("352"),
      I_("353"),
      I_("354"),
      I_("355"),
      I_("356"),
      I_("357"),
      I_("358"),
      I_("359"),
      I_("360"),
      I_("361"),
      I_("362"),
      I_("363"),
      I_("364"),
      I_("365"),
      I_("366"),
      I_("367"),
      I_("370"),
      I_("374"),
      I_("375"),
      I_("376"),
      I_("377"),
      I_("378"),
      I_("379"),
      I_("385"),
      I_("386"),
      I_("388"),
      I_("389"),
      I_("390"),
      I_("391"),
      I_("392"),
      I_("393"),
      I_("394"),
      I_("395"),
      I_("396"),
      I_("397"),
      I_("398"),
      I_("399"),
      I_("400"),
      I_("401"),
      I_("403"),
      I_("404"),
      I_("405"),
      I_("406"),
      I_("407"),
      I_("411"),
      I_("414"),
      I_("415"),
      I_("417"),
      I_("418"),
      I_("419"),
      I_("420"),
      I_("421"),
      I_("422"),
      I_("423"),
      I_("424"),
      I_("425"),
      I_("426"),
      I_("427"),
      I_("428"),
      I_("430"),
      I_("431"),
      I_("433"),
      I_("434"),
      I_("435"),
      I_("436"),
      I_("437"),
      I_("438"),
      I_("439"),
      I_("440"),
      I_("441"),
      I_("442"),
      I_("443"),
      I_("444"),
      I_("445"),
      I_("446"),
      I_("447"),
      I_("448"),
      I_("449"),
      I_("450"),
      I_("451"),
      I_("452"),
      I_("453"),
      I_("454"),
      I_("455"),
      I_("457"),
      I_("458"),
      I_("459"),
      I_("460"),
      I_("461"),
      I_("462"),
      I_("463"),
      I_("464"),
      I_("465"),
      I_("467"),
      I_("468"),
      I_("469"),
      I_("470"),
      I_("471"),
      I_("472"),
      I_("473"),
      I_("474"),
      I_("475"),
      I_("480"),
      I_("481"),
      I_("483"),
      I_("485"),
      I_("486"),
      I_("487"),
      I_("488"),
      I_("489"),
      I_("490"),
      I_("491"),
      I_("492"),
      I_("493"),
      I_("494"),
      I_("495"),
      I_("496"),
      I_("497"),
      I_("498"),
      I_("500"),
      I_("501"),
      I_("510"),
      I_("520"),
      I_("521"),
      I_("522"),
      I_("523"),
      I_("524"),
      I_("525"),
      I_("526"),
      I_("527"),
      I_("528"),
      I_("529"),
      I_("530"),
      I_("531"),
      I_("532"),
      I_("533"),
      I_("534"),
      I_("535"),
      I_("536"),
      I_("537"),
      I_("538"),
      I_("539"),
      I_("540"),
      I_("541"),
      I_("542"),
      I_("543"),
      I_("544"),
      I_("545"),
      I_("546"),
      I_("548"),
      I_("549"),
      I_("550"),
      I_("551"),
      I_("552"),
      I_("563"),
      I_("565"),
      I_("600"),
      I_("601"),
      I_("602"),
      I_("603"),
      I_("604"),
      I_("706"),
      I_("707"),
      I_("708"),
      I_("709"),
      I_("710"),
      I_("711"),
      I_("712"),
      I_("713"),
      I_("714"),
      I_("715"),
      I_("716"),
      I_("717"),
      I_("718"),
      I_("719"),
      I_("720"),
      I_("721"),
      I_("722"),
      I_("723"),
      I_("724"),
      I_("725"),
      I_("726"),
      I_("727"),
      I_("798"),
      I_("904"),
      I_("905"),
      I_("906"),
      I_("907"),
      I_("908"),
      I_("910"),
      I_("911"),
      I_("912"),
      I_("914"),
      I_("915"),
      I_("916"),
      I_("917"),
      I_("918"),
      I_("919"),
      I_("920"),
      I_("921"),
      I_("922"),
      I_("923"),
      I_("924"),
      I_("925"),
      I_("926"),
      I_("927"),
      I_("928"),
      I_("929"),
      I_("930"),
      I_("931"),
      I_("932"),
      I_("933"),
      I_("934"),
      I_("935"),
      I_("936"),
      I_("937"),
      I_("938"),
      I_("939"),
      I_("940"),
      I_("941"),
      I_("942"),
      I_("943"),
      I_("944"),
      I_("945"),
      I_("946"),
      I_("947"),
      I_("948"),
      I_("949"),
      I_("950"),
      I_("951"),
      I_("952"),
      I_("953"),
      I_("953-Alloc"),
      I_("954"),
      I_("956"),
      I_("957"),
      I_("959"),
      I_("960"),
      I_("961"),
      I_("962"),
      I_("963"),
      I_("967"),
      I_("968"),
      I_("969"),
      I_("970"),
      I_("971"),
      I_("974"),
      I_("975"),
      I_("978"),
      I_("983"),
      I_("984"),
      I_("985"),
      I_("986"),
      I_("987"),
      I_("988"),
      I_("989"),
      I_("990"),
      I_("993"),
      I_("994"),
      I_("995"),
      I_("996"),
      I_("997"),
      I_("998"),
      I_("999"),
      I_("1000"),
      I_("1001"),
      I_("1002"),
      I_("1003"),
      I_("1004"),
      I_("1005"),
      I_("1006"),
      I_("1007"),
      I_("1008"),
      I_("1009"),
      I_("1010"),
      I_("1011"),
      I_("1012"),
      I_("1013"),
      I_("1014"),
      I_("1015"),
      I_("1016"),
      I_("1017"),
      I_("1018"),
      I_("1019"),
      I_("1020"),
      I_("1021"),
      I_("1022"),
      I_("1023"),
      I_("1024"),
      I_("1025"),
      I_("1026"),
      I_("1027"),
      I_("1028"),
      I_("1029"),
      I_("1030"),
      I_("1031"),
      I_("1032"),
      I_("1033"),
      I_("1034"),
      I_("1035"),
      I_("1036"),
      I_("1037"),
      I_("1038"),
      I_("1039"),
      I_("1040"),
      I_("1047"),
      I_("1048"),
      I_("1061"),
      I_("1062"),
      I_("1063"),
      I_("1064"),
      I_("1065"),
      I_("1066"),
      I_("1067"),
      I_("1068"),
      I_("1069"),
      I_("1082"),
      I_("1083"),
      I_("1084"),
      I_("1041"),
      I_("1042"),
      I_("1043"),
      I_("1044"),
      I_("1045"),
      I_("1046"),
      I_("1049"),
      I_("1050"),
      I_("1051"),
      I_("1052"),
      I_("1053"),
      I_("1054"),
      I_("1055"),
      I_("1056"),
      I_("1057"),
      I_("1058"),
      I_("1059"),
      I_("1060"),
      I_("1070"),
      I_("1071"),
      I_("1072"),
      I_("1073"),
      I_("1074"),
      I_("1075"),
      I_("1076"),
      I_("1077"),
      I_("1078"),
      I_("1085"),
      I_("1086"),
      I_("1087"),
      I_("1080"),
      I_("1081"),
      I_("1088"),
      I_("1089"),
      I_("1090"),
      I_("1091"),
      I_("1092"),
      I_("1093"),
      I_("1094"),
      I_("1095"),
      I_("1096"),
      I_("1097"),
      I_("1099"),
      I_("1100"),
      I_("1101"),
      I_("1102"),
      I_("1103"),
      I_("1104"),
      I_("1105"),
      I_("1106"),
      I_("1107"),
      I_("1217"),
      I_("1211"),
      I_("1108"),
      I_("1110"),
      I_("1111"),
      I_("1112"),
      I_("1113"),
      I_("1116"),
      I_("1117"),
      I_("1120"),
      I_("1121"),
      I_("1126"),
      I_("1135"),
      I_("1136"),
      I_("1137"),
      I_("1138"),
      I_("1139"),
      I_("1140"),
      I_("1141"),
      I_("1142"),
      I_("1143"),
      I_("1144"),
      I_("1145"),
      I_("1146"),
      I_("1147"),
      I_("1148"),
      I_("1149"),
      I_("1155"),
      I_("1156"),
      I_("1158"),
      I_("1159"),
      I_("1160"),
      I_("1161"),
      I_("1162"),
      I_("1164"),
      I_("1165"),
      I_("1166"),
      I_("1167"),
      I_("1168"),
      I_("1169"),
      I_("1170"),
      I_("1171"),
      I_("1172"),
      I_("1173"),
      I_("1174"),
      I_("1175"),
      I_("1176"),
      I_("1177"),
      I_("1178"),
      I_("1179"),
      I_("1180"),
      I_("1181"),
      I_("1182"),
      I_("1183"),
      I_("1184"),
      I_("1185"),
      I_("1186"),
      I_("1187"),
      I_("1188"),
      I_("1189"),
      I_("1200"),
      I_("1201"),
      I_("1202"),
      I_("1203"),
      I_("1204"),
      I_("1205"),
      I_("1206"),
      I_("1207"),
      I_("1209"),
      I_("1210"),
      I_("1212"),
      I_("1213"),
      I_("1214"),
      I_("1222"),
      I_("1223"),
      I_("1238"),
      I_("1280"),
      I_("1281"),
      I_("1282"),
      I_("1283"),
      I_("1284"),
      I_("1285"),
      I_("1286"),
      I_("1287"),
      I_("1288"),
      I_("1289"),
      I_("1290"),
      I_("1291"),
      I_("1292"),
      I_("1294"),
      I_("1295"),
      I_("1296"),
      I_("1297"),
      I_("1298"),
      I_("1303"),
      I_("1304"),
      I_("1305"),
      I_("1306"),
      I_("1307"),
      I_("1308"),
      I_("1309"),
      I_("1310"),
      I_("1311"),
      I_("1315"),
      I_("1317"),
      I_("1318"),
      I_("1319"),
      I_("1320"),
      I_("1321"),
      I_("1332"),
      I_("1381"),
      I_("1382"),
      I_("1383"),
      I_("1391"),
      I_("1392"),
      I_("1393"),
      I_("1395"),
      I_("1399"),
      I_("1400"),
      I_("1396"),
      I_("1397"),
      I_("1328"),
      I_("1401"),
      I_("1403"),
      I_("1404"),
      I_("1406"),
      I_("1407"),
      I_("1408"),
      I_("1409"),
      I_("1410"),
      I_("1411"),
      I_("1412"),
      I_("1413"),
      I_("1567"),
      I_("1568"),
      I_("1571"),
      I_("1572"),
      I_("1573"),
      I_("1574"),
      I_("1575"),
      I_("1576"),
      I_("1577"),
      I_("1578"),
      I_("1580"),
      I_("1581"),
      I_("1582"),
      I_("1583"),
      I_("1585"),
      I_("1587"),
      I_("1588"),
      I_("1589"),
      I_("1590"),
      I_("1591"),
      I_("1592"),
      I_("1593"),
      I_("1595"),
      I_("1596"),
      I_("1597"),
      I_("1603"),
      I_("1604"),
      I_("1606"),
      I_("1616"),
      I_("1622"),
      I_("1623"),
      I_("1624"),
      I_("1625"),
      I_("1626"),
      I_("1628"),
      I_("1629"),
      I_("1630"),
      I_("1637"),
      I_("1638"),
      I_("1640"),
      I_("1641"),
      I_("1642"),
      I_("1645"),
      I_("1646"),
      I_("1647"),
      I_("1648"),
      I_("1649"),
      I_("1650"),
      I_("1652"),
      I_("1656"),
      I_("1658"),
      I_("1659"),
      I_("1660"),
      I_("1682"),
      I_("1683"),
      I_("1684"),
      I_("1685"),
      I_("1686"),
      I_("1688"),
      I_("1689"),
      I_("1690"),
      I_("1691"),
      I_("1692"),
      I_("1693"),
      I_("1694"),
      I_("1695"),
      I_("1696"),
      I_("1697"),
      I_("1698"),
      I_("1699"),
      I_("1700"),
      I_("1701"),
      I_("1702"),
      I_("1703"),
      I_("1704"),
      I_("1706"),
      I_("1707"),
      I_("1708"),
      I_("1709"),
      I_("1710"),
      I_("1711"),
      I_("1712"),
      I_("1713"),
      I_("1714"),
      I_("1715"),
      I_("1753"),
      I_("1753-Alloc"),
      I_("1754"),
      I_("1754-Alloc"),
      I_("1757"),
      I_("1759"),
      I_("1760"),
      I_("1761"),
      I_("1776"),
      I_("1777"),
      I_("1778"),
      I_("1779"),
      I_("1780"),
      I_("1787"),
      I_("1788"),
      I_("1789"),
      I_("1790"),
      I_("1974"),
      I_("1977"),
      I_("1978"),
      I_("2071"),
      I_("2072"),
      I_("2090"),
      I_("2091"),
      I_("2092"),
      I_("2093"),
      I_("2094"),
      I_("2095"),
      I_("2131"),
      I_("2140"),
      I_("2141"),
      I_("2180"),
      I_("2183"),
      I_("2184"),
      I_("2185"),
      I_("2186"),
      I_("2187"),
      I_("2188"),
      I_("2203"),
      0x00
   };

   static const I_CHAR* aValues_002_041_001_000_000[] = {
      I_("No Primary Master Record Exists"),
      I_("No Account Master Record Exists"),
      I_("Fund Fee Detail Not Found/Defined"),
      I_("BEL must be Acq and Admin Fee = 0, Prcnt"),
      I_("BackEnd Net Order must not be wire order"),
      I_("Current Unit Value Not Found"),
      I_("Account Not Active at Trade Date"),
      I_("Group Purchase Stop Flag Enables"),
      I_("Account Purchase Stop Flag Enables"),
      I_("ROA not available for this account"),
      I_("Holdback Exist. Reject whole transaction"),
      I_("Holdback $ = Avail $ and Settle method 2 is used."),
      I_("Holding"),
      I_("Holding Fund Detail does not exist"),
      I_("Exceed users setup amount"),
      I_("Fee Waived For this Account"),
      I_("WARN: Dollars must be rounded to Cents"),
      I_("Units Rounding Factor exceeds Unitsprecis"),
      I_("Invalid deposit code for tax type"),
      I_("Fee Entered Without An Over-ride"),
      I_("No Account Value Record Exists"),
      I_("Transaction must be Verified"),
      I_("TI: Exchange Rate does not exist"),
      I_("WARN: Fund Max Subsequent Contrib Exceed"),
      I_("Transaction must be Verified"),
      I_("The Exchange Rate does not exist"),
      I_("WARN: Fund Max Initial Deposit Exceeded"),
      I_("Unit value is equal to zero"),
      I_("Net Purchase Entered Without Fee Amount"),
      I_("The remaining minimum amount must be paid first"),
      I_("Remaining account balance is insufficient to cover"),
      I_("Tax Type Rules not available for account tax type"),
      I_("Scheduled Payment Information not available"),
      I_("Redemption Code Rules not setup"),
      I_("Account Master Table not on file"),
      I_("Fee Override, No Fee Defined"),
      I_("The remaining minimum amount redemption was not pr"),
      I_("Invalid Fund is Indicated"),
      I_("Purchase not allowed for Fund and Class"),
      I_("Invalid Fund for registered account"),
      I_("WARN:Less Than Mininum Initial Purchase"),
      I_("WARN:Less Than Min Fund/Class Balance"),
      I_("WARN:Less Than Minimum Account Balance"),
      I_("WARN:Less Than Min Initial Redemption"),
      I_("WARN:Less Than Min Subsequent Redemption"),
      I_("ESOP  Contribution Exceeds yearly limit"),
      I_("Fund is not ESOP Eligible"),
      I_("Processing Redemption from ESOP Investment Plan"),
      I_("Processing Redemption from ESOP Participation Plan"),
      I_("WARN: Less Than Minimum Allowable Purch."),
      I_("ESOP Transfer must close the Account"),
      I_("Purchasing Security for"),
      I_("Whole Share fund purchase not pre-processed"),
      I_("Net Whole Share redemptions are not allowed"),
      I_("Cannot transfer Out of an ESOP Account"),
      I_("Cannot transfer In of an ESOP Account"),
      I_("No S.W. Ps allowed from ESOP Account"),
      I_("No Amount Available in Cash-holding Fund"),
      I_("Redemption Code not allowed for ESOP"),
      I_("Invalid tax type on account"),
      I_("Less Than Minimum Allowable P.A.C."),
      I_("Redemption Code not allowed for ESOP"),
      I_("Invalid Settlement source"),
      I_("Invalid Settlement Source for Account Designation<"),
      I_("Invalid Order Source"),
      I_("Invalid Settlement Type"),
      I_("Invalid Settlement Type for Dealer/Intermediary<1>"),
      I_("Wire Order Redemption not allowed for Fund<1>"),
      I_("Invalid Order Source for Account Designation<1>"),
      I_("The Intermediary is not permitted to enter wire or"),
      I_("Commission > Maximum Allowed"),
      I_("<1> is not permitted to enter money market wire or"),
      I_("No Dealer Information available for Broker Code"),
      I_("Account has an valid loan!Must enter a valid sourc"),
      I_("RESP Plan Limit exceeded"),
      I_("RESP Year Limit exceeded"),
      I_("RESP redemption exceed Contribution"),
      I_("RESP Redemption exceed Earnings"),
      I_("Previous Y/E Re-Calculation"),
      I_("Fund is Capped"),
      I_("Contract Account Status is Active"),
      I_("Contract Account Status is not Active"),
      I_("Contract Account Status is Death Status"),
      I_("Must enter a Death Claim Redemption Code"),
      I_("WARNING:TRADE >= 30 DAYS OLD"),
      I_("Dealer cannot settle orders place by Intermediary."),
      I_("Deposit ID is mandatory."),
      I_("SIsrep is not permitted new business activities"),
      I_("Not enough grant left for return"),
      I_("DP 20 or RD 61,83,84 not allowed in Transfer"),
      I_("Error when creating Escrow Entity"),
      I_("No RESP Beneficiary selected"),
      I_("This is not a contract Account"),
      I_("No originating contribution selected"),
      I_("RESP  Redemption exceed Earnings"),
      I_("Trade Date > Contribution Term Date"),
      I_("This type of transaction is not supported for Fami"),
      I_("For RESP to RESP tranfer only RD 64 and DP 17 are"),
      I_("RESP transfer amount may be too high"),
      I_("Allocations not fully supported for RESP"),
      I_("Allocation not fully supported for Family Plan RES"),
      I_("EFT has been Transmitted, Do you want to continue?"),
      I_("No RESPContrDetl record available"),
      I_("Effective Contract Plan does not exist"),
      I_("Not enough grant amount for return"),
      I_("Trans Type must be ED - for contract"),
      I_("Order Type must be Direct"),
      I_("Unit Code must be D - dollars"),
      I_("Gross/Net must be Gross"),
      I_("Payment must be multiple of Payment Amt."),
      I_("Non integer amount for zero precision currency"),
      I_("Fractional Values not Allowed in this Currency"),
      I_("Maximum"),
      I_("Invalid Transfer in Kind"),
      I_("Initial payments are not valid for PIP"),
      I_("Payment Less Than Minimum Init Payment"),
      I_("No Scale Detail record found"),
      I_("FIFO units do NOT exist"),
      I_("Batch  is ACTIVE"),
      I_("Batch is LOCKED"),
      I_("Batch does NOT exist"),
      I_("FROM/TO: Contract Transfer Failed"),
      I_("FROM/TO: Trans Not Found in Contract Trf"),
      I_("Group Redemption Stop Flag Enabled"),
      I_("Redemption Stop Flag Enabled"),
      I_("Assigned Flag Enabled"),
      I_("Inconsistentm Fee Charged"),
      I_("Only 3,4,5,6,10,11 allowed for RRIF plan"),
      I_("Net Trade Entered Without a Fee Amount"),
      I_("Full Redemption Not Allowed on"),
      I_("Redemption Not Allowed for Fund & Class"),
      I_("Invalid Remption Code"),
      I_("Red: available units = 0.00"),
      I_("Dealer Not Authorized to Deal a Fund"),
      I_("A Back Net Order cannot have admin. Fee"),
      I_("No Funds Found For Account"),
      I_("Insufficient Funds As At Trade Date"),
      I_("Unissued Certiificate Units exist"),
      I_("Cannot update Manual/Suppressed Cheque"),
      I_("Trn: available Units = 0.00"),
      I_("WARN/FR: Effective PAC Does Not Exist"),
      I_("TO:Effective PAC Exists"),
      I_("TO Effective PAC Exists/FR:PAC Not Found"),
      I_("FR:Group Tnsfr/Redem Stop Flag Enabled"),
      I_("FR:Account Tnsfr/Redem Stop Flag Enable"),
      I_("FR:Shareholder Does Not Exist"),
      I_("FR:Account Does Not Exist"),
      I_("TO:Account Not Active At Trade Date"),
      I_("TO:Group Tnsfr/Purch Stop Flag Enabled"),
      I_("TO:Account Tnsfr/Purch Stop Flag Enable"),
      I_("TO:Shareholder Does Not Exist"),
      I_("TO: Account Does Not Exist"),
      I_("FR:Current Unit Value Not Found"),
      I_("FR/TO:Not An Allowed Transfer"),
      I_("FR:Account Not Active At Trade Date"),
      I_("Transaction Requires Approval"),
      I_("Net Transfer Entered Without Fee Amount"),
      I_("FR:Invalid Fund"),
      I_("FR:Transfer Not Allowed For Fund"),
      I_("FR:Fund Fee Detail Not Found/Defined"),
      I_("TO:Invalid Fund"),
      I_("To:Transfer Not Allowed For Fund"),
      I_("TO:Fund Fee Detail Not Found/Defined"),
      I_("Must be Dollars for Full Transfers"),
      I_("FR:No Fund Found For Account"),
      I_("FR:Insufficient Funds As At Trade Date"),
      I_("FR:Unissued Certificate Units Exist"),
      I_("TO:Current Unit Value Not Found"),
      I_("TO:Fee Waived For This Account"),
      I_("TO:Fee Entered Without an Over-ride"),
      I_("TO:Net Purch Entered Without Fee Amount"),
      I_("TO:Fee Override, No Fee Defined"),
      I_("TO:Less Than Minimum Initial Purchase"),
      I_("TO:Less Than Minimum Allowable Purchase"),
      I_("Effective Contract Plan Does Not Exist"),
      I_("FR:Effective Contract Plan Not Exist"),
      I_("Payment Code Valid Only for DIRECT Purch"),
      I_("Payment Code Valid Only for DOLLAR Purch"),
      I_("Payment Code Valid Only for GROSS Purch"),
      I_("FR/TO: Contract Tnfr MUST be FULL Amount"),
      I_("Payment Code MUST be : P or Blank"),
      I_("Acq/Admin Fee Calculate during Night Run"),
      I_("Currency not allowed in this tax type"),
      I_("Stop Date of Fund less than or equal to Trade Date"),
      I_("Stop Date is before Start Date"),
      I_("Price not found"),
      I_("No transfer between RRSP and RRSP spousal"),
      I_("ERROR: ENTIRE ACCOUNT IS RESTRICTED."),
      I_("WARNING: ENTIRE ACCOUNT IS RESTRICTED! DO YOU WISH TO CONTINUE?"),
      I_("PENDING TRADE(S) MAY BE INTERRUPTED. DO YOU WISH TO PROCEED?"),
      I_("'TO' POLICY HAS A TITLES RESTRICTION. DO YOU WISH TO PROCEED WITH TRAN"),
      I_("Exchange: Price Not Found for Percent Free"),
      I_("LLP Error"),
      I_("Estate Error"),
      I_("Invalid AllFundTransfer - with assignment"),
      I_("Invalid AllfundTransfer - with Loan(s)"),
      I_("Invalid AllFundTransfer - with certificate"),
      I_("AIP withdrawal exists, transfer to another RESP not allowed"),
      I_("Cannot apply RESP OC withdrawal to invalid year"),
      I_("Invalid CESG repayment reason code"),
      I_("Invalid RESP EAP/PSE information"),
      I_("Original Trade cannot be cancelled"),
      I_("Original Trade not found"),
      I_("DP 17, RD 64/65 can only be used for RESP to RESP transfer"),
      I_("Insufficient notional balance to cancel RESP transfer"),
      I_("Settling grant repayment by units is not allowed"),
      I_("Net transaction amount exceeds net CESG owing"),
      I_("Exchange rate for tax calculation not found"),
      I_("Negative Guarantees following must be cancelled (rebook at will)."),
      I_("Commission less than minimum allowed"),
      I_("Province of LIRA/LIF/LRIF must be same"),
      I_("Closed Country: Tax Jurisdiction"),
      I_("Closed Country: Province of Residence"),
      I_("Closed Country: Address"),
      I_("Closed Country: Address is USA with Unknown States"),
      I_("Transfer-Out Transaction record not found"),
      I_("Maximum Payout amount will be exceeded"),
      I_("Transfer-In Transaction record not found"),
      I_("Transfer-Out Fund-Mstr not found"),
      I_("Transfer-In Fund-Mstr not found"),
      I_("Transfer-Out ContractType not found"),
      I_("Transfer-Out Account-Contract not found"),
      I_("Transfer-In ContractType not found"),
      I_("Transfer-In Account-Contract not found"),
      I_("Transfer-Out Contract Master not found"),
      I_("To account is locked."),
      I_("Exchange out fee is below min"),
      I_("Exchange out fee exceeds max"),
      I_("No Family Code for Shareholder"),
      I_("No Family Code for IN Shareholder"),
      I_("Error Calculating Family Market Value"),
      I_("Family Market Value = 0.0"),
      I_("Error Finding FamilyDSC Information"),
      I_("Total Family Deposits = 0."),
      I_("Error Updating FamilyDSC Record"),
      I_("PAC Not allowed for this Fund"),
      I_("SWP not allowed for this fund"),
      I_("Auto-xfer IN not allowed for this fund"),
      I_("Auto-xfer OUT not allowed for this fund"),
      I_("Nationality is not populated"),
      I_("PAC amount is less than initial minimum purchase"),
      I_("Auto Transfer amount is less than initial minimum purchase"),
      I_("Auto Transfer fund is a capped fund"),
      I_("Account is ineligible for Pay Option 4"),
      I_("Missing Fee-Parms for FundGroup"),
      I_("Transfer In not allowed for Grandfathered AMS account"),
      I_("Grandfathered AMS A/c-ED/PAC not allowed aft full redempt"),
      I_("Maximum redemption % exceeded"),
      I_("Income Level field is required"),
      I_("Net Worth field is required"),
      I_("Risk Tolerance field is a required"),
      I_("Knowledge field is required"),
      I_("Business No. is applicable to corporate accounts only"),
      I_("Account Escrow Flag is set to Active"),
      I_("Active SWP exists on Account"),
      I_("Active PAC exists on Account"),
      I_("Excess fund/class is mandatory for AMS Global set up"),
      I_("Rounding fund/class is mandatory for AMS Global set up"),
      I_("Purchase of Fund/Class outside of AMS mix is not allowed"),
      I_("Date of Birth is a required field"),
      I_("Occupation is a required field"),
      I_("Date of Birth is missing"),
      I_("Missing Redemption Fee Setup"),
      I_("RepLevel must be > 3 for borrowed deals"),
      I_("RepLevel 1 cannot create new accounts"),
      I_("Backdates prior to DM event are not allowed."),
      I_("Account cannot be closed account Value > 0"),
      I_("English/French MFOL Name is mandatory for AMS global set up."),
      I_("Valid SIN is required for RESP accounts"),
      I_("Start, End or Maturity Date is blank."),
      I_("Inactive pol. has the same maturity date."),
      I_("Systematic plan not transfered for switch."),
      I_("Systematic plan not transfered for switch to different account."),
      I_("Redemption amount is greater than account balance"),
      I_("Transfer/Exchange amount is greater than account balance"),
      I_("Transfer-In Fund-Info record not found"),
      I_("Transfer-In Contract Master not found"),
      I_("Accounts with Unsettled Trades are ineligible for AMS"),
      I_("Accounts with Pending Trades are ineligible for AMS rebalancing"),
      I_("Error to determine Closing Decade"),
      I_("LSIF Redrules record not available"),
      I_("SalesRepCode should only be 5 characters"),
      I_("AWD Comment is blank"),
      I_("Offer price not found"),
      I_("Reinvestment price not found"),
      I_("Discount fee model not found"),
      I_("Invalid settlement currency for Fund"),
      I_("Fees can not be covered by transaction amount"),
      I_("Account must be PUEV capable if Fund is PUEV capable"),
      I_("Shareholder fee model code is missing"),
      I_("Fund must be PUEV capable if Account is PUEV capable"),
      I_("Reinvest FEL commission can not be negative"),
      I_("Both accounts and both funds must be PUEV capable"),
      I_("Fund is Investro Capable but the fund broker's routing type is not Investro"),
      I_("Fund is not Investro Capable but the fund broker's routing type is Investro"),
      I_("Price of 3rd party fund is equal 0."),
      I_("StaticPendingTrade Info not available"),
      I_("Client defined maturity date is not available"),
      I_("Structured Notes Info not found"),
      I_("CD policy(s) impacted by DOB change"),
      I_("DOB change impacts matured/reset policy"),
      I_("Wire Order Number exceeds 10 characters"),
      I_("New date of birth cannot be blank"),
      I_("New Legal Contract Maturity date cannot be less than  Maturity Date"),
      I_("Transactions cannot exist after old/new closing decade start date"),
      I_("Country code for banking information is required."),
      I_("Cannot calculate EUSD."),
      I_("Sender Ref No. is required when NetworkID is not blank"),
      I_("User-defined maturity date less than  years from Account Effective Date."),
      I_("No Transfer/Exchange rule defined for the Trade Date."),
      I_("Maturity Date of TO side does not match with TI side."),
      I_("Pending trades cannot exist in old/new closing decade"),
      I_("User-defined maturity date less than  years from Reset Effective Date."),
      I_("Client-Defined Maturity Date must be  years greater than Reset Date."),
      I_("User-defined Maturity Date cannot be blank."),
      I_("User-defined Deposit Maturity Date greater than Legal Contract Maturity Date."),
      I_("User-defined Contract Maturity Date greater than Legal Contract Maturity Date."),
      I_("No active policy found to get the maturity date."),
      I_("Warning:GUARANTEE ADJUSTMENT EXISTS FOR THE ACCOUNT CONTRACT AFTER TRADE DATE."),
      I_("THERE HAS BEEN GUARANTEE ADJUSTMENT(S) SINCE THE ORIGINAL TRADE."),
      I_("The guarantee adjustment record(s) must be cancelled before processing backdated transaction."),
      I_("Guarantee Units do not balance with transaction units."),
      I_("SEG history status mismatch: SEG history is available for TI-side as of the trade date but is not available for TO-side."),
      I_("SEG history status mismatch: SEG history is available for TO-side as of the trade date but is not available for TI-side."),
      I_("Guarantee Adjustments need to be cancelled before DOB change due to Reduction Age impact"),
      I_("Warning:Guarantee Adjustment exists after trade date for the Account."),
      I_("Warning:Unit adjustment required for Account."),
      I_("Possible EUSD tax calc effect on subsequent Money out Transaction."),
      I_("Please cancel money out transaction."),
      I_("Duplicate SIN found in entity list."),
      I_("Annuitant is older than latest age to open/purchase years."),
      I_("not available for purchase."),
      I_("Non-numeric value assigned to numeric field."),
      I_("Many to Many Xfer with source funds of diff fund currencies."),
      I_("Invalid Trade in split comm environment."),
      I_("Missing or Invalid allocation info."),
      I_("Invalid trade amount."),
      I_("Fund/Class is not valid in Group."),
      I_("Invalid custom trading schedule"),
      I_("Missing custom trading schedule"),
      I_("Transaction not allowed during settlement phase"),
      I_("Maximum event(s) for the year exceeded"),
      I_("Pending/Settled trades/events exist on or after the event effective date"),
      I_("The valid period for the event is between"),
      I_("Missing exchange rate for multicurrency trade"),
      I_("Invalid Event Effective Date"),
      I_("Active Event Schedule already exists"),
      I_("There have been manual event(s) since the original trade date"),
      I_("Invalid PUD code for acct closing redcode!"),
      I_("Event is not allowed during closing period"),
      I_("The new user-defined CMD should be after the existing CMD"),
      I_("Reset can be processed only  year(s) before CMD"),
      I_("PAC stop date impacted by DOB change"),
      I_("DOB impacts CMD after date reset"),
      I_("Payment for both Redemption and Distribution must be setup"),
      I_("Cannot find time zone information"),
      I_("Holdback amount >= available units."),
      I_("Both sides of Transfer/Exchange must be either settled or unsettled in order for trade to be cancelled."),
      I_("Invalid Settlement type indicator."),
      I_("Transaction number not found."),
      I_("Transaction number is missing."),
      I_("WireOrder number is missing."),
      I_("External ID is missing."),
      I_("External ID type is missing."),
      I_("Fund code is missing."),
      I_("Class code is missing."),
      I_("Transaction type is missing."),
      I_("Trade Date is missing."),
      I_("Settle Date is missing."),
      I_("Transaction cannot be found for settlement."),
      I_("Account number cannot be found."),
      I_("Fund code cannot be found."),
      I_("Class code cannot be found."),
      I_("Gross/Net indicator is missing."),
      I_("Stop Redemption Settle Flag is set to Yes."),
      I_("Redemption Amount is greater than account balance."),
      I_("iFAST Trans-Rec-Xref table not available."),
      I_("Internal iFAST issue - no active settlement batch was found."),
      I_("Transaction previously settled."),
      I_("WireOrder number cannot be found."),
      I_("External ID cannot be found."),
      I_("External ID type cannot be found."),
      I_("Transaction Type cannot be found."),
      I_("Trade Date cannot be found."),
      I_("Settlement Date cannot be found."),
      I_("Invalid Gross/Net indicator. Must be G or N."),
      I_("Account number is missing."),
      I_("Number of fields of record line are less that expected."),
      I_("Broker code is missing."),
      I_("TO/EO transaction must be settled."),
      I_("Contribution is not allowed for non-resident for TaxType"),
      I_("Contrib. date is outside the allowed dates for TaxType"),
      I_("Cancellation Failure refer to REVRSLOG.D report"),
      I_("Reversal or adjustment placed in another Account, Fund, or Class"),
      I_("Original Trade Cancelled or not Found"),
      I_("Mirror - Cancellation Failure refer to REVRSLOG.D report"),
      I_("Split Commission does not match Fee"),
      I_("No Paying Agent Found"),
      I_("Tax Jurisdiction not found Paying Agent"),
      I_("Tax Jurisdiction not found for Owner"),
      I_("No active owner found"),
      I_("Invalid selection. Deposit Code is applicable for Sibling Only accounts"),
      I_("Invalid selection. Beneficiary is not linked to a PCG."),
      I_("PCG exists,please de-link PCG for non-sibling only accounts."),
      I_("Error corrections not allowed for settled trades on RESP accounts"),
      I_("Error corrections not allowed for trades submitted to HRSDC on RESP accounts"),
      I_("DP 20,73,74,75,76 or RD 75,76,83 not allowed in Transfer."),
      I_("Account is not Sibling Only. Grant Amount is not applicable"),
      I_("Beneficiary is not linked to a PCG. Grant Amount is not applicable"),
      I_("Beneficiary is not eligible for CLB since his Date of Birth is greater than 01/01/2004"),
      I_("CLB Amount cannot be transferred since SIN of from and to Beneficiary are different"),
      I_("Redemption code is invalid since beneficiary is non-resident"),
      I_("Fund is Front End Load with commission greater than zero"),
      I_("DSC amount is greater than the amount attributed to income in the EAP"),
      I_("Redemption code '77' applicable only for non-resident beneficiaries"),
      I_("Beneficiary's Date of Birth is missing"),
      I_("Beneficiary's Gender is missing"),
      I_("Beneficiary is over 21 and trade cannot be processed"),
      I_("Termination date should be 25 years from Inception date."),
      I_("Pending and Cancelled Status not applicable"),
      I_("No Bus-Day record available"),
      I_("No Fund-Mstr record available"),
      I_("No fund-group-type record with Valn grouptype available"),
      I_("Fund record not available in Fund-Group-List"),
      I_("The Fund Group Type and Fund Group are not available in FundSched"),
      I_("Error in RUNRIF51"),
      I_("Error in RUNRIF52"),
      I_("Reset RUNRIFInfo control before restarting"),
      I_("Account:Less than minimum Initial Purchase"),
      I_("Account:Less than minimum Allowable Purchase"),
      I_("Account:Purchase not allowed for Fund"),
      I_("Account:Redemption not allowed for Fund"),
      I_("Account:TO:Transfer not allowed for Fund"),
      I_("Account:FROM:Transfer not allowed for Fund"),
      I_("Account:Less than Minimum Fund/Class Balance"),
      I_("Broker:Less than minimum Initial Purchase"),
      I_("Broker:Less than minimum Allowable Purchase"),
      I_("Broker:Purchase not allowed for Fund"),
      I_("Broker:Redemption not allowed for Fund"),
      I_("Broker:TO:Transfer not allowed for Fund"),
      I_("Broker:FROM:Transfer not allowed for Fund"),
      I_("Broker:Less than Minimum Fund/Class Balance"),
      I_("Branch:Less than minimum Initial Purchase"),
      I_("Branch:Less than minimum Allowable Purchase"),
      I_("Branch:Purchase not allowed for Fund"),
      I_("Branch:Redemption not allowed for Fund"),
      I_("Branch:TO:Transfer not allowed for Fund"),
      I_("Branch:FROM:Transfer not allowed for Fund"),
      I_("Branch:Less than Minimum Fund/Class Balance"),
      I_("Sales Rep:Less than minimum Initial Purchase"),
      I_("Sales Rep:Less than minimum Allowable Purchase"),
      I_("Sales Rep:Purchase not allowed for Fund"),
      I_("Sales Rep:Redemption not allowed for Fund"),
      I_("Sales Rep:TO:Transfer not allowed for Fund"),
      I_("Sales Rep:FROM:Transfer not allowed for Fund"),
      I_("Sales Rep:Less than Minimum Fund/Class Balance"),
      I_("Less than Minimum Fund/Class Balance"),
      I_("Deposit type not allowed for RedCode"),
      I_("Allowed Transfer is from LonckIn to Non LockedIn Registered"),
      I_("Allowed Transfer is from LonckIn to Non Registered"),
      I_("Redeem not allowed for reason code bankruptcy"),
      I_("Order type should be wire for partcipant transfer."),
      I_("Order type should be direct for non-partcipant transfer."),
      I_("Inactive Dealer / Ineligible Broker for AMS"),
      I_("Stop purchase or Redemption flag active for AMS A/C"),
      I_("Minimum AMS investment not met"),
      I_("Mixed currency fund in AMS model"),
      I_("%FUND%/%CLASS% is soft capped at the fund class level as of %ASOF%."),
      I_("Allocated trade: soft capped at the fund class level"),
      I_("AMS Eligibility"),
      I_("Fund Load Group not the same under AMS Allocation Set-up"),
      I_("AMS set-up not allowed for Institutional Account"),
      I_("redemption Code is not allowed for transfer"),
      I_("From this account you can transfer only to RRSP or RRIF account"),
      I_("Account Category Private not applicable to account type and account designation"),
      I_("Aggr amt below fundloadgrp min init amt!"),
      I_("Account: Fund/Class  is Soft Capped!"),
      I_("KYC information is missing"),
      I_("Management fee model is missing"),
      I_("RESP NASU not available on desktop"),
      I_("Entry of spouse's date of birth is not allowed."),
      I_("Spouse's date of birth must be less than or equal to accountholder's age."),
      I_("Invalid payment period"),
      I_("Account has active certificate units"),
      I_("Account value is locked."),
      I_("New money-in for Tax Type Schedule is not allowed after"),
      I_("Redemption is contrary to client guarantee guard protection setting rules"),
      I_("Transfer is contrary to client guarantee guard protection setting rules"),
      I_("No Eligible Contracts in this account"),
      I_("Accounts have different SiblingOnly status - Ensure transfer meets regulations"),
      I_("An active SWP exists setup with GMWB funds"),
      I_("An active Dynamic SWP exists setup with GMWB funds"),
      I_("Invalid/Blank  Regulatory Standard"),
      I_("PayType for requested Payment Instruction should be set to EFTfor redemption payments"),
      I_("Account number  does not exist"),
      I_("Account number should be different from that of ED trade"),
      I_("An active Dynamic SWP exists setup with non-GMWB funds"),
      I_("Duplicate Rule Type is not allowed."),
      I_("Both Mgmt Fee Rebate and Mgmt Fee flags can not be true at the same time."),
      I_("Beneficiary Age is over 31 and trade cannot be processed"),
      I_("Termination date should be 35 years from Inception date"),
      I_("Invalid Fund Code for Fund on fund Category"),
      I_("User Defined Maturity Date should be  years from the issuedate"),
      I_("Redemption  exceeds Grant Plus Earnings"),
      I_("EAP Amount exceeds Market Value"),
      I_("AMS Effective Date Backdated"),
      I_("Residence Province and Tax Jurisdiction can not be left Unassigned"),
      I_("The requested amount has exceeded the minimum"),
      I_("This transaction may exceed the remaining minimum amount and may be rejected in the cycle"),
      I_("Demographics Data is required."),
      I_("KYC Document List Data is required"),
      I_("Fee Code is not defined, cannot store deducted fee."),
      I_("Direct Deposit Banking setup is available only to default banking of non-registered client held account"),
      I_("Direct Deposit Banking is applied only to Canadian Bank"),
      I_("Direct Deposit Banking is applied only to Canadian Dollar Fund"),
      I_("Contract Versions of TO and TI sides do not match"),
      I_("Joint Life Entity required before processing a joint election."),
      I_("Age of Annuitant/Joint Life Entity Surpasses the maximum age allowed."),
      I_("Account balance is above the SFIR threshold amount"),
      I_("LWA Option of TO and TI sides do not match"),
      I_("Direct Deposit Banking and/or Investor Authorize missing"),
      I_("There are investor authorization setup that missing direct deposit banking Informaion"),
      I_("There are direct deposit banking setup that missing investor authorization Informaion"),
      I_("Settlement Location is missing"),
      I_("Fee is not eligible for Net Trading"),
      I_("Fed tax rate is less than the default value"),
      I_("Prov tax rate is less than the default value"),
      I_("Banking Information is not verified (for trade)"),
      I_("Banking Information is not verified (for settlement)"),
      I_("Fund has certificate units"),
      I_("Shareholder Address is not verified (for trade)"),
      I_("Shareholder Address is not verified (for settlement)"),
      I_("Banking Info has pending or unsettled trade association"),
      I_("Exchange rate for trade date is not found."),
      I_("Traded unit calculation error. Please call system support."),
      I_("DSK:TUP Oversell encountered on a redemption"),
      I_("DSK:TUP Oversell encountered on a transfer out"),
      I_("DSK:TUP Oversell encountered on an exchange out"),
      I_("WEB:TUP Oversell encountered on a redemption"),
      I_("WEB:TUP Oversell encountered on a transfer out"),
      I_("WEB:TUP Oversell encountered on a exchange out"),
      I_("Statement frequency cannot be less than 'Quarterly'."),
      I_("Statement frequency cannot be less than 'Monthly'."),
      I_("Beneficiary is not a resident of Quebec"),
      I_("Beneficiary is greater than 18 years of age"),
      I_("Net annual Contribution for the year is zero"),
      I_("QESI Basic Limit exceeded for the year"),
      I_("QESI Increase Limit exceeded for the year"),
      I_("Redemption amount for Adjustment of QESI Basic has exceeded the total amount that was received"),
      I_("Redemption amount for Adjustment of QESI Increase has exceeded the total amount that was received"),
      I_("Assisted Contribution amount is more than the Unassisted amount available for the tax year"),
      I_("Beneficiary is not eligible for QESI Increase since Account is not siblingonly"),
      I_("Assisted Contribution amount to be reversed is more than the Assisted amount available for the tax year"),
      I_("QESI Grant Request not available for the Beneficiary in the Tax Year"),
      I_("QESI Amount cannot be greater than 10% of existing QESI Unassisted amount for the beneficiary and tax year"),
      I_("Settlement is not allowed during final cycle run."),
      I_("QESI Life Time Grant Limit Exceeded."),
      I_("Insufficient QESI Grants."),
      I_("Refund of Special Taxes exceed Redemption."),
      I_("No Lifetime Contribution Limits has been set up."),
      I_("No Annual Contribution Limits has been set up."),
      I_("Error finding Fee Parms for Fund/Class."),
      I_("No Broker/Branch/Rep found for Account."),
      I_("Error finding Fee Parms for Account and/or Family Code."),
      I_("Warning: Broker is not eligible for Trailer Fee."),
      I_("Warning: Broker/Branch/Rep is not eligible for Trailer Fee."),
      I_("Warning: Broker Trailer Fee Pay Frequency not the same as Run Frequency."),
      I_("Warning: Broker/Branch/Rep has been stopped."),
      I_("Balance for Account/Fund/Class is 0."),
      I_("Warning: Fee Parameter Fee Type must be Percent."),
      I_("Missing Account History for Account."),
      I_("Error finding Fee Parms for Broker/Branch/Rep."),
      I_("Units in AcctBal does not match with InvAsOf"),
      I_("RESP/Family RESP trading is not supported."),
      I_("RESP specific edit check is not being performed."),
      I_("Eligible Trailer Fee is 0 since the Broker/Rep asset aggr is less than $100000."),
      I_("Inventory Tracking is not on for Fund/Class that is GrandFathered."),
      I_("CESG Amount to be returned because of this redemption."),
      I_("This transaction will reduce the YTD contribution to negative"),
      I_("Eligible Balance Type and Split By currently not supported."),
      I_("NEQ already exists."),
      I_("NEQ is missing."),
      I_("DP 78,79,80,81 or RD Q1,Q2,Q3 are not allowed."),
      I_("Election of LWA Age Rate  is only allowed when LWA Rates between accounts is the same."),
      I_("Transfer Option Purchase could not be processed."),
      I_("Account Balance is less than transaction amount"),
      I_("Notional balance is less than entered transaction amount"),
      I_("Amendment may be required"),
      I_("Adjustment may be required"),
      I_("Trade exist for tax year"),
      I_("You may need to add new Grant Request for applicable tax year"),
      I_("You may need to stop Grant Request for applicable tax year"),
      I_("You may need to flip status to Request or create new request for applicable tax year"),
      I_("SIN Effective date is mandatory"),
      I_("Guarantee Guard not same between TO/TI accounts"),
      I_("Transfer Proces failed due to run time error"),
      I_("AIP withdrawal exists, payment to non-resident Owner is not allowed"),
      I_("Entity Address is missing"),
      I_("System will trigger amendment and recalculate QESI notional balance for the tax year"),
      I_("SIN Effective date for RESP beneficiary cannot be unknown"),
      I_("SIN Effective date for RESP beneficiary cannot be earlier than the Date of birth"),
      I_("SIN Effective date for RESP beneficiary cannot be a future date"),
      I_("Dealer's Trailer Payment Frequency changed after first month of quarter end"),
      I_("Inventory Event failed to find the appropriate age group to age the units"),
      I_("Broker's Trailer Payment Frequency changed."),
      I_("Redemption Amount has exceeded the total QESI Amount that was received."),
      I_("The trade will not be priced with Payment Status as ‘Payment Outstanding’."),
      I_("Interest has been paid after trade"),
      I_("Missing Trailer-Fee-detail or Trailer-Fee-Calc-Detail for TrailerFeeID"),
      I_("Split Commissions are not allowed for the trailer model"),
      I_("Dealer switch found for Fund/Class when Average Type is MonthEnd"),
      I_("No Agent Detl record found"),
      I_("Environment does not support Fee Type Flat"),
      I_("Current Day Non Receipt / Non Receipt Flag active"),
      I_("ACCT-VALUE is locked by some other process"),
      I_("Gaps not allowed in MFR dates"),
      I_("Date of death of the account owner missing"),
      I_("Offset cutoff time is later than Market cutoff time"),
      I_("Beneficiary Address is Missing"),
      I_("CESG limit of <%1> has been exceeded"),
      I_("Non-Recipt Flag is active for the Account/Fund/class of  the Money Out Trade"),
      I_("Money Out Transaction includes units subscribed on the current trade date"),
      I_("Interest Rate Calculation record does not exist"),
      I_("Invalid Interest Rate Calculation Method"),
      I_("Invalid Interest Rate Calculation Term"),
      I_("Invalid Interest Rate Calculation Rate Type"),
      I_("No FundIntInvAttr record available"),
      I_("No IntRateConfig record available"),
      I_("No InterestRate record available"),
      I_("No InterestRateScale record available"),
      I_("No CommReductionDetl record available"),
      I_("Error returned from Account Value(ACCTVAL) Module"),
      I_("GI Interest for investment not up to date"),
      I_("Sharelot Units do not match Transaction Units"),
      I_("Error Updating Sharelot Balances"),
      I_("MRC cannot be deleted. <MRC> linked to broker <Broker Code>"),
      I_("MRC cannot be deleted. <MRC> linked to broker <Broker Code> branch <Branch Code>"),
      I_("MRC cannot be deleted. <MRC> linked to broker <Broker Code> branch <Branch Code> Rep <Rep Code>"),
      I_("Only record type B[Broker] is allowed"),
      I_("FSA Code cannot be blank"),
      I_("Territory code is mandatory for SalesRep"),
      I_("Missing Valuation Date"),
      I_("Duplicate Hurdle Rate Entry."),
      I_("Missing User Defined HWM for Fund <Fund Code> and Class <Class Code>"),
      I_("PF Crystalisation is overdue, verified final NAV is not available for Fund <fund code> and Class <class code>"),
      I_("PF Crystalisation Trades will be Processed for Fund <fund code> and Class <class code>"),
      I_("From and To Fund-Classes should belong to Performance Fee if PF Crystalisation is No."),
      I_("PF Crystalisation is not yet completed for fund <fund code> and class <class code>"),
      I_("<fund code > and <Class code> is not a Performance Fee Fund."),
      I_("Unable to complete transaction. Subsequent events for the Fund/Class must be cancelled."),
      I_("Equalisation trade cannot be cancelled individually."),
      I_("No valid trade dates exist for the Fund/Class-Transaction type"),
      I_("Classes involved in the transaction do not belong to same Fund."),
      I_("F/X rate is not entered for the transaction."),
      I_("Account is not eligible to trade in ERISA prohibited Fund/Class."),
      I_("Transaction with Deposit code 100 cannot be placed"),
      I_("Transaction with Redemption code 100 cannot be placed."),
      I_("Payment Status cannot be blank."),
      I_("The trade will not be priced with Payment Status as ‘Payment Outstanding’."),
      I_("Days Basis cannot be blank."),
      I_("Input Data Type cannot be blank."),
      I_("Index Value is entered between existing effective dates. Hurdle Rate will be calculated between <Start Date1> to <End Date1> and <Start Date 2> to <End Date 2>."),
      I_("Hurdle Ratewill be calculated between <Start Date> to <End Date>."),
      I_("Hurdle Rate is entered between existing effective dates."),
      I_("Hurdle Rate cannot be zero."),
      I_("Value cannot be zero."),
      I_("User Defined CMD should be within Minimum Age and Maximum Age Restriction."),
      I_("User Defined CMD should be at least greater than Minimum term."),
      I_("User Defined CMD cannot be greater than Legal Contract Maturity Date"),
      I_("Selected Inventory units is greater than units in hand"),
      I_("Commitment Allocation is missing"),
      I_("Lump Sum Allocation is missing"),
      I_("Commitment is inactive for this account."),
      I_("Check the age of the annuitant ( Age of annuitant should be <%1> )"),
      I_("Ownership cannot be blank"),
      I_("GI Investment have interest credited after the trade date"),
      I_("Non-resident jurisdiction. Pay Option must be  ‘Suppress Cheque’"),
      I_("GIA/DIF Exchange transaction is not authorized for Non-resident"),
      I_("User Defined CMD cannot be greater than Minimum term"),
      I_("Account level settlement currency is required"),
      I_("Investment:  Cannot backdate prior to Investment Reset"),
      I_("Account KIID confirmation unavailable in iFast."),
      I_("User defined CMD is less than minimum term"),
      I_("Valuation Date exists, Trade should be placed/modified through iFast Desktop."),
      I_("Record Date should be equal to Fund level NextRecDate"),
      I_("MaturityDateBasedOn is <User-defined Maturity transfer>"),
      I_("SICAV Cross-Ref exists"),
      I_("Cannot modify exchange rates after the cycle"),
      I_("OEIC Cross-Ref exists"),
      I_("QESI limit has been exceeded"),
      I_("Transfer from one account to another account whose annuitant's ages are different is not allowed."),
      I_("The first trade into account must be transfer."),
      I_("Tax ID Number is required for Individual."),
      I_("Employer Number is required for Corporate."),
      I_("Redeem units not equal redeem inventory"),
      I_("Event Receipt Date and Event Receipt Time fields are blank"),
      I_("Suppressed - Banking info is not verified"),
      I_("Service agent belongs to FundSERV broker, please change it via the Commissionable Rep screen."),
      I_("Warning! Reinvest ID changed to Cash ID"),
      I_("G1G2 Distribution Dates could not be determined."),
      I_("FundFrom is not allowed to exchange to FundTo"),
      I_("Account Association under Fee Model has earlier Effective Date"),
      I_("Waive paper can not be set to yes when CD, FAX, EMAIL and EPOST are all set to no for document type: AdditionalStatement"),
      I_("Mail, Fax, CD, Email and Epost can not all be set NO for AdditionaStatement"),
      I_("Redemption Charges exceed Earnings . Waive the charges or system may deduct them from the account holdings/contribution."),
      I_("Mail can not be set to NO before consent is set to YES for Statements"),
      I_("There is no Mail, Fax, CD, Email and Epost to suppress for document type:AdditionalStatement"),
      I_("Eligible Fund By only applicable to AP or PP"),
      I_("Cancelation is not allowed for SEG fund trade with Guarantee Fee Collection, Pending Top Up Purchase and Maturity Cash Out."),
      I_("LCMD Calculated is Past Maturity"),
      I_("Only one MFR fee model code can be associated with an account"),
      I_("Insufficient units for UC transfer trades"),
      I_("The fund class is not an AMS Parent Fund."),
      I_("The parent fund class cannot be set up for fund allocation."),
      I_("The AMS model is associated with another account under the same shareholder."),
      I_("User defined CMD is less than minimum term"),
      I_("Amount exceeds SAGES Balance"),
      I_("SAGES Assisted Contribution amount is zero"),
      I_("There are active SAGES Grant purchase transactions"),
      I_("Trade date must be equal or greater than 01Jan2013."),
      I_("Bene tax jurisdiction must be 'SK' as of the Trade date."),
      I_("SAGES Amount to be returned because of the redemption: $X"),
      I_("Account must be Sibling Only for SAGES"),
      I_("Redemption of accumulated income is not allowed due to available notional balances in the account."),
      I_("Allocation option not available (in this environment)"),
      I_("Account/Contract Type cannot hold more than one fund."),
      I_("Annuitant’s age is below the minimum age requirement for the contract type."),
      I_("Error during update of Seg Pension Income Base."),
      I_("Invalid Amount Type for SWP."),
      I_("Related Party cannot be a Corporate."),
      I_("Tax Payer Status Reason is missing."),
      I_("Accounts must belong to the same shareholder group."),
      I_("Account and fee association cannot be effective before last run."),
      I_("Account association cannot be stopped before last run."),
      I_("Account linking Effective Date must be within the Fee Model Effective Date."),
      I_("Account linking Stop Date must be within the Fee Model Stop Date."),
      I_("Related Party can be only Individual."),
      I_("The annuitants for the From and To account must be the same."),
      I_("The annuitant for the To account must be at least 50 years of age."),
      I_("Income Amount Election Event is not allowed due to Missing Annuitant's Gender Information."),
      I_("Election not allowed due to LWA rate not available."),
      I_("Cross System Account Number is left blank."),
      I_("Fund/Class is in foreign currency."),
      I_("Amount type F or T only applicable for transfer to FEL fund."),
      I_("Last Record Date could not be determined for G1 split."),
      I_("Requested G1 units not available."),
      I_("Requested G2 units not available."),
      I_("Service Only SlsRep is not permitted for new accounts."),
      I_("Fatca Account has a 'Terminated' Status."),
      I_("Fatca Account Entity Address is missing."),
      I_("Fatca Account Entity 'City' required."),
      I_("Fatca Account holder country code is required."),
      I_("Fatca Account Entity First name missing."),
      I_("Fatca Account Entity 'Reportable Jurisdiction' is required."),
      I_("Fatca Transmitter Contact area code is missing."),
      I_("Fatca Transmitter Contact email missing."),
      I_("Fatca Transmitter Contact extension missing."),
      I_("Fatca Transmitter Contact name is missing."),
      I_("Fatca Transmitter Contact phone no. missing."),
      I_("Fatca Controlling Person country code required."),
      I_("Fatca Controlling Person first name required."),
      I_("Fatca Controlling Person 'Reportable Jurisdiction' required."),
      I_("Fatca Controlling Person required."),
      I_("Fatca Controlling Person city required."),
      I_("Fatca FI registered ID Required."),
      I_("Fatca Filer account no. required."),
      I_("Fatca Language Indicator missing."),
      I_("Fatca Organization TIN required."),
      I_("Fatca Reporting FI TIN is required (GIIN)."),
      I_("Fatca RFFI contact area code required."),
      I_("Fatca RFFI contact email required."),
      I_("Fatca RFFI contact name required."),
      I_("Fatca RFFI contact phone no. required."),
      I_("Fatca RFI address required."),
      I_("Fatca RFFI 'City' missing."),
      I_("Fatca RFFI 'Country' missing."),
      I_("Fatca 'Threshold Ind' is required."),
      I_("Fatca Individual TIN is required."),
      I_("Fatca Transmitter address line 1 required."),
      I_("Fatca Transmitter city missing."),
      I_("FATCA generic transmitter number cannot be used. Filing more than one return."),
      I_("Fatca Transmitter No. required."),
      I_("Fatca Transmitter postal code is missing."),
      I_("Fatca Transmitter province/territory code is missing."),
      I_("Fatca Entity Classification field is blank."),
      I_("Fatca Classification is not Reportable."),
      I_("Fatca Related party does not have a 'Reportable' status."),
      I_("FATCA Controlling persons cannot be more than 16."),
      I_("FATCA Controlling Person TIN is missing."),
      I_("FATCA Exchange rate is not available."),
      I_("Fatca Account Balance is Zero."),
      I_("Fatca TaxPayer status is not Reportable."),
      I_("Gaps not allowed in fee scales."),
      I_("Transmitter Number format incorrect."),
      I_("Units cannot be zero after the rounding."),
      I_("Tax Exempt Authorization - Stop Date is invalid."),
      I_("Address has Return Mail Flag Set."),
      I_("Transfer-out transaction must be cancelled prior to this operation."),
      I_("Additional Account Number must be setup in Identification section for Fund Sponsor entity."),
      I_("Cycle Schedule record is not found."),
      I_("Sales Rep code is different. Please check the advisor name."),
      I_("Dealer code is different. Please check the dealer name."),
      I_("Status of group %1% is still not in good order: Primary account(s) not selected."),
      I_("Status of group %1% is still not in good order: Primary account(s) already in a mail household."),
      I_("Status of group %1% is still not in good order: Primary account(s) has return mail."),
      I_("Status of group %1% is still not in good order: Primary account(s) has hold mail."),
      I_("Delinked association could not be un-delinked."),
      I_("Expired mail household could not be un-expired."),
      I_("Only %1% number of accounts per group type."),
      I_("Effective date of association is before effective date of group."),
      I_("Your action will create a negative Notional balance, please review subsequent transactions in this account."),
      I_("Transaction date must be greater than program start date."),
      I_("Reason Code cannot be blank."),
      I_("The Allocation RESP fund transfer is not allowed to transfer the Residual Grant."),
      I_("Account is not SIF eligible."),
      I_("Status of group %1% is still not in good order: Only 1 primary account(s) per group."),
      I_("Status of group %1% is still not in good order: Effective date in the future."),
      I_("Status of group %1% is still not in good order: Dealer code is different. Please confirm dealer."),
      I_("Account must be Sibling Only for BCTESG."),
      I_("Amount exceeds BCTESG balance."),
      I_("Transfer in trades with BCTESG amount cannot be processed before August 15, 2015."),
      I_("Country of Exposure is required for Politically Exposed Person (PEFP)."),
      I_("Transaction is awaiting a response from HRSDC hence cannot change allocations."),
      I_("Bene tax jurisdiction must be 'BC' as of Trade date."),
      I_("%FUND%/%CLASS% is soft capped at the fund level as of %ASOF%."),
      I_("Allocated trade: soft capped at the fund level"),
      I_("%FUND%/%CLASS% is soft capped at the fund group level as of %ASOF%."),
      I_("Allocated trade: soft capped at the fund group level"),
      I_("PSE Information is required for this redemption."),
      I_("Enter amounts with negative sign (-) on redemption and paid out column."),
      I_("Broker is not eligible for fund class."),
      I_("Sale rep is not eligible for fund class."),
      I_("PURCHASE: The account is linked to a different AMS model than the parent fund's."),
      I_("TRANSFER: from account and to account must have the same AMS model."),
      I_("TRANSFER: from fund and to fund must be the same for AMS transfer."),
      I_("EXCHANGE: Partial exchange is not allowed across AMS parent funds."),
      I_("EXCHANGE: The account is linked to a different AMS model than the parent fund's."),
      I_("No Fund-Info record is available."),
      I_("AMS-Mstr not found."),
      I_("The child fund class does not belong to the current account AMS allocation."),
      I_("The QESI Pre Feb 2007 is not equal to LTD - QESI AC - QESI UC - QESI YTD."),
      I_("Allocation are not fully supported for this type"),
      I_("DIF fund only allows direct order."),
      I_("Bonus Interest Rate can be setup only for DIF fund."),
      I_("Beneficiary must be a Canadian resident."),
      I_("Beneficiary must be no more than 59 years of age."),
      I_("Trade not allowed for a RDSP account SDSP elect."),
      I_("Trade not allowed for a RDSP account DTC elect."),
      I_("RDSP Registration Status doesn't allow contributions."),
      I_("Trade date is after Beneficiary's Date of Death."),
      I_("RDSP Maximum Contributions LTA exceeded."),
      I_("Invalid deposit and redemption code combination."),
      I_("System Error : Unable to calculate Notional Information."),
      I_("External RDSP Account Contract Number is mandatory."),
      I_("External RDSP Specimen Plan Number is mandatory."),
      I_("Cannot backdate the trade before the Money-out transaction."),
      I_("Invalid Repayment Reason."),
      I_("FMV is less than AHA amount, payment may be rejected."),
      I_("Repayment reason does not match for DAP."),
      I_("Repayment reason does not match for LDAP."),
      I_("Repayment reason does not match for All Funds Full Withdrawal."),
      I_("Amount not in Min/Max Range."),
      I_("Cannot cancel the trade before the Money-out transaction."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_041_001_000_000;
   const BFSubstitutionSet SubSet_002_041_001_000_000(
    &aKeys_002_041_001_000_000[0], &aValues_002_041_001_000_000[0] );
   // Substitution set RejCodeSet.  Language: enCA
   static const I_CHAR* aKeys_002_041_003_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("106"),
      I_("107"),
      I_("11"),
      I_("117"),
      I_("118"),
      I_("119"),
      I_("12"),
      I_("120"),
      I_("121"),
      I_("122"),
      I_("123"),
      I_("125"),
      I_("127"),
      I_("128"),
      I_("129"),
      I_("13"),
      I_("134"),
      I_("135"),
      I_("136"),
      I_("137"),
      I_("138"),
      I_("139"),
      I_("14"),
      I_("140"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("181"),
      I_("182"),
      I_("183"),
      I_("184"),
      I_("186"),
      I_("187"),
      I_("188"),
      I_("189"),
      I_("19"),
      I_("190"),
      I_("191"),
      I_("192"),
      I_("193"),
      I_("194"),
      I_("195"),
      I_("196"),
      I_("197"),
      I_("198"),
      I_("199"),
      I_("20"),
      I_("200"),
      I_("202"),
      I_("203"),
      I_("204"),
      I_("205"),
      I_("206"),
      I_("207"),
      I_("208"),
      I_("209"),
      I_("21"),
      I_("210"),
      I_("211"),
      I_("212"),
      I_("216"),
      I_("217"),
      I_("218"),
      I_("219"),
      I_("22"),
      I_("221"),
      I_("222"),
      I_("223"),
      I_("224"),
      I_("229"),
      I_("23"),
      I_("230"),
      I_("231"),
      I_("232"),
      I_("236"),
      I_("237"),
      I_("238"),
      I_("239"),
      I_("24"),
      I_("240"),
      I_("241"),
      I_("242"),
      I_("243"),
      I_("244"),
      I_("245"),
      I_("246"),
      I_("247"),
      I_("248"),
      I_("249"),
      I_("25"),
      I_("250"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("300"),
      I_("305"),
      I_("31"),
      I_("314"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("89"),
      I_("90"),
      I_("91"),
      I_("92"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("96"),
      I_("97"),
      I_("98"),
      I_("99"),
      I_("100"),
      I_("116"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("260"),
      I_("261"),
      I_("262"),
      I_("263"),
      I_("266"),
      I_("316"),
      I_("317"),
      I_("319"),
      I_("320"),
      I_("321"),
      I_("322"),
      I_("324"),
      I_("325"),
      I_("326"),
      I_("327"),
      I_("328"),
      I_("329"),
      I_("330"),
      I_("331"),
      I_("332"),
      I_("333"),
      I_("335"),
      I_("102"),
      I_("111"),
      I_("101"),
      I_("113"),
      I_("141"),
      I_("142"),
      I_("143"),
      I_("144"),
      I_("145"),
      I_("146"),
      I_("147"),
      I_("148"),
      I_("235"),
      I_("338"),
      I_("339"),
      I_("340"),
      I_("341"),
      I_("342"),
      I_("343"),
      I_("344"),
      I_("345"),
      I_("346"),
      I_("351"),
      I_("352"),
      I_("353"),
      I_("354"),
      I_("355"),
      I_("356"),
      I_("357"),
      I_("358"),
      I_("359"),
      I_("360"),
      I_("361"),
      I_("362"),
      I_("363"),
      I_("364"),
      I_("365"),
      I_("366"),
      I_("367"),
      I_("370"),
      I_("374"),
      I_("375"),
      I_("376"),
      I_("377"),
      I_("378"),
      I_("379"),
      I_("385"),
      I_("386"),
      I_("388"),
      I_("389"),
      I_("390"),
      I_("391"),
      I_("392"),
      I_("393"),
      I_("394"),
      I_("395"),
      I_("396"),
      I_("397"),
      I_("398"),
      I_("399"),
      I_("400"),
      I_("401"),
      I_("403"),
      I_("404"),
      I_("405"),
      I_("406"),
      I_("407"),
      I_("411"),
      I_("414"),
      I_("415"),
      I_("417"),
      I_("418"),
      I_("419"),
      I_("420"),
      I_("421"),
      I_("422"),
      I_("423"),
      I_("424"),
      I_("425"),
      I_("426"),
      I_("427"),
      I_("428"),
      I_("430"),
      I_("431"),
      I_("433"),
      I_("434"),
      I_("435"),
      I_("436"),
      I_("437"),
      I_("438"),
      I_("439"),
      I_("440"),
      I_("441"),
      I_("442"),
      I_("443"),
      I_("444"),
      I_("445"),
      I_("446"),
      I_("447"),
      I_("448"),
      I_("449"),
      I_("450"),
      I_("451"),
      I_("452"),
      I_("453"),
      I_("454"),
      I_("455"),
      I_("457"),
      I_("458"),
      I_("459"),
      I_("460"),
      I_("461"),
      I_("462"),
      I_("463"),
      I_("464"),
      I_("465"),
      I_("467"),
      I_("468"),
      I_("469"),
      I_("470"),
      I_("471"),
      I_("472"),
      I_("473"),
      I_("474"),
      I_("475"),
      I_("480"),
      I_("481"),
      I_("483"),
      I_("485"),
      I_("486"),
      I_("487"),
      I_("488"),
      I_("489"),
      I_("490"),
      I_("491"),
      I_("492"),
      I_("493"),
      I_("494"),
      I_("495"),
      I_("496"),
      I_("497"),
      I_("498"),
      I_("500"),
      I_("501"),
      I_("510"),
      I_("520"),
      I_("521"),
      I_("522"),
      I_("523"),
      I_("524"),
      I_("525"),
      I_("526"),
      I_("527"),
      I_("528"),
      I_("529"),
      I_("530"),
      I_("531"),
      I_("532"),
      I_("533"),
      I_("534"),
      I_("535"),
      I_("536"),
      I_("537"),
      I_("538"),
      I_("539"),
      I_("540"),
      I_("541"),
      I_("542"),
      I_("543"),
      I_("544"),
      I_("545"),
      I_("546"),
      I_("548"),
      I_("549"),
      I_("550"),
      I_("551"),
      I_("552"),
      I_("563"),
      I_("565"),
      I_("600"),
      I_("601"),
      I_("602"),
      I_("603"),
      I_("604"),
      I_("706"),
      I_("707"),
      I_("708"),
      I_("709"),
      I_("710"),
      I_("711"),
      I_("712"),
      I_("713"),
      I_("714"),
      I_("715"),
      I_("716"),
      I_("717"),
      I_("718"),
      I_("719"),
      I_("720"),
      I_("721"),
      I_("722"),
      I_("723"),
      I_("724"),
      I_("725"),
      I_("726"),
      I_("727"),
      I_("798"),
      I_("904"),
      I_("905"),
      I_("906"),
      I_("907"),
      I_("908"),
      I_("910"),
      I_("911"),
      I_("912"),
      I_("914"),
      I_("915"),
      I_("916"),
      I_("917"),
      I_("918"),
      I_("919"),
      I_("920"),
      I_("921"),
      I_("922"),
      I_("923"),
      I_("924"),
      I_("925"),
      I_("926"),
      I_("927"),
      I_("928"),
      I_("929"),
      I_("930"),
      I_("931"),
      I_("932"),
      I_("933"),
      I_("934"),
      I_("935"),
      I_("936"),
      I_("937"),
      I_("938"),
      I_("939"),
      I_("940"),
      I_("941"),
      I_("942"),
      I_("943"),
      I_("944"),
      I_("945"),
      I_("946"),
      I_("947"),
      I_("948"),
      I_("949"),
      I_("950"),
      I_("951"),
      I_("952"),
      I_("953"),
      I_("954"),
      I_("956"),
      I_("957"),
      I_("959"),
      I_("960"),
      I_("961"),
      I_("962"),
      I_("963"),
      I_("967"),
      I_("968"),
      I_("969"),
      I_("970"),
      I_("971"),
      I_("974"),
      I_("975"),
      I_("978"),
      I_("983"),
      I_("984"),
      I_("985"),
      I_("986"),
      I_("987"),
      I_("988"),
      I_("989"),
      I_("990"),
      I_("993"),
      I_("994"),
      I_("995"),
      I_("996"),
      I_("997"),
      I_("998"),
      I_("999"),
      I_("1000"),
      I_("1001"),
      I_("1002"),
      I_("1003"),
      I_("1004"),
      I_("1005"),
      I_("1006"),
      I_("1007"),
      I_("1008"),
      I_("1009"),
      I_("1010"),
      I_("1011"),
      I_("1012"),
      I_("1013"),
      I_("1014"),
      I_("1015"),
      I_("1016"),
      I_("1017"),
      I_("1018"),
      I_("1019"),
      I_("1020"),
      I_("1021"),
      I_("1022"),
      I_("1023"),
      I_("1024"),
      I_("1025"),
      I_("1026"),
      I_("1027"),
      I_("1028"),
      I_("1029"),
      I_("1030"),
      I_("1031"),
      I_("1032"),
      I_("1033"),
      I_("1034"),
      I_("1035"),
      I_("1036"),
      I_("1037"),
      I_("1038"),
      I_("1039"),
      I_("1040"),
      I_("1047"),
      I_("1048"),
      I_("1041"),
      I_("1042"),
      I_("1043"),
      I_("1044"),
      I_("1045"),
      I_("1046"),
      I_("1049"),
      I_("1050"),
      I_("1051"),
      I_("1052"),
      I_("1053"),
      I_("1054"),
      I_("1055"),
      I_("1056"),
      I_("1057"),
      I_("1058"),
      I_("1059"),
      I_("1060"),
      I_("1070"),
      I_("1071"),
      I_("1072"),
      I_("1073"),
      I_("1074"),
      I_("1075"),
      I_("1076"),
      I_("1077"),
      I_("1078"),
      I_("1085"),
      I_("1086"),
      I_("1087"),
      I_("1080"),
      I_("1081"),
      I_("1088"),
      I_("1089"),
      I_("1090"),
      I_("1091"),
      I_("1092"),
      I_("1093"),
      I_("1094"),
      I_("1095"),
      I_("1096"),
      I_("1097"),
      I_("1099"),
      I_("1100"),
      I_("1101"),
      I_("1102"),
      I_("1103"),
      I_("1104"),
      I_("1105"),
      I_("1106"),
      0x00
   };

   static const I_CHAR* aValues_002_041_003_000_000[] = {
      I_("No Primary Master Record Exists"),
      I_("No Account Master Record Exists"),
      I_("Fund Fee Detail Not Foiund/Defined"),
      I_("BEL must be Acq and Admin Fee = 0, Prcnt"),
      I_("BackEnd Net Order must not"),
      I_("Current Unit Value Not Found"),
      I_("Account Not Active at Trade Date"),
      I_("Group Purchase Stop Flag Enables"),
      I_("Account Purchase Stop Flag Enables"),
      I_("ROA not available for this account"),
      I_("Holdback Exist. Reject whole transaction"),
      I_("Holdback $ = Avail $ and Settle method 2 is used."),
      I_("Holding"),
      I_("Holding Fund Detail does not exist"),
      I_("Exceed users setup amount"),
      I_("Fee Waived For this Account"),
      I_("WARN: Dollars must be rounded to Cents"),
      I_("Units Rounding Factor exceeds Unitsprecis"),
      I_("Invalid deposit code for tax type"),
      I_("Fee Entered Without An Over-ride"),
      I_("No Account Value Record Exists"),
      I_("Transaction must be Varified"),
      I_("TI: Exchange Rate does not exist"),
      I_("WARN: Fund Max Subsequent Contrib Exceed"),
      I_("Transaction must be Verified"),
      I_("The Exchange Rate does not exist"),
      I_("WARN: Fund Max Initial Deposit Exceeded"),
      I_("Unit value is equal to zero"),
      I_("Net Purchase Entered Without Fee Amount"),
      I_("The remaining minimum amount must be paid first"),
      I_("Remaining account balance is insufficient to cover"),
      I_("Tax Type Rules not available for account tax type"),
      I_("Scheduled Payment Information not available"),
      I_("Redemption Code Rules not setup"),
      I_("Account Master Table not on file"),
      I_("Fee Override, No Fee Defined"),
      I_("The remaining minimum amount redemption was not pr"),
      I_("Invalid Fund is Indicated"),
      I_("Purchase not allowed for Fund and Class"),
      I_("Invalid Fund for registered account"),
      I_("WARN:Less Than Mininum Initial Purchase"),
      I_("WARN:Less Than Min Fund/Class Balance"),
      I_("WARN:Less Than Minimum Account Balance"),
      I_("WARN:Less Than Min Initial Redemption"),
      I_("WARN:Less Than Min Subsequent Redemption"),
      I_("ESOP  Contribution Exceeds yearly limit"),
      I_("Fund is not ESOP Eligible"),
      I_("Processing Redemption from ESOP Investment Plan"),
      I_("Processing Redemption from ESOP Participation Plan"),
      I_("WARN: Less Than Minimum Allowable Purch."),
      I_("ESOP Transfer must close the Account"),
      I_("Purchasing Security for"),
      I_("Whole Share fund purchase not pre-processed"),
      I_("Net Whole Share redemptions are not allowed"),
      I_("Cannot transfer Out of an ESOP Account"),
      I_("Cannot transfer In of an ESOP Account"),
      I_("No S.W. Ps allowed from ESOP Account"),
      I_("No Amount Available in Cash-holding Fund"),
      I_("Redemption Code not allowed for ESOP"),
      I_("No Amount Available in Cash-holding Fund"),
      I_("Less Than Minimum Allowable P.A.C."),
      I_("Redemption Code not allowed for ESOP"),
      I_("Invalid Settlement source"),
      I_("Invalid Settlement Source for Account Designation<"),
      I_("Invalid Order Source"),
      I_("Invalid Settlement Type"),
      I_("Invalid Settlement Type for Dealer/Intermediary<1>"),
      I_("Wire Order Redemption not allowed for Fund<1>"),
      I_("Invalid Order Source for Account Designation<1>"),
      I_("The Intermediary is not permitted to enter wire or"),
      I_("Commission > Maximum Allowed"),
      I_("<1> is not permitted to enter money market wire or"),
      I_("No Dealer Information available for Broker Code"),
      I_("Account has an valid loan!Must enter a valid sourc"),
      I_("RESP Plan Limit exceeded"),
      I_("RESP Year Limit exceeded"),
      I_("RESP redemption exceed Contribution"),
      I_("RESP Redemption exceed Earnings"),
      I_("Previous Y/E Re-Calculation"),
      I_("Fund is Capped"),
      I_("Contract Account Status is Active"),
      I_("Contract Account Status is not Active"),
      I_("Contract Account Status is Death Status"),
      I_("Must enter a Death Claim Redemption Code"),
      I_("WARNING:TRADE >= 30 DAYS OLD"),
      I_("Dealer cannot settle orders place by Intermediary."),
      I_("Deposit ID is mandatory."),
      I_("SIsrep is not permitted new business activities"),
      I_("Not enough grant left for return"),
      I_("DP 20 or RD 61,83,84 not allowed in Transfer"),
      I_("Error when creating Escrow Entity"),
      I_("No RESP Beneficiary selected"),
      I_("This is not a contract Account"),
      I_("No originating contribution selected"),
      I_("RESP  Redmption exceed Earnings"),
      I_("Trade Date > Contribution Term Date"),
      I_("This type of transaction is not supported for Fami"),
      I_("For RESP to RESP tranfer only RD 64 and DP 17 are"),
      I_("RESP transfer amount may be too high"),
      I_("Allocations not fully supported for RESP"),
      I_("Allocation not fully supported for Family Plan RES"),
      I_("EFT has been Transmitted, Do you want to continue?"),
      I_("No RESPContrDetl record available"),
      I_("Effective Contract Plan does not exist"),
      I_("Not enough grant amount for return"),
      I_("Trans Type must be ED - for contract"),
      I_("Order Type must be Direct"),
      I_("Unit Code must be D - dollars"),
      I_("Gross/Net must be Gross"),
      I_("Payment must be multiple of Payment Amt."),
      I_("Non integer amount for zero precision currency"),
      I_("Fractional Values not Allowed in this Currency"),
      I_("Maximum"),
      I_("Invalid Transfer is Kind"),
      I_("Initial payments are not valid for PIP"),
      I_("Payment Less Than Minimum Init Payment"),
      I_("No Scale Detail record found"),
      I_("FIFO units do NOT exist"),
      I_("Batch  is ACTIVE"),
      I_("Batch is LOCKED"),
      I_("Batch does NOT exist"),
      I_("FROM/TO: Contract Transfer Failed"),
      I_("FROM/TO: Trans Not Found in Contract Trf"),
      I_("Group Redemption Stop Flag Enabled"),
      I_("Redemption Stop Flag Enabled"),
      I_("Assigned Flag Enabled"),
      I_("Inconsistentm Fee Charged"),
      I_("Only 3,4,5,6,10,11 allowed for RRIF plan"),
      I_("Net Trade Entered Without a Fee Amount"),
      I_("Full Redemption Not Allowed on"),
      I_("Redemption Not Allowed for Fund & Class"),
      I_("Invalid Remption Code"),
      I_("Red: available units = 0.00"),
      I_("Dealer Not Authorized to Deal a Fund"),
      I_("A Back Net Order cannot have admin. Fee"),
      I_("No Funds Found For Account"),
      I_("Insufficient Funds As At Trade Date"),
      I_("Unissued Certiificate Units exist"),
      I_("Cannot update Manual/Suppressed Cheque"),
      I_("Trn: available Units = 0.00"),
      I_("WARN/FR: Effective PAC Does Not Exist"),
      I_("TO:Effective PAC Exists"),
      I_("TO Effective PAC Exists/FR:PAC Not Found"),
      I_("FR:Group Tnsfr/Redem Stop Flag Enabled"),
      I_("FR:Account Tnsfr/Redem Stop Flag Enable"),
      I_("FR:Shareholder Does Not Exist"),
      I_("FR:Account Does Not Exist"),
      I_("TO:Account Not Active At Trade Date"),
      I_("TO:Group Tnsfr/Purch Stop Flag Enabled"),
      I_("TO:Account Tnsfr/Purch Stop Flag Enable"),
      I_("TO:Shareholder Does Not Exist"),
      I_("TO: Account Does Not Exist"),
      I_("FR:Current Unit Value Not Found"),
      I_("FR/TO:Not An Allowed Transfer"),
      I_("FR:Account Not Active At Trade Date"),
      I_("Transaction Requires Approval"),
      I_("Net Transfer Entered Without Fee Amount"),
      I_("FR:Invalid Fund"),
      I_("FR:Transfer Not Allowed For Fund"),
      I_("FR:Fund Fee Detail Not Found/Defined"),
      I_("TO:Invalid Fund"),
      I_("To:Transfer No Allowed For Fund"),
      I_("TO:Fund Fee Detail Not Found/Defined"),
      I_("Must"),
      I_("FR:No Fund Found For Account"),
      I_("FR:Insufficient Funds As At Trade Date"),
      I_("FR:Unissued Certificate Units Exist"),
      I_("TO:Current Unit Value Not Found"),
      I_("TO:Fee Waived For This Account"),
      I_("TO:Fee Entered Without an Over-ride"),
      I_("TO:Net Purch Entered Without Fee Amount"),
      I_("TO:Fee Override, No Fee Defined"),
      I_("TO:Less Than Minimum Initial Purchase"),
      I_("TO:Less Than Minimum Allowable Purchase"),
      I_("Effective Contract Plan Does Not Exist"),
      I_("FR:Effective Contract Plan Not Exist"),
      I_("Payment Code Valid Only for DIRECT Purch"),
      I_("Payment Code Valid Only for DOLLAR Purch"),
      I_("Payment Code Valid Only for GROSS Purch"),
      I_("FR/TO: Contract Tnfr MUST be FULL Amount"),
      I_("Payment Code MUST be : P or Blank"),
      I_("Acq/Admin Fee Calculate during Night Run"),
      I_("Currency not allowed in this tax type"),
      I_("Stop Date of Fund less than or equal to Trade Date"),
      I_("Stop Date is before Start Date"),
      I_("Price not found"),
      I_("No transfer between RRSP and RRSP spousal"),
      I_("ERROR: ENTIRE ACCOUNT IS RESTRICTED."),
      I_("WARNING: ENTIRE ACCOUNT IS RESTRICTED! DO YOU WISH TO CONTINUE?"),
      I_("PENDING TRADE(S) MAY BE INTERRUPTED. DO YOU WISH TO PROCEED?"),
      I_("'TO' POLICY HAS A TITLES RESTRICTION. DO YOU WISH TO PROCEED WITH TRAN"),
      I_("Exchange: Price Not Found for Percent Free"),
      I_("LLP Error"),
      I_("Estate Error"),
      I_("Invalid AllFundTransfer - with assignment"),
      I_("Invalid AllfundTransfer - with Loan(s)"),
      I_("Invalid AllFundTransfer - with certificate"),
      I_("AIP withdrawal exists, transfer to another RESP not allowed"),
      I_("Cannot apply RESP OC withdrawal to invalid year"),
      I_("Invalid CESG repayment reason code"),
      I_("Invalid RESP EAP/PSE information"),
      I_("Original Trade cannot be cancelled"),
      I_("Original Trade not found"),
      I_("DP 17, RD 64/65 can only be used for RESP to RESP transfer"),
      I_("Insufficient notional balance to cancel RESP transfer"),
      I_("Settling grant repayment by units is not allowed"),
      I_("Net transaction amount exceeds net CESG owing"),
      I_("Exchange rate for tax calculation not found"),
      I_("Negative Guarantees following must be cancelled (rebook at will)."),
      I_("Commission less than minimum allowed"),
      I_("Province of LIRA/LIF/LRIF must be same"),
      I_("Transfer-Out Transaction record not found"),
      I_("Maximum Payout amount will be exceeded"),
      I_("Transfer-In Transaction record not found"),
      I_("Transfer-Out Fund-Mstr not found"),
      I_("Transfer-In Fund-Mstr not found"),
      I_("Transfer-Out ContractType not found"),
      I_("Transfer-Out Account-Contract not found"),
      I_("Transfer-In ContractType not found"),
      I_("Transfer-In Account-Contract not found"),
      I_("Transfer-Out Contract Master not found"),
      I_("To account is locked."),
      I_("Exchange out fee is below min"),
      I_("Exchange out fee exceeds max"),
      I_("No Family Code for Shareholder"),
      I_("No Family Code for IN Shareholder"),
      I_("Error Calculating Family Market Value"),
      I_("Family Market Value = 0.0"),
      I_("Error Finding FamilyDSC Information"),
      I_("Total Family Deposits = 0."),
      I_("Error Updating FamilyDSC Record"),
      I_("PAC Not allowed for this Fund"),
      I_("SWP not allowed for this fund"),
      I_("Auto-xfer IN not allowed for this fund"),
      I_("Auto-xfer OUT not allowed for this fund"),
      I_("Nationality is not populated"),
      I_("PAC amount is less than initial minimum purchase"),
      I_("Auto Transfer amount is less than initial minimum purchase"),
      I_("Auto Transfer fund is a capped fund"),
      I_("Account is ineligible for Pay Option 4"),
      I_("Missing Fee-Parms for FundGroup"),
      I_("Transfer In not allowed for Grandfathered AMS account"),
      I_("Grandfathered AMS A/c-ED/PAC not allowed aft full redempt"),
      I_("Maximum redemption % exceeded"),
      I_("Income Level field is required"),
      I_("Net Worth field is required"),
      I_("Risk Tolerance field is a required"),
      I_("Knowledge field is required"),
      I_("Business No. is applicable to corporate accounts only"),
      I_("Account Escrow Flag is set to Active"),
      I_("Active SWP exists on Account"),
      I_("Active PAC exists on Account"),
      I_("Excess fund/class is mandatory for AMS Global set up"),
      I_("Rounding fund/class is mandatory for AMS Global set up"),
      I_("Purchase of Fund/Class outside of AMS mix is not allowed"),
      I_("Date of Birth is a required field"),
      I_("Occupation is a required field"),
      I_("Date of Birth is missing"),
      I_("Missing Redemption Fee Setup"),
      I_("RepLevel must be > 3 for borrowed deals"),
      I_("RepLevel 1 cannot create new accounts"),
      I_("Backdates prior to DM event are not allowed."),
      I_("Account cannot be closed account Value > 0"),
      I_("English/French MFOL Name is mandatory for AMS global set up."),
      I_("Valid SIN is required for RESP accounts"),
      I_("Start, End or Maturity Date is blank."),
      I_("Inactive pol. has the same maturity date."),
      I_("Systematic plan not transfered for switch."),
      I_("Systematic plan not transfered for switch to different account."),
      I_("Redemption amount is greater than account balance"),
      I_("Transfer/Exchange amount is greater than account balance"),
      I_("Transfer-In Fund-Info record not found"),
      I_("Transfer-In Contract Master not found"),
      I_("Accounts with Unsettled Trades are ineligible for AMS"),
      I_("Accounts with Pending Trades are ineligible for AMS rebalancing"),
      I_("Error to determine Closing Decade"),
      I_("LSIF Redrules record not available"),
      I_("SalesRepCode should only be 5 characters"),
      I_("AWD Comment is blank"),
      I_("Offer price not found"),
      I_("Reinvestment price not found"),
      I_("Discount fee model not found"),
      I_("Invalid settlement currency for Fund"),
      I_("Fees can not be covered by transaction amount"),
      I_("Account must be PUEV capable if Fund is PUEV capable"),
      I_("Shareholder fee model code is missing"),
      I_("Fund must be PUEV capable if Account is PUEV capable"),
      I_("Reinvest FEL commission can not be negative"),
      I_("Both accounts and both funds must be PUEV capable"),
      I_("Fund is Investro Capable but the fund broker's routing type is not Investro"),
      I_("Fund is not Investro Capable but the fund broker's routing type is Investro"),
      I_("Price of 3rd party fund is equal 0."),
      I_("StaticPendingTrade Info not available"),
      I_("Client defined maturity date is not available"),
      I_("Structured Notes Info not found"),
      I_("CD policy(s) impacted by DOB change"),
      I_("DOB change impacts matured/reset policy"),
      I_("Wire Order Number exceeds 10 characters"),
      I_("New date of birth cannot be blank"),
      I_("New Legal Contract Maturity date cannot be less than  Maturity Date"),
      I_("Transactions cannot exist after old/new closing decade start date"),
      I_("Country code for banking information is required."),
      I_("Cannot calculate EUSD."),
      I_("Sender Ref No. is required when NetworkID is not blank"),
      I_("User-defined maturity date less than  years from Account Effective Date."),
      I_("No Transfer/Exchange rule defined for the Trade Date."),
      I_("Maturity Date of TO side does not match with TI side."),
      I_("Pending trades cannot exist in old/new closing decade"),
      I_("User-defined maturity date less than  years from Reset Effective Date."),
      I_("Client-Defined Maturity Date must be  years greater than Reset Date."),
      I_("User-defined Maturity Date cannot be blank."),
      I_("User-defined Deposit Maturity Date greater than Legal Contract Maturity Date."),
      I_("User-defined Contract Maturity Date greater than Legal Contract Maturity Date."),
      I_("No active policy found to get the maturity date."),
      I_("Warning:GUARANTEE ADJUSTMENT EXISTS FOR THE ACCOUNT CONTRACT AFTER TRADE DATE."),
      I_("THERE HAS BEEN GUARANTEE ADJUSTMENT(S) SINCE THE ORIGINAL TRADE."),
      I_("The guarantee adjustment record(s) must be cancelled before processing backdated transaction."),
      I_("Guarantee Units do not balance with transaction units."),
      I_("SEG history status mismatch: SEG history is available for TI-side as of the trade date but is not available for TO-side."),
      I_("SEG history status mismatch: SEG history is available for TO-side as of the trade date but is not available for TI-side."),
      I_("Guarantee Adjustments need to be cancelled before DOB change due to Reduction Age impact"),
      I_("Warning:Guarantee Adjustment exists after trade date for the Account."),
      I_("Warning:Unit adjustment required for Account."),
      I_("Possible EUSD tax calc effect on subsequent Money out Transaction."),
      I_("Please cancel money out transaction."),
      I_("Duplicate SIN found in entity list."),
      I_("Annuitant is older than latest age to open/purchase years."),
      I_("not available for purchase."),
      I_("Non-numeric value assigned to numeric field."),
      I_("Many to Many Xfer with source funds of diff fund currencies."),
      I_("Invalid Trade in split comm environment."),
      I_("Missing or Invalid allocation info."),
      I_("Invalid trade amount."),
      I_("Fund/Class is not valid in Group."),
      I_("Invalid custom trading schedule"),
      I_("Missing custom trading schedule"),
      I_("Transaction not allowed during settlement phase"),
      I_("Maximum event(s) for the year exceeded"),
      I_("Pending/Settled trades/events exist on or after the event effective date"),
      I_("The valid period for the event is between"),
      I_("Missing exchange rate for multicurrency trade"),
      I_("Invalid Event Effective Date"),
      I_("Active Event Schedule already exists"),
      I_("There have been manual event(s) since the original trade date"),
      I_("Invalid PUD code for acct closing redcode!"),
      I_("Event is not allowed during closing period"),
      I_("The new user-defined CMD should be after the existing CMD"),
      I_("Reset can be processed only  year(s) before CMD"),
      I_("PAC stop date impacted by DOB change"),
      I_("DOB impacts CMD after date reset"),
      I_("Payment for both Redemption and Distribution must be setup"),
      I_("Cannot find time zone information"),
      I_("Holdback amount >= available units."),
      I_("Both sides of Transfer/Exchange must be either settled or unsettled in order for trade to be cancelled."),
      I_("Invalid Settlement type indicator."),
      I_("Transaction number not found."),
      I_("Transaction number is missing."),
      I_("WireOrder number is missing."),
      I_("External ID is missing."),
      I_("External ID type is missing."),
      I_("Fund code is missing."),
      I_("Class code is missing."),
      I_("Transaction type is missing."),
      I_("Trade Date is missing."),
      I_("Settle Date is missing."),
      I_("Transaction cannot be found for settlement."),
      I_("Account number cannot be found."),
      I_("Fund code cannot be found."),
      I_("Class code cannot be found."),
      I_("Gross/Net indicator is missing."),
      I_("Stop Redemption Settle Flag is set to Yes."),
      I_("Redemption Amount is greater than account balance."),
      I_("iFAST Trans-Rec-Xref table not available."),
      I_("Internal iFAST issue - no active settlement batch was found."),
      I_("Transaction previously settled."),
      I_("WireOrder number cannot be found."),
      I_("External ID cannot be found."),
      I_("External ID type cannot be found."),
      I_("Transaction Type cannot be found."),
      I_("Trade Date cannot be found."),
      I_("Settlement Date cannot be found."),
      I_("Invalid Gross/Net indicator. Must be G or N."),
      I_("Account number is missing."),
      I_("Number of fields of record line are less that expected."),
      I_("Broker code is missing."),
      I_("TO/EO transaction must be settled."),
      I_("Contribution is not allowed for non-resident for TaxType"),
      I_("Contrib. date is outside the allowed dates for TaxType"),
      I_("Cancellation Failure refer to REVRSLOG.D report"),
      I_("Reversal or adjustment placed in another Account, Fund, or Class"),
      I_("Original Trade Cancelled or not Found"),
      I_("Mirror - Cancellation Failure refer to REVRSLOG.D report"),
      I_("Split Commission does not match Fee"),
      I_("No Paying Agent Found"),
      I_("Tax Jurisdiction not found Paying Agent"),
      I_("Tax Jurisdiction not found for Owner"),
      I_("No active owner found"),
      I_("Invalid selection. Deposit Code is applicable for Sibling Only accounts"),
      I_("Invalid selection. Beneficiary is not linked to a PCG."),
      I_("PCG exists,please de-link PCG for non-sibling only accounts."),
      I_("Error corrections not allowed for settled trades on RESP accounts"),
      I_("Error corrections not allowed for trades submitted to HRSDC on RESP accounts"),
      I_("DP 20,73,74,75,76 or RD 75,76,83 not allowed in Transfer."),
      I_("Account is not Sibling Only. Grant Amount is not applicable"),
      I_("Beneficiary is not linked to a PCG. Grant Amount is not applicable"),
      I_("Beneficiary is not eligible for CLB since his Date of Birth is greater than 01/01/2004"),
      I_("CLB Amount cannot be transferred since SIN of from and to Beneficiary are different"),
      I_("Redemption code is invalid since beneficiary is non-resident"),
      I_("Fund is Front End Load with commission greater than zero"),
      I_("DSC amount is greater than the amount attributed to income in the EAP"),
      I_("Redemption code '77' applicable only for non-resident beneficiaries"),
      I_("Beneficiary's Date of Birth is missing"),
      I_("Beneficiary's Gender is missing"),
      I_("Beneficiary is over 21 and trade cannot be processed"),
      I_("Termination date should be 25 years from Inception date."),
      I_("Pending and Cancelled Status not applicable"),
      I_("No Bus-Day record available"),
      I_("No Fund-Mstr record available"),
      I_("No fund-group-type record with Valn grouptype available"),
      I_("Fund record not available in Fund-Group-List"),
      I_("The Fund Group Type and Fund Group are not available in FundSched"),
      I_("Error in RUNRIF51"),
      I_("Error in RUNRIF52"),
      I_("Reset RUNRIFInfo control before restarting"),
      I_("Account:Less than minimum Initial Purchase"),
      I_("Account:Less than minimum Allowable Purchase"),
      I_("Account:Purchase not allowed for Fund"),
      I_("Account:Redemption not allowed for Fund"),
      I_("Account:TO:Transfer not allowed for Fund"),
      I_("Account:FROM:Transfer not allowed for Fund"),
      I_("Account:Less than Minimum Fund/Class Balance"),
      I_("Broker:Less than minimum Initial Purchase"),
      I_("Broker:Less than minimum Allowable Purchase"),
      I_("Broker:Purchase not allowed for Fund"),
      I_("Broker:Redemption not allowed for Fund"),
      I_("Broker:TO:Transfer not allowed for Fund"),
      I_("Broker:FROM:Transfer not allowed for Fund"),
      I_("Broker:Less than Minimum Fund/Class Balance"),
      I_("Branch:Less than minimum Initial Purchase"),
      I_("Branch:Less than minimum Allowable Purchase"),
      I_("Branch:Purchase not allowed for Fund"),
      I_("Branch:Redemption not allowed for Fund"),
      I_("Branch:TO:Transfer not allowed for Fund"),
      I_("Branch:FROM:Transfer not allowed for Fund"),
      I_("Branch:Less than Minimum Fund/Class Balance"),
      I_("Sales Rep:Less than minimum Initial Purchase"),
      I_("Sales Rep:Less than minimum Allowable Purchase"),
      I_("Sales Rep:Purchase not allowed for Fund"),
      I_("Sales Rep:Redemption not allowed for Fund"),
      I_("Sales Rep:TO:Transfer not allowed for Fund"),
      I_("Sales Rep:FROM:Transfer not allowed for Fund"),
      I_("Sales Rep:Less than Minimum Fund/Class Balance"),
      I_("Less than Minimum Fund/Class Balance"),
      I_("Deposit type not allowed for RedCode"),
      I_("Allowed Transfer is from LonckIn to Non LockedIn Registered"),
      I_("Allowed Transfer is from LonckIn to Non Registered"),
      I_("Redeem not allowed for reason code bankruptcy"),
      I_("Order type should be wire for partcipant transfer."),
      I_("Order type should be direct for non-partcipant transfer."),
      I_("Inactive Dealer / Ineligible Broker for AMS"),
      I_("Stop purchase or Redemption flag active for AMS A/C"),
      I_("Minimum AMS investment not met"),
      I_("Mixed currency fund in AMS model"),
      I_("Fund/Class  is Soft Capped"),
      I_("AMS Eligibility"),
      I_("Fund Load Group not the same under AMS Allocation Set-up"),
      I_("AMS set-up not allowed for Institutional Account"),
      I_("redemption Code is not allowed for transfer"),
      I_("From this account you can transfer only to RRSP or RRIF account"),
      I_("Account Category Private not applicable to account type and account designation"),
      I_("Aggr amt below fundloadgrp min init amt!"),
      I_("Account: Fund/Class  is Soft Capped!"),
      I_("KYC information is missing"),
      I_("Management fee model is missing"),
      I_("RESP NASU not available on desktop"),
      I_("Entry of spouse's date of birth is not allowed."),
      I_("Spouse's date of birth must be less than or equal to accountholder's age."),
      I_("Invalid payment period"),
      I_("Account has active certificate units"),
      I_("Account value is locked."),
      I_("New money-in for Tax Type Schedule is not allowed after"),
      I_("Redemption is contrary to client guarantee guard protection setting rules"),
      I_("Transfer is contrary to client guarantee guard protection setting rules"),
      I_("No Eligible Contracts in this account"),
      I_("Accounts have different SiblingOnly status - Ensure transfer meets regulations"),
      I_("An active SWP exists setup with GMWB funds"),
      I_("An active Dynamic SWP exists setup with GMWB funds"),
      I_("Invalid/Blank  Regulatory Standard"),
      I_("PayType for requested Payment Instruction should be set to EFTfor redemption payments"),
      I_("Account number  does not exist"),
      I_("Account number should be different from that of ED trade"),
      I_("An active Dynamic SWP exists setup with non-GMWB funds"),
      I_("Duplicate Rule Type is not allowed."),
      I_("Both Mgmt Fee Rebate and Mgmt Fee flags can not be true at the same time."),
      I_("Beneficiary Age is over 31 and trade cannot be processed"),
      I_("Termination date should be 35 years from Inception date"),
      I_("Invalid Fund Code for Fund on fund Category"),
      I_("User Defined Maturity Date should be  years from the issuedate"),
      I_("Redemption  exceeds Grant Plus Earnings"),
      I_("EAP Amount exceeds Market Value"),
      I_("AMS Effective Date Backdated"),
      I_("Residence Province and Tax Jurisdiction can not be left Unassigned"),
      I_("The requested amount has exceeded the minimum"),
      I_("This transaction may exceed the remaining minimum amount and may be rejected in the cycle"),
      I_("Demographics Data is required."),
      I_("KYC Document List Data is required"),
      I_("Fee Code is not defined, cannot store deducted fee."),
      I_("Direct Deposit Banking setup is available only to default banking of non-registered client held account"),
      I_("Direct Deposit Banking is applied only to Canadian Bank"),
      I_("Direct Deposit Banking is applied only to Canadian Dollar Fund"),
      I_("Contract Versions of TO and TI sides do not match"),
      I_("Joint Life Entity required before processing a joint election."),
      I_("Age of Annuitant/Joint Life Entity Surpasses the maximum age allowed."),
      I_("Account balance is above the SFIR threshold amount"),
      I_("LWA Option of TO and TI sides do not match"),
      I_("Direct Deposit Banking and/or Investor Authorize missing"),
      I_("There are investor authorization setup that missing direct deposit banking Informaion"),
      I_("There are direct deposit banking setup that missing investor authorization Informaion"),
      I_("Settlement Location is missing"),
      I_("Fee is not eligible for Net Trading"),
      I_("Fed tax rate is less than the default value"),
      I_("Prov tax rate is less than the default value"),
      I_("Banking Information is not verified (for trade)"),
      I_("Banking Information is not verified (for settlement)"),
      I_("Fund has certificate units"),
      I_("Shareholder Address is not verified (for trade)"),
      I_("Shareholder Address is not verified (for settlement)"),
      I_("Banking Info has pending or unsettled trade association"),
      I_("Exchange rate for trade date is not found."),
      I_("Traded unit calculation error. Please call system support."),
      I_("DSK:TUP Oversell encountered on a redemption"),
      I_("DSK:TUP Oversell encountered on a transfer out"),
      I_("DSK:TUP Oversell encountered on an exchange out"),
      I_("WEB:TUP Oversell encountered on a redemption"),
      I_("WEB:TUP Oversell encountered on a transfer out"),
      I_("WEB:TUP Oversell encountered on a exchange out"),
      I_("Statement frequency cannot be less than 'Quarterly'."),
      I_("Statement frequency cannot be less than 'Monthly'."),
      I_("Settlement is not allowed during final cycle run."),
      I_("QESI Life Time Grant Limit Exceeded."),
      I_("Insufficient QESI Grants."),
      I_("Refund of Special Taxes exceed Redemption."),
      I_("No Lifetime Contribution Limits has been set up."),
      I_("No Annual Contribution Limits has been set up."),
      I_("Error finding Fee Parms for Fund/Class."),
      I_("No Broker/Branch/Rep found for Account."),
      I_("Error finding Fee Parms for Account and/or Family Code."),
      I_("Warning: Broker is not eligible for Trailer Fee."),
      I_("Warning: Broker/Branch/Rep is not eligible for Trailer Fee."),
      I_("Warning: Broker Trailer Fee Pay Frequency not the same as Run Frequency."),
      I_("Warning: Broker/Branch/Rep has been stopped."),
      I_("Balance for Account/Fund/Class is 0."),
      I_("Warning: Fee Parameter Fee Type must be Percent."),
      I_("Missing Account History for Account."),
      I_("Error finding Fee Parms for Broker/Branch/Rep."),
      I_("Units in AcctBal does not match with InvAsOf"),
      I_("RESP/Family RESP trading is not supported."),
      I_("RESP specific edit check is not being performed."),
      I_("Eligible Trailer Fee is 0 since the Broker/Rep asset aggr is less than $100000."),
      I_("Inventory Tracking is not on for Fund/Class that is GrandFathered."),
      I_("CESG Amount to be returned because of this redemption."),
      I_("This transaction will reduce the YTD contribution to negative"),
      I_("Eligible Balance Type and Split By currently not supported."),
      I_("NEQ already exists."),
      I_("NEQ is missing."),
      I_("DP 78,79,80,81 or RD Q1,Q2,Q3 are not allowed."),
      I_("Election of LWA Age Rate  is only allowed when LWA Rates between accounts is the same."),
      I_("Transfer Option Purchase could not be processed."),
      I_("Account Balance is less than transaction amount"),
      I_("Notional balance is less than entered transaction amount"),
      I_("Amendment may be required"),
      I_("Adjustment may be required"),
      I_("Trade exist for tax year"),
      I_("You may need to add new Grant Request for applicable tax year"),
      I_("You may need to stop Grant Request for applicable tax year"),
      I_("You may need to flip status to Request or create new request for applicable tax year"),
      I_("SIN Effective date is mandatory"),
      I_("Guarantee Guard not same between TO/TI accounts"),
      I_("Transfer Proces failed due to run time error"),
      I_("AIP withdrawal exists, payment to non-resident Owner is not allowed"),
      I_("Entity Address is missing"),
      I_("System will trigger amendment and recalculate QESI notional balance for the tax year"),
      I_("SIN Effective date for RESP beneficiary cannot be unknown"),
      I_("SIN Effective date for RESP beneficiary cannot be earlier than the Date of birth"),
      I_("SIN Effective date for RESP beneficiary cannot be a future date"),
      I_("Dealer's Trailer Payment Frequency changed after first month of quarter end"),
      I_("Inventory Event failed to find the appropriate age group to age the units"),
      I_("Broker's Trailer Payment Frequency changed."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_041_003_000_000;
   const BFSubstitutionSet SubSet_002_041_003_000_000(
    &aKeys_002_041_003_000_000[0], &aValues_002_041_003_000_000[0] );
   // Substitution set RejCodeSet.  Language: frFR
   static const I_CHAR* aKeys_002_041_004_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("106"),
      I_("107"),
      I_("11"),
      I_("117"),
      I_("118"),
      I_("119"),
      I_("12"),
      I_("120"),
      I_("121"),
      I_("122"),
      I_("123"),
      I_("125"),
      I_("127"),
      I_("128"),
      I_("129"),
      I_("13"),
      I_("134"),
      I_("135"),
      I_("136"),
      I_("137"),
      I_("138"),
      I_("139"),
      I_("14"),
      I_("140"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("181"),
      I_("182"),
      I_("183"),
      I_("184"),
      I_("186"),
      I_("187"),
      I_("188"),
      I_("189"),
      I_("19"),
      I_("190"),
      I_("191"),
      I_("192"),
      I_("193"),
      I_("194"),
      I_("195"),
      I_("196"),
      I_("197"),
      I_("198"),
      I_("199"),
      I_("20"),
      I_("200"),
      I_("202"),
      I_("203"),
      I_("204"),
      I_("205"),
      I_("206"),
      I_("207"),
      I_("208"),
      I_("209"),
      I_("21"),
      I_("210"),
      I_("211"),
      I_("212"),
      I_("216"),
      I_("217"),
      I_("218"),
      I_("219"),
      I_("22"),
      I_("221"),
      I_("222"),
      I_("223"),
      I_("224"),
      I_("229"),
      I_("23"),
      I_("230"),
      I_("231"),
      I_("232"),
      I_("236"),
      I_("237"),
      I_("238"),
      I_("239"),
      I_("24"),
      I_("240"),
      I_("241"),
      I_("242"),
      I_("243"),
      I_("244"),
      I_("245"),
      I_("246"),
      I_("247"),
      I_("248"),
      I_("249"),
      I_("25"),
      I_("250"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("300"),
      I_("305"),
      I_("31"),
      I_("314"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("89"),
      I_("90"),
      I_("91"),
      I_("92"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("96"),
      I_("97"),
      I_("98"),
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_041_004_000_000[] = {
      I_("No Primary Master Record Exists"),
      I_("Aucun enregistrement maitre compte n'existe"),
      I_("Detail frais fonds introuvable/non defini"),
      I_("BEL must be Acq and Admin Fee = 0, Prcnt"),
      I_("BackEnd Net Order must not"),
      I_("Valeur unitaire en cours introuvable"),
      I_("Compte inactif a la date de l'operation"),
      I_("Indicateur d'arret souscription groupe actif"),
      I_("Indicateur d'arret souscription compte actif"),
      I_("ROA not available for this account"),
      I_("Holdback Exist. Reject whole transaction"),
      I_("Retenue $ = dispo + mode reglement 2 est utilise"),
      I_("Avoir"),
      I_("Detail fonds avoirs n'existe pas"),
      I_("Montant definition utilisateur depasse"),
      I_("Renonciation frais pour ce compte"),
      I_("ATTN  : montant en dollars a arrondir au cent sup."),
      I_("Facteur d'arrondi d'unites depasse prix unitaire"),
      I_("Code de depot invalide pour type de taxe"),
      I_("Frais saisis sans annulation"),
      I_("No Account Value Record Exists"),
      I_("Transaction doit etre controlee"),
      I_("Tl : taux de change n'existe pas"),
      I_("ATTN : contribution  ult. maxi fonds depassee"),
      I_("Transaction doit etre controlee"),
      I_("Taux de change n'existe pas"),
      I_("ATTN : depot initial maximum fonds depasse"),
      I_("Valeur unitaire est egale a zero"),
      I_("Souscription net saisi sans frais"),
      I_("Montant mini restant doit etre paye en 1er"),
      I_("Remaining account balance is insufficient to cover"),
      I_("Regles type taxe indisponibles pr type taxe compte"),
      I_("Echeancier de paiement prevu indisponible"),
      I_("Regles code rachat non definies"),
      I_("Table maitre comptes non enregistree dans fichier"),
      I_("Frais annules, frais non definis"),
      I_("Rachat montant minimum restant non pr"),
      I_("Fond indique invalide"),
      I_("Souscription non autorise pour le fonds et la categorie"),
      I_("Fonds invalide pour le compte enregistre"),
      I_("WARN:Less Than Mininum Initial Purchase"),
      I_("ATTN : inferieur a solde fonds/categorie minimum"),
      I_("ATTN : inferieur a solde compte minimum"),
      I_("ATTN : inferieur a rachat initial minimum"),
      I_("ATTN : inferieur a rachat ulterieur minimum"),
      I_("ESOP  Contribution Exceeds yearly limit"),
      I_("Fonds non eligible pour ESOP"),
      I_("Traitemnt rachat plan investissement ESOP en cours"),
      I_("Traitemnt rachat plan participation ESOP en cours"),
      I_("ATTN : inferieur a souscription autorise minimum"),
      I_("ESOP Transfer must close the Account"),
      I_("Securite souscription pour"),
      I_("Souscription fonds actions complet non pretraite"),
      I_("Rachats complets actions nettes non autorises"),
      I_("Virement sortant impossible pour compte ESOP"),
      I_("Virement entrant impossible pour compte ESOP"),
      I_("Plan retrait auto non autorises a partir cpte ESOP"),
      I_("Pas de montant disponible dans fonds numéraire"),
      I_("Code rachat non autorise pour ESOP"),
      I_("Pas de montant disponible dans fonds numéraire"),
      I_("Less Than Minimum Allowable P.A.C."),
      I_("Code rachat non autorise pour ESOP"),
      I_("Source de reglement invalide"),
      I_("Source de reglement invalide pour design. cpte"),
      I_("Source ordre invalide"),
      I_("Type de reglement invalide"),
      I_("Type reglement invalide pour agent/intermed.<1>"),
      I_("Rachat transfert telegr. interdit pr fonds<1>"),
      I_("Source ordre invalide incorrecte pr des. cpte <1>"),
      I_("The Intermediary is not permitted to enter wire or"),
      I_("Commission > maximum autorise"),
      I_("<1> non autorise saisir trsfert telegr march. mon."),
      I_("Aucun renseign agent dispo pr ce code courtier"),
      I_("Cpte a emprunt valide ! Saisie srce val. Oblig."),
      I_("Limite plan RESP depassee"),
      I_("Limite annee RESP depassee"),
      I_("Rachat RESP depasse contribution"),
      I_("Rachat RESP depasse gains"),
      I_("Recalcul fin exercice precedent"),
      I_("Fund is Capped"),
      I_("Statut compte contractuel est actif"),
      I_("Statut compte contractuel est inactif"),
      I_("Statut compte contractuel est Deces"),
      I_("Saisie code rachat suite deces obligatoire"),
      I_("ATTN : OPERATION>=30 jours d'anciennete"),
      I_("Agent ne peut regler ordres passes p/intermed."),
      I_("Identification de depot obligatoire."),
      I_("Respons non autorise a mener nlles activites comm."),
      I_("Garanties insuffisantes pour retour"),
      I_("DP 20 or RD 61,83,84 not allowed in Transfer"),
      I_("Erreur lors creation entite donatrice"),
      I_("Aucun bénéficiaire RESP selectionne"),
      I_("Il ne s'agit pas d'un compte contractuel"),
      I_("Aucune contribution sortante selectionnee"),
      I_("Rachat RESP depasse gains"),
      I_("Date operation > Date periode contribution"),
      I_("Type transact. non pris en charge pr fam."),
      I_("Pr virement RESP a RESP uniq. RD 64 et DP 17 sont"),
      I_("Montant virement RESP peut-etre trop eleve"),
      I_("Allocations not fully supported for RESP"),
      I_("Pas prise charge compl pr affect plan famille RESP"),
      I_("TEF transmis. Souhaitez-vous continuer ?"),
      I_("Aucun enregistrement RESPContrDetl dispo"),
      I_("Aucun plan contractuel effectif n'existe"),
      I_("Montant garantie insuffisant pour retour"),
      I_("Trans Type must be ED - for contract"),
      I_("Type ordre doit etre direct"),
      I_("Code unite doit etre D - dollars"),
      I_("Brut/Net doit etre Brut"),
      I_("Payment must be multiple of Payment Amt."),
      I_("Pas montant nombre entier pr devise precision zero"),
      I_("Val. fractionnaires non autorisees pour cette devi"),
      I_("Maximum"),
      I_("Virement invalide est Nature"),
      I_("Initial payments are not valid for PIP"),
      I_("Paiement inferieur a paiement initial minimum"),
      I_("Enregistrement detail bareme introuvable"),
      I_("Les unites FIFO n'existent pas"),
      I_("Lot est ACTIF"),
      I_("Batch is LOCKED"),
      I_("Lot n'existe pas"),
      I_("DE/A : echec transfert contrat"),
      I_("DE/A : virement introuvable dans transfert contrat"),
      I_("Indicateur arret rachat groupe active"),
      I_("Indicateur arret rachat active"),
      I_("Indicateur affecte active"),
      I_("Frais incoherents debites"),
      I_("3,4,5,6,10,11 uniquement autorises pour plan RRIF"),
      I_("Operation nette saisie sans montant de frais"),
      I_("Full Redemption Not Allowed on"),
      I_("Rachat non autorise pour fonds et categorie"),
      I_("Code de rachat invalide"),
      I_("Rachat : unites disponibles = 0,00"),
      I_("Agent non autorise a negocier un fonds"),
      I_("Ordre reliquat net non soumis a frais de gestion"),
      I_("Fonds introuvables pour ce compte"),
      I_("Fonds insuffisants a la date de l'operation"),
      I_("Des unites de certificats non emises existent"),
      I_("Mise a jour cheque manuel/annule impossible"),
      I_("Trn: available Units = 0.00"),
      I_("WARN/FR: Effective PAC Does Not Exist"),
      I_("TO:Effective PAC Exists"),
      I_("TO Effective PAC Exists/FR:PAC Not Found"),
      I_("DE : indicateur arret rachat/viremt groupe active"),
      I_("DE : indicateur arret rachat/viremt compte active"),
      I_("DE : actionnaire n'existe pas"),
      I_("DE : compte n'existe pas"),
      I_("A : compte inactif a la date d'operation"),
      I_("A : indicateur arret souscription/virement groupe active"),
      I_("TO:Account Tnsfr/Purch Stop Flag Enable"),
      I_("A : actionnaire n'existe pas"),
      I_("A : compte n'existe pas"),
      I_("DE : valeur unitaire actuelle introuvable"),
      I_("DE/A  : virement non autorise"),
      I_("DE : compte inactif a la date de l'operation"),
      I_("La transaction doit etre approuvee"),
      I_("Virement net saisi sans montant frais"),
      I_("DE : fonds invalide"),
      I_("DE : virement non autorise pour ce fonds"),
      I_("FR:Fund Fee Detail Not Found/Defined"),
      I_("A : fonds invalide"),
      I_("A : virement non autorise pour ce fonds"),
      I_("A : detail frais fonds introuvable/non defini"),
      I_("Doit"),
      I_("DE : fonds introuvables pour ce compte"),
      I_("DE : fonds insuffisants a la date de l'operation"),
      I_("DE : unites certificat non emises doivent exister"),
      I_("A : valeur unitaire actuelle introuvable"),
      I_("TO:Fee Waived For This Account"),
      I_("TO:Fee Entered Without an Over-ride"),
      I_("A : souscription net saisi sans montant frais"),
      I_("A : annulation frais, aucun frais defini"),
      I_("A : inferieur a souscription initial minimum"),
      I_("A : inferieur a souscription autorise minimum"),
      I_("Aucun plan contractuel effectif n'existe"),
      I_("DE : plan contractuel effectif inexistant"),
      I_("Code paiement valide uniq. pr souscription DIRECT"),
      I_("Code paiement valide uniq. pr souscription DOLLAR"),
      I_("Code paiement  valide uniq. pr souscription BRUT"),
      I_("FR/TO: Contract Tnfr MUST be FULL Amount"),
      I_("Code paiement DOIT etre : P ou vide"),
      I_("Frais acq/gest. calcule en spooling"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_041_004_000_000;
   const BFSubstitutionSet SubSet_002_041_004_000_000(
    &aKeys_002_041_004_000_000[0], &aValues_002_041_004_000_000[0] );
   // Substitution set RejCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_041_005_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("106"),
      I_("107"),
      I_("11"),
      I_("117"),
      I_("118"),
      I_("119"),
      I_("12"),
      I_("120"),
      I_("121"),
      I_("122"),
      I_("123"),
      I_("125"),
      I_("127"),
      I_("128"),
      I_("129"),
      I_("13"),
      I_("134"),
      I_("135"),
      I_("136"),
      I_("137"),
      I_("138"),
      I_("139"),
      I_("14"),
      I_("140"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("181"),
      I_("182"),
      I_("183"),
      I_("184"),
      I_("186"),
      I_("187"),
      I_("188"),
      I_("189"),
      I_("19"),
      I_("190"),
      I_("191"),
      I_("192"),
      I_("193"),
      I_("194"),
      I_("195"),
      I_("196"),
      I_("197"),
      I_("198"),
      I_("199"),
      I_("20"),
      I_("200"),
      I_("202"),
      I_("203"),
      I_("204"),
      I_("205"),
      I_("206"),
      I_("207"),
      I_("208"),
      I_("209"),
      I_("21"),
      I_("210"),
      I_("211"),
      I_("212"),
      I_("216"),
      I_("217"),
      I_("218"),
      I_("219"),
      I_("22"),
      I_("221"),
      I_("222"),
      I_("223"),
      I_("224"),
      I_("229"),
      I_("23"),
      I_("230"),
      I_("231"),
      I_("232"),
      I_("236"),
      I_("237"),
      I_("238"),
      I_("239"),
      I_("24"),
      I_("240"),
      I_("241"),
      I_("242"),
      I_("243"),
      I_("244"),
      I_("245"),
      I_("246"),
      I_("247"),
      I_("248"),
      I_("249"),
      I_("25"),
      I_("250"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("300"),
      I_("305"),
      I_("31"),
      I_("314"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("89"),
      I_("90"),
      I_("91"),
      I_("92"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("96"),
      I_("97"),
      I_("98"),
      I_("99"),
      I_("100"),
      I_("116"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("260"),
      I_("261"),
      I_("262"),
      I_("263"),
      I_("266"),
      I_("316"),
      I_("317"),
      I_("319"),
      I_("320"),
      I_("321"),
      I_("322"),
      I_("324"),
      I_("325"),
      I_("326"),
      I_("327"),
      I_("328"),
      I_("329"),
      I_("330"),
      I_("331"),
      I_("332"),
      I_("333"),
      I_("335"),
      I_("102"),
      I_("111"),
      I_("166"),
      I_("167"),
      I_("168"),
      I_("169"),
      I_("101"),
      I_("113"),
      I_("141"),
      I_("142"),
      I_("143"),
      I_("144"),
      I_("145"),
      I_("146"),
      I_("147"),
      I_("148"),
      I_("235"),
      I_("338"),
      I_("339"),
      I_("340"),
      I_("341"),
      I_("342"),
      I_("343"),
      I_("344"),
      I_("345"),
      I_("346"),
      I_("351"),
      I_("352"),
      I_("353"),
      I_("354"),
      I_("355"),
      I_("356"),
      I_("357"),
      I_("358"),
      I_("359"),
      I_("360"),
      I_("361"),
      I_("362"),
      I_("363"),
      I_("364"),
      I_("365"),
      I_("366"),
      I_("367"),
      I_("370"),
      I_("374"),
      I_("375"),
      I_("376"),
      I_("377"),
      I_("378"),
      I_("379"),
      I_("385"),
      I_("386"),
      I_("388"),
      I_("389"),
      I_("390"),
      I_("391"),
      I_("392"),
      I_("393"),
      I_("394"),
      I_("395"),
      I_("396"),
      I_("397"),
      I_("398"),
      I_("399"),
      I_("400"),
      I_("401"),
      I_("403"),
      I_("404"),
      I_("405"),
      I_("406"),
      I_("407"),
      I_("411"),
      I_("414"),
      I_("415"),
      I_("417"),
      I_("418"),
      I_("419"),
      I_("420"),
      I_("421"),
      I_("422"),
      I_("423"),
      I_("424"),
      I_("425"),
      I_("426"),
      I_("427"),
      I_("428"),
      I_("430"),
      I_("431"),
      I_("433"),
      I_("434"),
      I_("435"),
      I_("436"),
      I_("437"),
      I_("438"),
      I_("439"),
      I_("440"),
      I_("441"),
      I_("442"),
      I_("443"),
      I_("444"),
      I_("445"),
      I_("446"),
      I_("447"),
      I_("448"),
      I_("449"),
      I_("450"),
      I_("451"),
      I_("452"),
      I_("453"),
      I_("454"),
      I_("455"),
      I_("457"),
      I_("458"),
      I_("459"),
      I_("460"),
      I_("461"),
      I_("462"),
      I_("463"),
      I_("464"),
      I_("465"),
      I_("467"),
      I_("468"),
      I_("469"),
      I_("470"),
      I_("471"),
      I_("472"),
      I_("473"),
      I_("474"),
      I_("475"),
      I_("480"),
      I_("481"),
      I_("483"),
      I_("485"),
      I_("486"),
      I_("487"),
      I_("488"),
      I_("489"),
      I_("490"),
      I_("491"),
      I_("492"),
      I_("493"),
      I_("494"),
      I_("495"),
      I_("496"),
      I_("497"),
      I_("498"),
      I_("500"),
      I_("501"),
      I_("510"),
      I_("520"),
      I_("521"),
      I_("522"),
      I_("523"),
      I_("524"),
      I_("525"),
      I_("526"),
      I_("527"),
      I_("528"),
      I_("529"),
      I_("530"),
      I_("531"),
      I_("532"),
      I_("533"),
      I_("534"),
      I_("535"),
      I_("536"),
      I_("537"),
      I_("538"),
      I_("539"),
      I_("540"),
      I_("541"),
      I_("542"),
      I_("543"),
      I_("544"),
      I_("545"),
      I_("546"),
      I_("548"),
      I_("549"),
      I_("550"),
      I_("551"),
      I_("552"),
      I_("563"),
      I_("565"),
      I_("600"),
      I_("601"),
      I_("602"),
      I_("603"),
      I_("604"),
      I_("706"),
      I_("707"),
      I_("708"),
      I_("709"),
      I_("710"),
      I_("711"),
      I_("712"),
      I_("713"),
      I_("714"),
      I_("715"),
      I_("716"),
      I_("717"),
      I_("718"),
      I_("719"),
      I_("720"),
      I_("721"),
      I_("722"),
      I_("723"),
      I_("724"),
      I_("725"),
      I_("726"),
      I_("727"),
      I_("798"),
      I_("904"),
      I_("905"),
      I_("906"),
      I_("907"),
      I_("908"),
      I_("910"),
      I_("911"),
      I_("912"),
      I_("914"),
      I_("915"),
      I_("916"),
      I_("917"),
      I_("918"),
      I_("919"),
      I_("920"),
      I_("921"),
      I_("922"),
      I_("923"),
      I_("924"),
      I_("925"),
      I_("926"),
      I_("927"),
      I_("928"),
      I_("929"),
      I_("930"),
      I_("931"),
      I_("932"),
      I_("933"),
      I_("934"),
      I_("935"),
      I_("936"),
      I_("937"),
      I_("938"),
      I_("939"),
      I_("940"),
      I_("941"),
      I_("942"),
      I_("943"),
      I_("944"),
      I_("945"),
      I_("946"),
      I_("947"),
      I_("948"),
      I_("949"),
      I_("950"),
      I_("951"),
      I_("952"),
      I_("953"),
      I_("953-Alloc"),
      I_("954"),
      I_("956"),
      I_("957"),
      I_("959"),
      I_("960"),
      I_("961"),
      I_("962"),
      I_("963"),
      I_("967"),
      I_("968"),
      I_("969"),
      I_("970"),
      I_("971"),
      I_("974"),
      I_("975"),
      I_("978"),
      I_("983"),
      I_("984"),
      I_("985"),
      I_("986"),
      I_("987"),
      I_("988"),
      I_("989"),
      I_("990"),
      I_("993"),
      I_("994"),
      I_("995"),
      I_("996"),
      I_("997"),
      I_("998"),
      I_("999"),
      I_("1000"),
      I_("1001"),
      I_("1002"),
      I_("1003"),
      I_("1004"),
      I_("1005"),
      I_("1006"),
      I_("1007"),
      I_("1008"),
      I_("1009"),
      I_("1010"),
      I_("1011"),
      I_("1012"),
      I_("1013"),
      I_("1014"),
      I_("1015"),
      I_("1016"),
      I_("1017"),
      I_("1018"),
      I_("1019"),
      I_("1020"),
      I_("1021"),
      I_("1022"),
      I_("1023"),
      I_("1024"),
      I_("1025"),
      I_("1026"),
      I_("1027"),
      I_("1028"),
      I_("1029"),
      I_("1030"),
      I_("1031"),
      I_("1032"),
      I_("1033"),
      I_("1034"),
      I_("1035"),
      I_("1036"),
      I_("1037"),
      I_("1038"),
      I_("1039"),
      I_("1040"),
      I_("1047"),
      I_("1048"),
      I_("1061"),
      I_("1062"),
      I_("1063"),
      I_("1064"),
      I_("1065"),
      I_("1066"),
      I_("1067"),
      I_("1068"),
      I_("1069"),
      I_("1082"),
      I_("1083"),
      I_("1084"),
      I_("1041"),
      I_("1042"),
      I_("1043"),
      I_("1044"),
      I_("1045"),
      I_("1046"),
      I_("1049"),
      I_("1050"),
      I_("1051"),
      I_("1052"),
      I_("1053"),
      I_("1054"),
      I_("1055"),
      I_("1056"),
      I_("1057"),
      I_("1058"),
      I_("1059"),
      I_("1060"),
      I_("1070"),
      I_("1071"),
      I_("1072"),
      I_("1073"),
      I_("1074"),
      I_("1075"),
      I_("1076"),
      I_("1077"),
      I_("1078"),
      I_("1085"),
      I_("1086"),
      I_("1087"),
      I_("1080"),
      I_("1081"),
      I_("1088"),
      I_("1089"),
      I_("1090"),
      I_("1091"),
      I_("1092"),
      I_("1093"),
      I_("1094"),
      I_("1095"),
      I_("1096"),
      I_("1097"),
      I_("1099"),
      I_("1100"),
      I_("1101"),
      I_("1102"),
      I_("1103"),
      I_("1104"),
      I_("1105"),
      I_("1106"),
      I_("1107"),
      I_("1217"),
      I_("1211"),
      I_("1108"),
      I_("1110"),
      I_("1111"),
      I_("1112"),
      I_("1113"),
      I_("1116"),
      I_("1117"),
      I_("1120"),
      I_("1121"),
      I_("1126"),
      I_("1135"),
      I_("1136"),
      I_("1137"),
      I_("1138"),
      I_("1139"),
      I_("1140"),
      I_("1141"),
      I_("1142"),
      I_("1143"),
      I_("1144"),
      I_("1145"),
      I_("1146"),
      I_("1147"),
      I_("1148"),
      I_("1149"),
      I_("1155"),
      I_("1156"),
      I_("1158"),
      I_("1159"),
      I_("1160"),
      I_("1161"),
      I_("1162"),
      I_("1164"),
      I_("1165"),
      I_("1166"),
      I_("1167"),
      I_("1168"),
      I_("1169"),
      I_("1170"),
      I_("1171"),
      I_("1172"),
      I_("1173"),
      I_("1174"),
      I_("1175"),
      I_("1176"),
      I_("1177"),
      I_("1178"),
      I_("1179"),
      I_("1180"),
      I_("1181"),
      I_("1182"),
      I_("1183"),
      I_("1184"),
      I_("1185"),
      I_("1186"),
      I_("1187"),
      I_("1188"),
      I_("1189"),
      I_("1200"),
      I_("1201"),
      I_("1202"),
      I_("1203"),
      I_("1204"),
      I_("1205"),
      I_("1206"),
      I_("1207"),
      I_("1209"),
      I_("1210"),
      I_("1212"),
      I_("1213"),
      I_("1214"),
      I_("1222"),
      I_("1223"),
      I_("1238"),
      I_("1280"),
      I_("1395"),
      I_("1396"),
      I_("1397"),
      I_("1399"),
      I_("1328"),
      I_("1701"),
      I_("1702"),
      I_("1703"),
      I_("1704"),
      I_("1710"),
      I_("1711"),
      I_("1712"),
      I_("1714"),
      I_("1715"),
      I_("1753"),
      I_("1753-Alloc"),
      I_("1754"),
      I_("1754-Alloc"),
      I_("1757"),
      I_("1759"),
      I_("1760"),
      I_("1761"),
      I_("1776"),
      I_("1777"),
      I_("1778"),
      I_("1779"),
      I_("1780"),
      I_("1787"),
      I_("1788"),
      I_("1789"),
      I_("1790"),
      I_("1974"),
      I_("1977"),
      I_("1978"),
      I_("2071"),
      I_("2072"),
      I_("2090"),
      I_("2091"),
      I_("2092"),
      I_("2093"),
      I_("2094"),
      I_("2095"),
      I_("2131"),
      I_("2140"),
      I_("2141"),
      I_("2180"),
      I_("2183"),
      I_("2184"),
      I_("2185"),
      I_("2186"),
      I_("2187"),
      I_("2188"),
      I_("2203"),
      0x00
   };

   static const I_CHAR* aValues_002_041_005_000_000[] = {
      I_("Aucun enregistrement principal primaire existant"),
      I_("Aucun enregistrement principal de compte existant"),
      I_("Détails de frais du fonds introuvables/indéfinis"),
      I_("Les frais de rachat doivent être réglés à Acquisition et les frais d'administration à 0 %."),
      I_("L'ordre net d'achat ne doit pas être un ordre électronique."),
      I_("Valeur unitaire actuelle introuvable"),
      I_("Compte inactif en date de la transaction"),
      I_("Le signal d'arrêt de l'achat du groupe est activé."),
      I_("Le signal d'arrêt de l'achat du compte est activé."),
      I_("Le RDA n'est pas disponible pour ce compte."),
      I_("Retenu existante - rejeter toute la transaction"),
      I_("Le montant retenu est égal au montant disponible et la méthode de règlement 2 est utilisée."),
      I_("Retenue"),
      I_("Détails de la retenue de fonds inexistants"),
      I_("Excède le montant réglé par les utilisateurs"),
      I_("Exonération des frais pour ce compte"),
      I_("AVERTISSEMENT : les montants en dollars doivent être arrondis aux cents."),
      I_("Le facteur d'arrondissement d'unités excède le prix unitaire."),
      I_("Code de dépôt invalide pour ce type d'imposition"),
      I_("Frais entrés sans modification"),
      I_("Aucune valeur marchande n’existe pour ce fonds."),
      I_("La transaction doit être vérifiée."),
      I_("Transfert entrant : taux de change inexistant"),
      I_("AVERTISSEMENT : la cotisation subséquente maximale du fonds est excédée."),
      I_("La transaction doit être vérifiée."),
      I_("Taux de change inexistant"),
      I_("AVERTISSEMENT : le dépôt initial maximal du fonds est excédé."),
      I_("Valeur unitaire égale à zéro"),
      I_("Achat net entré sans montant de frais"),
      I_("Le montant minimal restant doit d'abord être payé."),
      I_("Le solde restant au compte est insuffisant."),
      I_("Les règles de type d'imposition ne sont pas disponibles pour le type d'imposition du compte."),
      I_("L'information sur le paiement prévu n'est pas disponible."),
      I_("Règles de code de rachat non réglées"),
      I_("La table principale du compte n'est pas dans le fichier."),
      I_("Exemption de frais, aucuns frais définis"),
      I_("Le rachat du montant minimal restant n'a pas été traité."),
      I_("Un fonds invalide est indiqué."),
      I_("Achat non autorisé pour le fonds et la classe"),
      I_("Fonds invalide pour le compte enregistré"),
      I_("AVERTISSEMENT : inférieur à l'achat initial minimal"),
      I_("AVERTISSEMENT : inférieur au solde minimal du fonds/de la classe"),
      I_("AVERTISSEMENT : inférieur au solde minimal du compte"),
      I_("AVERTISSEMENT : inférieur au rachat initial minimal"),
      I_("AVERTISSEMENT : inférieur au rachat subséquent minimal"),
      I_("La cotisation RADE excède le plafond annuel."),
      I_("Le fonds n'est pas admissible au RADE."),
      I_("Traitement du rachat du régime d'investissement RADE"),
      I_("Traitement du rachat du régime de participation RADE"),
      I_("AVERTISSEMENT : inférieur à l'achat minimal autorisé"),
      I_("Le transfert RADE doit fermer le compte."),
      I_("Achat de valeur mobilière pour"),
      I_("L'achat du fonds des parts en entier n'a pas été prétraité."),
      I_("Les rachats nets des parts en entier ne sont pas autorisés."),
      I_("Impossible d'effectuer un transfert sortant d'un compte RADE."),
      I_("Impossible d'effectuer un transfert entrant d'un compte RADE."),
      I_("Aucun PRP autorisé pour le compte RADE"),
      I_("Aucun montant disponible dans le fonds de liquidités"),
      I_("Code de rachat non autorisé pour un RADE"),
      I_("Type d'imposition invalide pour le compte"),
      I_("Inférieur au PAC minimal autorisé"),
      I_("Code de rachat non autorisé pour un RADE"),
      I_("Source du règlement invalide"),
      I_("Source du règlement invalide pour la désignation du compte<"),
      I_("Source de l'ordre invalide"),
      I_("Type de règlement invalide"),
      I_("Type de règlement invalide pour le courtier/l'intermédiaire<1>"),
      I_("Le rachat d'ordre électronique n'est pas autorisé pour le fonds<1>."),
      I_("Source de l'ordre invalide pour la désignation du compte<1>"),
      I_("L'intermédiaire n'est pas autorisé à entrer l'ordre électronique."),
      I_("Commission > maximum autorisé"),
      I_("<1> n'est pas autorisé à entrer l'ordre électronique du marché monétaire."),
      I_("Aucune information sur le courtier n'est disponible pour le code de courtier."),
      I_("Il y a un prêt valide au compte. Vous devez entrer une source valide."),
      I_("Plafond REEE excédé"),
      I_("Plafond annuel REEE excédé"),
      I_("Le rachat REEE excède la cotisation."),
      I_("Le rachat REEE excède les revenus."),
      I_("Recalcul de la fin d'année précédente"),
      I_("Le fonds est plafonné."),
      I_("Le statut du compte du contrat est Actif."),
      I_("Le statut du compte du contrat est Inactif."),
      I_("Le statut du compte du contrat est Décédé."),
      I_("Un code de rachat de réclamation en raison de décès doit être saisi."),
      I_("AVERTISSEMENT : transaction >= datée de 30 jours"),
      I_("Le courtier ne peut régler les ordres placés par un intermédiaire."),
      I_("Le code de dépôt est requis."),
      I_("Le représentant des ventes n'est pas autorisé à faire de nouvelles affaires."),
      I_("Solde de subvention restant insuffisant pour un remboursement"),
      I_("DP 20 ou RD 61, 83, 84 non autorisés pour le tranfert"),
      I_("Erreur lors de la création du cessionnaire"),
      I_("Aucun bénéficiaire REEE sélectionné"),
      I_("Ceci n'est pas un compte de contrat."),
      I_("Aucune cotisation d'origine sélectionnée"),
      I_("Le rachat REEE excède les revenus."),
      I_("Date de transaction > date d'échéance de cotisation"),
      I_("Ce type de transaction n'est pas supporté pour le REEE familial."),
      I_("Seuls RD 64 et DP 17 sont admissibles à un transfert de REEE à REEE."),
      I_("Le montant de transfert REEE pourrait être trop élevé."),
      I_("Les répartitions ne sont pas entièrement supportées pour le REEE."),
      I_("Les répartitions ne sont pas entièrement supportées pour la réinitialisation du régime familial."),
      I_("Le TEF a été transmis. Voulez-vous continuer?"),
      I_("Aucun enregistrement des détails du contrat REEE n'est disponible."),
      I_("Aucun contrat n'existe pour ce compte."),
      I_("Montant de subvention insuffisant pour un remboursement"),
      I_("Le type de transaction doit être Achat - pour le contrat."),
      I_("Le type d'ordre doit être Direct."),
      I_("Le code d'unité doit être D - dollars."),
      I_("Le champ Brut/net doit être réglé à Brut."),
      I_("Le paiement doit être un multiple du montant de paiement."),
      I_("Aucun montant entier sans devise de précision"),
      I_("Valeurs fractionnelles non autorisées pour cette devise"),
      I_("Maximum"),
      I_("Transfert en biens invalide"),
      I_("Paiements initiaux invalides pour le PRP"),
      I_("Paiement inférieur au paiement initial minimal"),
      I_("Aucun enregistrement des détails de l'échelle n'a été trouvé."),
      I_("Unités PEPS inexistantes"),
      I_("Le lot est ACTIF."),
      I_("Le lot est VERROUILLÉ."),
      I_("Lot inexistant"),
      I_("DE/VERS : échec de transfert du contrat"),
      I_("DE/VERS : transaction introuvable dans le transfert du contrat"),
      I_("Le signal d'arrêt du rachat du groupe est activé."),
      I_("Le signal d'arrêt du rachat est activé."),
      I_("Le signal de mise en garantie est activé."),
      I_("Frais de gestion incompatibles débités"),
      I_("Seuls 3, 4, 5, 6, 10 et 11 sont autorisés pour un FERR."),
      I_("Transaction nette entrée sans montant de frais"),
      I_("Rachat total non autorisé pour"),
      I_("Rachat non autorisé pour le fonds et la classe"),
      I_("Code de rachat invalide"),
      I_("Rachat : unités disponibles = 0,00"),
      I_("Courtier non autorisé à traiter un fonds"),
      I_("Un ordre net de rachat ne peut avoir de frais d'administration."),
      I_("Aucun fonds trouvé pour ce compte"),
      I_("Fonds insuffisants en date de transaction"),
      I_("Unités de certificat non émises existantes"),
      I_("Impossible de mettre à jour un chèque manuel/supprimé."),
      I_("Transaction : unités disponibles = 0.00"),
      I_("AVERTISSEMENT/DE : PAC en vigueur inexistant"),
      I_("VERS : PAC en vigueur existant"),
      I_("VERS : PAC en vigueur existant/DE : PAC introuvable"),
      I_("DE : le signal d'arrêt du rachat/transfert du groupe est activé."),
      I_("DE : le signal d'arrêt du rachat/transfert du compte est activé."),
      I_("DE : détenteur inexistant"),
      I_("DE : compte inexistant"),
      I_("VERS : compte inactif en date de transaction"),
      I_("VERS : le signal d'arrêt de l'achat/du transfert du groupe est activé."),
      I_("VERS : le signal d'arrêt de l'achat/du transfert du compte est activé."),
      I_("VERS : détenteur inexistant"),
      I_("VERS : compte inexistant"),
      I_("DE : valeur unitaire actuelle introuvable"),
      I_("DE/VERS : transfert non autorisé"),
      I_("DE : compte inactif en date de transaction"),
      I_("La transaction requiert approbation."),
      I_("Transfert net entré sans montant de frais"),
      I_("DE : fonds invalide"),
      I_("DE : transfert non autorisé pour le fonds"),
      I_("DE : détails des frais du fonds introuvables/indéfinis"),
      I_("VERS : fonds invalide"),
      I_("VERS : transfert non autorisé pour le fonds"),
      I_("VERS : détails des frais du fonds introuvables/indéfinis"),
      I_("Les transferts totaux doivent être en dollars."),
      I_("DE : aucun fonds trouvé pour le compte"),
      I_("DE : fonds insuffisants en date de transaction"),
      I_("DE : unités de certificat non émises existantes"),
      I_("VERS : valeur unitaire actuelle introuvable"),
      I_("VERS : frais exonérés pour ce compte"),
      I_("VERS : frais entrés sans modification"),
      I_("VERS : achat net entré sans montant de frais"),
      I_("VERS : exemption de frais, aucuns frais définis"),
      I_("VERS : inférieur à l'achat initial minimal"),
      I_("VERS : inférieur à l'achat minimal autorisé"),
      I_("Aucun contrat n'existe pour ce compte."),
      I_("DE : aucun contrat n'existe pour ce compte."),
      I_("Transfert en biens"),
      I_("Code de paiement uniquement valide pour les achats EN DOLLARS"),
      I_("Code de paiement uniquement valide pour les achats BRUTS"),
      I_("DE/VERS : le transfert du contrat DOIT être un montant TOTAL."),
      I_("Le code de paiement doit être réglé à P ou laissé vide."),
      I_("Calcul des frais d'acquisition/d'administration pendant l'exécution de nuit"),
      I_("Devise non autorisée pour ce type d'imposition"),
      I_("La date d'arrêt du fonds doit être antérieure ou identique à la date de transaction."),
      I_("La date d'arrêt est antérieure à la date de début."),
      I_("Prix introuvable"),
      I_("Aucun transfert entre REER et REER conjoint"),
      I_("ERREUR : le compte en entier est restreint."),
      I_("AVERTISSEMENT : LE COMPTE EN ENTIER EST RESTREINT! VOULEZ-VOUS CONTINUER?"),
      I_("LES TRANSACTION EN SUSPENS POURRAIENT ÊTRE INTERROMPUES. VOULEZ-VOUS CONTINUER?"),
      I_("LA POLICE DU TRANSFERT SORTANT A DES RESTRICTIONS DE TITRES. VOULEZ-VOUS POURSUIVRE LA TRANSACTION?"),
      I_("Échange : prix introuvable pour le montant sans frais"),
      I_("Erreur REEP"),
      I_("Erreur de succession"),
      I_("Transfert de tous les fonds invalide - avec cession"),
      I_("Transfert de tous les fonds invalide - avec prêt(s)"),
      I_("Transfert de tous les fonds invalide - avec certificat"),
      I_("Retrait PRA existant, transfert non autorisé vers un autre REEE"),
      I_("Impossible d'appliquer le retrait des frais d'exploitation REEE à une année invalide."),
      I_("Le code de raison de remboursement SCEE est invalide."),
      I_("L'information PAE/EPS de REEE est invalide."),
      I_("La transaction originale ne peut être annulée."),
      I_("La transaction originale est introuvable."),
      I_("DP 17 et RD 64/65 ne peuvent être utilisés que pour un transfert REEE à REEE."),
      I_("Solde notionnel insuffisant pour annuler le transfert REEE"),
      I_("Le règlement du remboursement de subvention en unités n'est pas autorisé."),
      I_("Le montant de transaction net excède le solde SCEE net."),
      I_("Le taux de change pour le calcul de d'imposition est introuvable."),
      I_("Les garanties négatives suivantes doivent être annulées (reproduire si désiré)."),
      I_("Commission inférieure au minimum autorisé"),
      I_("La province des CRI/FRV/FRRI doit être la même."),
      I_("Pays couvert : juridiction fiscale"),
      I_("Pays couvert : province de résidence"),
      I_("Pays couvert : adresse"),
      I_("Pays couvert : adresse aux États-Unis"),
      I_("Enregistrement de transaction de transfert sortant introuvable"),
      I_("Le montant de versement maximal sera excédé."),
      I_("Enregistrement de transaction de transfert entrant introuvable"),
      I_("L'original du fonds du transfert sortant est introuvable."),
      I_("L'original du fonds du transfert entrant est introuvable."),
      I_("Type de contrat du transfert sortant introuvable"),
      I_("Contrat du compte du transfert sortant introuvable"),
      I_("Type de contrat du transfert entrant introuvable"),
      I_("Contrat du compte du transfert entrant introuvable"),
      I_("L'original du contrat du transfert sortant est introuvable."),
      I_("Le compte est verrouillé."),
      I_("Les frais d'échange sortant sont inférieurs au minimum requis."),
      I_("Les frais d'échange sortant excèdent le maximum autorisé."),
      I_("Aucun code de famille pour le détenteur"),
      I_("Aucun code de famille pour le détenteur individuel"),
      I_("Erreur de calcul de la valeur marchande de la famille"),
      I_("Valeur marchande de la famille = 0,00"),
      I_("Erreur lors de la recherche de l'information sur les FAR de la famille"),
      I_("Dépôts totaux de la famille = 0,00"),
      I_("Erreur lors de la mise à jour de l'enregistrement des FAR de la famille"),
      I_("PAC non autorisé pour ce fonds"),
      I_("PRP non autorisé pour ce fonds"),
      I_("Transfert entrant automatique non autorisé pour ce fonds"),
      I_("Transfert sortant automatique non autorisé pour ce fonds"),
      I_("Le champ de la nationalité est vide."),
      I_("Le montant PAC est inférieur à l'achat minimum initial."),
      I_("Le montant de transfert automatique est inférieur à l'achat minimum initial."),
      I_("Le fonds de transfert automatique est un fonds plafonné."),
      I_("Le compte n'est pas admissible pour l'option de paiement 4."),
      I_("Paramètres de frais manquants pour le groupe de fonds"),
      I_("Transfert entrant non autorisé pour le compte SGP bénéficiant d'une clause de droits acquis"),
      I_("Achat/PAC au compte SGP bénéficiant d'une clause de droits acquis non autorisé après le rachat total"),
      I_("Le pourcentage de rachat maximal est excédé."),
      I_("Le niveau de revenu est requis."),
      I_("La valeur nette est requise."),
      I_("La tolérance au risque est requise."),
      I_("Les connaissances sont requises."),
      I_("Le numéro d'entreprise n'est applicable qu'aux comptes de sociétés."),
      I_("Le signal de mise en garantie du compte est actif."),
      I_("PRP actif existant au compte"),
      I_("PAC actif existant au compte"),
      I_("Le fonds/la classe excédentaire est requis(e) pour le réglage global SGP."),
      I_("Le fonds/la classe arrondi(e) est requis(e) pour le réglage global SGP."),
      I_("L'achat de fonds/de classe en dehors de la composition SGP n'est pas autorisé."),
      I_("La date de naissance est requise."),
      I_("L'emploi est requis."),
      I_("Date de naissance manquante"),
      I_("Création des frais de rachat manquants"),
      I_("Le niveau du représentant doit être > à 3 pour les transactions de prêt."),
      I_("Un représentant de niveau 1 n'est pas autorisé à créer de nouveaux comptes."),
      I_("Les antidatations antérieures à l'événement de gestion de données ne sont pas autorisées."),
      I_("Le compte ne peut être fermé si sa valeur est > à zéro."),
      I_("Le nom MFOL anglais/français est requis pour le réglage global SGP."),
      I_("Un NAS valide est requis pour les comptes REEE."),
      I_("Les champs Date de début, Date de fin et Date d'échéance sont vides."),
      I_("Une police inactive a la même date d'échéance."),
      I_("Régime systématique non transféré pour l'échange"),
      I_("Régime systématique non transféré pour l'échange vers un compte différent"),
      I_("Le montant de rachat excède le montant du solde."),
      I_("Le montant de transfert/d'échange excède le montant du solde."),
      I_("L'enregistrement de l'information sur le fonds du transfert entrant est introuvable."),
      I_("L'original du contrat du transfert entrant est introuvable."),
      I_("Les comptes qui ont des transactions non réglées ne sont pas admissibles au SGP."),
      I_("Les comptes qui ont des transactions en suspens ne sont pas admissibles au rebalancement du SGP."),
      I_("Erreur lors de la détermination de la décennie de fermeture"),
      I_("L'enregistrement des règles de rachat FIT n'est pas disponible."),
      I_("Le code de représentant des ventes ne devrait contenir que 5 caractères."),
      I_("Le champ de commentaire AWD est vide."),
      I_("Cours vendeur introuvable"),
      I_("Prix de réinvestissement introuvable"),
      I_("Modèle de frais d'escompte introuvable"),
      I_("Devise de règlement invalide pour ce fonds"),
      I_("Les frais ne peuvent être couverts par le montant de la transaction."),
      I_("Le compte doit supporter PUEV si le fonds supporte PUEV."),
      I_("Le code de modèle de frais du détenteur est manquant."),
      I_("Le fonds doit doit supporter PUEV si le compte supporte PUEV."),
      I_("La commission sur les frais d'achat du réinvestissement ne peut être négative."),
      I_("Les deux comptes et les deux fonds doivent supporter PUEV."),
      I_("Le fonds supporte Investro, mais le type d'acheminement du courtier en fonds n'est pas Investro."),
      I_("Le fonds ne supporte pas Investro, mais le type d'acheminement du courtier en fonds est Investro."),
      I_("Le prix du fonds de tiers est égal à zéro."),
      I_("L'information sur la transaction en suspens statique n'est pas disponible."),
      I_("La date d'échéance définie par le client n'est pas disponible."),
      I_("L'information sur les notes structurées est introuvable."),
      I_("Les polices de distribution de capital sont touchées par le changement de la date de naissance."),
      I_("Le changement de la date de naissance touche la police mature/révalorisée."),
      I_("Le numéro d'ordre électronique est composé de plus de 10 caractères."),
      I_("La nouvelle date de naissance est requise."),
      I_("La nouvelle date d'échéance du contrat légal ne peut être antérieure à la date d'échéance."),
      I_("Les transactions ne peuvent exister après l'ancienne/la nouvelle date de début de la décennie de fermeture."),
      I_("Le code de pays pour l'information bancaire est requis."),
      I_("Impossible de calculer l'EUSD."),
      I_("Le numéro de référence de l'expéditeur est requis lorsque le champ du code de réseau est vide."),
      I_("La date d'échéance définie par l'utilisateur est antérieure de plusieurs années à la date d'entrée en vigueur du compte."),
      I_("Aucune règle de transfert/d'échange n'est définie pour la date de transaction."),
      I_("La date d'échéance du transfert sortant ne correspond pas au transfert entrant."),
      I_("Les transactions en suspens ne peuvent exister dans l'ancienne/la nouvelle décennie de fermeture."),
      I_("La date d'échéance définie par l'utilisateur est antérieure de plusieurs années à la date d'entrée en vigueur de la révalorisation."),
      I_("La date d'échéance définie par le client doit être postérieure de plusieurs années à la date d'entrée en vigueur de la révalorisation."),
      I_("La date d'échéance définie par l'utilisateur est requise."),
      I_("La date d'échéance du dépôt définie par l'utilisateur est postérieure à la date d'échéance du contrat légal."),
      I_("La date d'échéance du contrat définie par l'utilisateur est postérieure à la date d'échéance du contrat légal."),
      I_("Aucune police active trouvée pour obtenir la date d'échéance."),
      I_("Avertissement : ajustement de garantie existant pour le compte après la date de transaction."),
      I_("Il y a eu un/des ajustement(s) de garantie depuis la transaction d'origine."),
      I_("Le/les enregistrement(s) d'ajustement de garantie doit/doivent être annulé(s) avant le traitement de la transaction antidatée."),
      I_("Les unités de la garantie ne correspondent pas aux unités de la transaction."),
      I_("Discordance du statut de l'historique des fonds distincts : l'historique des fonds distincts est disponible pour le transfert entrant en date de la transaction, mais  pas pour le transfert sortant."),
      I_("Discordance du statut de l'historique des fonds distincts : l'historique des fonds distincts est disponible pour le transfert sortant en date de la transaction, mais pas pour le transfert entrant."),
      I_("Les ajustements de garantie doivent être annulés avant le changement de la date de naissance en raison de l'impact de la réduction d'âge."),
      I_("Avertissement : ajustement de garantie existant après la date de transaction pour le compte."),
      I_("Avertissement : ajustement d'unité requis pour le compte."),
      I_("Effet possible du calcul de l'EUSD sur la transaction de sortie d'argent subséquente."),
      I_("Veuillez annuler la transaction de sortie d'argent."),
      I_("Une copie du NAS a été trouvée dans la liste d'entités."),
      I_("L'âge du crédirentier est supérieur l'âge maximal des années d'ouverture/d'achat."),
      I_("Non disponible pour achat."),
      I_("Valeur non numérique attribuée à un champ numérique."),
      I_("Transfert de plusieurs fonds à plusieurs fonds avec fonds de source de devise de fonds différents."),
      I_("Transaction invalide dans l'environnement de partage de commission."),
      I_("Information sur la répartition manquante ou invalide."),
      I_("Le montant de la transaction est invalide."),
      I_("Le fonds/la classe est invalide pour le groupe."),
      I_("Le tableau d'opération personnalisé est invalide."),
      I_("Le tableau d'opération personnalisé est manquant."),
      I_("Transaction non autorisée pendant la phase de règlement."),
      I_("Le maximum d'événements pour l'année a été excédé."),
      I_("Des transactions/événements en suspens/réglé(e)s existent à la date d'entrée en vigueur de l'événement ou après."),
      I_("La période valide pour l'événement est entre"),
      I_("Taux de change manquant pour la transaction multidevise."),
      I_("La date d'entrée en vigueur de l'événement est invalide."),
      I_("Le tableau de l'événement actif existe déjà."),
      I_("Il y a eu un/des événement(s) manuels depuis la date de transaction d'origine."),
      I_("Code de rachat fermeture de compte, pourcentage, unite ou Dollars invalide."),
      I_("Événement non autorisé pendanr la période de fermeture."),
      I_("La nouvelle date d'échéance du contrat définie par l'utilisateur devrait être postérieure à la date d'échéance du contrat existante."),
      I_("La revalorisation ne peut être traitée qu'une ou plusieurs années avant la date d'échéance du contrat."),
      I_("La date d'arrêt du PAC est touchée par le changement de la date de naissance."),
      I_("La date de naissance touche la date d'échéance du contrat après la revalorisation de la date."),
      I_("Le paiement du rachat et de la distribution doit être réglé."),
      I_("Impossible de trouver l'information sur le fuseau horaire."),
      I_("Le montant de retenue est supérieur ou égal aux unités disponibles."),
      I_("Les deux parties du transfert/de l'échange doivent être réglées ou non réglées en ordre pour que la transaction soit annulée."),
      I_("Indicateur de type de règlement invalide."),
      I_("Numéro de transaction introuvable."),
      I_("Numéro de transaction manquant."),
      I_("Le numéro d'ordre électronique est manquant."),
      I_("Code externe manquant"),
      I_("Type de code externe manquant"),
      I_("Le code de fonds est manquant."),
      I_("Le code de classe est manquant."),
      I_("Le type de transaction est manquant."),
      I_("La date de transaction est manquante."),
      I_("La date de règlement est manquante."),
      I_("La transaction est introuvable pour le règlement."),
      I_("Le numéro de compte est introuvable."),
      I_("Le code de fonds est introuvable."),
      I_("Le code de classe est introuvable."),
      I_("L'indicateur brut/net est manquant."),
      I_("Le signal d'arrêt du règlement de l'achat est activé."),
      I_("Le montant de rachat est supérieur au solde du compte."),
      I_("La table de transfert de l'enregistrement de la transaction iFAST n'est pas disponible."),
      I_("Émission iFAST interne — aucun lot de règlement actif n'a été trouvé."),
      I_("Transaction réglée précédemment."),
      I_("Le numéro d'ordre électronique est introuvable."),
      I_("Code externe introuvable"),
      I_("Type de code externe introuvable"),
      I_("Type de transaction introuvable."),
      I_("La date de transaction est introuvable."),
      I_("La date de règlement est introuvable."),
      I_("Indicateur brut/net invalide. Ce doit être G ou N."),
      I_("Le numéro de compte est manquant."),
      I_("Le nombre de champs de la ligne d'enregistrement est inférieur au nombre escompté."),
      I_("Le numéro de courtier est manquant."),
      I_("La transaction de transfert sortant/d'échange sortant doit être réglée."),
      I_("La transaction est introuvable pour le règlement."),
      I_("La date de cotisation n'est pas parmi les dates autorisées pour ce type d'imposition."),
      I_("L'échec d'annulation renvoie au rapport REVRSLOG.D."),
      I_("Renversement ou ajustement placé dans un autre compte, un autre fonds ou une autre classe."),
      I_("Transaction originale annulée ou introuvable."),
      I_("Mirroir : l'échec d'annulation renvoie au rapport REVRSLOG.D."),
      I_("Le partage de commission ne correspond pas aux frais."),
      I_("Aucun agent payeur trouvé"),
      I_("Juridiction fiscale introuvable pour l'agent payeur"),
      I_("Juridiction fiscale introuvable pour le titulaire"),
      I_("Aucun titulaire actif trouvé"),
      I_("Sélection invalide. Le code de dépôt est applicable aux comptes Frère/sœur seulement."),
      I_("Sélection invalide. Le bénéficiaire n'est lié à aucun responsable principal."),
      I_("Responsable principal existant, veuillez exclure le responsable principal pour les comptes Frère/sœur seulement."),
      I_("Correstions d'erreur non autorisées pour les transactions réglées des comptes REEE."),
      I_("Correstions d'erreur non autorisées pour les transactions soumises au RHDCC pour les comptes REEE."),
      I_("DP 20, 73, 74, 75, 76 ou RD 75, 76, 83 non autorisés pour un transfert."),
      I_("Le compte n'est pas Frère/sœur seulement. Le montant de subvention n'est pas applicable."),
      I_("Le bénéficiaire n'est lié à aucun responsable principal. Le montant de subvention n'est pas applicable."),
      I_("Le bénéficiaire n'est pas admissible pour un BEC puisque sa date de naissance est postérieure au 01/01/2004."),
      I_("Le montant de BEC ne peut être transféré puisque les NAS du/au bénéficiaire sont différents."),
      I_("Code de rachat invalide parce que le bénéficiaire est non résident."),
      I_("Le fonds a des frais d'achat si la commission est supérieure à zéro."),
      I_("Le montant de FAR est supérieur au montant alloué au revenu dans le PAE."),
      I_("Le code de rachat 77 n'est applicable que pour les bénéficiaires non résidents."),
      I_("La date de naissance du bénéficiaire est manquante."),
      I_("Le genre du bénéficiaire est manquant."),
      I_("Le bénéficiaire est âgé de plus de 21 ans et la transaction ne peut être traitée."),
      I_("La date d'échéance devrait différer de 25 ans de la date de prise d'effet."),
      I_("Les statuts En suspens et Annulée ne sont pas applicables."),
      I_("L'enregistrement du jour-bus n'est pas disponible."),
      I_("L'enregistrement de l'original du fonds n'est pas disponible."),
      I_("Aucun enregistrement de type de groupe de fonds avec le type de groupe d'évaluation n'est disponible."),
      I_("L'enregistrement du fonds n'est pas disponible dans la liste du groupe de fonds."),
      I_("Le type du groupe de fonds et le groupe du fonds ne sont pas disponibles dans le tableau du fonds."),
      I_("Erreur dans l'exécution du FRR 51."),
      I_("Erreur dans l'exécution du FRR 52."),
      I_("Réinitialiser le contrôle de l'information sur l'exécution du FRR avant le redémarrage."),
      I_("Compte : inférieur à l'achat minimal initial"),
      I_("Compte : inférieur à l'achat minimal autorisé"),
      I_("Compte : achat non autorisé pour ce fonds"),
      I_("Compte : rachat non autorisé pour ce fonds"),
      I_("Compte : VERS : transfert non autorisé pour ce fonds"),
      I_("Compte : DE : transfert non autorisé pour ce fonds"),
      I_("Compte : inférieur au solde minimal du fonds/de la classe"),
      I_("Courtier : inférieur à l'achat minimal initial"),
      I_("Courtier : inférieur à l'achat minimal autorisé"),
      I_("Courtier : achat non autorisé pour ce fonds"),
      I_("Courtier : rachat non autorisé pour ce fonds"),
      I_("Courtier : VERS : transfert non autorisé pour ce fonds"),
      I_("Courtier : DE : transfert non autorisé pour ce fonds"),
      I_("Courtier : inférieur au solde minimal du fonds/de la classe"),
      I_("Unité de service : inférieur à l'achat minimal initial"),
      I_("Unité de service : inférieur à l'achat minimal autorisé"),
      I_("Unité de service : achat non autorisé pour ce fonds"),
      I_("Unité de service : rachat non autorisé pour ce fonds"),
      I_("Unité de service : VERS : transfert non autorisé pour ce fonds"),
      I_("Unité de service : DE : transfert non autorisé pour ce fonds"),
      I_("Unité de service : inférieur au solde minimal du fonds/de la classe"),
      I_("Représentant des ventes : inférieur à l'achat minimal initial"),
      I_("Représentant des ventes : inférieur à l'achat minimal autorisé"),
      I_("Représentant des ventes : achat non autorisé pour ce fonds"),
      I_("Représentant des ventes : rachat non autorisé pour ce fonds"),
      I_("Représentant des ventes : VERS : transfert non autorisé pour ce fonds"),
      I_("Représentant des ventes : DE : transfert non autorisé pour ce fonds"),
      I_("Représentant des ventes : inférieur au solde minimal du fonds/de la classe"),
      I_("Inférieur au solde minimal du fonds/de la classe"),
      I_("Code de dépôt non autorisé pour le code de rachat."),
      I_("Transfert autorisé d'immobilisé à enregistré non immobilisé."),
      I_("Transfert autorisé d'immobilisé à non enregistré."),
      I_("Rachat non autorisé pour le code de raison de la faillite."),
      I_("Le type d'ordre devrait être électronique pour le transfert du participant."),
      I_("Le type d'ordre devrait être direct pour le transfert du non-participant."),
      I_("Courtier inactif/non admissible pour le SGP."),
      I_("Le signal d'arrêt de l'achat/du rachat est actif pour le compte SGP."),
      I_("L'investissement SGP minimal n'est pas atteint."),
      I_("Fonds de devises diverses dans le modèle SGP."),
      I_("%FUND%/%CLASS% is soft capped at the fund class level as of %ASOF%."),
      I_("Allocated trade: soft capped at the fund class level"),
      I_("Admissibilité au SGP"),
      I_("Le groupe de frais du fonds n'est pas le même pour le réglage de la répartition SGP."),
      I_("Réglage SGP non autorisé pour un compte institutionnel."),
      I_("Code de rachat non autorisé pour les transferts"),
      I_("De ce compte, vous ne pouvez transférer que vers un compte REER ou FERR."),
      I_("La catégorie de compte privée n'est pas applicable au type de compte et à la désignation du compte."),
      I_("Le montant global est inférieur au montant initial minimal du groupe de frais du fonds."),
      I_("Compte : le fonds/la classe est faiblement plafonné(e)."),
      I_("L'information sur le profil d'investisseur est manquante."),
      I_("Le modèle de frais de gestion est manquant."),
      I_("Le réglage d'un nouveau compte REEE n'est pas disponible sur iFAST/Desktop."),
      I_("La saisie de la date de naissance du conjoint n'est pas autorisée."),
      I_("La date de naissance du conjoint doit être antérieure ou identique à l'âge du titulaire du compte."),
      I_("Période de paiement invalide"),
      I_("Il y a des unités de certificat actives au compte."),
      I_("La valeur du compte est verrouillée."),
      I_("Une nouvelle entrée d'argent au tableau du type d'imposition n'est pas autorisée après"),
      I_("Le rachat est contraire aux règles de réglage de la protection de gardien de la garantie du client."),
      I_("Le transfert est contraire aux règles de réglage de la protection de gardien de la garantie du client."),
      I_("Aucun contrat admissible dans ce compte."),
      I_("Les comptes ont des statuts Frère/sœur seulement différents — assurez-vous que le transfert respecte les réglementations."),
      I_("Un PRP actif existe, il est réglé avec un fonds d'indemnité de résiliation minimale garantie."),
      I_("Un PRP dynamique actif existe, il est réglé avec un fonds d'indemnité de résiliation minimale garantie."),
      I_("Norme réglementaire invalide/manquante"),
      I_("Le type de paiement pour les instructions de paiement demandées devrait être TEF pour les paiements de rachat."),
      I_("Numéro de compte inexistant."),
      I_("Le numéro de compte devrait être différent de celui de la transaction d'achat."),
      I_("Un PRP dynamique actif existe, il est réglé avec un fonds sans indemnité de résiliation minimale garantie."),
      I_("Le type de copie de la règle n'est pas autorisé."),
      I_("La remise sur les frais de gestion et et les signaux de frais de gestion ne peuvent être actifs en même temps."),
      I_("Le bénéficiaire est âgé de plus de 31 ans et la transaction ne peut être traitée."),
      I_("La date d'échéance devrait différer de 35 ans de la date de prise d'effet."),
      I_("Code de fonds invalide pour la catégorie de fonds sur fonds."),
      I_("La date d'échéance définie par l'utilisateur devrait différer de plusieurs années de la date de prise d'effet."),
      I_("Le rachat excède la subvention additionnée au revenus."),
      I_("Le montant PAE excède la valeur marchande."),
      I_("La date d'entrée en vigueur du SGP est antidatée"),
      I_("La province de résidence et la juridiction fiscale sont requises."),
      I_("Le montant demandé a excédé le minimum."),
      I_("Cette transaction pourrait excéder le minimum restant et être refusée dans le cycle."),
      I_("Les données sociodémographiques sont requises."),
      I_("Les données de la liste du document de profil d'investisseur sont requises."),
      I_("Le code de frais n'est pas défini, impossible de stocker les frais déduits."),
      I_("Le réglage bancaire de dépôt direct n'est disponible que pour l'information bancaire par défaut du compte non enregistré retenu par la client."),
      I_("L'information bancaire de dépôt direct n'est applicable qu'aux banques canadiennes."),
      I_("L'information bancaire de dépôt direct n'est applicable qu'aux fonds en dollars canadiens."),
      I_("Les versions du contrat de transfert sortant et de transfert entrant ne correspondent pas."),
      I_("L'entité de vie commune est requise avant le traitement d'une option commune."),
      I_("L'âge du crédirentier/de l'entité de vie commune excède l'âge maximal autorisé."),
      I_("Le solde du compte est supérieur au montant du seuil du FIRE."),
      I_("Les options MRV des transferts sortant et entrant ne correspondent pas."),
      I_("L'information bancaire de dépôt direct ou l'autorisation de l'investisseur est manquante."),
      I_("Les réglages de l'autorisation de l'investisseur sont manquants dans l'information bancaire sur le dépôt direct."),
      I_("L'information bancaire sur le dépôt direct est manquante dans certains réglages de l'autorisation de l'investisseur."),
      I_("Le lieu de règlement est manquant."),
      I_("Les frais ne sont pas admissibles pour l'opération nette."),
      I_("Taux d'imposition fédéral inférieur à la valeur par défaut"),
      I_("Taux d'imposition provincial inférieur à la valeur par défaut"),
      I_("L'information bancaire n'est pas vérifiée (pour la transaction)"),
      I_("L'information bancaire n'est pas vérifiée (pour le règlement)"),
      I_("Le fonds a des unités de certificat."),
      I_("L'adresse du détenteur n'est pas vérifiée (pour la transaction)"),
      I_("L'adresse du détenteur n'est pas vérifiée (pour le règlement)"),
      I_("L'information bancaire contient une association de transactions en suspens ou non réglées."),
      I_("Le taux de change en date de transaction est manquant."),
      I_("Erreur de calcul de l'unité traitée. Veuillez communiquer avec le soutien informatique."),
      I_("DISQUE : survente TUP rencontrée lors d'un rachat"),
      I_("DISQUE : survente TUP rencontrée lors d'un transfert sortant"),
      I_("DISQUE : survente TUP rencontrée lors d'un échange sortant"),
      I_("WEB : survente TUP rencontrée lors d'un rachat"),
      I_("WEB : survente TUP rencontrée lors d'un transfert sortant"),
      I_("WEB : survente TUP rencontrée lors d'un échange sortant"),
      I_("La fréquence du relevé ne peut être moins que Trimestrielle."),
      I_("La fréquence du relevé ne peut être moins que Mensuelle."),
      I_("Le bénéficiaire ne réside pas au Québec."),
      I_("Le bénéficiaire a plus de 18 ans."),
      I_("La cotisation annuelle nette pour l'année est de zéro."),
      I_("La limite de l'IQEE de base est excédée pour l'année."),
      I_("La limite d'augmentation de l'IQEE est excédée pour l'année."),
      I_("Le montant de rachat pour l'ajustement de l'IQEE de base a excédé le motant total reçu."),
      I_("Le montant de rachat pour l'ajustement de l'augmentation de l'IQEE a excédé le motant total reçu."),
      I_("Le montant de cotisation subventionnée est supérieur au montant non subventionné disponible pour l'année d'imposition."),
      I_("Le bénéficiaire n'est pas admissible à une augmentation d'IQEE puisque le compte n'est pas Frère/sœur seulement."),
      I_("Le montant de cotisation subventionnée qui sera renversé est supérieur au montant subventionné disponible pour l'année d'imposition."),
      I_("La demande de subvention IQEE n'est pas disponible pour le bénéficiaire en cette année d'imposition."),
      I_("Le montant IQEE ne peut être supérieur de plus de 10 % au montant IQEE non subventionné existant pour le bénéficiaire et l'année d'imposition."),
      I_("Règlement non autorisé pendant l'exécution du cycle final."),
      I_("Plafond viager de subvention IQEE excédé."),
      I_("Les subventions IQEE sont insuffisantes."),
      I_("Remboursement d'impôt supérieur à la dette fiscale."),
      I_("Aucun plafond viager de cotisation n'a été réglé."),
      I_("Aucun plafond annuel de cotisation n'a été réglé."),
      I_("Erreur lors de la recherche des paramètres de frais du fonds/de la classe."),
      I_("Aucun(e) courtier/unité de service/représentant trouvé(e) pour le compte."),
      I_("Erreur lors de la recherche des paramètres de frais du compte ou du code de famille."),
      I_("Avertissement : le courtier n'est pas admissible à la commission de suivi."),
      I_("Avertissement : le courtier/l'unité de service/le représentant n'est pas admissible à la commission de suivi."),
      I_("Avertissement : la fréquence de paiement de commission de suivi du courtier n'est pas la même que la fréquence d'exécution."),
      I_("Avertissement : le courtier/l'unité de service/le représentant a été arrêté(e)."),
      I_("Le solde du compte/du fonds/de la classe est de zéro."),
      I_("Avertissement : le type de frais des paramètres de frais doit être un pourcentage."),
      I_("L'historique du compte pour le compte est manquante."),
      I_("Erreur lors de la recherche des paramètres de frais du courtier/de l'unité de service/du représentant."),
      I_("Les unités du solde du compte ne correspondent pas à cet investissement."),
      I_("L'opération REEE/REEE familial n'est pas supportée."),
      I_("Le contrôle d'édition spécifique du REEE n'est pas en cours."),
      I_("La commission de suivi admissible est de zéro puisque le regroupement d'actif du courtier/représentant est inférieur à 100 000 $."),
      I_("Le suivi d'inventaire n'est pas activé pour le fonds/la classe qui bénéficie d'une clause de droits acquis."),
      I_("Le montant SCEE doit être remboursé en raison de ce rachat."),
      I_("Cette transaction rendra la cotisation à ce jour négative."),
      I_("Le type de solde et le partage admissibles ne sont pas supportés actuellement."),
      I_("NEQ déjà existant."),
      I_("NEQ manquant."),
      I_("DP 78, 79, 80, 81 ou RD Q1, Q2, Q3 ne sont pas autorisés."),
      I_("L'option du taux d'âge MRV n'est autorisée que lorsque les taux MRV entres les comptes sont identiques."),
      I_("L'achat de l'option de transfert n'a pu être traité."),
      I_("Le solde du compte est inférieur au montant de la transaction."),
      I_("Solde notionnel inférieur au montant de la transaction entré."),
      I_("Un amendement pourrait être requis."),
      I_("Un ajustement pourrait être requis."),
      I_("Transaction existante pour cette année d'imposition"),
      I_("Vous pourriez devoir ajouter une nouvelle demande de subvention pour l'année d'imposition applicable."),
      I_("Vous pourriez devoir arrêter la demande de subvention pour l'année d'imposition applicable."),
      I_("Vous pourriez devoir changer le statut pour Demande ou créer une nouvelle demande pour l'année d'imposition applicable."),
      I_("La date d'entrée en vigueur du NAS est requise."),
      I_("Le gardien de la garantie n'est pas le même pour les comptes de transfert sortant/entrant."),
      I_("Le traitement du transfert a échoué en raison d'une erreur de temps d'exécution."),
      I_("Un retrait PRA existe, le paiement à un titulaire non résident n'est pas autorisé."),
      I_("L'adresse de l'entité est manquante."),
      I_("Le système va lancer l'amendement et recalculer le solde notionnel IQEE pour l'année d'imposition."),
      I_("La date d'entrée en vigueur du NAS du bénéficiaire REEE est requise."),
      I_("La date d'entrée en vigueur du NAS du bénéficiaire REEE ne peut être antérieure à sa date de naissance."),
      I_("La date d'entrée en vigueur du NAS du bénéficiaire REEE ne peut être ultérieure."),
      I_("La fréquence de paiement de commission de suivi du courtier a changé après le premier mois de la fin de trimestre."),
      I_("L'événement de l'inventaire n'a pas réussi à trouver le groupe d'âge approprié pour dater les unités."),
      I_("La fréquence de paiement de commission de suivi du courtier a changé."),
      I_("Le montant de rachat a excédé le montant total IQEE reçu."),
      I_("La transaction ne sera pas évaluée si le statut de paiement est Paiement non réglé."),
      I_("Les intérêts ont été payés après la transaction."),
      I_("Le détail des frais administratifs ou du calcul des frais administratifs est manquant pour ce code de frais administratifs."),
      I_("Les commissions partagées ne sont pas autorisées pour ce modèle administratif."),
      I_("Échange de courtier trouvé pour le fonds/la classe lorsque le type moyen est Fin de mois."),
      I_("Aucun enregistrement des détails de l'agent n'a été trouvé."),
      I_("L'environnement ne supporte pas les frais de type fixe."),
      I_("Le signal de non réception en date du jour/de non réception est actif."),
      I_("La valeur du compte est verrouillée par un autre processus."),
      I_("Écarts non autorisés en dates de remise sur les frais de gestion"),
      I_("La date de décès du titulaire du compte est manquante."),
      I_("L'heure limite de compensation est postérieure à l'heure limite du marché."),
      I_("L'adresse du bénéficiaire est manquante."),
      I_("La limite SCEE de <%1> a été excédée."),
      I_("Le signal de non réception est actif pour le compte/le fonds/la classe de la transaction de sortie d'argent."),
      I_("La transaction de sortie d'argent comprend des unités souscrites en date du jour."),
      I_("L'enregistrement de calcul du taux d'intérêt n'existe pas."),
      I_("Méthode de calcul du taux d'intérêt invalide"),
      I_("Le terme du calcul du taux d'intérêt est invalide."),
      I_("Le type te taux du calcul du taux d'intérêt est invalide."),
      I_("Aucun enregistrement des attributs de l'investissement des intérêts du fonds n'est disponible."),
      I_("Aucun enregistrement de configuration du taux d'intérêt n'est disponible."),
      I_("Aucun enregistrement de taux d'intérêt n'est disponible."),
      I_("Aucun enregistrement d'échelle de taux d'intérêt n'est disponible."),
      I_("Aucun enregistrement de détail de réduction de commission n'est disponible."),
      I_("Le module de valeur du compte a renvoyé une erreur."),
      I_("L'intérêt garanti de l'investissement n'est pas à jour."),
      I_("Les unités du détenteur ne correspondent pas aux unités de la transaction."),
      I_("Erreur lors de la mise à jour des soldes du détenteur"),
      I_("Le MRC ne peut être supprimé. Le code <MRC> est lié au courtier <Broker Code>."),
      I_("Le MRC ne peut être supprimé. Le code <MRC> est lié au courtier <Broker Code> et à l'unité de service <Branch Code>."),
      I_("Le MRC ne peut être supprimé. Le code <MRC> est lié au courtier <Broker Code>, à l'unité de service <Branch Code> et au représentant <Rep Code>."),
      I_("Seul le type d'enregistrement B [Broker] (courtier) est autorisé."),
      I_("Le champ du code FSA doit être rempli."),
      I_("Le code de territoire est requis pour le représentant des ventes."),
      I_("Date d'évaluation manquante"),
      I_("Copier la saisie de taux de rendement minimal."),
      I_("L'HWM défini par l'utilisateur est manquant pour le fonds <Fund Code> et la classe <Class Code>."),
      I_("La cristallisation PF est échue; valeur de l'actif net finale vérifiée n'est pas disponible pour le fonds <fund code> et la classe <class code>."),
      I_("Les transactions de cristallisation PF seront traitées pour le fonds <fund code> et la classe <class code>."),
      I_("Les fonds/classes sources et cibles doivent faire partie des frais de performance si la cristallisation PF est réglée à Non."),
      I_("La cristallisation PF n'est pas encore terminée pour le fonds <fund code> et la classe <class code>."),
      I_("Le fonds <fund code> (et la classe <class code>) n'est pas un fonds comportant des frais de performance."),
      I_("Impossible de terminer la transaction; l'événement subséquent pour le fonds/la classe doit être annulé."),
      I_("La transaction d'égalisation ne peut être annulée individuellement."),
      I_("Aucune date de transaction valide n'existe pour le type de transaction du fonds/de la classe."),
      I_("Les classes touchées par la transaction n'appartiennent pas au même fonds."),
      I_("Le taux fixe n'a pas été saisi pour la transaction."),
      I_("Le compte n'est pas admissible pour les transactions dans un fonds/une classe inderdit(e) ERISA."),
      I_("La transaction dont le code de dépôt est 100 ne peut être placée."),
      I_("La transaction dont le code de rachat est 100 ne peut être placée."),
      I_("Le statut du paiement est requis."),
      I_("La transaction ne sera pas évaluée si le statut de paiement est Paiement non réglé."),
      I_("Le champ de la base des jours doit être rempli."),
      I_("Le champ du type de données saisies ne peut être laissé vide."),
      I_("La valeur d'index a été saisie entre des dates d'entrée en vigueur déjà existantes. Le taux de rendement minimal sera calculé du <Start Date1> au <End Date1> et du <Start Date 2> au <End Date 2>."),
      I_("Le taux de rendement minimal sera calculé entre le <Start Date> et le <End Date>."),
      I_("Le taux de rendement minimal a été saisi entre des dates d'entrée en vigueur déjà existantes."),
      I_("Le taux de rendement minimal ne peut être de zéro."),
      I_("La valeur ne peut être zéro."),
      I_("La date d'échéance du contrat définie par l'utilisateur doit être située entre les restrictions d'âges minimal et maximal."),
      I_("La date d'échéance du contrat définie par l'utilisateur doit être au moins supérieure au terme minimal."),
      I_("La date d'échéance du contrat définie par l'utilisateur ne doit pas être supérieure à la date d'échéance du contrat légal."),
      I_("Le nombre d'unités en inventaire sélectionnées est supérieur au nombre d'unités en main."),
      I_("La répartition d'engagement est manquante."),
      I_("La répartition forfaitaire est manquante."),
      I_("L'engagement est inactif pour ce compte."),
      I_("Vérifiez l'âge du crédirentier (devrait être <%1>)."),
      I_("La propriété est requise."),
      I_("L'investissement à intérêt garanti a un crédit d'intérêt aprèes la date de la transaction."),
      I_("Juridiction de non-résident; l'option de paiement doit être Supression du chèque."),
      I_("Les transactions d'échange FIG/FIQ ne sont pas autorisées pour les non-résidents."),
      I_("La date d'échéance du contrat définie par l'utilisateur ne doit pas être supérieure au terme minimal."),
      I_("La devise de règlement au niveau du compte est requise."),
      I_("Investissement : impossible d'antidater avant la revalorisation de l'investissement."),
      I_("Confirmation KIID du compte non disponible dans iFast."),
      I_("User defined CMD is less than minimum term"),
      I_("Le compte doit être Frère/soeur seulement pour SEEAS."),
      I_("Un seul fonds est permis sur ce type de contrat."),
      I_("L'âge du rentier est inférieur au minimum exigé pour ce type de contrat."),
      I_("Le rachat du revenu accumulé n'est pas autorisé en raison de l'existence d'un solde de subvention."),
      I_("Erreur au cours de MAJ du rev. de base."),
      I_("Votre action créera un solde théorique négatif, veuillez vérifier les transactions suivantes dans ce compte."),
      I_("La date de transaction doit être ultérieure à la date de début du programme."),
      I_("Code de répression de la Raison ne peut être vide."),
      I_("L'affectation du transfert des fonds du REEE n'autorise pas le transfert du solde de subvention."),
      I_("Compte de frère et sœur seulement pour la SEEEFCB."),
      I_("Le montant dépasse le solde de la SEEEFCB."),
      I_("Le transfert des montants de SEEEFCB ne peut être traité avant le 1er août 2015."),
      I_("La transaction est en attente d'une réponse de RHDCC, les allocations ne peuvent être modifiées."),
      I_("Le territoire fiscal doit être « C.-B. » à la date de la transaction."),
      I_("%FUND%/%CLASS% is soft capped at the fund level as of %ASOF%."),
      I_("Allocated trade: soft capped at the fund level"),
      I_("%FUND%/%CLASS% is soft capped at the fund group level as of %ASOF%."),
      I_("Allocated trade: soft capped at the fund group level"),
      I_("Informations d'EPS est requise pour ce rachat."),
      I_("Entrez les montants avec signe négatif (-) sur le rachat et versé colonne."),
      I_("Broker is not eligible for fund class."),
      I_("Sale rep is not eligible for fund class."),
      I_("ACHAT : le compte est lien à un modèle AMS différent de celui du fonds parent."),
      I_("TRANSFERT : d'un compte ou vers un compte doit avoir le même modèle AMS."),
      I_("TRANSFERT : d'un compte ou vers un compte doit être le même pour un transfert AMS."),
      I_("ÉCHANGE : partiel non autorisé entre fonds parents AMS."),
      I_("ÉCHANGE : le compte est lien à un modèle AMS différent de celui du fonds parent."),
      I_("Aucune donnée d'information sur le fonds n'est disponible."),
      I_("AMS-cadre non trouvé."),
      I_("La catégorie du fonds enfant n'appartient pas à la répartition AMS du compte actuel."),
      I_("The QESI Pre Feb 2007 is not equal to LTD - QESI AC - QESI UC - QESI YTD."),
      I_("Les répartitions des Fonds ne sont pas totalement soutenues pour ce type de transaction"),
      I_("Seuls les ordres directs sont acceptés pour le FIJ."),
      I_("Le taux d'intérêt de la prime ne peut être fixé que pour le FIJ."),
      I_("Beneficiary must be a Canadian resident."),
      I_("Beneficiary must be no more than 59 years of age."),
      I_("Trade not allowed for a RDSP account SDSP elect."),
      I_("Trade not allowed for a RDSP account DTC elect."),
      I_("RDSP Registration Status doesn't allow contributions."),
      I_("Trade date is after Beneficiary's Date of Death."),
      I_("RDSP Maximum Contributions LTA exceeded."),
      I_("Invalid deposit and redemption code combination."),
      I_("System Error : Unable to calculate Notional Information."),
      I_("External RDSP Account Contract Number is mandatory."),
      I_("External RDSP Specimen Plan Number is mandatory."),
      I_("Cannot backdate the trade before the Money-out transaction."),
      I_("Invalid Repayment Reason."),
      I_("FMV is less than AHA amount, payment may be rejected."),
      I_("Repayment reason does not match for DAP."),
      I_("Repayment reason does not match for LDAP."),
      I_("Repayment reason does not match for All Funds Full Withdrawal."),
      I_("Amount not in Min/Max Range."),
      I_("Cannot cancel the trade before the Money-out transaction."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_041_005_000_000;
   const BFSubstitutionSet SubSet_002_041_005_000_000(
    &aKeys_002_041_005_000_000[0], &aValues_002_041_005_000_000[0] );
   // Substitution set RejCodeSet.  Language: enIE
   static const I_CHAR* aKeys_002_041_006_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("106"),
      I_("107"),
      I_("11"),
      I_("117"),
      I_("118"),
      I_("119"),
      I_("12"),
      I_("120"),
      I_("121"),
      I_("122"),
      I_("123"),
      I_("125"),
      I_("127"),
      I_("128"),
      I_("129"),
      I_("13"),
      I_("134"),
      I_("135"),
      I_("136"),
      I_("137"),
      I_("138"),
      I_("139"),
      I_("14"),
      I_("140"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("181"),
      I_("182"),
      I_("183"),
      I_("184"),
      I_("186"),
      I_("187"),
      I_("188"),
      I_("189"),
      I_("19"),
      I_("190"),
      I_("191"),
      I_("192"),
      I_("193"),
      I_("194"),
      I_("195"),
      I_("196"),
      I_("197"),
      I_("198"),
      I_("199"),
      I_("20"),
      I_("200"),
      I_("202"),
      I_("203"),
      I_("204"),
      I_("205"),
      I_("206"),
      I_("207"),
      I_("208"),
      I_("209"),
      I_("21"),
      I_("210"),
      I_("211"),
      I_("212"),
      I_("216"),
      I_("217"),
      I_("218"),
      I_("219"),
      I_("22"),
      I_("221"),
      I_("222"),
      I_("223"),
      I_("224"),
      I_("229"),
      I_("23"),
      I_("230"),
      I_("231"),
      I_("232"),
      I_("236"),
      I_("237"),
      I_("238"),
      I_("239"),
      I_("24"),
      I_("240"),
      I_("241"),
      I_("242"),
      I_("243"),
      I_("244"),
      I_("245"),
      I_("246"),
      I_("247"),
      I_("248"),
      I_("249"),
      I_("25"),
      I_("250"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("300"),
      I_("305"),
      I_("31"),
      I_("314"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("89"),
      I_("90"),
      I_("91"),
      I_("92"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("96"),
      I_("97"),
      I_("98"),
      I_("99"),
      I_("100"),
      I_("116"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("260"),
      I_("261"),
      I_("262"),
      I_("263"),
      I_("266"),
      I_("316"),
      I_("317"),
      I_("319"),
      I_("320"),
      I_("321"),
      I_("322"),
      I_("324"),
      I_("325"),
      I_("326"),
      I_("327"),
      I_("328"),
      I_("329"),
      I_("330"),
      I_("331"),
      I_("332"),
      I_("333"),
      I_("335"),
      I_("102"),
      I_("101"),
      I_("113"),
      I_("141"),
      I_("142"),
      I_("143"),
      I_("144"),
      I_("145"),
      I_("146"),
      I_("147"),
      I_("148"),
      I_("235"),
      I_("338"),
      I_("339"),
      I_("340"),
      I_("341"),
      I_("342"),
      I_("343"),
      I_("344"),
      I_("345"),
      I_("346"),
      I_("351"),
      I_("352"),
      I_("353"),
      I_("354"),
      I_("355"),
      I_("356"),
      I_("357"),
      I_("358"),
      I_("359"),
      I_("360"),
      I_("361"),
      I_("362"),
      I_("363"),
      I_("364"),
      I_("365"),
      I_("366"),
      I_("367"),
      I_("370"),
      I_("374"),
      I_("375"),
      I_("376"),
      I_("377"),
      I_("378"),
      I_("379"),
      I_("385"),
      I_("386"),
      I_("388"),
      I_("389"),
      I_("390"),
      I_("391"),
      I_("392"),
      I_("393"),
      I_("394"),
      I_("395"),
      I_("396"),
      I_("397"),
      I_("398"),
      I_("399"),
      I_("400"),
      I_("401"),
      I_("403"),
      I_("404"),
      I_("405"),
      I_("406"),
      I_("407"),
      I_("411"),
      I_("414"),
      I_("415"),
      I_("417"),
      I_("418"),
      I_("419"),
      I_("420"),
      I_("421"),
      I_("422"),
      I_("423"),
      I_("424"),
      I_("425"),
      I_("426"),
      I_("427"),
      I_("428"),
      I_("430"),
      I_("431"),
      I_("433"),
      I_("434"),
      I_("435"),
      I_("436"),
      I_("437"),
      I_("438"),
      I_("439"),
      I_("440"),
      I_("441"),
      I_("442"),
      I_("443"),
      I_("444"),
      I_("445"),
      I_("446"),
      I_("447"),
      I_("448"),
      I_("449"),
      I_("450"),
      I_("451"),
      I_("452"),
      I_("453"),
      I_("454"),
      I_("455"),
      I_("457"),
      I_("458"),
      I_("459"),
      I_("460"),
      I_("461"),
      I_("462"),
      I_("463"),
      I_("464"),
      I_("465"),
      I_("467"),
      I_("468"),
      I_("469"),
      I_("470"),
      I_("471"),
      I_("472"),
      I_("473"),
      I_("474"),
      I_("475"),
      I_("480"),
      I_("481"),
      I_("483"),
      I_("485"),
      I_("486"),
      I_("487"),
      I_("488"),
      I_("489"),
      I_("490"),
      I_("491"),
      I_("492"),
      I_("493"),
      I_("494"),
      I_("495"),
      I_("496"),
      I_("497"),
      I_("498"),
      I_("500"),
      I_("501"),
      I_("510"),
      I_("520"),
      I_("521"),
      I_("522"),
      I_("523"),
      I_("524"),
      I_("525"),
      I_("526"),
      I_("527"),
      I_("528"),
      I_("529"),
      I_("530"),
      I_("531"),
      I_("532"),
      I_("533"),
      I_("534"),
      I_("535"),
      I_("536"),
      I_("537"),
      I_("538"),
      I_("539"),
      I_("540"),
      I_("541"),
      I_("542"),
      I_("543"),
      I_("544"),
      I_("545"),
      I_("546"),
      I_("548"),
      I_("549"),
      I_("550"),
      I_("551"),
      I_("552"),
      I_("563"),
      I_("565"),
      I_("600"),
      I_("601"),
      I_("602"),
      I_("603"),
      I_("604"),
      I_("706"),
      I_("707"),
      I_("708"),
      I_("709"),
      I_("710"),
      I_("711"),
      I_("712"),
      I_("713"),
      I_("714"),
      I_("715"),
      I_("716"),
      I_("717"),
      I_("718"),
      I_("719"),
      I_("720"),
      I_("721"),
      I_("722"),
      I_("723"),
      I_("724"),
      I_("725"),
      I_("726"),
      I_("727"),
      I_("798"),
      I_("904"),
      I_("905"),
      I_("906"),
      I_("907"),
      I_("908"),
      I_("910"),
      I_("911"),
      I_("912"),
      I_("914"),
      I_("915"),
      I_("916"),
      I_("917"),
      I_("918"),
      I_("919"),
      I_("920"),
      I_("921"),
      I_("922"),
      I_("923"),
      I_("924"),
      I_("925"),
      I_("926"),
      I_("927"),
      I_("928"),
      I_("929"),
      I_("930"),
      I_("931"),
      I_("932"),
      I_("933"),
      I_("934"),
      I_("935"),
      I_("936"),
      I_("937"),
      I_("938"),
      I_("939"),
      I_("940"),
      I_("941"),
      I_("942"),
      I_("943"),
      I_("944"),
      I_("945"),
      I_("946"),
      I_("947"),
      I_("948"),
      I_("949"),
      I_("950"),
      I_("951"),
      I_("952"),
      I_("953"),
      I_("954"),
      I_("956"),
      I_("957"),
      I_("959"),
      I_("960"),
      I_("961"),
      I_("962"),
      I_("963"),
      I_("967"),
      I_("968"),
      I_("969"),
      I_("970"),
      I_("971"),
      I_("974"),
      I_("975"),
      I_("978"),
      I_("983"),
      I_("984"),
      I_("985"),
      I_("986"),
      I_("987"),
      I_("988"),
      I_("989"),
      I_("990"),
      I_("993"),
      I_("994"),
      I_("995"),
      I_("996"),
      I_("997"),
      I_("998"),
      I_("999"),
      I_("1000"),
      I_("1001"),
      I_("1002"),
      I_("1003"),
      I_("1004"),
      I_("1005"),
      I_("1006"),
      I_("1007"),
      I_("1008"),
      I_("1009"),
      I_("1010"),
      I_("1011"),
      I_("1012"),
      I_("1013"),
      I_("1014"),
      I_("1015"),
      I_("1016"),
      I_("1017"),
      I_("1018"),
      I_("1019"),
      I_("1020"),
      I_("1021"),
      I_("1022"),
      I_("1023"),
      I_("1024"),
      I_("1025"),
      I_("1026"),
      I_("1027"),
      I_("1028"),
      I_("1029"),
      I_("1030"),
      I_("1031"),
      I_("1032"),
      I_("1033"),
      I_("1034"),
      I_("1035"),
      I_("1036"),
      I_("1037"),
      I_("1038"),
      I_("1039"),
      I_("1040"),
      I_("1047"),
      I_("1048"),
      I_("1041"),
      I_("1042"),
      I_("1043"),
      I_("1044"),
      I_("1045"),
      I_("1046"),
      I_("1049"),
      I_("1050"),
      I_("1051"),
      I_("1052"),
      I_("1053"),
      I_("1054"),
      I_("1055"),
      I_("1056"),
      I_("1057"),
      I_("1058"),
      I_("1059"),
      I_("1060"),
      I_("1070"),
      I_("1071"),
      I_("1072"),
      I_("1073"),
      I_("1074"),
      I_("1075"),
      I_("1076"),
      I_("1077"),
      I_("1078"),
      I_("1085"),
      I_("1086"),
      I_("1087"),
      I_("1080"),
      I_("1081"),
      I_("1088"),
      I_("1089"),
      I_("1090"),
      I_("1091"),
      I_("1092"),
      I_("1093"),
      I_("1094"),
      I_("1095"),
      I_("1096"),
      I_("1097"),
      I_("1099"),
      I_("1100"),
      I_("1101"),
      I_("1102"),
      I_("1103"),
      I_("1104"),
      I_("1105"),
      I_("1106"),
      0x00
   };

   static const I_CHAR* aValues_002_041_006_000_000[] = {
      I_("No Primary Master Record Exists"),
      I_("No Account Master Record Exists"),
      I_("Fund Fee Detail Not Foiund/Defined"),
      I_("BEL must be Acq and Admin Fee = 0, Prcnt"),
      I_("BackEnd Net Order must not"),
      I_("Current Unit Value Not Found"),
      I_("Account Not Active at Trade Date"),
      I_("Group Purchase Stop Flag Enables"),
      I_("Account Purchase Stop Flag Enables"),
      I_("ROA not available for this account"),
      I_("Holdback Exist. Reject whole transaction"),
      I_("Holdback $ = Avail $ and Settle method 2 is used."),
      I_("Holding"),
      I_("Holding Fund Detail does not exist"),
      I_("Exceed users setup amount"),
      I_("Fee Waived For this Account"),
      I_("WARN: Dollars must be rounded to Cents"),
      I_("Units Rounding Factor exceeds Unitsprecis"),
      I_("Invalid deposit code for tax type"),
      I_("Fee Entered Without An Over-ride"),
      I_("No Account Value Record Exists"),
      I_("Transaction must be Varified"),
      I_("TI: Exchange Rate does not exist"),
      I_("WARN: Fund Max Subsequent Contrib Exceed"),
      I_("Transaction must be Verified"),
      I_("The Exchange Rate does not exist"),
      I_("WARN: Fund Max Initial Deposit Exceeded"),
      I_("Unit value is equal to zero"),
      I_("Net Purchase Entered Without Fee Amount"),
      I_("The remaining minimum amount must be paid first"),
      I_("Remaining account balance is insufficient to cover"),
      I_("Tax Type Rules not available for account tax type"),
      I_("Scheduled Payment Information not available"),
      I_("Redemption Code Rules not setup"),
      I_("Account Master Table not on file"),
      I_("Fee Override, No Fee Defined"),
      I_("The remaining minimum amount redemption was not pr"),
      I_("Invalid Fund is Indicated"),
      I_("Purchase not allowed for Fund and Class"),
      I_("Invalid Fund for registered account"),
      I_("WARN:Less Than Mininum Initial Purchase"),
      I_("WARN:Less Than Min Fund/Class Balance"),
      I_("WARN:Less Than Minimum Account Balance"),
      I_("WARN:Less Than Min Initial Redemption"),
      I_("WARN:Less Than Min Subsequent Redemption"),
      I_("ESOP  Contribution Exceeds yearly limit"),
      I_("Fund is not ESOP Eligible"),
      I_("Processing Redemption from ESOP Investment Plan"),
      I_("Processing Redemption from ESOP Participation Plan"),
      I_("WARN: Less Than Minimum Allowable Purch."),
      I_("ESOP Transfer must close the Account"),
      I_("Purchasing Security for"),
      I_("Whole Share fund purchase not pre-processed"),
      I_("Net Whole Share redemptions are not allowed"),
      I_("Cannot transfer Out of an ESOP Account"),
      I_("Cannot transfer In of an ESOP Account"),
      I_("No S.W. Ps allowed from ESOP Account"),
      I_("No Amount Available in Cash-holding Fund"),
      I_("Redemption Code not allowed for ESOP"),
      I_("No Amount Available in Cash-holding Fund"),
      I_("Less Than Minimum Allowable P.A.C."),
      I_("Redemption Code not allowed for ESOP"),
      I_("Invalid Settlement source"),
      I_("Invalid Settlement Source for Account Designation<"),
      I_("Invalid Order Source"),
      I_("Invalid Settlement Type"),
      I_("Invalid Settlement Type for Dealer/Intermediary<1>"),
      I_("Wire Order Redemption not allowed for Fund<1>"),
      I_("Invalid Order Source for Account Designation<1>"),
      I_("The Intermediary is not permitted to enter wire or"),
      I_("Commission > Maximum Allowed"),
      I_("<1> is not permitted to enter money market wire or"),
      I_("No Dealer Information available for Broker Code"),
      I_("Account has an valid loan!Must enter a valid sourc"),
      I_("RESP Plan Limit exceeded"),
      I_("RESP Year Limit exceeded"),
      I_("RESP redemption exceed Contribution"),
      I_("RESP Redemption exceed Earnings"),
      I_("Previous Y/E Re-Calculation"),
      I_("Fund is Capped"),
      I_("Contract Account Status is Active"),
      I_("Contract Account Status is not Active"),
      I_("Contract Account Status is Death Status"),
      I_("Must enter a Death Claim Redemption Code"),
      I_("WARNING:TRADE >= 30 DAYS OLD"),
      I_("Dealer cannot settle orders place by Intermediary."),
      I_("Deposit ID is mandatory."),
      I_("SIsrep is not permitted new business activities"),
      I_("Not enough grant left for return"),
      I_("DP 20 or RD 61,83,84 not allowed in Transfer"),
      I_("Error when creating Escrow Entity"),
      I_("No RESP Beneficiary selected"),
      I_("This is not a contract Account"),
      I_("No originating contribution selected"),
      I_("RESP  Redmption exceed Earnings"),
      I_("Trade Date > Contribution Term Date"),
      I_("This type of transaction is not supported for Fami"),
      I_("For RESP to RESP tranfer only RD 64 and DP 17 are"),
      I_("RESP transfer amount may be too high"),
      I_("Allocations not fully supported for RESP"),
      I_("Allocation not fully supported for Family Plan RES"),
      I_("EFT has been Transmitted, Do you want to continue?"),
      I_("No RESPContrDetl record available"),
      I_("Effective Contract Plan does not exist"),
      I_("Not enough grant amount for return"),
      I_("Trans Type must be ED - for contract"),
      I_("Order Type must be Direct"),
      I_("Unit Code must be D - dollars"),
      I_("Gross/Net must be Gross"),
      I_("Payment must be multiple of Payment Amt."),
      I_("Non integer amount for zero precision currency"),
      I_("Fractional Values not Allowed in this Currency"),
      I_("Maximum"),
      I_("Invalid Transfer is Kind"),
      I_("Initial payments are not valid for PIP"),
      I_("Payment Less Than Minimum Init Payment"),
      I_("No Scale Detail record found"),
      I_("FIFO units do NOT exist"),
      I_("Batch  is ACTIVE"),
      I_("Batch is LOCKED"),
      I_("Batch does NOT exist"),
      I_("FROM/TO: Contract Transfer Failed"),
      I_("FROM/TO: Trans Not Found in Contract Trf"),
      I_("Group Redemption Stop Flag Enabled"),
      I_("Redemption Stop Flag Enabled"),
      I_("Assigned Flag Enabled"),
      I_("Inconsistentm Fee Charged"),
      I_("Only 3,4,5,6,10,11 allowed for RRIF plan"),
      I_("Net Trade Entered Without a Fee Amount"),
      I_("Full Redemption Not Allowed on"),
      I_("Redemption Not Allowed for Fund & Class"),
      I_("Invalid Remption Code"),
      I_("Red: available units = 0.00"),
      I_("Dealer Not Authorized to Deal a Fund"),
      I_("A Back Net Order cannot have admin. Fee"),
      I_("No Funds Found For Account"),
      I_("Insufficient Funds As At Trade Date"),
      I_("Unissued Certiificate Units exist"),
      I_("Cannot update Manual/Suppressed Cheque"),
      I_("Trn: available Units = 0.00"),
      I_("WARN/FR: Effective PAC Does Not Exist"),
      I_("TO:Effective PAC Exists"),
      I_("TO Effective PAC Exists/FR:PAC Not Found"),
      I_("FR:Group Tnsfr/Redem Stop Flag Enabled"),
      I_("FR:Account Tnsfr/Redem Stop Flag Enable"),
      I_("FR:Shareholder Does Not Exist"),
      I_("FR:Account Does Not Exist"),
      I_("TO:Account Not Active At Trade Date"),
      I_("TO:Group Tnsfr/Purch Stop Flag Enabled"),
      I_("TO:Account Tnsfr/Purch Stop Flag Enable"),
      I_("TO:Shareholder Does Not Exist"),
      I_("TO: Account Does Not Exist"),
      I_("FR:Current Unit Value Not Found"),
      I_("FR/TO:Not An Allowed Transfer"),
      I_("FR:Account Not Active At Trade Date"),
      I_("Transaction Requires Approval"),
      I_("Net Transfer Entered Without Fee Amount"),
      I_("FR:Invalid Fund"),
      I_("FR:Transfer Not Allowed For Fund"),
      I_("FR:Fund Fee Detail Not Found/Defined"),
      I_("TO:Invalid Fund"),
      I_("To:Transfer No Allowed For Fund"),
      I_("TO:Fund Fee Detail Not Found/Defined"),
      I_("Must"),
      I_("FR:No Fund Found For Account"),
      I_("FR:Insufficient Funds As At Trade Date"),
      I_("FR:Unissued Certificate Units Exist"),
      I_("TO:Current Unit Value Not Found"),
      I_("TO:Fee Waived For This Account"),
      I_("TO:Fee Entered Without an Over-ride"),
      I_("TO:Net Purch Entered Without Fee Amount"),
      I_("TO:Fee Override, No Fee Defined"),
      I_("TO:Less Than Minimum Initial Purchase"),
      I_("TO:Less Than Minimum Allowable Purchase"),
      I_("Effective Contract Plan Does Not Exist"),
      I_("FR:Effective Contract Plan Not Exist"),
      I_("Payment Code Valid Only for DIRECT Purch"),
      I_("Payment Code Valid Only for DOLLAR Purch"),
      I_("Payment Code Valid Only for GROSS Purch"),
      I_("FR/TO: Contract Tnfr MUST be FULL Amount"),
      I_("Payment Code MUST be : P or Blank"),
      I_("Acq/Admin Fee Calculate during Night Run"),
      I_("Currency not allowed in this tax type"),
      I_("Stop Date of Fund less than or equal to Trade Date"),
      I_("Stop Date is before Start Date"),
      I_("Price not found"),
      I_("No transfer between RRSP and RRSP spousal"),
      I_("ERROR: ENTIRE ACCOUNT IS RESTRICTED."),
      I_("WARNING: ENTIRE ACCOUNT IS RESTRICTED! DO YOU WISH TO CONTINUE?"),
      I_("PENDING TRADE(S) MAY BE INTERRUPTED. DO YOU WISH TO PROCEED?"),
      I_("'TO' POLICY HAS A TITLES RESTRICTION. DO YOU WISH TO PROCEED WITH TRAN"),
      I_("Exchange: Price Not Found for Percent Free"),
      I_("LLP Error"),
      I_("Estate Error"),
      I_("Invalid AllFundTransfer - with assignment"),
      I_("Invalid AllfundTransfer - with Loan(s)"),
      I_("Invalid AllFundTransfer - with certificate"),
      I_("AIP withdrawal exists, transfer to another RESP not allowed"),
      I_("Cannot apply RESP OC withdrawal to invalid year"),
      I_("Invalid CESG repayment reason code"),
      I_("Invalid RESP EAP/PSE information"),
      I_("Original Trade cannot be cancelled"),
      I_("Original Trade not found"),
      I_("DP 17, RD 64/65 can only be used for RESP to RESP transfer"),
      I_("Insufficient notional balance to cancel RESP transfer"),
      I_("Settling grant repayment by units is not allowed"),
      I_("Net transaction amount exceeds net CESG owing"),
      I_("Exchange rate for tax calculation not found"),
      I_("Negative Guarantees following must be cancelled (rebook at will)."),
      I_("Commission less than minimum allowed"),
      I_("Transfer-Out Transaction record not found"),
      I_("Maximum Payout amount will be exceeded"),
      I_("Transfer-In Transaction record not found"),
      I_("Transfer-Out Fund-Mstr not found"),
      I_("Transfer-In Fund-Mstr not found"),
      I_("Transfer-Out ContractType not found"),
      I_("Transfer-Out Account-Contract not found"),
      I_("Transfer-In ContractType not found"),
      I_("Transfer-In Account-Contract not found"),
      I_("Transfer-Out Contract Master not found"),
      I_("To account is locked."),
      I_("Exchange out fee is below min"),
      I_("Exchange out fee exceeds max"),
      I_("No Family Code for Shareholder"),
      I_("No Family Code for IN Shareholder"),
      I_("Error Calculating Family Market Value"),
      I_("Family Market Value = 0.0"),
      I_("Error Finding FamilyDSC Information"),
      I_("Total Family Deposits = 0."),
      I_("Error Updating FamilyDSC Record"),
      I_("PAC Not allowed for this Fund"),
      I_("SWP not allowed for this fund"),
      I_("Auto-xfer IN not allowed for this fund"),
      I_("Auto-xfer OUT not allowed for this fund"),
      I_("Nationality is not populated"),
      I_("PAC amount is less than initial minimum purchase"),
      I_("Auto Transfer amount is less than initial minimum purchase"),
      I_("Auto Transfer fund is a capped fund"),
      I_("Account is ineligible for Pay Option 4"),
      I_("Missing Fee-Parms for FundGroup"),
      I_("Transfer In not allowed for Grandfathered AMS account"),
      I_("Grandfathered AMS A/c-ED/PAC not allowed aft full redempt"),
      I_("Maximum redemption % exceeded"),
      I_("Income Level field is required"),
      I_("Net Worth field is required"),
      I_("Risk Tolerance field is a required"),
      I_("Knowledge field is required"),
      I_("Business No. is applicable to corporate accounts only"),
      I_("Account Escrow Flag is set to Active"),
      I_("Active SWP exists on Account"),
      I_("Active PAC exists on Account"),
      I_("Excess fund/class is mandatory for AMS Global set up"),
      I_("Rounding fund/class is mandatory for AMS Global set up"),
      I_("Purchase of Fund/Class outside of AMS mix is not allowed"),
      I_("Date of Birth is a required field"),
      I_("Occupation is a required field"),
      I_("Date of Birth is missing"),
      I_("Missing Redemption Fee Setup"),
      I_("RepLevel must be > 3 for borrowed deals"),
      I_("RepLevel 1 cannot create new accounts"),
      I_("Backdates prior to DM event are not allowed."),
      I_("Account cannot be closed account Value > 0"),
      I_("English/French MFOL Name is mandatory for AMS global set up."),
      I_("Valid SIN is required for RESP accounts"),
      I_("Start, End or Maturity Date is blank."),
      I_("Inactive pol. has the same maturity date."),
      I_("Systematic plan not transfered for switch."),
      I_("Systematic plan not transfered for switch to different account."),
      I_("Redemption amount is greater than account balance"),
      I_("Transfer/Exchange amount is greater than account balance"),
      I_("Transfer-In Fund-Info record not found"),
      I_("Transfer-In Contract Master not found"),
      I_("Accounts with Unsettled Trades are ineligible for AMS"),
      I_("Accounts with Pending Trades are ineligible for AMS rebalancing"),
      I_("Error to determine Closing Decade"),
      I_("LSIF Redrules record not available"),
      I_("SalesRepCode should only be 5 characters"),
      I_("AWD Comment is blank"),
      I_("Offer price not found"),
      I_("Reinvestment price not found"),
      I_("Discount fee model not found"),
      I_("Invalid settlement currency for Fund"),
      I_("Fees can not be covered by transaction amount"),
      I_("Account must be PUEV capable if Fund is PUEV capable"),
      I_("Shareholder fee model code is missing"),
      I_("Fund must be PUEV capable if Account is PUEV capable"),
      I_("Reinvest FEL commission can not be negative"),
      I_("Both accounts and both funds must be PUEV capable"),
      I_("Fund is Investro Capable but the fund broker's routing type is not Investro"),
      I_("Fund is not Investro Capable but the fund broker's routing type is Investro"),
      I_("Price of 3rd party fund is equal 0."),
      I_("StaticPendingTrade Info not available"),
      I_("Client defined maturity date is not available"),
      I_("Structured Notes Info not found"),
      I_("CD policy(s) impacted by DOB change"),
      I_("DOB change impacts matured/reset policy"),
      I_("Wire Order Number exceeds 10 characters"),
      I_("New date of birth cannot be blank"),
      I_("New Legal Contract Maturity date cannot be less than  Maturity Date"),
      I_("Transactions cannot exist after old/new closing decade start date"),
      I_("Country code for banking information is required."),
      I_("Cannot calculate EUSD."),
      I_("Sender Ref No. is required when NetworkID is not blank"),
      I_("User-defined maturity date less than  years from Account Effective Date."),
      I_("No Transfer/Exchange rule defined for the Trade Date."),
      I_("Maturity Date of TO side does not match with TI side."),
      I_("Pending trades cannot exist in old/new closing decade"),
      I_("User-defined maturity date less than  years from Reset Effective Date."),
      I_("Client-Defined Maturity Date must be  years greater than Reset Date."),
      I_("User-defined Maturity Date cannot be blank."),
      I_("User-defined Deposit Maturity Date greater than Legal Contract Maturity Date."),
      I_("User-defined Contract Maturity Date greater than Legal Contract Maturity Date."),
      I_("No active policy found to get the maturity date."),
      I_("Warning:GUARANTEE ADJUSTMENT EXISTS FOR THE ACCOUNT CONTRACT AFTER TRADE DATE."),
      I_("THERE HAS BEEN GUARANTEE ADJUSTMENT(S) SINCE THE ORIGINAL TRADE."),
      I_("The guarantee adjustment record(s) must be cancelled before processing backdated transaction."),
      I_("Guarantee Units do not balance with transaction units."),
      I_("SEG history status mismatch: SEG history is available for TI-side as of the trade date but is not available for TO-side."),
      I_("SEG history status mismatch: SEG history is available for TO-side as of the trade date but is not available for TI-side."),
      I_("Guarantee Adjustments need to be cancelled before DOB change due to Reduction Age impact"),
      I_("Warning:Guarantee Adjustment exists after trade date for the Account."),
      I_("Warning:Unit adjustment required for Account."),
      I_("Possible EUSD tax calc effect on subsequent Money out Transaction."),
      I_("Please cancel money out transaction."),
      I_("Duplicate SIN found in entity list."),
      I_("Annuitant is older than latest age to open/purchase years."),
      I_("not available for purchase."),
      I_("Non-numeric value assigned to numeric field."),
      I_("Many to Many Xfer with source funds of diff fund currencies."),
      I_("Invalid Trade in split comm environment."),
      I_("Missing or Invalid allocation info."),
      I_("Invalid trade amount."),
      I_("Fund/Class is not valid in Group."),
      I_("Invalid custom trading schedule"),
      I_("Missing custom trading schedule"),
      I_("Transaction not allowed during settlement phase"),
      I_("Maximum event(s) for the year exceeded"),
      I_("Pending/Settled trades/events exist on or after the event effective date"),
      I_("The valid period for the event is between"),
      I_("Missing exchange rate for multicurrency trade"),
      I_("Invalid Event Effective Date"),
      I_("Active Event Schedule already exists"),
      I_("There have been manual event(s) since the original trade date"),
      I_("Invalid PUD code for acct closing redcode!"),
      I_("Event is not allowed during closing period"),
      I_("The new user-defined CMD should be after the existing CMD"),
      I_("Reset can be processed only  year(s) before CMD"),
      I_("PAC stop date impacted by DOB change"),
      I_("DOB impacts CMD after date reset"),
      I_("Payment for both Redemption and Distribution must be setup"),
      I_("Cannot find time zone information"),
      I_("Holdback amount >= available units."),
      I_("Both sides of Transfer/Exchange must be either settled or unsettled in order for trade to be cancelled."),
      I_("Invalid Settlement type indicator."),
      I_("Transaction number not found."),
      I_("Transaction number is missing."),
      I_("WireOrder number is missing."),
      I_("External ID is missing."),
      I_("External ID type is missing."),
      I_("Fund code is missing."),
      I_("Class code is missing."),
      I_("Transaction type is missing."),
      I_("Trade Date is missing."),
      I_("Settle Date is missing."),
      I_("Transaction cannot be found for settlement."),
      I_("Account number cannot be found."),
      I_("Fund code cannot be found."),
      I_("Class code cannot be found."),
      I_("Gross/Net indicator is missing."),
      I_("Stop Redemption Settle Flag is set to Yes."),
      I_("Redemption Amount is greater than account balance."),
      I_("iFAST Trans-Rec-Xref table not available."),
      I_("Internal iFAST issue - no active settlement batch was found."),
      I_("Transaction previously settled."),
      I_("WireOrder number cannot be found."),
      I_("External ID cannot be found."),
      I_("External ID type cannot be found."),
      I_("Transaction Type cannot be found."),
      I_("Trade Date cannot be found."),
      I_("Settlement Date cannot be found."),
      I_("Invalid Gross/Net indicator. Must be G or N."),
      I_("Account number is missing."),
      I_("Number of fields of record line are less that expected."),
      I_("Broker code is missing."),
      I_("TO/EO transaction must be settled."),
      I_("Contribution is not allowed for non-resident for TaxType"),
      I_("Contrib. date is outside the allowed dates for TaxType"),
      I_("Cancellation Failure refer to REVRSLOG.D report"),
      I_("Reversal or adjustment placed in another Account, Fund, or Class"),
      I_("Original Trade Cancelled or not Found"),
      I_("Mirror - Cancellation Failure refer to REVRSLOG.D report"),
      I_("Split Commission does not match Fee"),
      I_("No Paying Agent Found"),
      I_("Tax Jurisdiction not found Paying Agent"),
      I_("Tax Jurisdiction not found for Owner"),
      I_("No active owner found"),
      I_("Invalid selection. Deposit Code is applicable for Sibling Only accounts"),
      I_("Invalid selection. Beneficiary is not linked to a PCG."),
      I_("PCG exists,please de-link PCG for non-sibling only accounts."),
      I_("Error corrections not allowed for settled trades on RESP accounts"),
      I_("Error corrections not allowed for trades submitted to HRSDC on RESP accounts"),
      I_("DP 20,73,74,75,76 or RD 75,76,83 not allowed in Transfer."),
      I_("Account is not Sibling Only. Grant Amount is not applicable"),
      I_("Beneficiary is not linked to a PCG. Grant Amount is not applicable"),
      I_("Beneficiary is not eligible for CLB since his Date of Birth is greater than 01/01/2004"),
      I_("CLB Amount cannot be transferred since SIN of from and to Beneficiary are different"),
      I_("Redemption code is invalid since beneficiary is non-resident"),
      I_("Fund is Front End Load with commission greater than zero"),
      I_("DSC amount is greater than the amount attributed to income in the EAP"),
      I_("Redemption code '77' applicable only for non-resident beneficiaries"),
      I_("Beneficiary's Date of Birth is missing"),
      I_("Beneficiary's Gender is missing"),
      I_("Beneficiary is over 21 and trade cannot be processed"),
      I_("Termination date should be 25 years from Inception date."),
      I_("Pending and Cancelled Status not applicable"),
      I_("No Bus-Day record available"),
      I_("No Fund-Mstr record available"),
      I_("No fund-group-type record with Valn grouptype available"),
      I_("Fund record not available in Fund-Group-List"),
      I_("The Fund Group Type and Fund Group are not available in FundSched"),
      I_("Error in RUNRIF51"),
      I_("Error in RUNRIF52"),
      I_("Reset RUNRIFInfo control before restarting"),
      I_("Account:Less than minimum Initial Purchase"),
      I_("Account:Less than minimum Allowable Purchase"),
      I_("Account:Purchase not allowed for Fund"),
      I_("Account:Redemption not allowed for Fund"),
      I_("Account:TO:Transfer not allowed for Fund"),
      I_("Account:FROM:Transfer not allowed for Fund"),
      I_("Account:Less than Minimum Fund/Class Balance"),
      I_("Broker:Less than minimum Initial Purchase"),
      I_("Broker:Less than minimum Allowable Purchase"),
      I_("Broker:Purchase not allowed for Fund"),
      I_("Broker:Redemption not allowed for Fund"),
      I_("Broker:TO:Transfer not allowed for Fund"),
      I_("Broker:FROM:Transfer not allowed for Fund"),
      I_("Broker:Less than Minimum Fund/Class Balance"),
      I_("Branch:Less than minimum Initial Purchase"),
      I_("Branch:Less than minimum Allowable Purchase"),
      I_("Branch:Purchase not allowed for Fund"),
      I_("Branch:Redemption not allowed for Fund"),
      I_("Branch:TO:Transfer not allowed for Fund"),
      I_("Branch:FROM:Transfer not allowed for Fund"),
      I_("Branch:Less than Minimum Fund/Class Balance"),
      I_("Sales Rep:Less than minimum Initial Purchase"),
      I_("Sales Rep:Less than minimum Allowable Purchase"),
      I_("Sales Rep:Purchase not allowed for Fund"),
      I_("Sales Rep:Redemption not allowed for Fund"),
      I_("Sales Rep:TO:Transfer not allowed for Fund"),
      I_("Sales Rep:FROM:Transfer not allowed for Fund"),
      I_("Sales Rep:Less than Minimum Fund/Class Balance"),
      I_("Less than Minimum Fund/Class Balance"),
      I_("Deposit type not allowed for RedCode"),
      I_("Allowed Transfer is from LonckIn to Non LockedIn Registered"),
      I_("Allowed Transfer is from LonckIn to Non Registered"),
      I_("Redeem not allowed for reason code bankruptcy"),
      I_("Order type should be wire for partcipant transfer."),
      I_("Order type should be direct for non-partcipant transfer."),
      I_("Inactive Dealer / Ineligible Broker for AMS"),
      I_("Stop purchase or Redemption flag active for AMS A/C"),
      I_("Minimum AMS investment not met"),
      I_("Mixed currency fund in AMS model"),
      I_("Fund/Class  is Soft Capped"),
      I_("AMS Eligibility"),
      I_("Fund Load Group not the same under AMS Allocation Set-up"),
      I_("AMS set-up not allowed for Institutional Account"),
      I_("redemption Code is not allowed for transfer"),
      I_("From this account you can transfer only to RRSP or RRIF account"),
      I_("Account Category Private not applicable to account type and account designation"),
      I_("Aggr amt below fundloadgrp min init amt!"),
      I_("Account: Fund/Class  is Soft Capped!"),
      I_("KYC information is missing"),
      I_("Management fee model is missing"),
      I_("RESP NASU not available on desktop"),
      I_("Entry of spouse's date of birth is not allowed."),
      I_("Spouse's date of birth must be less than or equal to accountholder's age."),
      I_("Invalid payment period"),
      I_("Account has active certificate units"),
      I_("Account value is locked."),
      I_("New money-in for Tax Type Schedule is not allowed after"),
      I_("Redemption is contrary to client guarantee guard protection setting rules"),
      I_("Transfer is contrary to client guarantee guard protection setting rules"),
      I_("No Eligible Contracts in this account"),
      I_("Accounts have different SiblingOnly status - Ensure transfer meets regulations"),
      I_("An active SWP exists setup with GMWB funds"),
      I_("An active Dynamic SWP exists setup with GMWB funds"),
      I_("Invalid/Blank  Regulatory Standard"),
      I_("PayType for requested Payment Instruction should be set to EFTfor redemption payments"),
      I_("Account number  does not exist"),
      I_("Account number should be different from that of ED trade"),
      I_("An active Dynamic SWP exists setup with non-GMWB funds"),
      I_("Duplicate Rule Type is not allowed."),
      I_("Both Mgmt Fee Rebate and Mgmt Fee flags can not be true at the same time."),
      I_("Beneficiary Age is over 31 and trade cannot be processed"),
      I_("Termination date should be 35 years from Inception date"),
      I_("Invalid Fund Code for Fund on fund Category"),
      I_("User Defined Maturity Date should be  years from the issuedate"),
      I_("Redemption  exceeds Grant Plus Earnings"),
      I_("EAP Amount exceeds Market Value"),
      I_("AMS Effective Date Backdated"),
      I_("Residence Province and Tax Jurisdiction can not be left Unassigned"),
      I_("The requested amount has exceeded the minimum"),
      I_("This transaction may exceed the remaining minimum amount and may be rejected in the cycle"),
      I_("Demographics Data is required."),
      I_("KYC Document List Data is required"),
      I_("Fee Code is not defined, cannot store deducted fee."),
      I_("Direct Deposit Banking setup is available only to default banking of non-registered client held account"),
      I_("Direct Deposit Banking is applied only to Canadian Bank"),
      I_("Direct Deposit Banking is applied only to Canadian Dollar Fund"),
      I_("Contract Versions of TO and TI sides do not match"),
      I_("Joint Life Entity required before processing a joint election."),
      I_("Age of Annuitant/Joint Life Entity Surpasses the maximum age allowed."),
      I_("Account balance is above the SFIR threshold amount"),
      I_("LWA Option of TO and TI sides do not match"),
      I_("Direct Deposit Banking and/or Investor Authorize missing"),
      I_("There are investor authorization setup that missing direct deposit banking Informaion"),
      I_("There are direct deposit banking setup that missing investor authorization Informaion"),
      I_("Settlement Location is missing"),
      I_("Fee is not eligible for Net Trading"),
      I_("Fed tax rate is less than the default value"),
      I_("Prov tax rate is less than the default value"),
      I_("Banking Information is not verified (for trade)"),
      I_("Banking Information is not verified (for settlement)"),
      I_("Fund has certificate units"),
      I_("Shareholder Address is not verified (for trade)"),
      I_("Shareholder Address is not verified (for settlement)"),
      I_("Banking Info has pending or unsettled trade association"),
      I_("Exchange rate for trade date is not found."),
      I_("Traded unit calculation error. Please call system support."),
      I_("DSK:TUP Oversell encountered on a redemption"),
      I_("DSK:TUP Oversell encountered on a transfer out"),
      I_("DSK:TUP Oversell encountered on an exchange out"),
      I_("WEB:TUP Oversell encountered on a redemption"),
      I_("WEB:TUP Oversell encountered on a transfer out"),
      I_("WEB:TUP Oversell encountered on a exchange out"),
      I_("Statement frequency cannot be less than 'Quarterly'."),
      I_("Statement frequency cannot be less than 'Monthly'."),
      I_("Settlement is not allowed during final cycle run."),
      I_("QESI Life Time Grant Limit Exceeded."),
      I_("Insufficient QESI Grants."),
      I_("Refund of Special Taxes exceed Redemption."),
      I_("No Lifetime Contribution Limits has been set up."),
      I_("No Annual Contribution Limits has been set up."),
      I_("Error finding Fee Parms for Fund/Class."),
      I_("No Broker/Branch/Rep found for Account."),
      I_("Error finding Fee Parms for Account and/or Family Code."),
      I_("Warning: Broker is not eligible for Trailer Fee."),
      I_("Warning: Broker/Branch/Rep is not eligible for Trailer Fee."),
      I_("Warning: Broker Trailer Fee Pay Frequency not the same as Run Frequency."),
      I_("Warning: Broker/Branch/Rep has been stopped."),
      I_("Balance for Account/Fund/Class is 0."),
      I_("Warning: Fee Parameter Fee Type must be Percent."),
      I_("Missing Account History for Account."),
      I_("Error finding Fee Parms for Broker/Branch/Rep."),
      I_("Units in AcctBal does not match with InvAsOf"),
      I_("RESP/Family RESP trading is not supported."),
      I_("RESP specific edit check is not being performed."),
      I_("Eligible Trailer Fee is 0 since the Broker/Rep asset aggr is less than $100000."),
      I_("Inventory Tracking is not on for Fund/Class that is GrandFathered."),
      I_("CESG Amount to be returned because of this redemption."),
      I_("This transaction will reduce the YTD contribution to negative"),
      I_("Eligible Balance Type and Split By currently not supported."),
      I_("NEQ already exists."),
      I_("NEQ is missing."),
      I_("DP 78,79,80,81 or RD Q1,Q2,Q3 are not allowed."),
      I_("Election of LWA Age Rate  is only allowed when LWA Rates between accounts is the same."),
      I_("Transfer Option Purchase could not be processed."),
      I_("Account Balance is less than transaction amount"),
      I_("Notional balance is less than entered transaction amount"),
      I_("Amendment may be required"),
      I_("Adjustment may be required"),
      I_("Trade exist for tax year"),
      I_("You may need to add new Grant Request for applicable tax year"),
      I_("You may need to stop Grant Request for applicable tax year"),
      I_("You may need to flip status to Request or create new request for applicable tax year"),
      I_("SIN Effective date is mandatory"),
      I_("Guarantee Guard not same between TO/TI accounts"),
      I_("Transfer Proces failed due to run time error"),
      I_("AIP withdrawal exists, payment to non-resident Owner is not allowed"),
      I_("Entity Address is missing"),
      I_("System will trigger amendment and recalculate QESI notional balance for the tax year"),
      I_("SIN Effective date for RESP beneficiary cannot be unknown"),
      I_("SIN Effective date for RESP beneficiary cannot be earlier than the Date of birth"),
      I_("SIN Effective date for RESP beneficiary cannot be a future date"),
      I_("Dealer's Trailer Payment Frequency changed after first month of quarter end"),
      I_("Inventory Event failed to find the appropriate age group to age the units"),
      I_("Broker's Trailer Payment Frequency changed."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_041_006_000_000;
   const BFSubstitutionSet SubSet_002_041_006_000_000(
    &aKeys_002_041_006_000_000[0], &aValues_002_041_006_000_000[0] );
   // Substitution set RejCodeSet.  Language: deDE
   static const I_CHAR* aKeys_002_041_007_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("106"),
      I_("107"),
      I_("11"),
      I_("117"),
      I_("118"),
      I_("119"),
      I_("12"),
      I_("120"),
      I_("121"),
      I_("122"),
      I_("123"),
      I_("125"),
      I_("127"),
      I_("128"),
      I_("129"),
      I_("13"),
      I_("134"),
      I_("135"),
      I_("136"),
      I_("137"),
      I_("138"),
      I_("139"),
      I_("14"),
      I_("140"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("181"),
      I_("182"),
      I_("183"),
      I_("184"),
      I_("186"),
      I_("187"),
      I_("188"),
      I_("189"),
      I_("19"),
      I_("190"),
      I_("191"),
      I_("192"),
      I_("193"),
      I_("194"),
      I_("195"),
      I_("196"),
      I_("197"),
      I_("198"),
      I_("199"),
      I_("20"),
      I_("200"),
      I_("202"),
      I_("203"),
      I_("204"),
      I_("205"),
      I_("206"),
      I_("207"),
      I_("208"),
      I_("209"),
      I_("21"),
      I_("210"),
      I_("211"),
      I_("212"),
      I_("216"),
      I_("217"),
      I_("218"),
      I_("219"),
      I_("22"),
      I_("221"),
      I_("222"),
      I_("223"),
      I_("224"),
      I_("229"),
      I_("23"),
      I_("230"),
      I_("231"),
      I_("232"),
      I_("236"),
      I_("237"),
      I_("238"),
      I_("239"),
      I_("24"),
      I_("240"),
      I_("241"),
      I_("242"),
      I_("243"),
      I_("244"),
      I_("245"),
      I_("246"),
      I_("247"),
      I_("248"),
      I_("249"),
      I_("25"),
      I_("250"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("300"),
      I_("305"),
      I_("31"),
      I_("314"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("89"),
      I_("90"),
      I_("91"),
      I_("92"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("96"),
      I_("97"),
      I_("98"),
      I_("99"),
      I_("100"),
      I_("116"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("260"),
      I_("261"),
      I_("262"),
      I_("263"),
      I_("266"),
      I_("316"),
      I_("317"),
      I_("319"),
      I_("320"),
      I_("321"),
      I_("322"),
      I_("324"),
      I_("325"),
      I_("326"),
      I_("327"),
      I_("328"),
      I_("329"),
      I_("330"),
      I_("331"),
      I_("332"),
      I_("333"),
      I_("335"),
      I_("102"),
      I_("111"),
      I_("101"),
      I_("113"),
      I_("141"),
      I_("142"),
      I_("143"),
      I_("144"),
      I_("145"),
      I_("146"),
      I_("147"),
      I_("148"),
      I_("235"),
      I_("338"),
      I_("339"),
      I_("340"),
      I_("341"),
      I_("342"),
      I_("343"),
      I_("344"),
      I_("345"),
      I_("346"),
      I_("351"),
      I_("352"),
      I_("353"),
      I_("354"),
      I_("355"),
      I_("356"),
      I_("357"),
      I_("358"),
      I_("359"),
      I_("360"),
      I_("361"),
      I_("362"),
      I_("363"),
      I_("364"),
      I_("365"),
      I_("366"),
      I_("367"),
      I_("370"),
      I_("374"),
      I_("375"),
      I_("376"),
      I_("377"),
      I_("378"),
      I_("379"),
      I_("385"),
      I_("386"),
      I_("388"),
      I_("389"),
      I_("390"),
      I_("391"),
      I_("392"),
      I_("393"),
      I_("394"),
      I_("395"),
      I_("396"),
      I_("397"),
      I_("398"),
      I_("399"),
      I_("400"),
      I_("401"),
      I_("403"),
      I_("404"),
      I_("405"),
      I_("406"),
      I_("407"),
      I_("411"),
      I_("414"),
      I_("415"),
      I_("417"),
      I_("418"),
      I_("419"),
      I_("420"),
      I_("421"),
      I_("422"),
      I_("423"),
      I_("424"),
      I_("425"),
      I_("426"),
      I_("427"),
      I_("428"),
      I_("430"),
      I_("431"),
      I_("433"),
      I_("434"),
      I_("435"),
      I_("436"),
      I_("437"),
      I_("438"),
      I_("439"),
      I_("440"),
      I_("441"),
      I_("442"),
      I_("443"),
      I_("444"),
      I_("445"),
      I_("446"),
      I_("447"),
      I_("448"),
      I_("449"),
      I_("450"),
      I_("451"),
      I_("452"),
      I_("453"),
      I_("454"),
      I_("455"),
      I_("457"),
      I_("458"),
      I_("459"),
      I_("460"),
      I_("461"),
      I_("462"),
      I_("463"),
      I_("464"),
      I_("465"),
      I_("467"),
      I_("468"),
      I_("469"),
      I_("470"),
      I_("471"),
      I_("472"),
      I_("473"),
      I_("474"),
      I_("475"),
      I_("480"),
      I_("481"),
      I_("483"),
      I_("485"),
      I_("486"),
      I_("487"),
      I_("488"),
      I_("489"),
      I_("490"),
      I_("491"),
      I_("492"),
      I_("493"),
      I_("494"),
      I_("495"),
      I_("496"),
      I_("497"),
      I_("498"),
      I_("500"),
      I_("501"),
      I_("510"),
      I_("520"),
      I_("521"),
      I_("522"),
      I_("523"),
      I_("524"),
      I_("525"),
      I_("526"),
      I_("527"),
      I_("528"),
      I_("529"),
      I_("530"),
      I_("531"),
      I_("532"),
      I_("533"),
      I_("534"),
      I_("535"),
      I_("536"),
      I_("537"),
      I_("538"),
      I_("539"),
      I_("540"),
      I_("541"),
      I_("542"),
      I_("543"),
      I_("544"),
      I_("545"),
      I_("546"),
      I_("548"),
      I_("549"),
      I_("550"),
      I_("551"),
      I_("552"),
      I_("563"),
      I_("565"),
      I_("600"),
      I_("601"),
      I_("602"),
      I_("603"),
      I_("604"),
      I_("706"),
      I_("707"),
      I_("708"),
      I_("709"),
      I_("710"),
      I_("711"),
      I_("712"),
      I_("713"),
      I_("714"),
      I_("715"),
      I_("716"),
      I_("717"),
      I_("718"),
      I_("719"),
      I_("720"),
      I_("721"),
      I_("722"),
      I_("723"),
      I_("724"),
      I_("725"),
      I_("726"),
      I_("727"),
      I_("798"),
      I_("904"),
      I_("905"),
      I_("906"),
      I_("907"),
      I_("908"),
      I_("910"),
      I_("911"),
      I_("912"),
      I_("914"),
      I_("915"),
      I_("916"),
      I_("917"),
      I_("918"),
      I_("919"),
      I_("920"),
      I_("921"),
      I_("922"),
      I_("923"),
      I_("924"),
      I_("925"),
      I_("926"),
      I_("927"),
      I_("928"),
      I_("929"),
      I_("930"),
      I_("931"),
      I_("932"),
      I_("933"),
      I_("934"),
      I_("935"),
      I_("936"),
      I_("937"),
      I_("938"),
      I_("939"),
      I_("940"),
      I_("941"),
      I_("942"),
      I_("943"),
      I_("944"),
      I_("945"),
      I_("946"),
      I_("947"),
      I_("948"),
      I_("949"),
      I_("950"),
      I_("951"),
      I_("952"),
      I_("953"),
      I_("954"),
      I_("956"),
      I_("957"),
      I_("959"),
      I_("960"),
      I_("961"),
      I_("962"),
      I_("963"),
      I_("967"),
      I_("968"),
      I_("969"),
      I_("970"),
      I_("971"),
      I_("974"),
      I_("975"),
      I_("978"),
      I_("983"),
      I_("984"),
      I_("985"),
      I_("986"),
      I_("987"),
      I_("988"),
      I_("989"),
      I_("990"),
      I_("993"),
      I_("994"),
      I_("995"),
      I_("996"),
      I_("997"),
      I_("998"),
      I_("999"),
      I_("1000"),
      I_("1001"),
      I_("1002"),
      I_("1003"),
      I_("1004"),
      I_("1005"),
      I_("1006"),
      I_("1007"),
      I_("1008"),
      I_("1009"),
      I_("1010"),
      I_("1011"),
      I_("1012"),
      I_("1013"),
      I_("1014"),
      I_("1015"),
      I_("1016"),
      I_("1017"),
      I_("1018"),
      I_("1019"),
      I_("1020"),
      I_("1021"),
      I_("1022"),
      I_("1023"),
      I_("1024"),
      I_("1025"),
      I_("1026"),
      I_("1027"),
      I_("1028"),
      I_("1029"),
      I_("1030"),
      I_("1031"),
      I_("1032"),
      I_("1033"),
      I_("1034"),
      I_("1035"),
      I_("1036"),
      I_("1037"),
      I_("1038"),
      I_("1039"),
      I_("1040"),
      I_("1047"),
      I_("1048"),
      I_("1041"),
      I_("1042"),
      I_("1043"),
      I_("1044"),
      I_("1045"),
      I_("1046"),
      I_("1049"),
      I_("1050"),
      I_("1051"),
      I_("1052"),
      I_("1053"),
      I_("1054"),
      I_("1055"),
      I_("1056"),
      I_("1057"),
      I_("1058"),
      I_("1059"),
      I_("1060"),
      I_("1070"),
      I_("1071"),
      I_("1072"),
      I_("1073"),
      I_("1074"),
      I_("1075"),
      I_("1076"),
      I_("1077"),
      I_("1078"),
      I_("1085"),
      I_("1086"),
      I_("1087"),
      I_("1080"),
      I_("1081"),
      I_("1088"),
      I_("1089"),
      I_("1090"),
      I_("1091"),
      I_("1092"),
      I_("1093"),
      I_("1094"),
      I_("1095"),
      I_("1096"),
      I_("1097"),
      I_("1099"),
      I_("1100"),
      I_("1101"),
      I_("1102"),
      I_("1103"),
      I_("1104"),
      I_("1105"),
      I_("1106"),
      0x00
   };

   static const I_CHAR* aValues_002_041_007_000_000[] = {
      I_("No Primary Master Record Exists"),
      I_("No Account Master Record Exists"),
      I_("Fund Fee Detail Not Foiund/Defined"),
      I_("BEL must be Acq and Admin Fee = 0, Prcnt"),
      I_("BackEnd Net Order must not"),
      I_("Current Unit Value Not Found"),
      I_("Account Not Active at Trade Date"),
      I_("Group Purchase Stop Flag Enables"),
      I_("Account Purchase Stop Flag Enables"),
      I_("ROA not available for this account"),
      I_("Holdback Exist. Reject whole transaction"),
      I_("Holdback $ = Avail $ and Settle method 2 is used."),
      I_("Holding"),
      I_("Holding Fund Detail does not exist"),
      I_("Exceed users setup amount"),
      I_("Fee Waived For this Account"),
      I_("WARN: Dollars must be rounded to Cents"),
      I_("Units Rounding Factor exceeds Unitsprecis"),
      I_("Invalid deposit code for tax type"),
      I_("Fee Entered Without An Over-ride"),
      I_("No Account Value Record Exists"),
      I_("Transaction must be Varified"),
      I_("TI: Exchange Rate does not exist"),
      I_("WARN: Fund Max Subsequent Contrib Exceed"),
      I_("Transaction must be Verified"),
      I_("The Exchange Rate does not exist"),
      I_("WARN: Fund Max Initial Deposit Exceeded"),
      I_("Unit value is equal to zero"),
      I_("Net Purchase Entered Without Fee Amount"),
      I_("The remaining minimum amount must be paid first"),
      I_("Remaining account balance is insufficient to cover"),
      I_("Tax Type Rules not available for account tax type"),
      I_("Scheduled Payment Information not available"),
      I_("Redemption Code Rules not setup"),
      I_("Account Master Table not on file"),
      I_("Fee Override, No Fee Defined"),
      I_("The remaining minimum amount redemption was not pr"),
      I_("Invalid Fund is Indicated"),
      I_("Purchase not allowed for Fund and Class"),
      I_("Invalid Fund for registered account"),
      I_("WARN:Less Than Mininum Initial Purchase"),
      I_("WARN:Less Than Min Fund/Class Balance"),
      I_("WARN:Less Than Minimum Account Balance"),
      I_("WARN:Less Than Min Initial Redemption"),
      I_("WARN:Less Than Min Subsequent Redemption"),
      I_("ESOP  Contribution Exceeds yearly limit"),
      I_("Fund is not ESOP Eligible"),
      I_("Processing Redemption from ESOP Investment Plan"),
      I_("Processing Redemption from ESOP Participation Plan"),
      I_("WARN: Less Than Minimum Allowable Purch."),
      I_("ESOP Transfer must close the Account"),
      I_("Purchasing Security for"),
      I_("Whole Share fund purchase not pre-processed"),
      I_("Net Whole Share redemptions are not allowed"),
      I_("Cannot transfer Out of an ESOP Account"),
      I_("Cannot transfer In of an ESOP Account"),
      I_("No S.W. Ps allowed from ESOP Account"),
      I_("No Amount Available in Cash-holding Fund"),
      I_("Redemption Code not allowed for ESOP"),
      I_("No Amount Available in Cash-holding Fund"),
      I_("Less Than Minimum Allowable P.A.C."),
      I_("Redemption Code not allowed for ESOP"),
      I_("Invalid Settlement source"),
      I_("Invalid Settlement Source for Account Designation<"),
      I_("Invalid Order Source"),
      I_("Invalid Settlement Type"),
      I_("Invalid Settlement Type for Dealer/Intermediary<1>"),
      I_("Wire Order Redemption not allowed for Fund<1>"),
      I_("Invalid Order Source for Account Designation<1>"),
      I_("The Intermediary is not permitted to enter wire or"),
      I_("Commission > Maximum Allowed"),
      I_("<1> is not permitted to enter money market wire or"),
      I_("No Dealer Information available for Broker Code"),
      I_("Account has an valid loan!Must enter a valid sourc"),
      I_("RESP Plan Limit exceeded"),
      I_("RESP Year Limit exceeded"),
      I_("RESP redemption exceed Contribution"),
      I_("RESP Redemption exceed Earnings"),
      I_("Previous Y/E Re-Calculation"),
      I_("Fund is Capped"),
      I_("Contract Account Status is Active"),
      I_("Contract Account Status is not Active"),
      I_("Contract Account Status is Death Status"),
      I_("Must enter a Death Claim Redemption Code"),
      I_("WARNING:TRADE >= 30 DAYS OLD"),
      I_("Dealer cannot settle orders place by Intermediary."),
      I_("Deposit ID is mandatory."),
      I_("SIsrep is not permitted new business activities"),
      I_("Not enough grant left for return"),
      I_("DP 20 or RD 61,83,84 not allowed in Transfer"),
      I_("Error when creating Escrow Entity"),
      I_("No RESP Beneficiary selected"),
      I_("This is not a contract Account"),
      I_("No originating contribution selected"),
      I_("RESP  Redmption exceed Earnings"),
      I_("Trade Date > Contribution Term Date"),
      I_("This type of transaction is not supported for Fami"),
      I_("For RESP to RESP tranfer only RD 64 and DP 17 are"),
      I_("RESP transfer amount may be too high"),
      I_("Allocations not fully supported for RESP"),
      I_("Allocation not fully supported for Family Plan RES"),
      I_("EFT has been Transmitted, Do you want to continue?"),
      I_("No RESPContrDetl record available"),
      I_("Effective Contract Plan does not exist"),
      I_("Not enough grant amount for return"),
      I_("Trans Type must be ED - for contract"),
      I_("Order Type must be Direct"),
      I_("Unit Code must be D - dollars"),
      I_("Gross/Net must be Gross"),
      I_("Payment must be multiple of Payment Amt."),
      I_("Non integer amount for zero precision currency"),
      I_("Fractional Values not Allowed in this Currency"),
      I_("Maximum"),
      I_("Invalid Transfer is Kind"),
      I_("Initial payments are not valid for PIP"),
      I_("Payment Less Than Minimum Init Payment"),
      I_("No Scale Detail record found"),
      I_("FIFO units do NOT exist"),
      I_("Batch  is ACTIVE"),
      I_("Batch is LOCKED"),
      I_("Batch does NOT exist"),
      I_("FROM/TO: Contract Transfer Failed"),
      I_("FROM/TO: Trans Not Found in Contract Trf"),
      I_("Group Redemption Stop Flag Enabled"),
      I_("Redemption Stop Flag Enabled"),
      I_("Assigned Flag Enabled"),
      I_("Inconsistentm Fee Charged"),
      I_("Only 3,4,5,6,10,11 allowed for RRIF plan"),
      I_("Net Trade Entered Without a Fee Amount"),
      I_("Full Redemption Not Allowed on"),
      I_("Redemption Not Allowed for Fund & Class"),
      I_("Invalid Remption Code"),
      I_("Red: available units = 0.00"),
      I_("Dealer Not Authorized to Deal a Fund"),
      I_("A Back Net Order cannot have admin. Fee"),
      I_("No Funds Found For Account"),
      I_("Insufficient Funds As At Trade Date"),
      I_("Unissued Certiificate Units exist"),
      I_("Cannot update Manual/Suppressed Cheque"),
      I_("Trn: available Units = 0.00"),
      I_("WARN/FR: Effective PAC Does Not Exist"),
      I_("TO:Effective PAC Exists"),
      I_("TO Effective PAC Exists/FR:PAC Not Found"),
      I_("FR:Group Tnsfr/Redem Stop Flag Enabled"),
      I_("FR:Account Tnsfr/Redem Stop Flag Enable"),
      I_("FR:Shareholder Does Not Exist"),
      I_("FR:Account Does Not Exist"),
      I_("TO:Account Not Active At Trade Date"),
      I_("TO:Group Tnsfr/Purch Stop Flag Enabled"),
      I_("TO:Account Tnsfr/Purch Stop Flag Enable"),
      I_("TO:Shareholder Does Not Exist"),
      I_("TO: Account Does Not Exist"),
      I_("FR:Current Unit Value Not Found"),
      I_("FR/TO:Not An Allowed Transfer"),
      I_("FR:Account Not Active At Trade Date"),
      I_("Transaction Requires Approval"),
      I_("Net Transfer Entered Without Fee Amount"),
      I_("FR:Invalid Fund"),
      I_("FR:Transfer Not Allowed For Fund"),
      I_("FR:Fund Fee Detail Not Found/Defined"),
      I_("TO:Invalid Fund"),
      I_("To:Transfer No Allowed For Fund"),
      I_("TO:Fund Fee Detail Not Found/Defined"),
      I_("Must"),
      I_("FR:No Fund Found For Account"),
      I_("FR:Insufficient Funds As At Trade Date"),
      I_("FR:Unissued Certificate Units Exist"),
      I_("TO:Current Unit Value Not Found"),
      I_("TO:Fee Waived For This Account"),
      I_("TO:Fee Entered Without an Over-ride"),
      I_("TO:Net Purch Entered Without Fee Amount"),
      I_("TO:Fee Override, No Fee Defined"),
      I_("TO:Less Than Minimum Initial Purchase"),
      I_("TO:Less Than Minimum Allowable Purchase"),
      I_("Effective Contract Plan Does Not Exist"),
      I_("FR:Effective Contract Plan Not Exist"),
      I_("Payment Code Valid Only for DIRECT Purch"),
      I_("Payment Code Valid Only for DOLLAR Purch"),
      I_("Payment Code Valid Only for GROSS Purch"),
      I_("FR/TO: Contract Tnfr MUST be FULL Amount"),
      I_("Payment Code MUST be : P or Blank"),
      I_("Acq/Admin Fee Calculate during Night Run"),
      I_("Currency not allowed in this tax type"),
      I_("Stop Date of Fund less than or equal to Trade Date"),
      I_("Stop Date is before Start Date"),
      I_("Price not found"),
      I_("No transfer between RRSP and RRSP spousal"),
      I_("ERROR: ENTIRE ACCOUNT IS RESTRICTED."),
      I_("WARNING: ENTIRE ACCOUNT IS RESTRICTED! DO YOU WISH TO CONTINUE?"),
      I_("PENDING TRADE(S) MAY BE INTERRUPTED. DO YOU WISH TO PROCEED?"),
      I_("'TO' POLICY HAS A TITLES RESTRICTION. DO YOU WISH TO PROCEED WITH TRAN"),
      I_("Exchange: Price Not Found for Percent Free"),
      I_("LLP Error"),
      I_("Estate Error"),
      I_("Invalid AllFundTransfer - with assignment"),
      I_("Invalid AllfundTransfer - with Loan(s)"),
      I_("Invalid AllFundTransfer - with certificate"),
      I_("AIP withdrawal exists, transfer to another RESP not allowed"),
      I_("Cannot apply RESP OC withdrawal to invalid year"),
      I_("Invalid CESG repayment reason code"),
      I_("Invalid RESP EAP/PSE information"),
      I_("Original Trade cannot be cancelled"),
      I_("Original Trade not found"),
      I_("DP 17, RD 64/65 can only be used for RESP to RESP transfer"),
      I_("Insufficient notional balance to cancel RESP transfer"),
      I_("Settling grant repayment by units is not allowed"),
      I_("Net transaction amount exceeds net CESG owing"),
      I_("Exchange rate for tax calculation not found"),
      I_("Negative Guarantees following must be cancelled (rebook at will)."),
      I_("Commission less than minimum allowed"),
      I_("Province of LIRA/LIF/LRIF must be same"),
      I_("Transfer-Out Transaction record not found"),
      I_("Maximum Payout amount will be exceeded"),
      I_("Transfer-In Transaction record not found"),
      I_("Transfer-Out Fund-Mstr not found"),
      I_("Transfer-In Fund-Mstr not found"),
      I_("Transfer-Out ContractType not found"),
      I_("Transfer-Out Account-Contract not found"),
      I_("Transfer-In ContractType not found"),
      I_("Transfer-In Account-Contract not found"),
      I_("Transfer-Out Contract Master not found"),
      I_("To account is locked."),
      I_("Exchange out fee is below min"),
      I_("Exchange out fee exceeds max"),
      I_("No Family Code for Shareholder"),
      I_("No Family Code for IN Shareholder"),
      I_("Error Calculating Family Market Value"),
      I_("Family Market Value = 0.0"),
      I_("Error Finding FamilyDSC Information"),
      I_("Total Family Deposits = 0."),
      I_("Error Updating FamilyDSC Record"),
      I_("PAC Not allowed for this Fund"),
      I_("SWP not allowed for this fund"),
      I_("Auto-xfer IN not allowed for this fund"),
      I_("Auto-xfer OUT not allowed for this fund"),
      I_("Nationality is not populated"),
      I_("PAC amount is less than initial minimum purchase"),
      I_("Auto Transfer amount is less than initial minimum purchase"),
      I_("Auto Transfer fund is a capped fund"),
      I_("Account is ineligible for Pay Option 4"),
      I_("Missing Fee-Parms for FundGroup"),
      I_("Transfer In not allowed for Grandfathered AMS account"),
      I_("Grandfathered AMS A/c-ED/PAC not allowed aft full redempt"),
      I_("Maximum redemption % exceeded"),
      I_("Income Level field is required"),
      I_("Net Worth field is required"),
      I_("Risk Tolerance field is a required"),
      I_("Knowledge field is required"),
      I_("Business No. is applicable to corporate accounts only"),
      I_("Account Escrow Flag is set to Active"),
      I_("Active SWP exists on Account"),
      I_("Active PAC exists on Account"),
      I_("Excess fund/class is mandatory for AMS Global set up"),
      I_("Rounding fund/class is mandatory for AMS Global set up"),
      I_("Purchase of Fund/Class outside of AMS mix is not allowed"),
      I_("Date of Birth is a required field"),
      I_("Occupation is a required field"),
      I_("Date of Birth is missing"),
      I_("Missing Redemption Fee Setup"),
      I_("RepLevel must be > 3 for borrowed deals"),
      I_("RepLevel 1 cannot create new accounts"),
      I_("Backdates prior to DM event are not allowed."),
      I_("Account cannot be closed account Value > 0"),
      I_("English/French MFOL Name is mandatory for AMS global set up."),
      I_("Valid SIN is required for RESP accounts"),
      I_("Start, End or Maturity Date is blank."),
      I_("Inactive pol. has the same maturity date."),
      I_("Systematic plan not transfered for switch."),
      I_("Systematic plan not transfered for switch to different account."),
      I_("Redemption amount is greater than account balance"),
      I_("Transfer/Exchange amount is greater than account balance"),
      I_("Transfer-In Fund-Info record not found"),
      I_("Transfer-In Contract Master not found"),
      I_("Accounts with Unsettled Trades are ineligible for AMS"),
      I_("Accounts with Pending Trades are ineligible for AMS rebalancing"),
      I_("Error to determine Closing Decade"),
      I_("LSIF Redrules record not available"),
      I_("SalesRepCode should only be 5 characters"),
      I_("AWD Comment is blank"),
      I_("Offer price not found"),
      I_("Reinvestment price not found"),
      I_("Discount fee model not found"),
      I_("Invalid settlement currency for Fund"),
      I_("Fees can not be covered by transaction amount"),
      I_("Account must be PUEV capable if Fund is PUEV capable"),
      I_("Shareholder fee model code is missing"),
      I_("Fund must be PUEV capable if Account is PUEV capable"),
      I_("Reinvest FEL commission can not be negative"),
      I_("Both accounts and both funds must be PUEV capable"),
      I_("Fund is Investro Capable but the fund broker's routing type is not Investro"),
      I_("Fund is not Investro Capable but the fund broker's routing type is Investro"),
      I_("Price of 3rd party fund is equal 0."),
      I_("StaticPendingTrade Info not available"),
      I_("Client defined maturity date is not available"),
      I_("Structured Notes Info not found"),
      I_("CD policy(s) impacted by DOB change"),
      I_("DOB change impacts matured/reset policy"),
      I_("Wire Order Number exceeds 10 characters"),
      I_("New date of birth cannot be blank"),
      I_("New Legal Contract Maturity date cannot be less than  Maturity Date"),
      I_("Transactions cannot exist after old/new closing decade start date"),
      I_("Country code for banking information is required."),
      I_("Cannot calculate EUSD."),
      I_("Sender Ref No. is required when NetworkID is not blank"),
      I_("User-defined maturity date less than  years from Account Effective Date."),
      I_("No Transfer/Exchange rule defined for the Trade Date."),
      I_("Maturity Date of TO side does not match with TI side."),
      I_("Pending trades cannot exist in old/new closing decade"),
      I_("User-defined maturity date less than  years from Reset Effective Date."),
      I_("Client-Defined Maturity Date must be  years greater than Reset Date."),
      I_("User-defined Maturity Date cannot be blank."),
      I_("User-defined Deposit Maturity Date greater than Legal Contract Maturity Date."),
      I_("User-defined Contract Maturity Date greater than Legal Contract Maturity Date."),
      I_("No active policy found to get the maturity date."),
      I_("Warning:GUARANTEE ADJUSTMENT EXISTS FOR THE ACCOUNT CONTRACT AFTER TRADE DATE."),
      I_("THERE HAS BEEN GUARANTEE ADJUSTMENT(S) SINCE THE ORIGINAL TRADE."),
      I_("The guarantee adjustment record(s) must be cancelled before processing backdated transaction."),
      I_("Guarantee Units do not balance with transaction units."),
      I_("SEG history status mismatch: SEG history is available for TI-side as of the trade date but is not available for TO-side."),
      I_("SEG history status mismatch: SEG history is available for TO-side as of the trade date but is not available for TI-side."),
      I_("Guarantee Adjustments need to be cancelled before DOB change due to Reduction Age impact"),
      I_("Warning:Guarantee Adjustment exists after trade date for the Account."),
      I_("Warning:Unit adjustment required for Account."),
      I_("Possible EUSD tax calc effect on subsequent Money out Transaction."),
      I_("Please cancel money out transaction."),
      I_("Duplicate SIN found in entity list."),
      I_("Annuitant is older than latest age to open/purchase years."),
      I_("not available for purchase."),
      I_("Non-numeric value assigned to numeric field."),
      I_("Many to Many Xfer with source funds of diff fund currencies."),
      I_("Invalid Trade in split comm environment."),
      I_("Missing or Invalid allocation info."),
      I_("Invalid trade amount."),
      I_("Fund/Class is not valid in Group."),
      I_("Invalid custom trading schedule"),
      I_("Missing custom trading schedule"),
      I_("Transaction not allowed during settlement phase"),
      I_("Maximum event(s) for the year exceeded"),
      I_("Pending/Settled trades/events exist on or after the event effective date"),
      I_("The valid period for the event is between"),
      I_("Missing exchange rate for multicurrency trade"),
      I_("Invalid Event Effective Date"),
      I_("Active Event Schedule already exists"),
      I_("There have been manual event(s) since the original trade date"),
      I_("Invalid PUD code for acct closing redcode!"),
      I_("Event is not allowed during closing period"),
      I_("The new user-defined CMD should be after the existing CMD"),
      I_("Reset can be processed only  year(s) before CMD"),
      I_("PAC stop date impacted by DOB change"),
      I_("DOB impacts CMD after date reset"),
      I_("Payment for both Redemption and Distribution must be setup"),
      I_("Cannot find time zone information"),
      I_("Holdback amount >= available units."),
      I_("Both sides of Transfer/Exchange must be either settled or unsettled in order for trade to be cancelled."),
      I_("Invalid Settlement type indicator."),
      I_("Transaction number not found."),
      I_("Transaction number is missing."),
      I_("WireOrder number is missing."),
      I_("External ID is missing."),
      I_("External ID type is missing."),
      I_("Fund code is missing."),
      I_("Class code is missing."),
      I_("Transaction type is missing."),
      I_("Trade Date is missing."),
      I_("Settle Date is missing."),
      I_("Transaction cannot be found for settlement."),
      I_("Account number cannot be found."),
      I_("Fund code cannot be found."),
      I_("Class code cannot be found."),
      I_("Gross/Net indicator is missing."),
      I_("Stop Redemption Settle Flag is set to Yes."),
      I_("Redemption Amount is greater than account balance."),
      I_("iFAST Trans-Rec-Xref table not available."),
      I_("Internal iFAST issue - no active settlement batch was found."),
      I_("Transaction previously settled."),
      I_("WireOrder number cannot be found."),
      I_("External ID cannot be found."),
      I_("External ID type cannot be found."),
      I_("Transaction Type cannot be found."),
      I_("Trade Date cannot be found."),
      I_("Settlement Date cannot be found."),
      I_("Invalid Gross/Net indicator. Must be G or N."),
      I_("Account number is missing."),
      I_("Number of fields of record line are less that expected."),
      I_("Broker code is missing."),
      I_("TO/EO transaction must be settled."),
      I_("Contribution is not allowed for non-resident for TaxType"),
      I_("Contrib. date is outside the allowed dates for TaxType"),
      I_("Cancellation Failure refer to REVRSLOG.D report"),
      I_("Reversal or adjustment placed in another Account, Fund, or Class"),
      I_("Original Trade Cancelled or not Found"),
      I_("Mirror - Cancellation Failure refer to REVRSLOG.D report"),
      I_("Split Commission does not match Fee"),
      I_("No Paying Agent Found"),
      I_("Tax Jurisdiction not found Paying Agent"),
      I_("Tax Jurisdiction not found for Owner"),
      I_("No active owner found"),
      I_("Invalid selection. Deposit Code is applicable for Sibling Only accounts"),
      I_("Invalid selection. Beneficiary is not linked to a PCG."),
      I_("PCG exists,please de-link PCG for non-sibling only accounts."),
      I_("Error corrections not allowed for settled trades on RESP accounts"),
      I_("Error corrections not allowed for trades submitted to HRSDC on RESP accounts"),
      I_("DP 20,73,74,75,76 or RD 75,76,83 not allowed in Transfer."),
      I_("Account is not Sibling Only. Grant Amount is not applicable"),
      I_("Beneficiary is not linked to a PCG. Grant Amount is not applicable"),
      I_("Beneficiary is not eligible for CLB since his Date of Birth is greater than 01/01/2004"),
      I_("CLB Amount cannot be transferred since SIN of from and to Beneficiary are different"),
      I_("Redemption code is invalid since beneficiary is non-resident"),
      I_("Fund is Front End Load with commission greater than zero"),
      I_("DSC amount is greater than the amount attributed to income in the EAP"),
      I_("Redemption code '77' applicable only for non-resident beneficiaries"),
      I_("Beneficiary's Date of Birth is missing"),
      I_("Beneficiary's Gender is missing"),
      I_("Beneficiary is over 21 and trade cannot be processed"),
      I_("Termination date should be 25 years from Inception date."),
      I_("Pending and Cancelled Status not applicable"),
      I_("No Bus-Day record available"),
      I_("No Fund-Mstr record available"),
      I_("No fund-group-type record with Valn grouptype available"),
      I_("Fund record not available in Fund-Group-List"),
      I_("The Fund Group Type and Fund Group are not available in FundSched"),
      I_("Error in RUNRIF51"),
      I_("Error in RUNRIF52"),
      I_("Reset RUNRIFInfo control before restarting"),
      I_("Account:Less than minimum Initial Purchase"),
      I_("Account:Less than minimum Allowable Purchase"),
      I_("Account:Purchase not allowed for Fund"),
      I_("Account:Redemption not allowed for Fund"),
      I_("Account:TO:Transfer not allowed for Fund"),
      I_("Account:FROM:Transfer not allowed for Fund"),
      I_("Account:Less than Minimum Fund/Class Balance"),
      I_("Broker:Less than minimum Initial Purchase"),
      I_("Broker:Less than minimum Allowable Purchase"),
      I_("Broker:Purchase not allowed for Fund"),
      I_("Broker:Redemption not allowed for Fund"),
      I_("Broker:TO:Transfer not allowed for Fund"),
      I_("Broker:FROM:Transfer not allowed for Fund"),
      I_("Broker:Less than Minimum Fund/Class Balance"),
      I_("Branch:Less than minimum Initial Purchase"),
      I_("Branch:Less than minimum Allowable Purchase"),
      I_("Branch:Purchase not allowed for Fund"),
      I_("Branch:Redemption not allowed for Fund"),
      I_("Branch:TO:Transfer not allowed for Fund"),
      I_("Branch:FROM:Transfer not allowed for Fund"),
      I_("Branch:Less than Minimum Fund/Class Balance"),
      I_("Sales Rep:Less than minimum Initial Purchase"),
      I_("Sales Rep:Less than minimum Allowable Purchase"),
      I_("Sales Rep:Purchase not allowed for Fund"),
      I_("Sales Rep:Redemption not allowed for Fund"),
      I_("Sales Rep:TO:Transfer not allowed for Fund"),
      I_("Sales Rep:FROM:Transfer not allowed for Fund"),
      I_("Sales Rep:Less than Minimum Fund/Class Balance"),
      I_("Less than Minimum Fund/Class Balance"),
      I_("Deposit type not allowed for RedCode"),
      I_("Allowed Transfer is from LonckIn to Non LockedIn Registered"),
      I_("Allowed Transfer is from LonckIn to Non Registered"),
      I_("Redeem not allowed for reason code bankruptcy"),
      I_("Order type should be wire for partcipant transfer."),
      I_("Order type should be direct for non-partcipant transfer."),
      I_("Inactive Dealer / Ineligible Broker for AMS"),
      I_("Stop purchase or Redemption flag active for AMS A/C"),
      I_("Minimum AMS investment not met"),
      I_("Mixed currency fund in AMS model"),
      I_("Fund/Class  is Soft Capped"),
      I_("AMS Eligibility"),
      I_("Fund Load Group not the same under AMS Allocation Set-up"),
      I_("AMS set-up not allowed for Institutional Account"),
      I_("redemption Code is not allowed for transfer"),
      I_("From this account you can transfer only to RRSP or RRIF account"),
      I_("Account Category Private not applicable to account type and account designation"),
      I_("Aggr amt below fundloadgrp min init amt!"),
      I_("Account: Fund/Class  is Soft Capped!"),
      I_("KYC information is missing"),
      I_("Management fee model is missing"),
      I_("RESP NASU not available on desktop"),
      I_("Entry of spouse's date of birth is not allowed."),
      I_("Spouse's date of birth must be less than or equal to accountholder's age."),
      I_("Invalid payment period"),
      I_("Account has active certificate units"),
      I_("Account value is locked."),
      I_("New money-in for Tax Type Schedule is not allowed after"),
      I_("Redemption is contrary to client guarantee guard protection setting rules"),
      I_("Transfer is contrary to client guarantee guard protection setting rules"),
      I_("No Eligible Contracts in this account"),
      I_("Accounts have different SiblingOnly status - Ensure transfer meets regulations"),
      I_("An active SWP exists setup with GMWB funds"),
      I_("An active Dynamic SWP exists setup with GMWB funds"),
      I_("Invalid/Blank  Regulatory Standard"),
      I_("PayType for requested Payment Instruction should be set to EFTfor redemption payments"),
      I_("Account number  does not exist"),
      I_("Account number should be different from that of ED trade"),
      I_("An active Dynamic SWP exists setup with non-GMWB funds"),
      I_("Duplicate Rule Type is not allowed."),
      I_("Both Mgmt Fee Rebate and Mgmt Fee flags can not be true at the same time."),
      I_("Beneficiary Age is over 31 and trade cannot be processed"),
      I_("Termination date should be 35 years from Inception date"),
      I_("Invalid Fund Code for Fund on fund Category"),
      I_("User Defined Maturity Date should be  years from the issuedate"),
      I_("Redemption  exceeds Grant Plus Earnings"),
      I_("EAP Amount exceeds Market Value"),
      I_("AMS Effective Date Backdated"),
      I_("Residence Province and Tax Jurisdiction can not be left Unassigned"),
      I_("The requested amount has exceeded the minimum"),
      I_("This transaction may exceed the remaining minimum amount and may be rejected in the cycle"),
      I_("Demographics Data is required."),
      I_("KYC Document List Data is required"),
      I_("Fee Code is not defined, cannot store deducted fee."),
      I_("Direct Deposit Banking setup is available only to default banking of non-registered client held account"),
      I_("Direct Deposit Banking is applied only to Canadian Bank"),
      I_("Direct Deposit Banking is applied only to Canadian Dollar Fund"),
      I_("Contract Versions of TO and TI sides do not match"),
      I_("Joint Life Entity required before processing a joint election."),
      I_("Age of Annuitant/Joint Life Entity Surpasses the maximum age allowed."),
      I_("Account balance is above the SFIR threshold amount"),
      I_("LWA Option of TO and TI sides do not match"),
      I_("Direct Deposit Banking and/or Investor Authorize missing"),
      I_("There are investor authorization setup that missing direct deposit banking Informaion"),
      I_("There are direct deposit banking setup that missing investor authorization Informaion"),
      I_("Settlement Location is missing"),
      I_("Fee is not eligible for Net Trading"),
      I_("Fed tax rate is less than the default value"),
      I_("Prov tax rate is less than the default value"),
      I_("Banking Information is not verified (for trade)"),
      I_("Banking Information is not verified (for settlement)"),
      I_("Fund has certificate units"),
      I_("Shareholder Address is not verified (for trade)"),
      I_("Shareholder Address is not verified (for settlement)"),
      I_("Banking Info has pending or unsettled trade association"),
      I_("Exchange rate for trade date is not found."),
      I_("Traded unit calculation error. Please call system support."),
      I_("DSK:TUP Oversell encountered on a redemption"),
      I_("DSK:TUP Oversell encountered on a transfer out"),
      I_("DSK:TUP Oversell encountered on an exchange out"),
      I_("WEB:TUP Oversell encountered on a redemption"),
      I_("WEB:TUP Oversell encountered on a transfer out"),
      I_("WEB:TUP Oversell encountered on a exchange out"),
      I_("Statement frequency cannot be less than 'Quarterly'."),
      I_("Statement frequency cannot be less than 'Monthly'."),
      I_("Settlement is not allowed during final cycle run."),
      I_("QESI Life Time Grant Limit Exceeded."),
      I_("Insufficient QESI Grants."),
      I_("Refund of Special Taxes exceed Redemption."),
      I_("No Lifetime Contribution Limits has been set up."),
      I_("No Annual Contribution Limits has been set up."),
      I_("Error finding Fee Parms for Fund/Class."),
      I_("No Broker/Branch/Rep found for Account."),
      I_("Error finding Fee Parms for Account and/or Family Code."),
      I_("Warning: Broker is not eligible for Trailer Fee."),
      I_("Warning: Broker/Branch/Rep is not eligible for Trailer Fee."),
      I_("Warning: Broker Trailer Fee Pay Frequency not the same as Run Frequency."),
      I_("Warning: Broker/Branch/Rep has been stopped."),
      I_("Balance for Account/Fund/Class is 0."),
      I_("Warning: Fee Parameter Fee Type must be Percent."),
      I_("Missing Account History for Account."),
      I_("Error finding Fee Parms for Broker/Branch/Rep."),
      I_("Units in AcctBal does not match with InvAsOf"),
      I_("RESP/Family RESP trading is not supported."),
      I_("RESP specific edit check is not being performed."),
      I_("Eligible Trailer Fee is 0 since the Broker/Rep asset aggr is less than $100000."),
      I_("Inventory Tracking is not on for Fund/Class that is GrandFathered."),
      I_("CESG Amount to be returned because of this redemption."),
      I_("This transaction will reduce the YTD contribution to negative"),
      I_("Eligible Balance Type and Split By currently not supported."),
      I_("NEQ already exists."),
      I_("NEQ is missing."),
      I_("DP 78,79,80,81 or RD Q1,Q2,Q3 are not allowed."),
      I_("Election of LWA Age Rate  is only allowed when LWA Rates between accounts is the same."),
      I_("Transfer Option Purchase could not be processed."),
      I_("Account Balance is less than transaction amount"),
      I_("Notional balance is less than entered transaction amount"),
      I_("Amendment may be required"),
      I_("Adjustment may be required"),
      I_("Trade exist for tax year"),
      I_("You may need to add new Grant Request for applicable tax year"),
      I_("You may need to stop Grant Request for applicable tax year"),
      I_("You may need to flip status to Request or create new request for applicable tax year"),
      I_("SIN Effective date is mandatory"),
      I_("Guarantee Guard not same between TO/TI accounts"),
      I_("Transfer Proces failed due to run time error"),
      I_("AIP withdrawal exists, payment to non-resident Owner is not allowed"),
      I_("Entity Address is missing"),
      I_("System will trigger amendment and recalculate QESI notional balance for the tax year"),
      I_("SIN Effective date for RESP beneficiary cannot be unknown"),
      I_("SIN Effective date for RESP beneficiary cannot be earlier than the Date of birth"),
      I_("SIN Effective date for RESP beneficiary cannot be a future date"),
      I_("Dealer's Trailer Payment Frequency changed after first month of quarter end"),
      I_("Inventory Event failed to find the appropriate age group to age the units"),
      I_("Broker's Trailer Payment Frequency changed."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_041_007_000_000;
   const BFSubstitutionSet SubSet_002_041_007_000_000(
    &aKeys_002_041_007_000_000[0], &aValues_002_041_007_000_000[0] );
   // Substitution set RejCodeSet.  Language: esEs
   static const I_CHAR* aKeys_002_041_008_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("106"),
      I_("107"),
      I_("11"),
      I_("117"),
      I_("118"),
      I_("119"),
      I_("12"),
      I_("120"),
      I_("121"),
      I_("122"),
      I_("123"),
      I_("125"),
      I_("127"),
      I_("128"),
      I_("129"),
      I_("13"),
      I_("134"),
      I_("135"),
      I_("136"),
      I_("137"),
      I_("138"),
      I_("139"),
      I_("14"),
      I_("140"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("181"),
      I_("182"),
      I_("183"),
      I_("184"),
      I_("186"),
      I_("187"),
      I_("188"),
      I_("189"),
      I_("19"),
      I_("190"),
      I_("191"),
      I_("192"),
      I_("193"),
      I_("194"),
      I_("195"),
      I_("196"),
      I_("197"),
      I_("198"),
      I_("199"),
      I_("20"),
      I_("200"),
      I_("202"),
      I_("203"),
      I_("204"),
      I_("205"),
      I_("206"),
      I_("207"),
      I_("208"),
      I_("209"),
      I_("21"),
      I_("210"),
      I_("211"),
      I_("212"),
      I_("216"),
      I_("217"),
      I_("218"),
      I_("219"),
      I_("22"),
      I_("221"),
      I_("222"),
      I_("223"),
      I_("224"),
      I_("229"),
      I_("23"),
      I_("230"),
      I_("231"),
      I_("232"),
      I_("236"),
      I_("237"),
      I_("238"),
      I_("239"),
      I_("24"),
      I_("240"),
      I_("241"),
      I_("242"),
      I_("243"),
      I_("244"),
      I_("245"),
      I_("246"),
      I_("247"),
      I_("248"),
      I_("249"),
      I_("25"),
      I_("250"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("300"),
      I_("305"),
      I_("31"),
      I_("314"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("89"),
      I_("90"),
      I_("91"),
      I_("92"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("96"),
      I_("97"),
      I_("98"),
      I_("99"),
      I_("100"),
      I_("116"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("260"),
      I_("261"),
      I_("262"),
      I_("263"),
      I_("266"),
      I_("316"),
      I_("317"),
      I_("319"),
      I_("320"),
      I_("321"),
      I_("322"),
      I_("324"),
      I_("325"),
      I_("326"),
      I_("327"),
      I_("328"),
      I_("329"),
      I_("330"),
      I_("331"),
      I_("332"),
      I_("333"),
      I_("335"),
      I_("102"),
      I_("111"),
      0x00
   };

   static const I_CHAR* aValues_002_041_008_000_000[] = {
      I_("No Primary Master Record Exists"),
      I_("No Account Master Record Exists"),
      I_("Fund Fee Detail Not Foiund/Defined"),
      I_("BEL must be Acq and Admin Fee = 0, Prcnt"),
      I_("BackEnd Net Order must not"),
      I_("Current Unit Value Not Found"),
      I_("Account Not Active at Trade Date"),
      I_("Group Purchase Stop Flag Enables"),
      I_("Account Purchase Stop Flag Enables"),
      I_("ROA not available for this account"),
      I_("Holdback Exist. Reject whole transaction"),
      I_("Holdback $ = Avail $ and Settle method 2 is used."),
      I_("Holding"),
      I_("Holding Fund Detail does not exist"),
      I_("Exceed users setup amount"),
      I_("Fee Waived For this Account"),
      I_("WARN: Dollars must be rounded to Cents"),
      I_("Units Rounding Factor exceeds Unitsprecis"),
      I_("Invalid deposit code for tax type"),
      I_("Fee Entered Without An Over-ride"),
      I_("No Account Value Record Exists"),
      I_("Transaction must be Varified"),
      I_("TI: Exchange Rate does not exist"),
      I_("WARN: Fund Max Subsequent Contrib Exceed"),
      I_("Transaction must be Verified"),
      I_("The Exchange Rate does not exist"),
      I_("WARN: Fund Max Initial Deposit Exceeded"),
      I_("Unit value is equal to zero"),
      I_("Net Purchase Entered Without Fee Amount"),
      I_("The remaining minimum amount must be paid first"),
      I_("Remaining account balance is insufficient to cover"),
      I_("Tax Type Rules not available for account tax type"),
      I_("Scheduled Payment Information not available"),
      I_("Redemption Code Rules not setup"),
      I_("Account Master Table not on file"),
      I_("Fee Override, No Fee Defined"),
      I_("The remaining minimum amount redemption was not pr"),
      I_("Invalid Fund is Indicated"),
      I_("Purchase not allowed for Fund and Class"),
      I_("Invalid Fund for registered account"),
      I_("WARN:Less Than Mininum Initial Purchase"),
      I_("WARN:Less Than Min Fund/Class Balance"),
      I_("WARN:Less Than Minimum Account Balance"),
      I_("WARN:Less Than Min Initial Redemption"),
      I_("WARN:Less Than Min Subsequent Redemption"),
      I_("ESOP  Contribution Exceeds yearly limit"),
      I_("Fund is not ESOP Eligible"),
      I_("Processing Redemption from ESOP Investment Plan"),
      I_("Processing Redemption from ESOP Participation Plan"),
      I_("WARN: Less Than Minimum Allowable Purch."),
      I_("ESOP Transfer must close the Account"),
      I_("Purchasing Security for"),
      I_("Whole Share fund purchase not pre-processed"),
      I_("Net Whole Share redemptions are not allowed"),
      I_("Cannot transfer Out of an ESOP Account"),
      I_("Cannot transfer In of an ESOP Account"),
      I_("No S.W. Ps allowed from ESOP Account"),
      I_("No Amount Available in Cash-holding Fund"),
      I_("Redemption Code not allowed for ESOP"),
      I_("No Amount Available in Cash-holding Fund"),
      I_("Less Than Minimum Allowable P.A.C."),
      I_("Redemption Code not allowed for ESOP"),
      I_("Invalid Settlement source"),
      I_("Invalid Settlement Source for Account Designation<"),
      I_("Invalid Order Source"),
      I_("Invalid Settlement Type"),
      I_("Invalid Settlement Type for Dealer/Intermediary<1>"),
      I_("Wire Order Redemption not allowed for Fund<1>"),
      I_("Invalid Order Source for Account Designation<1>"),
      I_("The Intermediary is not permitted to enter wire or"),
      I_("Commission > Maximum Allowed"),
      I_("<1> is not permitted to enter money market wire or"),
      I_("No Dealer Information available for Broker Code"),
      I_("Account has an valid loan!Must enter a valid sourc"),
      I_("RESP Plan Limit exceeded"),
      I_("RESP Year Limit exceeded"),
      I_("RESP redemption exceed Contribution"),
      I_("RESP Redemption exceed Earnings"),
      I_("Previous Y/E Re-Calculation"),
      I_("Fund is Capped"),
      I_("Contract Account Status is Active"),
      I_("Contract Account Status is not Active"),
      I_("Contract Account Status is Death Status"),
      I_("Must enter a Death Claim Redemption Code"),
      I_("WARNING:TRADE >= 30 DAYS OLD"),
      I_("Dealer cannot settle orders place by Intermediary."),
      I_("Deposit ID is mandatory."),
      I_("SIsrep is not permitted new business activities"),
      I_("Not enough grant left for return"),
      I_("DP 20 or RD 61,83,84 not allowed in Transfer"),
      I_("Error when creating Escrow Entity"),
      I_("No RESP Beneficiary selected"),
      I_("This is not a contract Account"),
      I_("No originating contribution selected"),
      I_("RESP  Redmption exceed Earnings"),
      I_("Trade Date > Contribution Term Date"),
      I_("This type of transaction is not supported for Fami"),
      I_("For RESP to RESP tranfer only RD 64 and DP 17 are"),
      I_("RESP transfer amount may be too high"),
      I_("Allocations not fully supported for RESP"),
      I_("Allocation not fully supported for Family Plan RES"),
      I_("EFT has been Transmitted, Do you want to continue?"),
      I_("No RESPContrDetl record available"),
      I_("Effective Contract Plan does not exist"),
      I_("Not enough grant amount for return"),
      I_("Trans Type must be ED - for contract"),
      I_("Order Type must be Direct"),
      I_("Unit Code must be D - dollars"),
      I_("Gross/Net must be Gross"),
      I_("Payment must be multiple of Payment Amt."),
      I_("Non integer amount for zero precision currency"),
      I_("Fractional Values not Allowed in this Currency"),
      I_("Maximum"),
      I_("Invalid Transfer is Kind"),
      I_("Initial payments are not valid for PIP"),
      I_("Payment Less Than Minimum Init Payment"),
      I_("No Scale Detail record found"),
      I_("FIFO units do NOT exist"),
      I_("Batch  is ACTIVE"),
      I_("Batch is LOCKED"),
      I_("Batch does NOT exist"),
      I_("FROM/TO: Contract Transfer Failed"),
      I_("FROM/TO: Trans Not Found in Contract Trf"),
      I_("Group Redemption Stop Flag Enabled"),
      I_("Redemption Stop Flag Enabled"),
      I_("Assigned Flag Enabled"),
      I_("Inconsistentm Fee Charged"),
      I_("Only 3,4,5,6,10,11 allowed for RRIF plan"),
      I_("Net Trade Entered Without a Fee Amount"),
      I_("Full Redemption Not Allowed on"),
      I_("Redemption Not Allowed for Fund & Class"),
      I_("Invalid Remption Code"),
      I_("Red: available units = 0.00"),
      I_("Dealer Not Authorized to Deal a Fund"),
      I_("A Back Net Order cannot have admin. Fee"),
      I_("No Funds Found For Account"),
      I_("Insufficient Funds As At Trade Date"),
      I_("Unissued Certiificate Units exist"),
      I_("Cannot update Manual/Suppressed Cheque"),
      I_("Trn: available Units = 0.00"),
      I_("WARN/FR: Effective PAC Does Not Exist"),
      I_("TO:Effective PAC Exists"),
      I_("TO Effective PAC Exists/FR:PAC Not Found"),
      I_("FR:Group Tnsfr/Redem Stop Flag Enabled"),
      I_("FR:Account Tnsfr/Redem Stop Flag Enable"),
      I_("FR:Shareholder Does Not Exist"),
      I_("FR:Account Does Not Exist"),
      I_("TO:Account Not Active At Trade Date"),
      I_("TO:Group Tnsfr/Purch Stop Flag Enabled"),
      I_("TO:Account Tnsfr/Purch Stop Flag Enable"),
      I_("TO:Shareholder Does Not Exist"),
      I_("TO: Account Does Not Exist"),
      I_("FR:Current Unit Value Not Found"),
      I_("FR/TO:Not An Allowed Transfer"),
      I_("FR:Account Not Active At Trade Date"),
      I_("Transaction Requires Approval"),
      I_("Net Transfer Entered Without Fee Amount"),
      I_("FR:Invalid Fund"),
      I_("FR:Transfer Not Allowed For Fund"),
      I_("FR:Fund Fee Detail Not Found/Defined"),
      I_("TO:Invalid Fund"),
      I_("To:Transfer No Allowed For Fund"),
      I_("TO:Fund Fee Detail Not Found/Defined"),
      I_("Must"),
      I_("FR:No Fund Found For Account"),
      I_("FR:Insufficient Funds As At Trade Date"),
      I_("FR:Unissued Certificate Units Exist"),
      I_("TO:Current Unit Value Not Found"),
      I_("TO:Fee Waived For This Account"),
      I_("TO:Fee Entered Without an Over-ride"),
      I_("TO:Net Purch Entered Without Fee Amount"),
      I_("TO:Fee Override, No Fee Defined"),
      I_("TO:Less Than Minimum Initial Purchase"),
      I_("TO:Less Than Minimum Allowable Purchase"),
      I_("Effective Contract Plan Does Not Exist"),
      I_("FR:Effective Contract Plan Not Exist"),
      I_("Payment Code Valid Only for DIRECT Purch"),
      I_("Payment Code Valid Only for DOLLAR Purch"),
      I_("Payment Code Valid Only for GROSS Purch"),
      I_("FR/TO: Contract Tnfr MUST be FULL Amount"),
      I_("Payment Code MUST be : P or Blank"),
      I_("Acq/Admin Fee Calculate during Night Run"),
      I_("Currency not allowed in this tax type"),
      I_("Stop Date of Fund less than or equal to Trade Date"),
      I_("Stop Date is before Start Date"),
      I_("Price not found"),
      I_("No transfer between RRSP and RRSP spousal"),
      I_("ERROR: ENTIRE ACCOUNT IS RESTRICTED."),
      I_("WARNING: ENTIRE ACCOUNT IS RESTRICTED! DO YOU WISH TO CONTINUE?"),
      I_("PENDING TRADE(S) MAY BE INTERRUPTED. DO YOU WISH TO PROCEED?"),
      I_("'TO' POLICY HAS A TITLES RESTRICTION. DO YOU WISH TO PROCEED WITH TRAN"),
      I_("Exchange: Price Not Found for Percent Free"),
      I_("LLP Error"),
      I_("Estate Error"),
      I_("Invalid AllFundTransfer - with assignment"),
      I_("Invalid AllfundTransfer - with Loan(s)"),
      I_("Invalid AllFundTransfer - with certificate"),
      I_("AIP withdrawal exists, transfer to another RESP not allowed"),
      I_("Cannot apply RESP OC withdrawal to invalid year"),
      I_("Invalid CESG repayment reason code"),
      I_("Invalid RESP EAP/PSE information"),
      I_("Original Trade cannot be cancelled"),
      I_("Original Trade not found"),
      I_("DP 17, RD 64/65 can only be used for RESP to RESP transfer"),
      I_("Insufficient notional balance to cancel RESP transfer"),
      I_("Settling grant repayment by units is not allowed"),
      I_("Net transaction amount exceeds net CESG owing"),
      I_("Exchange rate for tax calculation not found"),
      I_("Negative Guarantees following must be cancelled (rebook at will)."),
      I_("Commission less than minimum allowed"),
      I_("Province of LIRA/LIF/LRIF must be same"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_041_008_000_000;
   const BFSubstitutionSet SubSet_002_041_008_000_000(
    &aKeys_002_041_008_000_000[0], &aValues_002_041_008_000_000[0] );
   // Substitution set RejCodeSet.  Language: enGB
   static const I_CHAR* aKeys_002_041_009_000_000[] = {
      I_("101"),
      I_("113"),
      I_("141"),
      I_("142"),
      I_("143"),
      I_("144"),
      I_("145"),
      I_("146"),
      I_("147"),
      I_("148"),
      I_("235"),
      I_("338"),
      I_("339"),
      I_("340"),
      I_("341"),
      I_("342"),
      I_("343"),
      I_("344"),
      I_("345"),
      I_("346"),
      I_("351"),
      I_("352"),
      I_("353"),
      I_("354"),
      I_("355"),
      I_("356"),
      I_("357"),
      I_("358"),
      I_("359"),
      I_("360"),
      I_("361"),
      I_("362"),
      I_("363"),
      I_("364"),
      I_("365"),
      I_("366"),
      I_("367"),
      I_("370"),
      I_("374"),
      I_("375"),
      I_("376"),
      I_("377"),
      I_("378"),
      I_("379"),
      I_("385"),
      I_("386"),
      I_("388"),
      I_("389"),
      I_("390"),
      I_("391"),
      I_("392"),
      I_("393"),
      I_("394"),
      I_("395"),
      I_("396"),
      I_("397"),
      I_("398"),
      I_("399"),
      I_("400"),
      I_("401"),
      I_("403"),
      I_("404"),
      I_("405"),
      I_("406"),
      I_("407"),
      I_("411"),
      I_("414"),
      I_("415"),
      I_("417"),
      I_("418"),
      I_("419"),
      I_("420"),
      I_("421"),
      I_("422"),
      I_("423"),
      I_("424"),
      I_("425"),
      I_("426"),
      I_("427"),
      I_("428"),
      I_("430"),
      I_("431"),
      I_("433"),
      I_("434"),
      I_("435"),
      I_("436"),
      I_("437"),
      I_("438"),
      I_("439"),
      I_("440"),
      I_("441"),
      I_("442"),
      I_("443"),
      I_("444"),
      I_("445"),
      I_("446"),
      I_("447"),
      I_("448"),
      I_("449"),
      I_("450"),
      I_("451"),
      I_("452"),
      I_("453"),
      I_("454"),
      I_("455"),
      I_("457"),
      I_("458"),
      I_("459"),
      I_("460"),
      I_("461"),
      I_("462"),
      I_("463"),
      I_("464"),
      I_("465"),
      I_("467"),
      I_("468"),
      I_("469"),
      I_("470"),
      I_("471"),
      I_("472"),
      I_("473"),
      I_("474"),
      I_("475"),
      I_("480"),
      I_("481"),
      I_("483"),
      I_("485"),
      I_("486"),
      I_("487"),
      I_("488"),
      I_("489"),
      I_("490"),
      I_("491"),
      I_("492"),
      I_("493"),
      I_("494"),
      I_("495"),
      I_("496"),
      I_("497"),
      I_("498"),
      I_("500"),
      I_("501"),
      I_("510"),
      I_("520"),
      I_("521"),
      I_("522"),
      I_("523"),
      I_("524"),
      I_("525"),
      I_("526"),
      I_("527"),
      I_("528"),
      I_("529"),
      I_("530"),
      I_("531"),
      I_("532"),
      I_("533"),
      I_("534"),
      I_("535"),
      I_("536"),
      I_("537"),
      I_("538"),
      I_("539"),
      I_("540"),
      I_("541"),
      I_("542"),
      I_("543"),
      I_("544"),
      I_("545"),
      I_("546"),
      I_("548"),
      I_("549"),
      I_("550"),
      I_("551"),
      I_("552"),
      I_("563"),
      I_("565"),
      I_("600"),
      I_("601"),
      I_("602"),
      I_("603"),
      I_("604"),
      I_("706"),
      I_("707"),
      I_("708"),
      I_("709"),
      I_("710"),
      I_("711"),
      I_("712"),
      I_("713"),
      I_("714"),
      I_("715"),
      I_("716"),
      I_("717"),
      I_("718"),
      I_("719"),
      I_("720"),
      I_("721"),
      I_("722"),
      I_("723"),
      I_("724"),
      I_("725"),
      I_("726"),
      I_("727"),
      I_("798"),
      I_("904"),
      I_("905"),
      I_("906"),
      I_("907"),
      I_("908"),
      I_("910"),
      I_("911"),
      I_("912"),
      I_("914"),
      I_("915"),
      I_("916"),
      I_("917"),
      I_("918"),
      I_("919"),
      I_("920"),
      I_("921"),
      I_("922"),
      I_("923"),
      I_("924"),
      I_("925"),
      I_("926"),
      I_("927"),
      I_("928"),
      I_("929"),
      I_("930"),
      I_("931"),
      I_("932"),
      I_("933"),
      I_("934"),
      I_("935"),
      I_("936"),
      I_("937"),
      I_("938"),
      I_("939"),
      I_("940"),
      I_("941"),
      I_("942"),
      I_("943"),
      I_("944"),
      I_("945"),
      I_("946"),
      I_("947"),
      I_("948"),
      I_("949"),
      I_("950"),
      I_("951"),
      I_("952"),
      I_("953"),
      I_("954"),
      I_("956"),
      I_("957"),
      I_("959"),
      I_("960"),
      I_("961"),
      I_("962"),
      I_("963"),
      I_("967"),
      I_("968"),
      I_("969"),
      I_("970"),
      I_("971"),
      I_("974"),
      I_("975"),
      I_("978"),
      I_("983"),
      I_("984"),
      I_("985"),
      I_("986"),
      I_("987"),
      I_("988"),
      I_("989"),
      I_("990"),
      I_("993"),
      I_("994"),
      I_("995"),
      I_("996"),
      I_("997"),
      I_("998"),
      I_("999"),
      I_("1000"),
      I_("1001"),
      I_("1002"),
      I_("1003"),
      I_("1004"),
      I_("1005"),
      I_("1006"),
      I_("1007"),
      I_("1008"),
      I_("1009"),
      I_("1010"),
      I_("1011"),
      I_("1012"),
      I_("1013"),
      I_("1014"),
      I_("1015"),
      I_("1016"),
      I_("1017"),
      I_("1018"),
      I_("1019"),
      I_("1020"),
      I_("1021"),
      I_("1022"),
      I_("1023"),
      I_("1024"),
      I_("1025"),
      I_("1026"),
      I_("1027"),
      I_("1028"),
      I_("1029"),
      I_("1030"),
      I_("1031"),
      I_("1032"),
      I_("1033"),
      I_("1034"),
      I_("1035"),
      I_("1036"),
      I_("1037"),
      I_("1038"),
      I_("1039"),
      I_("1040"),
      I_("1047"),
      I_("1048"),
      I_("1041"),
      I_("1042"),
      I_("1043"),
      I_("1044"),
      I_("1045"),
      I_("1046"),
      I_("1049"),
      I_("1050"),
      I_("1051"),
      I_("1052"),
      I_("1053"),
      I_("1054"),
      I_("1055"),
      I_("1056"),
      I_("1057"),
      I_("1058"),
      I_("1059"),
      I_("1060"),
      I_("1070"),
      I_("1071"),
      I_("1072"),
      I_("1073"),
      I_("1074"),
      I_("1075"),
      I_("1076"),
      I_("1077"),
      I_("1078"),
      I_("1085"),
      I_("1086"),
      I_("1087"),
      I_("1080"),
      I_("1081"),
      I_("1088"),
      I_("1089"),
      I_("1090"),
      I_("1091"),
      I_("1092"),
      I_("1093"),
      I_("1094"),
      I_("1095"),
      I_("1096"),
      I_("1097"),
      I_("1099"),
      I_("1100"),
      I_("1101"),
      I_("1102"),
      I_("1103"),
      I_("1104"),
      I_("1105"),
      I_("1106"),
      0x00
   };

   static const I_CHAR* aValues_002_041_009_000_000[] = {
      I_("Transfer-Out Transaction record not found"),
      I_("Maximum Payout amount will be exceeded"),
      I_("Transfer-In Transaction record not found"),
      I_("Transfer-Out Fund-Mstr not found"),
      I_("Transfer-In Fund-Mstr not found"),
      I_("Transfer-Out ContractType not found"),
      I_("Transfer-Out Account-Contract not found"),
      I_("Transfer-In ContractType not found"),
      I_("Transfer-In Account-Contract not found"),
      I_("Transfer-Out Contract Master not found"),
      I_("To account is locked."),
      I_("Exchange out fee is below min"),
      I_("Exchange out fee exceeds max"),
      I_("No Family Code for Shareholder"),
      I_("No Family Code for IN Shareholder"),
      I_("Error Calculating Family Market Value"),
      I_("Family Market Value = 0.0"),
      I_("Error Finding FamilyDSC Information"),
      I_("Total Family Deposits = 0."),
      I_("Error Updating FamilyDSC Record"),
      I_("PAC Not allowed for this Fund"),
      I_("SWP not allowed for this fund"),
      I_("Auto-xfer IN not allowed for this fund"),
      I_("Auto-xfer OUT not allowed for this fund"),
      I_("Nationality is not populated"),
      I_("PAC amount is less than initial minimum purchase"),
      I_("Auto Transfer amount is less than initial minimum purchase"),
      I_("Auto Transfer fund is a capped fund"),
      I_("Account is ineligible for Pay Option 4"),
      I_("Missing Fee-Parms for FundGroup"),
      I_("Transfer In not allowed for Grandfathered AMS account"),
      I_("Grandfathered AMS A/c-ED/PAC not allowed aft full redempt"),
      I_("Maximum redemption % exceeded"),
      I_("Income Level field is required"),
      I_("Net Worth field is required"),
      I_("Risk Tolerance field is a required"),
      I_("Knowledge field is required"),
      I_("Business No. is applicable to corporate accounts only"),
      I_("Account Escrow Flag is set to Active"),
      I_("Active SWP exists on Account"),
      I_("Active PAC exists on Account"),
      I_("Excess fund/class is mandatory for AMS Global set up"),
      I_("Rounding fund/class is mandatory for AMS Global set up"),
      I_("Purchase of Fund/Class outside of AMS mix is not allowed"),
      I_("Date of Birth is a required field"),
      I_("Occupation is a required field"),
      I_("Date of Birth is missing"),
      I_("Missing Redemption Fee Setup"),
      I_("RepLevel must be > 3 for borrowed deals"),
      I_("RepLevel 1 cannot create new accounts"),
      I_("Backdates prior to DM event are not allowed."),
      I_("Account cannot be closed account Value > 0"),
      I_("English/French MFOL Name is mandatory for AMS global set up."),
      I_("Valid SIN is required for RESP accounts"),
      I_("Start, End or Maturity Date is blank."),
      I_("Inactive pol. has the same maturity date."),
      I_("Systematic plan not transfered for switch."),
      I_("Systematic plan not transfered for switch to different account."),
      I_("Redemption amount is greater than account balance"),
      I_("Transfer/Exchange amount is greater than account balance"),
      I_("Transfer-In Fund-Info record not found"),
      I_("Transfer-In Contract Master not found"),
      I_("Accounts with Unsettled Trades are ineligible for AMS"),
      I_("Accounts with Pending Trades are ineligible for AMS rebalancing"),
      I_("Error to determine Closing Decade"),
      I_("LSIF Redrules record not available"),
      I_("SalesRepCode should only be 5 characters"),
      I_("AWD Comment is blank"),
      I_("Offer price not found"),
      I_("Reinvestment price not found"),
      I_("Discount fee model not found"),
      I_("Invalid settlement currency for Fund"),
      I_("Fees can not be covered by transaction amount"),
      I_("Account must be PUEV capable if Fund is PUEV capable"),
      I_("Shareholder fee model code is missing"),
      I_("Fund must be PUEV capable if Account is PUEV capable"),
      I_("Reinvest FEL commission can not be negative"),
      I_("Both accounts and both funds must be PUEV capable"),
      I_("Fund is Investro Capable but the fund broker's routing type is not Investro"),
      I_("Fund is not Investro Capable but the fund broker's routing type is Investro"),
      I_("Price of 3rd party fund is equal 0."),
      I_("StaticPendingTrade Info not available"),
      I_("Client defined maturity date is not available"),
      I_("Structured Notes Info not found"),
      I_("CD policy(s) impacted by DOB change"),
      I_("DOB change impacts matured/reset policy"),
      I_("Wire Order Number exceeds 10 characters"),
      I_("New date of birth cannot be blank"),
      I_("New Legal Contract Maturity date cannot be less than  Maturity Date"),
      I_("Transactions cannot exist after old/new closing decade start date"),
      I_("Country code for banking information is required."),
      I_("Cannot calculate EUSD."),
      I_("Sender Ref No. is required when NetworkID is not blank"),
      I_("User-defined maturity date less than  years from Account Effective Date."),
      I_("No Transfer/Exchange rule defined for the Trade Date."),
      I_("Maturity Date of TO side does not match with TI side."),
      I_("Pending trades cannot exist in old/new closing decade"),
      I_("User-defined maturity date less than  years from Reset Effective Date."),
      I_("Client-Defined Maturity Date must be  years greater than Reset Date."),
      I_("User-defined Maturity Date cannot be blank."),
      I_("User-defined Deposit Maturity Date greater than Legal Contract Maturity Date."),
      I_("User-defined Contract Maturity Date greater than Legal Contract Maturity Date."),
      I_("No active policy found to get the maturity date."),
      I_("Warning:GUARANTEE ADJUSTMENT EXISTS FOR THE ACCOUNT CONTRACT AFTER TRADE DATE."),
      I_("THERE HAS BEEN GUARANTEE ADJUSTMENT(S) SINCE THE ORIGINAL TRADE."),
      I_("The guarantee adjustment record(s) must be cancelled before processing backdated transaction."),
      I_("Guarantee Units do not balance with transaction units."),
      I_("SEG history status mismatch: SEG history is available for TI-side as of the trade date but is not available for TO-side."),
      I_("SEG history status mismatch: SEG history is available for TO-side as of the trade date but is not available for TI-side."),
      I_("Guarantee Adjustments need to be cancelled before DOB change due to Reduction Age impact"),
      I_("Warning:Guarantee Adjustment exists after trade date for the Account."),
      I_("Warning:Unit adjustment required for Account."),
      I_("Possible EUSD tax calc effect on subsequent Money out Transaction."),
      I_("Please cancel money out transaction."),
      I_("Duplicate SIN found in entity list."),
      I_("Annuitant is older than latest age to open/purchase years."),
      I_("not available for purchase."),
      I_("Non-numeric value assigned to numeric field."),
      I_("Many to Many Xfer with source funds of diff fund currencies."),
      I_("Invalid Trade in split comm environment."),
      I_("Missing or Invalid allocation info."),
      I_("Invalid trade amount."),
      I_("Fund/Class is not valid in Group."),
      I_("Invalid custom trading schedule"),
      I_("Missing custom trading schedule"),
      I_("Transaction not allowed during settlement phase"),
      I_("Maximum event(s) for the year exceeded"),
      I_("Pending/Settled trades/events exist on or after the event effective date"),
      I_("The valid period for the event is between"),
      I_("Missing exchange rate for multicurrency trade"),
      I_("Invalid Event Effective Date"),
      I_("Active Event Schedule already exists"),
      I_("There have been manual event(s) since the original trade date"),
      I_("Invalid PUD code for acct closing redcode!"),
      I_("Event is not allowed during closing period"),
      I_("The new user-defined CMD should be after the existing CMD"),
      I_("Reset can be processed only  year(s) before CMD"),
      I_("PAC stop date impacted by DOB change"),
      I_("DOB impacts CMD after date reset"),
      I_("Payment for both Redemption and Distribution must be setup"),
      I_("Cannot find time zone information"),
      I_("Holdback amount >= available units."),
      I_("Both sides of Transfer/Exchange must be either settled or unsettled in order for trade to be cancelled."),
      I_("Invalid Settlement type indicator."),
      I_("Transaction number not found."),
      I_("Transaction number is missing."),
      I_("WireOrder number is missing."),
      I_("External ID is missing."),
      I_("External ID type is missing."),
      I_("Fund code is missing."),
      I_("Class code is missing."),
      I_("Transaction type is missing."),
      I_("Trade Date is missing."),
      I_("Settle Date is missing."),
      I_("Transaction cannot be found for settlement."),
      I_("Account number cannot be found."),
      I_("Fund code cannot be found."),
      I_("Class code cannot be found."),
      I_("Gross/Net indicator is missing."),
      I_("Stop Redemption Settle Flag is set to Yes."),
      I_("Redemption Amount is greater than account balance."),
      I_("iFAST Trans-Rec-Xref table not available."),
      I_("Internal iFAST issue - no active settlement batch was found."),
      I_("Transaction previously settled."),
      I_("WireOrder number cannot be found."),
      I_("External ID cannot be found."),
      I_("External ID type cannot be found."),
      I_("Transaction Type cannot be found."),
      I_("Trade Date cannot be found."),
      I_("Settlement Date cannot be found."),
      I_("Invalid Gross/Net indicator. Must be G or N."),
      I_("Account number is missing."),
      I_("Number of fields of record line are less that expected."),
      I_("Broker code is missing."),
      I_("TO/EO transaction must be settled."),
      I_("Contribution is not allowed for non-resident for TaxType"),
      I_("Contrib. date is outside the allowed dates for TaxType"),
      I_("Cancellation Failure refer to REVRSLOG.D report"),
      I_("Reversal or adjustment placed in another Account, Fund, or Class"),
      I_("Original Trade Cancelled or not Found"),
      I_("Mirror - Cancellation Failure refer to REVRSLOG.D report"),
      I_("Split Commission does not match Fee"),
      I_("No Paying Agent Found"),
      I_("Tax Jurisdiction not found Paying Agent"),
      I_("Tax Jurisdiction not found for Owner"),
      I_("No active owner found"),
      I_("Invalid selection. Deposit Code is applicable for Sibling Only accounts"),
      I_("Invalid selection. Beneficiary is not linked to a PCG."),
      I_("PCG exists,please de-link PCG for non-sibling only accounts."),
      I_("Error corrections not allowed for settled trades on RESP accounts"),
      I_("Error corrections not allowed for trades submitted to HRSDC on RESP accounts"),
      I_("DP 20,73,74,75,76 or RD 75,76,83 not allowed in Transfer."),
      I_("Account is not Sibling Only. Grant Amount is not applicable"),
      I_("Beneficiary is not linked to a PCG. Grant Amount is not applicable"),
      I_("Beneficiary is not eligible for CLB since his Date of Birth is greater than 01/01/2004"),
      I_("CLB Amount cannot be transferred since SIN of from and to Beneficiary are different"),
      I_("Redemption code is invalid since beneficiary is non-resident"),
      I_("Fund is Front End Load with commission greater than zero"),
      I_("DSC amount is greater than the amount attributed to income in the EAP"),
      I_("Redemption code '77' applicable only for non-resident beneficiaries"),
      I_("Beneficiary's Date of Birth is missing"),
      I_("Beneficiary's Gender is missing"),
      I_("Beneficiary is over 21 and trade cannot be processed"),
      I_("Termination date should be 25 years from Inception date."),
      I_("Pending and Cancelled Status not applicable"),
      I_("No Bus-Day record available"),
      I_("No Fund-Mstr record available"),
      I_("No fund-group-type record with Valn grouptype available"),
      I_("Fund record not available in Fund-Group-List"),
      I_("The Fund Group Type and Fund Group are not available in FundSched"),
      I_("Error in RUNRIF51"),
      I_("Error in RUNRIF52"),
      I_("Reset RUNRIFInfo control before restarting"),
      I_("Account:Less than minimum Initial Purchase"),
      I_("Account:Less than minimum Allowable Purchase"),
      I_("Account:Purchase not allowed for Fund"),
      I_("Account:Redemption not allowed for Fund"),
      I_("Account:TO:Transfer not allowed for Fund"),
      I_("Account:FROM:Transfer not allowed for Fund"),
      I_("Account:Less than Minimum Fund/Class Balance"),
      I_("Broker:Less than minimum Initial Purchase"),
      I_("Broker:Less than minimum Allowable Purchase"),
      I_("Broker:Purchase not allowed for Fund"),
      I_("Broker:Redemption not allowed for Fund"),
      I_("Broker:TO:Transfer not allowed for Fund"),
      I_("Broker:FROM:Transfer not allowed for Fund"),
      I_("Broker:Less than Minimum Fund/Class Balance"),
      I_("Branch:Less than minimum Initial Purchase"),
      I_("Branch:Less than minimum Allowable Purchase"),
      I_("Branch:Purchase not allowed for Fund"),
      I_("Branch:Redemption not allowed for Fund"),
      I_("Branch:TO:Transfer not allowed for Fund"),
      I_("Branch:FROM:Transfer not allowed for Fund"),
      I_("Branch:Less than Minimum Fund/Class Balance"),
      I_("Sales Rep:Less than minimum Initial Purchase"),
      I_("Sales Rep:Less than minimum Allowable Purchase"),
      I_("Sales Rep:Purchase not allowed for Fund"),
      I_("Sales Rep:Redemption not allowed for Fund"),
      I_("Sales Rep:TO:Transfer not allowed for Fund"),
      I_("Sales Rep:FROM:Transfer not allowed for Fund"),
      I_("Sales Rep:Less than Minimum Fund/Class Balance"),
      I_("Less than Minimum Fund/Class Balance"),
      I_("Deposit type not allowed for RedCode"),
      I_("Allowed Transfer is from LonckIn to Non LockedIn Registered"),
      I_("Allowed Transfer is from LonckIn to Non Registered"),
      I_("Redeem not allowed for reason code bankruptcy"),
      I_("Order type should be wire for partcipant transfer."),
      I_("Order type should be direct for non-partcipant transfer."),
      I_("Inactive Dealer / Ineligible Broker for AMS"),
      I_("Stop purchase or Redemption flag active for AMS A/C"),
      I_("Minimum AMS investment not met"),
      I_("Mixed currency fund in AMS model"),
      I_("Fund/Class  is Soft Capped"),
      I_("AMS Eligibility"),
      I_("Fund Load Group not the same under AMS Allocation Set-up"),
      I_("AMS set-up not allowed for Institutional Account"),
      I_("redemption Code is not allowed for transfer"),
      I_("From this account you can transfer only to RRSP or RRIF account"),
      I_("Account Category Private not applicable to account type and account designation"),
      I_("Aggr amt below fundloadgrp min init amt!"),
      I_("Account: Fund/Class  is Soft Capped!"),
      I_("KYC information is missing"),
      I_("Management fee model is missing"),
      I_("RESP NASU not available on desktop"),
      I_("Entry of spouse's date of birth is not allowed."),
      I_("Spouse's date of birth must be less than or equal to accountholder's age."),
      I_("Invalid payment period"),
      I_("Account has active certificate units"),
      I_("Account value is locked."),
      I_("New money-in for Tax Type Schedule is not allowed after"),
      I_("Redemption is contrary to client guarantee guard protection setting rules"),
      I_("Transfer is contrary to client guarantee guard protection setting rules"),
      I_("No Eligible Contracts in this account"),
      I_("Accounts have different SiblingOnly status - Ensure transfer meets regulations"),
      I_("An active SWP exists setup with GMWB funds"),
      I_("An active Dynamic SWP exists setup with GMWB funds"),
      I_("Invalid/Blank  Regulatory Standard"),
      I_("PayType for requested Payment Instruction should be set to EFTfor redemption payments"),
      I_("Account number  does not exist"),
      I_("Account number should be different from that of ED trade"),
      I_("An active Dynamic SWP exists setup with non-GMWB funds"),
      I_("Duplicate Rule Type is not allowed."),
      I_("Both Mgmt Fee Rebate and Mgmt Fee flags can not be true at the same time."),
      I_("Beneficiary Age is over 31 and trade cannot be processed"),
      I_("Termination date should be 35 years from Inception date"),
      I_("Invalid Fund Code for Fund on fund Category"),
      I_("User Defined Maturity Date should be  years from the issuedate"),
      I_("Redemption  exceeds Grant Plus Earnings"),
      I_("EAP Amount exceeds Market Value"),
      I_("AMS Effective Date Backdated"),
      I_("Residence Province and Tax Jurisdiction can not be left Unassigned"),
      I_("The requested amount has exceeded the minimum"),
      I_("This transaction may exceed the remaining minimum amount and may be rejected in the cycle"),
      I_("Demographics Data is required."),
      I_("KYC Document List Data is required"),
      I_("Fee Code is not defined, cannot store deducted fee."),
      I_("Direct Deposit Banking setup is available only to default banking of non-registered client held account"),
      I_("Direct Deposit Banking is applied only to Canadian Bank"),
      I_("Direct Deposit Banking is applied only to Canadian Dollar Fund"),
      I_("Contract Versions of TO and TI sides do not match"),
      I_("Joint Life Entity required before processing a joint election."),
      I_("Age of Annuitant/Joint Life Entity Surpasses the maximum age allowed."),
      I_("Account balance is above the SFIR threshold amount"),
      I_("LWA Option of TO and TI sides do not match"),
      I_("Direct Deposit Banking and/or Investor Authorize missing"),
      I_("There are investor authorization setup that missing direct deposit banking Informaion"),
      I_("There are direct deposit banking setup that missing investor authorization Informaion"),
      I_("Settlement Location is missing"),
      I_("Fee is not eligible for Net Trading"),
      I_("Fed tax rate is less than the default value"),
      I_("Prov tax rate is less than the default value"),
      I_("Banking Information is not verified (for trade)"),
      I_("Banking Information is not verified (for settlement)"),
      I_("Fund has certificate units"),
      I_("Shareholder Address is not verified (for trade)"),
      I_("Shareholder Address is not verified (for settlement)"),
      I_("Banking Info has pending or unsettled trade association"),
      I_("Exchange rate for trade date is not found."),
      I_("Traded unit calculation error. Please call system support."),
      I_("DSK:TUP Oversell encountered on a redemption"),
      I_("DSK:TUP Oversell encountered on a transfer out"),
      I_("DSK:TUP Oversell encountered on an exchange out"),
      I_("WEB:TUP Oversell encountered on a redemption"),
      I_("WEB:TUP Oversell encountered on a transfer out"),
      I_("WEB:TUP Oversell encountered on a exchange out"),
      I_("Statement frequency cannot be less than 'Quarterly'."),
      I_("Statement frequency cannot be less than 'Monthly'."),
      I_("Settlement is not allowed during final cycle run."),
      I_("QESI Life Time Grant Limit Exceeded."),
      I_("Insufficient QESI Grants."),
      I_("Refund of Special Taxes exceed Redemption."),
      I_("No Lifetime Contribution Limits has been set up."),
      I_("No Annual Contribution Limits has been set up."),
      I_("Error finding Fee Parms for Fund/Class."),
      I_("No Broker/Branch/Rep found for Account."),
      I_("Error finding Fee Parms for Account and/or Family Code."),
      I_("Warning: Broker is not eligible for Trailer Fee."),
      I_("Warning: Broker/Branch/Rep is not eligible for Trailer Fee."),
      I_("Warning: Broker Trailer Fee Pay Frequency not the same as Run Frequency."),
      I_("Warning: Broker/Branch/Rep has been stopped."),
      I_("Balance for Account/Fund/Class is 0."),
      I_("Warning: Fee Parameter Fee Type must be Percent."),
      I_("Missing Account History for Account."),
      I_("Error finding Fee Parms for Broker/Branch/Rep."),
      I_("Units in AcctBal does not match with InvAsOf"),
      I_("RESP/Family RESP trading is not supported."),
      I_("RESP specific edit check is not being performed."),
      I_("Eligible Trailer Fee is 0 since the Broker/Rep asset aggr is less than $100000."),
      I_("Inventory Tracking is not on for Fund/Class that is GrandFathered."),
      I_("CESG Amount to be returned because of this redemption."),
      I_("This transaction will reduce the YTD contribution to negative"),
      I_("Eligible Balance Type and Split By currently not supported."),
      I_("NEQ already exists."),
      I_("NEQ is missing."),
      I_("DP 78,79,80,81 or RD Q1,Q2,Q3 are not allowed."),
      I_("Election of LWA Age Rate  is only allowed when LWA Rates between accounts is the same."),
      I_("Transfer Option Purchase could not be processed."),
      I_("Account Balance is less than transaction amount"),
      I_("Notional balance is less than entered transaction amount"),
      I_("Amendment may be required"),
      I_("Adjustment may be required"),
      I_("Trade exist for tax year"),
      I_("You may need to add new Grant Request for applicable tax year"),
      I_("You may need to stop Grant Request for applicable tax year"),
      I_("You may need to flip status to Request or create new request for applicable tax year"),
      I_("SIN Effective date is mandatory"),
      I_("Guarantee Guard not same between TO/TI accounts"),
      I_("Transfer Proces failed due to run time error"),
      I_("AIP withdrawal exists, payment to non-resident Owner is not allowed"),
      I_("Entity Address is missing"),
      I_("System will trigger amendment and recalculate QESI notional balance for the tax year"),
      I_("SIN Effective date for RESP beneficiary cannot be unknown"),
      I_("SIN Effective date for RESP beneficiary cannot be earlier than the Date of birth"),
      I_("SIN Effective date for RESP beneficiary cannot be a future date"),
      I_("Dealer's Trailer Payment Frequency changed after first month of quarter end"),
      I_("Inventory Event failed to find the appropriate age group to age the units"),
      I_("Broker's Trailer Payment Frequency changed."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_041_009_000_000;
   const BFSubstitutionSet SubSet_002_041_009_000_000(
    &aKeys_002_041_009_000_000[0], &aValues_002_041_009_000_000[0] );
   // Substitution set RejCodeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_041_010_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("103"),
      I_("104"),
      I_("105"),
      I_("106"),
      I_("107"),
      I_("11"),
      I_("117"),
      I_("118"),
      I_("119"),
      I_("12"),
      I_("120"),
      I_("121"),
      I_("122"),
      I_("123"),
      I_("125"),
      I_("127"),
      I_("128"),
      I_("129"),
      I_("13"),
      I_("134"),
      I_("135"),
      I_("136"),
      I_("137"),
      I_("138"),
      I_("139"),
      I_("14"),
      I_("140"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("181"),
      I_("182"),
      I_("183"),
      I_("184"),
      I_("186"),
      I_("187"),
      I_("188"),
      I_("189"),
      I_("19"),
      I_("190"),
      I_("191"),
      I_("192"),
      I_("193"),
      I_("194"),
      I_("195"),
      I_("196"),
      I_("197"),
      I_("198"),
      I_("199"),
      I_("20"),
      I_("200"),
      I_("202"),
      I_("203"),
      I_("204"),
      I_("205"),
      I_("206"),
      I_("207"),
      I_("208"),
      I_("209"),
      I_("21"),
      I_("210"),
      I_("211"),
      I_("212"),
      I_("216"),
      I_("217"),
      I_("218"),
      I_("219"),
      I_("22"),
      I_("221"),
      I_("222"),
      I_("223"),
      I_("224"),
      I_("229"),
      I_("23"),
      I_("230"),
      I_("231"),
      I_("232"),
      I_("236"),
      I_("237"),
      I_("238"),
      I_("239"),
      I_("24"),
      I_("240"),
      I_("241"),
      I_("242"),
      I_("243"),
      I_("244"),
      I_("245"),
      I_("246"),
      I_("247"),
      I_("248"),
      I_("249"),
      I_("25"),
      I_("250"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("300"),
      I_("305"),
      I_("31"),
      I_("314"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("89"),
      I_("90"),
      I_("91"),
      I_("92"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("96"),
      I_("97"),
      I_("98"),
      I_("99"),
      I_("100"),
      I_("116"),
      I_("151"),
      I_("152"),
      I_("153"),
      I_("260"),
      I_("261"),
      I_("262"),
      I_("263"),
      I_("266"),
      I_("316"),
      I_("317"),
      I_("319"),
      I_("320"),
      I_("321"),
      I_("322"),
      I_("324"),
      I_("325"),
      I_("326"),
      I_("327"),
      I_("328"),
      I_("329"),
      I_("330"),
      I_("331"),
      I_("332"),
      I_("333"),
      I_("335"),
      I_("102"),
      I_("111"),
      0x00
   };

   static const I_CHAR* aValues_002_041_010_000_000[] = {
      I_("Er bestaat geen primair hoofdrecord"),
      I_("Er bestaat geen hoofdrecord account"),
      I_("Fund Fee Detail Not Foiund/Defined"),
      I_("BEL must be Acq and Admin Fee = 0, Prcnt"),
      I_("BackEnd Net Order must not"),
      I_("Huidige eenheidwaarde is niet gevonden"),
      I_("Account is niet actief op handelsdatum"),
      I_("Group Purchase Stop Flag Enables"),
      I_("Vlag voor einde accountaankoop is ingeschakeld"),
      I_("ROA is niet beschikbaar voor dit account"),
      I_("Er is een inhouding. De hele transactie wordt verworpen"),
      I_("Holdback $ = Avail $ and Settle method 2 is used."),
      I_("Holding"),
      I_("Holding Fund Detail does not exist"),
      I_("Exceed users setup amount"),
      I_("Er worden geen kosten berekend voor dit account "),
      I_("WARN: Dollars must be rounded to Cents"),
      I_("Afrondingsfactor voor eenheden overschrijdt Unitsprecis"),
      I_("Ongeldige depositocode voor belastingtype"),
      I_("Er zijn kosten ingevoerd zonder overschrijving"),
      I_("Er bestaat geen record voor de accountwaarde"),
      I_("Transaction must be Varified"),
      I_("TI: Exchange Rate does not exist"),
      I_("WARN: Fund Max Subsequent Contrib Exceed"),
      I_("Transactie moet worden geverifieerd"),
      I_("The Exchange Rate does not exist"),
      I_("WARN: Fund Max Initial Deposit Exceeded"),
      I_("Eenheidswaarde is gelijk aan nul"),
      I_("Netto aankoop ingevoerd zonder kostenbedrag"),
      I_("Het resterende minimumbedrag moet eerst worden betaald"),
      I_("Remaining account balance is insufficient to cover"),
      I_("Regels voor belastingtype zijn niet beschikbaar voor belastingtype van het account"),
      I_("Gegevens over betalingsschema zijn niet beschikbaar"),
      I_("Er zijn geen regels voor de aflossingscode ingesteld"),
      I_("Hoofdtabel account niet geregistreerd"),
      I_("Fee Override, No Fee Defined"),
      I_("The remaining minimum amount redemption was not pr"),
      I_("Er is een ongeldig fonds aangewezen"),
      I_("Aankoop is niet toegestaan voor fonds en categorie"),
      I_("Fonds is ongeldig voor registeraccount"),
      I_("WAARSCHUWING: minder dan minimale eerste aankoop"),
      I_("WAARSCHUWING: minder dan minimaal saldo fonds/categorie"),
      I_("WAARSCHUWING: minder dan minimaal accountsaldo"),
      I_("WAARSCHUWING: minder dan minimale eerste aflossing"),
      I_("WAARSCHUWING: minder dan minimale volgende aflossing"),
      I_("ESOP  Contribution Exceeds yearly limit"),
      I_("Fonds komt niet in aanmerking voor ESOP"),
      I_("Aflossing van ESOP Investment Plan wordt verwerkt"),
      I_("Aflossing van ESOP Participation Plan wordt verwerkt"),
      I_("WARN: Less Than Minimum Allowable Purch."),
      I_("ESOP-overdracht moet het account afsluiten"),
      I_("Purchasing Security for"),
      I_("Fondsaankoop voor hele aandelen is niet voorverwerkt"),
      I_("Netto aflossing voor hele aandelen is niet toegestaan"),
      I_("Kan geen overdracht UIT doen vanuit een ESOP-account"),
      I_("Cannot transfer In of an ESOP Account"),
      I_("No S.W. Ps allowed from ESOP Account"),
      I_("Geen bedrag beschikbaar in Contant-vermogensfonds"),
      I_("Aflossingscode is niet toegestaan voor ESOP"),
      I_("Geen bedrag beschikbaar in Contant-vermogensfonds"),
      I_("Minder dan minimaal toegestane VGC."),
      I_("Aflossingscode is niet toegestaan voor ESOP"),
      I_("Ongeldige betalingsbron"),
      I_("Invalid Settlement Source for Account Designation<"),
      I_("Ongeldige orderbron"),
      I_("Ongeldig betalingstype"),
      I_("Invalid Settlement Type for Dealer/Intermediary<1>"),
      I_("Wire Order Redemption not allowed for Fund<1>"),
      I_("Invalid Order Source for Account Designation<1>"),
      I_("The Intermediary is not permitted to enter wire or"),
      I_("Commissie > maximaal toegestaan"),
      I_("<1> is not permitted to enter money market wire or"),
      I_("Er zijn geen handelaarsgegevens beschikbaar voor makelaarscode"),
      I_("Account has an valid loan!Must enter a valid sourc"),
      I_("Limiet RESP Plan is overschreden"),
      I_("Jaarlimiet RESP is overschreden"),
      I_("RESP-aflossing overschrijdt de bijdrage"),
      I_("RESP-aflossing overschrijdt de inkomsten"),
      I_("Vorige eindejaars herberekening"),
      I_("Fonds is aan grenzen gebonden"),
      I_("Contract Account Status is Active"),
      I_("Contract Account Status is not Active"),
      I_("Contract Account Status is Death Status"),
      I_("Er moet een aflossingscode voor de overlijdensclaim worden ingevuld"),
      I_("WARNING:TRADE >= 30 DAYS OLD"),
      I_("Dealer cannot settle orders place by Intermediary."),
      I_("Deposito-ID is verplicht."),
      I_("SIsrep is not permitted new business activities"),
      I_("Het toelagebedrag is onvoldoende voor teruggave"),
      I_("DP 20 or RD 61,83,84 not allowed in Transfer"),
      I_("Fout bij maken van Escrow-eenheid"),
      I_("Er is geen RESP-begunstigde geselecteerd"),
      I_("Dit is geen overeenkomstaccount"),
      I_("No originating contribution selected"),
      I_("RESP  Redmption exceed Earnings"),
      I_("Handelsdatum > datum bijdragetermijn"),
      I_("This type of transaction is not supported for Fami"),
      I_("For RESP to RESP tranfer only RD 64 and DP 17 are"),
      I_("RESP-overdrachtsbedrag kan te hoog zijn"),
      I_("Allocaties worden niet volledig ondersteund voor RESP"),
      I_("Allocation not fully supported for Family Plan RES"),
      I_("EFT has been Transmitted, Do you want to continue?"),
      I_("Er is geen record RESPContrDetl beschikbaar"),
      I_("Van kracht zijnd overeenkomstplan bestaat niet"),
      I_("Not enough grant amount for return"),
      I_("Transactietype moet ED zijn - voor overeenkomst"),
      I_("Ordertype moet direct zijn"),
      I_("Eenheidcode moet D zijn - dollars"),
      I_("Bruto/netto moet bruto zijn"),
      I_("Betaling moet veelvoud van betalingsbedrag zijn"),
      I_("Non integer amount for zero precision currency"),
      I_("Fractionele waarden zijn niet toegestaan in deze valuta"),
      I_("Maximum"),
      I_("Ongeldige overdracht in natura"),
      I_("Initial payments are not valid for PIP"),
      I_("Betaling is minder dan minimale eerste betaling"),
      I_("No Scale Detail record found"),
      I_("Er bestaan GEEN FIFO-eenheden"),
      I_("Batch  is ACTIVE"),
      I_("Batch is VERGRENDELD"),
      I_("Batch bestaat NIET"),
      I_("VAN/NAAR: Overeenkomstoverdracht is mislukt"),
      I_("VAN/NAAR: Transactie is niet gevonden in overeenkomstoverdracht"),
      I_("Vlag voor einde groepsaflossing is ingeschakeld"),
      I_("Vlag voor einde aflossing is ingeschakeld"),
      I_("Vlag voor toegewezen is ingeschakeld"),
      I_("Inconsistentm Fee Charged"),
      I_("Only 3,4,5,6,10,11 allowed for RRIF plan"),
      I_("Netto handel ingevoerd zonder kostenbedrag"),
      I_("Volledige aflossing is niet toegestaan voor"),
      I_("Aflossing is niet toegestaan voor fonds en categorie"),
      I_("Invalid Remption Code"),
      I_("Afl.: beschikbare eenheden = 0,00"),
      I_("Handelaar is niet gemachtigd om een fonds te verhandelen"),
      I_("Een netto back-order kan geen beheerkosten hebben"),
      I_("Er zijn geen fondsen gevonden voor het account"),
      I_("Onvoldoende fondsen op handelsdatum"),
      I_("Unissued Certiificate Units exist"),
      I_("Handgeschreven/genegeerde cheque kan niet worden bijgewerkt"),
      I_("Trn: available Units = 0.00"),
      I_("WAARSC./VAN: Er is geen van kracht zijnde VGC"),
      I_("TO:Effective PAC Exists"),
      I_("TO Effective PAC Exists/FR:PAC Not Found"),
      I_("FR:Group Tnsfr/Redem Stop Flag Enabled"),
      I_("FR:Account Tnsfr/Redem Stop Flag Enable"),
      I_("FR:Shareholder Does Not Exist"),
      I_("FR:Account Does Not Exist"),
      I_("TO:Account Not Active At Trade Date"),
      I_("TO:Group Tnsfr/Purch Stop Flag Enabled"),
      I_("TO:Account Tnsfr/Purch Stop Flag Enable"),
      I_("TO:Shareholder Does Not Exist"),
      I_("NAAR: Account bestaat niet"),
      I_("FR:Current Unit Value Not Found"),
      I_("FR/TO:Not An Allowed Transfer"),
      I_("FR:Account Not Active At Trade Date"),
      I_("Transactie vereist goedkeuring"),
      I_("Netto overdracht ingevoerd zonder kostenbedrag"),
      I_("FR:Invalid Fund"),
      I_("FR:Transfer Not Allowed For Fund"),
      I_("FR:Fund Fee Detail Not Found/Defined"),
      I_("TO:Invalid Fund"),
      I_("To:Transfer No Allowed For Fund"),
      I_("TO:Fund Fee Detail Not Found/Defined"),
      I_("Moet Dollar zijn voor volledige overdrachten"),
      I_("FR:No Fund Found For Account"),
      I_("FR:Insufficient Funds As At Trade Date"),
      I_("FR:UNEr bestaan uitgegeven certificaateenheden"),
      I_("TO:Current Unit Value Not Found"),
      I_("TO:Fee Waived For This Account"),
      I_("TO:Fee Entered Without an Over-ride"),
      I_("TO:Net Purch Entered Without Fee Amount"),
      I_("TO:Fee Override, No Fee Defined"),
      I_("TO:Less Than Minimum Initial Purchase"),
      I_("TO:Less Than Minimum Allowable Purchase"),
      I_("Van kracht zijnd overeenkomstplan bestaat niet"),
      I_("FR:Effective Contract Plan Not Exist"),
      I_("Betalingscode is alleen geldig voor DIRECTE aankoop"),
      I_("Betalingscode is alleen geldig voor DOLLAR aankoop"),
      I_("Betalingscode is alleen geldig voor BRUTO aankoop"),
      I_("VAN/NAAR: Overeenkomstoverdracht MOET het VOLLEDIGE bedrag zijn"),
      I_("Payment Code MUST be : P or Blank"),
      I_("Berekenen van aankoop- en beheerkosten tijdens nachtelijke uitvoering"),
      I_("Valuta is niet toegestaan in dit belastingtype"),
      I_("Stop Date of Fund less than or equal to Trade Date"),
      I_("Stop Date is before Start Date"),
      I_("Price not found"),
      I_("No transfer between RRSP and RRSP spousal"),
      I_("FOUT: VOLLEDIG ACCOUNT IS BEPERKT."),
      I_("WARNING: ENTIRE ACCOUNT IS RESTRICTED! DO YOU WISH TO CONTINUE?"),
      I_("IN BEHANDELING ZIJNDE TRANSACTIES KUNNEN WORDEN ONDERBROKEN WILT U DOORGAAN?"),
      I_("'TO' POLICY HAS A TITLES RESTRICTION. DO YOU WISH TO PROCEED WITH TRAN"),
      I_("Ruil: Prijs is niet gevonden voor percentage gratis"),
      I_("LLP-fout"),
      I_("Nalatenschapfout"),
      I_("Invalid AllFundTransfer - with assignment"),
      I_("Invalid AllfundTransfer - with Loan(s)"),
      I_("Invalid AllFundTransfer - with certificate"),
      I_("AIP withdrawal exists, transfer to another RESP not allowed"),
      I_("Kan opname RESP OC niet toepassen op ongeldig jaar"),
      I_("Ongeldige redencode CESG-terugbetaling"),
      I_("Ongeldige gegevens RESP EAP/PSE"),
      I_("Oorspronkelijke handel kan niet worden geannuleerd"),
      I_("Oorspronkelijke handel is niet gevonden"),
      I_("DP 17, RD 64/65 can only be used for RESP to RESP transfer"),
      I_("Onvoldoende fictief saldo om RESP-overdracht te annuleren"),
      I_("Terugbetaling toelagebetaling door eenheden is niet toegestaan"),
      I_("Netto transactiebedrag overschrijdt netto CESG-schuld"),
      I_("Wisselkoers voor belastingberekening is niet gevonden"),
      I_("Negative Guarantees following must be cancelled (rebook at will)."),
      I_("Commission less than minimum allowed"),
      I_("Province of LIRA/LIF/LRIF must be same"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_041_010_000_000;
   const BFSubstitutionSet SubSet_002_041_010_000_000(
    &aKeys_002_041_010_000_000[0], &aValues_002_041_010_000_000[0] );
   // Substitution set RiskToleranceCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_042_001_000_000[] = {
      I_("H"),
      I_("M"),
      I_("L"),
      0x00
   };

   static const I_CHAR* aValues_002_042_001_000_000[] = {
      I_("High"),
      I_("Medium"),
      I_("Low"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_042_001_000_000;
   const BFSubstitutionSet SubSet_002_042_001_000_000(
    &aKeys_002_042_001_000_000[0], &aValues_002_042_001_000_000[0] );
   // Substitution set RiskToleranceCodeSet.  Language: enCA
   static const I_CHAR* aKeys_002_042_003_000_000[] = {
      I_("H"),
      I_("M"),
      I_("L"),
      0x00
   };

   static const I_CHAR* aValues_002_042_003_000_000[] = {
      I_("High"),
      I_("Medium"),
      I_("Low"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_042_003_000_000;
   const BFSubstitutionSet SubSet_002_042_003_000_000(
    &aKeys_002_042_003_000_000[0], &aValues_002_042_003_000_000[0] );
   // Substitution set RiskToleranceCodeSet.  Language: frFR
   static const I_CHAR* aKeys_002_042_004_000_000[] = {
      I_("H"),
      I_("M"),
      I_("L"),
      0x00
   };

   static const I_CHAR* aValues_002_042_004_000_000[] = {
      I_("Eleve"),
      I_("Moyen"),
      I_("Faible"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_042_004_000_000;
   const BFSubstitutionSet SubSet_002_042_004_000_000(
    &aKeys_002_042_004_000_000[0], &aValues_002_042_004_000_000[0] );
   // Substitution set RiskToleranceCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_042_005_000_000[] = {
      I_("H"),
      I_("M"),
      I_("L"),
      0x00
   };

   static const I_CHAR* aValues_002_042_005_000_000[] = {
      I_("Élevé"),
      I_("Moyen"),
      I_("Faible"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_042_005_000_000;
   const BFSubstitutionSet SubSet_002_042_005_000_000(
    &aKeys_002_042_005_000_000[0], &aValues_002_042_005_000_000[0] );
   // Substitution set RiskToleranceCodeSet.  Language: enIE
   static const I_CHAR* aKeys_002_042_006_000_000[] = {
      I_("H"),
      I_("M"),
      I_("L"),
      0x00
   };

   static const I_CHAR* aValues_002_042_006_000_000[] = {
      I_("High"),
      I_("Medium"),
      I_("Low"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_042_006_000_000;
   const BFSubstitutionSet SubSet_002_042_006_000_000(
    &aKeys_002_042_006_000_000[0], &aValues_002_042_006_000_000[0] );
   // Substitution set RiskToleranceCodeSet.  Language: deDE
   static const I_CHAR* aKeys_002_042_007_000_000[] = {
      I_("H"),
      I_("M"),
      I_("L"),
      0x00
   };

   static const I_CHAR* aValues_002_042_007_000_000[] = {
      I_("High"),
      I_("Medium"),
      I_("Low"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_042_007_000_000;
   const BFSubstitutionSet SubSet_002_042_007_000_000(
    &aKeys_002_042_007_000_000[0], &aValues_002_042_007_000_000[0] );
   // Substitution set RiskToleranceCodeSet.  Language: esEs
   static const I_CHAR* aKeys_002_042_008_000_000[] = {
      I_("H"),
      I_("M"),
      I_("L"),
      0x00
   };

   static const I_CHAR* aValues_002_042_008_000_000[] = {
      I_("High"),
      I_("Medium"),
      I_("Low"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_042_008_000_000;
   const BFSubstitutionSet SubSet_002_042_008_000_000(
    &aKeys_002_042_008_000_000[0], &aValues_002_042_008_000_000[0] );
   // Substitution set RiskToleranceCodeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_042_010_000_000[] = {
      I_("H"),
      I_("M"),
      I_("L"),
      0x00
   };

   static const I_CHAR* aValues_002_042_010_000_000[] = {
      I_("Hoog"),
      I_("Gemiddeld"),
      I_("Laag"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_042_010_000_000;
   const BFSubstitutionSet SubSet_002_042_010_000_000(
    &aKeys_002_042_010_000_000[0], &aValues_002_042_010_000_000[0] );
   // Substitution set RecipientTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_043_001_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("7"),
      0x00
   };

   static const I_CHAR* aValues_002_043_001_000_000[] = {
      I_("N/A"),
      I_("INDIVIDUAL"),
      I_("JOINT"),
      I_("CORPORATION"),
      I_("TRUST"),
      I_("GOVERNMENT"),
      I_("JOINT NON-SPOUSAL - QUEBEC ONLY"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_043_001_000_000;
   const BFSubstitutionSet SubSet_002_043_001_000_000(
    &aKeys_002_043_001_000_000[0], &aValues_002_043_001_000_000[0] );
   // Substitution set RecipientTypeSet.  Language: enCA
   static const I_CHAR* aKeys_002_043_003_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_043_003_000_000[] = {
      I_("N/A"),
      I_("INDIVIDUAL"),
      I_("JOINT"),
      I_("CORPORATION"),
      I_("TRUST"),
      I_("GOVERNMENT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_043_003_000_000;
   const BFSubstitutionSet SubSet_002_043_003_000_000(
    &aKeys_002_043_003_000_000[0], &aValues_002_043_003_000_000[0] );
   // Substitution set RecipientTypeSet.  Language: frFR
   static const I_CHAR* aKeys_002_043_004_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_043_004_000_000[] = {
      I_("N/A"),
      I_("PARTICULIER"),
      I_("JOINT"),
      I_("SOCIETE"),
      I_("TRUST"),
      I_("GOUVERNEMENT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_043_004_000_000;
   const BFSubstitutionSet SubSet_002_043_004_000_000(
    &aKeys_002_043_004_000_000[0], &aValues_002_043_004_000_000[0] );
   // Substitution set RecipientTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_043_005_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("7"),
      0x00
   };

   static const I_CHAR* aValues_002_043_005_000_000[] = {
      I_("S. O."),
      I_("INDIVIDU"),
      I_("CONJOINT"),
      I_("PERSONNE MORALE"),
      I_("FIDUCIE"),
      I_("GOUVERNEMENT"),
      I_("CONJOINT NON MARIÉ - QUÉBEC SEULEMENT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_043_005_000_000;
   const BFSubstitutionSet SubSet_002_043_005_000_000(
    &aKeys_002_043_005_000_000[0], &aValues_002_043_005_000_000[0] );
   // Substitution set RecipientTypeSet.  Language: enIE
   static const I_CHAR* aKeys_002_043_006_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_043_006_000_000[] = {
      I_("N/A"),
      I_("INDIVIDUAL"),
      I_("JOINT"),
      I_("CORPORATION"),
      I_("TRUST"),
      I_("GOVERNMENT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_043_006_000_000;
   const BFSubstitutionSet SubSet_002_043_006_000_000(
    &aKeys_002_043_006_000_000[0], &aValues_002_043_006_000_000[0] );
   // Substitution set RecipientTypeSet.  Language: deDE
   static const I_CHAR* aKeys_002_043_007_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_043_007_000_000[] = {
      I_("N/A"),
      I_("INDIVIDUAL"),
      I_("JOINT"),
      I_("CORPORATION"),
      I_("TRUST"),
      I_("GOVERNMENT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_043_007_000_000;
   const BFSubstitutionSet SubSet_002_043_007_000_000(
    &aKeys_002_043_007_000_000[0], &aValues_002_043_007_000_000[0] );
   // Substitution set RecipientTypeSet.  Language: esEs
   static const I_CHAR* aKeys_002_043_008_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_043_008_000_000[] = {
      I_("N/A"),
      I_("INDIVIDUAL"),
      I_("JOINT"),
      I_("CORPORATION"),
      I_("TRUST"),
      I_("GOVERNMENT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_043_008_000_000;
   const BFSubstitutionSet SubSet_002_043_008_000_000(
    &aKeys_002_043_008_000_000[0], &aValues_002_043_008_000_000[0] );
   // Substitution set RecipientTypeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_043_010_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_043_010_000_000[] = {
      I_("n.v.t."),
      I_("Individueel"),
      I_("Gezamenlijk"),
      I_("Maatschappij"),
      I_("Trust"),
      I_("GOVERNMENT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_043_010_000_000;
   const BFSubstitutionSet SubSet_002_043_010_000_000(
    &aKeys_002_043_010_000_000[0], &aValues_002_043_010_000_000[0] );
   // Substitution set RvCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_044_001_000_000[] = {
      I_("8"),
      I_("5"),
      I_("48"),
      I_("6"),
      I_("99"),
      I_("49"),
      I_("11"),
      I_("95"),
      I_("10"),
      I_("1"),
      I_("3"),
      I_("9"),
      I_("46"),
      I_("45"),
      I_("4"),
      I_("2"),
      I_("12"),
      I_("7"),
      I_("47"),
      I_("44"),
      0x00
   };

   static const I_CHAR* aValues_002_044_001_000_000[] = {
      I_("Back Dated"),
      I_("Cancelled"),
      I_("Forced settlement"),
      I_("Input Error"),
      I_("Miscellaneous"),
      I_("Money Wired to Bank"),
      I_("Returned From Bank"),
      I_("RIF Data Cleanup"),
      I_("Settlement Adjustment"),
      I_("Wrong Account"),
      I_("Wrong Amount"),
      I_("Wrong Commission"),
      I_("Wrong deposit date - Contribution Receipts"),
      I_("Wrong deposit type"),
      I_("Wrong Fee"),
      I_("Wrong Fund"),
      I_("Wrong Price"),
      I_("Wrong Salesman"),
      I_("Wrong tax amount"),
      I_("Wrong trade date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_044_001_000_000;
   const BFSubstitutionSet SubSet_002_044_001_000_000(
    &aKeys_002_044_001_000_000[0], &aValues_002_044_001_000_000[0] );
   // Substitution set RvCodeSet.  Language: enCA
   static const I_CHAR* aKeys_002_044_003_000_000[] = {
      I_("8"),
      I_("5"),
      I_("48"),
      I_("6"),
      I_("99"),
      I_("49"),
      I_("11"),
      I_("95"),
      I_("10"),
      I_("1"),
      I_("3"),
      I_("9"),
      I_("46"),
      I_("45"),
      I_("4"),
      I_("2"),
      I_("12"),
      I_("7"),
      I_("47"),
      I_("44"),
      0x00
   };

   static const I_CHAR* aValues_002_044_003_000_000[] = {
      I_("Back Dated"),
      I_("Cancelled"),
      I_("Forced settlement"),
      I_("Input Error"),
      I_("Miscellaneous"),
      I_("Money Wired to Bank"),
      I_("Returned From Bank"),
      I_("RIF Data Cleanup"),
      I_("Settlement Adjustment"),
      I_("Wrong Account"),
      I_("Wrong Amount"),
      I_("Wrong Commission"),
      I_("Wrong deposit date - Contribution Receipts"),
      I_("Wrong deposit type"),
      I_("Wrong Fee"),
      I_("Wrong Fund"),
      I_("Wrong Price"),
      I_("Wrong Salesman"),
      I_("Wrong tax amount"),
      I_("Wrong trade date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_044_003_000_000;
   const BFSubstitutionSet SubSet_002_044_003_000_000(
    &aKeys_002_044_003_000_000[0], &aValues_002_044_003_000_000[0] );
   // Substitution set RvCodeSet.  Language: frFR
   static const I_CHAR* aKeys_002_044_004_000_000[] = {
      I_("8"),
      I_("5"),
      I_("48"),
      I_("6"),
      I_("99"),
      I_("49"),
      I_("11"),
      I_("95"),
      I_("10"),
      I_("1"),
      I_("3"),
      I_("9"),
      I_("46"),
      I_("45"),
      I_("4"),
      I_("2"),
      I_("12"),
      I_("7"),
      I_("47"),
      I_("44"),
      0x00
   };

   static const I_CHAR* aValues_002_044_004_000_000[] = {
      I_("Back Dated"),
      I_("Cancelled"),
      I_("Forced settlement"),
      I_("Input Error"),
      I_("Miscellaneous"),
      I_("Money Wired to Bank"),
      I_("Returned From Bank"),
      I_("RIF Data Cleanup"),
      I_("Settlement Adjustment"),
      I_("Wrong Account"),
      I_("Wrong Amount"),
      I_("Wrong Commission"),
      I_("Wrong deposit date - Contribution Receipts"),
      I_("Wrong deposit type"),
      I_("Wrong Fee"),
      I_("Wrong Fund"),
      I_("Wrong Price"),
      I_("Wrong Salesman"),
      I_("Wrong tax amount"),
      I_("Wrong trade date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_044_004_000_000;
   const BFSubstitutionSet SubSet_002_044_004_000_000(
    &aKeys_002_044_004_000_000[0], &aValues_002_044_004_000_000[0] );
   // Substitution set RvCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_044_005_000_000[] = {
      I_("8"),
      I_("5"),
      I_("48"),
      I_("6"),
      I_("99"),
      I_("49"),
      I_("11"),
      I_("95"),
      I_("10"),
      I_("1"),
      I_("3"),
      I_("9"),
      I_("46"),
      I_("45"),
      I_("4"),
      I_("2"),
      I_("12"),
      I_("7"),
      I_("47"),
      I_("44"),
      0x00
   };

   static const I_CHAR* aValues_002_044_005_000_000[] = {
      I_("Antidaté"),
      I_("Annulé"),
      I_("Règlement forcé"),
      I_("Erreur de saisie"),
      I_("Divers"),
      I_("Argent transféré à la banque"),
      I_("Remboursé par la banque"),
      I_("Nettoyage des données FRR"),
      I_("Ajustement de règlement"),
      I_("Compte erroné"),
      I_("Montant erroné"),
      I_("Commission erronée"),
      I_("Date de dépôt erronée - reçu de cotisation"),
      I_("Code de dépôt erroné"),
      I_("Frais erronés"),
      I_("Fonds erroné"),
      I_("Prix erroné"),
      I_("Représentant erroné"),
      I_("Montant d'imposition erroné"),
      I_("Date de transaction erronée"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_044_005_000_000;
   const BFSubstitutionSet SubSet_002_044_005_000_000(
    &aKeys_002_044_005_000_000[0], &aValues_002_044_005_000_000[0] );
   // Substitution set RvCodeSet.  Language: enIE
   static const I_CHAR* aKeys_002_044_006_000_000[] = {
      I_("8"),
      I_("5"),
      I_("48"),
      I_("6"),
      I_("99"),
      I_("49"),
      I_("11"),
      I_("95"),
      I_("10"),
      I_("1"),
      I_("3"),
      I_("9"),
      I_("46"),
      I_("45"),
      I_("4"),
      I_("2"),
      I_("12"),
      I_("7"),
      I_("47"),
      I_("44"),
      0x00
   };

   static const I_CHAR* aValues_002_044_006_000_000[] = {
      I_("Back Dated"),
      I_("Cancelled"),
      I_("Forced settlement"),
      I_("Input Error"),
      I_("Miscellaneous"),
      I_("Money Wired to Bank"),
      I_("Returned From Bank"),
      I_("RIF Data Cleanup"),
      I_("Settlement Adjustment"),
      I_("Wrong Account"),
      I_("Wrong Amount"),
      I_("Wrong Commission"),
      I_("Wrong deposit date - Contribution Receipts"),
      I_("Wrong deposit type"),
      I_("Wrong Fee"),
      I_("Wrong Fund"),
      I_("Wrong Price"),
      I_("Wrong Salesman"),
      I_("Wrong tax amount"),
      I_("Wrong trade date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_044_006_000_000;
   const BFSubstitutionSet SubSet_002_044_006_000_000(
    &aKeys_002_044_006_000_000[0], &aValues_002_044_006_000_000[0] );
   // Substitution set RvCodeSet.  Language: deDE
   static const I_CHAR* aKeys_002_044_007_000_000[] = {
      I_("8"),
      I_("5"),
      I_("48"),
      I_("6"),
      I_("99"),
      I_("49"),
      I_("11"),
      I_("95"),
      I_("10"),
      I_("1"),
      I_("3"),
      I_("9"),
      I_("46"),
      I_("45"),
      I_("4"),
      I_("2"),
      I_("12"),
      I_("7"),
      I_("47"),
      I_("44"),
      0x00
   };

   static const I_CHAR* aValues_002_044_007_000_000[] = {
      I_("Back Dated"),
      I_("Cancelled"),
      I_("Forced settlement"),
      I_("Input Error"),
      I_("Miscellaneous"),
      I_("Money Wired to Bank"),
      I_("Returned From Bank"),
      I_("RIF Data Cleanup"),
      I_("Settlement Adjustment"),
      I_("Wrong Account"),
      I_("Wrong Amount"),
      I_("Wrong Commission"),
      I_("Wrong deposit date - Contribution Receipts"),
      I_("Wrong deposit type"),
      I_("Wrong Fee"),
      I_("Wrong Fund"),
      I_("Wrong Price"),
      I_("Wrong Salesman"),
      I_("Wrong tax amount"),
      I_("Wrong trade date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_044_007_000_000;
   const BFSubstitutionSet SubSet_002_044_007_000_000(
    &aKeys_002_044_007_000_000[0], &aValues_002_044_007_000_000[0] );
   // Substitution set RvCodeSet.  Language: esEs
   static const I_CHAR* aKeys_002_044_008_000_000[] = {
      I_("8"),
      I_("5"),
      I_("48"),
      I_("6"),
      I_("99"),
      I_("49"),
      I_("11"),
      I_("95"),
      I_("10"),
      I_("1"),
      I_("3"),
      I_("9"),
      I_("46"),
      I_("45"),
      I_("4"),
      I_("2"),
      I_("12"),
      I_("7"),
      I_("47"),
      I_("44"),
      0x00
   };

   static const I_CHAR* aValues_002_044_008_000_000[] = {
      I_("Back Dated"),
      I_("Cancelled"),
      I_("Forced settlement"),
      I_("Input Error"),
      I_("Miscellaneous"),
      I_("Money Wired to Bank"),
      I_("Returned From Bank"),
      I_("RIF Data Cleanup"),
      I_("Settlement Adjustment"),
      I_("Wrong Account"),
      I_("Wrong Amount"),
      I_("Wrong Commission"),
      I_("Wrong deposit date - Contribution Receipts"),
      I_("Wrong deposit type"),
      I_("Wrong Fee"),
      I_("Wrong Fund"),
      I_("Wrong Price"),
      I_("Wrong Salesman"),
      I_("Wrong tax amount"),
      I_("Wrong trade date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_044_008_000_000;
   const BFSubstitutionSet SubSet_002_044_008_000_000(
    &aKeys_002_044_008_000_000[0], &aValues_002_044_008_000_000[0] );
   // Substitution set RvCodeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_044_010_000_000[] = {
      I_("8"),
      I_("5"),
      I_("48"),
      I_("6"),
      I_("99"),
      I_("49"),
      I_("11"),
      I_("95"),
      I_("10"),
      I_("1"),
      I_("3"),
      I_("9"),
      I_("46"),
      I_("45"),
      I_("4"),
      I_("2"),
      I_("12"),
      I_("7"),
      I_("47"),
      I_("44"),
      0x00
   };

   static const I_CHAR* aValues_002_044_010_000_000[] = {
      I_("Geantedateerd"),
      I_("Geannuleerd"),
      I_("Forced settlement"),
      I_("Invoerfout"),
      I_("Allerlei"),
      I_("Money Wired to Bank"),
      I_("Teruggestuurd van bank"),
      I_("Gegevens opschonen RIF"),
      I_("Betalingsaanpassing"),
      I_("Verkeerd account"),
      I_("Verkeerd bedrag"),
      I_("Verkeerde commissie"),
      I_("Wrong deposit date - Contribution Receipts"),
      I_("Wrong deposit type"),
      I_("Verkeerde kosten"),
      I_("Verkeerd fonds"),
      I_("Wrong Price"),
      I_("Verkeerde verkoper"),
      I_("Wrong tax amount"),
      I_("Wrong trade date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_044_010_000_000;
   const BFSubstitutionSet SubSet_002_044_010_000_000(
    &aKeys_002_044_010_000_000[0], &aValues_002_044_010_000_000[0] );
   // Substitution set SettleTypeCode.  Language: enUS
   static const I_CHAR* aKeys_002_045_001_000_000[] = {
      I_("B"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_045_001_000_000[] = {
      I_("Block"),
      I_("Individual"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_045_001_000_000;
   const BFSubstitutionSet SubSet_002_045_001_000_000(
    &aKeys_002_045_001_000_000[0], &aValues_002_045_001_000_000[0] );
   // Substitution set SettleTypeCode.  Language: enCA
   static const I_CHAR* aKeys_002_045_003_000_000[] = {
      I_("B"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_045_003_000_000[] = {
      I_("Block"),
      I_("Individual"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_045_003_000_000;
   const BFSubstitutionSet SubSet_002_045_003_000_000(
    &aKeys_002_045_003_000_000[0], &aValues_002_045_003_000_000[0] );
   // Substitution set SettleTypeCode.  Language: frFR
   static const I_CHAR* aKeys_002_045_004_000_000[] = {
      I_("B"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_045_004_000_000[] = {
      I_("Bloc"),
      I_("PARTICULIER"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_045_004_000_000;
   const BFSubstitutionSet SubSet_002_045_004_000_000(
    &aKeys_002_045_004_000_000[0], &aValues_002_045_004_000_000[0] );
   // Substitution set SettleTypeCode.  Language: frCA
   static const I_CHAR* aKeys_002_045_005_000_000[] = {
      I_("B"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_045_005_000_000[] = {
      I_("De groupe"),
      I_("Individuel"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_045_005_000_000;
   const BFSubstitutionSet SubSet_002_045_005_000_000(
    &aKeys_002_045_005_000_000[0], &aValues_002_045_005_000_000[0] );
   // Substitution set SettleTypeCode.  Language: enIE
   static const I_CHAR* aKeys_002_045_006_000_000[] = {
      I_("B"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_045_006_000_000[] = {
      I_("Block"),
      I_("Individual"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_045_006_000_000;
   const BFSubstitutionSet SubSet_002_045_006_000_000(
    &aKeys_002_045_006_000_000[0], &aValues_002_045_006_000_000[0] );
   // Substitution set SettleTypeCode.  Language: deDE
   static const I_CHAR* aKeys_002_045_007_000_000[] = {
      I_("B"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_045_007_000_000[] = {
      I_("Block"),
      I_("Individual"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_045_007_000_000;
   const BFSubstitutionSet SubSet_002_045_007_000_000(
    &aKeys_002_045_007_000_000[0], &aValues_002_045_007_000_000[0] );
   // Substitution set SettleTypeCode.  Language: esEs
   static const I_CHAR* aKeys_002_045_008_000_000[] = {
      I_("B"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_045_008_000_000[] = {
      I_("Block"),
      I_("Individual"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_045_008_000_000;
   const BFSubstitutionSet SubSet_002_045_008_000_000(
    &aKeys_002_045_008_000_000[0], &aValues_002_045_008_000_000[0] );
   // Substitution set SettleTypeCode.  Language: nlNL
   static const I_CHAR* aKeys_002_045_010_000_000[] = {
      I_("B"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_045_010_000_000[] = {
      I_("Blokkeren"),
      I_("Individueel"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_045_010_000_000;
   const BFSubstitutionSet SubSet_002_045_010_000_000(
    &aKeys_002_045_010_000_000[0], &aValues_002_045_010_000_000[0] );
   // Substitution set Account DesignationSet.  Language: enUS
   static const I_CHAR* aKeys_002_046_001_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_046_001_000_000[] = {
      I_("Client"),
      I_("Nominee"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_001_000_000;
   const BFSubstitutionSet SubSet_002_046_001_000_000(
    &aKeys_002_046_001_000_000[0], &aValues_002_046_001_000_000[0] );
   // Substitution set Account DesignationSet.  Language: enUS, Market: 2
   static const I_CHAR* aKeys_002_046_001_002_000[] = {
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_046_001_002_000[] = {
      I_("Client"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_001_002_000;
   const BFSubstitutionSet SubSet_002_046_001_002_000(
    &aKeys_002_046_001_002_000[0], &aValues_002_046_001_002_000[0] );
   // Substitution set Account DesignationSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_046_001_003_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_046_001_003_000[] = {
      I_("Client"),
      I_("Nominee"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_001_003_000;
   const BFSubstitutionSet SubSet_002_046_001_003_000(
    &aKeys_002_046_001_003_000[0], &aValues_002_046_001_003_000[0] );
   // Substitution set Account DesignationSet.  Language: enUS, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_046_001_003_003[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_001_003_003[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_001_003_003;
   const BFSubstitutionSet SubSet_002_046_001_003_003(
    &aKeys_002_046_001_003_003[0], &aValues_002_046_001_003_003[0] );
   // Substitution set Account DesignationSet.  Language: enUS, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_046_001_003_011[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_001_003_011[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_001_003_011;
   const BFSubstitutionSet SubSet_002_046_001_003_011(
    &aKeys_002_046_001_003_011[0], &aValues_002_046_001_003_011[0] );
   // Substitution set Account DesignationSet.  Language: enUS, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_046_001_003_014[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_001_003_014[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_001_003_014;
   const BFSubstitutionSet SubSet_002_046_001_003_014(
    &aKeys_002_046_001_003_014[0], &aValues_002_046_001_003_014[0] );
   // Substitution set Account DesignationSet.  Language: enCA
   static const I_CHAR* aKeys_002_046_003_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_046_003_000_000[] = {
      I_("Client"),
      I_("Nominee"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_003_000_000;
   const BFSubstitutionSet SubSet_002_046_003_000_000(
    &aKeys_002_046_003_000_000[0], &aValues_002_046_003_000_000[0] );
   // Substitution set Account DesignationSet.  Language: enCA, Market: 2
   static const I_CHAR* aKeys_002_046_003_002_000[] = {
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_046_003_002_000[] = {
      I_("Client"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_003_002_000;
   const BFSubstitutionSet SubSet_002_046_003_002_000(
    &aKeys_002_046_003_002_000[0], &aValues_002_046_003_002_000[0] );
   // Substitution set Account DesignationSet.  Language: enCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_046_003_003_003[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_003_003_003[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_003_003_003;
   const BFSubstitutionSet SubSet_002_046_003_003_003(
    &aKeys_002_046_003_003_003[0], &aValues_002_046_003_003_003[0] );
   // Substitution set Account DesignationSet.  Language: enCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_046_003_003_011[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_003_003_011[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_003_003_011;
   const BFSubstitutionSet SubSet_002_046_003_003_011(
    &aKeys_002_046_003_003_011[0], &aValues_002_046_003_003_011[0] );
   // Substitution set Account DesignationSet.  Language: enCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_046_003_003_014[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_003_003_014[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_003_003_014;
   const BFSubstitutionSet SubSet_002_046_003_003_014(
    &aKeys_002_046_003_003_014[0], &aValues_002_046_003_003_014[0] );
   // Substitution set Account DesignationSet.  Language: frFR
   static const I_CHAR* aKeys_002_046_004_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_046_004_000_000[] = {
      I_("Client"),
      I_("Bénéficiaire en titre"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_004_000_000;
   const BFSubstitutionSet SubSet_002_046_004_000_000(
    &aKeys_002_046_004_000_000[0], &aValues_002_046_004_000_000[0] );
   // Substitution set Account DesignationSet.  Language: frFR, Market: 2
   static const I_CHAR* aKeys_002_046_004_002_000[] = {
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_046_004_002_000[] = {
      I_("Client"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_004_002_000;
   const BFSubstitutionSet SubSet_002_046_004_002_000(
    &aKeys_002_046_004_002_000[0], &aValues_002_046_004_002_000[0] );
   // Substitution set Account DesignationSet.  Language: frFR, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_046_004_003_003[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_004_003_003[] = {
      I_("Client"),
      I_("Bénéficiaire en titre"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_004_003_003;
   const BFSubstitutionSet SubSet_002_046_004_003_003(
    &aKeys_002_046_004_003_003[0], &aValues_002_046_004_003_003[0] );
   // Substitution set Account DesignationSet.  Language: frFR, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_046_004_003_011[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_004_003_011[] = {
      I_("Client"),
      I_("Bénéficiaire en titre"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_004_003_011;
   const BFSubstitutionSet SubSet_002_046_004_003_011(
    &aKeys_002_046_004_003_011[0], &aValues_002_046_004_003_011[0] );
   // Substitution set Account DesignationSet.  Language: frFR, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_046_004_003_014[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_004_003_014[] = {
      I_("Client"),
      I_("Bénéficiaire en titre"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_004_003_014;
   const BFSubstitutionSet SubSet_002_046_004_003_014(
    &aKeys_002_046_004_003_014[0], &aValues_002_046_004_003_014[0] );
   // Substitution set Account DesignationSet.  Language: frCA
   static const I_CHAR* aKeys_002_046_005_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_046_005_000_000[] = {
      I_("Client"),
      I_("Nominé"),
      I_("Intermédiaire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_005_000_000;
   const BFSubstitutionSet SubSet_002_046_005_000_000(
    &aKeys_002_046_005_000_000[0], &aValues_002_046_005_000_000[0] );
   // Substitution set Account DesignationSet.  Language: frCA, Market: 2
   static const I_CHAR* aKeys_002_046_005_002_000[] = {
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_046_005_002_000[] = {
      I_("Client"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_005_002_000;
   const BFSubstitutionSet SubSet_002_046_005_002_000(
    &aKeys_002_046_005_002_000[0], &aValues_002_046_005_002_000[0] );
   // Substitution set Account DesignationSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_046_005_003_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_046_005_003_000[] = {
      I_("Client"),
      I_("Nominé"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_005_003_000;
   const BFSubstitutionSet SubSet_002_046_005_003_000(
    &aKeys_002_046_005_003_000[0], &aValues_002_046_005_003_000[0] );
   // Substitution set Account DesignationSet.  Language: frCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_046_005_003_003[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_005_003_003[] = {
      I_("Client"),
      I_("Mandataire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_005_003_003;
   const BFSubstitutionSet SubSet_002_046_005_003_003(
    &aKeys_002_046_005_003_003[0], &aValues_002_046_005_003_003[0] );
   // Substitution set Account DesignationSet.  Language: frCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_046_005_003_011[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_005_003_011[] = {
      I_("Client"),
      I_("Mandataire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_005_003_011;
   const BFSubstitutionSet SubSet_002_046_005_003_011(
    &aKeys_002_046_005_003_011[0], &aValues_002_046_005_003_011[0] );
   // Substitution set Account DesignationSet.  Language: frCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_046_005_003_014[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_005_003_014[] = {
      I_("Client"),
      I_("Mandataire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_005_003_014;
   const BFSubstitutionSet SubSet_002_046_005_003_014(
    &aKeys_002_046_005_003_014[0], &aValues_002_046_005_003_014[0] );
   // Substitution set Account DesignationSet.  Language: enIE
   static const I_CHAR* aKeys_002_046_006_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_046_006_000_000[] = {
      I_("Client"),
      I_("Nominee"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_006_000_000;
   const BFSubstitutionSet SubSet_002_046_006_000_000(
    &aKeys_002_046_006_000_000[0], &aValues_002_046_006_000_000[0] );
   // Substitution set Account DesignationSet.  Language: enIE, Market: 2
   static const I_CHAR* aKeys_002_046_006_002_000[] = {
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_046_006_002_000[] = {
      I_("Client"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_006_002_000;
   const BFSubstitutionSet SubSet_002_046_006_002_000(
    &aKeys_002_046_006_002_000[0], &aValues_002_046_006_002_000[0] );
   // Substitution set Account DesignationSet.  Language: enIE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_046_006_003_003[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_006_003_003[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_006_003_003;
   const BFSubstitutionSet SubSet_002_046_006_003_003(
    &aKeys_002_046_006_003_003[0], &aValues_002_046_006_003_003[0] );
   // Substitution set Account DesignationSet.  Language: enIE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_046_006_003_011[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_006_003_011[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_006_003_011;
   const BFSubstitutionSet SubSet_002_046_006_003_011(
    &aKeys_002_046_006_003_011[0], &aValues_002_046_006_003_011[0] );
   // Substitution set Account DesignationSet.  Language: enIE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_046_006_003_014[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_006_003_014[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_006_003_014;
   const BFSubstitutionSet SubSet_002_046_006_003_014(
    &aKeys_002_046_006_003_014[0], &aValues_002_046_006_003_014[0] );
   // Substitution set Account DesignationSet.  Language: deDE
   static const I_CHAR* aKeys_002_046_007_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_046_007_000_000[] = {
      I_("Client"),
      I_("Nominee"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_007_000_000;
   const BFSubstitutionSet SubSet_002_046_007_000_000(
    &aKeys_002_046_007_000_000[0], &aValues_002_046_007_000_000[0] );
   // Substitution set Account DesignationSet.  Language: deDE, Market: 2
   static const I_CHAR* aKeys_002_046_007_002_000[] = {
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_046_007_002_000[] = {
      I_("Client"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_007_002_000;
   const BFSubstitutionSet SubSet_002_046_007_002_000(
    &aKeys_002_046_007_002_000[0], &aValues_002_046_007_002_000[0] );
   // Substitution set Account DesignationSet.  Language: deDE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_046_007_003_003[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_007_003_003[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_007_003_003;
   const BFSubstitutionSet SubSet_002_046_007_003_003(
    &aKeys_002_046_007_003_003[0], &aValues_002_046_007_003_003[0] );
   // Substitution set Account DesignationSet.  Language: deDE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_046_007_003_011[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_007_003_011[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_007_003_011;
   const BFSubstitutionSet SubSet_002_046_007_003_011(
    &aKeys_002_046_007_003_011[0], &aValues_002_046_007_003_011[0] );
   // Substitution set Account DesignationSet.  Language: deDE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_046_007_003_014[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_007_003_014[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_007_003_014;
   const BFSubstitutionSet SubSet_002_046_007_003_014(
    &aKeys_002_046_007_003_014[0], &aValues_002_046_007_003_014[0] );
   // Substitution set Account DesignationSet.  Language: esEs
   static const I_CHAR* aKeys_002_046_008_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_046_008_000_000[] = {
      I_("Client"),
      I_("Nominee"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_008_000_000;
   const BFSubstitutionSet SubSet_002_046_008_000_000(
    &aKeys_002_046_008_000_000[0], &aValues_002_046_008_000_000[0] );
   // Substitution set Account DesignationSet.  Language: esEs, Market: 2
   static const I_CHAR* aKeys_002_046_008_002_000[] = {
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_046_008_002_000[] = {
      I_("Client"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_008_002_000;
   const BFSubstitutionSet SubSet_002_046_008_002_000(
    &aKeys_002_046_008_002_000[0], &aValues_002_046_008_002_000[0] );
   // Substitution set Account DesignationSet.  Language: esEs, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_046_008_003_003[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_008_003_003[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_008_003_003;
   const BFSubstitutionSet SubSet_002_046_008_003_003(
    &aKeys_002_046_008_003_003[0], &aValues_002_046_008_003_003[0] );
   // Substitution set Account DesignationSet.  Language: esEs, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_046_008_003_011[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_008_003_011[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_008_003_011;
   const BFSubstitutionSet SubSet_002_046_008_003_011(
    &aKeys_002_046_008_003_011[0], &aValues_002_046_008_003_011[0] );
   // Substitution set Account DesignationSet.  Language: esEs, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_046_008_003_014[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_008_003_014[] = {
      I_("Client"),
      I_("Nominee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_008_003_014;
   const BFSubstitutionSet SubSet_002_046_008_003_014(
    &aKeys_002_046_008_003_014[0], &aValues_002_046_008_003_014[0] );
   // Substitution set Account DesignationSet.  Language: enGB, Market: 2
   static const I_CHAR* aKeys_002_046_009_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_046_009_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_009_002_000;
   const BFSubstitutionSet SubSet_002_046_009_002_000(
    &aKeys_002_046_009_002_000[0], &aValues_002_046_009_002_000[0] );
   // Substitution set Account DesignationSet.  Language: enGB, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_046_009_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_046_009_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_009_003_003;
   const BFSubstitutionSet SubSet_002_046_009_003_003(
    &aKeys_002_046_009_003_003[0], &aValues_002_046_009_003_003[0] );
   // Substitution set Account DesignationSet.  Language: enGB, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_046_009_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_046_009_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_009_003_011;
   const BFSubstitutionSet SubSet_002_046_009_003_011(
    &aKeys_002_046_009_003_011[0], &aValues_002_046_009_003_011[0] );
   // Substitution set Account DesignationSet.  Language: enGB, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_046_009_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_046_009_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_009_003_014;
   const BFSubstitutionSet SubSet_002_046_009_003_014(
    &aKeys_002_046_009_003_014[0], &aValues_002_046_009_003_014[0] );
   // Substitution set Account DesignationSet.  Language: nlNL
   static const I_CHAR* aKeys_002_046_010_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_046_010_000_000[] = {
      I_("Klant"),
      I_("Gevolmachtigde"),
      I_("Tussenpersoon"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_010_000_000;
   const BFSubstitutionSet SubSet_002_046_010_000_000(
    &aKeys_002_046_010_000_000[0], &aValues_002_046_010_000_000[0] );
   // Substitution set Account DesignationSet.  Language: nlNL, Market: 2
   static const I_CHAR* aKeys_002_046_010_002_000[] = {
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_046_010_002_000[] = {
      I_("Klant"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_010_002_000;
   const BFSubstitutionSet SubSet_002_046_010_002_000(
    &aKeys_002_046_010_002_000[0], &aValues_002_046_010_002_000[0] );
   // Substitution set Account DesignationSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_046_010_003_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      0x00
   };

   static const I_CHAR* aValues_002_046_010_003_000[] = {
      I_("Klant"),
      I_("Gevolmachtigde"),
      I_("Tussenpersoon"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_010_003_000;
   const BFSubstitutionSet SubSet_002_046_010_003_000(
    &aKeys_002_046_010_003_000[0], &aValues_002_046_010_003_000[0] );
   // Substitution set Account DesignationSet.  Language: nlNL, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_046_010_003_003[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_010_003_003[] = {
      I_("Klant"),
      I_("Gevolmachtigde"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_010_003_003;
   const BFSubstitutionSet SubSet_002_046_010_003_003(
    &aKeys_002_046_010_003_003[0], &aValues_002_046_010_003_003[0] );
   // Substitution set Account DesignationSet.  Language: nlNL, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_046_010_003_011[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_010_003_011[] = {
      I_("Klant"),
      I_("Gevolmachtigde"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_010_003_011;
   const BFSubstitutionSet SubSet_002_046_010_003_011(
    &aKeys_002_046_010_003_011[0], &aValues_002_046_010_003_011[0] );
   // Substitution set Account DesignationSet.  Language: nlNL, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_046_010_003_014[] = {
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_046_010_003_014[] = {
      I_("Klant"),
      I_("Gevolmachtigde"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_010_003_014;
   const BFSubstitutionSet SubSet_002_046_010_003_014(
    &aKeys_002_046_010_003_014[0], &aValues_002_046_010_003_014[0] );
   // Substitution set Account DesignationSet.  Language: itIT, Market: 2
   static const I_CHAR* aKeys_002_046_011_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_046_011_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_011_002_000;
   const BFSubstitutionSet SubSet_002_046_011_002_000(
    &aKeys_002_046_011_002_000[0], &aValues_002_046_011_002_000[0] );
   // Substitution set Account DesignationSet.  Language: itIT, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_046_011_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_046_011_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_011_003_003;
   const BFSubstitutionSet SubSet_002_046_011_003_003(
    &aKeys_002_046_011_003_003[0], &aValues_002_046_011_003_003[0] );
   // Substitution set Account DesignationSet.  Language: itIT, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_046_011_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_046_011_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_011_003_011;
   const BFSubstitutionSet SubSet_002_046_011_003_011(
    &aKeys_002_046_011_003_011[0], &aValues_002_046_011_003_011[0] );
   // Substitution set Account DesignationSet.  Language: itIT, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_046_011_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_046_011_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_011_003_014;
   const BFSubstitutionSet SubSet_002_046_011_003_014(
    &aKeys_002_046_011_003_014[0], &aValues_002_046_011_003_014[0] );
   // Substitution set Account DesignationSet.  Language: thTH, Market: 2
   static const I_CHAR* aKeys_002_046_012_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_046_012_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_012_002_000;
   const BFSubstitutionSet SubSet_002_046_012_002_000(
    &aKeys_002_046_012_002_000[0], &aValues_002_046_012_002_000[0] );
   // Substitution set Account DesignationSet.  Language: thTH, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_046_012_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_046_012_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_012_003_003;
   const BFSubstitutionSet SubSet_002_046_012_003_003(
    &aKeys_002_046_012_003_003[0], &aValues_002_046_012_003_003[0] );
   // Substitution set Account DesignationSet.  Language: thTH, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_046_012_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_046_012_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_012_003_011;
   const BFSubstitutionSet SubSet_002_046_012_003_011(
    &aKeys_002_046_012_003_011[0], &aValues_002_046_012_003_011[0] );
   // Substitution set Account DesignationSet.  Language: thTH, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_046_012_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_046_012_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_046_012_003_014;
   const BFSubstitutionSet SubSet_002_046_012_003_014(
    &aKeys_002_046_012_003_014[0], &aValues_002_046_012_003_014[0] );
   // Substitution set AcctStatusSet.  Language: enUS
   static const I_CHAR* aKeys_002_047_001_000_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("40"),
      I_("41"),
      I_("14"),
      I_("15"),
      I_("50"),
      0x00
   };

   static const I_CHAR* aValues_002_047_001_000_000[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("RRSP Transfer"),
      I_("External RRSP transfer"),
      I_("Death"),
      I_("Death transfer"),
      I_("Reported Unclaimed Property"),
      I_("Remitted Unclaimed Property"),
      I_("Unverified"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_001_000_000;
   const BFSubstitutionSet SubSet_002_047_001_000_000(
    &aKeys_002_047_001_000_000[0], &aValues_002_047_001_000_000[0] );
   // Substitution set AcctStatusSet.  Language: enUS, Market: 2
   static const I_CHAR* aKeys_002_047_001_002_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      I_("14"),
      I_("15"),
      0x00
   };

   static const I_CHAR* aValues_002_047_001_002_000[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      I_("Reported Unclaimed Property"),
      I_("Remitted Unclaimed Property"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_001_002_000;
   const BFSubstitutionSet SubSet_002_047_001_002_000(
    &aKeys_002_047_001_002_000[0], &aValues_002_047_001_002_000[0] );
   // Substitution set AcctStatusSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_047_001_003_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("40"),
      I_("41"),
      I_("14"),
      I_("15"),
      0x00
   };

   static const I_CHAR* aValues_002_047_001_003_000[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("RRSP Transfer"),
      I_("External RRSP transfer"),
      I_("Death"),
      I_("Death transfer"),
      I_("Reported Unclaimed Property"),
      I_("Remitted Unclaimed Property"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_001_003_000;
   const BFSubstitutionSet SubSet_002_047_001_003_000(
    &aKeys_002_047_001_003_000[0], &aValues_002_047_001_003_000[0] );
   // Substitution set AcctStatusSet.  Language: enUS, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_047_001_003_003[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      I_("14"),
      I_("15"),
      0x00
   };

   static const I_CHAR* aValues_002_047_001_003_003[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      I_("Reported Unclaimed Property"),
      I_("Remitted Unclaimed Property"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_001_003_003;
   const BFSubstitutionSet SubSet_002_047_001_003_003(
    &aKeys_002_047_001_003_003[0], &aValues_002_047_001_003_003[0] );
   // Substitution set AcctStatusSet.  Language: enUS, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_047_001_003_011[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      I_("14"),
      I_("15"),
      0x00
   };

   static const I_CHAR* aValues_002_047_001_003_011[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      I_("Reported Unclaimed Property"),
      I_("Remitted Unclaimed Property"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_001_003_011;
   const BFSubstitutionSet SubSet_002_047_001_003_011(
    &aKeys_002_047_001_003_011[0], &aValues_002_047_001_003_011[0] );
   // Substitution set AcctStatusSet.  Language: enUS, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_047_001_003_014[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      I_("14"),
      I_("15"),
      0x00
   };

   static const I_CHAR* aValues_002_047_001_003_014[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      I_("Reported Unclaimed Property"),
      I_("Remitted Unclaimed Property"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_001_003_014;
   const BFSubstitutionSet SubSet_002_047_001_003_014(
    &aKeys_002_047_001_003_014[0], &aValues_002_047_001_003_014[0] );
   // Substitution set AcctStatusSet.  Language: enCA
   static const I_CHAR* aKeys_002_047_003_000_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_003_000_000[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("RRSP Transfer"),
      I_("External RRSP transfer"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_003_000_000;
   const BFSubstitutionSet SubSet_002_047_003_000_000(
    &aKeys_002_047_003_000_000[0], &aValues_002_047_003_000_000[0] );
   // Substitution set AcctStatusSet.  Language: enCA, Market: 2
   static const I_CHAR* aKeys_002_047_003_002_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_003_002_000[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_003_002_000;
   const BFSubstitutionSet SubSet_002_047_003_002_000(
    &aKeys_002_047_003_002_000[0], &aValues_002_047_003_002_000[0] );
   // Substitution set AcctStatusSet.  Language: enCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_047_003_003_003[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_003_003_003[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_003_003_003;
   const BFSubstitutionSet SubSet_002_047_003_003_003(
    &aKeys_002_047_003_003_003[0], &aValues_002_047_003_003_003[0] );
   // Substitution set AcctStatusSet.  Language: enCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_047_003_003_011[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_003_003_011[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_003_003_011;
   const BFSubstitutionSet SubSet_002_047_003_003_011(
    &aKeys_002_047_003_003_011[0], &aValues_002_047_003_003_011[0] );
   // Substitution set AcctStatusSet.  Language: enCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_047_003_003_014[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_003_003_014[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_003_003_014;
   const BFSubstitutionSet SubSet_002_047_003_003_014(
    &aKeys_002_047_003_003_014[0], &aValues_002_047_003_003_014[0] );
   // Substitution set AcctStatusSet.  Language: frFR
   static const I_CHAR* aKeys_002_047_004_000_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_004_000_000[] = {
      I_("Actif"),
      I_("En attente"),
      I_("Cloture"),
      I_("RESP"),
      I_("Virement externe RRSP"),
      I_("Deces"),
      I_("Virement deces"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_004_000_000;
   const BFSubstitutionSet SubSet_002_047_004_000_000(
    &aKeys_002_047_004_000_000[0], &aValues_002_047_004_000_000[0] );
   // Substitution set AcctStatusSet.  Language: frFR, Market: 2
   static const I_CHAR* aKeys_002_047_004_002_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_004_002_000[] = {
      I_("Actif"),
      I_("En attente"),
      I_("Cloture"),
      I_("Deces"),
      I_("Virement deces"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_004_002_000;
   const BFSubstitutionSet SubSet_002_047_004_002_000(
    &aKeys_002_047_004_002_000[0], &aValues_002_047_004_002_000[0] );
   // Substitution set AcctStatusSet.  Language: frFR, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_047_004_003_003[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_004_003_003[] = {
      I_("Actif"),
      I_("En attente"),
      I_("Cloture"),
      I_("Deces"),
      I_("Virement deces"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_004_003_003;
   const BFSubstitutionSet SubSet_002_047_004_003_003(
    &aKeys_002_047_004_003_003[0], &aValues_002_047_004_003_003[0] );
   // Substitution set AcctStatusSet.  Language: frFR, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_047_004_003_011[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_004_003_011[] = {
      I_("Actif"),
      I_("En attente"),
      I_("Cloture"),
      I_("Deces"),
      I_("Virement deces"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_004_003_011;
   const BFSubstitutionSet SubSet_002_047_004_003_011(
    &aKeys_002_047_004_003_011[0], &aValues_002_047_004_003_011[0] );
   // Substitution set AcctStatusSet.  Language: frFR, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_047_004_003_014[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_004_003_014[] = {
      I_("Actif"),
      I_("En attente"),
      I_("Cloture"),
      I_("Deces"),
      I_("Virement deces"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_004_003_014;
   const BFSubstitutionSet SubSet_002_047_004_003_014(
    &aKeys_002_047_004_003_014[0], &aValues_002_047_004_003_014[0] );
   // Substitution set AcctStatusSet.  Language: frCA
   static const I_CHAR* aKeys_002_047_005_000_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("40"),
      I_("41"),
      I_("14"),
      I_("15"),
      0x00
   };

   static const I_CHAR* aValues_002_047_005_000_000[] = {
      I_("Actif"),
      I_("En attente"),
      I_("Fermé"),
      I_("Transfert REER"),
      I_("Transfert REER externe"),
      I_("Décès"),
      I_("Transfert au décès"),
      I_("Biens non réclamés déclarés"),
      I_("Biens non réclamés remis"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_005_000_000;
   const BFSubstitutionSet SubSet_002_047_005_000_000(
    &aKeys_002_047_005_000_000[0], &aValues_002_047_005_000_000[0] );
   // Substitution set AcctStatusSet.  Language: frCA, Market: 2
   static const I_CHAR* aKeys_002_047_005_002_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      I_("14"),
      I_("15"),
      0x00
   };

   static const I_CHAR* aValues_002_047_005_002_000[] = {
      I_("Actif"),
      I_("En attente"),
      I_("Fermé"),
      I_("Décès"),
      I_("Transfert au décès"),
      I_("Biens non réclamés déclarés"),
      I_("Biens non réclamés remis"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_005_002_000;
   const BFSubstitutionSet SubSet_002_047_005_002_000(
    &aKeys_002_047_005_002_000[0], &aValues_002_047_005_002_000[0] );
   // Substitution set AcctStatusSet.  Language: frCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_047_005_003_003[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      I_("14"),
      I_("15"),
      0x00
   };

   static const I_CHAR* aValues_002_047_005_003_003[] = {
      I_("Actif"),
      I_("En attente"),
      I_("Cloture"),
      I_("Deces"),
      I_("Virement deces"),
      I_("Biens non réclamés déclarés"),
      I_("Biens non réclamés remis"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_005_003_003;
   const BFSubstitutionSet SubSet_002_047_005_003_003(
    &aKeys_002_047_005_003_003[0], &aValues_002_047_005_003_003[0] );
   // Substitution set AcctStatusSet.  Language: frCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_047_005_003_011[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      I_("14"),
      I_("15"),
      0x00
   };

   static const I_CHAR* aValues_002_047_005_003_011[] = {
      I_("Actif"),
      I_("En attente"),
      I_("Cloture"),
      I_("Deces"),
      I_("Virement deces"),
      I_("Biens non réclamés déclarés"),
      I_("Biens non réclamés remis"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_005_003_011;
   const BFSubstitutionSet SubSet_002_047_005_003_011(
    &aKeys_002_047_005_003_011[0], &aValues_002_047_005_003_011[0] );
   // Substitution set AcctStatusSet.  Language: frCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_047_005_003_014[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      I_("14"),
      I_("15"),
      0x00
   };

   static const I_CHAR* aValues_002_047_005_003_014[] = {
      I_("Actif"),
      I_("En attente"),
      I_("Cloture"),
      I_("Deces"),
      I_("Virement deces"),
      I_("Biens non réclamés déclarés"),
      I_("Biens non réclamés remis"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_005_003_014;
   const BFSubstitutionSet SubSet_002_047_005_003_014(
    &aKeys_002_047_005_003_014[0], &aValues_002_047_005_003_014[0] );
   // Substitution set AcctStatusSet.  Language: enIE
   static const I_CHAR* aKeys_002_047_006_000_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_006_000_000[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("RRSP Transfer"),
      I_("External RRSP transfer"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_006_000_000;
   const BFSubstitutionSet SubSet_002_047_006_000_000(
    &aKeys_002_047_006_000_000[0], &aValues_002_047_006_000_000[0] );
   // Substitution set AcctStatusSet.  Language: enIE, Market: 2
   static const I_CHAR* aKeys_002_047_006_002_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_006_002_000[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_006_002_000;
   const BFSubstitutionSet SubSet_002_047_006_002_000(
    &aKeys_002_047_006_002_000[0], &aValues_002_047_006_002_000[0] );
   // Substitution set AcctStatusSet.  Language: enIE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_047_006_003_003[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_006_003_003[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_006_003_003;
   const BFSubstitutionSet SubSet_002_047_006_003_003(
    &aKeys_002_047_006_003_003[0], &aValues_002_047_006_003_003[0] );
   // Substitution set AcctStatusSet.  Language: enIE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_047_006_003_011[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_006_003_011[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_006_003_011;
   const BFSubstitutionSet SubSet_002_047_006_003_011(
    &aKeys_002_047_006_003_011[0], &aValues_002_047_006_003_011[0] );
   // Substitution set AcctStatusSet.  Language: enIE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_047_006_003_014[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_006_003_014[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_006_003_014;
   const BFSubstitutionSet SubSet_002_047_006_003_014(
    &aKeys_002_047_006_003_014[0], &aValues_002_047_006_003_014[0] );
   // Substitution set AcctStatusSet.  Language: deDE
   static const I_CHAR* aKeys_002_047_007_000_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_007_000_000[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("RRSP Transfer"),
      I_("External RRSP transfer"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_007_000_000;
   const BFSubstitutionSet SubSet_002_047_007_000_000(
    &aKeys_002_047_007_000_000[0], &aValues_002_047_007_000_000[0] );
   // Substitution set AcctStatusSet.  Language: deDE, Market: 2
   static const I_CHAR* aKeys_002_047_007_002_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_007_002_000[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_007_002_000;
   const BFSubstitutionSet SubSet_002_047_007_002_000(
    &aKeys_002_047_007_002_000[0], &aValues_002_047_007_002_000[0] );
   // Substitution set AcctStatusSet.  Language: deDE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_047_007_003_003[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_007_003_003[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_007_003_003;
   const BFSubstitutionSet SubSet_002_047_007_003_003(
    &aKeys_002_047_007_003_003[0], &aValues_002_047_007_003_003[0] );
   // Substitution set AcctStatusSet.  Language: deDE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_047_007_003_011[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_007_003_011[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_007_003_011;
   const BFSubstitutionSet SubSet_002_047_007_003_011(
    &aKeys_002_047_007_003_011[0], &aValues_002_047_007_003_011[0] );
   // Substitution set AcctStatusSet.  Language: deDE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_047_007_003_014[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_007_003_014[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_007_003_014;
   const BFSubstitutionSet SubSet_002_047_007_003_014(
    &aKeys_002_047_007_003_014[0], &aValues_002_047_007_003_014[0] );
   // Substitution set AcctStatusSet.  Language: esEs
   static const I_CHAR* aKeys_002_047_008_000_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_008_000_000[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("RRSP Transfer"),
      I_("External RRSP transfer"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_008_000_000;
   const BFSubstitutionSet SubSet_002_047_008_000_000(
    &aKeys_002_047_008_000_000[0], &aValues_002_047_008_000_000[0] );
   // Substitution set AcctStatusSet.  Language: esEs, Market: 2
   static const I_CHAR* aKeys_002_047_008_002_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_008_002_000[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_008_002_000;
   const BFSubstitutionSet SubSet_002_047_008_002_000(
    &aKeys_002_047_008_002_000[0], &aValues_002_047_008_002_000[0] );
   // Substitution set AcctStatusSet.  Language: esEs, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_047_008_003_003[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_008_003_003[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_008_003_003;
   const BFSubstitutionSet SubSet_002_047_008_003_003(
    &aKeys_002_047_008_003_003[0], &aValues_002_047_008_003_003[0] );
   // Substitution set AcctStatusSet.  Language: esEs, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_047_008_003_011[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_008_003_011[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_008_003_011;
   const BFSubstitutionSet SubSet_002_047_008_003_011(
    &aKeys_002_047_008_003_011[0], &aValues_002_047_008_003_011[0] );
   // Substitution set AcctStatusSet.  Language: esEs, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_047_008_003_014[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_008_003_014[] = {
      I_("Active"),
      I_("On hold"),
      I_("Terminated"),
      I_("Death"),
      I_("Death transfer"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_008_003_014;
   const BFSubstitutionSet SubSet_002_047_008_003_014(
    &aKeys_002_047_008_003_014[0], &aValues_002_047_008_003_014[0] );
   // Substitution set AcctStatusSet.  Language: enGB, Market: 2
   static const I_CHAR* aKeys_002_047_009_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_047_009_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_009_002_000;
   const BFSubstitutionSet SubSet_002_047_009_002_000(
    &aKeys_002_047_009_002_000[0], &aValues_002_047_009_002_000[0] );
   // Substitution set AcctStatusSet.  Language: enGB, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_047_009_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_047_009_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_009_003_003;
   const BFSubstitutionSet SubSet_002_047_009_003_003(
    &aKeys_002_047_009_003_003[0], &aValues_002_047_009_003_003[0] );
   // Substitution set AcctStatusSet.  Language: enGB, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_047_009_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_047_009_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_009_003_011;
   const BFSubstitutionSet SubSet_002_047_009_003_011(
    &aKeys_002_047_009_003_011[0], &aValues_002_047_009_003_011[0] );
   // Substitution set AcctStatusSet.  Language: enGB, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_047_009_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_047_009_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_009_003_014;
   const BFSubstitutionSet SubSet_002_047_009_003_014(
    &aKeys_002_047_009_003_014[0], &aValues_002_047_009_003_014[0] );
   // Substitution set AcctStatusSet.  Language: nlNL
   static const I_CHAR* aKeys_002_047_010_000_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_010_000_000[] = {
      I_("Actief"),
      I_("In afwachting"),
      I_("Beëindigd"),
      I_("RRSP-overdracht"),
      I_("Externe RRSP-overdracht"),
      I_("Overlijden"),
      I_("Overlijdensoverdracht"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_010_000_000;
   const BFSubstitutionSet SubSet_002_047_010_000_000(
    &aKeys_002_047_010_000_000[0], &aValues_002_047_010_000_000[0] );
   // Substitution set AcctStatusSet.  Language: nlNL, Market: 2
   static const I_CHAR* aKeys_002_047_010_002_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_010_002_000[] = {
      I_("Actief"),
      I_("In afwachting"),
      I_("Beëindigd"),
      I_("Overlijden"),
      I_("Overlijdensoverdracht"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_010_002_000;
   const BFSubstitutionSet SubSet_002_047_010_002_000(
    &aKeys_002_047_010_002_000[0], &aValues_002_047_010_002_000[0] );
   // Substitution set AcctStatusSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_047_010_003_000[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_010_003_000[] = {
      I_("Actief"),
      I_("In afwachting"),
      I_("Beëindigd"),
      I_("RRSP-overdracht"),
      I_("Externe RRSP-overdracht"),
      I_("Overlijden"),
      I_("Overlijdensoverdracht"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_010_003_000;
   const BFSubstitutionSet SubSet_002_047_010_003_000(
    &aKeys_002_047_010_003_000[0], &aValues_002_047_010_003_000[0] );
   // Substitution set AcctStatusSet.  Language: nlNL, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_047_010_003_003[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_010_003_003[] = {
      I_("Actief"),
      I_("In afwachting"),
      I_("Beëindigd"),
      I_("Overlijden"),
      I_("Overlijdensoverdracht"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_010_003_003;
   const BFSubstitutionSet SubSet_002_047_010_003_003(
    &aKeys_002_047_010_003_003[0], &aValues_002_047_010_003_003[0] );
   // Substitution set AcctStatusSet.  Language: nlNL, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_047_010_003_011[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_010_003_011[] = {
      I_("Actief"),
      I_("In afwachting"),
      I_("Beëindigd"),
      I_("Overlijden"),
      I_("Overlijdensoverdracht"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_010_003_011;
   const BFSubstitutionSet SubSet_002_047_010_003_011(
    &aKeys_002_047_010_003_011[0], &aValues_002_047_010_003_011[0] );
   // Substitution set AcctStatusSet.  Language: nlNL, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_047_010_003_014[] = {
      I_("10"),
      I_("20"),
      I_("30"),
      I_("40"),
      I_("41"),
      0x00
   };

   static const I_CHAR* aValues_002_047_010_003_014[] = {
      I_("Actief"),
      I_("In afwachting"),
      I_("Beëindigd"),
      I_("Overlijden"),
      I_("Overlijdensoverdracht"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_010_003_014;
   const BFSubstitutionSet SubSet_002_047_010_003_014(
    &aKeys_002_047_010_003_014[0], &aValues_002_047_010_003_014[0] );
   // Substitution set AcctStatusSet.  Language: itIT, Market: 2
   static const I_CHAR* aKeys_002_047_011_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_047_011_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_011_002_000;
   const BFSubstitutionSet SubSet_002_047_011_002_000(
    &aKeys_002_047_011_002_000[0], &aValues_002_047_011_002_000[0] );
   // Substitution set AcctStatusSet.  Language: itIT, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_047_011_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_047_011_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_011_003_003;
   const BFSubstitutionSet SubSet_002_047_011_003_003(
    &aKeys_002_047_011_003_003[0], &aValues_002_047_011_003_003[0] );
   // Substitution set AcctStatusSet.  Language: itIT, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_047_011_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_047_011_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_011_003_011;
   const BFSubstitutionSet SubSet_002_047_011_003_011(
    &aKeys_002_047_011_003_011[0], &aValues_002_047_011_003_011[0] );
   // Substitution set AcctStatusSet.  Language: itIT, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_047_011_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_047_011_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_011_003_014;
   const BFSubstitutionSet SubSet_002_047_011_003_014(
    &aKeys_002_047_011_003_014[0], &aValues_002_047_011_003_014[0] );
   // Substitution set AcctStatusSet.  Language: thTH, Market: 2
   static const I_CHAR* aKeys_002_047_012_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_047_012_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_012_002_000;
   const BFSubstitutionSet SubSet_002_047_012_002_000(
    &aKeys_002_047_012_002_000[0], &aValues_002_047_012_002_000[0] );
   // Substitution set AcctStatusSet.  Language: thTH, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_047_012_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_047_012_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_012_003_003;
   const BFSubstitutionSet SubSet_002_047_012_003_003(
    &aKeys_002_047_012_003_003[0], &aValues_002_047_012_003_003[0] );
   // Substitution set AcctStatusSet.  Language: thTH, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_047_012_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_047_012_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_012_003_011;
   const BFSubstitutionSet SubSet_002_047_012_003_011(
    &aKeys_002_047_012_003_011[0], &aValues_002_047_012_003_011[0] );
   // Substitution set AcctStatusSet.  Language: thTH, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_047_012_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_047_012_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_047_012_003_014;
   const BFSubstitutionSet SubSet_002_047_012_003_014(
    &aKeys_002_047_012_003_014[0], &aValues_002_047_012_003_014[0] );
   // Substitution set RRSPFeeSet.  Language: enUS
   static const I_CHAR* aKeys_002_048_001_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_001_000_000[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      I_("Prepaid Fees"),
      I_("Classic I Plan(Grandfather)"),
      I_("Exempt - Holding Excess"),
      I_("Exempt - Staff"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_001_000_000;
   const BFSubstitutionSet SubSet_002_048_001_000_000(
    &aKeys_002_048_001_000_000[0], &aValues_002_048_001_000_000[0] );
   // Substitution set RRSPFeeSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_048_001_003_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_001_003_000[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      I_("Prepaid Fees"),
      I_("Classic I Plan(Grandfather)"),
      I_("Exempt - Holding Excess"),
      I_("Exempt - Staff"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_001_003_000;
   const BFSubstitutionSet SubSet_002_048_001_003_000(
    &aKeys_002_048_001_003_000[0], &aValues_002_048_001_003_000[0] );
   // Substitution set RRSPFeeSet.  Language: enUS, Market: 3, Client: 15
   static const I_CHAR* aKeys_002_048_001_003_015[] = {
      I_("0"),
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_048_001_003_015[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_001_003_015;
   const BFSubstitutionSet SubSet_002_048_001_003_015(
    &aKeys_002_048_001_003_015[0], &aValues_002_048_001_003_015[0] );
   // Substitution set RRSPFeeSet.  Language: enCA
   static const I_CHAR* aKeys_002_048_003_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_003_000_000[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      I_("Prepaid Fees"),
      I_("Classic I Plan(Grandfather)"),
      I_("Exempt - Holding Excess"),
      I_("Exempt - Staff"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_003_000_000;
   const BFSubstitutionSet SubSet_002_048_003_000_000(
    &aKeys_002_048_003_000_000[0], &aValues_002_048_003_000_000[0] );
   // Substitution set RRSPFeeSet.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_048_003_003_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_003_003_000[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      I_("Prepaid Fees"),
      I_("Classic I Plan(Grandfather)"),
      I_("Exempt - Holding Excess"),
      I_("Exempt - Staff"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_003_003_000;
   const BFSubstitutionSet SubSet_002_048_003_003_000(
    &aKeys_002_048_003_003_000[0], &aValues_002_048_003_003_000[0] );
   // Substitution set RRSPFeeSet.  Language: enCA, Market: 3, Client: 15
   static const I_CHAR* aKeys_002_048_003_003_015[] = {
      I_("0"),
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_048_003_003_015[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_003_003_015;
   const BFSubstitutionSet SubSet_002_048_003_003_015(
    &aKeys_002_048_003_003_015[0], &aValues_002_048_003_003_015[0] );
   // Substitution set RRSPFeeSet.  Language: frFR
   static const I_CHAR* aKeys_002_048_004_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_004_000_000[] = {
      I_("Debit frais RRSP"),
      I_("Don't Charge"),
      I_("Frais payes d'avance"),
      I_("Plan Classic I (grand-pere)"),
      I_("Exoneration - Excedent avoirs"),
      I_("Exoneration -  Personnel"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_004_000_000;
   const BFSubstitutionSet SubSet_002_048_004_000_000(
    &aKeys_002_048_004_000_000[0], &aValues_002_048_004_000_000[0] );
   // Substitution set RRSPFeeSet.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_048_004_003_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_004_003_000[] = {
      I_("Debit frais RRSP"),
      I_("Don't Charge"),
      I_("Frais payes d'avance"),
      I_("Plan Classic I (grand-pere)"),
      I_("Exoneration - Excedent avoirs"),
      I_("Exoneration -  Personnel"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_004_003_000;
   const BFSubstitutionSet SubSet_002_048_004_003_000(
    &aKeys_002_048_004_003_000[0], &aValues_002_048_004_003_000[0] );
   // Substitution set RRSPFeeSet.  Language: frFR, Market: 3, Client: 15
   static const I_CHAR* aKeys_002_048_004_003_015[] = {
      I_("0"),
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_048_004_003_015[] = {
      I_("Debit frais RRSP"),
      I_("Don't Charge"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_004_003_015;
   const BFSubstitutionSet SubSet_002_048_004_003_015(
    &aKeys_002_048_004_003_015[0], &aValues_002_048_004_003_015[0] );
   // Substitution set RRSPFeeSet.  Language: frCA
   static const I_CHAR* aKeys_002_048_005_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_005_000_000[] = {
      I_("Débiter les frais REER"),
      I_("Ne pas débiter"),
      I_("Frais prépayés"),
      I_("Régime individuel classique (bénéficiant d'une clause de droits acquis)"),
      I_("Exemption — excédent de portefeuille"),
      I_("Exemption — personnel"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_005_000_000;
   const BFSubstitutionSet SubSet_002_048_005_000_000(
    &aKeys_002_048_005_000_000[0], &aValues_002_048_005_000_000[0] );
   // Substitution set RRSPFeeSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_048_005_003_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_005_003_000[] = {
      I_("Débiter les frais REER"),
      I_("Ne pas débiter"),
      I_("Frais prépayés"),
      I_("Régime individuel classique (bénéficiant d'une clause de droits acquis)"),
      I_("Exemption — excédent de portefeuille"),
      I_("Exemption — personnel"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_005_003_000;
   const BFSubstitutionSet SubSet_002_048_005_003_000(
    &aKeys_002_048_005_003_000[0], &aValues_002_048_005_003_000[0] );
   // Substitution set RRSPFeeSet.  Language: frCA, Market: 3, Client: 15
   static const I_CHAR* aKeys_002_048_005_003_015[] = {
      I_("0"),
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_048_005_003_015[] = {
      I_("Débiter les frais REER"),
      I_("Ne pas débiter"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_005_003_015;
   const BFSubstitutionSet SubSet_002_048_005_003_015(
    &aKeys_002_048_005_003_015[0], &aValues_002_048_005_003_015[0] );
   // Substitution set RRSPFeeSet.  Language: enIE
   static const I_CHAR* aKeys_002_048_006_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_006_000_000[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      I_("Prepaid Fees"),
      I_("Classic I Plan(Grandfather)"),
      I_("Exempt - Holding Excess"),
      I_("Exempt - Staff"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_006_000_000;
   const BFSubstitutionSet SubSet_002_048_006_000_000(
    &aKeys_002_048_006_000_000[0], &aValues_002_048_006_000_000[0] );
   // Substitution set RRSPFeeSet.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_048_006_003_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_006_003_000[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      I_("Prepaid Fees"),
      I_("Classic I Plan(Grandfather)"),
      I_("Exempt - Holding Excess"),
      I_("Exempt - Staff"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_006_003_000;
   const BFSubstitutionSet SubSet_002_048_006_003_000(
    &aKeys_002_048_006_003_000[0], &aValues_002_048_006_003_000[0] );
   // Substitution set RRSPFeeSet.  Language: enIE, Market: 3, Client: 15
   static const I_CHAR* aKeys_002_048_006_003_015[] = {
      I_("0"),
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_048_006_003_015[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_006_003_015;
   const BFSubstitutionSet SubSet_002_048_006_003_015(
    &aKeys_002_048_006_003_015[0], &aValues_002_048_006_003_015[0] );
   // Substitution set RRSPFeeSet.  Language: deDE
   static const I_CHAR* aKeys_002_048_007_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_007_000_000[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      I_("Prepaid Fees"),
      I_("Classic I Plan(Grandfather)"),
      I_("Exempt - Holding Excess"),
      I_("Exempt - Staff"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_007_000_000;
   const BFSubstitutionSet SubSet_002_048_007_000_000(
    &aKeys_002_048_007_000_000[0], &aValues_002_048_007_000_000[0] );
   // Substitution set RRSPFeeSet.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_048_007_003_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_007_003_000[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      I_("Prepaid Fees"),
      I_("Classic I Plan(Grandfather)"),
      I_("Exempt - Holding Excess"),
      I_("Exempt - Staff"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_007_003_000;
   const BFSubstitutionSet SubSet_002_048_007_003_000(
    &aKeys_002_048_007_003_000[0], &aValues_002_048_007_003_000[0] );
   // Substitution set RRSPFeeSet.  Language: deDE, Market: 3, Client: 15
   static const I_CHAR* aKeys_002_048_007_003_015[] = {
      I_("0"),
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_048_007_003_015[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_007_003_015;
   const BFSubstitutionSet SubSet_002_048_007_003_015(
    &aKeys_002_048_007_003_015[0], &aValues_002_048_007_003_015[0] );
   // Substitution set RRSPFeeSet.  Language: esEs
   static const I_CHAR* aKeys_002_048_008_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_008_000_000[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      I_("Prepaid Fees"),
      I_("Classic I Plan(Grandfather)"),
      I_("Exempt - Holding Excess"),
      I_("Exempt - Staff"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_008_000_000;
   const BFSubstitutionSet SubSet_002_048_008_000_000(
    &aKeys_002_048_008_000_000[0], &aValues_002_048_008_000_000[0] );
   // Substitution set RRSPFeeSet.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_048_008_003_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_008_003_000[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      I_("Prepaid Fees"),
      I_("Classic I Plan(Grandfather)"),
      I_("Exempt - Holding Excess"),
      I_("Exempt - Staff"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_008_003_000;
   const BFSubstitutionSet SubSet_002_048_008_003_000(
    &aKeys_002_048_008_003_000[0], &aValues_002_048_008_003_000[0] );
   // Substitution set RRSPFeeSet.  Language: esEs, Market: 3, Client: 15
   static const I_CHAR* aKeys_002_048_008_003_015[] = {
      I_("0"),
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_048_008_003_015[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_008_003_015;
   const BFSubstitutionSet SubSet_002_048_008_003_015(
    &aKeys_002_048_008_003_015[0], &aValues_002_048_008_003_015[0] );
   // Substitution set RRSPFeeSet.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_048_009_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_048_009_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_009_003_000;
   const BFSubstitutionSet SubSet_002_048_009_003_000(
    &aKeys_002_048_009_003_000[0], &aValues_002_048_009_003_000[0] );
   // Substitution set RRSPFeeSet.  Language: enGB, Market: 3, Client: 15
   static const I_CHAR* aKeys_002_048_009_003_015[] = {
      0x00
   };

   static const I_CHAR* aValues_002_048_009_003_015[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_009_003_015;
   const BFSubstitutionSet SubSet_002_048_009_003_015(
    &aKeys_002_048_009_003_015[0], &aValues_002_048_009_003_015[0] );
   // Substitution set RRSPFeeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_048_010_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_010_000_000[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      I_("Prepaid Fees"),
      I_("Classic I Plan(Grandfather)"),
      I_("Exempt - Holding Excess"),
      I_("Exempt - Staff"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_010_000_000;
   const BFSubstitutionSet SubSet_002_048_010_000_000(
    &aKeys_002_048_010_000_000[0], &aValues_002_048_010_000_000[0] );
   // Substitution set RRSPFeeSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_048_010_003_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      0x00
   };

   static const I_CHAR* aValues_002_048_010_003_000[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      I_("Prepaid Fees"),
      I_("Classic I Plan(Grandfather)"),
      I_("Exempt - Holding Excess"),
      I_("Exempt - Staff"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_010_003_000;
   const BFSubstitutionSet SubSet_002_048_010_003_000(
    &aKeys_002_048_010_003_000[0], &aValues_002_048_010_003_000[0] );
   // Substitution set RRSPFeeSet.  Language: nlNL, Market: 3, Client: 15
   static const I_CHAR* aKeys_002_048_010_003_015[] = {
      I_("0"),
      I_("1"),
      0x00
   };

   static const I_CHAR* aValues_002_048_010_003_015[] = {
      I_("Charge RRSP fees"),
      I_("Don't Charge"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_010_003_015;
   const BFSubstitutionSet SubSet_002_048_010_003_015(
    &aKeys_002_048_010_003_015[0], &aValues_002_048_010_003_015[0] );
   // Substitution set RRSPFeeSet.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_048_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_048_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_011_003_000;
   const BFSubstitutionSet SubSet_002_048_011_003_000(
    &aKeys_002_048_011_003_000[0], &aValues_002_048_011_003_000[0] );
   // Substitution set RRSPFeeSet.  Language: itIT, Market: 3, Client: 15
   static const I_CHAR* aKeys_002_048_011_003_015[] = {
      0x00
   };

   static const I_CHAR* aValues_002_048_011_003_015[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_011_003_015;
   const BFSubstitutionSet SubSet_002_048_011_003_015(
    &aKeys_002_048_011_003_015[0], &aValues_002_048_011_003_015[0] );
   // Substitution set RRSPFeeSet.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_048_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_048_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_012_003_000;
   const BFSubstitutionSet SubSet_002_048_012_003_000(
    &aKeys_002_048_012_003_000[0], &aValues_002_048_012_003_000[0] );
   // Substitution set RRSPFeeSet.  Language: thTH, Market: 3, Client: 15
   static const I_CHAR* aKeys_002_048_012_003_015[] = {
      0x00
   };

   static const I_CHAR* aValues_002_048_012_003_015[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_048_012_003_015;
   const BFSubstitutionSet SubSet_002_048_012_003_015(
    &aKeys_002_048_012_003_015[0], &aValues_002_048_012_003_015[0] );
   // Substitution set SalutationSet.  Language: enUS
   static const I_CHAR* aKeys_002_049_001_000_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_001_000_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Frau."),
      I_("Herr"),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maitre"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_001_000_000;
   const BFSubstitutionSet SubSet_002_049_001_000_000(
    &aKeys_002_049_001_000_000[0], &aValues_002_049_001_000_000[0] );
   // Substitution set SalutationSet.  Language: enUS, Market: 2
   static const I_CHAR* aKeys_002_049_001_002_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_001_002_000[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maitre"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_001_002_000;
   const BFSubstitutionSet SubSet_002_049_001_002_000(
    &aKeys_002_049_001_002_000[0], &aValues_002_049_001_002_000[0] );
   // Substitution set SalutationSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_049_001_003_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_001_003_000[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maitre"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_001_003_000;
   const BFSubstitutionSet SubSet_002_049_001_003_000(
    &aKeys_002_049_001_003_000[0], &aValues_002_049_001_003_000[0] );
   // Substitution set SalutationSet.  Language: enUS, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_049_001_003_003[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_001_003_003[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maitre"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_001_003_003;
   const BFSubstitutionSet SubSet_002_049_001_003_003(
    &aKeys_002_049_001_003_003[0], &aValues_002_049_001_003_003[0] );
   // Substitution set SalutationSet.  Language: enUS, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_049_001_003_011[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_001_003_011[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maitre"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_001_003_011;
   const BFSubstitutionSet SubSet_002_049_001_003_011(
    &aKeys_002_049_001_003_011[0], &aValues_002_049_001_003_011[0] );
   // Substitution set SalutationSet.  Language: enUS, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_049_001_003_014[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_001_003_014[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maitre"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_001_003_014;
   const BFSubstitutionSet SubSet_002_049_001_003_014(
    &aKeys_002_049_001_003_014[0], &aValues_002_049_001_003_014[0] );
   // Substitution set SalutationSet.  Language: enUS, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_049_001_003_018[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_001_003_018[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maitre"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_001_003_018;
   const BFSubstitutionSet SubSet_002_049_001_003_018(
    &aKeys_002_049_001_003_018[0], &aValues_002_049_001_003_018[0] );
   // Substitution set SalutationSet.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_049_001_004_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_001_004_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Frau."),
      I_("Herr"),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maitre"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_001_004_000;
   const BFSubstitutionSet SubSet_002_049_001_004_000(
    &aKeys_002_049_001_004_000[0], &aValues_002_049_001_004_000[0] );
   // Substitution set SalutationSet.  Language: enCA
   static const I_CHAR* aKeys_002_049_003_000_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      0x00
   };

   static const I_CHAR* aValues_002_049_003_000_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Frau."),
      I_("Herr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_003_000_000;
   const BFSubstitutionSet SubSet_002_049_003_000_000(
    &aKeys_002_049_003_000_000[0], &aValues_002_049_003_000_000[0] );
   // Substitution set SalutationSet.  Language: enCA, Market: 2
   static const I_CHAR* aKeys_002_049_003_002_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_003_002_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_003_002_000;
   const BFSubstitutionSet SubSet_002_049_003_002_000(
    &aKeys_002_049_003_002_000[0], &aValues_002_049_003_002_000[0] );
   // Substitution set SalutationSet.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_049_003_003_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_003_003_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_003_003_000;
   const BFSubstitutionSet SubSet_002_049_003_003_000(
    &aKeys_002_049_003_003_000[0], &aValues_002_049_003_003_000[0] );
   // Substitution set SalutationSet.  Language: enCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_049_003_003_003[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_003_003_003[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_003_003_003;
   const BFSubstitutionSet SubSet_002_049_003_003_003(
    &aKeys_002_049_003_003_003[0], &aValues_002_049_003_003_003[0] );
   // Substitution set SalutationSet.  Language: enCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_049_003_003_011[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_003_003_011[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_003_003_011;
   const BFSubstitutionSet SubSet_002_049_003_003_011(
    &aKeys_002_049_003_003_011[0], &aValues_002_049_003_003_011[0] );
   // Substitution set SalutationSet.  Language: enCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_049_003_003_014[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_003_003_014[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_003_003_014;
   const BFSubstitutionSet SubSet_002_049_003_003_014(
    &aKeys_002_049_003_003_014[0], &aValues_002_049_003_003_014[0] );
   // Substitution set SalutationSet.  Language: enCA, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_049_003_003_018[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_003_003_018[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_003_003_018;
   const BFSubstitutionSet SubSet_002_049_003_003_018(
    &aKeys_002_049_003_003_018[0], &aValues_002_049_003_003_018[0] );
   // Substitution set SalutationSet.  Language: enCA, Market: 4
   static const I_CHAR* aKeys_002_049_003_004_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      0x00
   };

   static const I_CHAR* aValues_002_049_003_004_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Frau."),
      I_("Herr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_003_004_000;
   const BFSubstitutionSet SubSet_002_049_003_004_000(
    &aKeys_002_049_003_004_000[0], &aValues_002_049_003_004_000[0] );
   // Substitution set SalutationSet.  Language: frFR
   static const I_CHAR* aKeys_002_049_004_000_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_004_000_000[] = {
      I_("M."),
      I_("Capitaine"),
      I_("DR"),
      I_("M."),
      I_("DG"),
      I_("Mlle"),
      I_("MLLE"),
      I_("Mme"),
      I_("Mme"),
      I_("Prof."),
      I_("Rev"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_004_000_000;
   const BFSubstitutionSet SubSet_002_049_004_000_000(
    &aKeys_002_049_004_000_000[0], &aValues_002_049_004_000_000[0] );
   // Substitution set SalutationSet.  Language: frFR, Market: 2
   static const I_CHAR* aKeys_002_049_004_002_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_004_002_000[] = {
      I_("M."),
      I_("Capitaine"),
      I_("DR"),
      I_("M."),
      I_("DG"),
      I_("Mlle"),
      I_("MLLE"),
      I_("Mme"),
      I_("Mme"),
      I_("Prof."),
      I_("Rev"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_004_002_000;
   const BFSubstitutionSet SubSet_002_049_004_002_000(
    &aKeys_002_049_004_002_000[0], &aValues_002_049_004_002_000[0] );
   // Substitution set SalutationSet.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_049_004_003_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_004_003_000[] = {
      I_("M."),
      I_("Capitaine"),
      I_("DR"),
      I_("M."),
      I_("DG"),
      I_("Mlle"),
      I_("MLLE"),
      I_("Mme"),
      I_("Mme"),
      I_("Prof."),
      I_("Rev"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_004_003_000;
   const BFSubstitutionSet SubSet_002_049_004_003_000(
    &aKeys_002_049_004_003_000[0], &aValues_002_049_004_003_000[0] );
   // Substitution set SalutationSet.  Language: frFR, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_049_004_003_003[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_004_003_003[] = {
      I_("M."),
      I_("Capitaine"),
      I_("DR"),
      I_("M."),
      I_("DG"),
      I_("Mlle"),
      I_("MLLE"),
      I_("Mme"),
      I_("Mme"),
      I_("Prof."),
      I_("Rev"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_004_003_003;
   const BFSubstitutionSet SubSet_002_049_004_003_003(
    &aKeys_002_049_004_003_003[0], &aValues_002_049_004_003_003[0] );
   // Substitution set SalutationSet.  Language: frFR, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_049_004_003_011[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_004_003_011[] = {
      I_("M."),
      I_("Capitaine"),
      I_("DR"),
      I_("M."),
      I_("DG"),
      I_("Mlle"),
      I_("MLLE"),
      I_("Mme"),
      I_("Mme"),
      I_("Prof."),
      I_("Rev"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_004_003_011;
   const BFSubstitutionSet SubSet_002_049_004_003_011(
    &aKeys_002_049_004_003_011[0], &aValues_002_049_004_003_011[0] );
   // Substitution set SalutationSet.  Language: frFR, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_049_004_003_014[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_004_003_014[] = {
      I_("M."),
      I_("Capitaine"),
      I_("DR"),
      I_("M."),
      I_("DG"),
      I_("Mlle"),
      I_("MLLE"),
      I_("Mme"),
      I_("Mme"),
      I_("Prof."),
      I_("Rev"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_004_003_014;
   const BFSubstitutionSet SubSet_002_049_004_003_014(
    &aKeys_002_049_004_003_014[0], &aValues_002_049_004_003_014[0] );
   // Substitution set SalutationSet.  Language: frFR, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_049_004_003_018[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_004_003_018[] = {
      I_("M."),
      I_("Capitaine"),
      I_("DR"),
      I_("M."),
      I_("DG"),
      I_("Mlle"),
      I_("MLLE"),
      I_("Mme"),
      I_("Mme"),
      I_("Prof."),
      I_("Rev"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_004_003_018;
   const BFSubstitutionSet SubSet_002_049_004_003_018(
    &aKeys_002_049_004_003_018[0], &aValues_002_049_004_003_018[0] );
   // Substitution set SalutationSet.  Language: frFR, Market: 4
   static const I_CHAR* aKeys_002_049_004_004_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_004_004_000[] = {
      I_("M."),
      I_("Capitaine"),
      I_("DR"),
      I_("M."),
      I_("DG"),
      I_("Mlle"),
      I_("MLLE"),
      I_("Mme"),
      I_("Mme"),
      I_("Prof."),
      I_("Rev"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_004_004_000;
   const BFSubstitutionSet SubSet_002_049_004_004_000(
    &aKeys_002_049_004_004_000[0], &aValues_002_049_004_004_000[0] );
   // Substitution set SalutationSet.  Language: frCA
   static const I_CHAR* aKeys_002_049_005_000_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_005_000_000[] = {
      I_("M."),
      I_("Cne"),
      I_("Dr"),
      I_("M."),
      I_("M.D."),
      I_("Mlle"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mme"),
      I_("Mme"),
      I_("R."),
      I_("Pr"),
      I_("Frau"),
      I_("Herr"),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maître"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_005_000_000;
   const BFSubstitutionSet SubSet_002_049_005_000_000(
    &aKeys_002_049_005_000_000[0], &aValues_002_049_005_000_000[0] );
   // Substitution set SalutationSet.  Language: frCA, Market: 2
   static const I_CHAR* aKeys_002_049_005_002_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_005_002_000[] = {
      I_("M."),
      I_("Cne"),
      I_("Dr"),
      I_("M."),
      I_("M.D."),
      I_("Mlle"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mme"),
      I_("Mme"),
      I_("R."),
      I_("Pr"),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maître"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_005_002_000;
   const BFSubstitutionSet SubSet_002_049_005_002_000(
    &aKeys_002_049_005_002_000[0], &aValues_002_049_005_002_000[0] );
   // Substitution set SalutationSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_049_005_003_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_005_003_000[] = {
      I_("M."),
      I_("Cne"),
      I_("Dr"),
      I_("M."),
      I_("M.D."),
      I_("Mlle"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mme"),
      I_("Mme"),
      I_("R."),
      I_("Pr"),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maître"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_005_003_000;
   const BFSubstitutionSet SubSet_002_049_005_003_000(
    &aKeys_002_049_005_003_000[0], &aValues_002_049_005_003_000[0] );
   // Substitution set SalutationSet.  Language: frCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_049_005_003_003[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_005_003_003[] = {
      I_("M."),
      I_("Capitaine"),
      I_("Dr."),
      I_("M."),
      I_("DG"),
      I_("Mlle"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mme"),
      I_("Prof."),
      I_("Rev"),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maître"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_005_003_003;
   const BFSubstitutionSet SubSet_002_049_005_003_003(
    &aKeys_002_049_005_003_003[0], &aValues_002_049_005_003_003[0] );
   // Substitution set SalutationSet.  Language: frCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_049_005_003_011[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_005_003_011[] = {
      I_("M."),
      I_("Capitaine"),
      I_("Dr."),
      I_("M."),
      I_("DG"),
      I_("Mlle"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mme"),
      I_("Prof."),
      I_("Rev"),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maître"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_005_003_011;
   const BFSubstitutionSet SubSet_002_049_005_003_011(
    &aKeys_002_049_005_003_011[0], &aValues_002_049_005_003_011[0] );
   // Substitution set SalutationSet.  Language: frCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_049_005_003_014[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_005_003_014[] = {
      I_("M."),
      I_("Capitaine"),
      I_("Dr."),
      I_("M."),
      I_("DG"),
      I_("Mlle"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mme"),
      I_("Prof."),
      I_("Rev"),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maître"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_005_003_014;
   const BFSubstitutionSet SubSet_002_049_005_003_014(
    &aKeys_002_049_005_003_014[0], &aValues_002_049_005_003_014[0] );
   // Substitution set SalutationSet.  Language: frCA, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_049_005_003_018[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_005_003_018[] = {
      I_("M."),
      I_("Cne"),
      I_("Dr"),
      I_("M."),
      I_("M.D."),
      I_("Mlle"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mme"),
      I_("Mme"),
      I_("R."),
      I_("Pr"),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maître"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_005_003_018;
   const BFSubstitutionSet SubSet_002_049_005_003_018(
    &aKeys_002_049_005_003_018[0], &aValues_002_049_005_003_018[0] );
   // Substitution set SalutationSet.  Language: frCA, Market: 4
   static const I_CHAR* aKeys_002_049_005_004_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      I_("DOCTR"),
      I_("DOCTRE"),
      I_("MAITRE"),
      I_("MSIEUR"),
      I_("MADAME"),
      0x00
   };

   static const I_CHAR* aValues_002_049_005_004_000[] = {
      I_("M."),
      I_("Cne"),
      I_("Dr"),
      I_("M."),
      I_("M.D."),
      I_("Mlle"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mme"),
      I_("Mme"),
      I_("R."),
      I_("Pr"),
      I_("Frau"),
      I_("Herr"),
      I_("Docteur"),
      I_("Docteure"),
      I_("Maître"),
      I_("Monsieur"),
      I_("Madame"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_005_004_000;
   const BFSubstitutionSet SubSet_002_049_005_004_000(
    &aKeys_002_049_005_004_000[0], &aValues_002_049_005_004_000[0] );
   // Substitution set SalutationSet.  Language: enIE
   static const I_CHAR* aKeys_002_049_006_000_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      0x00
   };

   static const I_CHAR* aValues_002_049_006_000_000[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Frau."),
      I_("Herr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_006_000_000;
   const BFSubstitutionSet SubSet_002_049_006_000_000(
    &aKeys_002_049_006_000_000[0], &aValues_002_049_006_000_000[0] );
   // Substitution set SalutationSet.  Language: enIE, Market: 2
   static const I_CHAR* aKeys_002_049_006_002_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_006_002_000[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_006_002_000;
   const BFSubstitutionSet SubSet_002_049_006_002_000(
    &aKeys_002_049_006_002_000[0], &aValues_002_049_006_002_000[0] );
   // Substitution set SalutationSet.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_049_006_003_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_006_003_000[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_006_003_000;
   const BFSubstitutionSet SubSet_002_049_006_003_000(
    &aKeys_002_049_006_003_000[0], &aValues_002_049_006_003_000[0] );
   // Substitution set SalutationSet.  Language: enIE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_049_006_003_003[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_006_003_003[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_006_003_003;
   const BFSubstitutionSet SubSet_002_049_006_003_003(
    &aKeys_002_049_006_003_003[0], &aValues_002_049_006_003_003[0] );
   // Substitution set SalutationSet.  Language: enIE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_049_006_003_011[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_006_003_011[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_006_003_011;
   const BFSubstitutionSet SubSet_002_049_006_003_011(
    &aKeys_002_049_006_003_011[0], &aValues_002_049_006_003_011[0] );
   // Substitution set SalutationSet.  Language: enIE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_049_006_003_014[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_006_003_014[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_006_003_014;
   const BFSubstitutionSet SubSet_002_049_006_003_014(
    &aKeys_002_049_006_003_014[0], &aValues_002_049_006_003_014[0] );
   // Substitution set SalutationSet.  Language: enIE, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_049_006_003_018[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_006_003_018[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_006_003_018;
   const BFSubstitutionSet SubSet_002_049_006_003_018(
    &aKeys_002_049_006_003_018[0], &aValues_002_049_006_003_018[0] );
   // Substitution set SalutationSet.  Language: enIE, Market: 4
   static const I_CHAR* aKeys_002_049_006_004_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      0x00
   };

   static const I_CHAR* aValues_002_049_006_004_000[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Frau."),
      I_("Herr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_006_004_000;
   const BFSubstitutionSet SubSet_002_049_006_004_000(
    &aKeys_002_049_006_004_000[0], &aValues_002_049_006_004_000[0] );
   // Substitution set SalutationSet.  Language: deDE
   static const I_CHAR* aKeys_002_049_007_000_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      0x00
   };

   static const I_CHAR* aValues_002_049_007_000_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Frau."),
      I_("Herr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_007_000_000;
   const BFSubstitutionSet SubSet_002_049_007_000_000(
    &aKeys_002_049_007_000_000[0], &aValues_002_049_007_000_000[0] );
   // Substitution set SalutationSet.  Language: deDE, Market: 2
   static const I_CHAR* aKeys_002_049_007_002_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_007_002_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_007_002_000;
   const BFSubstitutionSet SubSet_002_049_007_002_000(
    &aKeys_002_049_007_002_000[0], &aValues_002_049_007_002_000[0] );
   // Substitution set SalutationSet.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_049_007_003_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_007_003_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_007_003_000;
   const BFSubstitutionSet SubSet_002_049_007_003_000(
    &aKeys_002_049_007_003_000[0], &aValues_002_049_007_003_000[0] );
   // Substitution set SalutationSet.  Language: deDE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_049_007_003_003[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_007_003_003[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_007_003_003;
   const BFSubstitutionSet SubSet_002_049_007_003_003(
    &aKeys_002_049_007_003_003[0], &aValues_002_049_007_003_003[0] );
   // Substitution set SalutationSet.  Language: deDE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_049_007_003_011[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_007_003_011[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_007_003_011;
   const BFSubstitutionSet SubSet_002_049_007_003_011(
    &aKeys_002_049_007_003_011[0], &aValues_002_049_007_003_011[0] );
   // Substitution set SalutationSet.  Language: deDE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_049_007_003_014[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_007_003_014[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_007_003_014;
   const BFSubstitutionSet SubSet_002_049_007_003_014(
    &aKeys_002_049_007_003_014[0], &aValues_002_049_007_003_014[0] );
   // Substitution set SalutationSet.  Language: deDE, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_049_007_003_018[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_007_003_018[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_007_003_018;
   const BFSubstitutionSet SubSet_002_049_007_003_018(
    &aKeys_002_049_007_003_018[0], &aValues_002_049_007_003_018[0] );
   // Substitution set SalutationSet.  Language: deDE, Market: 4
   static const I_CHAR* aKeys_002_049_007_004_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      0x00
   };

   static const I_CHAR* aValues_002_049_007_004_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Frau."),
      I_("Herr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_007_004_000;
   const BFSubstitutionSet SubSet_002_049_007_004_000(
    &aKeys_002_049_007_004_000[0], &aValues_002_049_007_004_000[0] );
   // Substitution set SalutationSet.  Language: esEs
   static const I_CHAR* aKeys_002_049_008_000_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      0x00
   };

   static const I_CHAR* aValues_002_049_008_000_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Frau."),
      I_("Herr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_008_000_000;
   const BFSubstitutionSet SubSet_002_049_008_000_000(
    &aKeys_002_049_008_000_000[0], &aValues_002_049_008_000_000[0] );
   // Substitution set SalutationSet.  Language: esEs, Market: 2
   static const I_CHAR* aKeys_002_049_008_002_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_008_002_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_008_002_000;
   const BFSubstitutionSet SubSet_002_049_008_002_000(
    &aKeys_002_049_008_002_000[0], &aValues_002_049_008_002_000[0] );
   // Substitution set SalutationSet.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_049_008_003_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_008_003_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_008_003_000;
   const BFSubstitutionSet SubSet_002_049_008_003_000(
    &aKeys_002_049_008_003_000[0], &aValues_002_049_008_003_000[0] );
   // Substitution set SalutationSet.  Language: esEs, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_049_008_003_003[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_008_003_003[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_008_003_003;
   const BFSubstitutionSet SubSet_002_049_008_003_003(
    &aKeys_002_049_008_003_003[0], &aValues_002_049_008_003_003[0] );
   // Substitution set SalutationSet.  Language: esEs, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_049_008_003_011[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_008_003_011[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_008_003_011;
   const BFSubstitutionSet SubSet_002_049_008_003_011(
    &aKeys_002_049_008_003_011[0], &aValues_002_049_008_003_011[0] );
   // Substitution set SalutationSet.  Language: esEs, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_049_008_003_014[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_008_003_014[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_008_003_014;
   const BFSubstitutionSet SubSet_002_049_008_003_014(
    &aKeys_002_049_008_003_014[0], &aValues_002_049_008_003_014[0] );
   // Substitution set SalutationSet.  Language: esEs, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_049_008_003_018[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_008_003_018[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_008_003_018;
   const BFSubstitutionSet SubSet_002_049_008_003_018(
    &aKeys_002_049_008_003_018[0], &aValues_002_049_008_003_018[0] );
   // Substitution set SalutationSet.  Language: esEs, Market: 4
   static const I_CHAR* aKeys_002_049_008_004_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      0x00
   };

   static const I_CHAR* aValues_002_049_008_004_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Frau."),
      I_("Herr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_008_004_000;
   const BFSubstitutionSet SubSet_002_049_008_004_000(
    &aKeys_002_049_008_004_000[0], &aValues_002_049_008_004_000[0] );
   // Substitution set SalutationSet.  Language: enGB, Market: 2
   static const I_CHAR* aKeys_002_049_009_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_009_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_009_002_000;
   const BFSubstitutionSet SubSet_002_049_009_002_000(
    &aKeys_002_049_009_002_000[0], &aValues_002_049_009_002_000[0] );
   // Substitution set SalutationSet.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_049_009_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_009_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_009_003_000;
   const BFSubstitutionSet SubSet_002_049_009_003_000(
    &aKeys_002_049_009_003_000[0], &aValues_002_049_009_003_000[0] );
   // Substitution set SalutationSet.  Language: enGB, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_049_009_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_009_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_009_003_003;
   const BFSubstitutionSet SubSet_002_049_009_003_003(
    &aKeys_002_049_009_003_003[0], &aValues_002_049_009_003_003[0] );
   // Substitution set SalutationSet.  Language: enGB, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_049_009_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_009_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_009_003_011;
   const BFSubstitutionSet SubSet_002_049_009_003_011(
    &aKeys_002_049_009_003_011[0], &aValues_002_049_009_003_011[0] );
   // Substitution set SalutationSet.  Language: enGB, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_049_009_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_009_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_009_003_014;
   const BFSubstitutionSet SubSet_002_049_009_003_014(
    &aKeys_002_049_009_003_014[0], &aValues_002_049_009_003_014[0] );
   // Substitution set SalutationSet.  Language: enGB, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_049_009_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_009_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_009_003_018;
   const BFSubstitutionSet SubSet_002_049_009_003_018(
    &aKeys_002_049_009_003_018[0], &aValues_002_049_009_003_018[0] );
   // Substitution set SalutationSet.  Language: enGB, Market: 4
   static const I_CHAR* aKeys_002_049_009_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_009_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_009_004_000;
   const BFSubstitutionSet SubSet_002_049_009_004_000(
    &aKeys_002_049_009_004_000[0], &aValues_002_049_009_004_000[0] );
   // Substitution set SalutationSet.  Language: nlNL
   static const I_CHAR* aKeys_002_049_010_000_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      0x00
   };

   static const I_CHAR* aValues_002_049_010_000_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Frau."),
      I_("Herr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_010_000_000;
   const BFSubstitutionSet SubSet_002_049_010_000_000(
    &aKeys_002_049_010_000_000[0], &aValues_002_049_010_000_000[0] );
   // Substitution set SalutationSet.  Language: nlNL, Market: 2
   static const I_CHAR* aKeys_002_049_010_002_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_010_002_000[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_010_002_000;
   const BFSubstitutionSet SubSet_002_049_010_002_000(
    &aKeys_002_049_010_002_000[0], &aValues_002_049_010_002_000[0] );
   // Substitution set SalutationSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_049_010_003_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_010_003_000[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_010_003_000;
   const BFSubstitutionSet SubSet_002_049_010_003_000(
    &aKeys_002_049_010_003_000[0], &aValues_002_049_010_003_000[0] );
   // Substitution set SalutationSet.  Language: nlNL, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_049_010_003_003[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_010_003_003[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_010_003_003;
   const BFSubstitutionSet SubSet_002_049_010_003_003(
    &aKeys_002_049_010_003_003[0], &aValues_002_049_010_003_003[0] );
   // Substitution set SalutationSet.  Language: nlNL, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_049_010_003_011[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_010_003_011[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_010_003_011;
   const BFSubstitutionSet SubSet_002_049_010_003_011(
    &aKeys_002_049_010_003_011[0], &aValues_002_049_010_003_011[0] );
   // Substitution set SalutationSet.  Language: nlNL, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_049_010_003_014[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      0x00
   };

   static const I_CHAR* aValues_002_049_010_003_014[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_010_003_014;
   const BFSubstitutionSet SubSet_002_049_010_003_014(
    &aKeys_002_049_010_003_014[0], &aValues_002_049_010_003_014[0] );
   // Substitution set SalutationSet.  Language: nlNL, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_049_010_003_018[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      0x00
   };

   static const I_CHAR* aValues_002_049_010_003_018[] = {
      I_("Mr."),
      I_("Capt"),
      I_("Dr."),
      I_("M"),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme."),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_010_003_018;
   const BFSubstitutionSet SubSet_002_049_010_003_018(
    &aKeys_002_049_010_003_018[0], &aValues_002_049_010_003_018[0] );
   // Substitution set SalutationSet.  Language: nlNL, Market: 4
   static const I_CHAR* aKeys_002_049_010_004_000[] = {
      I_("MR."),
      I_("CAPT."),
      I_("DR."),
      I_("M."),
      I_("MD."),
      I_("MISS"),
      I_("MLLE"),
      I_("MME"),
      I_("MRS."),
      I_("MS."),
      I_("REV."),
      I_("PROF."),
      I_("FRAU"),
      I_("HERR"),
      0x00
   };

   static const I_CHAR* aValues_002_049_010_004_000[] = {
      I_("Mr."),
      I_("Capt."),
      I_("Dr."),
      I_("M."),
      I_("Md."),
      I_("Miss"),
      I_("Mlle"),
      I_("Mme"),
      I_("Mrs."),
      I_("Ms."),
      I_("Rev."),
      I_("Prof."),
      I_("Frau."),
      I_("Herr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_010_004_000;
   const BFSubstitutionSet SubSet_002_049_010_004_000(
    &aKeys_002_049_010_004_000[0], &aValues_002_049_010_004_000[0] );
   // Substitution set SalutationSet.  Language: itIT, Market: 2
   static const I_CHAR* aKeys_002_049_011_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_011_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_011_002_000;
   const BFSubstitutionSet SubSet_002_049_011_002_000(
    &aKeys_002_049_011_002_000[0], &aValues_002_049_011_002_000[0] );
   // Substitution set SalutationSet.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_049_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_011_003_000;
   const BFSubstitutionSet SubSet_002_049_011_003_000(
    &aKeys_002_049_011_003_000[0], &aValues_002_049_011_003_000[0] );
   // Substitution set SalutationSet.  Language: itIT, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_049_011_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_011_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_011_003_003;
   const BFSubstitutionSet SubSet_002_049_011_003_003(
    &aKeys_002_049_011_003_003[0], &aValues_002_049_011_003_003[0] );
   // Substitution set SalutationSet.  Language: itIT, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_049_011_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_011_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_011_003_011;
   const BFSubstitutionSet SubSet_002_049_011_003_011(
    &aKeys_002_049_011_003_011[0], &aValues_002_049_011_003_011[0] );
   // Substitution set SalutationSet.  Language: itIT, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_049_011_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_011_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_011_003_014;
   const BFSubstitutionSet SubSet_002_049_011_003_014(
    &aKeys_002_049_011_003_014[0], &aValues_002_049_011_003_014[0] );
   // Substitution set SalutationSet.  Language: itIT, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_049_011_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_011_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_011_003_018;
   const BFSubstitutionSet SubSet_002_049_011_003_018(
    &aKeys_002_049_011_003_018[0], &aValues_002_049_011_003_018[0] );
   // Substitution set SalutationSet.  Language: itIT, Market: 4
   static const I_CHAR* aKeys_002_049_011_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_011_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_011_004_000;
   const BFSubstitutionSet SubSet_002_049_011_004_000(
    &aKeys_002_049_011_004_000[0], &aValues_002_049_011_004_000[0] );
   // Substitution set SalutationSet.  Language: thTH, Market: 2
   static const I_CHAR* aKeys_002_049_012_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_012_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_012_002_000;
   const BFSubstitutionSet SubSet_002_049_012_002_000(
    &aKeys_002_049_012_002_000[0], &aValues_002_049_012_002_000[0] );
   // Substitution set SalutationSet.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_049_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_012_003_000;
   const BFSubstitutionSet SubSet_002_049_012_003_000(
    &aKeys_002_049_012_003_000[0], &aValues_002_049_012_003_000[0] );
   // Substitution set SalutationSet.  Language: thTH, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_049_012_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_012_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_012_003_003;
   const BFSubstitutionSet SubSet_002_049_012_003_003(
    &aKeys_002_049_012_003_003[0], &aValues_002_049_012_003_003[0] );
   // Substitution set SalutationSet.  Language: thTH, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_049_012_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_012_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_012_003_011;
   const BFSubstitutionSet SubSet_002_049_012_003_011(
    &aKeys_002_049_012_003_011[0], &aValues_002_049_012_003_011[0] );
   // Substitution set SalutationSet.  Language: thTH, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_049_012_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_012_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_012_003_014;
   const BFSubstitutionSet SubSet_002_049_012_003_014(
    &aKeys_002_049_012_003_014[0], &aValues_002_049_012_003_014[0] );
   // Substitution set SalutationSet.  Language: thTH, Market: 3, Client: 18
   static const I_CHAR* aKeys_002_049_012_003_018[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_012_003_018[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_012_003_018;
   const BFSubstitutionSet SubSet_002_049_012_003_018(
    &aKeys_002_049_012_003_018[0], &aValues_002_049_012_003_018[0] );
   // Substitution set SalutationSet.  Language: thTH, Market: 4
   static const I_CHAR* aKeys_002_049_012_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_049_012_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_049_012_004_000;
   const BFSubstitutionSet SubSet_002_049_012_004_000(
    &aKeys_002_049_012_004_000[0], &aValues_002_049_012_004_000[0] );
   // Substitution set ChqSupCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_050_001_000_000[] = {
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_050_001_000_000[] = {
      I_("Suppressed Cheque"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_050_001_000_000;
   const BFSubstitutionSet SubSet_002_050_001_000_000(
    &aKeys_002_050_001_000_000[0], &aValues_002_050_001_000_000[0] );
   // Substitution set ChqSupCodeSet.  Language: enCA
   static const I_CHAR* aKeys_002_050_003_000_000[] = {
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_050_003_000_000[] = {
      I_("Suppressed Cheque"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_050_003_000_000;
   const BFSubstitutionSet SubSet_002_050_003_000_000(
    &aKeys_002_050_003_000_000[0], &aValues_002_050_003_000_000[0] );
   // Substitution set ChqSupCodeSet.  Language: frFR
   static const I_CHAR* aKeys_002_050_004_000_000[] = {
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_050_004_000_000[] = {
      I_("Suppressed Cheque"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_050_004_000_000;
   const BFSubstitutionSet SubSet_002_050_004_000_000(
    &aKeys_002_050_004_000_000[0], &aValues_002_050_004_000_000[0] );
   // Substitution set ChqSupCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_050_005_000_000[] = {
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_050_005_000_000[] = {
      I_("Chèque supprimé"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_050_005_000_000;
   const BFSubstitutionSet SubSet_002_050_005_000_000(
    &aKeys_002_050_005_000_000[0], &aValues_002_050_005_000_000[0] );
   // Substitution set ChqSupCodeSet.  Language: enIE
   static const I_CHAR* aKeys_002_050_006_000_000[] = {
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_050_006_000_000[] = {
      I_("Suppressed Cheque"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_050_006_000_000;
   const BFSubstitutionSet SubSet_002_050_006_000_000(
    &aKeys_002_050_006_000_000[0], &aValues_002_050_006_000_000[0] );
   // Substitution set ChqSupCodeSet.  Language: deDE
   static const I_CHAR* aKeys_002_050_007_000_000[] = {
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_050_007_000_000[] = {
      I_("Suppressed Cheque"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_050_007_000_000;
   const BFSubstitutionSet SubSet_002_050_007_000_000(
    &aKeys_002_050_007_000_000[0], &aValues_002_050_007_000_000[0] );
   // Substitution set ChqSupCodeSet.  Language: esEs
   static const I_CHAR* aKeys_002_050_008_000_000[] = {
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_050_008_000_000[] = {
      I_("Suppressed Cheque"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_050_008_000_000;
   const BFSubstitutionSet SubSet_002_050_008_000_000(
    &aKeys_002_050_008_000_000[0], &aValues_002_050_008_000_000[0] );
   // Substitution set ChqSupCodeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_050_010_000_000[] = {
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_050_010_000_000[] = {
      I_("Genegeerde cheque"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_050_010_000_000;
   const BFSubstitutionSet SubSet_002_050_010_000_000(
    &aKeys_002_050_010_000_000[0], &aValues_002_050_010_000_000[0] );
   // Substitution set SettleSourceSet.  Language: enUS
   static const I_CHAR* aKeys_002_051_001_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_051_001_000_000[] = {
      I_("Dealer"),
      I_("Fund Company"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_051_001_000_000;
   const BFSubstitutionSet SubSet_002_051_001_000_000(
    &aKeys_002_051_001_000_000[0], &aValues_002_051_001_000_000[0] );
   // Substitution set SettleSourceSet.  Language: enCA
   static const I_CHAR* aKeys_002_051_003_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_051_003_000_000[] = {
      I_("Dealer"),
      I_("Fund Company"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_051_003_000_000;
   const BFSubstitutionSet SubSet_002_051_003_000_000(
    &aKeys_002_051_003_000_000[0], &aValues_002_051_003_000_000[0] );
   // Substitution set SettleSourceSet.  Language: frFR
   static const I_CHAR* aKeys_002_051_004_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_051_004_000_000[] = {
      I_("Agent"),
      I_("Société de fonds"),
      I_("Intermediaire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_051_004_000_000;
   const BFSubstitutionSet SubSet_002_051_004_000_000(
    &aKeys_002_051_004_000_000[0], &aValues_002_051_004_000_000[0] );
   // Substitution set SettleSourceSet.  Language: frCA
   static const I_CHAR* aKeys_002_051_005_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_051_005_000_000[] = {
      I_("Courtier"),
      I_("Société de fonds"),
      I_("Intermédiaire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_051_005_000_000;
   const BFSubstitutionSet SubSet_002_051_005_000_000(
    &aKeys_002_051_005_000_000[0], &aValues_002_051_005_000_000[0] );
   // Substitution set SettleSourceSet.  Language: enIE
   static const I_CHAR* aKeys_002_051_006_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_051_006_000_000[] = {
      I_("Dealer"),
      I_("Fund Company"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_051_006_000_000;
   const BFSubstitutionSet SubSet_002_051_006_000_000(
    &aKeys_002_051_006_000_000[0], &aValues_002_051_006_000_000[0] );
   // Substitution set SettleSourceSet.  Language: deDE
   static const I_CHAR* aKeys_002_051_007_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_051_007_000_000[] = {
      I_("Dealer"),
      I_("Fund Company"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_051_007_000_000;
   const BFSubstitutionSet SubSet_002_051_007_000_000(
    &aKeys_002_051_007_000_000[0], &aValues_002_051_007_000_000[0] );
   // Substitution set SettleSourceSet.  Language: esEs
   static const I_CHAR* aKeys_002_051_008_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_051_008_000_000[] = {
      I_("Dealer"),
      I_("Fund Company"),
      I_("Intermediary"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_051_008_000_000;
   const BFSubstitutionSet SubSet_002_051_008_000_000(
    &aKeys_002_051_008_000_000[0], &aValues_002_051_008_000_000[0] );
   // Substitution set SettleSourceSet.  Language: nlNL
   static const I_CHAR* aKeys_002_051_010_000_000[] = {
      I_("D"),
      I_("F"),
      I_("I"),
      0x00
   };

   static const I_CHAR* aValues_002_051_010_000_000[] = {
      I_("Handelaar"),
      I_("Fondsbedrijf"),
      I_("Tussenpersoon"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_051_010_000_000;
   const BFSubstitutionSet SubSet_002_051_010_000_000(
    &aKeys_002_051_010_000_000[0], &aValues_002_051_010_000_000[0] );
   // Substitution set GenderSet.  Language: enUS
   static const I_CHAR* aKeys_002_052_001_000_000[] = {
      I_("F"),
      I_("M"),
      0x00
   };

   static const I_CHAR* aValues_002_052_001_000_000[] = {
      I_("Female"),
      I_("Male"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_052_001_000_000;
   const BFSubstitutionSet SubSet_002_052_001_000_000(
    &aKeys_002_052_001_000_000[0], &aValues_002_052_001_000_000[0] );
   // Substitution set GenderSet.  Language: enCA
   static const I_CHAR* aKeys_002_052_003_000_000[] = {
      I_("F"),
      I_("M"),
      0x00
   };

   static const I_CHAR* aValues_002_052_003_000_000[] = {
      I_("Female"),
      I_("Male"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_052_003_000_000;
   const BFSubstitutionSet SubSet_002_052_003_000_000(
    &aKeys_002_052_003_000_000[0], &aValues_002_052_003_000_000[0] );
   // Substitution set GenderSet.  Language: frFR
   static const I_CHAR* aKeys_002_052_004_000_000[] = {
      I_("F"),
      I_("M"),
      0x00
   };

   static const I_CHAR* aValues_002_052_004_000_000[] = {
      I_("Female"),
      I_("Masculin"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_052_004_000_000;
   const BFSubstitutionSet SubSet_002_052_004_000_000(
    &aKeys_002_052_004_000_000[0], &aValues_002_052_004_000_000[0] );
   // Substitution set GenderSet.  Language: frCA
   static const I_CHAR* aKeys_002_052_005_000_000[] = {
      I_("F"),
      I_("M"),
      0x00
   };

   static const I_CHAR* aValues_002_052_005_000_000[] = {
      I_("Femme"),
      I_("Homme"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_052_005_000_000;
   const BFSubstitutionSet SubSet_002_052_005_000_000(
    &aKeys_002_052_005_000_000[0], &aValues_002_052_005_000_000[0] );
   // Substitution set GenderSet.  Language: enIE
   static const I_CHAR* aKeys_002_052_006_000_000[] = {
      I_("F"),
      I_("M"),
      0x00
   };

   static const I_CHAR* aValues_002_052_006_000_000[] = {
      I_("Female"),
      I_("Male"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_052_006_000_000;
   const BFSubstitutionSet SubSet_002_052_006_000_000(
    &aKeys_002_052_006_000_000[0], &aValues_002_052_006_000_000[0] );
   // Substitution set GenderSet.  Language: deDE
   static const I_CHAR* aKeys_002_052_007_000_000[] = {
      I_("F"),
      I_("M"),
      0x00
   };

   static const I_CHAR* aValues_002_052_007_000_000[] = {
      I_("Female"),
      I_("Male"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_052_007_000_000;
   const BFSubstitutionSet SubSet_002_052_007_000_000(
    &aKeys_002_052_007_000_000[0], &aValues_002_052_007_000_000[0] );
   // Substitution set GenderSet.  Language: esEs
   static const I_CHAR* aKeys_002_052_008_000_000[] = {
      I_("F"),
      I_("M"),
      0x00
   };

   static const I_CHAR* aValues_002_052_008_000_000[] = {
      I_("Female"),
      I_("Male"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_052_008_000_000;
   const BFSubstitutionSet SubSet_002_052_008_000_000(
    &aKeys_002_052_008_000_000[0], &aValues_002_052_008_000_000[0] );
   // Substitution set GenderSet.  Language: nlNL
   static const I_CHAR* aKeys_002_052_010_000_000[] = {
      I_("F"),
      I_("M"),
      0x00
   };

   static const I_CHAR* aValues_002_052_010_000_000[] = {
      I_("Female"),
      I_("Male"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_052_010_000_000;
   const BFSubstitutionSet SubSet_002_052_010_000_000(
    &aKeys_002_052_010_000_000[0], &aValues_002_052_010_000_000[0] );
   // Substitution set TransTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_053_001_000_000[] = {
      I_("AF"),
      I_("AW"),
      I_("CD"),
      I_("CG"),
      I_("CM"),
      I_("DV"),
      I_("ED"),
      I_("EI"),
      I_("EO"),
      I_("FE"),
      I_("ID"),
      I_("IF"),
      I_("II"),
      I_("MF"),
      I_("PW"),
      I_("SF"),
      I_("TF"),
      I_("TI"),
      I_("TO"),
      I_("TR"),
      I_("TRE"),
      I_("TRT"),
      I_("TX"),
      I_("P"),
      I_("S"),
      I_("AT"),
      I_("XR"),
      I_("V"),
      I_("RO"),
      I_("AF91"),
      I_("ID57"),
      I_("ID58"),
      I_("ID59"),
      I_("AFTR"),
      I_("MR"),
      I_("LR"),
      I_("RR"),
      I_("RP"),
      I_("RM"),
      I_("RD"),
      I_("RC"),
      I_("AT38"),
      I_("GA"),
      I_("RS"),
      I_("IDRO"),
      I_("EB"),
      I_("PB"),
      I_("MFR"),
      I_("ID66"),
      I_("ID65"),
      I_("TI04"),
      I_("TO04"),
      I_("TI08"),
      I_("TO08"),
      I_("ID62"),
      I_("ID63"),
      I_("ED71"),
      I_("ED72"),
      I_("PW71"),
      I_("PW72"),
      I_("PWIC"),
      I_("EDIC"),
      I_("ED91"),
      I_("SM"),
      I_("ED40"),
      I_("PW40"),
      I_("ED73"),
      I_("PW73"),
      I_("AFDF"),
      I_("PW96"),
      I_("IDCI"),
      I_("IDSI"),
      I_("ID98"),
      I_("XR33"),
      I_("EI33"),
      I_("EO33"),
      I_("IDTFR"),
      I_("ED98"),
      I_("PW98"),
      I_("XR45"),
      I_("EI45"),
      I_("EO45"),
      I_("PW82"),
      0x00
   };

   static const I_CHAR* aValues_002_053_001_000_000[] = {
      I_("Administration Fee"),
      I_("Automatic Withdrawal"),
      I_("Capital Distribution"),
      I_("Capital Gains"),
      I_("Commission"),
      I_("All Dividends"),
      I_("Purchase"),
      I_("Exchange In"),
      I_("Exchange Out"),
      I_("FEE"),
      I_("Income Distribution"),
      I_("Incentive FEE"),
      I_("Interest"),
      I_("Management Fee"),
      I_("Redemption"),
      I_("Service Fee"),
      I_("Transaction Fee"),
      I_("Transfer In"),
      I_("Transfer Out"),
      I_("Transfer"),
      I_("Exchange"),
      I_("Transfer"),
      I_("Taxes Withheld"),
      I_("PAC"),
      I_("SWP"),
      I_("AT"),
      I_("Exchange"),
      I_("Saving Plan"),
      I_("Asset Allocation"),
      I_("Management Fee"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("All Fund Transfer"),
      I_("Management Fee Rebate"),
      I_("LSIF Rollover"),
      I_("LSIF Rollover Redemption"),
      I_("LSIF Rollover Purchase"),
      I_("Redirect Mgmt Fee Rebate"),
      I_("Redirect Distribution"),
      I_("ReinvPurchase"),
      I_("Structured Notes Rollover"),
      I_("Guarantee Adjustment"),
      I_("Manually Initiated Reset"),
      I_("Income Distribution"),
      I_("Rebalance Purchase"),
      I_("Rebalance Redemption"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("Transfer In"),
      I_("Transfer Out"),
      I_("Transfer In"),
      I_("Transfer Out"),
      I_("Foreign Cap Gain Alloc"),
      I_("Foreign Cap Gain Alloc"),
      I_("InSpecies Purchase"),
      I_("Hybrid Purchase"),
      I_("InSpecies Redemption"),
      I_("Hybrid Redemption"),
      I_("Redemption"),
      I_("Purchase"),
      I_("CUSIP Rollover Purchase"),
      I_("Seg Maturity Redemption"),
      I_("EQ Purchase"),
      I_("EQ Redemption"),
      I_("Non-ProRata Insp Pur"),
      I_("Non-ProRata Insp Red"),
      I_("Dealer Service Fee"),
      I_("All Avail. EAP Redemption"),
      I_("Capital Gain Income"),
      I_("Supplementary Income"),
      I_("Anniversary ID"),
      I_("Rollover Exchange"),
      I_("Rollover Exchange In"),
      I_("Rollover Exchange Out"),
      I_("Trailer Fee Rebate"),
      I_("Cross Sys Transfer-In"),
      I_("Cross Sys Transfer-Out"),
      I_("InterClass Switch"),
      I_("InterClass Switch-In"),
      I_("InterClass Switch-Out"),
      I_("Refund Redemption"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_053_001_000_000;
   const BFSubstitutionSet SubSet_002_053_001_000_000(
    &aKeys_002_053_001_000_000[0], &aValues_002_053_001_000_000[0] );
   // Substitution set TransTypeSet.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_053_001_004_000[] = {
      I_("AF"),
      I_("AW"),
      I_("CD"),
      I_("CG"),
      I_("CM"),
      I_("DV"),
      I_("ED"),
      I_("EI"),
      I_("EO"),
      I_("FE"),
      I_("ID"),
      I_("IF"),
      I_("II"),
      I_("MF"),
      I_("PW"),
      I_("SF"),
      I_("TF"),
      I_("TI"),
      I_("TO"),
      I_("TR"),
      I_("TRE"),
      I_("TRT"),
      I_("TX"),
      I_("P"),
      I_("S"),
      I_("AT"),
      I_("XR"),
      I_("V"),
      I_("RO"),
      I_("AF91"),
      I_("ID57"),
      I_("ID58"),
      I_("ID59"),
      I_("AFTR"),
      I_("MR"),
      I_("LR"),
      I_("RR"),
      I_("RP"),
      I_("RM"),
      I_("RD"),
      I_("RC"),
      I_("AT38"),
      I_("GA"),
      I_("RS"),
      I_("IDRO"),
      I_("EB"),
      I_("PB"),
      I_("MFR"),
      I_("ID66"),
      I_("ID65"),
      I_("TI04"),
      I_("TO04"),
      I_("TI08"),
      I_("TO08"),
      I_("ID62"),
      I_("ID63"),
      I_("ED71"),
      I_("ED72"),
      I_("PW71"),
      I_("PW72"),
      I_("PWIC"),
      I_("EDIC"),
      I_("ED91"),
      I_("SM"),
      I_("ED40"),
      I_("PW40"),
      I_("ED73"),
      I_("PW73"),
      I_("AFDF"),
      I_("PW96"),
      I_("IDCI"),
      I_("IDSI"),
      I_("ID98"),
      I_("XR33"),
      I_("EI33"),
      I_("EO33"),
      I_("IDTFR"),
      I_("ED98"),
      I_("PW98"),
      I_("XR45"),
      I_("EI45"),
      I_("EO45"),
      I_("PW82"),
      0x00
   };

   static const I_CHAR* aValues_002_053_001_004_000[] = {
      I_("Administration Fee"),
      I_("Automatic Withdrawal"),
      I_("Capital Distribution"),
      I_("Capital Gains"),
      I_("Commission"),
      I_("All Dividents"),
      I_("Purchase"),
      I_("Exchange In"),
      I_("Exchange Out"),
      I_("FEE"),
      I_("Income Distribution"),
      I_("Incentive FEE"),
      I_("Interest"),
      I_("Management Fee"),
      I_("Redemption"),
      I_("Service Fee"),
      I_("Transaction Fee"),
      I_("Transfer In"),
      I_("Transfer Out"),
      I_("Transfer"),
      I_("Exchange"),
      I_("Transfer"),
      I_("Taxes Withheld"),
      I_("PAC"),
      I_("SWP"),
      I_("AT"),
      I_("Exchange"),
      I_("Saving Plan"),
      I_("Asset Allocation"),
      I_("Management Fee"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("All Fund Transfer"),
      I_("Management Fee Rebate"),
      I_("LSIF Rollover"),
      I_("LSIF Rollover Redemption"),
      I_("LSIF Rollover Purchase"),
      I_("Redirect Mgmt Fee Rebate"),
      I_("Redirect Distribution"),
      I_("ReinvPurchase"),
      I_("Structured Notes Rollover"),
      I_("Guarantee Adjustment"),
      I_("Manually Initiated Reset"),
      I_("Income Distribution"),
      I_("Rebalance Purchase"),
      I_("Rebalance Redemption"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("Transfer In"),
      I_("Transfer Out"),
      I_("Transfer In"),
      I_("Transfer Out"),
      I_("Foreign Cap Gain Alloc"),
      I_("Foreign Cap Gain Alloc"),
      I_("InSpecies Purchase"),
      I_("Hybrid Purchase"),
      I_("InSpecies Redemption"),
      I_("Hybrid Redemption"),
      I_("Redemption"),
      I_("Purchase"),
      I_("CUSIP Rollover Purchase"),
      I_("Seg Maturity Redemption"),
      I_("EQ Purchase"),
      I_("EQ Redemption"),
      I_("Non-ProRata Insp Pur"),
      I_("Non-ProRata Insp Red"),
      I_("Dealer Service Fee"),
      I_("All Avail. EAP Redemption"),
      I_("Capital Gain Income"),
      I_("Supplementary Income"),
      I_("Anniversary ID"),
      I_("Rollover Exchange"),
      I_("Rollover Exchange In"),
      I_("Rollover Exchange Out"),
      I_("Trailer Fee Rebate"),
      I_("Cross Sys Transfer-In"),
      I_("Cross Sys Transfer-Out"),
      I_("InterClass Switch"),
      I_("InterClass Switch-In"),
      I_("InterClass Switch-Out"),
      I_("Refund Redemption"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_053_001_004_000;
   const BFSubstitutionSet SubSet_002_053_001_004_000(
    &aKeys_002_053_001_004_000[0], &aValues_002_053_001_004_000[0] );
   // Substitution set TransTypeSet.  Language: enCA
   static const I_CHAR* aKeys_002_053_003_000_000[] = {
      I_("AF"),
      I_("AW"),
      I_("CD"),
      I_("CG"),
      I_("CM"),
      I_("DV"),
      I_("ED"),
      I_("EI"),
      I_("EO"),
      I_("FE"),
      I_("ID"),
      I_("IF"),
      I_("II"),
      I_("MF"),
      I_("PW"),
      I_("SF"),
      I_("TF"),
      I_("TI"),
      I_("TO"),
      I_("TR"),
      I_("TRE"),
      I_("TRT"),
      I_("TX"),
      I_("P"),
      I_("S"),
      I_("AT"),
      I_("XR"),
      I_("V"),
      I_("RO"),
      I_("AF91"),
      I_("ID57"),
      I_("ID58"),
      I_("ID59"),
      I_("AFTR"),
      I_("MR"),
      I_("PW82"),
      0x00
   };

   static const I_CHAR* aValues_002_053_003_000_000[] = {
      I_("Administration Fee"),
      I_("Automatic Withdrawal"),
      I_("Capital Distribution"),
      I_("Capital Gains"),
      I_("Commission"),
      I_("All Dividents"),
      I_("Purchase"),
      I_("Exchange In"),
      I_("Exchange Out"),
      I_("FEE"),
      I_("Income Distribution"),
      I_("Incentive FEE"),
      I_("Interest"),
      I_("Management Fee"),
      I_("Redemption"),
      I_("Service Fee"),
      I_("Transaction Fee"),
      I_("Transfer In"),
      I_("Transfer Out"),
      I_("Transfer"),
      I_("Exchange"),
      I_("Transfer"),
      I_("Taxes Withheld"),
      I_("PAC"),
      I_("SWP"),
      I_("AT"),
      I_("Exchange"),
      I_("Saving Plan"),
      I_("Asset Allocaton"),
      I_("Management Fee"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("All Fund Transfer"),
      I_("Management Fee Rebate"),
      I_("Refund Redemption"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_053_003_000_000;
   const BFSubstitutionSet SubSet_002_053_003_000_000(
    &aKeys_002_053_003_000_000[0], &aValues_002_053_003_000_000[0] );
   // Substitution set TransTypeSet.  Language: frFR
   static const I_CHAR* aKeys_002_053_004_000_000[] = {
      I_("AF"),
      I_("AW"),
      I_("CD"),
      I_("CG"),
      I_("CM"),
      I_("DV"),
      I_("ED"),
      I_("EI"),
      I_("EO"),
      I_("FE"),
      I_("ID"),
      I_("IF"),
      I_("II"),
      I_("MF"),
      I_("PW"),
      I_("SF"),
      I_("TF"),
      I_("TI"),
      I_("TO"),
      I_("TR"),
      I_("TRE"),
      I_("TRT"),
      I_("TX"),
      I_("P"),
      I_("S"),
      I_("AT"),
      I_("PW82"),
      0x00
   };

   static const I_CHAR* aValues_002_053_004_000_000[] = {
      I_("Frais de gestion"),
      I_("Retrait automatique"),
      I_("Repartition de capital"),
      I_("Plus-values"),
      I_("Commission"),
      I_("All Dividents"),
      I_("Souscription"),
      I_("Echange entrant"),
      I_("Echange sortant"),
      I_("FRAIS"),
      I_("Repartition revenu"),
      I_("FRAIS incitations"),
      I_("Interet"),
      I_("Frais de gestion"),
      I_("Rachat"),
      I_("Frais service"),
      I_("Frais transaction"),
      I_("Virement entrant"),
      I_("Virement sortant"),
      I_("Virement/Echange"),
      I_("Echange"),
      I_("Virement"),
      I_("Taxes retenues"),
      I_("Cheque certifie"),
      I_("Plan de retrait automatique"),
      I_(" AT"),
      I_("Rachat de Remboursement"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_053_004_000_000;
   const BFSubstitutionSet SubSet_002_053_004_000_000(
    &aKeys_002_053_004_000_000[0], &aValues_002_053_004_000_000[0] );
   // Substitution set TransTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_053_005_000_000[] = {
      I_("AF"),
      I_("AW"),
      I_("CD"),
      I_("CG"),
      I_("CM"),
      I_("DV"),
      I_("ED"),
      I_("EI"),
      I_("EO"),
      I_("FE"),
      I_("ID"),
      I_("IF"),
      I_("II"),
      I_("MF"),
      I_("PW"),
      I_("SF"),
      I_("TF"),
      I_("TI"),
      I_("TO"),
      I_("TR"),
      I_("TRE"),
      I_("TRT"),
      I_("TX"),
      I_("P"),
      I_("S"),
      I_("AT"),
      I_("XR"),
      I_("V"),
      I_("RO"),
      I_("AF91"),
      I_("ID57"),
      I_("ID58"),
      I_("ID59"),
      I_("AFTR"),
      I_("MR"),
      I_("LR"),
      I_("RR"),
      I_("RP"),
      I_("RM"),
      I_("RD"),
      I_("RC"),
      I_("AT38"),
      I_("GA"),
      I_("RS"),
      I_("IDRO"),
      I_("EB"),
      I_("PB"),
      I_("MFR"),
      I_("ID66"),
      I_("ID65"),
      I_("TI04"),
      I_("TO04"),
      I_("TI08"),
      I_("TO08"),
      I_("ID62"),
      I_("ID63"),
      I_("ED71"),
      I_("ED72"),
      I_("PW71"),
      I_("PW72"),
      I_("PWIC"),
      I_("EDIC"),
      I_("ED91"),
      I_("SM"),
      I_("ED40"),
      I_("PW40"),
      I_("ED73"),
      I_("PW73"),
      I_("AFDF"),
      I_("PW96"),
      I_("IDCI"),
      I_("IDSI"),
      I_("ID98"),
      I_("XR33"),
      I_("EI33"),
      I_("EO33"),
      I_("XR45"),
      I_("EI45"),
      I_("EO45"),
      I_("IDTFR"),
      I_("ED98"),
      I_("PW98"),
      I_("PW82"),
      0x00
   };

   static const I_CHAR* aValues_002_053_005_000_000[] = {
      I_("Frais d'administration"),
      I_("Retrait systématique"),
      I_("Distribution de capital"),
      I_("Gains en capital"),
      I_("Commission"),
      I_("Tous les dividendes"),
      I_("Achat"),
      I_("Échange entrant"),
      I_("Échange sortant"),
      I_("Frais"),
      I_("Intérêts"),
      I_("Prime de performance"),
      I_("Intérêt"),
      I_("Frais de gestion"),
      I_("Rachat"),
      I_("Frais de service"),
      I_("Frais de transaction"),
      I_("Transfert entrant"),
      I_("Transfert sortant"),
      I_("Transfert"),
      I_("Échange"),
      I_("Transfert"),
      I_("Retenue d'impôt"),
      I_("PAC"),
      I_("PRP"),
      I_("Transfert automatique"),
      I_("Échange"),
      I_("Régime d'épargne"),
      I_("Répartition d'actif"),
      I_("Frais de gestion"),
      I_("Remise sur les frais de gestion"),
      I_("Remise sur les frais de gestion"),
      I_("Remise sur les frais de gestion"),
      I_("Transfert de tous les fonds"),
      I_("Remise sur les frais de gestion"),
      I_("Reconduction de FIT"),
      I_("Rachat de reconduction de FIT"),
      I_("Achat de reconduction de FIT"),
      I_("Réinvestir la remise sur les frais de gestion"),
      I_("Réinvestissement de la distribution"),
      I_("Achat de réinvestissement"),
      I_("Reconduction de notes structurées"),
      I_("Ajustement de garantie"),
      I_("Revalorisation lancée manuellement"),
      I_("Intérêts"),
      I_("Rebalancer l'achat"),
      I_("Rebalancer le rachat"),
      I_("Remise sur les frais de gestion"),
      I_("Remise sur les frais de gestion"),
      I_("Remise sur les frais de gestion"),
      I_("Transfert entrant"),
      I_("Transfert sortant"),
      I_("Transfert entrant"),
      I_("Transfert sortant"),
      I_("Répartition des gains de capitaux étrangers"),
      I_("Répartition des gains de capitaux étrangers"),
      I_("Achat comptant"),
      I_("Achat hybride"),
      I_("Rachat comptant"),
      I_("Rachat hybride"),
      I_("Rachat"),
      I_("Achat"),
      I_("Achat de reconduction de CUSIP"),
      I_("Rachat à l'échéance du fonds distinct"),
      I_("Achat EQ"),
      I_("Rachat EQ"),
      I_("Achat comptant non proportionnel"),
      I_("Rachat comptant non proportionnel"),
      I_("Dealer Service Fee"),
      I_("All Avail. EAP Redemption"),
      I_("Gains en capital"),
      I_("Revenu supplémentaire"),
      I_("Anniversaire"),
      I_("Rollover Exchange"),
      I_("Rollover Exchange In"),
      I_("Rollover Exchange Out"),
      I_("InterClass Switch"),
      I_("Échange entrant entre catégories"),
      I_("Échange sortant entre categories"),
      I_("Trailer Fee Rebate"),
      I_("Cross Sys Transfer-In"),
      I_("Cross Sys Transfer-Out"),
      I_("Refund Redemption"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_053_005_000_000;
   const BFSubstitutionSet SubSet_002_053_005_000_000(
    &aKeys_002_053_005_000_000[0], &aValues_002_053_005_000_000[0] );
   // Substitution set TransTypeSet.  Language: enIE
   static const I_CHAR* aKeys_002_053_006_000_000[] = {
      I_("AF"),
      I_("AW"),
      I_("CD"),
      I_("CG"),
      I_("CM"),
      I_("DV"),
      I_("ED"),
      I_("EI"),
      I_("EO"),
      I_("FE"),
      I_("ID"),
      I_("IF"),
      I_("II"),
      I_("MF"),
      I_("PW"),
      I_("SF"),
      I_("TF"),
      I_("TI"),
      I_("TO"),
      I_("TR"),
      I_("TRE"),
      I_("TRT"),
      I_("TX"),
      I_("P"),
      I_("S"),
      I_("AT"),
      I_("XR"),
      I_("V"),
      I_("RO"),
      I_("AF91"),
      I_("ID57"),
      I_("ID58"),
      I_("ID59"),
      I_("AFTR"),
      I_("MR"),
      0x00
   };

   static const I_CHAR* aValues_002_053_006_000_000[] = {
      I_("Administration Fee"),
      I_("Automatic Withdrawal"),
      I_("Capital Distribution"),
      I_("Capital Gains"),
      I_("Commission"),
      I_("All Dividents"),
      I_("Purchase"),
      I_("Exchange In"),
      I_("Exchange Out"),
      I_("FEE"),
      I_("Income Distribution"),
      I_("Incentive FEE"),
      I_("Interest"),
      I_("Management Fee"),
      I_("Redemption"),
      I_("Service Fee"),
      I_("Transaction Fee"),
      I_("Transfer In"),
      I_("Transfer Out"),
      I_("Transfer"),
      I_("Exchange"),
      I_("Transfer"),
      I_("Taxes Withheld"),
      I_("PAC"),
      I_("SWP"),
      I_("AT"),
      I_("Exchange"),
      I_("Saving Plan"),
      I_("Asset Allocaton"),
      I_("Management Fee"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("All Fund Transfer"),
      I_("Management Fee Rebate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_053_006_000_000;
   const BFSubstitutionSet SubSet_002_053_006_000_000(
    &aKeys_002_053_006_000_000[0], &aValues_002_053_006_000_000[0] );
   // Substitution set TransTypeSet.  Language: deDE
   static const I_CHAR* aKeys_002_053_007_000_000[] = {
      I_("AF"),
      I_("AW"),
      I_("CD"),
      I_("CG"),
      I_("CM"),
      I_("DV"),
      I_("ED"),
      I_("EI"),
      I_("EO"),
      I_("FE"),
      I_("ID"),
      I_("IF"),
      I_("II"),
      I_("MF"),
      I_("PW"),
      I_("SF"),
      I_("TF"),
      I_("TI"),
      I_("TO"),
      I_("TR"),
      I_("TRE"),
      I_("TRT"),
      I_("TX"),
      I_("P"),
      I_("S"),
      I_("AT"),
      I_("XR"),
      I_("V"),
      I_("RO"),
      I_("AF91"),
      I_("ID57"),
      I_("ID58"),
      I_("ID59"),
      I_("AFTR"),
      I_("MR"),
      I_("LR"),
      I_("RR"),
      I_("RP"),
      I_("RM"),
      I_("RD"),
      I_("RC"),
      I_("AT38"),
      I_("GA"),
      I_("RS"),
      0x00
   };

   static const I_CHAR* aValues_002_053_007_000_000[] = {
      I_("Administration Fee"),
      I_("Automatic Withdrawal"),
      I_("Capital Distribution"),
      I_("Capital Gains"),
      I_("Commission"),
      I_("All Dividents"),
      I_("Purchase"),
      I_("Exchange In"),
      I_("Exchange Out"),
      I_("FEE"),
      I_("Income Distribution"),
      I_("Incentive FEE"),
      I_("Interest"),
      I_("Management Fee"),
      I_("Redemption"),
      I_("Service Fee"),
      I_("Transaction Fee"),
      I_("Transfer In"),
      I_("Transfer Out"),
      I_("Transfer"),
      I_("Exchange"),
      I_("Transfer"),
      I_("Taxes Withheld"),
      I_("PAC"),
      I_("SWP"),
      I_("AT"),
      I_("Exchange"),
      I_("Saving Plan"),
      I_("Asset Allocaton"),
      I_("Management Fee"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("All Fund Transfer"),
      I_("Management Fee Rebate"),
      I_("LSIF Rollover"),
      I_("LSIF Rollover Redemption"),
      I_("LSIF Rollover Purchase"),
      I_("Redirect Mgmt Fee Rebate"),
      I_("Redirect Distribution"),
      I_("ReinvPurchase"),
      I_("Structured Notes Rollover"),
      I_("Guarantee Adjustment"),
      I_("Manually Initiated Reset"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_053_007_000_000;
   const BFSubstitutionSet SubSet_002_053_007_000_000(
    &aKeys_002_053_007_000_000[0], &aValues_002_053_007_000_000[0] );
   // Substitution set TransTypeSet.  Language: esEs
   static const I_CHAR* aKeys_002_053_008_000_000[] = {
      I_("AF"),
      I_("AW"),
      I_("CD"),
      I_("CG"),
      I_("CM"),
      I_("DV"),
      I_("ED"),
      I_("EI"),
      I_("EO"),
      I_("FE"),
      I_("ID"),
      I_("IF"),
      I_("II"),
      I_("MF"),
      I_("PW"),
      I_("SF"),
      I_("TF"),
      I_("TI"),
      I_("TO"),
      I_("TR"),
      I_("TRE"),
      I_("TRT"),
      I_("TX"),
      I_("P"),
      I_("S"),
      I_("AT"),
      I_("XR"),
      I_("V"),
      I_("RO"),
      I_("AF91"),
      I_("ID57"),
      I_("ID58"),
      I_("ID59"),
      I_("AFTR"),
      I_("MR"),
      0x00
   };

   static const I_CHAR* aValues_002_053_008_000_000[] = {
      I_("Administration Fee"),
      I_("Automatic Withdrawal"),
      I_("Capital Distribution"),
      I_("Capital Gains"),
      I_("Commission"),
      I_("All Dividents"),
      I_("Purchase"),
      I_("Exchange In"),
      I_("Exchange Out"),
      I_("FEE"),
      I_("Income Distribution"),
      I_("Incentive FEE"),
      I_("Interest"),
      I_("Management Fee"),
      I_("Redemption"),
      I_("Service Fee"),
      I_("Transaction Fee"),
      I_("Transfer In"),
      I_("Transfer Out"),
      I_("Transfer"),
      I_("Exchange"),
      I_("Transfer"),
      I_("Taxes Withheld"),
      I_("PAC"),
      I_("SWP"),
      I_("AT"),
      I_("Exchange"),
      I_("Saving Plan"),
      I_("Asset Allocaton"),
      I_("Management Fee"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("All Fund Transfer"),
      I_("Management Fee Rebate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_053_008_000_000;
   const BFSubstitutionSet SubSet_002_053_008_000_000(
    &aKeys_002_053_008_000_000[0], &aValues_002_053_008_000_000[0] );
   // Substitution set TransTypeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_053_010_000_000[] = {
      I_("AF"),
      I_("AW"),
      I_("CD"),
      I_("CG"),
      I_("CM"),
      I_("DV"),
      I_("ED"),
      I_("EI"),
      I_("EO"),
      I_("FE"),
      I_("ID"),
      I_("IF"),
      I_("II"),
      I_("MF"),
      I_("PW"),
      I_("SF"),
      I_("TF"),
      I_("TI"),
      I_("TO"),
      I_("TR"),
      I_("TRE"),
      I_("TRT"),
      I_("TX"),
      I_("P"),
      I_("S"),
      I_("AT"),
      I_("XR"),
      I_("V"),
      I_("RO"),
      I_("AF91"),
      I_("ID57"),
      I_("ID58"),
      I_("ID59"),
      I_("AFTR"),
      I_("MR"),
      I_("LR"),
      I_("RR"),
      I_("RP"),
      I_("RM"),
      I_("RD"),
      0x00
   };

   static const I_CHAR* aValues_002_053_010_000_000[] = {
      I_("Beheerkosten"),
      I_("Automatische afschrijving"),
      I_("Kapitaaldistributie"),
      I_("Kapitaalwinst"),
      I_("Commissie"),
      I_("Alle dividenden"),
      I_("Aankoop"),
      I_("Ruil binnen"),
      I_("Ruil buiten"),
      I_("KOSTEN"),
      I_("Inkomensdistributie"),
      I_("Aansporingskosten"),
      I_("Rente"),
      I_("Beheerkosten"),
      I_("Aflossing"),
      I_("Servicekosten"),
      I_("Transactiekosten"),
      I_("Overdracht in"),
      I_("Overdracht uit"),
      I_("Overdracht"),
      I_("Ruil"),
      I_("Overdracht"),
      I_("Ingehouden belastingen"),
      I_("VGC"),
      I_("SWP"),
      I_("AT"),
      I_("Ruil"),
      I_("Saving Plan"),
      I_("Asset Allocation"),
      I_("Beheerkosten"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("All Fund Transfer"),
      I_("Management Fee Rebate"),
      I_("LSIF Rollover"),
      I_("LSIF Rollover Redemption"),
      I_("LSIF Rollover Purchase"),
      I_("Redirect Mgmt Fee Rebate"),
      I_("Redirect Distribution"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_053_010_000_000;
   const BFSubstitutionSet SubSet_002_053_010_000_000(
    &aKeys_002_053_010_000_000[0], &aValues_002_053_010_000_000[0] );
   // Substitution set TransTypeSet.  Language: nlNL, Market: 4
   static const I_CHAR* aKeys_002_053_010_004_000[] = {
      I_("AF"),
      I_("AW"),
      I_("CD"),
      I_("CG"),
      I_("CM"),
      I_("DV"),
      I_("ED"),
      I_("EI"),
      I_("EO"),
      I_("FE"),
      I_("ID"),
      I_("IF"),
      I_("II"),
      I_("MF"),
      I_("PW"),
      I_("SF"),
      I_("TF"),
      I_("TI"),
      I_("TO"),
      I_("TR"),
      I_("TRE"),
      I_("TRT"),
      I_("TX"),
      I_("P"),
      I_("S"),
      I_("AT"),
      I_("XR"),
      I_("V"),
      I_("RO"),
      I_("AF91"),
      I_("ID57"),
      I_("ID58"),
      I_("ID59"),
      I_("AFTR"),
      I_("MR"),
      I_("LR"),
      I_("RR"),
      I_("RP"),
      I_("RM"),
      I_("RD"),
      0x00
   };

   static const I_CHAR* aValues_002_053_010_004_000[] = {
      I_("Beheerkosten"),
      I_("Automatische afschrijving"),
      I_("Kapitaaldistributie"),
      I_("Kapitaalwinst"),
      I_("Commissie"),
      I_("All Dividents"),
      I_("Aankoop"),
      I_("Ruil binnen"),
      I_("Ruil buiten"),
      I_("KOSTEN"),
      I_("Inkomensdistributie"),
      I_("Aansporingskosten"),
      I_("Rente"),
      I_("Beheerkosten"),
      I_("Aflossing"),
      I_("Servicekosten"),
      I_("Transactiekosten"),
      I_("Overdracht in"),
      I_("Overdracht uit"),
      I_("Overdracht"),
      I_("Ruil"),
      I_("Overdracht"),
      I_("Ingehouden belastingen"),
      I_("VGC"),
      I_("SWP"),
      I_("AT"),
      I_("Ruil"),
      I_("Saving Plan"),
      I_("Asset Allocation"),
      I_("Beheerkosten"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("Mgmt Fee Rebate"),
      I_("All Fund Transfer"),
      I_("Management Fee Rebate"),
      I_("LSIF Rollover"),
      I_("LSIF Rollover Redemption"),
      I_("LSIF Rollover Purchase"),
      I_("Redirect Mgmt Fee Rebate"),
      I_("Redirect Distribution"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_053_010_004_000;
   const BFSubstitutionSet SubSet_002_053_010_004_000(
    &aKeys_002_053_010_004_000[0], &aValues_002_053_010_004_000[0] );
   // Substitution set TaxTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_054_001_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      I_("U"),
      I_("V"),
      I_("Z"),
      I_("BR"),
      I_("GR"),
      I_("CR"),
      I_("HR"),
      I_("OA"),
      I_("SA"),
      I_("SR"),
      I_("RD"),
      I_("IP"),
      I_("DC"),
      I_("LR"),
      I_("DP"),
      I_("JP"),
      I_("MP"),
      I_("ME"),
      I_("RS"),
      0x00
   };

   static const I_CHAR* aValues_002_054_001_000_000[] = {
      I_("Non-Registered"),
      I_("RRSP"),
      I_("RRIF"),
      I_("External RRSP"),
      I_("Self Directed RRSP"),
      I_("External RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/External RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Taxable"),
      I_("Tax Exempt"),
      I_("External LIF"),
      I_("External LIRA"),
      I_("External LRIF"),
      I_("Switch Plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("External PRIF"),
      I_("External DPSP"),
      I_("External DBPP"),
      I_("LRSP"),
      I_("TFSA"),
      I_("External TFSA"),
      I_("Restricted LIF"),
      I_("External Restricted LIF"),
      I_("RLSP"),
      I_("External RLSP"),
      I_("Ordinary Account"),
      I_("Special Account"),
      I_("SRS"),
      I_("External RDSP"),
      I_("External IPP"),
      I_("External DCPP"),
      I_("External LRSP"),
      I_("Defined Contribution Pension Plan"),
      I_("Individual Pension Plan"),
      I_("Money Purchase Pension Plan"),
      I_("External Money Purchase Pension Plan"),
      I_("RDSP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_001_000_000;
   const BFSubstitutionSet SubSet_002_054_001_000_000(
    &aKeys_002_054_001_000_000[0], &aValues_002_054_001_000_000[0] );
   // Substitution set TaxTypeSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_054_001_003_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      I_("U"),
      I_("V"),
      I_("Z"),
      I_("BR"),
      I_("GR"),
      I_("CR"),
      I_("HR"),
      I_("OA"),
      I_("SA"),
      I_("SR"),
      I_("RD"),
      I_("IP"),
      I_("DC"),
      I_("LR"),
      I_("DP"),
      I_("JP"),
      I_("MP"),
      I_("ME"),
      I_("RS"),
      0x00
   };

   static const I_CHAR* aValues_002_054_001_003_000[] = {
      I_("Non-Registered"),
      I_("RRSP"),
      I_("RRIF"),
      I_("External RRSP"),
      I_("Self Directed RRSP"),
      I_("External RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/External RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Taxable"),
      I_("Tax Exempt"),
      I_("External LIF"),
      I_("External LIRA"),
      I_("External LRIF"),
      I_("Switch Plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("External PRIF"),
      I_("External DPSP"),
      I_("External DBPP"),
      I_("LRSP"),
      I_("TFSA"),
      I_("External TFSA"),
      I_("Restricted LIF"),
      I_("External Restricted LIF"),
      I_("RLSP"),
      I_("External RLSP"),
      I_("Ordinary Account"),
      I_("Special Account"),
      I_("SRS"),
      I_("External RDSP"),
      I_("External IPP"),
      I_("External DCPP"),
      I_("External LRSP"),
      I_("Defined Contribution Pension Plan"),
      I_("Individual Pension Plan"),
      I_("Money Purchase Pension Plan"),
      I_("External Money Purchase Pension Plan"),
      I_("RDSP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_001_003_000;
   const BFSubstitutionSet SubSet_002_054_001_003_000(
    &aKeys_002_054_001_003_000[0], &aValues_002_054_001_003_000[0] );
   // Substitution set TaxTypeSet.  Language: enUS, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_054_001_003_003[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      I_("U"),
      I_("V"),
      I_("Z"),
      I_("BR"),
      I_("GR"),
      I_("CR"),
      I_("HR"),
      I_("OA"),
      I_("SA"),
      I_("SR"),
      I_("RD"),
      I_("IP"),
      I_("DC"),
      I_("LR"),
      0x00
   };

   static const I_CHAR* aValues_002_054_001_003_003[] = {
      I_("Taxable"),
      I_("RRSP"),
      I_("RRIF"),
      I_("External RRSP"),
      I_("Self Directed RRSP"),
      I_("External RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/External RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Taxable"),
      I_("Non Taxable"),
      I_("External LIF"),
      I_("External LIRA"),
      I_("External LRIF"),
      I_("Switch Plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("External PRIF"),
      I_("External DPSP"),
      I_("External DBPP"),
      I_("LRSP"),
      I_("TFSA"),
      I_("External TFSA"),
      I_("Restricted LIF"),
      I_("External Restricted LIF"),
      I_("RLSP"),
      I_("External RLSP"),
      I_("Ordinary Account"),
      I_("Special Account"),
      I_("SRS"),
      I_("External RDSP"),
      I_("External IPP"),
      I_("External DCPP"),
      I_("External LRSP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_001_003_003;
   const BFSubstitutionSet SubSet_002_054_001_003_003(
    &aKeys_002_054_001_003_003[0], &aValues_002_054_001_003_003[0] );
   // Substitution set TaxTypeSet.  Language: enUS, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_054_001_003_011[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      I_("U"),
      I_("V"),
      I_("Z"),
      I_("BR"),
      I_("GR"),
      I_("CR"),
      I_("HR"),
      I_("OA"),
      I_("SA"),
      I_("SR"),
      I_("RD"),
      I_("IP"),
      I_("DC"),
      I_("LR"),
      0x00
   };

   static const I_CHAR* aValues_002_054_001_003_011[] = {
      I_("Taxable"),
      I_("RRSP"),
      I_("RRIF"),
      I_("External RRSP"),
      I_("Self Directed RRSP"),
      I_("External RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/External RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Taxable"),
      I_("Non Taxable"),
      I_("External LIF"),
      I_("External LIRA"),
      I_("External LRIF"),
      I_("Switch Plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("External PRIF"),
      I_("External DPSP"),
      I_("External DBPP"),
      I_("LRSP"),
      I_("TFSA"),
      I_("External TFSA"),
      I_("Restricted LIF"),
      I_("External Restricted LIF"),
      I_("RLSP"),
      I_("External RLSP"),
      I_("Ordinary Account"),
      I_("Special Account"),
      I_("SRS"),
      I_("External RDSP"),
      I_("External IPP"),
      I_("External DCPP"),
      I_("External LRSP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_001_003_011;
   const BFSubstitutionSet SubSet_002_054_001_003_011(
    &aKeys_002_054_001_003_011[0], &aValues_002_054_001_003_011[0] );
   // Substitution set TaxTypeSet.  Language: enUS, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_054_001_003_014[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      I_("U"),
      I_("V"),
      I_("Z"),
      I_("BR"),
      I_("GR"),
      I_("CR"),
      I_("HR"),
      I_("OA"),
      I_("SA"),
      I_("SR"),
      I_("RD"),
      I_("IP"),
      I_("DC"),
      I_("LR"),
      0x00
   };

   static const I_CHAR* aValues_002_054_001_003_014[] = {
      I_("Taxable"),
      I_("RRSP"),
      I_("RRIF"),
      I_("External RRSP"),
      I_("Self Directed RRSP"),
      I_("External RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/External RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Taxable"),
      I_("Non Taxable"),
      I_("External LIF"),
      I_("External LIRA"),
      I_("External LRIF"),
      I_("Switch Plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("External PRIF"),
      I_("External DPSP"),
      I_("External DBPP"),
      I_("LRSP"),
      I_("TFSA"),
      I_("External TFSA"),
      I_("Restricted LIF"),
      I_("External Restricted LIF"),
      I_("RLSP"),
      I_("External RLSP"),
      I_("Ordinary Account"),
      I_("Special Account"),
      I_("SRS"),
      I_("External RDSP"),
      I_("External IPP"),
      I_("External DCPP"),
      I_("External LRSP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_001_003_014;
   const BFSubstitutionSet SubSet_002_054_001_003_014(
    &aKeys_002_054_001_003_014[0], &aValues_002_054_001_003_014[0] );
   // Substitution set TaxTypeSet.  Language: enCA
   static const I_CHAR* aKeys_002_054_003_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("RS"),
      0x00
   };

   static const I_CHAR* aValues_002_054_003_000_000[] = {
      I_("Non-Registered"),
      I_("RRSP"),
      I_("RRIF"),
      I_("External RRSP"),
      I_("Self Directed RRSP"),
      I_("External RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/External RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Taxable"),
      I_("Tax Exempt"),
      I_("External LIF"),
      I_("External LIRA"),
      I_("External LRIF"),
      I_("Switch Plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("External PRIF"),
      I_("RDSP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_003_000_000;
   const BFSubstitutionSet SubSet_002_054_003_000_000(
    &aKeys_002_054_003_000_000[0], &aValues_002_054_003_000_000[0] );
   // Substitution set TaxTypeSet.  Language: frFR
   static const I_CHAR* aKeys_002_054_004_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_054_004_000_000[] = {
      I_("NON ENREGISTRE"),
      I_("RRSP"),
      I_("RRIF"),
      I_("RRSP EXTERNE"),
      I_("RRSP autonome"),
      I_("RRIF EXTERNE"),
      I_("RRIF autonome"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("RESP autonome/externe"),
      I_("LRIF"),
      I_("Plan famille RESP"),
      I_("Plan famille autonome/externe RESP"),
      I_("Plan retraite AS"),
      I_("Taxable"),
      I_("Exonere de taxe"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_004_000_000;
   const BFSubstitutionSet SubSet_002_054_004_000_000(
    &aKeys_002_054_004_000_000[0], &aValues_002_054_004_000_000[0] );
   // Substitution set TaxTypeSet.  Language: frFR, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_054_004_003_003[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_054_004_003_003[] = {
      I_("Taxable"),
      I_("RRSP"),
      I_("RRIF"),
      I_("RRSP EXTERNE"),
      I_("RRSP autonome"),
      I_("RRIF EXTERNE"),
      I_("RRIF autonome"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("RESP autonome/externe"),
      I_("LRIF"),
      I_("Plan famille RESP"),
      I_("Plan famille autonome/externe RESP"),
      I_("Plan retraite AS"),
      I_("Taxable"),
      I_("Non Taxable"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_004_003_003;
   const BFSubstitutionSet SubSet_002_054_004_003_003(
    &aKeys_002_054_004_003_003[0], &aValues_002_054_004_003_003[0] );
   // Substitution set TaxTypeSet.  Language: frFR, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_054_004_003_011[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_054_004_003_011[] = {
      I_("Taxable"),
      I_("RRSP"),
      I_("RRIF"),
      I_("RRSP EXTERNE"),
      I_("RRSP autonome"),
      I_("RRIF EXTERNE"),
      I_("RRIF autonome"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("RESP autonome/externe"),
      I_("LRIF"),
      I_("Plan famille RESP"),
      I_("Plan famille autonome/externe RESP"),
      I_("Plan retraite AS"),
      I_("Taxable"),
      I_("Non Taxable"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_004_003_011;
   const BFSubstitutionSet SubSet_002_054_004_003_011(
    &aKeys_002_054_004_003_011[0], &aValues_002_054_004_003_011[0] );
   // Substitution set TaxTypeSet.  Language: frFR, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_054_004_003_014[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_054_004_003_014[] = {
      I_("Taxable"),
      I_("RRSP"),
      I_("RRIF"),
      I_("RRSP EXTERNE"),
      I_("RRSP autonome"),
      I_("RRIF EXTERNE"),
      I_("RRIF autonome"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("RESP autonome/externe"),
      I_("LRIF"),
      I_("Plan famille RESP"),
      I_("Plan famille autonome/externe RESP"),
      I_("Plan retraite AS"),
      I_("Taxable"),
      I_("Non Taxable"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_004_003_014;
   const BFSubstitutionSet SubSet_002_054_004_003_014(
    &aKeys_002_054_004_003_014[0], &aValues_002_054_004_003_014[0] );
   // Substitution set TaxTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_054_005_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      I_("U"),
      I_("V"),
      I_("Z"),
      I_("BR"),
      I_("GR"),
      I_("CR"),
      I_("HR"),
      I_("OA"),
      I_("SA"),
      I_("SR"),
      I_("RD"),
      I_("IP"),
      I_("DC"),
      I_("LR"),
      I_("DP"),
      I_("JP"),
      I_("MP"),
      I_("ME"),
      I_("RS"),
      0x00
   };

   static const I_CHAR* aValues_002_054_005_000_000[] = {
      I_("Non enregistré"),
      I_("REER"),
      I_("FERR"),
      I_("REER externe"),
      I_("REER autogéré"),
      I_("FERR externe"),
      I_("FERR autogéré"),
      I_("RPDB"),
      I_("RRPD"),
      I_("REEE"),
      I_("REEL du Québec"),
      I_("FRV"),
      I_("CRI"),
      I_("REEE externe autogéré"),
      I_("FRRI"),
      I_("REEE familial"),
      I_("REEE familial externe autogéré"),
      I_("Régime de retraite AS"),
      I_("Imposable"),
      I_("Exemption d'impôt"),
      I_("FRV externe"),
      I_("CRI externe"),
      I_("FRRI externe"),
      I_("Régime d'échange"),
      I_("Plan d'investissement du RADE"),
      I_("Régime de participation du RADE"),
      I_("FRRP"),
      I_("FRRP externe"),
      I_("RPDB externe"),
      I_("RRPD externe"),
      I_("REER immobilisé"),
      I_("CELI"),
      I_("CELI externe"),
      I_("FRV restreint"),
      I_("FRV externe restreint"),
      I_("REIR"),
      I_("REIR externe"),
      I_("Compte ordinaire"),
      I_("Compte spécial"),
      I_("Court délai de rachat"),
      I_("REEI externe"),
      I_("RDRI externe"),
      I_("RRCD externe"),
      I_("CRI externe"),
      I_("Régime de retraite contributif"),
      I_("Régime de retraite individuel"),
      I_("Régime de retraite à cotisation déterminée"),
      I_("Régime de retraite à cotisation déterminée externe"),
      I_("RDSP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_005_000_000;
   const BFSubstitutionSet SubSet_002_054_005_000_000(
    &aKeys_002_054_005_000_000[0], &aValues_002_054_005_000_000[0] );
   // Substitution set TaxTypeSet.  Language: frCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_054_005_003_003[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      I_("U"),
      I_("V"),
      I_("Z"),
      I_("BR"),
      I_("GR"),
      I_("CR"),
      I_("HR"),
      I_("OA"),
      I_("SA"),
      I_("SR"),
      I_("RD"),
      I_("IP"),
      I_("DC"),
      I_("LR"),
      0x00
   };

   static const I_CHAR* aValues_002_054_005_003_003[] = {
      I_("Taxable"),
      I_("REER"),
      I_("FERR"),
      I_("REER externe"),
      I_("REER autogéré"),
      I_("FERR externe"),
      I_("FERR autogéré"),
      I_("RPDB"),
      I_("RRPD"),
      I_("REEE"),
      I_("REEL du Québec"),
      I_("FRV"),
      I_("CRI"),
      I_("REEE externe autogéré"),
      I_("FRRI"),
      I_("REEE familial"),
      I_("REEE familial externe autogéré"),
      I_("Régime de retraite AS"),
      I_("Imposable"),
      I_("Non Taxable"),
      I_("FRV externe"),
      I_("CRI externe"),
      I_("FRRI externe"),
      I_("Régime d'échange"),
      I_("Plan d'investissement du RADE"),
      I_("Régime de participation du RADE"),
      I_("FRRP"),
      I_("FRRP externe"),
      I_("RPDB externe"),
      I_("RRPD externe"),
      I_("REER immobilisé"),
      I_("CELI"),
      I_("CELI externe"),
      I_("FRV restreint"),
      I_("FRV externe restreint"),
      I_("REIR"),
      I_("REIR externe"),
      I_("Compte ordinaire"),
      I_("Compte spécial"),
      I_("Court délai de rachat"),
      I_("REEI externe"),
      I_("RDRI externe"),
      I_("RRCD externe"),
      I_("CRI externe"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_005_003_003;
   const BFSubstitutionSet SubSet_002_054_005_003_003(
    &aKeys_002_054_005_003_003[0], &aValues_002_054_005_003_003[0] );
   // Substitution set TaxTypeSet.  Language: frCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_054_005_003_011[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      I_("U"),
      I_("V"),
      I_("Z"),
      I_("BR"),
      I_("GR"),
      I_("CR"),
      I_("HR"),
      I_("OA"),
      I_("SA"),
      I_("SR"),
      I_("RD"),
      I_("IP"),
      I_("DC"),
      I_("LR"),
      0x00
   };

   static const I_CHAR* aValues_002_054_005_003_011[] = {
      I_("Taxable"),
      I_("REER"),
      I_("FERR"),
      I_("REER externe"),
      I_("REER autogéré"),
      I_("FERR externe"),
      I_("FERR autogéré"),
      I_("RPDB"),
      I_("RRPD"),
      I_("REEE"),
      I_("REEL du Québec"),
      I_("FRV"),
      I_("CRI"),
      I_("REEE externe autogéré"),
      I_("FRRI"),
      I_("REEE familial"),
      I_("REEE familial externe autogéré"),
      I_("Régime de retraite AS"),
      I_("Imposable"),
      I_("Non Taxable"),
      I_("FRV externe"),
      I_("CRI externe"),
      I_("FRRI externe"),
      I_("Régime d'échange"),
      I_("Plan d'investissement du RADE"),
      I_("Régime de participation du RADE"),
      I_("FRRP"),
      I_("FRRP externe"),
      I_("RPDB externe"),
      I_("RRPD externe"),
      I_("REER immobilisé"),
      I_("CELI"),
      I_("CELI externe"),
      I_("FRV restreint"),
      I_("FRV externe restreint"),
      I_("REIR"),
      I_("REIR externe"),
      I_("Compte ordinaire"),
      I_("Compte spécial"),
      I_("Court délai de rachat"),
      I_("REEI externe"),
      I_("RDRI externe"),
      I_("RRCD externe"),
      I_("CRI externe"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_005_003_011;
   const BFSubstitutionSet SubSet_002_054_005_003_011(
    &aKeys_002_054_005_003_011[0], &aValues_002_054_005_003_011[0] );
   // Substitution set TaxTypeSet.  Language: frCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_054_005_003_014[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      I_("U"),
      I_("V"),
      I_("Z"),
      I_("BR"),
      I_("GR"),
      I_("CR"),
      I_("HR"),
      I_("OA"),
      I_("SA"),
      I_("SR"),
      I_("RD"),
      I_("IP"),
      I_("DC"),
      I_("LR"),
      0x00
   };

   static const I_CHAR* aValues_002_054_005_003_014[] = {
      I_("Taxable"),
      I_("REER"),
      I_("FERR"),
      I_("REER externe"),
      I_("REER autogéré"),
      I_("FERR externe"),
      I_("FERR autogéré"),
      I_("RPDB"),
      I_("RRPD"),
      I_("REEE"),
      I_("REEL du Québec"),
      I_("FRV"),
      I_("CRI"),
      I_("REEE externe autogéré"),
      I_("FRRI"),
      I_("REEE familial"),
      I_("REEE familial externe autogéré"),
      I_("Régime de retraite AS"),
      I_("Imposable"),
      I_("Non Taxable"),
      I_("FRV externe"),
      I_("CRI externe"),
      I_("FRRI externe"),
      I_("Régime d'échange"),
      I_("Plan d'investissement du RADE"),
      I_("Régime de participation du RADE"),
      I_("FRRP"),
      I_("FRRP externe"),
      I_("RPDB externe"),
      I_("RRPD externe"),
      I_("REER immobilisé"),
      I_("CELI"),
      I_("CELI externe"),
      I_("FRV restreint"),
      I_("FRV externe restreint"),
      I_("REIR"),
      I_("REIR externe"),
      I_("Compte ordinaire"),
      I_("Compte spécial"),
      I_("Court délai de rachat"),
      I_("REEI externe"),
      I_("RDRI externe"),
      I_("RRCD externe"),
      I_("CRI externe"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_005_003_014;
   const BFSubstitutionSet SubSet_002_054_005_003_014(
    &aKeys_002_054_005_003_014[0], &aValues_002_054_005_003_014[0] );
   // Substitution set TaxTypeSet.  Language: enIE
   static const I_CHAR* aKeys_002_054_006_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      0x00
   };

   static const I_CHAR* aValues_002_054_006_000_000[] = {
      I_("Non-Registered"),
      I_("RRSP"),
      I_("RRIF"),
      I_("External RRSP"),
      I_("Self Directed RRSP"),
      I_("External RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/External RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Taxable"),
      I_("Tax Exempt"),
      I_("External LIF"),
      I_("External LIRA"),
      I_("External LRIF"),
      I_("Switch Plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("External PRIF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_006_000_000;
   const BFSubstitutionSet SubSet_002_054_006_000_000(
    &aKeys_002_054_006_000_000[0], &aValues_002_054_006_000_000[0] );
   // Substitution set TaxTypeSet.  Language: deDE
   static const I_CHAR* aKeys_002_054_007_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      0x00
   };

   static const I_CHAR* aValues_002_054_007_000_000[] = {
      I_("Non-Registered"),
      I_("RRSP"),
      I_("RRIF"),
      I_("External RRSP"),
      I_("Self Directed RRSP"),
      I_("External RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/External RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Taxable"),
      I_("Tax Exempt"),
      I_("External LIF"),
      I_("External LIRA"),
      I_("External LRIF"),
      I_("Switch Plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("External PRIF"),
      I_("External DPSP"),
      I_("External DBPP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_007_000_000;
   const BFSubstitutionSet SubSet_002_054_007_000_000(
    &aKeys_002_054_007_000_000[0], &aValues_002_054_007_000_000[0] );
   // Substitution set TaxTypeSet.  Language: esEs
   static const I_CHAR* aKeys_002_054_008_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      0x00
   };

   static const I_CHAR* aValues_002_054_008_000_000[] = {
      I_("Non-Registered"),
      I_("RRSP"),
      I_("RRIF"),
      I_("External RRSP"),
      I_("Self Directed RRSP"),
      I_("External RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/External RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Taxable"),
      I_("Tax Exempt"),
      I_("External LIF"),
      I_("External LIRA"),
      I_("External LRIF"),
      I_("Switch Plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("External PRIF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_008_000_000;
   const BFSubstitutionSet SubSet_002_054_008_000_000(
    &aKeys_002_054_008_000_000[0], &aValues_002_054_008_000_000[0] );
   // Substitution set TaxTypeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_054_010_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      0x00
   };

   static const I_CHAR* aValues_002_054_010_000_000[] = {
      I_("Niet-geregistreerd"),
      I_("RRSP"),
      I_("RRIF"),
      I_("EXTERNE RRSP"),
      I_("Self Directed RRSP"),
      I_("EXTERNE RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/EXTERNE RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Belastbaar"),
      I_("Tax Exempt"),
      I_("EXTERNE LIF"),
      I_("EXTERNE LIRA"),
      I_("EXTERNE LRIF"),
      I_("WISSEL-plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("EXTERNE PRIF"),
      I_("External DPSP"),
      I_("External DBPP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_010_000_000;
   const BFSubstitutionSet SubSet_002_054_010_000_000(
    &aKeys_002_054_010_000_000[0], &aValues_002_054_010_000_000[0] );
   // Substitution set TaxTypeSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_054_010_003_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      0x00
   };

   static const I_CHAR* aValues_002_054_010_003_000[] = {
      I_("Niet-geregistreerd"),
      I_("RRSP"),
      I_("RRIF"),
      I_("EXTERNE RRSP"),
      I_("Self Directed RRSP"),
      I_("EXTERNE RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/EXTERNE RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Belastbaar"),
      I_("Tax Exempt"),
      I_("EXTERNE LIF"),
      I_("EXTERNE LIRA"),
      I_("EXTERNE LRIF"),
      I_("WISSEL-plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("EXTERNE PRIF"),
      I_("External DPSP"),
      I_("External DBPP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_010_003_000;
   const BFSubstitutionSet SubSet_002_054_010_003_000(
    &aKeys_002_054_010_003_000[0], &aValues_002_054_010_003_000[0] );
   // Substitution set TaxTypeSet.  Language: nlNL, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_054_010_003_003[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      0x00
   };

   static const I_CHAR* aValues_002_054_010_003_003[] = {
      I_("Belastbaar"),
      I_("RRSP"),
      I_("RRIF"),
      I_("EXTERNE RRSP"),
      I_("Self Directed RRSP"),
      I_("EXTERNE RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/EXTERNE RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Belastbaar"),
      I_("Niet-belastbaar"),
      I_("EXTERNE LIF"),
      I_("EXTERNE LIRA"),
      I_("EXTERNE LRIF"),
      I_("WISSEL-plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("EXTERNE PRIF"),
      I_("External DPSP"),
      I_("External DBPP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_010_003_003;
   const BFSubstitutionSet SubSet_002_054_010_003_003(
    &aKeys_002_054_010_003_003[0], &aValues_002_054_010_003_003[0] );
   // Substitution set TaxTypeSet.  Language: nlNL, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_054_010_003_011[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      0x00
   };

   static const I_CHAR* aValues_002_054_010_003_011[] = {
      I_("Belastbaar"),
      I_("RRSP"),
      I_("RRIF"),
      I_("EXTERNE RRSP"),
      I_("Self Directed RRSP"),
      I_("EXTERNE RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/EXTERNE RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Belastbaar"),
      I_("Niet-belastbaar"),
      I_("EXTERNE LIF"),
      I_("EXTERNE LIRA"),
      I_("EXTERNE LRIF"),
      I_("WISSEL-plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("EXTERNE PRIF"),
      I_("External DPSP"),
      I_("External DBPP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_010_003_011;
   const BFSubstitutionSet SubSet_002_054_010_003_011(
    &aKeys_002_054_010_003_011[0], &aValues_002_054_010_003_011[0] );
   // Substitution set TaxTypeSet.  Language: nlNL, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_054_010_003_014[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("A"),
      I_("B"),
      I_("C"),
      I_("F"),
      I_("L"),
      I_("M"),
      I_("N"),
      I_("P"),
      I_("T"),
      I_("X"),
      I_("G"),
      I_("H"),
      I_("I"),
      I_("W"),
      I_("D"),
      I_("E"),
      I_("R"),
      I_("K"),
      I_("Q"),
      I_("S"),
      0x00
   };

   static const I_CHAR* aValues_002_054_010_003_014[] = {
      I_("Belastbaar"),
      I_("RRSP"),
      I_("RRIF"),
      I_("EXTERNE RRSP"),
      I_("Self Directed RRSP"),
      I_("EXTERNE RRIF"),
      I_("Self Directed RRIF"),
      I_("DPSP Plan"),
      I_("DBPP Plan"),
      I_("RESP"),
      I_("Quebec RHOSP"),
      I_("LIF"),
      I_("LIRA"),
      I_("SD/EXTERNE RESP"),
      I_("LRIF"),
      I_("Family Plan RESP"),
      I_("SD/External Family Plan RESP"),
      I_("As Pension Plan"),
      I_("Belastbaar"),
      I_("Niet-belastbaar"),
      I_("EXTERNE LIF"),
      I_("EXTERNE LIRA"),
      I_("EXTERNE LRIF"),
      I_("WISSEL-plan"),
      I_("ESOP Investment Plan"),
      I_("ESOP Participation Plan"),
      I_("PRIF"),
      I_("EXTERNE PRIF"),
      I_("External DPSP"),
      I_("External DBPP"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_054_010_003_014;
   const BFSubstitutionSet SubSet_002_054_010_003_014(
    &aKeys_002_054_010_003_014[0], &aValues_002_054_010_003_014[0] );
   // Substitution set LV_EntityListHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_055_001_000_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("EntityType"),
      I_("SeqNumber"),
      I_("EntityId"),
      I_("SIN"),
      I_("EffectiveDate"),
      I_("Active"),
      0x00
   };

   static const I_CHAR* aValues_002_055_001_000_000[] = {
      I_("Last Name (L)"),
      I_("First Name"),
      I_("Entity Type"),
      I_("Sequence"),
      I_("Entity Id"),
      I_("SIN"),
      I_("Effective Date"),
      I_("Status"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_055_001_000_000;
   const BFSubstitutionSet SubSet_002_055_001_000_000(
    &aKeys_002_055_001_000_000[0], &aValues_002_055_001_000_000[0] );
   // Substitution set LV_EntityListHeadingSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_055_001_003_000[] = {
      I_("FirstName"),
      I_("LastName"),
      I_("SIN"),
      I_("EntityType"),
      I_("EffectiveDate"),
      I_("SeqNumber"),
      I_("EntityId"),
      I_("Active"),
      0x00
   };

   static const I_CHAR* aValues_002_055_001_003_000[] = {
      I_("First Name"),
      I_("Last Name (L)"),
      I_("SIN"),
      I_("Entity Type"),
      I_("Effective Date"),
      I_("Sequence"),
      I_("Entity Id"),
      I_("Status"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_055_001_003_000;
   const BFSubstitutionSet SubSet_002_055_001_003_000(
    &aKeys_002_055_001_003_000[0], &aValues_002_055_001_003_000[0] );
   // Substitution set LV_EntityListHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_055_003_000_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("EntityType"),
      I_("SeqNumber"),
      I_("EntityId"),
      I_("SIN"),
      I_("EffectiveDate"),
      I_("Active"),
      0x00
   };

   static const I_CHAR* aValues_002_055_003_000_000[] = {
      I_("Last Name (L)"),
      I_("First Name"),
      I_("Entity Type"),
      I_("Sequence"),
      I_("Entity Id"),
      I_("SIN"),
      I_("Effective Date"),
      I_("Status"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_055_003_000_000;
   const BFSubstitutionSet SubSet_002_055_003_000_000(
    &aKeys_002_055_003_000_000[0], &aValues_002_055_003_000_000[0] );
   // Substitution set LV_EntityListHeadingSet.  Language: frFR
   static const I_CHAR* aKeys_002_055_004_000_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("EntityType"),
      I_("SeqNumber"),
      I_("EntityId"),
      I_("SIN"),
      I_("EffectiveDate"),
      0x00
   };

   static const I_CHAR* aValues_002_055_004_000_000[] = {
      I_("Nom patronymique (L)"),
      I_("Prenom"),
      I_("Entity Type"),
      I_("Sequence"),
      I_("Identification d'entite"),
      I_("Numero de securite sociale"),
      I_("Date d'effet"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_055_004_000_000;
   const BFSubstitutionSet SubSet_002_055_004_000_000(
    &aKeys_002_055_004_000_000[0], &aValues_002_055_004_000_000[0] );
   // Substitution set LV_EntityListHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_055_005_000_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("EntityType"),
      I_("SeqNumber"),
      I_("EntityId"),
      I_("SIN"),
      I_("EffectiveDate"),
      I_("Active"),
      0x00
   };

   static const I_CHAR* aValues_002_055_005_000_000[] = {
      I_("Nom de famille"),
      I_("Prénom"),
      I_("Type d'entité"),
      I_("Séquence"),
      I_("Code d'entité"),
      I_("NAS"),
      I_("Date d'entrée en vigueur"),
      I_("Status"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_055_005_000_000;
   const BFSubstitutionSet SubSet_002_055_005_000_000(
    &aKeys_002_055_005_000_000[0], &aValues_002_055_005_000_000[0] );
   // Substitution set LV_EntityListHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_055_006_000_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("EntityType"),
      I_("SeqNumber"),
      I_("EntityId"),
      I_("SIN"),
      I_("EffectiveDate"),
      0x00
   };

   static const I_CHAR* aValues_002_055_006_000_000[] = {
      I_("Last Name (L)"),
      I_("First Name"),
      I_("Entity Type"),
      I_("Sequence"),
      I_("Entity Id"),
      I_("SIN"),
      I_("Effective Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_055_006_000_000;
   const BFSubstitutionSet SubSet_002_055_006_000_000(
    &aKeys_002_055_006_000_000[0], &aValues_002_055_006_000_000[0] );
   // Substitution set LV_EntityListHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_055_007_000_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("EntityType"),
      I_("SeqNumber"),
      I_("EntityId"),
      I_("SIN"),
      I_("EffectiveDate"),
      0x00
   };

   static const I_CHAR* aValues_002_055_007_000_000[] = {
      I_("Last Name (L)"),
      I_("First Name"),
      I_("Entity Type"),
      I_("Sequence"),
      I_("Entity Id"),
      I_("SIN"),
      I_("Effective Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_055_007_000_000;
   const BFSubstitutionSet SubSet_002_055_007_000_000(
    &aKeys_002_055_007_000_000[0], &aValues_002_055_007_000_000[0] );
   // Substitution set LV_EntityListHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_055_008_000_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("EntityType"),
      I_("SeqNumber"),
      I_("EntityId"),
      I_("SIN"),
      I_("EffectiveDate"),
      0x00
   };

   static const I_CHAR* aValues_002_055_008_000_000[] = {
      I_("Last Name (L)"),
      I_("First Name"),
      I_("Entity Type"),
      I_("Sequence"),
      I_("Entity Id"),
      I_("SIN"),
      I_("Effective Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_055_008_000_000;
   const BFSubstitutionSet SubSet_002_055_008_000_000(
    &aKeys_002_055_008_000_000[0], &aValues_002_055_008_000_000[0] );
   // Substitution set LV_EntityListHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_055_010_000_000[] = {
      I_("LastName"),
      I_("FirstName"),
      I_("EntityType"),
      I_("SeqNumber"),
      I_("EntityId"),
      I_("SIN"),
      I_("EffectiveDate"),
      0x00
   };

   static const I_CHAR* aValues_002_055_010_000_000[] = {
      I_("Last Name (L)"),
      I_("First Name"),
      I_("Entity Type"),
      I_("Sequence"),
      I_("Entity Id"),
      I_("SIN"),
      I_("Effective Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_055_010_000_000;
   const BFSubstitutionSet SubSet_002_055_010_000_000(
    &aKeys_002_055_010_000_000[0], &aValues_002_055_010_000_000[0] );
   // Substitution set LV_EntityListHeadingSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_055_010_003_000[] = {
      I_("FirstName"),
      I_("LastName"),
      I_("SIN"),
      I_("EntityType"),
      I_("EffectiveDate"),
      I_("SeqNumber"),
      I_("EntityId"),
      0x00
   };

   static const I_CHAR* aValues_002_055_010_003_000[] = {
      I_("First Name"),
      I_("Last Name (L)"),
      I_("SIN"),
      I_("Entity Type"),
      I_("Effective Date"),
      I_("Sequence"),
      I_("Entity Id"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_055_010_003_000;
   const BFSubstitutionSet SubSet_002_055_010_003_000(
    &aKeys_002_055_010_003_000[0], &aValues_002_055_010_003_000[0] );
   // Substitution set LV_SelectEntityListHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_057_001_000_000[] = {
      I_("Name"),
      I_("TelNbr"),
      I_("Address"),
      0x00
   };

   static const I_CHAR* aValues_002_057_001_000_000[] = {
      I_("Name"),
      I_("Telephone Number"),
      I_("Address"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_057_001_000_000;
   const BFSubstitutionSet SubSet_002_057_001_000_000(
    &aKeys_002_057_001_000_000[0], &aValues_002_057_001_000_000[0] );
   // Substitution set LV_SelectEntityListHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_057_003_000_000[] = {
      I_("Name"),
      I_("TelNbr"),
      I_("Address"),
      0x00
   };

   static const I_CHAR* aValues_002_057_003_000_000[] = {
      I_("Name"),
      I_("Telephone Number"),
      I_("Address"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_057_003_000_000;
   const BFSubstitutionSet SubSet_002_057_003_000_000(
    &aKeys_002_057_003_000_000[0], &aValues_002_057_003_000_000[0] );
   // Substitution set LV_SelectEntityListHeadingSet.  Language: frFR
   static const I_CHAR* aKeys_002_057_004_000_000[] = {
      I_("Name"),
      I_("TelNbr"),
      I_("Address"),
      0x00
   };

   static const I_CHAR* aValues_002_057_004_000_000[] = {
      I_("Nom"),
      I_("Numero de telephone"),
      I_("Adresse"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_057_004_000_000;
   const BFSubstitutionSet SubSet_002_057_004_000_000(
    &aKeys_002_057_004_000_000[0], &aValues_002_057_004_000_000[0] );
   // Substitution set LV_SelectEntityListHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_057_005_000_000[] = {
      I_("Name"),
      I_("TelNbr"),
      I_("Address"),
      0x00
   };

   static const I_CHAR* aValues_002_057_005_000_000[] = {
      I_("Nom"),
      I_("Numéro de téléphone"),
      I_("Adresse"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_057_005_000_000;
   const BFSubstitutionSet SubSet_002_057_005_000_000(
    &aKeys_002_057_005_000_000[0], &aValues_002_057_005_000_000[0] );
   // Substitution set LV_SelectEntityListHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_057_006_000_000[] = {
      I_("Name"),
      I_("TelNbr"),
      I_("Address"),
      0x00
   };

   static const I_CHAR* aValues_002_057_006_000_000[] = {
      I_("Name"),
      I_("Telephone Number"),
      I_("Address"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_057_006_000_000;
   const BFSubstitutionSet SubSet_002_057_006_000_000(
    &aKeys_002_057_006_000_000[0], &aValues_002_057_006_000_000[0] );
   // Substitution set LV_SelectEntityListHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_057_007_000_000[] = {
      I_("Name"),
      I_("TelNbr"),
      I_("Address"),
      0x00
   };

   static const I_CHAR* aValues_002_057_007_000_000[] = {
      I_("Name"),
      I_("Telephone Number"),
      I_("Address"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_057_007_000_000;
   const BFSubstitutionSet SubSet_002_057_007_000_000(
    &aKeys_002_057_007_000_000[0], &aValues_002_057_007_000_000[0] );
   // Substitution set LV_SelectEntityListHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_057_008_000_000[] = {
      I_("Name"),
      I_("TelNbr"),
      I_("Address"),
      0x00
   };

   static const I_CHAR* aValues_002_057_008_000_000[] = {
      I_("Name"),
      I_("Telephone Number"),
      I_("Address"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_057_008_000_000;
   const BFSubstitutionSet SubSet_002_057_008_000_000(
    &aKeys_002_057_008_000_000[0], &aValues_002_057_008_000_000[0] );
   // Substitution set LV_SelectEntityListHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_057_010_000_000[] = {
      I_("Name"),
      I_("TelNbr"),
      I_("Address"),
      0x00
   };

   static const I_CHAR* aValues_002_057_010_000_000[] = {
      I_("Name"),
      I_("Telephone Number"),
      I_("Address"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_057_010_000_000;
   const BFSubstitutionSet SubSet_002_057_010_000_000(
    &aKeys_002_057_010_000_000[0], &aValues_002_057_010_000_000[0] );
   // Substitution set LV_IDTypeListHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_058_001_000_000[] = {
      I_("IDType"),
      0x00
   };

   static const I_CHAR* aValues_002_058_001_000_000[] = {
      I_("ID Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_058_001_000_000;
   const BFSubstitutionSet SubSet_002_058_001_000_000(
    &aKeys_002_058_001_000_000[0], &aValues_002_058_001_000_000[0] );
   // Substitution set LV_IDTypeListHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_058_003_000_000[] = {
      I_("IDType"),
      0x00
   };

   static const I_CHAR* aValues_002_058_003_000_000[] = {
      I_("ID Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_058_003_000_000;
   const BFSubstitutionSet SubSet_002_058_003_000_000(
    &aKeys_002_058_003_000_000[0], &aValues_002_058_003_000_000[0] );
   // Substitution set LV_IDTypeListHeadingSet.  Language: frFR
   static const I_CHAR* aKeys_002_058_004_000_000[] = {
      I_("IDType"),
      0x00
   };

   static const I_CHAR* aValues_002_058_004_000_000[] = {
      I_("Type d'identification"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_058_004_000_000;
   const BFSubstitutionSet SubSet_002_058_004_000_000(
    &aKeys_002_058_004_000_000[0], &aValues_002_058_004_000_000[0] );
   // Substitution set LV_IDTypeListHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_058_005_000_000[] = {
      I_("IDType"),
      0x00
   };

   static const I_CHAR* aValues_002_058_005_000_000[] = {
      I_("Type de code"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_058_005_000_000;
   const BFSubstitutionSet SubSet_002_058_005_000_000(
    &aKeys_002_058_005_000_000[0], &aValues_002_058_005_000_000[0] );
   // Substitution set LV_IDTypeListHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_058_006_000_000[] = {
      I_("IDType"),
      0x00
   };

   static const I_CHAR* aValues_002_058_006_000_000[] = {
      I_("ID Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_058_006_000_000;
   const BFSubstitutionSet SubSet_002_058_006_000_000(
    &aKeys_002_058_006_000_000[0], &aValues_002_058_006_000_000[0] );
   // Substitution set LV_IDTypeListHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_058_007_000_000[] = {
      I_("IDType"),
      0x00
   };

   static const I_CHAR* aValues_002_058_007_000_000[] = {
      I_("ID Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_058_007_000_000;
   const BFSubstitutionSet SubSet_002_058_007_000_000(
    &aKeys_002_058_007_000_000[0], &aValues_002_058_007_000_000[0] );
   // Substitution set LV_IDTypeListHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_058_008_000_000[] = {
      I_("IDType"),
      0x00
   };

   static const I_CHAR* aValues_002_058_008_000_000[] = {
      I_("ID Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_058_008_000_000;
   const BFSubstitutionSet SubSet_002_058_008_000_000(
    &aKeys_002_058_008_000_000[0], &aValues_002_058_008_000_000[0] );
   // Substitution set LV_IDTypeListHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_058_010_000_000[] = {
      I_("IDType"),
      0x00
   };

   static const I_CHAR* aValues_002_058_010_000_000[] = {
      I_("ID Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_058_010_000_000;
   const BFSubstitutionSet SubSet_002_058_010_000_000(
    &aKeys_002_058_010_000_000[0], &aValues_002_058_010_000_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_059_001_000_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("RegistrationInfo"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_001_000_000[] = {
      I_("Account Nbr"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Registration Info"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_001_000_000;
   const BFSubstitutionSet SubSet_002_059_001_000_000(
    &aKeys_002_059_001_000_000[0], &aValues_002_059_001_000_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: enUS, Market: 2
   static const I_CHAR* aKeys_002_059_001_002_000[] = {
      I_("AccountNum"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_001_002_000[] = {
      I_("Account Nbr"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      /* *** WARNING 101-1 *** LV_AcctListHeadingSet [59] is missing frCA value for key AcctStatus.  enUS value is "Status".  Client: Default [0], Market: Japan [2]". */

      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_001_002_000;
   const BFSubstitutionSet SubSet_002_059_001_002_000(
    &aKeys_002_059_001_002_000[0], &aValues_002_059_001_002_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_059_001_003_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_001_003_000[] = {
      I_("Account Nbr"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_001_003_000;
   const BFSubstitutionSet SubSet_002_059_001_003_000(
    &aKeys_002_059_001_003_000[0], &aValues_002_059_001_003_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_059_003_000_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_003_000_000[] = {
      I_("Account Nbr"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_003_000_000;
   const BFSubstitutionSet SubSet_002_059_003_000_000(
    &aKeys_002_059_003_000_000[0], &aValues_002_059_003_000_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: enCA, Market: 2
   static const I_CHAR* aKeys_002_059_003_002_000[] = {
      I_("AccountNum"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_003_002_000[] = {
      I_("Account Nbr"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_003_002_000;
   const BFSubstitutionSet SubSet_002_059_003_002_000(
    &aKeys_002_059_003_002_000[0], &aValues_002_059_003_002_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_059_003_003_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_003_003_000[] = {
      I_("Account Nbr"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_003_003_000;
   const BFSubstitutionSet SubSet_002_059_003_003_000(
    &aKeys_002_059_003_003_000[0], &aValues_002_059_003_003_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: frFR
   static const I_CHAR* aKeys_002_059_004_000_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_004_000_000[] = {
      I_("Numero de compte"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Type de compte"),
      I_("Statut"),
      I_("Valeur commerciale compte"),
      I_("Devise"),
      I_("Numero d'actionnaire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_004_000_000;
   const BFSubstitutionSet SubSet_002_059_004_000_000(
    &aKeys_002_059_004_000_000[0], &aValues_002_059_004_000_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: frFR, Market: 2
   static const I_CHAR* aKeys_002_059_004_002_000[] = {
      I_("AccountNum"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_004_002_000[] = {
      I_("Numero de compte"),
      I_("Tax Type"),
      I_("Type de compte"),
      I_("Statut"),
      I_("Valeur commerciale compte"),
      I_("Devise"),
      I_("Numero d'actionnaire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_004_002_000;
   const BFSubstitutionSet SubSet_002_059_004_002_000(
    &aKeys_002_059_004_002_000[0], &aValues_002_059_004_002_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_059_004_003_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_004_003_000[] = {
      I_("Numero de compte"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Type de compte"),
      I_("Statut"),
      I_("Valeur commerciale compte"),
      I_("Devise"),
      I_("Numero d'actionnaire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_004_003_000;
   const BFSubstitutionSet SubSet_002_059_004_003_000(
    &aKeys_002_059_004_003_000[0], &aValues_002_059_004_003_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_059_005_000_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("RegistrationInfo"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_005_000_000[] = {
      I_("No de compte"),
      I_("Désignation"),
      I_("Type d'enregistrement"),
      I_("Type de compte"),
      I_("Information d'enregistrement"),
      I_("Statut"),
      I_("Valeur marchande du compte"),
      I_("Devise"),
      I_("No de détenteur"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_005_000_000;
   const BFSubstitutionSet SubSet_002_059_005_000_000(
    &aKeys_002_059_005_000_000[0], &aValues_002_059_005_000_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: frCA, Market: 2
   static const I_CHAR* aKeys_002_059_005_002_000[] = {
      I_("AccountNum"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_005_002_000[] = {
      I_("No de compte"),
      I_("Type d'enregistrement"),
      I_("Type de compte"),
      I_("Statut"),
      I_("Valeur marchande du compte"),
      I_("Devise"),
      I_("No de détenteur"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_005_002_000;
   const BFSubstitutionSet SubSet_002_059_005_002_000(
    &aKeys_002_059_005_002_000[0], &aValues_002_059_005_002_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_059_005_003_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_005_003_000[] = {
      I_("No de compte"),
      I_("Désignation"),
      I_("Type d'enregistrement"),
      I_("Type de compte"),
      I_("Statut"),
      I_("Valeur marchande du compte"),
      I_("Devise"),
      I_("No de détenteur"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_005_003_000;
   const BFSubstitutionSet SubSet_002_059_005_003_000(
    &aKeys_002_059_005_003_000[0], &aValues_002_059_005_003_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_059_006_000_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_006_000_000[] = {
      I_("Account Nbr"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_006_000_000;
   const BFSubstitutionSet SubSet_002_059_006_000_000(
    &aKeys_002_059_006_000_000[0], &aValues_002_059_006_000_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: enIE, Market: 2
   static const I_CHAR* aKeys_002_059_006_002_000[] = {
      I_("AccountNum"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_006_002_000[] = {
      I_("Account Nbr"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_006_002_000;
   const BFSubstitutionSet SubSet_002_059_006_002_000(
    &aKeys_002_059_006_002_000[0], &aValues_002_059_006_002_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_059_006_003_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_006_003_000[] = {
      I_("Account Nbr"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_006_003_000;
   const BFSubstitutionSet SubSet_002_059_006_003_000(
    &aKeys_002_059_006_003_000[0], &aValues_002_059_006_003_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_059_007_000_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("RegistrationInfo"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_007_000_000[] = {
      I_("Account Nbr"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Registration Info"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_007_000_000;
   const BFSubstitutionSet SubSet_002_059_007_000_000(
    &aKeys_002_059_007_000_000[0], &aValues_002_059_007_000_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: deDE, Market: 2
   static const I_CHAR* aKeys_002_059_007_002_000[] = {
      I_("AccountNum"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_007_002_000[] = {
      I_("Account Nbr"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_007_002_000;
   const BFSubstitutionSet SubSet_002_059_007_002_000(
    &aKeys_002_059_007_002_000[0], &aValues_002_059_007_002_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_059_007_003_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_007_003_000[] = {
      I_("Account Nbr"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_007_003_000;
   const BFSubstitutionSet SubSet_002_059_007_003_000(
    &aKeys_002_059_007_003_000[0], &aValues_002_059_007_003_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_059_008_000_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_008_000_000[] = {
      I_("Account Nbr"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_008_000_000;
   const BFSubstitutionSet SubSet_002_059_008_000_000(
    &aKeys_002_059_008_000_000[0], &aValues_002_059_008_000_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: esEs, Market: 2
   static const I_CHAR* aKeys_002_059_008_002_000[] = {
      I_("AccountNum"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_008_002_000[] = {
      I_("Account Nbr"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_008_002_000;
   const BFSubstitutionSet SubSet_002_059_008_002_000(
    &aKeys_002_059_008_002_000[0], &aValues_002_059_008_002_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_059_008_003_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_008_003_000[] = {
      I_("Account Nbr"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_008_003_000;
   const BFSubstitutionSet SubSet_002_059_008_003_000(
    &aKeys_002_059_008_003_000[0], &aValues_002_059_008_003_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: enGB, Market: 2
   static const I_CHAR* aKeys_002_059_009_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_059_009_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_009_002_000;
   const BFSubstitutionSet SubSet_002_059_009_002_000(
    &aKeys_002_059_009_002_000[0], &aValues_002_059_009_002_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_059_009_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_059_009_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_009_003_000;
   const BFSubstitutionSet SubSet_002_059_009_003_000(
    &aKeys_002_059_009_003_000[0], &aValues_002_059_009_003_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_059_010_000_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("RegistrationInfo"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_010_000_000[] = {
      I_("Account Nbr"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Registration Info"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_010_000_000;
   const BFSubstitutionSet SubSet_002_059_010_000_000(
    &aKeys_002_059_010_000_000[0], &aValues_002_059_010_000_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: nlNL, Market: 2
   static const I_CHAR* aKeys_002_059_010_002_000[] = {
      I_("AccountNum"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_010_002_000[] = {
      I_("Account Nbr"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_010_002_000;
   const BFSubstitutionSet SubSet_002_059_010_002_000(
    &aKeys_002_059_010_002_000[0], &aValues_002_059_010_002_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_059_010_003_000[] = {
      I_("AccountNum"),
      I_("AcctDesignation"),
      I_("TaxType"),
      I_("AcctType"),
      I_("AcctStatus"),
      I_("AccountBalance"),
      I_("Currency"),
      I_("ShrNum"),
      0x00
   };

   static const I_CHAR* aValues_002_059_010_003_000[] = {
      I_("Account Nbr"),
      I_("Designation"),
      I_("Tax Type"),
      I_("Account Type"),
      I_("Status"),
      I_("Acct Mkt Value"),
      I_("Currency"),
      I_("Shareholder Nbr"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_010_003_000;
   const BFSubstitutionSet SubSet_002_059_010_003_000(
    &aKeys_002_059_010_003_000[0], &aValues_002_059_010_003_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: itIT, Market: 2
   static const I_CHAR* aKeys_002_059_011_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_059_011_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_011_002_000;
   const BFSubstitutionSet SubSet_002_059_011_002_000(
    &aKeys_002_059_011_002_000[0], &aValues_002_059_011_002_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_059_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_059_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_011_003_000;
   const BFSubstitutionSet SubSet_002_059_011_003_000(
    &aKeys_002_059_011_003_000[0], &aValues_002_059_011_003_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: thTH, Market: 2
   static const I_CHAR* aKeys_002_059_012_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_059_012_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_012_002_000;
   const BFSubstitutionSet SubSet_002_059_012_002_000(
    &aKeys_002_059_012_002_000[0], &aValues_002_059_012_002_000[0] );
   // Substitution set LV_AcctListHeadingSet.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_059_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_059_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_059_012_003_000;
   const BFSubstitutionSet SubSet_002_059_012_003_000(
    &aKeys_002_059_012_003_000[0], &aValues_002_059_012_003_000[0] );
}
