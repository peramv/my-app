// BFDataImpl header file for DataSet DSTC0433.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId RecType;
   extern const BFTextFieldId AcctCommitDetlUUID;
   extern const BFDateFieldId DetlDeff;
   extern const BFDecimalFieldId DetlAmt;
   extern const BFDateFieldId DetlStopDate;
   extern const BFDecimalFieldId DetlCommClawBack;
   extern const BFTextFieldId AcctCommitActivityUUID;
   extern const BFDecimalFieldId ActivityAmt;
   extern const BFDateFieldId ActivityDeff;
   extern const BFDecimalFieldId ActivityCommClawBack;
   extern const BFDecimalFieldId ExpectedAmt;
   extern const BFDecimalFieldId BonusPercentage;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_RecType;
   extern const BFDataFieldProperties s_FldProp_AcctCommitDetlUUID;
   extern const BFDataFieldProperties s_FldProp_DetlDeff;
   extern const BFDataFieldProperties s_FldProp_DetlAmt;
   extern const BFDataFieldProperties s_FldProp_DetlStopDate;
   extern const BFDataFieldProperties s_FldProp_DetlCommClawBack;
   extern const BFDataFieldProperties s_FldProp_AcctCommitActivityUUID;
   extern const BFDataFieldProperties s_FldProp_ActivityAmt;
   extern const BFDataFieldProperties s_FldProp_ActivityDeff;
   extern const BFDataFieldProperties s_FldProp_ActivityCommClawBack;
   extern const BFDataFieldProperties s_FldProp_ExpectedAmt;
   extern const BFDataFieldProperties s_FldProp_BonusPercentage;
}


class dsi_DSTC0433_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0433_VWRepeat_Record();
   virtual ~dsi_DSTC0433_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[12];
   // Field Declarations
   BFTextField_60 RecType_;
   BFTextField_60 AcctCommitDetlUUID_;
   BFDateField DetlDeff_;
   BFDecimalField DetlAmt_;
   BFDateField DetlStopDate_;
   BFDecimalField DetlCommClawBack_;
   BFTextField_60 AcctCommitActivityUUID_;
   BFDecimalField ActivityAmt_;
   BFDateField ActivityDeff_;
   BFDecimalField ActivityCommClawBack_;
   BFDecimalField ExpectedAmt_;
   BFDecimalField BonusPercentage_;

};
