// Data Field Factory Function
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdatafield.hpp>
#include <bfdata/bfdataid.hpp>

namespace ifds
{
   extern const BFDateFieldId AcctModDate;
   extern const BFTextFieldId AcctModUser;
   extern const BFDateFieldId AcctProcessDate;
   extern const BFTextFieldId AcctRepBranch;
   extern const BFNumericFieldId AcctRepNo;
   extern const BFTextFieldId AcctUserName;
   extern const BFNumericFieldId AcctKYCVer;
   extern const BFTextFieldId KYCAccountLevel;
   extern const BFTextFieldId AltDelVehicle;
   extern const BFTextFieldId AcctPurpose;
   extern const BFTextFieldId AdditionalInfo;
   extern const BFTextFieldId BusinessNo;
   extern const BFDateFieldId RetMailDate;
   extern const BFTextFieldId RetMailFlag;
   extern const BFTextFieldId KYCRequired;
   extern const BFTextFieldId RemarkType;
   extern const BFTextFieldId AltAcctPrefix;
   extern const BFTextFieldId SrchBusinessNo;
   extern const BFTextFieldId AmountAmtType;
   extern const BFTextFieldId MemorablePlace;
   extern const BFTextFieldId MemorableWord;
   extern const BFDateFieldId MemorableDate;
   extern const BFTextFieldId ChargeWDFee;
   extern const BFTextFieldId BranchListHeadingPayments;
   extern const BFTextFieldId BrokerListHeadingPayments;
   extern const BFTextFieldId SlsrepListHeadingPayments;
   extern const BFTextFieldId AddressLine;
   extern const BFTextFieldId EnglishShortName;
   extern const BFTextFieldId EnglishLongName;
   extern const BFTextFieldId EnglishName;
   extern const BFTextFieldId FrenchShortName;
   extern const BFTextFieldId FrenchLongName;
   extern const BFTextFieldId FrenchName;
   extern const BFTextFieldId ForeignRelFund;
   extern const BFTextFieldId ForeignRelClass;
   extern const BFTextFieldId RoundingFund;
   extern const BFTextFieldId RoundingClass;
   extern const BFDateFieldId GrandFatheredDate;
   extern const BFDateFieldId NextRebDate;
   extern const BFDateFieldId LastRebDate;
   extern const BFDecimalFieldId ThresholdAmt;
   extern const BFTextFieldId WireEleg;
   extern const BFNumericFieldId AMSRecId;
   extern const BFTextFieldId VerifyPrecreate;
   extern const BFDateFieldId LastEffectiveDate;
   extern const BFTextFieldId AMSRecordOverlapCheck;
   extern const BFTextFieldId ForeignRelFundClass;
   extern const BFTextFieldId RoundingFundClass;
   extern const BFTextFieldId ForeignRelFundNum;
   extern const BFTextFieldId RoundingFundNum;
   extern const BFTextFieldId AMSDupCheck;
   extern const BFTextFieldId AcctLevelTax;
   extern const BFTextFieldId AllowRetMailAutomation;
   extern const BFIntegerFieldId MirTransNum;
   extern const BFTextFieldId GrandFatherStamped;
   extern const BFDataId DSTC0261_REQ;
   extern const BFDataId DSTC0261_VW;
   extern const BFDecimalFieldId OverrideDecimal;
   extern const BFTextFieldId OverrideLogical;
   extern const BFTextFieldId OverrideFundLevel;
   extern const BFTextFieldId OnLineEWI;
   extern const BFTextFieldId CycleEWI;
   extern const BFTextFieldId ESGEWI;
   extern const BFNumericFieldId AMSRuleId;
   extern const BFTextFieldId AmsLmtOverrideHeading;
   extern const BFDataId DSTC0263_REQ;
   extern const BFDataId DSTC0263_VW;
   extern const BFTextFieldId DefaultRoundClass;
   extern const BFTextFieldId DefaultRoundFund;
   extern const BFTextFieldId DefaultRebFreq;
   extern const BFTextFieldId UpdAMSOnNewAcct;
   extern const BFTextFieldId DefaultAllocOverride;
   extern const BFTextFieldId PACSWPOverride;
   extern const BFDataId DSTC0260_REQ;
   extern const BFDataId DSTC0260_VW;
   extern const BFIntegerFieldId WDFeeDefn;
   extern const BFTextFieldId PensionLegCode;
   extern const BFTextFieldId NoWithTax;
   extern const BFTextFieldId TaxOnRRIFRed;
   extern const BFTextFieldId WithTaxOverride;
   extern const BFTextFieldId AutomaticAll;
   extern const BFTextFieldId RIFTTaxableRedCode;
   extern const BFDataId DSTC0262_REQ;
   extern const BFDataId DSTC0262_VW;
   extern const BFDataId DSTC0262_VWRepeat_Record;
   extern const BFDataId DSTC0261_REQRepeat_Record;
   extern const BFTextFieldId NextRebDateApplicable;
   extern const BFTextFieldId BankInstrComboFundClass;
   extern const BFTextFieldId OtherOccupation;
   extern const BFTextFieldId DailyMM;
   extern const BFTextFieldId PayInstructUsed;
   extern const BFTextFieldId SearchFirstName;
   extern const BFTextFieldId SearchLastName;
   extern const BFTextFieldId SearchPSTL;
   extern const BFTextFieldId SearchCountry;
   extern const BFTextFieldId SearchCity;
   extern const BFTextFieldId SearchAddrLine1;
   extern const BFTextFieldId TaxOnFullRed;
   extern const BFTextFieldId Taxable;
   extern const BFTextFieldId FedTaxRatePUD;
   extern const BFTextFieldId ProvTaxRatePUD;
   extern const BFNumericFieldId PayInstructRID;
   extern const BFNumericFieldId PayEntityRID;
   extern const BFTextFieldId InvestProd;
   extern const BFTextFieldId Confidential;
   extern const BFTextFieldId SetFromAsDefault;
   extern const BFTextFieldId AMSTaxType;
   extern const BFTextFieldId AMSAcctType;
   extern const BFTextFieldId AMSAcctDesignation;
   extern const BFTextFieldId AMSTaxJurisCode;
   extern const BFTextFieldId AMSResProvCode;
   extern const BFTextFieldId AmountTypeAlloc;
   extern const BFTextFieldId FromAllocListHeading;
   extern const BFTextFieldId ToAllocListHeading;
   extern const BFIntegerFieldId RepLevel;
   extern const BFTextFieldId HouseBroker;
   extern const BFTextFieldId BorrowedFunds;
   extern const BFTextFieldId TelFaxAgreement;
   extern const BFNumericFieldId SpouseEntityID;
   extern const BFTextFieldId Channel;
   extern const BFTextFieldId LevelGroup;
   extern const BFTextFieldId OwnerSpouseName;
   extern const BFDecimalFieldId PayEntityId;
   extern const BFTextFieldId AMSSearchType;
   extern const BFTextFieldId AllowFullTransfer;
   extern const BFTextFieldId FullTransfer;
   extern const BFTextFieldId AllowMultiFundTransfer;
   extern const BFDecimalFieldId EstimatedAllocAmount;
   extern const BFTextFieldId AgentStat;
   extern const BFTextFieldId FedProvTaxRatePUDXEdit;
   extern const BFTextFieldId FIFeaturesSearchCriteria;
   extern const BFTextFieldId FIFeaturesSearchInstitutionsUsing;
   extern const BFTextFieldId FIFeaturesSearchLabels;
   extern const BFTextFieldId FIFeaturesSearchCriteriaNo;
   extern const BFTextFieldId FinancialInstitutionsCategory;
   extern const BFTextFieldId FinancialInstitutionsCategoryForSearch;
   extern const BFTextFieldId FIFeaturesF4SearchInstitutionsUsing;
   extern const BFTextFieldId FIFeaturesF4SearchCriteria;
   extern const BFTextFieldId FIFeaturesF4SearchLabels;
   extern const BFTextFieldId FIFeaturesF4SearchCriteriaNo;
   extern const BFTextFieldId RBFrequency;
   extern const BFTextFieldId FinancialInstitutionsSearchHeading;
   extern const BFTextFieldId TransitsSearchHeading;
   extern const BFTextFieldId FinancialInstitutionsCodeLabel;
   extern const BFTextFieldId FinancialInstitutionsHeading;
   extern const BFTextFieldId TransitsHeading;
   extern const BFTextFieldId DTAType;
   extern const BFTextFieldId ExclDTAAccountType;
   extern const BFTextFieldId DTAEligible;
   extern const BFNumericFieldId DefaultBankInstCode;
   extern const BFNumericFieldId HoldingTransitNo;
   extern const BFTextFieldId DTA_BankHeader;
   extern const BFTextFieldId BankInstrComboDirectTrading;
   extern const BFTextFieldId DTATypeCommercial;
   extern const BFTextFieldId DTATypeNonCommercial;
   extern const BFDataId DSTC0265_REQ;
   extern const BFDataId DSTC0265_VW;
   extern const BFDataId DSTC0265_VWRepeat_Record;
   extern const BFDataId DSTC0266_REQ;
   extern const BFDataId DSTC0266_VW;
   extern const BFDataId DSTC0272_VWRepeat_Record;
   extern const BFDataId DSTC0272_VW;
   extern const BFDataId DSTC0272_REQ;
   extern const BFTextFieldId ExtTransferType;
   extern const BFTextFieldId FirstLetter;
   extern const BFIntegerFieldId FirstLetterDays;
   extern const BFTextFieldId SecondLetter;
   extern const BFIntegerFieldId SecondLetterDays;
   extern const BFTextFieldId ThirdLetter;
   extern const BFIntegerFieldId ThirdLetterDays;
   extern const BFTextFieldId SubsequentLetter;
   extern const BFIntegerFieldId SubsequentLetterFreq;
   extern const BFTextFieldId SalutationFormat;
   extern const BFTextFieldId ProcessDiv;
   extern const BFTextFieldId SalutationSetField;
   extern const BFTextFieldId NAME_LENGTH;
   extern const BFDataFieldProperties s_FldProp_AcctModDate;
   extern const BFDataFieldProperties s_FldProp_AcctModUser;
   extern const BFDataFieldProperties s_FldProp_AcctProcessDate;
   extern const BFDataFieldProperties s_FldProp_AcctRepBranch;
   extern const BFDataFieldProperties s_FldProp_AcctRepNo;
   extern const BFDataFieldProperties s_FldProp_AcctUserName;
   extern const BFDataFieldProperties s_FldProp_AcctKYCVer;
   extern const BFDataFieldProperties s_FldProp_KYCAccountLevel;
   extern const BFDataFieldProperties s_FldProp_AltDelVehicle;
   extern const BFDataFieldProperties s_FldProp_AcctPurpose;
   extern const BFDataFieldProperties s_FldProp_AdditionalInfo;
   extern const BFDataFieldProperties s_FldProp_BusinessNo;
   extern const BFDataFieldProperties s_FldProp_RetMailDate;
   extern const BFDataFieldProperties s_FldProp_RetMailFlag;
   extern const BFDataFieldProperties s_FldProp_KYCRequired;
   extern const BFDataFieldProperties s_FldProp_RemarkType;
   extern const BFDataFieldProperties s_FldProp_AltAcctPrefix;
   extern const BFDataFieldProperties s_FldProp_SrchBusinessNo;
   extern const BFDataFieldProperties s_FldProp_AmountAmtType;
   extern const BFDataFieldProperties s_FldProp_MemorablePlace;
   extern const BFDataFieldProperties s_FldProp_MemorableWord;
   extern const BFDataFieldProperties s_FldProp_MemorableDate;
   extern const BFDataFieldProperties s_FldProp_ChargeWDFee;
   extern const BFDataFieldProperties s_FldProp_BranchListHeadingPayments;
   extern const BFDataFieldProperties s_FldProp_BrokerListHeadingPayments;
   extern const BFDataFieldProperties s_FldProp_SlsrepListHeadingPayments;
   extern const BFDataFieldProperties s_FldProp_AddressLine;
   extern const BFDataFieldProperties s_FldProp_EnglishShortName;
   extern const BFDataFieldProperties s_FldProp_EnglishLongName;
   extern const BFDataFieldProperties s_FldProp_EnglishName;
   extern const BFDataFieldProperties s_FldProp_FrenchShortName;
   extern const BFDataFieldProperties s_FldProp_FrenchLongName;
   extern const BFDataFieldProperties s_FldProp_FrenchName;
   extern const BFDataFieldProperties s_FldProp_ForeignRelFund;
   extern const BFDataFieldProperties s_FldProp_ForeignRelClass;
   extern const BFDataFieldProperties s_FldProp_RoundingFund;
   extern const BFDataFieldProperties s_FldProp_RoundingClass;
   extern const BFDataFieldProperties s_FldProp_GrandFatheredDate;
   extern const BFDataFieldProperties s_FldProp_NextRebDate;
   extern const BFDataFieldProperties s_FldProp_LastRebDate;
   extern const BFDataFieldProperties s_FldProp_ThresholdAmt;
   extern const BFDataFieldProperties s_FldProp_WireEleg;
   extern const BFDataFieldProperties s_FldProp_AMSRecId;
   extern const BFDataFieldProperties s_FldProp_VerifyPrecreate;
   extern const BFDataFieldProperties s_FldProp_LastEffectiveDate;
   extern const BFDataFieldProperties s_FldProp_AMSRecordOverlapCheck;
   extern const BFDataFieldProperties s_FldProp_ForeignRelFundClass;
   extern const BFDataFieldProperties s_FldProp_RoundingFundClass;
   extern const BFDataFieldProperties s_FldProp_ForeignRelFundNum;
   extern const BFDataFieldProperties s_FldProp_RoundingFundNum;
   extern const BFDataFieldProperties s_FldProp_AMSDupCheck;
   extern const BFDataFieldProperties s_FldProp_AcctLevelTax;
   extern const BFDataFieldProperties s_FldProp_AllowRetMailAutomation;
   extern const BFDataFieldProperties s_FldProp_MirTransNum;
   extern const BFDataFieldProperties s_FldProp_GrandFatherStamped;
   extern const BFDataFieldProperties s_FldProp_DSTC0261_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0261_VW;
   extern const BFDataFieldProperties s_FldProp_OverrideDecimal;
   extern const BFDataFieldProperties s_FldProp_OverrideLogical;
   extern const BFDataFieldProperties s_FldProp_OverrideFundLevel;
   extern const BFDataFieldProperties s_FldProp_OnLineEWI;
   extern const BFDataFieldProperties s_FldProp_CycleEWI;
   extern const BFDataFieldProperties s_FldProp_ESGEWI;
   extern const BFDataFieldProperties s_FldProp_AMSRuleId;
   extern const BFDataFieldProperties s_FldProp_AmsLmtOverrideHeading;
   extern const BFDataFieldProperties s_FldProp_DSTC0263_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0263_VW;
   extern const BFDataFieldProperties s_FldProp_DefaultRoundClass;
   extern const BFDataFieldProperties s_FldProp_DefaultRoundFund;
   extern const BFDataFieldProperties s_FldProp_DefaultRebFreq;
   extern const BFDataFieldProperties s_FldProp_UpdAMSOnNewAcct;
   extern const BFDataFieldProperties s_FldProp_DefaultAllocOverride;
   extern const BFDataFieldProperties s_FldProp_PACSWPOverride;
   extern const BFDataFieldProperties s_FldProp_DSTC0260_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0260_VW;
   extern const BFDataFieldProperties s_FldProp_WDFeeDefn;
   extern const BFDataFieldProperties s_FldProp_PensionLegCode;
   extern const BFDataFieldProperties s_FldProp_NoWithTax;
   extern const BFDataFieldProperties s_FldProp_TaxOnRRIFRed;
   extern const BFDataFieldProperties s_FldProp_WithTaxOverride;
   extern const BFDataFieldProperties s_FldProp_AutomaticAll;
   extern const BFDataFieldProperties s_FldProp_RIFTTaxableRedCode;
   extern const BFDataFieldProperties s_FldProp_DSTC0262_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0262_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0262_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0261_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_NextRebDateApplicable;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboFundClass;
   extern const BFDataFieldProperties s_FldProp_OtherOccupation;
   extern const BFDataFieldProperties s_FldProp_DailyMM;
   extern const BFDataFieldProperties s_FldProp_PayInstructUsed;
   extern const BFDataFieldProperties s_FldProp_SearchFirstName;
   extern const BFDataFieldProperties s_FldProp_SearchLastName;
   extern const BFDataFieldProperties s_FldProp_SearchPSTL;
   extern const BFDataFieldProperties s_FldProp_SearchCountry;
   extern const BFDataFieldProperties s_FldProp_SearchCity;
   extern const BFDataFieldProperties s_FldProp_SearchAddrLine1;
   extern const BFDataFieldProperties s_FldProp_TaxOnFullRed;
   extern const BFDataFieldProperties s_FldProp_Taxable;
   extern const BFDataFieldProperties s_FldProp_FedTaxRatePUD;
   extern const BFDataFieldProperties s_FldProp_ProvTaxRatePUD;
   extern const BFDataFieldProperties s_FldProp_PayInstructRID;
   extern const BFDataFieldProperties s_FldProp_PayEntityRID;
   extern const BFDataFieldProperties s_FldProp_InvestProd;
   extern const BFDataFieldProperties s_FldProp_Confidential;
   extern const BFDataFieldProperties s_FldProp_SetFromAsDefault;
   extern const BFDataFieldProperties s_FldProp_AMSTaxType;
   extern const BFDataFieldProperties s_FldProp_AMSAcctType;
   extern const BFDataFieldProperties s_FldProp_AMSAcctDesignation;
   extern const BFDataFieldProperties s_FldProp_AMSTaxJurisCode;
   extern const BFDataFieldProperties s_FldProp_AMSResProvCode;
   extern const BFDataFieldProperties s_FldProp_AmountTypeAlloc;
   extern const BFDataFieldProperties s_FldProp_FromAllocListHeading;
   extern const BFDataFieldProperties s_FldProp_ToAllocListHeading;
   extern const BFDataFieldProperties s_FldProp_RepLevel;
   extern const BFDataFieldProperties s_FldProp_HouseBroker;
   extern const BFDataFieldProperties s_FldProp_BorrowedFunds;
   extern const BFDataFieldProperties s_FldProp_TelFaxAgreement;
   extern const BFDataFieldProperties s_FldProp_SpouseEntityID;
   extern const BFDataFieldProperties s_FldProp_Channel;
   extern const BFDataFieldProperties s_FldProp_LevelGroup;
   extern const BFDataFieldProperties s_FldProp_OwnerSpouseName;
   extern const BFDataFieldProperties s_FldProp_PayEntityId;
   extern const BFDataFieldProperties s_FldProp_AMSSearchType;
   extern const BFDataFieldProperties s_FldProp_AllowFullTransfer;
   extern const BFDataFieldProperties s_FldProp_FullTransfer;
   extern const BFDataFieldProperties s_FldProp_AllowMultiFundTransfer;
   extern const BFDataFieldProperties s_FldProp_EstimatedAllocAmount;
   extern const BFDataFieldProperties s_FldProp_AgentStat;
   extern const BFDataFieldProperties s_FldProp_FedProvTaxRatePUDXEdit;
   extern const BFDataFieldProperties s_FldProp_FIFeaturesSearchCriteria;
   extern const BFDataFieldProperties s_FldProp_FIFeaturesSearchInstitutionsUsing;
   extern const BFDataFieldProperties s_FldProp_FIFeaturesSearchLabels;
   extern const BFDataFieldProperties s_FldProp_FIFeaturesSearchCriteriaNo;
   extern const BFDataFieldProperties s_FldProp_FinancialInstitutionsCategory;
   extern const BFDataFieldProperties s_FldProp_FinancialInstitutionsCategoryForSearch;
   extern const BFDataFieldProperties s_FldProp_FIFeaturesF4SearchInstitutionsUsing;
   extern const BFDataFieldProperties s_FldProp_FIFeaturesF4SearchCriteria;
   extern const BFDataFieldProperties s_FldProp_FIFeaturesF4SearchLabels;
   extern const BFDataFieldProperties s_FldProp_FIFeaturesF4SearchCriteriaNo;
   extern const BFDataFieldProperties s_FldProp_RBFrequency;
   extern const BFDataFieldProperties s_FldProp_FinancialInstitutionsSearchHeading;
   extern const BFDataFieldProperties s_FldProp_TransitsSearchHeading;
   extern const BFDataFieldProperties s_FldProp_FinancialInstitutionsCodeLabel;
   extern const BFDataFieldProperties s_FldProp_FinancialInstitutionsHeading;
   extern const BFDataFieldProperties s_FldProp_TransitsHeading;
   extern const BFDataFieldProperties s_FldProp_DTAType;
   extern const BFDataFieldProperties s_FldProp_ExclDTAAccountType;
   extern const BFDataFieldProperties s_FldProp_DTAEligible;
   extern const BFDataFieldProperties s_FldProp_DefaultBankInstCode;
   extern const BFDataFieldProperties s_FldProp_HoldingTransitNo;
   extern const BFDataFieldProperties s_FldProp_DTA_BankHeader;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboDirectTrading;
   extern const BFDataFieldProperties s_FldProp_DTATypeCommercial;
   extern const BFDataFieldProperties s_FldProp_DTATypeNonCommercial;
   extern const BFDataFieldProperties s_FldProp_DSTC0265_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0265_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0265_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0266_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0266_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0272_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0272_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0272_REQ;
   extern const BFDataFieldProperties s_FldProp_ExtTransferType;
   extern const BFDataFieldProperties s_FldProp_FirstLetter;
   extern const BFDataFieldProperties s_FldProp_FirstLetterDays;
   extern const BFDataFieldProperties s_FldProp_SecondLetter;
   extern const BFDataFieldProperties s_FldProp_SecondLetterDays;
   extern const BFDataFieldProperties s_FldProp_ThirdLetter;
   extern const BFDataFieldProperties s_FldProp_ThirdLetterDays;
   extern const BFDataFieldProperties s_FldProp_SubsequentLetter;
   extern const BFDataFieldProperties s_FldProp_SubsequentLetterFreq;
   extern const BFDataFieldProperties s_FldProp_SalutationFormat;
   extern const BFDataFieldProperties s_FldProp_ProcessDiv;
   extern const BFDataFieldProperties s_FldProp_SalutationSetField;
   extern const BFDataFieldProperties s_FldProp_NAME_LENGTH;
   BFDataField* createField_20( const BFFieldId id )
   {
      BFDataField* pField = NULL;
      switch( id.getId() )
      {
         case 40004000: pField = new BFDateField( AcctModDate, &s_FldProp_AcctModDate ); break; 
         case 40004001: pField = new BFTextField_60( AcctModUser, &s_FldProp_AcctModUser ); break; 
         case 40004002: pField = new BFDateField( AcctProcessDate, &s_FldProp_AcctProcessDate ); break; 
         case 40004003: pField = new BFTextField_60( AcctRepBranch, &s_FldProp_AcctRepBranch ); break; 
         case 40004004: pField = new BFNumericField( AcctRepNo, &s_FldProp_AcctRepNo ); break; 
         case 40004005: pField = new BFTextField_60( AcctUserName, &s_FldProp_AcctUserName ); break; 
         case 40004006: pField = new BFNumericField( AcctKYCVer, &s_FldProp_AcctKYCVer ); break; 
         case 40004007: pField = new BFTextField_1( KYCAccountLevel, &s_FldProp_KYCAccountLevel ); break; 
         case 40004008: pField = new BFTextField_60( AltDelVehicle, &s_FldProp_AltDelVehicle ); break; 
         case 40004009: pField = new BFTextField_60( AcctPurpose, &s_FldProp_AcctPurpose ); break; 
         case 40004010: pField = new BFTextField_60( AdditionalInfo, &s_FldProp_AdditionalInfo ); break; 
         case 40004011: pField = new BFTextField_60( BusinessNo, &s_FldProp_BusinessNo ); break; 
         case 40004012: pField = new BFDateField( RetMailDate, &s_FldProp_RetMailDate ); break; 
         case 40004013: pField = new BFTextField_1( RetMailFlag, &s_FldProp_RetMailFlag ); break; 
         case 40004014: pField = new BFTextField_1( KYCRequired, &s_FldProp_KYCRequired ); break; 
         case 40004015: pField = new BFTextField_60( RemarkType, &s_FldProp_RemarkType ); break; 
         case 40004016: pField = new BFTextField_60( AltAcctPrefix, &s_FldProp_AltAcctPrefix ); break; 
         case 40004017: pField = new BFTextField_60( SrchBusinessNo, &s_FldProp_SrchBusinessNo ); break; 
         case 40004018: pField = new BFTextField_60( AmountAmtType, &s_FldProp_AmountAmtType ); break; 
         case 40004019: pField = new BFTextField_60( MemorablePlace, &s_FldProp_MemorablePlace ); break; 
         case 40004020: pField = new BFTextField_60( MemorableWord, &s_FldProp_MemorableWord ); break; 
         case 40004021: pField = new BFDateField( MemorableDate, &s_FldProp_MemorableDate ); break; 
         case 40004022: pField = new BFTextField_1( ChargeWDFee, &s_FldProp_ChargeWDFee ); break; 
         case 40004023: pField = new BFTextField_60( BranchListHeadingPayments, &s_FldProp_BranchListHeadingPayments ); break; 
         case 40004024: pField = new BFTextField_60( BrokerListHeadingPayments, &s_FldProp_BrokerListHeadingPayments ); break; 
         case 40004025: pField = new BFTextField_60( SlsrepListHeadingPayments, &s_FldProp_SlsrepListHeadingPayments ); break; 
         case 40004027: pField = new BFTextField_60( AddressLine, &s_FldProp_AddressLine ); break; 
         case 40004028: pField = new BFTextField_60( EnglishShortName, &s_FldProp_EnglishShortName ); break; 
         case 40004029: pField = new BFTextField_60( EnglishLongName, &s_FldProp_EnglishLongName ); break; 
         case 40004030: pField = new BFTextField_60( EnglishName, &s_FldProp_EnglishName ); break; 
         case 40004031: pField = new BFTextField_60( FrenchShortName, &s_FldProp_FrenchShortName ); break; 
         case 40004032: pField = new BFTextField_60( FrenchLongName, &s_FldProp_FrenchLongName ); break; 
         case 40004033: pField = new BFTextField_60( FrenchName, &s_FldProp_FrenchName ); break; 
         case 40004034: pField = new BFTextField_60( ForeignRelFund, &s_FldProp_ForeignRelFund ); break; 
         case 40004035: pField = new BFTextField_60( ForeignRelClass, &s_FldProp_ForeignRelClass ); break; 
         case 40004036: pField = new BFTextField_60( RoundingFund, &s_FldProp_RoundingFund ); break; 
         case 40004037: pField = new BFTextField_60( RoundingClass, &s_FldProp_RoundingClass ); break; 
         case 40004038: pField = new BFDateField( GrandFatheredDate, &s_FldProp_GrandFatheredDate ); break; 
         case 40004039: pField = new BFDateField( NextRebDate, &s_FldProp_NextRebDate ); break; 
         case 40004040: pField = new BFDateField( LastRebDate, &s_FldProp_LastRebDate ); break; 
         case 40004041: pField = new BFDecimalField( ThresholdAmt, &s_FldProp_ThresholdAmt ); break; 
         case 40004043: pField = new BFTextField_1( WireEleg, &s_FldProp_WireEleg ); break; 
         case 40004044: pField = new BFNumericField( AMSRecId, &s_FldProp_AMSRecId ); break; 
         case 40004046: pField = new BFTextField_1( VerifyPrecreate, &s_FldProp_VerifyPrecreate ); break; 
         case 40004047: pField = new BFDateField( LastEffectiveDate, &s_FldProp_LastEffectiveDate ); break; 
         case 40004048: pField = new BFTextField_60( AMSRecordOverlapCheck, &s_FldProp_AMSRecordOverlapCheck ); break; 
         case 40004049: pField = new BFTextField_60( ForeignRelFundClass, &s_FldProp_ForeignRelFundClass ); break; 
         case 40004050: pField = new BFTextField_60( RoundingFundClass, &s_FldProp_RoundingFundClass ); break; 
         case 40004051: pField = new BFTextField<5>( ForeignRelFundNum, &s_FldProp_ForeignRelFundNum ); break; 
         case 40004052: pField = new BFTextField<5>( RoundingFundNum, &s_FldProp_RoundingFundNum ); break; 
         case 40004054: pField = new BFTextField_1( AMSDupCheck, &s_FldProp_AMSDupCheck ); break; 
         case 40004056: pField = new BFTextField_1( AcctLevelTax, &s_FldProp_AcctLevelTax ); break; 
         case 40004060: pField = new BFTextField_1( AllowRetMailAutomation, &s_FldProp_AllowRetMailAutomation ); break; 
         case 40004061: pField = new BFIntegerField( MirTransNum, &s_FldProp_MirTransNum ); break; 
         case 40004064: pField = new BFTextField_1( GrandFatherStamped, &s_FldProp_GrandFatherStamped ); break; 
         case 40004072: pField = new BFDecimalField( OverrideDecimal, &s_FldProp_OverrideDecimal ); break; 
         case 40004074: pField = new BFTextField_1( OverrideLogical, &s_FldProp_OverrideLogical ); break; 
         case 40004075: pField = new BFTextField_1( OverrideFundLevel, &s_FldProp_OverrideFundLevel ); break; 
         case 40004076: pField = new BFTextField_1( OnLineEWI, &s_FldProp_OnLineEWI ); break; 
         case 40004077: pField = new BFTextField_1( CycleEWI, &s_FldProp_CycleEWI ); break; 
         case 40004079: pField = new BFTextField_1( ESGEWI, &s_FldProp_ESGEWI ); break; 
         case 40004080: pField = new BFNumericField( AMSRuleId, &s_FldProp_AMSRuleId ); break; 
         case 40004081: pField = new BFTextField_60( AmsLmtOverrideHeading, &s_FldProp_AmsLmtOverrideHeading ); break; 
         case 40004084: pField = new BFTextField_60( DefaultRoundClass, &s_FldProp_DefaultRoundClass ); break; 
         case 40004085: pField = new BFTextField_60( DefaultRoundFund, &s_FldProp_DefaultRoundFund ); break; 
         case 40004086: pField = new BFTextField_60( DefaultRebFreq, &s_FldProp_DefaultRebFreq ); break; 
         case 40004087: pField = new BFTextField_1( UpdAMSOnNewAcct, &s_FldProp_UpdAMSOnNewAcct ); break; 
         case 40004088: pField = new BFTextField_1( DefaultAllocOverride, &s_FldProp_DefaultAllocOverride ); break; 
         case 40004089: pField = new BFTextField_1( PACSWPOverride, &s_FldProp_PACSWPOverride ); break; 
         case 40004092: pField = new BFIntegerField( WDFeeDefn, &s_FldProp_WDFeeDefn ); break; 
         case 40004093: pField = new BFTextField_60( PensionLegCode, &s_FldProp_PensionLegCode ); break; 
         case 40004094: pField = new BFTextField_2( NoWithTax, &s_FldProp_NoWithTax ); break; 
         case 40004095: pField = new BFTextField_2( TaxOnRRIFRed, &s_FldProp_TaxOnRRIFRed ); break; 
         case 40004096: pField = new BFTextField_2( WithTaxOverride, &s_FldProp_WithTaxOverride ); break; 
         case 40004097: pField = new BFTextField_2( AutomaticAll, &s_FldProp_AutomaticAll ); break; 
         case 40004098: pField = new BFTextField_60( RIFTTaxableRedCode, &s_FldProp_RIFTTaxableRedCode ); break; 
         case 40004104: pField = new BFTextField_1( NextRebDateApplicable, &s_FldProp_NextRebDateApplicable ); break; 
         case 40004105: pField = new BFTextField_60( BankInstrComboFundClass, &s_FldProp_BankInstrComboFundClass ); break; 
         case 40004106: pField = new BFTextField<40>( OtherOccupation, &s_FldProp_OtherOccupation ); break; 
         case 40004107: pField = new BFTextField_1( DailyMM, &s_FldProp_DailyMM ); break; 
         case 40004108: pField = new BFTextField_1( PayInstructUsed, &s_FldProp_PayInstructUsed ); break; 
         case 40004109: pField = new BFTextField_60( SearchFirstName, &s_FldProp_SearchFirstName ); break; 
         case 40004110: pField = new BFTextField_60( SearchLastName, &s_FldProp_SearchLastName ); break; 
         case 40004111: pField = new BFTextField_60( SearchPSTL, &s_FldProp_SearchPSTL ); break; 
         case 40004112: pField = new BFTextField_60( SearchCountry, &s_FldProp_SearchCountry ); break; 
         case 40004113: pField = new BFTextField_60( SearchCity, &s_FldProp_SearchCity ); break; 
         case 40004114: pField = new BFTextField_60( SearchAddrLine1, &s_FldProp_SearchAddrLine1 ); break; 
         case 40004115: pField = new BFTextField_1( TaxOnFullRed, &s_FldProp_TaxOnFullRed ); break; 
         case 40004117: pField = new BFTextField_1( Taxable, &s_FldProp_Taxable ); break; 
         case 40004118: pField = new BFTextField_60( FedTaxRatePUD, &s_FldProp_FedTaxRatePUD ); break; 
         case 40004119: pField = new BFTextField_60( ProvTaxRatePUD, &s_FldProp_ProvTaxRatePUD ); break; 
         case 40004120: pField = new BFNumericField( PayInstructRID, &s_FldProp_PayInstructRID ); break; 
         case 40004121: pField = new BFNumericField( PayEntityRID, &s_FldProp_PayEntityRID ); break; 
         case 40004122: pField = new BFTextField_60( InvestProd, &s_FldProp_InvestProd ); break; 
         case 40004123: pField = new BFTextField_1( Confidential, &s_FldProp_Confidential ); break; 
         case 40004124: pField = new BFTextField_1( SetFromAsDefault, &s_FldProp_SetFromAsDefault ); break; 
         case 40004125: pField = new BFTextField_60( AMSTaxType, &s_FldProp_AMSTaxType ); break; 
         case 40004126: pField = new BFTextField_60( AMSAcctType, &s_FldProp_AMSAcctType ); break; 
         case 40004127: pField = new BFTextField_60( AMSAcctDesignation, &s_FldProp_AMSAcctDesignation ); break; 
         case 40004128: pField = new BFTextField_60( AMSTaxJurisCode, &s_FldProp_AMSTaxJurisCode ); break; 
         case 40004129: pField = new BFTextField_60( AMSResProvCode, &s_FldProp_AMSResProvCode ); break; 
         case 40004131: pField = new BFTextField_60( AmountTypeAlloc, &s_FldProp_AmountTypeAlloc ); break; 
         case 40004132: pField = new BFTextField_60( FromAllocListHeading, &s_FldProp_FromAllocListHeading ); break; 
         case 40004133: pField = new BFTextField_60( ToAllocListHeading, &s_FldProp_ToAllocListHeading ); break; 
         case 40004134: pField = new BFIntegerField( RepLevel, &s_FldProp_RepLevel ); break; 
         case 40004135: pField = new BFTextField_1( HouseBroker, &s_FldProp_HouseBroker ); break; 
         case 40004136: pField = new BFTextField_1( BorrowedFunds, &s_FldProp_BorrowedFunds ); break; 
         case 40004137: pField = new BFTextField_1( TelFaxAgreement, &s_FldProp_TelFaxAgreement ); break; 
         case 40004139: pField = new BFNumericField( SpouseEntityID, &s_FldProp_SpouseEntityID ); break; 
         case 40004140: pField = new BFTextField_60( Channel, &s_FldProp_Channel ); break; 
         case 40004141: pField = new BFTextField_60( LevelGroup, &s_FldProp_LevelGroup ); break; 
         case 40004142: pField = new BFTextField_60( OwnerSpouseName, &s_FldProp_OwnerSpouseName ); break; 
         case 40004143: pField = new BFDecimalField( PayEntityId, &s_FldProp_PayEntityId ); break; 
         case 40004144: pField = new BFTextField<20>( AMSSearchType, &s_FldProp_AMSSearchType ); break; 
         case 40004146: pField = new BFTextField_1( AllowFullTransfer, &s_FldProp_AllowFullTransfer ); break; 
         case 40004147: pField = new BFTextField_1( FullTransfer, &s_FldProp_FullTransfer ); break; 
         case 40004148: pField = new BFTextField_1( AllowMultiFundTransfer, &s_FldProp_AllowMultiFundTransfer ); break; 
         case 40004149: pField = new BFDecimalField( EstimatedAllocAmount, &s_FldProp_EstimatedAllocAmount ); break; 
         case 40004150: pField = new BFTextField_1( AgentStat, &s_FldProp_AgentStat ); break; 
         case 40004151: pField = new BFTextField_1( FedProvTaxRatePUDXEdit, &s_FldProp_FedProvTaxRatePUDXEdit ); break; 
         case 40004152: pField = new BFTextField_60( FIFeaturesSearchCriteria, &s_FldProp_FIFeaturesSearchCriteria ); break; 
         case 40004153: pField = new BFTextField_60( FIFeaturesSearchInstitutionsUsing, &s_FldProp_FIFeaturesSearchInstitutionsUsing ); break; 
         case 40004154: pField = new BFTextField_60( FIFeaturesSearchLabels, &s_FldProp_FIFeaturesSearchLabels ); break; 
         case 40004155: pField = new BFTextField_60( FIFeaturesSearchCriteriaNo, &s_FldProp_FIFeaturesSearchCriteriaNo ); break; 
         case 40004156: pField = new BFTextField_60( FinancialInstitutionsCategory, &s_FldProp_FinancialInstitutionsCategory ); break; 
         case 40004157: pField = new BFTextField_60( FinancialInstitutionsCategoryForSearch, &s_FldProp_FinancialInstitutionsCategoryForSearch ); break; 
         case 40004158: pField = new BFTextField_60( FIFeaturesF4SearchInstitutionsUsing, &s_FldProp_FIFeaturesF4SearchInstitutionsUsing ); break; 
         case 40004159: pField = new BFTextField_60( FIFeaturesF4SearchCriteria, &s_FldProp_FIFeaturesF4SearchCriteria ); break; 
         case 40004160: pField = new BFTextField_60( FIFeaturesF4SearchLabels, &s_FldProp_FIFeaturesF4SearchLabels ); break; 
         case 40004161: pField = new BFTextField_60( FIFeaturesF4SearchCriteriaNo, &s_FldProp_FIFeaturesF4SearchCriteriaNo ); break; 
         case 40004162: pField = new BFTextField_60( RBFrequency, &s_FldProp_RBFrequency ); break; 
         case 40004163: pField = new BFTextField_60( FinancialInstitutionsSearchHeading, &s_FldProp_FinancialInstitutionsSearchHeading ); break; 
         case 40004164: pField = new BFTextField_60( TransitsSearchHeading, &s_FldProp_TransitsSearchHeading ); break; 
         case 40004165: pField = new BFTextField_60( FinancialInstitutionsCodeLabel, &s_FldProp_FinancialInstitutionsCodeLabel ); break; 
         case 40004166: pField = new BFTextField_60( FinancialInstitutionsHeading, &s_FldProp_FinancialInstitutionsHeading ); break; 
         case 40004167: pField = new BFTextField_60( TransitsHeading, &s_FldProp_TransitsHeading ); break; 
         case 40004168: pField = new BFTextField_60( DTAType, &s_FldProp_DTAType ); break; 
         case 40004169: pField = new BFTextField_60( ExclDTAAccountType, &s_FldProp_ExclDTAAccountType ); break; 
         case 40004170: pField = new BFTextField_1( DTAEligible, &s_FldProp_DTAEligible ); break; 
         case 40004171: pField = new BFNumericField( DefaultBankInstCode, &s_FldProp_DefaultBankInstCode ); break; 
         case 40004172: pField = new BFNumericField( HoldingTransitNo, &s_FldProp_HoldingTransitNo ); break; 
         case 40004173: pField = new BFTextField_60( DTA_BankHeader, &s_FldProp_DTA_BankHeader ); break; 
         case 40004174: pField = new BFTextField_60( BankInstrComboDirectTrading, &s_FldProp_BankInstrComboDirectTrading ); break; 
         case 40004175: pField = new BFTextField_60( DTATypeCommercial, &s_FldProp_DTATypeCommercial ); break; 
         case 40004176: pField = new BFTextField_60( DTATypeNonCommercial, &s_FldProp_DTATypeNonCommercial ); break; 
         case 40004186: pField = new BFTextField_60( ExtTransferType, &s_FldProp_ExtTransferType ); break; 
         case 40004187: pField = new BFTextField_60( FirstLetter, &s_FldProp_FirstLetter ); break; 
         case 40004188: pField = new BFIntegerField( FirstLetterDays, &s_FldProp_FirstLetterDays ); break; 
         case 40004189: pField = new BFTextField_60( SecondLetter, &s_FldProp_SecondLetter ); break; 
         case 40004190: pField = new BFIntegerField( SecondLetterDays, &s_FldProp_SecondLetterDays ); break; 
         case 40004191: pField = new BFTextField_60( ThirdLetter, &s_FldProp_ThirdLetter ); break; 
         case 40004192: pField = new BFIntegerField( ThirdLetterDays, &s_FldProp_ThirdLetterDays ); break; 
         case 40004193: pField = new BFTextField_60( SubsequentLetter, &s_FldProp_SubsequentLetter ); break; 
         case 40004194: pField = new BFIntegerField( SubsequentLetterFreq, &s_FldProp_SubsequentLetterFreq ); break; 
         case 40004197: pField = new BFTextField_2( SalutationFormat, &s_FldProp_SalutationFormat ); break; 
         case 40004198: pField = new BFTextField<20>( ProcessDiv, &s_FldProp_ProcessDiv ); break; 
         case 40004199: pField = new BFTextField<25>( SalutationSetField, &s_FldProp_SalutationSetField ); break; 
      }
      return pField;
   }
}
