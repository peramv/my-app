// BFDataImpl header file for DataSet DSTC0112.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId TaxJurisCode;
   extern const BFTextFieldId TaxJurisName;
   extern const BFDateFieldId EffectiveDate;
   extern const BFDecimalFieldId FedIncRate;
   extern const BFDecimalFieldId FedRedRate;
   extern const BFDecimalFieldId ProvIncRate;
   extern const BFDecimalFieldId ProvRedRate;
   extern const BFDateFieldId ProcessDate;
   extern const BFDecimalFieldId LowerBound;
   extern const BFDecimalFieldId UpperBound;
   extern const BFDecimalFieldId PerPenRate;
   extern const BFDecimalFieldId LumpPenRate;
   extern const BFTextFieldId PAmtThreasholdCode;
   extern const BFTextFieldId PAmtThreasholdDesc;
   extern const BFTextFieldId Username;
   extern const BFDateFieldId ModDate;
   extern const BFTextFieldId ModName;
   extern const BFDecimalFieldId TaxRateRid;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_TaxJurisCode;
   extern const BFDataFieldProperties s_FldProp_TaxJurisName;
   extern const BFDataFieldProperties s_FldProp_EffectiveDate;
   extern const BFDataFieldProperties s_FldProp_FedIncRate;
   extern const BFDataFieldProperties s_FldProp_FedRedRate;
   extern const BFDataFieldProperties s_FldProp_ProvIncRate;
   extern const BFDataFieldProperties s_FldProp_ProvRedRate;
   extern const BFDataFieldProperties s_FldProp_ProcessDate;
   extern const BFDataFieldProperties s_FldProp_LowerBound;
   extern const BFDataFieldProperties s_FldProp_UpperBound;
   extern const BFDataFieldProperties s_FldProp_PerPenRate;
   extern const BFDataFieldProperties s_FldProp_LumpPenRate;
   extern const BFDataFieldProperties s_FldProp_PAmtThreasholdCode;
   extern const BFDataFieldProperties s_FldProp_PAmtThreasholdDesc;
   extern const BFDataFieldProperties s_FldProp_Username;
   extern const BFDataFieldProperties s_FldProp_ModDate;
   extern const BFDataFieldProperties s_FldProp_ModName;
   extern const BFDataFieldProperties s_FldProp_TaxRateRid;
}


class dsi_DSTC0112_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0112_VWRepeat_Record();
   virtual ~dsi_DSTC0112_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[18];
   // Field Declarations
   BFTextField<250> TaxJurisCode_;
   BFTextField_60 TaxJurisName_;
   BFDateField EffectiveDate_;
   BFDecimalField FedIncRate_;
   BFDecimalField FedRedRate_;
   BFDecimalField ProvIncRate_;
   BFDecimalField ProvRedRate_;
   BFDateField ProcessDate_;
   BFDecimalField LowerBound_;
   BFDecimalField UpperBound_;
   BFDecimalField PerPenRate_;
   BFDecimalField LumpPenRate_;
   BFTextField_60 PAmtThreasholdCode_;
   BFTextField_60 PAmtThreasholdDesc_;
   BFTextField_60 Username_;
   BFDateField ModDate_;
   BFTextField_60 ModName_;
   BFDecimalField TaxRateRid_;

};
