// BFSubstitutionSet objects
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Wednesday, September 19, 2018 09:16:49

#include "stdafx.h"
#include <commonport.h>
#include <clientlocale.hpp>

namespace ifds
{
   // Substitution set SearchTradeSet.  Language: enUS
   static const I_CHAR* aKeys_002_210_001_000_000[] = {
      I_("SC13U01"),
      I_("SC13U02"),
      I_("SC13U03"),
      0x00
   };

   static const I_CHAR* aValues_002_210_001_000_000[] = {
      I_("Account Number"),
      I_("Shareholder"),
      I_("Alt Account and Broker Code"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_210_001_000_000;
   const BFSubstitutionSet SubSet_002_210_001_000_000(
    &aKeys_002_210_001_000_000[0], &aValues_002_210_001_000_000[0] );
   // Substitution set SearchTradeSet.  Language: enCA
   static const I_CHAR* aKeys_002_210_003_000_000[] = {
      I_("SC13U01"),
      I_("SC13U02"),
      I_("SC13U03"),
      0x00
   };

   static const I_CHAR* aValues_002_210_003_000_000[] = {
      I_("Account Number"),
      I_("Shareholder"),
      I_("Alt Account and Broker Code"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_210_003_000_000;
   const BFSubstitutionSet SubSet_002_210_003_000_000(
    &aKeys_002_210_003_000_000[0], &aValues_002_210_003_000_000[0] );
   // Substitution set SearchTradeSet.  Language: frFR
   static const I_CHAR* aKeys_002_210_004_000_000[] = {
      I_("SC13U01"),
      I_("SC13U02"),
      I_("SC13U03"),
      0x00
   };

   static const I_CHAR* aValues_002_210_004_000_000[] = {
      I_("Account Number"),
      I_("Shareholder"),
      I_("Alt Account and Broker Code"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_210_004_000_000;
   const BFSubstitutionSet SubSet_002_210_004_000_000(
    &aKeys_002_210_004_000_000[0], &aValues_002_210_004_000_000[0] );
   // Substitution set SearchTradeSet.  Language: frCA
   static const I_CHAR* aKeys_002_210_005_000_000[] = {
      I_("SC13U01"),
      I_("SC13U02"),
      I_("SC13U03"),
      0x00
   };

   static const I_CHAR* aValues_002_210_005_000_000[] = {
      I_("Numéro de compte"),
      I_("Détenteur"),
      I_("Autres compte et code du courtier"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_210_005_000_000;
   const BFSubstitutionSet SubSet_002_210_005_000_000(
    &aKeys_002_210_005_000_000[0], &aValues_002_210_005_000_000[0] );
   // Substitution set SearchTradeSet.  Language: enIE
   static const I_CHAR* aKeys_002_210_006_000_000[] = {
      I_("SC13U01"),
      I_("SC13U02"),
      I_("SC13U03"),
      0x00
   };

   static const I_CHAR* aValues_002_210_006_000_000[] = {
      I_("Account Number"),
      I_("Shareholder"),
      I_("Alt Account and Broker Code"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_210_006_000_000;
   const BFSubstitutionSet SubSet_002_210_006_000_000(
    &aKeys_002_210_006_000_000[0], &aValues_002_210_006_000_000[0] );
   // Substitution set SearchTradeSet.  Language: deDE
   static const I_CHAR* aKeys_002_210_007_000_000[] = {
      I_("SC13U01"),
      I_("SC13U02"),
      I_("SC13U03"),
      0x00
   };

   static const I_CHAR* aValues_002_210_007_000_000[] = {
      I_("Account Number"),
      I_("Shareholder"),
      I_("Alt Account and Broker Code"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_210_007_000_000;
   const BFSubstitutionSet SubSet_002_210_007_000_000(
    &aKeys_002_210_007_000_000[0], &aValues_002_210_007_000_000[0] );
   // Substitution set SearchTradeSet.  Language: esEs
   static const I_CHAR* aKeys_002_210_008_000_000[] = {
      I_("SC13U01"),
      I_("SC13U02"),
      I_("SC13U03"),
      0x00
   };

   static const I_CHAR* aValues_002_210_008_000_000[] = {
      I_("Account Number"),
      I_("Shareholder"),
      I_("Alt Account and Broker Code"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_210_008_000_000;
   const BFSubstitutionSet SubSet_002_210_008_000_000(
    &aKeys_002_210_008_000_000[0], &aValues_002_210_008_000_000[0] );
   // Substitution set SearchTradeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_210_010_000_000[] = {
      I_("SC13U01"),
      I_("SC13U02"),
      I_("SC13U03"),
      0x00
   };

   static const I_CHAR* aValues_002_210_010_000_000[] = {
      I_("Account Number"),
      I_("Shareholder"),
      I_("Alt Account and Broker Code"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_210_010_000_000;
   const BFSubstitutionSet SubSet_002_210_010_000_000(
    &aKeys_002_210_010_000_000[0], &aValues_002_210_010_000_000[0] );
   // Substitution set BackDatedReasonSet.  Language: enUS
   static const I_CHAR* aKeys_002_211_001_000_000[] = {
      I_("22"),
      I_("59"),
      I_("38"),
      I_("57"),
      I_("43"),
      I_("28"),
      I_("54"),
      I_("19"),
      I_("55"),
      I_("58"),
      I_("56"),
      I_("51"),
      I_("05"),
      I_("66"),
      I_("98"),
      I_("25"),
      I_("30"),
      I_("31"),
      I_("24"),
      I_("33"),
      I_("21"),
      I_("48"),
      I_("14"),
      I_("34"),
      I_("36"),
      I_("23"),
      I_("06"),
      I_("13"),
      I_("29"),
      I_("27"),
      I_("99"),
      I_("40"),
      I_("41"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("49"),
      I_("26"),
      I_("97"),
      I_("11"),
      I_("95"),
      I_("35"),
      I_("20"),
      I_("10"),
      I_("50"),
      I_("15"),
      I_("42"),
      I_("01"),
      I_("03"),
      I_("53"),
      I_("09"),
      I_("46"),
      I_("45"),
      I_("52"),
      I_("04"),
      I_("02"),
      I_("12"),
      I_("32"),
      I_("07"),
      I_("47"),
      I_("44"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("79"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("96"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("MI"),
      I_("DL"),
      0x00
   };

   static const I_CHAR* aValues_002_211_001_000_000[] = {
      I_("10%/ACB Backdate"),
      I_("2 Day Transactions"),
      I_("Age 71"),
      I_("Authorization Required"),
      I_("Auto Force Settle"),
      I_("Backdated Commission Rebate"),
      I_("Backdated Pension/DPSP"),
      I_("Backdated Transfer"),
      I_("BackLog"),
      I_("BackLog - Same Fund"),
      I_("Bank Confirmation"),
      I_("Bonus Cancellation"),
      I_("Cancelled"),
      I_("Conversion Record"),
      I_("CSS Error Correction"),
      I_("Day 1/ Day 2 Exchanges (FE to DSC)"),
      I_("Dividend Adjustment"),
      I_("Duplicated Transaction"),
      I_("Estate"),
      I_("Estimated"),
      I_("FIFO Backdate"),
      I_("Forced Settlement"),
      I_("Foreign Content Rebalancing"),
      I_("Fund Request"),
      I_("FundSERV contract not set up"),
      I_("FundSERV Reject"),
      I_("Input Error"),
      I_("Internal Processing Error - Adjustment"),
      I_("LOI - Letter of Indemnity"),
      I_("Lost AWD Item"),
      I_("Miscellaneous"),
      I_("Missed PAC"),
      I_("Missed SWP"),
      I_("Missed Trade - CFDS Timestamp"),
      I_("Missed Trade - Client/Fund Timestamp"),
      I_("Missed Trade - fax confirm"),
      I_("Money Wired to Bank"),
      I_("NR Code Corrections"),
      I_("NSCC Firm Exit"),
      I_("Returned from Bank"),
      I_("RIF Data Cleanup"),
      I_("Right of Recision"),
      I_("RRIF Payment"),
      I_("Settlement Adjustment"),
      I_("Stopped Payment"),
      I_("System Problem"),
      I_("Wash/Offsetting Adjustment"),
      I_("Wrong Account"),
      I_("Wrong Amount"),
      I_("Wrong Class"),
      I_("Wrong Commission"),
      I_("Wrong Deposit Date - Contribution Receipt"),
      I_("Wrong Deposit Type"),
      I_("Wrong Deposit/Redemption Code"),
      I_("Wrong Fee"),
      I_("Wrong Fund"),
      I_("Wrong Price"),
      I_("Wrong Price (Fund Accounting)"),
      I_("Wrong Salesman"),
      I_("Wrong Tax Amount"),
      I_("Wrong Trade Date"),
      I_("Bookkeeping"),
      I_("CESG System Limitation"),
      I_("Dialogue Wealth Management"),
      I_("PAC Error"),
      I_("Redemption System Limitation"),
      I_("Switch System Limitation"),
      I_("SWP Error"),
      I_("System Rejects"),
      I_("TIP Error"),
      I_("BUY AOT"),
      I_("SELL AOT"),
      I_("WO BUY REVERSAL"),
      I_("WO SELL REVERSAL"),
      I_("CAX WO SELL"),
      I_("CAX WO BUY"),
      I_("AOT WO ST"),
      I_("AOT WO BT"),
      I_("REV WO ST"),
      I_("REV WO BT"),
      I_("CSS CAX (Contracted Unsettled)"),
      I_("FA Advised"),
      I_("Insufficient Funds"),
      I_("Right to Cancel"),
      I_("No Standing Instr"),
      I_("Incorrect/Incomplete Details"),
      I_("Terminated CPF Acc Nbr"),
      I_("CPF Invst AccName Not Matching"),
      I_("CPF Invt Acc & Agent Bank Mismatch"),
      I_("Change of Share Holder’s Detail Not Updated"),
      I_("Misunderstood Instructions"),
      I_("DAP/LDAP reversal"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_211_001_000_000;
   const BFSubstitutionSet SubSet_002_211_001_000_000(
    &aKeys_002_211_001_000_000[0], &aValues_002_211_001_000_000[0] );
   // Substitution set BackDatedReasonSet.  Language: enCA
   static const I_CHAR* aKeys_002_211_003_000_000[] = {
      I_("22"),
      I_("59"),
      I_("38"),
      I_("57"),
      I_("28"),
      I_("54"),
      I_("19"),
      I_("55"),
      I_("58"),
      I_("56"),
      I_("05"),
      I_("66"),
      I_("98"),
      I_("25"),
      I_("30"),
      I_("31"),
      I_("24"),
      I_("33"),
      I_("21"),
      I_("14"),
      I_("34"),
      I_("36"),
      I_("23"),
      I_("06"),
      I_("13"),
      I_("29"),
      I_("27"),
      I_("99"),
      I_("40"),
      I_("41"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("26"),
      I_("11"),
      I_("35"),
      I_("20"),
      I_("10"),
      I_("15"),
      I_("42"),
      I_("01"),
      I_("03"),
      I_("53"),
      I_("52"),
      I_("04"),
      I_("02"),
      I_("12"),
      I_("32"),
      0x00
   };

   static const I_CHAR* aValues_002_211_003_000_000[] = {
      I_("10%/ACB Backdate"),
      I_("2 Day Transactions"),
      I_("Age 69"),
      I_("Authorization Required"),
      I_("Backdated Commission Rebate"),
      I_("Backdated Pension/DPSP"),
      I_("Backdated Transfer"),
      I_("BackLog"),
      I_("BackLog - Same Fund"),
      I_("Bank Confirmation"),
      I_("Cancelled"),
      I_("Conversion Code"),
      I_("CSS Error Correction"),
      I_("Day 1/ Day 2 Exchanges (FE to DSC)"),
      I_("Dividend Adjustment"),
      I_("Duplicated Transaction"),
      I_("Estate"),
      I_("Estimated"),
      I_("FIFO Backdate"),
      I_("Foreign Content Rebalancing"),
      I_("Fund Request"),
      I_("FundSERV contract not set up"),
      I_("FundSERV Reject"),
      I_("Input Error"),
      I_("Internal Processing Error - Adjustment"),
      I_("LOI - Letter of Indemnity"),
      I_("Lost AWD Item"),
      I_("Miscellaneous"),
      I_("Missed PAC"),
      I_("Missed SWP"),
      I_("Missed Trade - CFDS Timestamp"),
      I_("Missed Trade - Client/Fund Timestamp"),
      I_("Missed Trade - fax confirm"),
      I_("NR Code Corrections"),
      I_("Returned from Bank"),
      I_("Right of Recision"),
      I_("RRIF Payment"),
      I_("Settlement Adjustment"),
      I_("System Problem"),
      I_("Wash/Offsetting Adjustment"),
      I_("Wrong Account"),
      I_("Wrong Amount"),
      I_("Wrong Class"),
      I_("Wrong Deposit/Redemption Code"),
      I_("Wrong Fee"),
      I_("Wrong Fund"),
      I_("Wrong Price"),
      I_("Wrong Price (Fund Accounting)"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_211_003_000_000;
   const BFSubstitutionSet SubSet_002_211_003_000_000(
    &aKeys_002_211_003_000_000[0], &aValues_002_211_003_000_000[0] );
   // Substitution set BackDatedReasonSet.  Language: frFR
   static const I_CHAR* aKeys_002_211_004_000_000[] = {
      I_("22"),
      I_("59"),
      I_("38"),
      I_("57"),
      I_("28"),
      I_("54"),
      I_("19"),
      I_("55"),
      I_("58"),
      I_("56"),
      I_("05"),
      I_("66"),
      I_("98"),
      I_("25"),
      I_("30"),
      I_("31"),
      I_("24"),
      I_("33"),
      I_("21"),
      I_("14"),
      I_("34"),
      I_("36"),
      I_("23"),
      I_("06"),
      I_("13"),
      I_("29"),
      I_("27"),
      I_("99"),
      I_("40"),
      I_("41"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("26"),
      I_("11"),
      I_("35"),
      I_("20"),
      I_("10"),
      I_("15"),
      I_("42"),
      I_("01"),
      I_("03"),
      I_("53"),
      I_("52"),
      I_("04"),
      I_("02"),
      I_("12"),
      I_("32"),
      0x00
   };

   static const I_CHAR* aValues_002_211_004_000_000[] = {
      I_("10%/ACB Backdate"),
      I_("2 Day Transactions"),
      I_("Age 69"),
      I_("Authorization Required"),
      I_("Backdated Commission Rebate"),
      I_("Backdated Pension/DPSP"),
      I_("Backdated Transfer"),
      I_("BackLog"),
      I_("BackLog - Same Fund"),
      I_("Bank Confirmation"),
      I_("Cancelled"),
      I_("Conversion Code"),
      I_("CSS Error Correction"),
      I_("Day 1/ Day 2 Exchanges (FE to DSC)"),
      I_("Dividend Adjustment"),
      I_("Duplicated Transaction"),
      I_("Estate"),
      I_("Estimated"),
      I_("FIFO Backdate"),
      I_("Foreign Content"),
      I_("Fund Request"),
      I_("FundSERV contract not set up"),
      I_("FundSERV Reject"),
      I_("Input Error"),
      I_("Internal Processing Error - Adjustment"),
      I_("LOI - Letter of Indemnity"),
      I_("Lost AWD Item"),
      I_("Miscellaneous"),
      I_("Missed PAC"),
      I_("Missed SWP"),
      I_("Mised Trade - CFDS Timestamp"),
      I_("Mised Trade - Client/Fund Timestamp"),
      I_("Mised Trade - fax confirm"),
      I_("NR Code Corrections"),
      I_("Returned from Bank"),
      I_("Right of Recision"),
      I_("RRIF Payment"),
      I_("Settlement Adjustment"),
      I_("Syste,m Problem"),
      I_("Wash/Offsetting Adjustment"),
      I_("Mauvais compte"),
      I_("Wrong Amount"),
      I_("Wrong Class"),
      I_("Wrong Deposit/Redemption Code"),
      I_("Wrong Fee"),
      I_("Wrong Found"),
      I_("Wrong Price"),
      I_("Wrong Price (Fund Accounting)"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_211_004_000_000;
   const BFSubstitutionSet SubSet_002_211_004_000_000(
    &aKeys_002_211_004_000_000[0], &aValues_002_211_004_000_000[0] );
   // Substitution set BackDatedReasonSet.  Language: frCA
   static const I_CHAR* aKeys_002_211_005_000_000[] = {
      I_("22"),
      I_("59"),
      I_("38"),
      I_("57"),
      I_("43"),
      I_("28"),
      I_("54"),
      I_("19"),
      I_("55"),
      I_("58"),
      I_("56"),
      I_("51"),
      I_("05"),
      I_("66"),
      I_("98"),
      I_("25"),
      I_("30"),
      I_("31"),
      I_("24"),
      I_("33"),
      I_("21"),
      I_("48"),
      I_("14"),
      I_("34"),
      I_("36"),
      I_("23"),
      I_("06"),
      I_("13"),
      I_("29"),
      I_("27"),
      I_("99"),
      I_("40"),
      I_("41"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("49"),
      I_("26"),
      I_("97"),
      I_("11"),
      I_("95"),
      I_("35"),
      I_("20"),
      I_("10"),
      I_("50"),
      I_("15"),
      I_("42"),
      I_("01"),
      I_("03"),
      I_("53"),
      I_("09"),
      I_("46"),
      I_("45"),
      I_("52"),
      I_("04"),
      I_("02"),
      I_("12"),
      I_("32"),
      I_("07"),
      I_("47"),
      I_("44"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("79"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("96"),
      I_("80"),
      I_("81"),
      I_("82"),
      I_("83"),
      I_("84"),
      I_("85"),
      I_("86"),
      I_("87"),
      I_("88"),
      I_("MI"),
      I_("DL"),
      0x00
   };

   static const I_CHAR* aValues_002_211_005_000_000[] = {
      I_("Antidatage de 10 %/du PBR"),
      I_("Transactions de 2 jours"),
      I_("Âge de 71 ans"),
      I_("Autorisation requise"),
      I_("Règlement forcé automatique"),
      I_("Remise de commission antidatée"),
      I_("Rente/RPDB antidaté(e)"),
      I_("Transfert antidaté"),
      I_("Arriéré"),
      I_("Arriéré - même fonds"),
      I_("Confirmation bancaire"),
      I_("Annulation de boni"),
      I_("Annulation"),
      I_("Enregistrement de conversion"),
      I_("Correction d'erreur NSM"),
      I_("Échanges jour 1/jour 2 (Frais à FAR)"),
      I_("Ajustement de dividende"),
      I_("Copie de transaction"),
      I_("Succession"),
      I_("Estimation"),
      I_("Antidatage PEPS"),
      I_("Règlement forcé"),
      I_("Rebalancement du contenu étranger"),
      I_("Demande de fonds"),
      I_("Le contrat FundSERV n'est pas réglé."),
      I_("Refus de FundSERV"),
      I_("Erreur de saisie"),
      I_("Erreur de traitement interne - ajustement"),
      I_("Lettre d'indemnisation"),
      I_("Élément AWD perdu"),
      I_("Divers"),
      I_("PAC manqué"),
      I_("PRP manqué"),
      I_("Transaction manquée - heure système des contrats de différence"),
      I_("Transaction manquée - heure système du client/du fonds"),
      I_("Transaction manquée - confirmation par télécopieur"),
      I_("Argent transféré à la banque"),
      I_("Corrections de code non déclarées"),
      I_("Retrait du cabinet de la NSCC"),
      I_("Renvoyé par la banque"),
      I_("Nettoyage des données FRR"),
      I_("Droit d'annulation"),
      I_("Paiement FERR"),
      I_("Ajustement de règlement"),
      I_("Paiement arrêté"),
      I_("Problème de système"),
      I_("Ajustement fictif/ajustement de compensation"),
      I_("Compte erroné"),
      I_("Montant erroné"),
      I_("Classe erronée"),
      I_("Commission erronée"),
      I_("Date de dépôt erronée - reçu de cotisation"),
      I_("Code de dépôt erroné"),
      I_("Code de dépôt/rachat erroné"),
      I_("Frais erronés"),
      I_("Fonds erroné"),
      I_("Prix erroné"),
      I_("Prix erroné (comptabilité de fonds)"),
      I_("Représentant erroné"),
      I_("Montant d'imposition erroné"),
      I_("Date de transaction erronée"),
      I_("Comptabilité"),
      I_("Limitation du système SCEE"),
      I_("Gestion du patrimoine de dialogue"),
      I_("Erreur PAC"),
      I_("Limitation du système de rachat"),
      I_("Limitation du système d'échange"),
      I_("Erreur PRP"),
      I_("Refus du système"),
      I_("Conseil erroné"),
      I_("AJUSTEMENT DES TERMES D'ACHAT"),
      I_("AJUSTEMENT DES TERMES DE VENTE"),
      I_("RENVERSEMENT D'ACHAT DE L'ORDRE ÉLECTRONIQUE"),
      I_("RENVERSEMENT DE VENTE DE L'ORDRE ÉLECTRONIQUE"),
      I_("VENTE DE L'ORDRE ÉLECTRONIQUE CAX"),
      I_("ACHAT DE L'ORDRE ÉLECTRONIQUE CAX"),
      I_("ST DE L'ORDRE ÉLECTRONIQUE D'AJUSTEMENT DES TERMES"),
      I_("BT DE L'ORDRE ÉLECTRONIQUE D'AJUSTEMENT DES TERMES"),
      I_("ST DE L'ORDRE ÉLECTRONIQUE DE RENVERSEMENT"),
      I_("BT DE L'ORDRE ÉLECTRONIQUE DE RENVERSEMENT"),
      I_("CSS CAX (souscrit non réglé)"),
      I_("Conseiller financier informé"),
      I_("Fonds insuffisants"),
      I_("Droit d'annulation"),
      I_("Aucunes instructions permanentes"),
      I_("Détails incorrects/incomplets"),
      I_("Terminated CPF Acc Nbr"),
      I_("CPF Invst AccName Not Matching"),
      I_("CPF Invt Acc & Agent Bank Mismatch"),
      I_("Le changement des détails du détenteur n'a pas été mis à jour."),
      I_("Misunderstood Instructions"),
      I_("DAP/LDAP reversal"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_211_005_000_000;
   const BFSubstitutionSet SubSet_002_211_005_000_000(
    &aKeys_002_211_005_000_000[0], &aValues_002_211_005_000_000[0] );
   // Substitution set BackDatedReasonSet.  Language: enIE
   static const I_CHAR* aKeys_002_211_006_000_000[] = {
      I_("22"),
      I_("59"),
      I_("38"),
      I_("57"),
      I_("28"),
      I_("54"),
      I_("19"),
      I_("55"),
      I_("58"),
      I_("56"),
      I_("05"),
      I_("66"),
      I_("98"),
      I_("25"),
      I_("30"),
      I_("31"),
      I_("24"),
      I_("33"),
      I_("21"),
      I_("14"),
      I_("34"),
      I_("36"),
      I_("23"),
      I_("06"),
      I_("13"),
      I_("29"),
      I_("27"),
      I_("99"),
      I_("40"),
      I_("41"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("26"),
      I_("11"),
      I_("35"),
      I_("20"),
      I_("10"),
      I_("15"),
      I_("42"),
      I_("01"),
      I_("03"),
      I_("53"),
      I_("52"),
      I_("04"),
      I_("02"),
      I_("12"),
      I_("32"),
      0x00
   };

   static const I_CHAR* aValues_002_211_006_000_000[] = {
      I_("10%/ACB Backdate"),
      I_("2 Day Transactions"),
      I_("Age 69"),
      I_("Authorization Required"),
      I_("Backdated Commission Rebate"),
      I_("Backdated Pension/DPSP"),
      I_("Backdated Transfer"),
      I_("BackLog"),
      I_("BackLog - Same Fund"),
      I_("Bank Confirmation"),
      I_("Cancelled"),
      I_("Conversion Code"),
      I_("CSS Error Correction"),
      I_("Day 1/ Day 2 Exchanges (FE to DSC)"),
      I_("Dividend Adjustment"),
      I_("Duplicated Transaction"),
      I_("Estate"),
      I_("Estimated"),
      I_("FIFO Backdate"),
      I_("Foreign Content Rebalancing"),
      I_("Fund Request"),
      I_("FundSERV contract not set up"),
      I_("FundSERV Reject"),
      I_("Input Error"),
      I_("Internal Processing Error - Adjustment"),
      I_("LOI - Letter of Indemnity"),
      I_("Lost AWD Item"),
      I_("Miscellaneous"),
      I_("Missed PAC"),
      I_("Missed SWP"),
      I_("Missed Trade - CFDS Timestamp"),
      I_("Missed Trade - Client/Fund Timestamp"),
      I_("Missed Trade - fax confirm"),
      I_("NR Code Corrections"),
      I_("Returned from Bank"),
      I_("Right of Recision"),
      I_("RRIF Payment"),
      I_("Settlement Adjustment"),
      I_("System Problem"),
      I_("Wash/Offsetting Adjustment"),
      I_("Wrong Account"),
      I_("Wrong Amount"),
      I_("Wrong Class"),
      I_("Wrong Deposit/Redemption Code"),
      I_("Wrong Fee"),
      I_("Wrong Fund"),
      I_("Wrong Price"),
      I_("Wrong Price (Fund Accounting)"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_211_006_000_000;
   const BFSubstitutionSet SubSet_002_211_006_000_000(
    &aKeys_002_211_006_000_000[0], &aValues_002_211_006_000_000[0] );
   // Substitution set BackDatedReasonSet.  Language: deDE
   static const I_CHAR* aKeys_002_211_007_000_000[] = {
      I_("22"),
      I_("59"),
      I_("38"),
      I_("57"),
      I_("43"),
      I_("28"),
      I_("54"),
      I_("19"),
      I_("55"),
      I_("58"),
      I_("56"),
      I_("51"),
      I_("05"),
      I_("66"),
      I_("98"),
      I_("25"),
      I_("30"),
      I_("31"),
      I_("24"),
      I_("33"),
      I_("21"),
      I_("48"),
      I_("14"),
      I_("34"),
      I_("36"),
      I_("23"),
      I_("06"),
      I_("13"),
      I_("29"),
      I_("27"),
      I_("99"),
      I_("40"),
      I_("41"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("49"),
      I_("26"),
      I_("97"),
      I_("11"),
      I_("95"),
      I_("35"),
      I_("20"),
      I_("10"),
      I_("50"),
      I_("15"),
      I_("42"),
      I_("01"),
      I_("03"),
      I_("53"),
      I_("09"),
      I_("46"),
      I_("45"),
      I_("52"),
      I_("04"),
      I_("02"),
      I_("12"),
      I_("32"),
      I_("07"),
      I_("47"),
      I_("44"),
      0x00
   };

   static const I_CHAR* aValues_002_211_007_000_000[] = {
      I_("10%/ACB Backdate"),
      I_("2 Day Transactions"),
      I_("Age 69"),
      I_("Authorization Required"),
      I_("Auto Force Settle"),
      I_("Backdated Commission Rebate"),
      I_("Backdated Pension/DPSP"),
      I_("Backdated Transfer"),
      I_("BackLog"),
      I_("BackLog - Same Fund"),
      I_("Bank Confirmation"),
      I_("Bonus Cancellation"),
      I_("Cancelled"),
      I_("Conversion Code"),
      I_("CSS Error Correction"),
      I_("Day 1/ Day 2 Exchanges (FE to DSC)"),
      I_("Dividend Adjustment"),
      I_("Duplicated Transaction"),
      I_("Estate"),
      I_("Estimated"),
      I_("FIFO Backdate"),
      I_("Forced Settlement"),
      I_("Foreign Content Rebalancing"),
      I_("Fund Request"),
      I_("FundSERV contract not set up"),
      I_("FundSERV Reject"),
      I_("Input Error"),
      I_("Internal Processing Error - Adjustment"),
      I_("LOI - Letter of Indemnity"),
      I_("Lost AWD Item"),
      I_("Miscellaneous"),
      I_("Missed PAC"),
      I_("Missed SWP"),
      I_("Missed Trade - CFDS Timestamp"),
      I_("Missed Trade - Client/Fund Timestamp"),
      I_("Missed Trade - fax confirm"),
      I_("Money Wired to Bank"),
      I_("NR Code Corrections"),
      I_("NSCC Firm Exit"),
      I_("Returned from Bank"),
      I_("RIF Data Cleanup"),
      I_("Right of Recision"),
      I_("RRIF Payment"),
      I_("Settlement Adjustment"),
      I_("Stopped Payment"),
      I_("System Problem"),
      I_("Wash/Offsetting Adjustment"),
      I_("Wrong Account"),
      I_("Wrong Amount"),
      I_("Wrong Class"),
      I_("Wrong Commission"),
      I_("Wrong Deposit Date - Commission Rebate"),
      I_("Wrong Deposit Type"),
      I_("Wrong Deposit/Redemption Code"),
      I_("Wrong Fee"),
      I_("Wrong Fund"),
      I_("Wrong Price"),
      I_("Wrong Price (Fund Accounting)"),
      I_("Wrong Salesman"),
      I_("Wrong Tax Amount"),
      I_("Wrong Trade Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_211_007_000_000;
   const BFSubstitutionSet SubSet_002_211_007_000_000(
    &aKeys_002_211_007_000_000[0], &aValues_002_211_007_000_000[0] );
   // Substitution set BackDatedReasonSet.  Language: esEs
   static const I_CHAR* aKeys_002_211_008_000_000[] = {
      I_("22"),
      I_("59"),
      I_("38"),
      I_("57"),
      I_("28"),
      I_("54"),
      I_("19"),
      I_("55"),
      I_("58"),
      I_("56"),
      I_("05"),
      I_("66"),
      I_("98"),
      I_("25"),
      I_("30"),
      I_("31"),
      I_("24"),
      I_("33"),
      I_("21"),
      I_("14"),
      I_("34"),
      I_("36"),
      I_("23"),
      I_("06"),
      I_("13"),
      I_("29"),
      I_("27"),
      I_("99"),
      I_("40"),
      I_("41"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("26"),
      I_("11"),
      I_("35"),
      I_("20"),
      I_("10"),
      I_("15"),
      I_("42"),
      I_("01"),
      I_("03"),
      I_("53"),
      I_("52"),
      I_("04"),
      I_("02"),
      I_("12"),
      I_("32"),
      0x00
   };

   static const I_CHAR* aValues_002_211_008_000_000[] = {
      I_("10%/ACB Backdate"),
      I_("2 Day Transactions"),
      I_("Age 69"),
      I_("Authorization Required"),
      I_("Backdated Commission Rebate"),
      I_("Backdated Pension/DPSP"),
      I_("Backdated Transfer"),
      I_("BackLog"),
      I_("BackLog - Same Fund"),
      I_("Bank Confirmation"),
      I_("Cancelled"),
      I_("Conversion Code"),
      I_("CSS Error Correction"),
      I_("Day 1/ Day 2 Exchanges (FE to DSC)"),
      I_("Dividend Adjustment"),
      I_("Duplicated Transaction"),
      I_("Estate"),
      I_("Estimated"),
      I_("FIFO Backdate"),
      I_("Foreign Content Rebalancing"),
      I_("Fund Request"),
      I_("FundSERV contract not set up"),
      I_("FundSERV Reject"),
      I_("Input Error"),
      I_("Internal Processing Error - Adjustment"),
      I_("LOI - Letter of Indemnity"),
      I_("Lost AWD Item"),
      I_("Miscellaneous"),
      I_("Missed PAC"),
      I_("Missed SWP"),
      I_("Missed Trade - CFDS Timestamp"),
      I_("Missed Trade - Client/Fund Timestamp"),
      I_("Missed Trade - fax confirm"),
      I_("NR Code Corrections"),
      I_("Returned from Bank"),
      I_("Right of Recision"),
      I_("RRIF Payment"),
      I_("Settlement Adjustment"),
      I_("System Problem"),
      I_("Wash/Offsetting Adjustment"),
      I_("Wrong Account"),
      I_("Wrong Amount"),
      I_("Wrong Class"),
      I_("Wrong Deposit/Redemption Code"),
      I_("Wrong Fee"),
      I_("Wrong Fund"),
      I_("Wrong Price"),
      I_("Wrong Price (Fund Accounting)"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_211_008_000_000;
   const BFSubstitutionSet SubSet_002_211_008_000_000(
    &aKeys_002_211_008_000_000[0], &aValues_002_211_008_000_000[0] );
   // Substitution set BackDatedReasonSet.  Language: nlNL
   static const I_CHAR* aKeys_002_211_010_000_000[] = {
      I_("22"),
      I_("59"),
      I_("38"),
      I_("57"),
      I_("28"),
      I_("54"),
      I_("19"),
      I_("55"),
      I_("58"),
      I_("56"),
      I_("05"),
      I_("66"),
      I_("98"),
      I_("25"),
      I_("30"),
      I_("31"),
      I_("24"),
      I_("33"),
      I_("21"),
      I_("14"),
      I_("34"),
      I_("36"),
      I_("23"),
      I_("06"),
      I_("13"),
      I_("29"),
      I_("27"),
      I_("99"),
      I_("40"),
      I_("41"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("26"),
      I_("11"),
      I_("35"),
      I_("20"),
      I_("10"),
      I_("15"),
      I_("42"),
      I_("01"),
      I_("03"),
      I_("53"),
      I_("52"),
      I_("04"),
      I_("02"),
      I_("12"),
      I_("32"),
      0x00
   };

   static const I_CHAR* aValues_002_211_010_000_000[] = {
      I_("10%/ACB geantedateerd"),
      I_("2 Day Transactions"),
      I_("Leeftijd 69"),
      I_("Authorization Required"),
      I_("Geantedateerde commissiekorting"),
      I_("Backdated Pension/DPSP"),
      I_("Geantedateerde overdracht"),
      I_("BackLog"),
      I_("BackLog - Same Fund"),
      I_("Bank Confirmation"),
      I_("Geannuleerd"),
      I_("Conversion Code"),
      I_("CSS foutcorrectie"),
      I_("Day 1/ Day 2 Exchanges (FE to DSC)"),
      I_("Dividendaanpassing"),
      I_("Dubbele transactie"),
      I_("Nalatenschap"),
      I_("Geschat"),
      I_("FIFO geantedateerd"),
      I_("Opnieuw salderen buitenlandse inhoud"),
      I_("Fondsaanvraag"),
      I_("FundSERV-overeenkomst is niet ingesteld"),
      I_("FundSERV verworpen"),
      I_("Invoerfout"),
      I_("Interne verwerkingsfout - aanpassing"),
      I_("LOI - vrijwaringsbrief"),
      I_("Verloren AWD-item"),
      I_("Allerlei"),
      I_("Gemiste VGC"),
      I_("Gemiste SWP"),
      I_("Gemiste handel - tijdstempel CFDS"),
      I_("Gemiste handel - tijdstempel klant/fonds"),
      I_("Gemiste handel - faxbevestiging"),
      I_("NR-codecorrecties"),
      I_("Teruggestuurd van bank"),
      I_("Opzeggingsrecht"),
      I_("PRIF-betaling"),
      I_("Betalingsaanpassing"),
      I_("Systeemprobleem"),
      I_("Wash/Offsetting Adjustment"),
      I_("Verkeerd account"),
      I_("Verkeerd bedrag"),
      I_("Wrong Class"),
      I_("Wrong Deposit/Redemption Code"),
      I_("Verkeerde kosten"),
      I_("Verkeerd fonds"),
      I_("Wrong Price"),
      I_("Verkeerde prijs (fondsadministratie)"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_211_010_000_000;
   const BFSubstitutionSet SubSet_002_211_010_000_000(
    &aKeys_002_211_010_000_000[0], &aValues_002_211_010_000_000[0] );
   // Substitution set TimeZoneSet.  Language: enUS
   static const I_CHAR* aKeys_002_214_001_000_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_001_000_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_001_000_000;
   const BFSubstitutionSet SubSet_002_214_001_000_000(
    &aKeys_002_214_001_000_000[0], &aValues_002_214_001_000_000[0] );
   // Substitution set TimeZoneSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_214_001_003_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_001_003_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_001_003_000;
   const BFSubstitutionSet SubSet_002_214_001_003_000(
    &aKeys_002_214_001_003_000[0], &aValues_002_214_001_003_000[0] );
   // Substitution set TimeZoneSet.  Language: enUS, Market: 3, Client: 8
   static const I_CHAR* aKeys_002_214_001_003_008[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_001_003_008[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("New York Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_001_003_008;
   const BFSubstitutionSet SubSet_002_214_001_003_008(
    &aKeys_002_214_001_003_008[0], &aValues_002_214_001_003_008[0] );
   // Substitution set TimeZoneSet.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_214_001_004_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_001_004_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_001_004_000;
   const BFSubstitutionSet SubSet_002_214_001_004_000(
    &aKeys_002_214_001_004_000[0], &aValues_002_214_001_004_000[0] );
   // Substitution set TimeZoneSet.  Language: enUS, Market: 4, Client: 3
   static const I_CHAR* aKeys_002_214_001_004_003[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_001_004_003[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("New York Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_001_004_003;
   const BFSubstitutionSet SubSet_002_214_001_004_003(
    &aKeys_002_214_001_004_003[0], &aValues_002_214_001_004_003[0] );
   // Substitution set TimeZoneSet.  Language: enCA
   static const I_CHAR* aKeys_002_214_003_000_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_003_000_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_003_000_000;
   const BFSubstitutionSet SubSet_002_214_003_000_000(
    &aKeys_002_214_003_000_000[0], &aValues_002_214_003_000_000[0] );
   // Substitution set TimeZoneSet.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_214_003_003_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_003_003_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_003_003_000;
   const BFSubstitutionSet SubSet_002_214_003_003_000(
    &aKeys_002_214_003_003_000[0], &aValues_002_214_003_003_000[0] );
   // Substitution set TimeZoneSet.  Language: enCA, Market: 3, Client: 8
   static const I_CHAR* aKeys_002_214_003_003_008[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_003_003_008[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_003_003_008;
   const BFSubstitutionSet SubSet_002_214_003_003_008(
    &aKeys_002_214_003_003_008[0], &aValues_002_214_003_003_008[0] );
   // Substitution set TimeZoneSet.  Language: enCA, Market: 4
   static const I_CHAR* aKeys_002_214_003_004_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_003_004_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_003_004_000;
   const BFSubstitutionSet SubSet_002_214_003_004_000(
    &aKeys_002_214_003_004_000[0], &aValues_002_214_003_004_000[0] );
   // Substitution set TimeZoneSet.  Language: enCA, Market: 4, Client: 3
   static const I_CHAR* aKeys_002_214_003_004_003[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_003_004_003[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_003_004_003;
   const BFSubstitutionSet SubSet_002_214_003_004_003(
    &aKeys_002_214_003_004_003[0], &aValues_002_214_003_004_003[0] );
   // Substitution set TimeZoneSet.  Language: frFR
   static const I_CHAR* aKeys_002_214_004_000_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_004_000_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_004_000_000;
   const BFSubstitutionSet SubSet_002_214_004_000_000(
    &aKeys_002_214_004_000_000[0], &aValues_002_214_004_000_000[0] );
   // Substitution set TimeZoneSet.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_214_004_003_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_004_003_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_004_003_000;
   const BFSubstitutionSet SubSet_002_214_004_003_000(
    &aKeys_002_214_004_003_000[0], &aValues_002_214_004_003_000[0] );
   // Substitution set TimeZoneSet.  Language: frFR, Market: 3, Client: 8
   static const I_CHAR* aKeys_002_214_004_003_008[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_004_003_008[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_004_003_008;
   const BFSubstitutionSet SubSet_002_214_004_003_008(
    &aKeys_002_214_004_003_008[0], &aValues_002_214_004_003_008[0] );
   // Substitution set TimeZoneSet.  Language: frFR, Market: 4
   static const I_CHAR* aKeys_002_214_004_004_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_004_004_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_004_004_000;
   const BFSubstitutionSet SubSet_002_214_004_004_000(
    &aKeys_002_214_004_004_000[0], &aValues_002_214_004_004_000[0] );
   // Substitution set TimeZoneSet.  Language: frFR, Market: 4, Client: 3
   static const I_CHAR* aKeys_002_214_004_004_003[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_004_004_003[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_004_004_003;
   const BFSubstitutionSet SubSet_002_214_004_004_003(
    &aKeys_002_214_004_004_003[0], &aValues_002_214_004_004_003[0] );
   // Substitution set TimeZoneSet.  Language: frCA
   static const I_CHAR* aKeys_002_214_005_000_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_005_000_000[] = {
      I_("Heure de l'Europe centrale"),
      I_("Europe orientale, Russie, zone 1"),
      I_("Bagdad, Russie, zone 2"),
      I_("Russie, zone 3"),
      I_("Baie de Chesapeake 1"),
      I_("Baie de Chesapeake 2"),
      I_("Heure de l'Australie-Occidentale"),
      I_("Heure de la côte de Chine, Russie, zone 7"),
      I_("Heure du Japon, Russie, zone 8"),
      I_("Heure de Guam"),
      I_("Heure de Lima"),
      I_("Heure de la Nouvelle-Zélande"),
      I_("Heure de l'Afrique occidentale"),
      I_("Açores"),
      I_("Heure de l'Amérique du Sud"),
      I_("Heure de l'Atlantique"),
      I_("Heure de l'Est"),
      I_("Heure normale du Centre"),
      I_("Heure normale des Rocheuses"),
      I_("Heure normale du Pacifique"),
      I_("Heure normale du Yukon"),
      I_("Heure de l'Australie-Orientale"),
      I_("Nome"),
      I_("Ligne occidentale de changement de date"),
      I_("Temps universel coordonné"),
      I_("Temps universel coordonné"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_005_000_000;
   const BFSubstitutionSet SubSet_002_214_005_000_000(
    &aKeys_002_214_005_000_000[0], &aValues_002_214_005_000_000[0] );
   // Substitution set TimeZoneSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_214_005_003_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_005_003_000[] = {
      I_("Heure de l'Europe centrale"),
      I_("Europe orientale, Russie, zone 1"),
      I_("Bagdad, Russie, zone 2"),
      I_("Russie, zone 3"),
      I_("Baie de Chesapeake 1"),
      I_("Baie de Chesapeake 2"),
      I_("Heure de l'Australie-Occidentale"),
      I_("Heure de la côte de Chine, Russie, zone 7"),
      I_("Heure du Japon, Russie, zone 8"),
      I_("Heure de Guam"),
      I_("Heure de Lima"),
      I_("Heure de la Nouvelle-Zélande"),
      I_("Heure de l'Afrique occidentale"),
      I_("Açores"),
      I_("Heure de l'Amérique du Sud"),
      I_("Heure de l'Atlantique"),
      I_("Heure de l'Est"),
      I_("Heure normale du Centre"),
      I_("Heure normale des Rocheuses"),
      I_("Heure normale du Pacifique"),
      I_("Heure normale du Yukon"),
      I_("Heure de l'Australie-Orientale"),
      I_("Nome"),
      I_("Ligne occidentale de changement de date"),
      I_("Temps universel coordonné"),
      I_("Temps universel coordonné"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_005_003_000;
   const BFSubstitutionSet SubSet_002_214_005_003_000(
    &aKeys_002_214_005_003_000[0], &aValues_002_214_005_003_000[0] );
   // Substitution set TimeZoneSet.  Language: frCA, Market: 3, Client: 8
   static const I_CHAR* aKeys_002_214_005_003_008[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_005_003_008[] = {
      I_("Heure de l'Europe centrale"),
      I_("Europe orientale, Russie, zone 1"),
      I_("Bagdad, Russie, zone 2"),
      I_("Russie, zone 3"),
      I_("Baie de Chesapeake 1"),
      I_("Baie de Chesapeake 2"),
      I_("Heure de l'Australie-Occidentale"),
      I_("Heure de la côte de Chine, Russie, zone 7"),
      I_("Heure du Japon, Russie, zone 8"),
      I_("Heure de Guam"),
      I_("Heure de Lima"),
      I_("Heure de la Nouvelle-Zélande"),
      I_("Heure de l'Afrique occidentale"),
      I_("Açores"),
      I_("Heure de l'Amérique du Sud"),
      I_("Heure de l'Atlantique"),
      I_("New York Time"),
      I_("Heure normale du Centre"),
      I_("Heure normale des Rocheuses"),
      I_("Heure normale du Pacifique"),
      I_("Heure normale du Yukon"),
      I_("Heure de l'Australie-Orientale"),
      I_("Nome"),
      I_("Ligne occidentale de changement de date"),
      I_("Temps universel coordonné"),
      I_("Temps universel coordonné"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_005_003_008;
   const BFSubstitutionSet SubSet_002_214_005_003_008(
    &aKeys_002_214_005_003_008[0], &aValues_002_214_005_003_008[0] );
   // Substitution set TimeZoneSet.  Language: frCA, Market: 4
   static const I_CHAR* aKeys_002_214_005_004_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_005_004_000[] = {
      I_("Heure de l'Europe centrale"),
      I_("Europe orientale, Russie, zone 1"),
      I_("Bagdad, Russie, zone 2"),
      I_("Russie, zone 3"),
      I_("Baie de Chesapeake 1"),
      I_("Baie de Chesapeake 2"),
      I_("Heure de l'Australie-Occidentale"),
      I_("Heure de la côte de Chine, Russie, zone 7"),
      I_("Heure du Japon, Russie, zone 8"),
      I_("Heure de Guam"),
      I_("Heure de Lima"),
      I_("Heure de la Nouvelle-Zélande"),
      I_("Heure de l'Afrique occidentale"),
      I_("Açores"),
      I_("Heure de l'Amérique du Sud"),
      I_("Heure de l'Atlantique"),
      I_("Heure de l'Est"),
      I_("Heure normale du Centre"),
      I_("Heure normale des Rocheuses"),
      I_("Heure normale du Pacifique"),
      I_("Heure normale du Yukon"),
      I_("Heure de l'Australie-Orientale"),
      I_("Nome"),
      I_("Ligne occidentale de changement de date"),
      I_("Temps universel coordonné"),
      I_("Temps universel coordonné"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_005_004_000;
   const BFSubstitutionSet SubSet_002_214_005_004_000(
    &aKeys_002_214_005_004_000[0], &aValues_002_214_005_004_000[0] );
   // Substitution set TimeZoneSet.  Language: frCA, Market: 4, Client: 3
   static const I_CHAR* aKeys_002_214_005_004_003[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_005_004_003[] = {
      I_("Heure de l'Europe centrale"),
      I_("Europe orientale, Russie, zone 1"),
      I_("Bagdad, Russie, zone 2"),
      I_("Russie, zone 3"),
      I_("Baie de Chesapeake 1"),
      I_("Baie de Chesapeake 2"),
      I_("Heure de l'Australie-Occidentale"),
      I_("Heure de la côte de Chine, Russie, zone 7"),
      I_("Heure du Japon, Russie, zone 8"),
      I_("Heure de Guam"),
      I_("Heure de Lima"),
      I_("Heure de la Nouvelle-Zélande"),
      I_("Heure de l'Afrique occidentale"),
      I_("Açores"),
      I_("Heure de l'Amérique du Sud"),
      I_("Heure de l'Atlantique"),
      I_("New York Time"),
      I_("Heure normale du Centre"),
      I_("Heure normale des Rocheuses"),
      I_("Heure normale du Pacifique"),
      I_("Heure normale du Yukon"),
      I_("Heure de l'Australie-Orientale"),
      I_("Nome"),
      I_("Ligne occidentale de changement de date"),
      I_("Temps universel coordonné"),
      I_("Temps universel coordonné"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_005_004_003;
   const BFSubstitutionSet SubSet_002_214_005_004_003(
    &aKeys_002_214_005_004_003[0], &aValues_002_214_005_004_003[0] );
   // Substitution set TimeZoneSet.  Language: enIE
   static const I_CHAR* aKeys_002_214_006_000_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_006_000_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_006_000_000;
   const BFSubstitutionSet SubSet_002_214_006_000_000(
    &aKeys_002_214_006_000_000[0], &aValues_002_214_006_000_000[0] );
   // Substitution set TimeZoneSet.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_214_006_003_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_006_003_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_006_003_000;
   const BFSubstitutionSet SubSet_002_214_006_003_000(
    &aKeys_002_214_006_003_000[0], &aValues_002_214_006_003_000[0] );
   // Substitution set TimeZoneSet.  Language: enIE, Market: 3, Client: 8
   static const I_CHAR* aKeys_002_214_006_003_008[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_006_003_008[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_006_003_008;
   const BFSubstitutionSet SubSet_002_214_006_003_008(
    &aKeys_002_214_006_003_008[0], &aValues_002_214_006_003_008[0] );
   // Substitution set TimeZoneSet.  Language: enIE, Market: 4
   static const I_CHAR* aKeys_002_214_006_004_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_006_004_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_006_004_000;
   const BFSubstitutionSet SubSet_002_214_006_004_000(
    &aKeys_002_214_006_004_000[0], &aValues_002_214_006_004_000[0] );
   // Substitution set TimeZoneSet.  Language: enIE, Market: 4, Client: 3
   static const I_CHAR* aKeys_002_214_006_004_003[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_006_004_003[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_006_004_003;
   const BFSubstitutionSet SubSet_002_214_006_004_003(
    &aKeys_002_214_006_004_003[0], &aValues_002_214_006_004_003[0] );
   // Substitution set TimeZoneSet.  Language: deDE
   static const I_CHAR* aKeys_002_214_007_000_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_007_000_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_007_000_000;
   const BFSubstitutionSet SubSet_002_214_007_000_000(
    &aKeys_002_214_007_000_000[0], &aValues_002_214_007_000_000[0] );
   // Substitution set TimeZoneSet.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_214_007_003_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_007_003_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_007_003_000;
   const BFSubstitutionSet SubSet_002_214_007_003_000(
    &aKeys_002_214_007_003_000[0], &aValues_002_214_007_003_000[0] );
   // Substitution set TimeZoneSet.  Language: deDE, Market: 3, Client: 8
   static const I_CHAR* aKeys_002_214_007_003_008[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_007_003_008[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_007_003_008;
   const BFSubstitutionSet SubSet_002_214_007_003_008(
    &aKeys_002_214_007_003_008[0], &aValues_002_214_007_003_008[0] );
   // Substitution set TimeZoneSet.  Language: deDE, Market: 4
   static const I_CHAR* aKeys_002_214_007_004_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_007_004_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_007_004_000;
   const BFSubstitutionSet SubSet_002_214_007_004_000(
    &aKeys_002_214_007_004_000[0], &aValues_002_214_007_004_000[0] );
   // Substitution set TimeZoneSet.  Language: deDE, Market: 4, Client: 3
   static const I_CHAR* aKeys_002_214_007_004_003[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_007_004_003[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_007_004_003;
   const BFSubstitutionSet SubSet_002_214_007_004_003(
    &aKeys_002_214_007_004_003[0], &aValues_002_214_007_004_003[0] );
   // Substitution set TimeZoneSet.  Language: esEs
   static const I_CHAR* aKeys_002_214_008_000_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_008_000_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_008_000_000;
   const BFSubstitutionSet SubSet_002_214_008_000_000(
    &aKeys_002_214_008_000_000[0], &aValues_002_214_008_000_000[0] );
   // Substitution set TimeZoneSet.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_214_008_003_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_008_003_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_008_003_000;
   const BFSubstitutionSet SubSet_002_214_008_003_000(
    &aKeys_002_214_008_003_000[0], &aValues_002_214_008_003_000[0] );
   // Substitution set TimeZoneSet.  Language: esEs, Market: 3, Client: 8
   static const I_CHAR* aKeys_002_214_008_003_008[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_008_003_008[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_008_003_008;
   const BFSubstitutionSet SubSet_002_214_008_003_008(
    &aKeys_002_214_008_003_008[0], &aValues_002_214_008_003_008[0] );
   // Substitution set TimeZoneSet.  Language: esEs, Market: 4
   static const I_CHAR* aKeys_002_214_008_004_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_008_004_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_008_004_000;
   const BFSubstitutionSet SubSet_002_214_008_004_000(
    &aKeys_002_214_008_004_000[0], &aValues_002_214_008_004_000[0] );
   // Substitution set TimeZoneSet.  Language: esEs, Market: 4, Client: 3
   static const I_CHAR* aKeys_002_214_008_004_003[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_008_004_003[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_008_004_003;
   const BFSubstitutionSet SubSet_002_214_008_004_003(
    &aKeys_002_214_008_004_003[0], &aValues_002_214_008_004_003[0] );
   // Substitution set TimeZoneSet.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_214_009_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_214_009_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_009_003_000;
   const BFSubstitutionSet SubSet_002_214_009_003_000(
    &aKeys_002_214_009_003_000[0], &aValues_002_214_009_003_000[0] );
   // Substitution set TimeZoneSet.  Language: enGB, Market: 3, Client: 8
   static const I_CHAR* aKeys_002_214_009_003_008[] = {
      0x00
   };

   static const I_CHAR* aValues_002_214_009_003_008[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_009_003_008;
   const BFSubstitutionSet SubSet_002_214_009_003_008(
    &aKeys_002_214_009_003_008[0], &aValues_002_214_009_003_008[0] );
   // Substitution set TimeZoneSet.  Language: enGB, Market: 4
   static const I_CHAR* aKeys_002_214_009_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_214_009_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_009_004_000;
   const BFSubstitutionSet SubSet_002_214_009_004_000(
    &aKeys_002_214_009_004_000[0], &aValues_002_214_009_004_000[0] );
   // Substitution set TimeZoneSet.  Language: enGB, Market: 4, Client: 3
   static const I_CHAR* aKeys_002_214_009_004_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_214_009_004_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_009_004_003;
   const BFSubstitutionSet SubSet_002_214_009_004_003(
    &aKeys_002_214_009_004_003[0], &aValues_002_214_009_004_003[0] );
   // Substitution set TimeZoneSet.  Language: nlNL
   static const I_CHAR* aKeys_002_214_010_000_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_010_000_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_010_000_000;
   const BFSubstitutionSet SubSet_002_214_010_000_000(
    &aKeys_002_214_010_000_000[0], &aValues_002_214_010_000_000[0] );
   // Substitution set TimeZoneSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_214_010_003_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_010_003_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_010_003_000;
   const BFSubstitutionSet SubSet_002_214_010_003_000(
    &aKeys_002_214_010_003_000[0], &aValues_002_214_010_003_000[0] );
   // Substitution set TimeZoneSet.  Language: nlNL, Market: 3, Client: 8
   static const I_CHAR* aKeys_002_214_010_003_008[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_010_003_008[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_010_003_008;
   const BFSubstitutionSet SubSet_002_214_010_003_008(
    &aKeys_002_214_010_003_008[0], &aValues_002_214_010_003_008[0] );
   // Substitution set TimeZoneSet.  Language: nlNL, Market: 4
   static const I_CHAR* aKeys_002_214_010_004_000[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_010_004_000[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_010_004_000;
   const BFSubstitutionSet SubSet_002_214_010_004_000(
    &aKeys_002_214_010_004_000[0], &aValues_002_214_010_004_000[0] );
   // Substitution set TimeZoneSet.  Language: nlNL, Market: 4, Client: 3
   static const I_CHAR* aKeys_002_214_010_004_003[] = {
      I_("ACET00"),
      I_("BEET00"),
      I_("CBT00"),
      I_("DZP400"),
      I_("EZP500"),
      I_("FZP600"),
      I_("GWAST00"),
      I_("HCCT00"),
      I_("IJST00"),
      I_("KGST00"),
      I_("LXST00"),
      I_("MNZST00"),
      I_("NWAT00"),
      I_("OAT00"),
      I_("PSAT00"),
      I_("QAST00"),
      I_("REST00"),
      I_("SCST00"),
      I_("TMST00"),
      I_("UPST00"),
      I_("VYST00"),
      I_("WEAST00"),
      I_("XNT00"),
      I_("YIDLW00"),
      I_("ZGMT00"),
      I_("ZGMT01"),
      0x00
   };

   static const I_CHAR* aValues_002_214_010_004_003[] = {
      I_("Central European Time"),
      I_("Eastern European, Russia Zone 1"),
      I_("Baghdad, Russia Zone 2"),
      I_("Russia Zone 3"),
      I_("Chesapeake Bay 1"),
      I_("Chesapeake Bay 2"),
      I_("West Australian Standard Time"),
      I_("China Coast Time, Russia Zone 7"),
      I_("Japan Standard Time, Russia Zone 8"),
      I_("Guam Standard Time"),
      I_("Lima Standard Time"),
      I_("New Zealand Standard Time"),
      I_("Weat Africa Time"),
      I_("Azores"),
      I_("South American Time"),
      I_("Atlantic Standard Time"),
      I_("Eastern Standard Time"),
      I_("Central Standard Time"),
      I_("Mountain Standard Time"),
      I_("Pacific Standard Time"),
      I_("Yukon Standard Time"),
      I_("East Australian Standard Time"),
      I_("Nome"),
      I_("International Date Line West"),
      I_("Greenwich Mean Time"),
      I_("Greenwich Mean Time"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_010_004_003;
   const BFSubstitutionSet SubSet_002_214_010_004_003(
    &aKeys_002_214_010_004_003[0], &aValues_002_214_010_004_003[0] );
   // Substitution set TimeZoneSet.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_214_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_214_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_011_003_000;
   const BFSubstitutionSet SubSet_002_214_011_003_000(
    &aKeys_002_214_011_003_000[0], &aValues_002_214_011_003_000[0] );
   // Substitution set TimeZoneSet.  Language: itIT, Market: 3, Client: 8
   static const I_CHAR* aKeys_002_214_011_003_008[] = {
      0x00
   };

   static const I_CHAR* aValues_002_214_011_003_008[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_011_003_008;
   const BFSubstitutionSet SubSet_002_214_011_003_008(
    &aKeys_002_214_011_003_008[0], &aValues_002_214_011_003_008[0] );
   // Substitution set TimeZoneSet.  Language: itIT, Market: 4
   static const I_CHAR* aKeys_002_214_011_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_214_011_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_011_004_000;
   const BFSubstitutionSet SubSet_002_214_011_004_000(
    &aKeys_002_214_011_004_000[0], &aValues_002_214_011_004_000[0] );
   // Substitution set TimeZoneSet.  Language: itIT, Market: 4, Client: 3
   static const I_CHAR* aKeys_002_214_011_004_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_214_011_004_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_011_004_003;
   const BFSubstitutionSet SubSet_002_214_011_004_003(
    &aKeys_002_214_011_004_003[0], &aValues_002_214_011_004_003[0] );
   // Substitution set TimeZoneSet.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_214_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_214_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_012_003_000;
   const BFSubstitutionSet SubSet_002_214_012_003_000(
    &aKeys_002_214_012_003_000[0], &aValues_002_214_012_003_000[0] );
   // Substitution set TimeZoneSet.  Language: thTH, Market: 3, Client: 8
   static const I_CHAR* aKeys_002_214_012_003_008[] = {
      0x00
   };

   static const I_CHAR* aValues_002_214_012_003_008[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_012_003_008;
   const BFSubstitutionSet SubSet_002_214_012_003_008(
    &aKeys_002_214_012_003_008[0], &aValues_002_214_012_003_008[0] );
   // Substitution set TimeZoneSet.  Language: thTH, Market: 4
   static const I_CHAR* aKeys_002_214_012_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_214_012_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_012_004_000;
   const BFSubstitutionSet SubSet_002_214_012_004_000(
    &aKeys_002_214_012_004_000[0], &aValues_002_214_012_004_000[0] );
   // Substitution set TimeZoneSet.  Language: thTH, Market: 4, Client: 3
   static const I_CHAR* aKeys_002_214_012_004_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_214_012_004_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_214_012_004_003;
   const BFSubstitutionSet SubSet_002_214_012_004_003(
    &aKeys_002_214_012_004_003[0], &aValues_002_214_012_004_003[0] );
   // Substitution set BankInstrComboSet5.  Language: enUS
   static const I_CHAR* aKeys_002_215_001_000_000[] = {
      I_("RIF"),
      0x00
   };

   static const I_CHAR* aValues_002_215_001_000_000[] = {
      I_("RRIF_LIF_LRIF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_215_001_000_000;
   const BFSubstitutionSet SubSet_002_215_001_000_000(
    &aKeys_002_215_001_000_000[0], &aValues_002_215_001_000_000[0] );
   // Substitution set BankInstrComboSet5.  Language: enCA
   static const I_CHAR* aKeys_002_215_003_000_000[] = {
      I_("RIF"),
      0x00
   };

   static const I_CHAR* aValues_002_215_003_000_000[] = {
      I_("RRIF_LIF_LRIF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_215_003_000_000;
   const BFSubstitutionSet SubSet_002_215_003_000_000(
    &aKeys_002_215_003_000_000[0], &aValues_002_215_003_000_000[0] );
   // Substitution set BankInstrComboSet5.  Language: frFR
   static const I_CHAR* aKeys_002_215_004_000_000[] = {
      I_("RIF"),
      0x00
   };

   static const I_CHAR* aValues_002_215_004_000_000[] = {
      I_("RRIF_LIF_LRIF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_215_004_000_000;
   const BFSubstitutionSet SubSet_002_215_004_000_000(
    &aKeys_002_215_004_000_000[0], &aValues_002_215_004_000_000[0] );
   // Substitution set BankInstrComboSet5.  Language: frCA
   static const I_CHAR* aKeys_002_215_005_000_000[] = {
      I_("RIF"),
      0x00
   };

   static const I_CHAR* aValues_002_215_005_000_000[] = {
      I_("FERR_FRV_FRRI"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_215_005_000_000;
   const BFSubstitutionSet SubSet_002_215_005_000_000(
    &aKeys_002_215_005_000_000[0], &aValues_002_215_005_000_000[0] );
   // Substitution set BankInstrComboSet5.  Language: enIE
   static const I_CHAR* aKeys_002_215_006_000_000[] = {
      I_("RIF"),
      0x00
   };

   static const I_CHAR* aValues_002_215_006_000_000[] = {
      I_("RRIF_LIF_LRIF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_215_006_000_000;
   const BFSubstitutionSet SubSet_002_215_006_000_000(
    &aKeys_002_215_006_000_000[0], &aValues_002_215_006_000_000[0] );
   // Substitution set BankInstrComboSet5.  Language: deDE
   static const I_CHAR* aKeys_002_215_007_000_000[] = {
      I_("RIF"),
      0x00
   };

   static const I_CHAR* aValues_002_215_007_000_000[] = {
      I_("RRIF_LIF_LRIF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_215_007_000_000;
   const BFSubstitutionSet SubSet_002_215_007_000_000(
    &aKeys_002_215_007_000_000[0], &aValues_002_215_007_000_000[0] );
   // Substitution set BankInstrComboSet5.  Language: esEs
   static const I_CHAR* aKeys_002_215_008_000_000[] = {
      I_("RIF"),
      0x00
   };

   static const I_CHAR* aValues_002_215_008_000_000[] = {
      I_("RRIF_LIF_LRIF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_215_008_000_000;
   const BFSubstitutionSet SubSet_002_215_008_000_000(
    &aKeys_002_215_008_000_000[0], &aValues_002_215_008_000_000[0] );
   // Substitution set BankInstrComboSet5.  Language: nlNL
   static const I_CHAR* aKeys_002_215_010_000_000[] = {
      I_("RIF"),
      0x00
   };

   static const I_CHAR* aValues_002_215_010_000_000[] = {
      I_("RRIF_LIF_LRIF"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_215_010_000_000;
   const BFSubstitutionSet SubSet_002_215_010_000_000(
    &aKeys_002_215_010_000_000[0], &aValues_002_215_010_000_000[0] );
   // Substitution set DateSet.  Language: enUS
   static const I_CHAR* aKeys_002_216_001_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_001_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_001_000_000;
   const BFSubstitutionSet SubSet_002_216_001_000_000(
    &aKeys_002_216_001_000_000[0], &aValues_002_216_001_000_000[0] );
   // Substitution set DateSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_216_001_003_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_001_003_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_001_003_000;
   const BFSubstitutionSet SubSet_002_216_001_003_000(
    &aKeys_002_216_001_003_000[0], &aValues_002_216_001_003_000[0] );
   // Substitution set DateSet.  Language: enUS, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_216_001_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_001_003_003[] = {
      I_("M"),
      I_("J"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_001_003_003;
   const BFSubstitutionSet SubSet_002_216_001_003_003(
    &aKeys_002_216_001_003_003[0], &aValues_002_216_001_003_003[0] );
   // Substitution set DateSet.  Language: enUS, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_216_001_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_001_003_011[] = {
      I_("M"),
      I_("J"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_001_003_011;
   const BFSubstitutionSet SubSet_002_216_001_003_011(
    &aKeys_002_216_001_003_011[0], &aValues_002_216_001_003_011[0] );
   // Substitution set DateSet.  Language: enUS, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_216_001_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_001_003_014[] = {
      I_("M"),
      I_("J"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_001_003_014;
   const BFSubstitutionSet SubSet_002_216_001_003_014(
    &aKeys_002_216_001_003_014[0], &aValues_002_216_001_003_014[0] );
   // Substitution set DateSet.  Language: enCA
   static const I_CHAR* aKeys_002_216_003_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_003_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_003_000_000;
   const BFSubstitutionSet SubSet_002_216_003_000_000(
    &aKeys_002_216_003_000_000[0], &aValues_002_216_003_000_000[0] );
   // Substitution set DateSet.  Language: enCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_216_003_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_003_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_003_003_003;
   const BFSubstitutionSet SubSet_002_216_003_003_003(
    &aKeys_002_216_003_003_003[0], &aValues_002_216_003_003_003[0] );
   // Substitution set DateSet.  Language: enCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_216_003_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_003_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_003_003_011;
   const BFSubstitutionSet SubSet_002_216_003_003_011(
    &aKeys_002_216_003_003_011[0], &aValues_002_216_003_003_011[0] );
   // Substitution set DateSet.  Language: enCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_216_003_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_003_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_003_003_014;
   const BFSubstitutionSet SubSet_002_216_003_003_014(
    &aKeys_002_216_003_003_014[0], &aValues_002_216_003_003_014[0] );
   // Substitution set DateSet.  Language: frFR
   static const I_CHAR* aKeys_002_216_004_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_004_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_004_000_000;
   const BFSubstitutionSet SubSet_002_216_004_000_000(
    &aKeys_002_216_004_000_000[0], &aValues_002_216_004_000_000[0] );
   // Substitution set DateSet.  Language: frFR, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_216_004_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_004_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_004_003_003;
   const BFSubstitutionSet SubSet_002_216_004_003_003(
    &aKeys_002_216_004_003_003[0], &aValues_002_216_004_003_003[0] );
   // Substitution set DateSet.  Language: frFR, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_216_004_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_004_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_004_003_011;
   const BFSubstitutionSet SubSet_002_216_004_003_011(
    &aKeys_002_216_004_003_011[0], &aValues_002_216_004_003_011[0] );
   // Substitution set DateSet.  Language: frFR, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_216_004_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_004_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_004_003_014;
   const BFSubstitutionSet SubSet_002_216_004_003_014(
    &aKeys_002_216_004_003_014[0], &aValues_002_216_004_003_014[0] );
   // Substitution set DateSet.  Language: frCA
   static const I_CHAR* aKeys_002_216_005_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_005_000_000[] = {
      I_("M"),
      I_("J"),
      I_("A"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_005_000_000;
   const BFSubstitutionSet SubSet_002_216_005_000_000(
    &aKeys_002_216_005_000_000[0], &aValues_002_216_005_000_000[0] );
   // Substitution set DateSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_216_005_003_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_005_003_000[] = {
      I_("M"),
      I_("J"),
      I_("A"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_005_003_000;
   const BFSubstitutionSet SubSet_002_216_005_003_000(
    &aKeys_002_216_005_003_000[0], &aValues_002_216_005_003_000[0] );
   // Substitution set DateSet.  Language: frCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_216_005_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_005_003_003[] = {
      I_("M"),
      I_("J"),
      I_("A"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_005_003_003;
   const BFSubstitutionSet SubSet_002_216_005_003_003(
    &aKeys_002_216_005_003_003[0], &aValues_002_216_005_003_003[0] );
   // Substitution set DateSet.  Language: frCA, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_216_005_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_005_003_011[] = {
      I_("M"),
      I_("J"),
      I_("A"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_005_003_011;
   const BFSubstitutionSet SubSet_002_216_005_003_011(
    &aKeys_002_216_005_003_011[0], &aValues_002_216_005_003_011[0] );
   // Substitution set DateSet.  Language: frCA, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_216_005_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_005_003_014[] = {
      I_("M"),
      I_("J"),
      I_("A"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_005_003_014;
   const BFSubstitutionSet SubSet_002_216_005_003_014(
    &aKeys_002_216_005_003_014[0], &aValues_002_216_005_003_014[0] );
   // Substitution set DateSet.  Language: enIE
   static const I_CHAR* aKeys_002_216_006_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_006_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_006_000_000;
   const BFSubstitutionSet SubSet_002_216_006_000_000(
    &aKeys_002_216_006_000_000[0], &aValues_002_216_006_000_000[0] );
   // Substitution set DateSet.  Language: enIE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_216_006_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_006_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_006_003_003;
   const BFSubstitutionSet SubSet_002_216_006_003_003(
    &aKeys_002_216_006_003_003[0], &aValues_002_216_006_003_003[0] );
   // Substitution set DateSet.  Language: enIE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_216_006_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_006_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_006_003_011;
   const BFSubstitutionSet SubSet_002_216_006_003_011(
    &aKeys_002_216_006_003_011[0], &aValues_002_216_006_003_011[0] );
   // Substitution set DateSet.  Language: enIE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_216_006_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_006_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_006_003_014;
   const BFSubstitutionSet SubSet_002_216_006_003_014(
    &aKeys_002_216_006_003_014[0], &aValues_002_216_006_003_014[0] );
   // Substitution set DateSet.  Language: deDE
   static const I_CHAR* aKeys_002_216_007_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_007_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_007_000_000;
   const BFSubstitutionSet SubSet_002_216_007_000_000(
    &aKeys_002_216_007_000_000[0], &aValues_002_216_007_000_000[0] );
   // Substitution set DateSet.  Language: deDE, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_216_007_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_007_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_007_003_003;
   const BFSubstitutionSet SubSet_002_216_007_003_003(
    &aKeys_002_216_007_003_003[0], &aValues_002_216_007_003_003[0] );
   // Substitution set DateSet.  Language: deDE, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_216_007_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_007_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_007_003_011;
   const BFSubstitutionSet SubSet_002_216_007_003_011(
    &aKeys_002_216_007_003_011[0], &aValues_002_216_007_003_011[0] );
   // Substitution set DateSet.  Language: deDE, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_216_007_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_007_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_007_003_014;
   const BFSubstitutionSet SubSet_002_216_007_003_014(
    &aKeys_002_216_007_003_014[0], &aValues_002_216_007_003_014[0] );
   // Substitution set DateSet.  Language: esEs
   static const I_CHAR* aKeys_002_216_008_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_008_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_008_000_000;
   const BFSubstitutionSet SubSet_002_216_008_000_000(
    &aKeys_002_216_008_000_000[0], &aValues_002_216_008_000_000[0] );
   // Substitution set DateSet.  Language: esEs, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_216_008_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_008_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_008_003_003;
   const BFSubstitutionSet SubSet_002_216_008_003_003(
    &aKeys_002_216_008_003_003[0], &aValues_002_216_008_003_003[0] );
   // Substitution set DateSet.  Language: esEs, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_216_008_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_008_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_008_003_011;
   const BFSubstitutionSet SubSet_002_216_008_003_011(
    &aKeys_002_216_008_003_011[0], &aValues_002_216_008_003_011[0] );
   // Substitution set DateSet.  Language: esEs, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_216_008_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_008_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_008_003_014;
   const BFSubstitutionSet SubSet_002_216_008_003_014(
    &aKeys_002_216_008_003_014[0], &aValues_002_216_008_003_014[0] );
   // Substitution set DateSet.  Language: enGB, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_216_009_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_216_009_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_009_003_003;
   const BFSubstitutionSet SubSet_002_216_009_003_003(
    &aKeys_002_216_009_003_003[0], &aValues_002_216_009_003_003[0] );
   // Substitution set DateSet.  Language: enGB, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_216_009_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_216_009_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_009_003_011;
   const BFSubstitutionSet SubSet_002_216_009_003_011(
    &aKeys_002_216_009_003_011[0], &aValues_002_216_009_003_011[0] );
   // Substitution set DateSet.  Language: enGB, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_216_009_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_216_009_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_009_003_014;
   const BFSubstitutionSet SubSet_002_216_009_003_014(
    &aKeys_002_216_009_003_014[0], &aValues_002_216_009_003_014[0] );
   // Substitution set DateSet.  Language: nlNL
   static const I_CHAR* aKeys_002_216_010_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_010_000_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_010_000_000;
   const BFSubstitutionSet SubSet_002_216_010_000_000(
    &aKeys_002_216_010_000_000[0], &aValues_002_216_010_000_000[0] );
   // Substitution set DateSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_216_010_003_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_010_003_000[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_010_003_000;
   const BFSubstitutionSet SubSet_002_216_010_003_000(
    &aKeys_002_216_010_003_000[0], &aValues_002_216_010_003_000[0] );
   // Substitution set DateSet.  Language: nlNL, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_216_010_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_010_003_003[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_010_003_003;
   const BFSubstitutionSet SubSet_002_216_010_003_003(
    &aKeys_002_216_010_003_003[0], &aValues_002_216_010_003_003[0] );
   // Substitution set DateSet.  Language: nlNL, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_216_010_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_010_003_011[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_010_003_011;
   const BFSubstitutionSet SubSet_002_216_010_003_011(
    &aKeys_002_216_010_003_011[0], &aValues_002_216_010_003_011[0] );
   // Substitution set DateSet.  Language: nlNL, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_216_010_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   static const I_CHAR* aValues_002_216_010_003_014[] = {
      I_("M"),
      I_("D"),
      I_("Y"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_010_003_014;
   const BFSubstitutionSet SubSet_002_216_010_003_014(
    &aKeys_002_216_010_003_014[0], &aValues_002_216_010_003_014[0] );
   // Substitution set DateSet.  Language: itIT, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_216_011_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_216_011_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_011_003_003;
   const BFSubstitutionSet SubSet_002_216_011_003_003(
    &aKeys_002_216_011_003_003[0], &aValues_002_216_011_003_003[0] );
   // Substitution set DateSet.  Language: itIT, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_216_011_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_216_011_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_011_003_011;
   const BFSubstitutionSet SubSet_002_216_011_003_011(
    &aKeys_002_216_011_003_011[0], &aValues_002_216_011_003_011[0] );
   // Substitution set DateSet.  Language: itIT, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_216_011_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_216_011_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_011_003_014;
   const BFSubstitutionSet SubSet_002_216_011_003_014(
    &aKeys_002_216_011_003_014[0], &aValues_002_216_011_003_014[0] );
   // Substitution set DateSet.  Language: thTH, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_216_012_003_003[] = {
      0x00
   };

   static const I_CHAR* aValues_002_216_012_003_003[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_012_003_003;
   const BFSubstitutionSet SubSet_002_216_012_003_003(
    &aKeys_002_216_012_003_003[0], &aValues_002_216_012_003_003[0] );
   // Substitution set DateSet.  Language: thTH, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_216_012_003_011[] = {
      0x00
   };

   static const I_CHAR* aValues_002_216_012_003_011[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_012_003_011;
   const BFSubstitutionSet SubSet_002_216_012_003_011(
    &aKeys_002_216_012_003_011[0], &aValues_002_216_012_003_011[0] );
   // Substitution set DateSet.  Language: thTH, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_216_012_003_014[] = {
      0x00
   };

   static const I_CHAR* aValues_002_216_012_003_014[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_216_012_003_014;
   const BFSubstitutionSet SubSet_002_216_012_003_014(
    &aKeys_002_216_012_003_014[0], &aValues_002_216_012_003_014[0] );
   // Substitution set RedemptionPayType.  Language: enUS
   static const I_CHAR* aKeys_002_217_001_000_000[] = {
      I_("D"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("R"),
      I_("D1"),
      I_("RA"),
      0x00
   };

   static const I_CHAR* aValues_002_217_001_000_000[] = {
      I_("Direct"),
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      I_("Clearing"),
      I_("Direct Deposit EFT"),
      I_("Redirect to Registration Agent"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_001_000_000;
   const BFSubstitutionSet SubSet_002_217_001_000_000(
    &aKeys_002_217_001_000_000[0], &aValues_002_217_001_000_000[0] );
   // Substitution set RedemptionPayType.  Language: enUS, Market: 2
   static const I_CHAR* aKeys_002_217_001_002_000[] = {
      I_("D"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("R"),
      I_("D1"),
      I_("RA"),
      0x00
   };

   static const I_CHAR* aValues_002_217_001_002_000[] = {
      I_("Direct"),
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      I_("Clearing"),
      I_("Direct Deposit EFT"),
      I_("Redirect to Registration Agent"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_001_002_000;
   const BFSubstitutionSet SubSet_002_217_001_002_000(
    &aKeys_002_217_001_002_000[0], &aValues_002_217_001_002_000[0] );
   // Substitution set RedemptionPayType.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_217_001_003_000[] = {
      I_("D"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("R"),
      I_("D1"),
      I_("RA"),
      0x00
   };

   static const I_CHAR* aValues_002_217_001_003_000[] = {
      I_("Direct"),
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      I_("Clearing"),
      I_("Direct Deposit EFT"),
      I_("Redirect to Registration Agent"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_001_003_000;
   const BFSubstitutionSet SubSet_002_217_001_003_000(
    &aKeys_002_217_001_003_000[0], &aValues_002_217_001_003_000[0] );
   // Substitution set RedemptionPayType.  Language: enCA
   static const I_CHAR* aKeys_002_217_003_000_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_217_003_000_000[] = {
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_003_000_000;
   const BFSubstitutionSet SubSet_002_217_003_000_000(
    &aKeys_002_217_003_000_000[0], &aValues_002_217_003_000_000[0] );
   // Substitution set RedemptionPayType.  Language: enCA, Market: 2
   static const I_CHAR* aKeys_002_217_003_002_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_217_003_002_000[] = {
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_003_002_000;
   const BFSubstitutionSet SubSet_002_217_003_002_000(
    &aKeys_002_217_003_002_000[0], &aValues_002_217_003_002_000[0] );
   // Substitution set RedemptionPayType.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_217_003_003_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("D1"),
      0x00
   };

   static const I_CHAR* aValues_002_217_003_003_000[] = {
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      I_("Direct Deposit EFT"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_003_003_000;
   const BFSubstitutionSet SubSet_002_217_003_003_000(
    &aKeys_002_217_003_003_000[0], &aValues_002_217_003_003_000[0] );
   // Substitution set RedemptionPayType.  Language: frFR
   static const I_CHAR* aKeys_002_217_004_000_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_217_004_000_000[] = {
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_004_000_000;
   const BFSubstitutionSet SubSet_002_217_004_000_000(
    &aKeys_002_217_004_000_000[0], &aValues_002_217_004_000_000[0] );
   // Substitution set RedemptionPayType.  Language: frFR, Market: 2
   static const I_CHAR* aKeys_002_217_004_002_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_217_004_002_000[] = {
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_004_002_000;
   const BFSubstitutionSet SubSet_002_217_004_002_000(
    &aKeys_002_217_004_002_000[0], &aValues_002_217_004_002_000[0] );
   // Substitution set RedemptionPayType.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_217_004_003_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_217_004_003_000[] = {
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_004_003_000;
   const BFSubstitutionSet SubSet_002_217_004_003_000(
    &aKeys_002_217_004_003_000[0], &aValues_002_217_004_003_000[0] );
   // Substitution set RedemptionPayType.  Language: frCA
   static const I_CHAR* aKeys_002_217_005_000_000[] = {
      I_("D"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("R"),
      I_("D1"),
      I_("RA"),
      0x00
   };

   static const I_CHAR* aValues_002_217_005_000_000[] = {
      I_("Direct"),
      I_("TEF au compte"),
      I_("Chèque à la main"),
      I_("Chèque généré par le système"),
      I_("Supprimer"),
      I_("Compensation"),
      I_("Dépôt direct TEF"),
      I_("Réacheminer à l'agent d'enregistrement"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_005_000_000;
   const BFSubstitutionSet SubSet_002_217_005_000_000(
    &aKeys_002_217_005_000_000[0], &aValues_002_217_005_000_000[0] );
   // Substitution set RedemptionPayType.  Language: frCA, Market: 2
   static const I_CHAR* aKeys_002_217_005_002_000[] = {
      I_("D"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("R"),
      I_("D1"),
      I_("RA"),
      0x00
   };

   static const I_CHAR* aValues_002_217_005_002_000[] = {
      I_("Direct"),
      I_("TEF au compte"),
      I_("Chèque à la main"),
      I_("Chèque généré par le système"),
      I_("Supprimer"),
      I_("Compensation"),
      I_("Dépôt direct TEF"),
      I_("Réacheminer à l'agent d'enregistrement"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_005_002_000;
   const BFSubstitutionSet SubSet_002_217_005_002_000(
    &aKeys_002_217_005_002_000[0], &aValues_002_217_005_002_000[0] );
   // Substitution set RedemptionPayType.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_217_005_003_000[] = {
      I_("D"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("R"),
      I_("D1"),
      I_("RA"),
      0x00
   };

   static const I_CHAR* aValues_002_217_005_003_000[] = {
      I_("Direct"),
      I_("TEF au compte"),
      I_("Chèque à la main"),
      I_("Chèque généré par le système"),
      I_("Supprimer"),
      I_("Compensation"),
      I_("Dépôt direct TEF"),
      I_("Réacheminer à l'agent d'enregistrement"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_005_003_000;
   const BFSubstitutionSet SubSet_002_217_005_003_000(
    &aKeys_002_217_005_003_000[0], &aValues_002_217_005_003_000[0] );
   // Substitution set RedemptionPayType.  Language: enIE
   static const I_CHAR* aKeys_002_217_006_000_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_217_006_000_000[] = {
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_006_000_000;
   const BFSubstitutionSet SubSet_002_217_006_000_000(
    &aKeys_002_217_006_000_000[0], &aValues_002_217_006_000_000[0] );
   // Substitution set RedemptionPayType.  Language: enIE, Market: 2
   static const I_CHAR* aKeys_002_217_006_002_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_217_006_002_000[] = {
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_006_002_000;
   const BFSubstitutionSet SubSet_002_217_006_002_000(
    &aKeys_002_217_006_002_000[0], &aValues_002_217_006_002_000[0] );
   // Substitution set RedemptionPayType.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_217_006_003_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_217_006_003_000[] = {
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_006_003_000;
   const BFSubstitutionSet SubSet_002_217_006_003_000(
    &aKeys_002_217_006_003_000[0], &aValues_002_217_006_003_000[0] );
   // Substitution set RedemptionPayType.  Language: deDE
   static const I_CHAR* aKeys_002_217_007_000_000[] = {
      I_("D"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("R"),
      0x00
   };

   static const I_CHAR* aValues_002_217_007_000_000[] = {
      I_("Direct"),
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      I_("Clearing"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_007_000_000;
   const BFSubstitutionSet SubSet_002_217_007_000_000(
    &aKeys_002_217_007_000_000[0], &aValues_002_217_007_000_000[0] );
   // Substitution set RedemptionPayType.  Language: deDE, Market: 2
   static const I_CHAR* aKeys_002_217_007_002_000[] = {
      I_("D"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("R"),
      0x00
   };

   static const I_CHAR* aValues_002_217_007_002_000[] = {
      I_("Direct"),
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      I_("Clearing"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_007_002_000;
   const BFSubstitutionSet SubSet_002_217_007_002_000(
    &aKeys_002_217_007_002_000[0], &aValues_002_217_007_002_000[0] );
   // Substitution set RedemptionPayType.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_217_007_003_000[] = {
      I_("D"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("R"),
      0x00
   };

   static const I_CHAR* aValues_002_217_007_003_000[] = {
      I_("Direct"),
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      I_("Clearing"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_007_003_000;
   const BFSubstitutionSet SubSet_002_217_007_003_000(
    &aKeys_002_217_007_003_000[0], &aValues_002_217_007_003_000[0] );
   // Substitution set RedemptionPayType.  Language: esEs
   static const I_CHAR* aKeys_002_217_008_000_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_217_008_000_000[] = {
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_008_000_000;
   const BFSubstitutionSet SubSet_002_217_008_000_000(
    &aKeys_002_217_008_000_000[0], &aValues_002_217_008_000_000[0] );
   // Substitution set RedemptionPayType.  Language: esEs, Market: 2
   static const I_CHAR* aKeys_002_217_008_002_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_217_008_002_000[] = {
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_008_002_000;
   const BFSubstitutionSet SubSet_002_217_008_002_000(
    &aKeys_002_217_008_002_000[0], &aValues_002_217_008_002_000[0] );
   // Substitution set RedemptionPayType.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_217_008_003_000[] = {
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      0x00
   };

   static const I_CHAR* aValues_002_217_008_003_000[] = {
      I_("EFT to Account"),
      I_("Manual Cheque"),
      I_("System Cheque"),
      I_("Suppress"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_008_003_000;
   const BFSubstitutionSet SubSet_002_217_008_003_000(
    &aKeys_002_217_008_003_000[0], &aValues_002_217_008_003_000[0] );
   // Substitution set RedemptionPayType.  Language: enGB, Market: 2
   static const I_CHAR* aKeys_002_217_009_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_217_009_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_009_002_000;
   const BFSubstitutionSet SubSet_002_217_009_002_000(
    &aKeys_002_217_009_002_000[0], &aValues_002_217_009_002_000[0] );
   // Substitution set RedemptionPayType.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_217_009_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_217_009_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_009_003_000;
   const BFSubstitutionSet SubSet_002_217_009_003_000(
    &aKeys_002_217_009_003_000[0], &aValues_002_217_009_003_000[0] );
   // Substitution set RedemptionPayType.  Language: nlNL
   static const I_CHAR* aKeys_002_217_010_000_000[] = {
      I_("D"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("R"),
      0x00
   };

   static const I_CHAR* aValues_002_217_010_000_000[] = {
      I_("Direct"),
      I_("EFO naar Account"),
      I_("Handgeschreven cheque"),
      I_("System Cheque"),
      I_("Negeren"),
      I_("Clearing"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_010_000_000;
   const BFSubstitutionSet SubSet_002_217_010_000_000(
    &aKeys_002_217_010_000_000[0], &aValues_002_217_010_000_000[0] );
   // Substitution set RedemptionPayType.  Language: nlNL, Market: 2
   static const I_CHAR* aKeys_002_217_010_002_000[] = {
      I_("D"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("R"),
      0x00
   };

   static const I_CHAR* aValues_002_217_010_002_000[] = {
      I_("Direct"),
      I_("EFO naar Account"),
      I_("Handgeschreven cheque"),
      I_("System Cheque"),
      I_("Negeren"),
      I_("Clearing"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_010_002_000;
   const BFSubstitutionSet SubSet_002_217_010_002_000(
    &aKeys_002_217_010_002_000[0], &aValues_002_217_010_002_000[0] );
   // Substitution set RedemptionPayType.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_217_010_003_000[] = {
      I_("D"),
      I_("E"),
      I_("M"),
      I_("S"),
      I_("X"),
      I_("R"),
      0x00
   };

   static const I_CHAR* aValues_002_217_010_003_000[] = {
      I_("Direct"),
      I_("EFO naar Account"),
      I_("Handgeschreven cheque"),
      I_("System Cheque"),
      I_("Negeren"),
      I_("Clearing"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_010_003_000;
   const BFSubstitutionSet SubSet_002_217_010_003_000(
    &aKeys_002_217_010_003_000[0], &aValues_002_217_010_003_000[0] );
   // Substitution set RedemptionPayType.  Language: itIT, Market: 2
   static const I_CHAR* aKeys_002_217_011_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_217_011_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_011_002_000;
   const BFSubstitutionSet SubSet_002_217_011_002_000(
    &aKeys_002_217_011_002_000[0], &aValues_002_217_011_002_000[0] );
   // Substitution set RedemptionPayType.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_217_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_217_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_011_003_000;
   const BFSubstitutionSet SubSet_002_217_011_003_000(
    &aKeys_002_217_011_003_000[0], &aValues_002_217_011_003_000[0] );
   // Substitution set RedemptionPayType.  Language: thTH, Market: 2
   static const I_CHAR* aKeys_002_217_012_002_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_217_012_002_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_012_002_000;
   const BFSubstitutionSet SubSet_002_217_012_002_000(
    &aKeys_002_217_012_002_000[0], &aValues_002_217_012_002_000[0] );
   // Substitution set RedemptionPayType.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_217_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_217_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_217_012_003_000;
   const BFSubstitutionSet SubSet_002_217_012_003_000(
    &aKeys_002_217_012_003_000[0], &aValues_002_217_012_003_000[0] );
   // Substitution set LV_TradeRolloverAtributeSet.  Language: enUS
   static const I_CHAR* aKeys_002_219_001_000_000[] = {
      I_("Batch"),
      I_("RedCode"),
      I_("DepositCode"),
      I_("GrossNet"),
      I_("AcquisitionFee"),
      I_("AcqFeeType"),
      I_("TaxReceiptIssued"),
      I_("DSCOverrideCode"),
      I_("DSCOverrideAmt"),
      I_("FromFundCurrency"),
      I_("SettleCurrency"),
      I_("ChargeWDFee"),
      I_("ProvSales"),
      I_("WireDirect"),
      I_("DepositDate"),
      I_("SettleDate"),
      I_("AccountabilityCode"),
      I_("BackdatedReason"),
      I_("TransNumber"),
      I_("DealDate"),
      I_("DealTime"),
      I_("CertRequired"),
      I_("SettledBy"),
      I_("OrderSource"),
      I_("SettlementSource"),
      I_("SettlementType"),
      I_("SourceOfFund"),
      I_("SourceOfAccount"),
      I_("TransRemarks1"),
      I_("TransRemarks2"),
      I_("TransRemarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_219_001_000_000[] = {
      I_("Batch"),
      I_("Redemption code"),
      I_("Deposit Type"),
      I_("Gross/Net"),
      I_("Acquisition Fee"),
      I_("Acquisition Fee Type"),
      I_("Contribution Receipt"),
      I_("Override DSC Code"),
      I_("Override DSC Amount"),
      I_("From Fund - Currency"),
      I_("To Fund - Currency"),
      I_("Charge Withdrawal Fee"),
      I_("Country/Province"),
      I_("Wire/Direct"),
      I_("Deposit date"),
      I_("Settlement date"),
      I_("Accountability  Code"),
      I_("Backdated  Reason"),
      I_("Trans. number"),
      I_("Deal Date"),
      I_("Deal Time"),
      I_("Certificate Required"),
      I_("Settled By"),
      I_("Order source"),
      I_("Settlement source"),
      I_("Settlement type"),
      I_("Source of  Fund"),
      I_("Source of Account"),
      I_("Remarks - Line1"),
      I_("Remarks - Line2"),
      I_("Remarks - Line3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_219_001_000_000;
   const BFSubstitutionSet SubSet_002_219_001_000_000(
    &aKeys_002_219_001_000_000[0], &aValues_002_219_001_000_000[0] );
   // Substitution set LV_TradeRolloverAtributeSet.  Language: enCA
   static const I_CHAR* aKeys_002_219_003_000_000[] = {
      I_("Batch"),
      I_("RedCode"),
      I_("GrossNet"),
      I_("AcquisitionFee"),
      I_("AcqFeeType"),
      I_("TaxReceiptIssued"),
      I_("DSCOverrideCode"),
      I_("DSCOverrideAmt"),
      I_("DepositDate"),
      I_("SettleDate"),
      I_("AccountabilityCode"),
      I_("BackdatedReason"),
      I_("TransNumber"),
      I_("DealDate"),
      I_("DealTime"),
      I_("CertRequired"),
      I_("SettledBy"),
      I_("OrderSource"),
      I_("SettlementSource"),
      I_("SettlementType"),
      I_("SourceOfFund"),
      I_("SourceOfAccount"),
      I_("TransRemarks1"),
      I_("TransRemarks2"),
      I_("TransRemarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_219_003_000_000[] = {
      I_("Batch"),
      I_("Redemption code"),
      I_("Gross/Net"),
      I_("Redemption  Fee"),
      I_("Redemption Fee Type"),
      I_("Tax receipt issued"),
      I_("DSC Override Code"),
      I_("DSC Override Amount"),
      I_("Deposit date"),
      I_("Settle date"),
      I_("Accountability  Code"),
      I_("Backdated  Reason"),
      I_("Trans. number"),
      I_("Deal Date"),
      I_("Deal Time"),
      I_("Certificate Required"),
      I_("Settle By"),
      I_("Order source"),
      I_("Settlement source"),
      I_("Settlement type"),
      I_("Source  Of  Fund"),
      I_("SourceOfAccount"),
      I_("Remarks - Line1"),
      I_("Remarks - Line2"),
      I_("Remarks - Line3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_219_003_000_000;
   const BFSubstitutionSet SubSet_002_219_003_000_000(
    &aKeys_002_219_003_000_000[0], &aValues_002_219_003_000_000[0] );
   // Substitution set LV_TradeRolloverAtributeSet.  Language: frFR
   static const I_CHAR* aKeys_002_219_004_000_000[] = {
      I_("Batch"),
      I_("RedCode"),
      I_("GrossNet"),
      I_("AcquisitionFee"),
      I_("AcqFeeType"),
      I_("TaxReceiptIssued"),
      I_("DSCOverrideCode"),
      I_("DSCOverrideAmt"),
      I_("DepositDate"),
      I_("SettleDate"),
      I_("AccountabilityCode"),
      I_("BackdatedReason"),
      I_("TransNumber"),
      I_("DealDate"),
      I_("DealTime"),
      I_("CertRequired"),
      I_("SettledBy"),
      I_("OrderSource"),
      I_("SettlementSource"),
      I_("SettlementType"),
      I_("SourceOfFund"),
      I_("SourceOfAccount"),
      I_("TransRemarks1"),
      I_("TransRemarks2"),
      I_("TransRemarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_219_004_000_000[] = {
      I_("Batch"),
      I_("Deposit date"),
      I_("Redemption  Fee"),
      I_("Settle currency"),
      I_("Exchange Rate"),
      I_("Status"),
      I_("Redemption Fee Type"),
      I_("GrossNet"),
      I_("Accountability  Code"),
      I_("Backdated  Reason"),
      I_("DSC Override Code"),
      I_("DSC Override Amount"),
      I_("Trans. number"),
      I_("Tax receipt issued"),
      I_("Suppress  Code"),
      I_("Wire/Direct"),
      I_("Settle By"),
      I_("Order source"),
      I_("Settlement source"),
      I_("Settlement type"),
      I_("Source  Of  Fund"),
      I_("SourceOfAccount"),
      I_("Remarks - Line1"),
      I_("Remarks - Line2"),
      I_("Remarks - Line3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_219_004_000_000;
   const BFSubstitutionSet SubSet_002_219_004_000_000(
    &aKeys_002_219_004_000_000[0], &aValues_002_219_004_000_000[0] );
   // Substitution set LV_TradeRolloverAtributeSet.  Language: frCA
   static const I_CHAR* aKeys_002_219_005_000_000[] = {
      I_("Batch"),
      I_("RedCode"),
      I_("DepositCode"),
      I_("GrossNet"),
      I_("AcquisitionFee"),
      I_("AcqFeeType"),
      I_("TaxReceiptIssued"),
      I_("DSCOverrideCode"),
      I_("DSCOverrideAmt"),
      I_("FromFundCurrency"),
      I_("SettleCurrency"),
      I_("ChargeWDFee"),
      I_("ProvSales"),
      I_("WireDirect"),
      I_("DepositDate"),
      I_("SettleDate"),
      I_("AccountabilityCode"),
      I_("BackdatedReason"),
      I_("TransNumber"),
      I_("DealDate"),
      I_("DealTime"),
      I_("CertRequired"),
      I_("SettledBy"),
      I_("OrderSource"),
      I_("SettlementSource"),
      I_("SettlementType"),
      I_("SourceOfFund"),
      I_("SourceOfAccount"),
      I_("TransRemarks1"),
      I_("TransRemarks2"),
      I_("TransRemarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_219_005_000_000[] = {
      I_("Lot"),
      I_("Code de rachat"),
      I_("Code de dépôt"),
      I_("Brut/net"),
      I_("Frais d'acquisition"),
      I_("Type de frais d'acquisition"),
      I_("Reçu de cotisation"),
      I_("Code de modification des FAR"),
      I_("Montant de modification des FAR"),
      I_("Fonds source - devise"),
      I_("Fonds cible - devise"),
      I_("Débiter des frais de retrait"),
      I_("Pays/province"),
      I_("Électronique/direct"),
      I_("Date de dépôt"),
      I_("Date de règlement"),
      I_("Code comptable"),
      I_("Raison d'antidatage"),
      I_("Numéro de transaction"),
      I_("Date d'opération "),
      I_("Heure d'opération"),
      I_("Certificat requis"),
      I_("Réglé par"),
      I_("Source de l'ordre"),
      I_("Source du règlement"),
      I_("Type de règlement"),
      I_("Source des fonds"),
      I_("Compte source"),
      I_("Remarques - ligne 1"),
      I_("Remarques - ligne 2"),
      I_("Remarques - ligne 3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_219_005_000_000;
   const BFSubstitutionSet SubSet_002_219_005_000_000(
    &aKeys_002_219_005_000_000[0], &aValues_002_219_005_000_000[0] );
   // Substitution set LV_TradeRolloverAtributeSet.  Language: enIE
   static const I_CHAR* aKeys_002_219_006_000_000[] = {
      I_("Batch"),
      I_("RedCode"),
      I_("GrossNet"),
      I_("AcquisitionFee"),
      I_("AcqFeeType"),
      I_("TaxReceiptIssued"),
      I_("DSCOverrideCode"),
      I_("DSCOverrideAmt"),
      I_("DepositDate"),
      I_("SettleDate"),
      I_("AccountabilityCode"),
      I_("BackdatedReason"),
      I_("TransNumber"),
      I_("DealDate"),
      I_("DealTime"),
      I_("CertRequired"),
      I_("SettledBy"),
      I_("OrderSource"),
      I_("SettlementSource"),
      I_("SettlementType"),
      I_("SourceOfFund"),
      I_("SourceOfAccount"),
      I_("TransRemarks1"),
      I_("TransRemarks2"),
      I_("TransRemarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_219_006_000_000[] = {
      I_("Batch"),
      I_("Deposit date"),
      I_("Redemption  Fee"),
      I_("Settle currency"),
      I_("Exchange Rate"),
      I_("Status"),
      I_("Redemption Fee Type"),
      I_("GrossNet"),
      I_("Accountability  Code"),
      I_("Backdated  Reason"),
      I_("DSC Override Code"),
      I_("DSC Override Amount"),
      I_("Trans. number"),
      I_("Tax receipt issued"),
      I_("Suppress  Code"),
      I_("Wire/Direct"),
      I_("Settle By"),
      I_("Order source"),
      I_("Settlement source"),
      I_("Settlement type"),
      I_("Source  Of  Fund"),
      I_("SourceOfAccount"),
      I_("Remarks - Line1"),
      I_("Remarks - Line2"),
      I_("Remarks - Line3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_219_006_000_000;
   const BFSubstitutionSet SubSet_002_219_006_000_000(
    &aKeys_002_219_006_000_000[0], &aValues_002_219_006_000_000[0] );
   // Substitution set LV_TradeRolloverAtributeSet.  Language: deDE
   static const I_CHAR* aKeys_002_219_007_000_000[] = {
      I_("Batch"),
      I_("RedCode"),
      I_("DepositCode"),
      I_("GrossNet"),
      I_("AcquisitionFee"),
      I_("AcqFeeType"),
      I_("TaxReceiptIssued"),
      I_("DSCOverrideCode"),
      I_("DSCOverrideAmt"),
      I_("FromFundCurrency"),
      I_("SettleCurrency"),
      I_("ChargeWDFee"),
      I_("ProvSales"),
      I_("WireDirect"),
      I_("DepositDate"),
      I_("SettleDate"),
      I_("AccountabilityCode"),
      I_("BackdatedReason"),
      I_("TransNumber"),
      I_("DealDate"),
      I_("DealTime"),
      I_("CertRequired"),
      I_("SettledBy"),
      I_("OrderSource"),
      I_("SettlementSource"),
      I_("SettlementType"),
      I_("SourceOfFund"),
      I_("SourceOfAccount"),
      I_("TransRemarks1"),
      I_("TransRemarks2"),
      I_("TransRemarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_219_007_000_000[] = {
      I_("Batch"),
      I_("Redemption code"),
      I_("Deposit Type"),
      I_("Gross/Net"),
      I_("Redemption  Fee"),
      I_("Redemption Fee Type"),
      I_("Tax receipt issued"),
      I_("DSC Override Code"),
      I_("DSC Override Amount"),
      I_("From Fund - Currency"),
      I_("To Fund - Currency"),
      I_("Charge Withdrawal Fee"),
      I_("Country/Province"),
      I_("Wire/Direct"),
      I_("Deposit date"),
      I_("Settle date"),
      I_("Accountability  Code"),
      I_("Backdated  Reason"),
      I_("Trans. number"),
      I_("Deal Date"),
      I_("Deal Time"),
      I_("Certificate Required"),
      I_("Settle By"),
      I_("Order source"),
      I_("Settlement source"),
      I_("Settlement type"),
      I_("Source  Of  Fund"),
      I_("SourceOfAccount"),
      I_("Remarks - Line1"),
      I_("Remarks - Line2"),
      I_("Remarks - Line3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_219_007_000_000;
   const BFSubstitutionSet SubSet_002_219_007_000_000(
    &aKeys_002_219_007_000_000[0], &aValues_002_219_007_000_000[0] );
   // Substitution set LV_TradeRolloverAtributeSet.  Language: esEs
   static const I_CHAR* aKeys_002_219_008_000_000[] = {
      I_("Batch"),
      I_("RedCode"),
      I_("GrossNet"),
      I_("AcquisitionFee"),
      I_("AcqFeeType"),
      I_("TaxReceiptIssued"),
      I_("DSCOverrideCode"),
      I_("DSCOverrideAmt"),
      I_("DepositDate"),
      I_("SettleDate"),
      I_("AccountabilityCode"),
      I_("BackdatedReason"),
      I_("TransNumber"),
      I_("DealDate"),
      I_("DealTime"),
      I_("CertRequired"),
      I_("SettledBy"),
      I_("OrderSource"),
      I_("SettlementSource"),
      I_("SettlementType"),
      I_("SourceOfFund"),
      I_("SourceOfAccount"),
      I_("TransRemarks1"),
      I_("TransRemarks2"),
      I_("TransRemarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_219_008_000_000[] = {
      I_("Batch"),
      I_("Redemption code"),
      I_("Gross/Net"),
      I_("Redemption  Fee"),
      I_("Redemption Fee Type"),
      I_("Tax receipt issued"),
      I_("DSC Override Code"),
      I_("DSC Override Amount"),
      I_("Deposit date"),
      I_("Settle date"),
      I_("Accountability  Code"),
      I_("Backdated  Reason"),
      I_("Trans. number"),
      I_("Deal Date"),
      I_("Deal Time"),
      I_("Certificate Required"),
      I_("Settle By"),
      I_("Order source"),
      I_("Settlement source"),
      I_("Settlement type"),
      I_("Source  Of  Fund"),
      I_("SourceOfAccount"),
      I_("Remarks - Line1"),
      I_("Remarks - Line2"),
      I_("Remarks - Line3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_219_008_000_000;
   const BFSubstitutionSet SubSet_002_219_008_000_000(
    &aKeys_002_219_008_000_000[0], &aValues_002_219_008_000_000[0] );
   // Substitution set LV_TradeRolloverAtributeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_219_010_000_000[] = {
      I_("Batch"),
      I_("RedCode"),
      I_("DepositCode"),
      I_("GrossNet"),
      I_("AcquisitionFee"),
      I_("AcqFeeType"),
      I_("TaxReceiptIssued"),
      I_("DSCOverrideCode"),
      I_("DSCOverrideAmt"),
      I_("FromFundCurrency"),
      I_("SettleCurrency"),
      I_("ChargeWDFee"),
      I_("ProvSales"),
      I_("WireDirect"),
      I_("DepositDate"),
      I_("SettleDate"),
      I_("AccountabilityCode"),
      I_("BackdatedReason"),
      I_("TransNumber"),
      I_("DealDate"),
      I_("DealTime"),
      I_("CertRequired"),
      I_("SettledBy"),
      I_("OrderSource"),
      I_("SettlementSource"),
      I_("SettlementType"),
      I_("SourceOfFund"),
      I_("SourceOfAccount"),
      I_("TransRemarks1"),
      I_("TransRemarks2"),
      I_("TransRemarks3"),
      0x00
   };

   static const I_CHAR* aValues_002_219_010_000_000[] = {
      I_("Batch"),
      I_("Redemption code"),
      I_("Deposit Type"),
      I_("Gross/Net"),
      I_("Acquisition Fee"),
      I_("Acquisition Fee Type"),
      I_("Contribution Receipt"),
      I_("Override DSC Code"),
      I_("Override DSC Amount"),
      I_("From Fund - Currency"),
      I_("To Fund - Currency"),
      I_("Charge Withdrawal Fee"),
      I_("Country/Province"),
      I_("Wire/Direct"),
      I_("Deposit date"),
      I_("Settlement date"),
      I_("Accountability  Code"),
      I_("Backdated  Reason"),
      I_("Trans. number"),
      I_("Deal Date"),
      I_("Deal Time"),
      I_("Certificate Required"),
      I_("Settled By"),
      I_("Order source"),
      I_("Settlement source"),
      I_("Settlement type"),
      I_("Source of  Fund"),
      I_("Source of Account"),
      I_("Remarks - Line1"),
      I_("Remarks - Line2"),
      I_("Remarks - Line3"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_219_010_000_000;
   const BFSubstitutionSet SubSet_002_219_010_000_000(
    &aKeys_002_219_010_000_000[0], &aValues_002_219_010_000_000[0] );
   // Substitution set SourceOfFundSet.  Language: enUS
   static const I_CHAR* aKeys_002_220_001_000_000[] = {
      I_("99"),
      I_("A9"),
      I_("AA"),
      I_("AB"),
      I_("AC"),
      I_("AD"),
      I_("AE"),
      I_("AF"),
      I_("AG"),
      I_("AI"),
      I_("AJ"),
      I_("AK"),
      I_("AL"),
      I_("AM"),
      I_("C9"),
      I_("CA"),
      I_("CB"),
      I_("CD"),
      I_("CE"),
      I_("CF "),
      I_("EA"),
      I_("EB"),
      I_("EC"),
      I_("G8"),
      I_("G9"),
      I_("GA"),
      I_("GB"),
      I_("GC"),
      I_("GD"),
      I_("GE "),
      I_("GF"),
      I_("GH"),
      I_("GI"),
      I_("H9"),
      I_("HA"),
      I_("I9"),
      I_("IA "),
      I_("IB"),
      I_("IC"),
      I_("ID"),
      I_("IE"),
      I_("IF"),
      I_("IG"),
      I_("IH"),
      I_("II"),
      I_("IJ "),
      I_("IK"),
      I_("IL"),
      I_("IM"),
      I_("IN"),
      I_("LA"),
      0x00
   };

   static const I_CHAR* aValues_002_220_001_000_000[] = {
      I_("Cash-Client"),
      I_("Other Internal - Seg Funds"),
      I_("Accumulated Annuity"),
      I_("Affinity Seg Funds"),
      I_("MLI Group Seg Fund"),
      I_("MLI ILC Investor"),
      I_("NAL Investor"),
      I_("Vista Fund"),
      I_("Best Of Class To Best Of Class"),
      I_("B To E"),
      I_("G to O"),
      I_("B to G"),
      I_("E to O"),
      I_("O to E"),
      I_("Other Internal - Life"),
      I_("Affinity GIC Fund"),
      I_("MLI Group GIC"),
      I_("MLI ILC Life"),
      I_("NAL Acct"),
      I_("Term Acct"),
      I_("Elliot And Page"),
      I_("Manulife Cabot"),
      I_("Manulife Securities"),
      I_("Manulife Bank"),
      I_("Other Banks"),
      I_("Bank Of Montreal"),
      I_("Bank Of Nova Scotia"),
      I_("CIBC"),
      I_("National Bank"),
      I_("Royal Bank"),
      I_("Toronto Dominion Bank"),
      I_("Manubank RSP Loan"),
      I_("Manubank Leverage"),
      I_("Other Trust"),
      I_("Canada Trust"),
      I_("Other Fund Companies"),
      I_("AGF"),
      I_("Altamira"),
      I_("CI Mutual Funds"),
      I_("CT Fund Services"),
      I_("Dynamic"),
      I_("Fidelity"),
      I_("Global Strategy"),
      I_("Investors Group"),
      I_("Mackenzie"),
      I_("MD Management LTD"),
      I_("Talvest"),
      I_("Templeton"),
      I_("Trimark"),
      I_("Spectrum United"),
      I_("MRS"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_220_001_000_000;
   const BFSubstitutionSet SubSet_002_220_001_000_000(
    &aKeys_002_220_001_000_000[0], &aValues_002_220_001_000_000[0] );
   // Substitution set SourceOfFundSet.  Language: enCA
   static const I_CHAR* aKeys_002_220_003_000_000[] = {
      I_("99"),
      I_("A9"),
      I_("AA"),
      I_("AB"),
      I_("AC"),
      I_("AD"),
      I_("AE"),
      I_("AF"),
      I_("AG"),
      I_("AI"),
      I_("AJ"),
      I_("AK"),
      I_("AL"),
      I_("AM"),
      I_("C9"),
      I_("CA"),
      I_("CB"),
      I_("CD"),
      I_("CE"),
      I_("CF "),
      I_("EA"),
      I_("EB"),
      I_("EC"),
      I_("G8"),
      I_("G9"),
      I_("GA"),
      I_("GB"),
      I_("GC"),
      I_("GD"),
      I_("GE "),
      I_("GF"),
      I_("GH"),
      I_("GI"),
      I_("H9"),
      I_("HA"),
      I_("I9"),
      I_("IA "),
      I_("IB"),
      I_("IC"),
      I_("ID"),
      I_("IE"),
      I_("IF"),
      I_("IG"),
      I_("IH"),
      I_("II"),
      I_("IJ "),
      I_("IK"),
      I_("IL"),
      I_("IM"),
      I_("IN"),
      I_("LA"),
      0x00
   };

   static const I_CHAR* aValues_002_220_003_000_000[] = {
      I_("Cash-Client"),
      I_("Other Internal - Seg Funds"),
      I_("Accumulated Annuity"),
      I_("Affinity Seg Funds"),
      I_("MLI Group Seg Fund"),
      I_("MLI ILC Investor"),
      I_("NAL Investor"),
      I_("Vista Fund"),
      I_("Best Of Class To Best Of Class"),
      I_("B To E"),
      I_("G to O"),
      I_("B to G"),
      I_("E to O"),
      I_("O to E"),
      I_("Other Internal - Life"),
      I_("Affinity GIC Fund"),
      I_("MLI Group GIC"),
      I_("MLI ILC Life"),
      I_("NAL Acct"),
      I_("Term Acct"),
      I_("Elliot And Page"),
      I_("Manulife Cabot"),
      I_("Manulife Securities"),
      I_("Manulife Bank"),
      I_("Other Banks"),
      I_("Bank Of Montreal"),
      I_("Bank Of Nova Scotia"),
      I_("CIBC"),
      I_("National Bank"),
      I_("Royal Bank"),
      I_("Toronto Dominion Bank"),
      I_("Manubank RSP Loan"),
      I_("Manubank Leverage"),
      I_("Other Trust"),
      I_("Canada Trust"),
      I_("Other Fund Companies"),
      I_("AGF"),
      I_("Altamira"),
      I_("CI Mutual Funds"),
      I_("CT Fund Services"),
      I_("Dynamic"),
      I_("Fidelity"),
      I_("Global Strategy"),
      I_("Investors Group"),
      I_("Mackenzie"),
      I_("MD Management LTD"),
      I_("Talvest"),
      I_("Templeton"),
      I_("Trimark"),
      I_("Spectrum United"),
      I_("MRS"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_220_003_000_000;
   const BFSubstitutionSet SubSet_002_220_003_000_000(
    &aKeys_002_220_003_000_000[0], &aValues_002_220_003_000_000[0] );
   // Substitution set SourceOfFundSet.  Language: frFR
   static const I_CHAR* aKeys_002_220_004_000_000[] = {
      I_("99"),
      I_("A9"),
      I_("AA"),
      I_("AB"),
      I_("AC"),
      I_("AD"),
      I_("AE"),
      I_("AF"),
      I_("AG"),
      I_("AI"),
      I_("AJ"),
      I_("AK"),
      I_("AL"),
      I_("AM"),
      I_("C9"),
      I_("CA"),
      I_("CB"),
      I_("CD"),
      I_("CE"),
      I_("CF "),
      I_("EA"),
      I_("EB"),
      I_("EC"),
      I_("G8"),
      I_("G9"),
      I_("GA"),
      I_("GB"),
      I_("GC"),
      I_("GD"),
      I_("GE "),
      I_("GF"),
      I_("GH"),
      I_("GI"),
      I_("H9"),
      I_("HA"),
      I_("I9"),
      I_("IA "),
      I_("IB"),
      I_("IC"),
      I_("ID"),
      I_("IE"),
      I_("IF"),
      I_("IG"),
      I_("IH"),
      I_("II"),
      I_("IJ "),
      I_("IK"),
      I_("IL"),
      I_("IM"),
      I_("IN"),
      I_("LA"),
      0x00
   };

   static const I_CHAR* aValues_002_220_004_000_000[] = {
      I_("Cash-Client"),
      I_("Other Internal - Seg Funds"),
      I_("Accumulated Annuity"),
      I_("Affinity Seg Funds"),
      I_("MLI Group Seg Fund"),
      I_("MLI ILC Investor"),
      I_("NAL Investor"),
      I_("Vista Fund"),
      I_("Best Of Class To Best Of Class"),
      I_("B To E"),
      I_("G to O"),
      I_("B to G"),
      I_("E to O"),
      I_("O to E"),
      I_("Other Internal - Life"),
      I_("Affinity GIC Fund"),
      I_("MLI Group GIC"),
      I_("MLI ILC Life"),
      I_("NAL Acct"),
      I_("Term Acct"),
      I_("Elliot And Page"),
      I_("Manulife Cabot"),
      I_("Manulife Securities"),
      I_("Manulife Bank"),
      I_("Other Banks"),
      I_("Bank Of Montreal"),
      I_("Bank Of Nova Scotia"),
      I_("CIBC"),
      I_("National Bank"),
      I_("Royal Bank"),
      I_("Toronto Dominion Bank"),
      I_("Manubank RSP Loan"),
      I_("Manubank Leverage"),
      I_("Other Trust"),
      I_("Canada Trust"),
      I_("Other Fund Companies"),
      I_("AGF"),
      I_("Altamira"),
      I_("CI Mutual Funds"),
      I_("CT Fund Services"),
      I_("Dynamic"),
      I_("Fidelity"),
      I_("Global Strategy"),
      I_("Investors Group"),
      I_("Mackenzie"),
      I_("MD Management LTD"),
      I_("Talvest"),
      I_("Templeton"),
      I_("Trimark"),
      I_("Spectrum United"),
      I_("MRS"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_220_004_000_000;
   const BFSubstitutionSet SubSet_002_220_004_000_000(
    &aKeys_002_220_004_000_000[0], &aValues_002_220_004_000_000[0] );
   // Substitution set SourceOfFundSet.  Language: frCA
   static const I_CHAR* aKeys_002_220_005_000_000[] = {
      I_("99"),
      I_("A9"),
      I_("AA"),
      I_("AB"),
      I_("AC"),
      I_("AD"),
      I_("AE"),
      I_("AF"),
      I_("AG"),
      I_("AI"),
      I_("AJ"),
      I_("AK"),
      I_("AL"),
      I_("AM"),
      I_("C9"),
      I_("CA"),
      I_("CB"),
      I_("CD"),
      I_("CE"),
      I_("CF "),
      I_("EA"),
      I_("EB"),
      I_("EC"),
      I_("G8"),
      I_("G9"),
      I_("GA"),
      I_("GB"),
      I_("GC"),
      I_("GD"),
      I_("GE "),
      I_("GF"),
      I_("GH"),
      I_("GI"),
      I_("H9"),
      I_("HA"),
      I_("I9"),
      I_("IA "),
      I_("IB"),
      I_("IC"),
      I_("ID"),
      I_("IE"),
      I_("IF"),
      I_("IG"),
      I_("IH"),
      I_("II"),
      I_("IJ "),
      I_("IK"),
      I_("IL"),
      I_("IM"),
      I_("IN"),
      I_("LA"),
      0x00
   };

   static const I_CHAR* aValues_002_220_005_000_000[] = {
      I_("COMPTANT ? CLIENT"),
      I_("Autre interne ? fonds distincts"),
      I_("Rente accumulée"),
      I_("Fonds distincts Affinité"),
      I_("FONDS DISTINCTS GROUPE MLI"),
      I_("MLI ILC Investor"),
      I_("NAL Investor"),
      I_("Fonds Vista"),
      I_("Best Of Class vers Best Of Class"),
      I_("B à E"),
      I_("G à O"),
      I_("B à G"),
      I_("E à O"),
      I_("O à E"),
      I_("Autre interne ? Vie"),
      I_("Fonds GIC Affinité"),
      I_("MLI Group GIC"),
      I_("MLI ILC Life"),
      I_("Compte national"),
      I_("Compte à terme"),
      I_("Elliot And Page"),
      I_("MANUVIE-CABOT"),
      I_("PLACEMENTS MANUVIE"),
      I_("Banque Manuvie"),
      I_("Autres banques"),
      I_("Banque de Montréal"),
      I_("Banque de Nouvelle-Écosse"),
      I_("CIBC"),
      I_("Banque Nationale"),
      I_("Banque Royale"),
      I_("Banque Toronto-Dominion"),
      I_("Prêt RER Banque Manuvie"),
      I_("Levier financier Banque Manuvie"),
      I_("Autre fiducie"),
      I_("Canada Trust"),
      I_("Autres sociétés de fonds"),
      I_("AGF"),
      I_("Altamira"),
      I_("CI Fonds communs"),
      I_("CT Fund Services"),
      I_("Fonds Dynamique"),
      I_("Fidelity"),
      I_("Stratégie globale"),
      I_("Groupe Investors"),
      I_("Mackensie"),
      I_("MD Management LTD"),
      I_("Talvest"),
      I_("Templeton"),
      I_("Trimark"),
      I_("Spectrum United"),
      I_("MRS"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_220_005_000_000;
   const BFSubstitutionSet SubSet_002_220_005_000_000(
    &aKeys_002_220_005_000_000[0], &aValues_002_220_005_000_000[0] );
   // Substitution set SourceOfFundSet.  Language: enIE
   static const I_CHAR* aKeys_002_220_006_000_000[] = {
      I_("99"),
      I_("A9"),
      I_("AA"),
      I_("AB"),
      I_("AC"),
      I_("AD"),
      I_("AE"),
      I_("AF"),
      I_("AG"),
      I_("AI"),
      I_("AJ"),
      I_("AK"),
      I_("AL"),
      I_("AM"),
      I_("C9"),
      I_("CA"),
      I_("CB"),
      I_("CD"),
      I_("CE"),
      I_("CF "),
      I_("EA"),
      I_("EB"),
      I_("EC"),
      I_("G8"),
      I_("G9"),
      I_("GA"),
      I_("GB"),
      I_("GC"),
      I_("GD"),
      I_("GE "),
      I_("GF"),
      I_("GH"),
      I_("GI"),
      I_("H9"),
      I_("HA"),
      I_("I9"),
      I_("IA "),
      I_("IB"),
      I_("IC"),
      I_("ID"),
      I_("IE"),
      I_("IF"),
      I_("IG"),
      I_("IH"),
      I_("II"),
      I_("IJ "),
      I_("IK"),
      I_("IL"),
      I_("IM"),
      I_("IN"),
      I_("LA"),
      0x00
   };

   static const I_CHAR* aValues_002_220_006_000_000[] = {
      I_("Cash-Client"),
      I_("Other Internal - Seg Funds"),
      I_("Accumulated Annuity"),
      I_("Affinity Seg Funds"),
      I_("MLI Group Seg Fund"),
      I_("MLI ILC Investor"),
      I_("NAL Investor"),
      I_("Vista Fund"),
      I_("Best Of Class To Best Of Class"),
      I_("B To E"),
      I_("G to O"),
      I_("B to G"),
      I_("E to O"),
      I_("O to E"),
      I_("Other Internal - Life"),
      I_("Affinity GIC Fund"),
      I_("MLI Group GIC"),
      I_("MLI ILC Life"),
      I_("NAL Acct"),
      I_("Term Acct"),
      I_("Elliot And Page"),
      I_("Manulife Cabot"),
      I_("Manulife Securities"),
      I_("Manulife Bank"),
      I_("Other Banks"),
      I_("Bank Of Montreal"),
      I_("Bank Of Nova Scotia"),
      I_("CIBC"),
      I_("National Bank"),
      I_("Royal Bank"),
      I_("Toronto Dominion Bank"),
      I_("Manubank RSP Loan"),
      I_("Manubank Leverage"),
      I_("Other Trust"),
      I_("Canada Trust"),
      I_("Other Fund Companies"),
      I_("AGF"),
      I_("Altamira"),
      I_("CI Mutual Funds"),
      I_("CT Fund Services"),
      I_("Dynamic"),
      I_("Fidelity"),
      I_("Global Strategy"),
      I_("Investors Group"),
      I_("Mackenzie"),
      I_("MD Management LTD"),
      I_("Talvest"),
      I_("Templeton"),
      I_("Trimark"),
      I_("Spectrum United"),
      I_("MRS"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_220_006_000_000;
   const BFSubstitutionSet SubSet_002_220_006_000_000(
    &aKeys_002_220_006_000_000[0], &aValues_002_220_006_000_000[0] );
   // Substitution set SourceOfFundSet.  Language: deDE
   static const I_CHAR* aKeys_002_220_007_000_000[] = {
      I_("99"),
      I_("A9"),
      I_("AA"),
      I_("AB"),
      I_("AC"),
      I_("AD"),
      I_("AE"),
      I_("AF"),
      I_("AG"),
      I_("AI"),
      I_("AJ"),
      I_("AK"),
      I_("AL"),
      I_("AM"),
      I_("C9"),
      I_("CA"),
      I_("CB"),
      I_("CD"),
      I_("CE"),
      I_("CF "),
      I_("EA"),
      I_("EB"),
      I_("EC"),
      I_("G8"),
      I_("G9"),
      I_("GA"),
      I_("GB"),
      I_("GC"),
      I_("GD"),
      I_("GE "),
      I_("GF"),
      I_("GH"),
      I_("GI"),
      I_("H9"),
      I_("HA"),
      I_("I9"),
      I_("IA "),
      I_("IB"),
      I_("IC"),
      I_("ID"),
      I_("IE"),
      I_("IF"),
      I_("IG"),
      I_("IH"),
      I_("II"),
      I_("IJ "),
      I_("IK"),
      I_("IL"),
      I_("IM"),
      I_("IN"),
      I_("LA"),
      0x00
   };

   static const I_CHAR* aValues_002_220_007_000_000[] = {
      I_("Cash-Client"),
      I_("Other Internal - Seg Funds"),
      I_("Accumulated Annuity"),
      I_("Affinity Seg Funds"),
      I_("MLI Group Seg Fund"),
      I_("MLI ILC Investor"),
      I_("NAL Investor"),
      I_("Vista Fund"),
      I_("Best Of Class To Best Of Class"),
      I_("B To E"),
      I_("G to O"),
      I_("B to G"),
      I_("E to O"),
      I_("O to E"),
      I_("Other Internal - Life"),
      I_("Affinity GIC Fund"),
      I_("MLI Group GIC"),
      I_("MLI ILC Life"),
      I_("NAL Acct"),
      I_("Term Acct"),
      I_("Elliot And Page"),
      I_("Manulife Cabot"),
      I_("Manulife Securities"),
      I_("Manulife Bank"),
      I_("Other Banks"),
      I_("Bank Of Montreal"),
      I_("Bank Of Nova Scotia"),
      I_("CIBC"),
      I_("National Bank"),
      I_("Royal Bank"),
      I_("Toronto Dominion Bank"),
      I_("Manubank RSP Loan"),
      I_("Manubank Leverage"),
      I_("Other Trust"),
      I_("Canada Trust"),
      I_("Other Fund Companies"),
      I_("AGF"),
      I_("Altamira"),
      I_("CI Mutual Funds"),
      I_("CT Fund Services"),
      I_("Dynamic"),
      I_("Fidelity"),
      I_("Global Strategy"),
      I_("Investors Group"),
      I_("Mackenzie"),
      I_("MD Management LTD"),
      I_("Talvest"),
      I_("Templeton"),
      I_("Trimark"),
      I_("Spectrum United"),
      I_("MRS"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_220_007_000_000;
   const BFSubstitutionSet SubSet_002_220_007_000_000(
    &aKeys_002_220_007_000_000[0], &aValues_002_220_007_000_000[0] );
   // Substitution set SourceOfFundSet.  Language: esEs
   static const I_CHAR* aKeys_002_220_008_000_000[] = {
      I_("99"),
      I_("A9"),
      I_("AA"),
      I_("AB"),
      I_("AC"),
      I_("AD"),
      I_("AE"),
      I_("AF"),
      I_("AG"),
      I_("AI"),
      I_("AJ"),
      I_("AK"),
      I_("AL"),
      I_("AM"),
      I_("C9"),
      I_("CA"),
      I_("CB"),
      I_("CD"),
      I_("CE"),
      I_("CF "),
      I_("EA"),
      I_("EB"),
      I_("EC"),
      I_("G8"),
      I_("G9"),
      I_("GA"),
      I_("GB"),
      I_("GC"),
      I_("GD"),
      I_("GE "),
      I_("GF"),
      I_("GH"),
      I_("GI"),
      I_("H9"),
      I_("HA"),
      I_("I9"),
      I_("IA "),
      I_("IB"),
      I_("IC"),
      I_("ID"),
      I_("IE"),
      I_("IF"),
      I_("IG"),
      I_("IH"),
      I_("II"),
      I_("IJ "),
      I_("IK"),
      I_("IL"),
      I_("IM"),
      I_("IN"),
      I_("LA"),
      0x00
   };

   static const I_CHAR* aValues_002_220_008_000_000[] = {
      I_("Cash-Client"),
      I_("Other Internal - Seg Funds"),
      I_("Accumulated Annuity"),
      I_("Affinity Seg Funds"),
      I_("MLI Group Seg Fund"),
      I_("MLI ILC Investor"),
      I_("NAL Investor"),
      I_("Vista Fund"),
      I_("Best Of Class To Best Of Class"),
      I_("B To E"),
      I_("G to O"),
      I_("B to G"),
      I_("E to O"),
      I_("O to E"),
      I_("Other Internal - Life"),
      I_("Affinity GIC Fund"),
      I_("MLI Group GIC"),
      I_("MLI ILC Life"),
      I_("NAL Acct"),
      I_("Term Acct"),
      I_("Elliot And Page"),
      I_("Manulife Cabot"),
      I_("Manulife Securities"),
      I_("Manulife Bank"),
      I_("Other Banks"),
      I_("Bank Of Montreal"),
      I_("Bank Of Nova Scotia"),
      I_("CIBC"),
      I_("National Bank"),
      I_("Royal Bank"),
      I_("Toronto Dominion Bank"),
      I_("Manubank RSP Loan"),
      I_("Manubank Leverage"),
      I_("Other Trust"),
      I_("Canada Trust"),
      I_("Other Fund Companies"),
      I_("AGF"),
      I_("Altamira"),
      I_("CI Mutual Funds"),
      I_("CT Fund Services"),
      I_("Dynamic"),
      I_("Fidelity"),
      I_("Global Strategy"),
      I_("Investors Group"),
      I_("Mackenzie"),
      I_("MD Management LTD"),
      I_("Talvest"),
      I_("Templeton"),
      I_("Trimark"),
      I_("Spectrum United"),
      I_("MRS"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_220_008_000_000;
   const BFSubstitutionSet SubSet_002_220_008_000_000(
    &aKeys_002_220_008_000_000[0], &aValues_002_220_008_000_000[0] );
   // Substitution set SourceOfFundSet.  Language: nlNL
   static const I_CHAR* aKeys_002_220_010_000_000[] = {
      I_("99"),
      I_("A9"),
      I_("AA"),
      I_("AB"),
      I_("AC"),
      I_("AD"),
      I_("AE"),
      I_("AF"),
      I_("AG"),
      I_("AI"),
      I_("AJ"),
      I_("AK"),
      I_("AL"),
      I_("AM"),
      I_("C9"),
      I_("CA"),
      I_("CB"),
      I_("CD"),
      I_("CE"),
      I_("CF "),
      I_("EA"),
      I_("EB"),
      I_("EC"),
      I_("G8"),
      I_("G9"),
      I_("GA"),
      I_("GB"),
      I_("GC"),
      I_("GD"),
      I_("GE "),
      I_("GF"),
      I_("GH"),
      I_("GI"),
      I_("H9"),
      I_("HA"),
      I_("I9"),
      I_("IA "),
      I_("IB"),
      I_("IC"),
      I_("ID"),
      I_("IE"),
      I_("IF"),
      I_("IG"),
      I_("IH"),
      I_("II"),
      I_("IJ "),
      I_("IK"),
      I_("IL"),
      I_("IM"),
      I_("IN"),
      I_("LA"),
      0x00
   };

   static const I_CHAR* aValues_002_220_010_000_000[] = {
      I_("CASH-CLIENT"),
      I_("OVERIG INTERNE - SEG-FONDSEN"),
      I_("GEACCUMULEERDE LIJFRENTE"),
      I_("Affinity Seg Funds"),
      I_("MLI GROUP SEG-FUND"),
      I_("MLI ILC Investor"),
      I_("NAL INVESTOR"),
      I_("VISTA FUND"),
      I_("Best Of Class To Best Of Class"),
      I_("B naar E"),
      I_("G naar O"),
      I_("B naar G"),
      I_("E naar O"),
      I_("O naar E"),
      I_("OVERIG INTERN - LEVEN"),
      I_("AFFINITY GIC FUND"),
      I_("MLI GROUP GIC"),
      I_("MLI ILC LIFE"),
      I_("NAL ACCT"),
      I_("Term Acct"),
      I_("ELLIOT AND PAGE"),
      I_("MANULIFE CABOT"),
      I_("MANULIFE SECURITIES"),
      I_("MANULIFE BANK"),
      I_("OVERIGE BANKEN"),
      I_("BANK OF MONTREAL"),
      I_("BANK OF NOVA SCOTIA"),
      I_("CIBC"),
      I_("NATIONAL BANK"),
      I_("ROYAL BANK"),
      I_("TORONTO DOMINION BANK"),
      I_("MANUBANK RSP LOAN"),
      I_("MANUBANK LEVERAGE"),
      I_("OVERIGE TRUST"),
      I_("CANADA TRUST"),
      I_("OVERIGE FONDSBEDRIJVEN"),
      I_("AGF"),
      I_("ALTAMIRA"),
      I_("CI MUTUAL FUNDS"),
      I_("CT FUND SERVICES"),
      I_("DYNAMIC"),
      I_("FIDELITY"),
      I_("GLOBAL STRATEGY"),
      I_("INVESTORS GROUP"),
      I_("MACKENZIE"),
      I_("MD MANAGEMENT LTD"),
      I_("TALVEST"),
      I_("TEMPLETON"),
      I_("TRIMARK"),
      I_("SPECTRUM UNITED"),
      I_("MRS"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_220_010_000_000;
   const BFSubstitutionSet SubSet_002_220_010_000_000(
    &aKeys_002_220_010_000_000[0], &aValues_002_220_010_000_000[0] );
   // Substitution set DividentInstructionsSet.  Language: enUS
   static const I_CHAR* aKeys_002_221_001_000_000[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_001_000_000[] = {
      I_("Reinvest Dividend"),
      I_("Payout Dividend"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_001_000_000;
   const BFSubstitutionSet SubSet_002_221_001_000_000(
    &aKeys_002_221_001_000_000[0], &aValues_002_221_001_000_000[0] );
   // Substitution set DividentInstructionsSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_221_001_003_000[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_001_003_000[] = {
      I_("Reinvest Dividend"),
      I_("Payout Dividend"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_001_003_000;
   const BFSubstitutionSet SubSet_002_221_001_003_000(
    &aKeys_002_221_001_003_000[0], &aValues_002_221_001_003_000[0] );
   // Substitution set DividentInstructionsSet.  Language: enUS, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_221_001_003_003[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_001_003_003[] = {
      I_("Reinvest Dividend"),
      I_("Payout Dividend"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_001_003_003;
   const BFSubstitutionSet SubSet_002_221_001_003_003(
    &aKeys_002_221_001_003_003[0], &aValues_002_221_001_003_003[0] );
   // Substitution set DividentInstructionsSet.  Language: enUS, Market: 3, Client: 11
   static const I_CHAR* aKeys_002_221_001_003_011[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_001_003_011[] = {
      I_("Reinvest Dividend"),
      I_("Payout Dividend"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_001_003_011;
   const BFSubstitutionSet SubSet_002_221_001_003_011(
    &aKeys_002_221_001_003_011[0], &aValues_002_221_001_003_011[0] );
   // Substitution set DividentInstructionsSet.  Language: enUS, Market: 3, Client: 14
   static const I_CHAR* aKeys_002_221_001_003_014[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_001_003_014[] = {
      I_("Reinvest Dividend"),
      I_("Payout Dividend"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_001_003_014;
   const BFSubstitutionSet SubSet_002_221_001_003_014(
    &aKeys_002_221_001_003_014[0], &aValues_002_221_001_003_014[0] );
   // Substitution set DividentInstructionsSet.  Language: enCA
   static const I_CHAR* aKeys_002_221_003_000_000[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_003_000_000[] = {
      I_("Reinvest Dividend"),
      I_("Payout Dividend"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_003_000_000;
   const BFSubstitutionSet SubSet_002_221_003_000_000(
    &aKeys_002_221_003_000_000[0], &aValues_002_221_003_000_000[0] );
   // Substitution set DividentInstructionsSet.  Language: frFR
   static const I_CHAR* aKeys_002_221_004_000_000[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_004_000_000[] = {
      I_("Réinvestir le dividende"),
      I_("Payer le dividende"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_004_000_000;
   const BFSubstitutionSet SubSet_002_221_004_000_000(
    &aKeys_002_221_004_000_000[0], &aValues_002_221_004_000_000[0] );
   // Substitution set DividentInstructionsSet.  Language: frCA
   static const I_CHAR* aKeys_002_221_005_000_000[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_005_000_000[] = {
      I_("Réinvestissement de dividendes"),
      I_("Versement de dividendes"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_005_000_000;
   const BFSubstitutionSet SubSet_002_221_005_000_000(
    &aKeys_002_221_005_000_000[0], &aValues_002_221_005_000_000[0] );
   // Substitution set DividentInstructionsSet.  Language: frCA, Market: 3, Client: 3
   static const I_CHAR* aKeys_002_221_005_003_003[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_005_003_003[] = {
      I_("Réinvestir le dividende"),
      I_("Payer le dividende"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_005_003_003;
   const BFSubstitutionSet SubSet_002_221_005_003_003(
    &aKeys_002_221_005_003_003[0], &aValues_002_221_005_003_003[0] );
   // Substitution set DividentInstructionsSet.  Language: enIE
   static const I_CHAR* aKeys_002_221_006_000_000[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_006_000_000[] = {
      I_("Reinvest Dividend"),
      I_("Payout Dividend"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_006_000_000;
   const BFSubstitutionSet SubSet_002_221_006_000_000(
    &aKeys_002_221_006_000_000[0], &aValues_002_221_006_000_000[0] );
   // Substitution set DividentInstructionsSet.  Language: deDE
   static const I_CHAR* aKeys_002_221_007_000_000[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_007_000_000[] = {
      I_("Reinvest Dividend"),
      I_("Payout Dividend"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_007_000_000;
   const BFSubstitutionSet SubSet_002_221_007_000_000(
    &aKeys_002_221_007_000_000[0], &aValues_002_221_007_000_000[0] );
   // Substitution set DividentInstructionsSet.  Language: esEs
   static const I_CHAR* aKeys_002_221_008_000_000[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_008_000_000[] = {
      I_("Reinvest Dividend"),
      I_("Payout Dividend"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_008_000_000;
   const BFSubstitutionSet SubSet_002_221_008_000_000(
    &aKeys_002_221_008_000_000[0], &aValues_002_221_008_000_000[0] );
   // Substitution set DividentInstructionsSet.  Language: nlNL
   static const I_CHAR* aKeys_002_221_010_000_000[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_010_000_000[] = {
      I_("Reinvest Dividend"),
      I_("Payout Dividend"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_010_000_000;
   const BFSubstitutionSet SubSet_002_221_010_000_000(
    &aKeys_002_221_010_000_000[0], &aValues_002_221_010_000_000[0] );
   // Substitution set DividentInstructionsSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_221_010_003_000[] = {
      I_("R"),
      I_("P"),
      0x00
   };

   static const I_CHAR* aValues_002_221_010_003_000[] = {
      I_("Reinvest Dividend"),
      I_("Payout Dividend"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_221_010_003_000;
   const BFSubstitutionSet SubSet_002_221_010_003_000(
    &aKeys_002_221_010_003_000[0], &aValues_002_221_010_003_000[0] );
   // Substitution set AmtTypeRedemptionSet.  Language: enUS
   static const I_CHAR* aKeys_002_222_001_000_000[] = {
      I_("F"),
      I_("D"),
      I_("T"),
      I_("P"),
      I_("U"),
      I_("M"),
      0x00
   };

   static const I_CHAR* aValues_002_222_001_000_000[] = {
      I_("All Free Units"),
      I_("Amount"),
      I_("Free/NonAge"),
      I_("% of Units "),
      I_("Units "),
      I_("Matured Units"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_222_001_000_000;
   const BFSubstitutionSet SubSet_002_222_001_000_000(
    &aKeys_002_222_001_000_000[0], &aValues_002_222_001_000_000[0] );
   // Substitution set AmtTypeRedemptionSet.  Language: enCA
   static const I_CHAR* aKeys_002_222_003_000_000[] = {
      I_("F"),
      I_("D"),
      I_("T"),
      I_("P"),
      I_("U"),
      0x00
   };

   static const I_CHAR* aValues_002_222_003_000_000[] = {
      I_("All Free Units"),
      I_("Amount"),
      I_("Free/NonAge"),
      I_("% of Units "),
      I_("Units "),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_222_003_000_000;
   const BFSubstitutionSet SubSet_002_222_003_000_000(
    &aKeys_002_222_003_000_000[0], &aValues_002_222_003_000_000[0] );
   // Substitution set AmtTypeRedemptionSet.  Language: frCA
   static const I_CHAR* aKeys_002_222_005_000_000[] = {
      I_("F"),
      I_("D"),
      I_("T"),
      I_("P"),
      I_("U"),
      I_("M"),
      0x00
   };

   static const I_CHAR* aValues_002_222_005_000_000[] = {
      I_("Toutes les unités sans frais"),
      I_("Montant"),
      I_("Sans frais/non mature"),
      I_("Pourcentage d'unités"),
      I_("Unités"),
      I_("Unités matures"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_222_005_000_000;
   const BFSubstitutionSet SubSet_002_222_005_000_000(
    &aKeys_002_222_005_000_000[0], &aValues_002_222_005_000_000[0] );
   // Substitution set AmtTypeRedemptionSet.  Language: enIE
   static const I_CHAR* aKeys_002_222_006_000_000[] = {
      I_("F"),
      I_("D"),
      I_("T"),
      I_("P"),
      I_("U"),
      0x00
   };

   static const I_CHAR* aValues_002_222_006_000_000[] = {
      I_("Free Units"),
      I_("Amount"),
      I_("Free/NonAge"),
      I_("% of Units "),
      I_("Units "),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_222_006_000_000;
   const BFSubstitutionSet SubSet_002_222_006_000_000(
    &aKeys_002_222_006_000_000[0], &aValues_002_222_006_000_000[0] );
   // Substitution set AmtTypeRedemptionSet.  Language: deDE
   static const I_CHAR* aKeys_002_222_007_000_000[] = {
      I_("F"),
      I_("D"),
      I_("T"),
      I_("P"),
      I_("U"),
      0x00
   };

   static const I_CHAR* aValues_002_222_007_000_000[] = {
      I_("All Free Units"),
      I_("Amount"),
      I_("Free/NonAge"),
      I_("% of Units "),
      I_("Units "),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_222_007_000_000;
   const BFSubstitutionSet SubSet_002_222_007_000_000(
    &aKeys_002_222_007_000_000[0], &aValues_002_222_007_000_000[0] );
   // Substitution set AmtTypeRedemptionSet.  Language: esEs
   static const I_CHAR* aKeys_002_222_008_000_000[] = {
      I_("F"),
      I_("D"),
      I_("T"),
      I_("P"),
      I_("U"),
      0x00
   };

   static const I_CHAR* aValues_002_222_008_000_000[] = {
      I_("All Free Units"),
      I_("Amount"),
      I_("Free/NonAge"),
      I_("% of Units "),
      I_("Units "),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_222_008_000_000;
   const BFSubstitutionSet SubSet_002_222_008_000_000(
    &aKeys_002_222_008_000_000[0], &aValues_002_222_008_000_000[0] );
   // Substitution set AmtTypeRedemptionSet.  Language: nlNL
   static const I_CHAR* aKeys_002_222_010_000_000[] = {
      I_("F"),
      I_("D"),
      I_("T"),
      I_("P"),
      I_("U"),
      0x00
   };

   static const I_CHAR* aValues_002_222_010_000_000[] = {
      I_("All Free Units"),
      I_("Amount"),
      I_("Free/NonAge"),
      I_("% of Units "),
      I_("Eenheden"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_222_010_000_000;
   const BFSubstitutionSet SubSet_002_222_010_000_000(
    &aKeys_002_222_010_000_000[0], &aValues_002_222_010_000_000[0] );
   // Substitution set DeliveryMethodSet.  Language: enUS
   static const I_CHAR* aKeys_002_223_001_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("01"),
      I_("02"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      0x00
   };

   static const I_CHAR* aValues_002_223_001_000_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      I_("Direct Mail - Canada Post"),
      I_("Direct Mail - ICS"),
      I_("Direct Mail - ICS (Out of Ontario)"),
      I_("Direct Mail - Courier"),
      I_("Return to Banking - Canada Post"),
      I_("Return to Banking - ICS"),
      I_("Return to Banking - Hand Deliver"),
      I_("Return to Banking - Deliver to CDS"),
      I_("Return to Banking - Pickup"),
      I_("Return to Banking - Courier"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_001_000_000;
   const BFSubstitutionSet SubSet_002_223_001_000_000(
    &aKeys_002_223_001_000_000[0], &aValues_002_223_001_000_000[0] );
   // Substitution set DeliveryMethodSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_223_001_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_001_003_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_001_003_000;
   const BFSubstitutionSet SubSet_002_223_001_003_000(
    &aKeys_002_223_001_003_000[0], &aValues_002_223_001_003_000[0] );
   // Substitution set DeliveryMethodSet.  Language: enUS, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_223_001_003_017[] = {
      I_("01"),
      I_("02"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      0x00
   };

   static const I_CHAR* aValues_002_223_001_003_017[] = {
      I_("Direct Mail - Canada Post"),
      I_("Direct Mail - ICS"),
      I_("Direct Mail - ICS (Out of Ontario)"),
      I_("Direct Mail - Courier"),
      I_("Return to Banking - Canada Post"),
      I_("Return to Banking - ICS"),
      I_("Return to Banking - Hand Deliver"),
      I_("Return to Banking - Deliver to CDS"),
      I_("Return to Banking - Pickup"),
      I_("Return to Banking - Courier"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_001_003_017;
   const BFSubstitutionSet SubSet_002_223_001_003_017(
    &aKeys_002_223_001_003_017[0], &aValues_002_223_001_003_017[0] );
   // Substitution set DeliveryMethodSet.  Language: enUS, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_223_001_003_019[] = {
      I_("01"),
      I_("02"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      0x00
   };

   static const I_CHAR* aValues_002_223_001_003_019[] = {
      I_("Direct Mail - Canada Post"),
      I_("Direct Mail - ICS"),
      I_("Direct Mail - ICS (Out of Ontario)"),
      I_("Direct Mail - Courier"),
      I_("Return to Banking - Canada Post"),
      I_("Return to Banking - ICS"),
      I_("Return to Banking - Hand Deliver"),
      I_("Return to Banking - Deliver to CDS"),
      I_("Return to Banking - Pickup"),
      I_("Return to Banking - Courier"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_001_003_019;
   const BFSubstitutionSet SubSet_002_223_001_003_019(
    &aKeys_002_223_001_003_019[0], &aValues_002_223_001_003_019[0] );
   // Substitution set DeliveryMethodSet.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_223_001_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_001_004_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_001_004_000;
   const BFSubstitutionSet SubSet_002_223_001_004_000(
    &aKeys_002_223_001_004_000[0], &aValues_002_223_001_004_000[0] );
   // Substitution set DeliveryMethodSet.  Language: enCA
   static const I_CHAR* aKeys_002_223_003_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_003_000_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_003_000_000;
   const BFSubstitutionSet SubSet_002_223_003_000_000(
    &aKeys_002_223_003_000_000[0], &aValues_002_223_003_000_000[0] );
   // Substitution set DeliveryMethodSet.  Language: enCA, Market: 3
   static const I_CHAR* aKeys_002_223_003_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_003_003_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_003_003_000;
   const BFSubstitutionSet SubSet_002_223_003_003_000(
    &aKeys_002_223_003_003_000[0], &aValues_002_223_003_003_000[0] );
   // Substitution set DeliveryMethodSet.  Language: enCA, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_223_003_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_003_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_003_003_017;
   const BFSubstitutionSet SubSet_002_223_003_003_017(
    &aKeys_002_223_003_003_017[0], &aValues_002_223_003_003_017[0] );
   // Substitution set DeliveryMethodSet.  Language: enCA, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_223_003_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_003_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_003_003_019;
   const BFSubstitutionSet SubSet_002_223_003_003_019(
    &aKeys_002_223_003_003_019[0], &aValues_002_223_003_003_019[0] );
   // Substitution set DeliveryMethodSet.  Language: enCA, Market: 4
   static const I_CHAR* aKeys_002_223_003_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_003_004_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_003_004_000;
   const BFSubstitutionSet SubSet_002_223_003_004_000(
    &aKeys_002_223_003_004_000[0], &aValues_002_223_003_004_000[0] );
   // Substitution set DeliveryMethodSet.  Language: frFR, Market: 3
   static const I_CHAR* aKeys_002_223_004_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_004_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_004_003_000;
   const BFSubstitutionSet SubSet_002_223_004_003_000(
    &aKeys_002_223_004_003_000[0], &aValues_002_223_004_003_000[0] );
   // Substitution set DeliveryMethodSet.  Language: frFR, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_223_004_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_004_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_004_003_017;
   const BFSubstitutionSet SubSet_002_223_004_003_017(
    &aKeys_002_223_004_003_017[0], &aValues_002_223_004_003_017[0] );
   // Substitution set DeliveryMethodSet.  Language: frFR, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_223_004_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_004_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_004_003_019;
   const BFSubstitutionSet SubSet_002_223_004_003_019(
    &aKeys_002_223_004_003_019[0], &aValues_002_223_004_003_019[0] );
   // Substitution set DeliveryMethodSet.  Language: frFR, Market: 4
   static const I_CHAR* aKeys_002_223_004_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_004_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_004_004_000;
   const BFSubstitutionSet SubSet_002_223_004_004_000(
    &aKeys_002_223_004_004_000[0], &aValues_002_223_004_004_000[0] );
   // Substitution set DeliveryMethodSet.  Language: frCA
   static const I_CHAR* aKeys_002_223_005_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("01"),
      I_("02"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      0x00
   };

   static const I_CHAR* aValues_002_223_005_000_000[] = {
      I_("Poste régulière"),
      I_("ICS"),
      I_("Service de messagerie"),
      I_("Ramassage"),
      I_("Poste prioritaire"),
      I_("Livraison par porteur"),
      I_("Interservice"),
      I_("Courtier"),
      I_("Case postale CDS"),
      I_("Déposé au compte bancaire"),
      I_("Courrier direct - Postes Canada"),
      I_("Courrier direct - ICS"),
      I_("Courrier direct - ICS (à l'extérieur de l'Ontario)"),
      I_("Courrier direct - service de messagerie"),
      I_("Remboursement aux services bancaires - Postes Canada"),
      I_("Remboursement aux services bancaires - ICS"),
      I_("Remboursement aux services bancaires - livraison par porteur"),
      I_("Remboursement aux services bancaires - livraison à CDS"),
      I_("Remboursement aux services bancaires - ramassage"),
      I_("Remboursement aux services bancaires - service de messagerie"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_005_000_000;
   const BFSubstitutionSet SubSet_002_223_005_000_000(
    &aKeys_002_223_005_000_000[0], &aValues_002_223_005_000_000[0] );
   // Substitution set DeliveryMethodSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_223_005_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_005_003_000[] = {
      I_("Poste régulière"),
      I_("ICS"),
      I_("Service de messagerie"),
      I_("Ramassage"),
      I_("Poste prioritaire"),
      I_("Livraison par porteur"),
      I_("Interservice"),
      I_("Courtier"),
      I_("Case postale CDS"),
      I_("Déposé au compte bancaire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_005_003_000;
   const BFSubstitutionSet SubSet_002_223_005_003_000(
    &aKeys_002_223_005_003_000[0], &aValues_002_223_005_003_000[0] );
   // Substitution set DeliveryMethodSet.  Language: frCA, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_223_005_003_017[] = {
      I_("01"),
      I_("02"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      0x00
   };

   static const I_CHAR* aValues_002_223_005_003_017[] = {
      I_("Courrier direct - Postes Canada"),
      I_("Courrier direct - ICS"),
      I_("Courrier direct - ICS (à l'extérieur de l'Ontario)"),
      I_("Courrier direct - service de messagerie"),
      I_("Remboursement aux services bancaires - Postes Canada"),
      I_("Remboursement aux services bancaires - ICS"),
      I_("Remboursement aux services bancaires - livraison par porteur"),
      I_("Remboursement aux services bancaires - livraison à CDS"),
      I_("Remboursement aux services bancaires - ramassage"),
      I_("Remboursement aux services bancaires - service de messagerie"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_005_003_017;
   const BFSubstitutionSet SubSet_002_223_005_003_017(
    &aKeys_002_223_005_003_017[0], &aValues_002_223_005_003_017[0] );
   // Substitution set DeliveryMethodSet.  Language: frCA, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_223_005_003_019[] = {
      I_("01"),
      I_("02"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      0x00
   };

   static const I_CHAR* aValues_002_223_005_003_019[] = {
      I_("Courrier direct - Postes Canada"),
      I_("Courrier direct - ICS"),
      I_("Courrier direct - ICS (à l'extérieur de l'Ontario)"),
      I_("Courrier direct - service de messagerie"),
      I_("Remboursement aux services bancaires - Postes Canada"),
      I_("Remboursement aux services bancaires - ICS"),
      I_("Remboursement aux services bancaires - livraison par porteur"),
      I_("Remboursement aux services bancaires - livraison à CDS"),
      I_("Remboursement aux services bancaires - ramassage"),
      I_("Remboursement aux services bancaires - service de messagerie"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_005_003_019;
   const BFSubstitutionSet SubSet_002_223_005_003_019(
    &aKeys_002_223_005_003_019[0], &aValues_002_223_005_003_019[0] );
   // Substitution set DeliveryMethodSet.  Language: frCA, Market: 4
   static const I_CHAR* aKeys_002_223_005_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_005_004_000[] = {
      I_("Poste régulière"),
      I_("ICS"),
      I_("Service de messagerie"),
      I_("Ramassage"),
      I_("Poste prioritaire"),
      I_("Livraison par porteur"),
      I_("Interservice"),
      I_("Courtier"),
      I_("Case postale CDS"),
      I_("Déposé au compte bancaire"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_005_004_000;
   const BFSubstitutionSet SubSet_002_223_005_004_000(
    &aKeys_002_223_005_004_000[0], &aValues_002_223_005_004_000[0] );
   // Substitution set DeliveryMethodSet.  Language: enIE
   static const I_CHAR* aKeys_002_223_006_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_006_000_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_006_000_000;
   const BFSubstitutionSet SubSet_002_223_006_000_000(
    &aKeys_002_223_006_000_000[0], &aValues_002_223_006_000_000[0] );
   // Substitution set DeliveryMethodSet.  Language: enIE, Market: 3
   static const I_CHAR* aKeys_002_223_006_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_006_003_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_006_003_000;
   const BFSubstitutionSet SubSet_002_223_006_003_000(
    &aKeys_002_223_006_003_000[0], &aValues_002_223_006_003_000[0] );
   // Substitution set DeliveryMethodSet.  Language: enIE, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_223_006_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_006_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_006_003_017;
   const BFSubstitutionSet SubSet_002_223_006_003_017(
    &aKeys_002_223_006_003_017[0], &aValues_002_223_006_003_017[0] );
   // Substitution set DeliveryMethodSet.  Language: enIE, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_223_006_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_006_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_006_003_019;
   const BFSubstitutionSet SubSet_002_223_006_003_019(
    &aKeys_002_223_006_003_019[0], &aValues_002_223_006_003_019[0] );
   // Substitution set DeliveryMethodSet.  Language: enIE, Market: 4
   static const I_CHAR* aKeys_002_223_006_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_006_004_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_006_004_000;
   const BFSubstitutionSet SubSet_002_223_006_004_000(
    &aKeys_002_223_006_004_000[0], &aValues_002_223_006_004_000[0] );
   // Substitution set DeliveryMethodSet.  Language: deDE
   static const I_CHAR* aKeys_002_223_007_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_007_000_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_007_000_000;
   const BFSubstitutionSet SubSet_002_223_007_000_000(
    &aKeys_002_223_007_000_000[0], &aValues_002_223_007_000_000[0] );
   // Substitution set DeliveryMethodSet.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_223_007_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_007_003_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_007_003_000;
   const BFSubstitutionSet SubSet_002_223_007_003_000(
    &aKeys_002_223_007_003_000[0], &aValues_002_223_007_003_000[0] );
   // Substitution set DeliveryMethodSet.  Language: deDE, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_223_007_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_007_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_007_003_017;
   const BFSubstitutionSet SubSet_002_223_007_003_017(
    &aKeys_002_223_007_003_017[0], &aValues_002_223_007_003_017[0] );
   // Substitution set DeliveryMethodSet.  Language: deDE, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_223_007_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_007_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_007_003_019;
   const BFSubstitutionSet SubSet_002_223_007_003_019(
    &aKeys_002_223_007_003_019[0], &aValues_002_223_007_003_019[0] );
   // Substitution set DeliveryMethodSet.  Language: deDE, Market: 4
   static const I_CHAR* aKeys_002_223_007_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_007_004_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_007_004_000;
   const BFSubstitutionSet SubSet_002_223_007_004_000(
    &aKeys_002_223_007_004_000[0], &aValues_002_223_007_004_000[0] );
   // Substitution set DeliveryMethodSet.  Language: esEs
   static const I_CHAR* aKeys_002_223_008_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_008_000_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_008_000_000;
   const BFSubstitutionSet SubSet_002_223_008_000_000(
    &aKeys_002_223_008_000_000[0], &aValues_002_223_008_000_000[0] );
   // Substitution set DeliveryMethodSet.  Language: esEs, Market: 3
   static const I_CHAR* aKeys_002_223_008_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_008_003_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_008_003_000;
   const BFSubstitutionSet SubSet_002_223_008_003_000(
    &aKeys_002_223_008_003_000[0], &aValues_002_223_008_003_000[0] );
   // Substitution set DeliveryMethodSet.  Language: esEs, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_223_008_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_008_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_008_003_017;
   const BFSubstitutionSet SubSet_002_223_008_003_017(
    &aKeys_002_223_008_003_017[0], &aValues_002_223_008_003_017[0] );
   // Substitution set DeliveryMethodSet.  Language: esEs, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_223_008_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_008_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_008_003_019;
   const BFSubstitutionSet SubSet_002_223_008_003_019(
    &aKeys_002_223_008_003_019[0], &aValues_002_223_008_003_019[0] );
   // Substitution set DeliveryMethodSet.  Language: esEs, Market: 4
   static const I_CHAR* aKeys_002_223_008_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_008_004_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Dealer"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_008_004_000;
   const BFSubstitutionSet SubSet_002_223_008_004_000(
    &aKeys_002_223_008_004_000[0], &aValues_002_223_008_004_000[0] );
   // Substitution set DeliveryMethodSet.  Language: enGB, Market: 3
   static const I_CHAR* aKeys_002_223_009_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_009_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_009_003_000;
   const BFSubstitutionSet SubSet_002_223_009_003_000(
    &aKeys_002_223_009_003_000[0], &aValues_002_223_009_003_000[0] );
   // Substitution set DeliveryMethodSet.  Language: enGB, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_223_009_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_009_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_009_003_017;
   const BFSubstitutionSet SubSet_002_223_009_003_017(
    &aKeys_002_223_009_003_017[0], &aValues_002_223_009_003_017[0] );
   // Substitution set DeliveryMethodSet.  Language: enGB, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_223_009_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_009_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_009_003_019;
   const BFSubstitutionSet SubSet_002_223_009_003_019(
    &aKeys_002_223_009_003_019[0], &aValues_002_223_009_003_019[0] );
   // Substitution set DeliveryMethodSet.  Language: enGB, Market: 4
   static const I_CHAR* aKeys_002_223_009_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_009_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_009_004_000;
   const BFSubstitutionSet SubSet_002_223_009_004_000(
    &aKeys_002_223_009_004_000[0], &aValues_002_223_009_004_000[0] );
   // Substitution set DeliveryMethodSet.  Language: nlNL
   static const I_CHAR* aKeys_002_223_010_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_010_000_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Handelaar"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_010_000_000;
   const BFSubstitutionSet SubSet_002_223_010_000_000(
    &aKeys_002_223_010_000_000[0], &aValues_002_223_010_000_000[0] );
   // Substitution set DeliveryMethodSet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_223_010_003_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_010_003_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Handelaar"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_010_003_000;
   const BFSubstitutionSet SubSet_002_223_010_003_000(
    &aKeys_002_223_010_003_000[0], &aValues_002_223_010_003_000[0] );
   // Substitution set DeliveryMethodSet.  Language: nlNL, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_223_010_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_010_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_010_003_017;
   const BFSubstitutionSet SubSet_002_223_010_003_017(
    &aKeys_002_223_010_003_017[0], &aValues_002_223_010_003_017[0] );
   // Substitution set DeliveryMethodSet.  Language: nlNL, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_223_010_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_010_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_010_003_019;
   const BFSubstitutionSet SubSet_002_223_010_003_019(
    &aKeys_002_223_010_003_019[0], &aValues_002_223_010_003_019[0] );
   // Substitution set DeliveryMethodSet.  Language: nlNL, Market: 4
   static const I_CHAR* aKeys_002_223_010_004_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_223_010_004_000[] = {
      I_("Regular Mail"),
      I_("ICS"),
      I_("Courier"),
      I_("Picked Up"),
      I_("Priority Post"),
      I_("Hand Deliver"),
      I_("Inter Office"),
      I_("Handelaar"),
      I_("CDS Lock Box"),
      I_("Deposited to Bank Account"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_010_004_000;
   const BFSubstitutionSet SubSet_002_223_010_004_000(
    &aKeys_002_223_010_004_000[0], &aValues_002_223_010_004_000[0] );
   // Substitution set DeliveryMethodSet.  Language: itIT, Market: 3
   static const I_CHAR* aKeys_002_223_011_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_011_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_011_003_000;
   const BFSubstitutionSet SubSet_002_223_011_003_000(
    &aKeys_002_223_011_003_000[0], &aValues_002_223_011_003_000[0] );
   // Substitution set DeliveryMethodSet.  Language: itIT, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_223_011_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_011_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_011_003_017;
   const BFSubstitutionSet SubSet_002_223_011_003_017(
    &aKeys_002_223_011_003_017[0], &aValues_002_223_011_003_017[0] );
   // Substitution set DeliveryMethodSet.  Language: itIT, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_223_011_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_011_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_011_003_019;
   const BFSubstitutionSet SubSet_002_223_011_003_019(
    &aKeys_002_223_011_003_019[0], &aValues_002_223_011_003_019[0] );
   // Substitution set DeliveryMethodSet.  Language: itIT, Market: 4
   static const I_CHAR* aKeys_002_223_011_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_011_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_011_004_000;
   const BFSubstitutionSet SubSet_002_223_011_004_000(
    &aKeys_002_223_011_004_000[0], &aValues_002_223_011_004_000[0] );
   // Substitution set DeliveryMethodSet.  Language: thTH, Market: 3
   static const I_CHAR* aKeys_002_223_012_003_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_012_003_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_012_003_000;
   const BFSubstitutionSet SubSet_002_223_012_003_000(
    &aKeys_002_223_012_003_000[0], &aValues_002_223_012_003_000[0] );
   // Substitution set DeliveryMethodSet.  Language: thTH, Market: 3, Client: 17
   static const I_CHAR* aKeys_002_223_012_003_017[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_012_003_017[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_012_003_017;
   const BFSubstitutionSet SubSet_002_223_012_003_017(
    &aKeys_002_223_012_003_017[0], &aValues_002_223_012_003_017[0] );
   // Substitution set DeliveryMethodSet.  Language: thTH, Market: 3, Client: 19
   static const I_CHAR* aKeys_002_223_012_003_019[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_012_003_019[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_012_003_019;
   const BFSubstitutionSet SubSet_002_223_012_003_019(
    &aKeys_002_223_012_003_019[0], &aValues_002_223_012_003_019[0] );
   // Substitution set DeliveryMethodSet.  Language: thTH, Market: 4
   static const I_CHAR* aKeys_002_223_012_004_000[] = {
      0x00
   };

   static const I_CHAR* aValues_002_223_012_004_000[] = {
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_223_012_004_000;
   const BFSubstitutionSet SubSet_002_223_012_004_000(
    &aKeys_002_223_012_004_000[0], &aValues_002_223_012_004_000[0] );
   // Substitution set TransTypeEDTRSet.  Language: enUS
   static const I_CHAR* aKeys_002_224_001_000_000[] = {
      I_("ED"),
      I_("TR"),
      0x00
   };

   static const I_CHAR* aValues_002_224_001_000_000[] = {
      I_("Purchase"),
      I_("Exchange"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_224_001_000_000;
   const BFSubstitutionSet SubSet_002_224_001_000_000(
    &aKeys_002_224_001_000_000[0], &aValues_002_224_001_000_000[0] );
   // Substitution set TransTypeEDTRSet.  Language: enCA
   static const I_CHAR* aKeys_002_224_003_000_000[] = {
      I_("ED"),
      I_("TR"),
      0x00
   };

   static const I_CHAR* aValues_002_224_003_000_000[] = {
      I_("Purchase"),
      I_("Exchange"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_224_003_000_000;
   const BFSubstitutionSet SubSet_002_224_003_000_000(
    &aKeys_002_224_003_000_000[0], &aValues_002_224_003_000_000[0] );
   // Substitution set TransTypeEDTRSet.  Language: frCA
   static const I_CHAR* aKeys_002_224_005_000_000[] = {
      I_("ED"),
      I_("TR"),
      0x00
   };

   static const I_CHAR* aValues_002_224_005_000_000[] = {
      I_("Achat"),
      I_("Échange"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_224_005_000_000;
   const BFSubstitutionSet SubSet_002_224_005_000_000(
    &aKeys_002_224_005_000_000[0], &aValues_002_224_005_000_000[0] );
   // Substitution set TransTypeEDTRSet.  Language: enIE
   static const I_CHAR* aKeys_002_224_006_000_000[] = {
      I_("ED"),
      I_("TR"),
      0x00
   };

   static const I_CHAR* aValues_002_224_006_000_000[] = {
      I_("Purchase"),
      I_("Exchange"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_224_006_000_000;
   const BFSubstitutionSet SubSet_002_224_006_000_000(
    &aKeys_002_224_006_000_000[0], &aValues_002_224_006_000_000[0] );
   // Substitution set TransTypeEDTRSet.  Language: deDE
   static const I_CHAR* aKeys_002_224_007_000_000[] = {
      I_("ED"),
      I_("TR"),
      0x00
   };

   static const I_CHAR* aValues_002_224_007_000_000[] = {
      I_("Purchase"),
      I_("Exchange"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_224_007_000_000;
   const BFSubstitutionSet SubSet_002_224_007_000_000(
    &aKeys_002_224_007_000_000[0], &aValues_002_224_007_000_000[0] );
   // Substitution set TransTypeEDTRSet.  Language: esEs
   static const I_CHAR* aKeys_002_224_008_000_000[] = {
      I_("ED"),
      I_("TR"),
      0x00
   };

   static const I_CHAR* aValues_002_224_008_000_000[] = {
      I_("Purchase"),
      I_("Exchange"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_224_008_000_000;
   const BFSubstitutionSet SubSet_002_224_008_000_000(
    &aKeys_002_224_008_000_000[0], &aValues_002_224_008_000_000[0] );
   // Substitution set TransTypeEDTRSet.  Language: nlNL
   static const I_CHAR* aKeys_002_224_010_000_000[] = {
      I_("ED"),
      I_("TR"),
      0x00
   };

   static const I_CHAR* aValues_002_224_010_000_000[] = {
      I_("Aankoop"),
      I_("Ruil"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_224_010_000_000;
   const BFSubstitutionSet SubSet_002_224_010_000_000(
    &aKeys_002_224_010_000_000[0], &aValues_002_224_010_000_000[0] );
   // Substitution set ChangeViewSet.  Language: enUS
   static const I_CHAR* aKeys_002_225_001_000_000[] = {
      I_("C"),
      I_("V"),
      0x00
   };

   static const I_CHAR* aValues_002_225_001_000_000[] = {
      I_("Change"),
      I_("View"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_225_001_000_000;
   const BFSubstitutionSet SubSet_002_225_001_000_000(
    &aKeys_002_225_001_000_000[0], &aValues_002_225_001_000_000[0] );
   // Substitution set ChangeViewSet.  Language: enCA
   static const I_CHAR* aKeys_002_225_003_000_000[] = {
      I_("C"),
      I_("V"),
      0x00
   };

   static const I_CHAR* aValues_002_225_003_000_000[] = {
      I_("Change"),
      I_("View"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_225_003_000_000;
   const BFSubstitutionSet SubSet_002_225_003_000_000(
    &aKeys_002_225_003_000_000[0], &aValues_002_225_003_000_000[0] );
   // Substitution set ChangeViewSet.  Language: frCA
   static const I_CHAR* aKeys_002_225_005_000_000[] = {
      I_("C"),
      I_("V"),
      0x00
   };

   static const I_CHAR* aValues_002_225_005_000_000[] = {
      I_("Changement "),
      I_("Affichage"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_225_005_000_000;
   const BFSubstitutionSet SubSet_002_225_005_000_000(
    &aKeys_002_225_005_000_000[0], &aValues_002_225_005_000_000[0] );
   // Substitution set ChangeViewSet.  Language: enIE
   static const I_CHAR* aKeys_002_225_006_000_000[] = {
      I_("C"),
      I_("V"),
      0x00
   };

   static const I_CHAR* aValues_002_225_006_000_000[] = {
      I_("Change"),
      I_("View"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_225_006_000_000;
   const BFSubstitutionSet SubSet_002_225_006_000_000(
    &aKeys_002_225_006_000_000[0], &aValues_002_225_006_000_000[0] );
   // Substitution set ChangeViewSet.  Language: deDE
   static const I_CHAR* aKeys_002_225_007_000_000[] = {
      I_("C"),
      I_("V"),
      0x00
   };

   static const I_CHAR* aValues_002_225_007_000_000[] = {
      I_("Change"),
      I_("View"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_225_007_000_000;
   const BFSubstitutionSet SubSet_002_225_007_000_000(
    &aKeys_002_225_007_000_000[0], &aValues_002_225_007_000_000[0] );
   // Substitution set ChangeViewSet.  Language: esEs
   static const I_CHAR* aKeys_002_225_008_000_000[] = {
      I_("C"),
      I_("V"),
      0x00
   };

   static const I_CHAR* aValues_002_225_008_000_000[] = {
      I_("Change"),
      I_("View"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_225_008_000_000;
   const BFSubstitutionSet SubSet_002_225_008_000_000(
    &aKeys_002_225_008_000_000[0], &aValues_002_225_008_000_000[0] );
   // Substitution set ChangeViewSet.  Language: nlNL
   static const I_CHAR* aKeys_002_225_010_000_000[] = {
      I_("C"),
      I_("V"),
      0x00
   };

   static const I_CHAR* aValues_002_225_010_000_000[] = {
      I_("Change"),
      I_("View"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_225_010_000_000;
   const BFSubstitutionSet SubSet_002_225_010_000_000(
    &aKeys_002_225_010_000_000[0], &aValues_002_225_010_000_000[0] );
   // Substitution set ISOCurrencySet.  Language: enUS
   static const I_CHAR* aKeys_002_226_001_000_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW"),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_001_000_000[] = {
      I_("ATS Austrian Schilling"),
      I_("BEF Belgian Franc"),
      I_("CAD Canadian Dollar"),
      I_("CHF Swiss Franc"),
      I_("DEM Deutsche Mark"),
      I_("DKK Danish Krone"),
      I_("ESP Spanish Peseta"),
      I_("EUR EURO"),
      I_("FIM Finnish Markka"),
      I_("FRF French Franc"),
      I_("GBP British Pound"),
      I_("GRD Greek Drachma"),
      I_("IEP Irish Pound"),
      I_("ITL Italian Lira"),
      I_("JPY Japanese Yen"),
      I_("LUF Luxembourg Franc"),
      I_("NLG Netherland Guilder"),
      I_("NOK Norwegian Krona"),
      I_("PTE Portuguese Escudo"),
      I_("SEK Swedish Krona"),
      I_("USD US Dollar"),
      I_("XEU European Currency"),
      I_("IDR Indonesian Rupiah"),
      I_("INR Indian Rupee "),
      I_("KRW South Korean Won"),
      I_("RUB Russian Ruble"),
      I_("CLP Chilean Peso"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_001_000_000;
   const BFSubstitutionSet SubSet_002_226_001_000_000(
    &aKeys_002_226_001_000_000[0], &aValues_002_226_001_000_000[0] );
   // Substitution set ISOCurrencySet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_226_001_003_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW"),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_001_003_000[] = {
      I_("ATS AUSTRIAN SCHILLING"),
      I_("BEF BELGIAN FRANC"),
      I_("CAD CANADIAN DOLLAR"),
      I_("CHF SWISS FRANC"),
      I_("DEM DEUTSCH MARK"),
      I_("DKK DANISH KRONE"),
      I_("ESP SPANISH PESETA"),
      I_("EUR EURO"),
      I_("FIM FINNISH MARKKA"),
      I_("FRF FRENCH FRANC"),
      I_("GBP BRITISH POUND"),
      I_("GRD GREEK DRACHMA"),
      I_("IEP IRISH POUND"),
      I_("ITL ITALIAN LIRA"),
      I_("JPY JAPANESE YEN"),
      I_("LUF LUXEMBOURG FRANC"),
      I_("NLG NETHERLAND GUILDER"),
      I_("NOK NORWEGIAN KRONER"),
      I_("PTE PORTUGUESE ESCUDO"),
      I_("SEK SWEDISH KRONA"),
      I_("USD US DOLLAR"),
      I_("XEU EUROPEAN CURRENCY"),
      I_("IDR INDONESIAN RUPIAH"),
      I_("INR INDIAN RUPEE "),
      I_("KRW SOUTH KOREAN WON"),
      I_("RUB RUSSIAN RUBLE"),
      I_("CLP CHILEAN PESO"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_001_003_000;
   const BFSubstitutionSet SubSet_002_226_001_003_000(
    &aKeys_002_226_001_003_000[0], &aValues_002_226_001_003_000[0] );
   // Substitution set ISOCurrencySet.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_226_001_004_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW"),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_001_004_000[] = {
      I_("ATS AUSTRIAN SCHILLING"),
      I_("BEF BELGIAN FRANC"),
      I_("CAD CANADIAN DOLLAR"),
      I_("CHF SWISS FRANC"),
      I_("DEM DEUTSCH MARK"),
      I_("DKK DANISH KRONE"),
      I_("ESP SPANISH PESETA"),
      I_("EUR EURO"),
      I_("FIM FINNISH MARKKA"),
      I_("FRF FRENCH FRANC"),
      I_("GBP BRITISH POUND"),
      I_("GRD GREEK DRACHMA"),
      I_("IEP IRISH POUND"),
      I_("ITL ITALIAN LIRA"),
      I_("JPY JAPANESE YEN"),
      I_("LUF LUXEMBOURG FRANC"),
      I_("NLG NETHERLAND GUILDER"),
      I_("NOK NORWEGIAN KRONER"),
      I_("PTE PORTUGUESE ESCUDO"),
      I_("SEK SWEDISH KRONA"),
      I_("USD US DOLLAR"),
      I_("XEU EUROPEAN CURRENCY"),
      I_("IDR INDONESIAN RUPIAH"),
      I_("INR INDIAN RUPEE "),
      I_("KRW SOUTH KOREAN WON"),
      I_("RUB RUSSIAN RUBLE"),
      I_("CLP CHILEAN PESO"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_001_004_000;
   const BFSubstitutionSet SubSet_002_226_001_004_000(
    &aKeys_002_226_001_004_000[0], &aValues_002_226_001_004_000[0] );
   // Substitution set ISOCurrencySet.  Language: enCA
   static const I_CHAR* aKeys_002_226_003_000_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW"),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_003_000_000[] = {
      I_("ATS Austrian Schilling"),
      I_("BEF Belgian Franc"),
      I_("CAD Canadian Dollar"),
      I_("CHF Swiss Franc"),
      I_("DEM Deutsche Mark"),
      I_("DKK Danish Krone"),
      I_("ESP Spanish Peseta"),
      I_("EUR EURO"),
      I_("FIM Finnish Markka"),
      I_("FRF French Franc"),
      I_("GBP British Pound"),
      I_("GRD Greek Drachma"),
      I_("IEP Irish Pound"),
      I_("ITL Italian Lira"),
      I_("JPY Japanese Yen"),
      I_("LUF Luxembourg Franc"),
      I_("NLG Netherland Guilder"),
      I_("NOK Norwegian Krona"),
      I_("PTE Portuguese Escudo"),
      I_("SEK Swedish Krona"),
      I_("USD US Dollar"),
      I_("XEU European Currency"),
      I_("IDR Indonesian Rupiah"),
      I_("INR Indian Rupee "),
      I_("KRW South Korean Won"),
      I_("RUB Russian Ruble"),
      I_("CLP Chilean Peso"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_003_000_000;
   const BFSubstitutionSet SubSet_002_226_003_000_000(
    &aKeys_002_226_003_000_000[0], &aValues_002_226_003_000_000[0] );
   // Substitution set ISOCurrencySet.  Language: frCA
   static const I_CHAR* aKeys_002_226_005_000_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW"),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_005_000_000[] = {
      I_("ATS schilling autrichien"),
      I_("BEF franc belge"),
      I_("CAD dollar canadien"),
      I_("CHF franc suisse"),
      I_("DEM Deutsche Mark"),
      I_("DEM Deutsche Mark"),
      I_("ESP peseta espagnole"),
      I_("EUR euro"),
      I_("FIM mark finlandais"),
      I_("FRF franc français"),
      I_("GBP livre sterling"),
      I_("GBP livre sterling"),
      I_("IEP livre irlandaise"),
      I_("ITL lire italienne"),
      I_("JPY yen japonais"),
      I_("LUF franc luxembourgeois"),
      I_("NLG florin néerlandais"),
      I_("NOK couronne norvégienne"),
      I_("NOK couronne norvégienne"),
      I_("SEK couronne suédoise"),
      I_("USD dollar des États-Unis"),
      I_("XEU Unité de compte européenne"),
      I_("IDR Indonesian Rupiah"),
      I_("INR Indian Rupee "),
      I_("KRW South Korean Won"),
      I_("RUB Russian Ruble"),
      I_("CLP Chilean Peso"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_005_000_000;
   const BFSubstitutionSet SubSet_002_226_005_000_000(
    &aKeys_002_226_005_000_000[0], &aValues_002_226_005_000_000[0] );
   // Substitution set ISOCurrencySet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_226_005_003_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW"),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_005_003_000[] = {
      I_("ATS AUSTRIAN SCHILLING"),
      I_("BEF BELGIAN FRANC"),
      I_("CAD CANADIAN DOLLAR"),
      I_("CHF SWISS FRANC"),
      I_("DEM DEUTSCH MARK"),
      I_("DKK DANISH KRONE"),
      I_("ESP SPANISH PESETA"),
      I_("EUR EURO"),
      I_("FIM FINNISH MARKKA"),
      I_("FRF FRENCH FRANC"),
      I_("GBP BRITISH POUND"),
      I_("GRD GREEK DRACHMA"),
      I_("IEP IRISH POUND"),
      I_("ITL ITALIAN LIRA"),
      I_("JPY JAPANESE YEN"),
      I_("LUF LUXEMBOURG FRANC"),
      I_("NLG NETHERLAND GUILDER"),
      I_("NOK NORWEGIAN KRONER"),
      I_("PTE PORTUGUESE ESCUDO"),
      I_("SEK SWEDISH KRONA"),
      I_("USD US DOLLAR"),
      I_("XEU EUROPEAN CURRENCY"),
      I_("IDR INDONESIAN RUPIAH"),
      I_("INR INDIAN RUPEE "),
      I_("KRW SOUTH KOREAN WON"),
      I_("RUB RUSSIAN RUBLE"),
      I_("CLP CHILEAN PESO"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_005_003_000;
   const BFSubstitutionSet SubSet_002_226_005_003_000(
    &aKeys_002_226_005_003_000[0], &aValues_002_226_005_003_000[0] );
   // Substitution set ISOCurrencySet.  Language: frCA, Market: 4
   static const I_CHAR* aKeys_002_226_005_004_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW"),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_005_004_000[] = {
      I_("ATS AUSTRIAN SCHILLING"),
      I_("BEF BELGIAN FRANC"),
      I_("CAD CANADIAN DOLLAR"),
      I_("CHF SWISS FRANC"),
      I_("DEM DEUTSCH MARK"),
      I_("DKK DANISK KRONE"),
      I_("ESP SPANISH PESETA"),
      I_("EUR EURO"),
      I_("FIM FINNISH MARKKA"),
      I_("FRF FRENCH FRANC"),
      I_("GBP BRITISH POUND"),
      I_("GRD GREEK DRACHMA"),
      I_("IEP IRISH POUND"),
      I_("ITL ITALIAN LIRA"),
      I_("JPY JAPANESE YEN"),
      I_("LUF LUXEMBOURG FRANC"),
      I_("NLG NETHERLAND GUILDER"),
      I_("NOK NORWEGIAN KRONER"),
      I_("PTE PORTUGUESE ESCUDO"),
      I_("SEK SWEDISH KRONA"),
      I_("USD US DOLLAR"),
      I_("XEU EUROPEAN CURRENCY"),
      I_("IDR INDONESIAN RUPIAH"),
      I_("INR INDIAN RUPEE "),
      I_("KRW SOUTH KOREAN WON"),
      I_("RUB RUSSIAN RUBLE"),
      I_("CLP CHILEAN PESO"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_005_004_000;
   const BFSubstitutionSet SubSet_002_226_005_004_000(
    &aKeys_002_226_005_004_000[0], &aValues_002_226_005_004_000[0] );
   // Substitution set ISOCurrencySet.  Language: enIE
   static const I_CHAR* aKeys_002_226_006_000_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW"),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_006_000_000[] = {
      I_("ATS Austrian Schilling"),
      I_("BEF Belgian Franc"),
      I_("CAD Canadian Dollar"),
      I_("CHF Swiss Franc"),
      I_("DEM Deutsche Mark"),
      I_("DKK Danish Krone"),
      I_("ESP Spanish Peseta"),
      I_("EUR EURO"),
      I_("FIM Finnish Markka"),
      I_("FRF French Franc"),
      I_("GBP British Pound"),
      I_("GRD Greek Drachma"),
      I_("IEP Irish Pound"),
      I_("ITL Italian Lira"),
      I_("JPY Japanese Yen"),
      I_("LUF Luxembourg Franc"),
      I_("NLG Netherland Guilder"),
      I_("NOK Norwegian Krona"),
      I_("PTE Portuguese Escudo"),
      I_("SEK Swedish Krona"),
      I_("USD US Dollar"),
      I_("XEU European Currency"),
      I_("IDR Indonesian Rupiah"),
      I_("INR Indian Rupee "),
      I_("KRW South Korean Won"),
      I_("RUB Russian Ruble"),
      I_("CLP Chilean Peso"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_006_000_000;
   const BFSubstitutionSet SubSet_002_226_006_000_000(
    &aKeys_002_226_006_000_000[0], &aValues_002_226_006_000_000[0] );
   // Substitution set ISOCurrencySet.  Language: deDE
   static const I_CHAR* aKeys_002_226_007_000_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW "),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_007_000_000[] = {
      I_("ATS Austrian Schilling"),
      I_("BEF Belgian Franc"),
      I_("CAD Canadian Dollar"),
      I_("CHF Swiss Franc"),
      I_("DEM Deutsche Mark"),
      I_("DKK Danish Krone"),
      I_("ESP Spanish Peseta"),
      I_("EUR EURO"),
      I_("FIM Finnish Markka"),
      I_("FRF French Franc"),
      I_("GBP British Pound"),
      I_("GRD Greek Drachma"),
      I_("IEP Irish Pound"),
      I_("ITL Italian Lira"),
      I_("JPY Japanese Yen"),
      I_("LUF Luxembourg Franc"),
      I_("NLG Netherland Guilder"),
      I_("NOK Norwegian Krona"),
      I_("PTE Portuguese Escudo"),
      I_("SEK Swedish Krona"),
      I_("USD US Dollar"),
      I_("XEU European Currency"),
      I_("IDR Indonesian Rupiah"),
      I_("INR Indian Rupee "),
      I_("KRW South Korean Won"),
      I_("RUB Russian Ruble"),
      I_("CLP Chilean Peso"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_007_000_000;
   const BFSubstitutionSet SubSet_002_226_007_000_000(
    &aKeys_002_226_007_000_000[0], &aValues_002_226_007_000_000[0] );
   // Substitution set ISOCurrencySet.  Language: esEs
   static const I_CHAR* aKeys_002_226_008_000_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW"),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_008_000_000[] = {
      I_("ATS Austrian Schilling"),
      I_("BEF Belgian Franc"),
      I_("CAD Canadian Dollar"),
      I_("CHF Swiss Franc"),
      I_("DEM Deutsche Mark"),
      I_("DKK Danish Krone"),
      I_("ESP Spanish Peseta"),
      I_("EUR EURO"),
      I_("FIM Finnish Markka"),
      I_("FRF French Franc"),
      I_("GBP British Pound"),
      I_("GRD Greek Drachma"),
      I_("IEP Irish Pound"),
      I_("ITL Italian Lira"),
      I_("JPY Japanese Yen"),
      I_("LUF Luxembourg Franc"),
      I_("NLG Netherland Guilder"),
      I_("NOK Norwegian Krona"),
      I_("PTE Portuguese Escudo"),
      I_("SEK Swedish Krona"),
      I_("USD US Dollar"),
      I_("XEU European Currency"),
      I_("IDR Indonesian Rupiah"),
      I_("INR Indian Rupee "),
      I_("KRW South Korean Won"),
      I_("RUB Russian Ruble"),
      I_("CLP Chilean Peso"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_008_000_000;
   const BFSubstitutionSet SubSet_002_226_008_000_000(
    &aKeys_002_226_008_000_000[0], &aValues_002_226_008_000_000[0] );
   // Substitution set ISOCurrencySet.  Language: nlNL
   static const I_CHAR* aKeys_002_226_010_000_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW"),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_010_000_000[] = {
      I_("ATS Austrian Schilling"),
      I_("BEF Belgian Franc"),
      I_("CAD Canadese dollar"),
      I_("CHF Swiss Franc"),
      I_("DEM Deutsche Mark"),
      I_("DKK Danish Krone"),
      I_("ESP Spanish Peseta"),
      I_("EUR EURO"),
      I_("FIM Finnish Markka"),
      I_("FRF French Franc"),
      I_("GBP British Pound"),
      I_("GRD Greek Drachma"),
      I_("IEP Irish Pound"),
      I_("ITL Italian Lira"),
      I_("JPY Japanse yen"),
      I_("LUF Luxemburgse franc"),
      I_("NLG Netherland Guilder"),
      I_("NOK Norwegian Krona"),
      I_("PTE Portugese escudo"),
      I_("SEK Swedish Krona"),
      I_("USD US Dollar"),
      I_("XEU European Currency"),
      I_("IDR Indonesian Rupiah"),
      I_("INR Indian Rupee "),
      I_("KRW South Korean Won"),
      I_("RUB Russian Ruble"),
      I_("CLP Chilean Peso"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_010_000_000;
   const BFSubstitutionSet SubSet_002_226_010_000_000(
    &aKeys_002_226_010_000_000[0], &aValues_002_226_010_000_000[0] );
   // Substitution set ISOCurrencySet.  Language: nlNL, Market: 3
   static const I_CHAR* aKeys_002_226_010_003_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW"),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_010_003_000[] = {
      I_("ATS AUSTRIAN SCHILLING"),
      I_("BEF BELGIAN FRANC"),
      I_("CAD Canadese dollar"),
      I_("CHF SWISS FRANC"),
      I_("DEM DEUTSCH MARK"),
      I_("DKK DANISH KRONE"),
      I_("ESP SPANISH PESETA"),
      I_("EUR EURO"),
      I_("FIM FINNISH MARKKA"),
      I_("FRF FRENCH FRANC"),
      I_("GBP BRITISH POUND"),
      I_("GRD GREEK DRACHMA"),
      I_("IEP IRISH POUND"),
      I_("ITL ITALIAN LIRA"),
      I_("JPY Japanse yen"),
      I_("LUF Luxemburgse franc"),
      I_("NLG NETHERLAND GUILDER"),
      I_("NOK NORWEGIAN KRONER"),
      I_("PTE Portugese escudo"),
      I_("SEK SWEDISH KRONA"),
      I_("USD US DOLLAR"),
      I_("XEU EUROPEAN CURRENCY"),
      I_("IDR INDONESIAN RUPIAH"),
      I_("INR INDIAN RUPEE "),
      I_("KRW SOUTH KOREAN WON"),
      I_("RUB RUSSIAN RUBLE"),
      I_("CLP CHILEAN PESO"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_010_003_000;
   const BFSubstitutionSet SubSet_002_226_010_003_000(
    &aKeys_002_226_010_003_000[0], &aValues_002_226_010_003_000[0] );
   // Substitution set ISOCurrencySet.  Language: nlNL, Market: 4
   static const I_CHAR* aKeys_002_226_010_004_000[] = {
      I_("ATS"),
      I_("BEF"),
      I_("CAD"),
      I_("CHF"),
      I_("DEM"),
      I_("DKK"),
      I_("ESP"),
      I_("EUR"),
      I_("FIM"),
      I_("FRF"),
      I_("GBP"),
      I_("GRD"),
      I_("IEP"),
      I_("ITL"),
      I_("JPY"),
      I_("LUF"),
      I_("NLG"),
      I_("NOK"),
      I_("PTE"),
      I_("SEK"),
      I_("USD"),
      I_("XEU"),
      I_("IDR"),
      I_("INR"),
      I_("KRW"),
      I_("RUB"),
      I_("CLP"),
      0x00
   };

   static const I_CHAR* aValues_002_226_010_004_000[] = {
      I_("ATS AUSTRIAN SCHILLING"),
      I_("BEF BELGIAN FRANC"),
      I_("CAD Canadese dollar"),
      I_("CHF SWISS FRANC"),
      I_("DEM DEUTSCH MARK"),
      I_("DKK DANISH KRONE"),
      I_("ESP SPANISH PESETA"),
      I_("EUR EURO"),
      I_("FIM FINNISH MARKKA"),
      I_("FRF FRENCH FRANC"),
      I_("GBP BRITISH POUND"),
      I_("GRD GREEK DRACHMA"),
      I_("IEP IRISH POUND"),
      I_("ITL ITALIAN LIRA"),
      I_("JPY Japanse yen"),
      I_("LUF Luxemburgse franc"),
      I_("NLG NETHERLAND GUILDER"),
      I_("NOK NORWEGIAN KRONER"),
      I_("PTE Portugese escudo"),
      I_("SEK SWEDISH KRONA"),
      I_("USD US DOLLAR"),
      I_("XEU EUROPEAN CURRENCY"),
      I_("IDR INDONESIAN RUPIAH"),
      I_("INR INDIAN RUPEE "),
      I_("KRW SOUTH KOREAN WON"),
      I_("RUB RUSSIAN RUBLE"),
      I_("CLP CHILEAN PESO"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_226_010_004_000;
   const BFSubstitutionSet SubSet_002_226_010_004_000(
    &aKeys_002_226_010_004_000[0], &aValues_002_226_010_004_000[0] );
   // Substitution set LV_BankOptionsFieldsHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_227_001_000_000[] = {
      I_("BankAcctType"),
      I_("BankAcctCurrency"),
      I_("EffectiveDate"),
      I_("StopDate"),
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankContact"),
      I_("BankContactCB"),
      I_("VerifyStat"),
      0x00
   };

   static const I_CHAR* aValues_002_227_001_000_000[] = {
      I_("Account Type"),
      I_("Currency"),
      I_("Effective Date"),
      I_("Stop Date"),
      I_("Payment Method"),
      I_("File Processor"),
      I_("Bank Contact"),
      I_("Correspondent Contact"),
      I_("Verify Status"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_227_001_000_000;
   const BFSubstitutionSet SubSet_002_227_001_000_000(
    &aKeys_002_227_001_000_000[0], &aValues_002_227_001_000_000[0] );
   // Substitution set LV_BankOptionsFieldsHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_227_003_000_000[] = {
      I_("BankAcctType"),
      I_("BankAcctCurrency"),
      I_("EffectiveDate"),
      I_("StopDate"),
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankContact"),
      I_("BankContactCB"),
      0x00
   };

   static const I_CHAR* aValues_002_227_003_000_000[] = {
      I_("Account Type"),
      I_("Currency"),
      I_("Effective Date"),
      I_("Stop Date"),
      I_("Payment Method"),
      I_("File Processor"),
      I_("Bank Contact"),
      I_("Correspondent Contact"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_227_003_000_000;
   const BFSubstitutionSet SubSet_002_227_003_000_000(
    &aKeys_002_227_003_000_000[0], &aValues_002_227_003_000_000[0] );
   // Substitution set LV_BankOptionsFieldsHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_227_005_000_000[] = {
      I_("BankAcctType"),
      I_("BankAcctCurrency"),
      I_("EffectiveDate"),
      I_("StopDate"),
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankContact"),
      I_("BankContactCB"),
      I_("VerifyStat"),
      0x00
   };

   static const I_CHAR* aValues_002_227_005_000_000[] = {
      I_("Type de compte"),
      I_("Devise"),
      I_("Date d'entrée en vigueur"),
      I_("Date d'arrêt"),
      I_("Méthode de paiement"),
      I_("Programme de traitement de fichier"),
      I_("Contrat bancaire"),
      I_("Contact correspondant"),
      I_("Vérifier le statut"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_227_005_000_000;
   const BFSubstitutionSet SubSet_002_227_005_000_000(
    &aKeys_002_227_005_000_000[0], &aValues_002_227_005_000_000[0] );
   // Substitution set LV_BankOptionsFieldsHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_227_006_000_000[] = {
      I_("BankAcctType"),
      I_("BankAcctCurrency"),
      I_("EffectiveDate"),
      I_("StopDate"),
      I_("ACHProcessor"),
      I_("BankContact"),
      I_("BankContactCB"),
      0x00
   };

   static const I_CHAR* aValues_002_227_006_000_000[] = {
      I_("Account Type"),
      I_("Currency"),
      I_("Effective Date"),
      I_("Stop Date"),
      I_("ACH Processor"),
      I_("Bank Contact"),
      I_("Correspondent Contact"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_227_006_000_000;
   const BFSubstitutionSet SubSet_002_227_006_000_000(
    &aKeys_002_227_006_000_000[0], &aValues_002_227_006_000_000[0] );
   // Substitution set LV_BankOptionsFieldsHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_227_007_000_000[] = {
      I_("BankAcctType"),
      I_("BankAcctCurrency"),
      I_("EffectiveDate"),
      I_("StopDate"),
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankContact"),
      I_("BankContactCB"),
      0x00
   };

   static const I_CHAR* aValues_002_227_007_000_000[] = {
      I_("Account Type"),
      I_("Currency"),
      I_("Effective Date"),
      I_("Stop Date"),
      I_("Payment Method"),
      I_("File Processor"),
      I_("Bank Contact"),
      I_("Correspondent Contact"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_227_007_000_000;
   const BFSubstitutionSet SubSet_002_227_007_000_000(
    &aKeys_002_227_007_000_000[0], &aValues_002_227_007_000_000[0] );
   // Substitution set LV_BankOptionsFieldsHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_227_008_000_000[] = {
      I_("BankAcctType"),
      I_("BankAcctCurrency"),
      I_("EffectiveDate"),
      I_("StopDate"),
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankContact"),
      I_("BankContactCB"),
      0x00
   };

   static const I_CHAR* aValues_002_227_008_000_000[] = {
      I_("Account Type"),
      I_("Currency"),
      I_("Effective Date"),
      I_("Stop Date"),
      I_("Payment Method"),
      I_("File Processor"),
      I_("Bank Contact"),
      I_("Correspondent Contact"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_227_008_000_000;
   const BFSubstitutionSet SubSet_002_227_008_000_000(
    &aKeys_002_227_008_000_000[0], &aValues_002_227_008_000_000[0] );
   // Substitution set LV_BankOptionsFieldsHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_227_010_000_000[] = {
      I_("BankAcctType"),
      I_("BankAcctCurrency"),
      I_("EffectiveDate"),
      I_("StopDate"),
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankContact"),
      I_("BankContactCB"),
      0x00
   };

   static const I_CHAR* aValues_002_227_010_000_000[] = {
      I_("Account Type"),
      I_("Currency"),
      I_("Effective Date"),
      I_("Stop Date"),
      I_("Payment Method"),
      I_("File Processor"),
      I_("Bank Contact"),
      I_("Correspondent Contact"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_227_010_000_000;
   const BFSubstitutionSet SubSet_002_227_010_000_000(
    &aKeys_002_227_010_000_000[0], &aValues_002_227_010_000_000[0] );
   // Substitution set LV_BankOptionsHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_228_001_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_228_001_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_228_001_000_000;
   const BFSubstitutionSet SubSet_002_228_001_000_000(
    &aKeys_002_228_001_000_000[0], &aValues_002_228_001_000_000[0] );
   // Substitution set LV_BankOptionsHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_228_003_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_228_003_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_228_003_000_000;
   const BFSubstitutionSet SubSet_002_228_003_000_000(
    &aKeys_002_228_003_000_000[0], &aValues_002_228_003_000_000[0] );
   // Substitution set LV_BankOptionsHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_228_005_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_228_005_000_000[] = {
      I_("Options"),
      I_("Valeur"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_228_005_000_000;
   const BFSubstitutionSet SubSet_002_228_005_000_000(
    &aKeys_002_228_005_000_000[0], &aValues_002_228_005_000_000[0] );
   // Substitution set LV_BankOptionsHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_228_006_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_228_006_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_228_006_000_000;
   const BFSubstitutionSet SubSet_002_228_006_000_000(
    &aKeys_002_228_006_000_000[0], &aValues_002_228_006_000_000[0] );
   // Substitution set LV_BankOptionsHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_228_007_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_228_007_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_228_007_000_000;
   const BFSubstitutionSet SubSet_002_228_007_000_000(
    &aKeys_002_228_007_000_000[0], &aValues_002_228_007_000_000[0] );
   // Substitution set LV_BankOptionsHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_228_008_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_228_008_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_228_008_000_000;
   const BFSubstitutionSet SubSet_002_228_008_000_000(
    &aKeys_002_228_008_000_000[0], &aValues_002_228_008_000_000[0] );
   // Substitution set LV_BankOptionsHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_228_010_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   static const I_CHAR* aValues_002_228_010_000_000[] = {
      I_("Options"),
      I_("Value"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_228_010_000_000;
   const BFSubstitutionSet SubSet_002_228_010_000_000(
    &aKeys_002_228_010_000_000[0], &aValues_002_228_010_000_000[0] );
   // Substitution set LV_BankInstrHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_229_001_000_000[] = {
      I_("BankIdValue"),
      I_("InstName"),
      I_("BankAcctNum"),
      I_("BankIdType"),
      I_("AcctUseCode"),
      I_("BankAcctCurrency"),
      I_("Status"),
      I_("VerifyStat"),
      0x00
   };

   static const I_CHAR* aValues_002_229_001_000_000[] = {
      I_("Number(n)"),
      I_("Bank Name"),
      I_("Account Nbr"),
      I_("ID Type"),
      I_("Use"),
      I_("Currency"),
      I_("Status"),
      I_("Verify Status"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_229_001_000_000;
   const BFSubstitutionSet SubSet_002_229_001_000_000(
    &aKeys_002_229_001_000_000[0], &aValues_002_229_001_000_000[0] );
   // Substitution set LV_BankInstrHeadingSet.  Language: enCA
   static const I_CHAR* aKeys_002_229_003_000_000[] = {
      I_("BankIdValue"),
      I_("InstName"),
      I_("BankAcctNum"),
      I_("BankIdType"),
      I_("AcctUseCode"),
      I_("BankAcctCurrency"),
      I_("Status"),
      0x00
   };

   static const I_CHAR* aValues_002_229_003_000_000[] = {
      I_("Number(n)"),
      I_("Bank Name"),
      I_("Account Nbr"),
      I_("ID Type"),
      I_("Use"),
      I_("Currency"),
      I_("Status"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_229_003_000_000;
   const BFSubstitutionSet SubSet_002_229_003_000_000(
    &aKeys_002_229_003_000_000[0], &aValues_002_229_003_000_000[0] );
   // Substitution set LV_BankInstrHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_229_005_000_000[] = {
      I_("BankIdValue"),
      I_("InstName"),
      I_("BankAcctNum"),
      I_("BankIdType"),
      I_("AcctUseCode"),
      I_("BankAcctCurrency"),
      I_("Status"),
      I_("VerifyStat"),
      0x00
   };

   static const I_CHAR* aValues_002_229_005_000_000[] = {
      I_("Numéro (n)"),
      I_("Banque"),
      I_("No de compte"),
      I_("Type de code"),
      I_("Utilisation"),
      I_("Devise"),
      I_("Statut"),
      I_("Vérifier le statut"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_229_005_000_000;
   const BFSubstitutionSet SubSet_002_229_005_000_000(
    &aKeys_002_229_005_000_000[0], &aValues_002_229_005_000_000[0] );
   // Substitution set LV_BankInstrHeadingSet.  Language: enIE
   static const I_CHAR* aKeys_002_229_006_000_000[] = {
      I_("BankIdValue"),
      I_("InstName"),
      I_("BankAcctNum"),
      I_("BankIdType"),
      I_("AcctUseCode"),
      I_("BankAcctCurrency"),
      I_("Status"),
      0x00
   };

   static const I_CHAR* aValues_002_229_006_000_000[] = {
      I_("Number(n)"),
      I_("Bank Name"),
      I_("Account Nbr"),
      I_("ID Type"),
      I_("Use"),
      I_("Currency"),
      I_("Status"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_229_006_000_000;
   const BFSubstitutionSet SubSet_002_229_006_000_000(
    &aKeys_002_229_006_000_000[0], &aValues_002_229_006_000_000[0] );
   // Substitution set LV_BankInstrHeadingSet.  Language: deDE
   static const I_CHAR* aKeys_002_229_007_000_000[] = {
      I_("BankIdValue"),
      I_("InstName"),
      I_("BankAcctNum"),
      I_("BankIdType"),
      I_("AcctUseCode"),
      I_("BankAcctCurrency"),
      I_("Status"),
      0x00
   };

   static const I_CHAR* aValues_002_229_007_000_000[] = {
      I_("Number(n)"),
      I_("Bank Name"),
      I_("Account Nbr"),
      I_("ID Type"),
      I_("Use"),
      I_("Currency"),
      I_("Status"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_229_007_000_000;
   const BFSubstitutionSet SubSet_002_229_007_000_000(
    &aKeys_002_229_007_000_000[0], &aValues_002_229_007_000_000[0] );
   // Substitution set LV_BankInstrHeadingSet.  Language: esEs
   static const I_CHAR* aKeys_002_229_008_000_000[] = {
      I_("BankIdValue"),
      I_("InstName"),
      I_("BankAcctNum"),
      I_("BankIdType"),
      I_("AcctUseCode"),
      I_("BankAcctCurrency"),
      I_("Status"),
      0x00
   };

   static const I_CHAR* aValues_002_229_008_000_000[] = {
      I_("Number(n)"),
      I_("Bank Name"),
      I_("Account Nbr"),
      I_("ID Type"),
      I_("Use"),
      I_("Currency"),
      I_("Status"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_229_008_000_000;
   const BFSubstitutionSet SubSet_002_229_008_000_000(
    &aKeys_002_229_008_000_000[0], &aValues_002_229_008_000_000[0] );
   // Substitution set LV_BankInstrHeadingSet.  Language: nlNL
   static const I_CHAR* aKeys_002_229_010_000_000[] = {
      I_("BankIdValue"),
      I_("InstName"),
      I_("BankAcctNum"),
      I_("BankIdType"),
      I_("AcctUseCode"),
      I_("BankAcctCurrency"),
      I_("Status"),
      0x00
   };

   static const I_CHAR* aValues_002_229_010_000_000[] = {
      I_("Number(n)"),
      I_("Bank Name"),
      I_("Account Nbr"),
      I_("ID Type"),
      I_("Use"),
      I_("Currency"),
      I_("Status"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_229_010_000_000;
   const BFSubstitutionSet SubSet_002_229_010_000_000(
    &aKeys_002_229_010_000_000[0], &aValues_002_229_010_000_000[0] );
   // Substitution set BankIDTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_230_001_000_000[] = {
      I_("SWIFT"),
      I_("UID"),
      I_("Canadian"),
      I_("USFedwire"),
      I_("Japanese"),
      0x00
   };

   static const I_CHAR* aValues_002_230_001_000_000[] = {
      I_("SWIFT"),
      I_("UID - Universal Identification"),
      I_("Canadian"),
      I_("US Fedwire"),
      I_("Japanese"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_230_001_000_000;
   const BFSubstitutionSet SubSet_002_230_001_000_000(
    &aKeys_002_230_001_000_000[0], &aValues_002_230_001_000_000[0] );
   // Substitution set BankIDTypeSet.  Language: enCA
   static const I_CHAR* aKeys_002_230_003_000_000[] = {
      I_("SWIFT"),
      I_("UID"),
      I_("Canadian"),
      I_("USFedwire"),
      I_("Japanese"),
      0x00
   };

   static const I_CHAR* aValues_002_230_003_000_000[] = {
      I_("SWIFT"),
      I_("UID - Universal Identification"),
      I_("Canadian"),
      I_("US Fedwire"),
      I_("Japanese"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_230_003_000_000;
   const BFSubstitutionSet SubSet_002_230_003_000_000(
    &aKeys_002_230_003_000_000[0], &aValues_002_230_003_000_000[0] );
   // Substitution set BankIDTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_230_005_000_000[] = {
      I_("SWIFT"),
      I_("UID"),
      I_("Canadian"),
      I_("USFedwire"),
      I_("Japanese"),
      0x00
   };

   static const I_CHAR* aValues_002_230_005_000_000[] = {
      I_("SWIFT"),
      I_("Code d'utilisateur - identification universelle"),
      I_("Canadienne"),
      I_("Opération électronique fédérale des É.-U."),
      I_("Japonaise"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_230_005_000_000;
   const BFSubstitutionSet SubSet_002_230_005_000_000(
    &aKeys_002_230_005_000_000[0], &aValues_002_230_005_000_000[0] );
   // Substitution set BankIDTypeSet.  Language: enIE
   static const I_CHAR* aKeys_002_230_006_000_000[] = {
      I_("SWIFT"),
      I_("UID"),
      I_("Canadian"),
      I_("USFedwire"),
      I_("Japanese"),
      0x00
   };

   static const I_CHAR* aValues_002_230_006_000_000[] = {
      I_("SWIFT"),
      I_("UID - Universal Identification"),
      I_("Canadian"),
      I_("US Fedwire"),
      I_("Japanese"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_230_006_000_000;
   const BFSubstitutionSet SubSet_002_230_006_000_000(
    &aKeys_002_230_006_000_000[0], &aValues_002_230_006_000_000[0] );
   // Substitution set BankIDTypeSet.  Language: deDE
   static const I_CHAR* aKeys_002_230_007_000_000[] = {
      I_("SWIFT"),
      I_("UID"),
      I_("Canadian"),
      I_("USFedwire"),
      I_("Japanese"),
      0x00
   };

   static const I_CHAR* aValues_002_230_007_000_000[] = {
      I_("SWIFT"),
      I_("UID - Universal Identification"),
      I_("Canadian"),
      I_("US Fedwire"),
      I_("Japanese"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_230_007_000_000;
   const BFSubstitutionSet SubSet_002_230_007_000_000(
    &aKeys_002_230_007_000_000[0], &aValues_002_230_007_000_000[0] );
   // Substitution set BankIDTypeSet.  Language: esEs
   static const I_CHAR* aKeys_002_230_008_000_000[] = {
      I_("SWIFT"),
      I_("UID"),
      I_("Canadian"),
      I_("USFedwire"),
      I_("Japanese"),
      0x00
   };

   static const I_CHAR* aValues_002_230_008_000_000[] = {
      I_("SWIFT"),
      I_("UID - Universal Identification"),
      I_("Canadian"),
      I_("US Fedwire"),
      I_("Japanese"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_230_008_000_000;
   const BFSubstitutionSet SubSet_002_230_008_000_000(
    &aKeys_002_230_008_000_000[0], &aValues_002_230_008_000_000[0] );
   // Substitution set BankIDTypeSet.  Language: nlNL
   static const I_CHAR* aKeys_002_230_010_000_000[] = {
      I_("SWIFT"),
      I_("UID"),
      I_("Canadian"),
      I_("USFedwire"),
      I_("Japanese"),
      0x00
   };

   static const I_CHAR* aValues_002_230_010_000_000[] = {
      I_("SWIFT"),
      I_("UID - Universal Identification"),
      I_("Canadees"),
      I_("US Fedwire"),
      I_("Japanese"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_230_010_000_000;
   const BFSubstitutionSet SubSet_002_230_010_000_000(
    &aKeys_002_230_010_000_000[0], &aValues_002_230_010_000_000[0] );
   // Substitution set BankIDTypeSubst.  Language: enUS
   static const I_CHAR* aKeys_002_231_001_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      0x00
   };

   static const I_CHAR* aValues_002_231_001_000_000[] = {
      I_("ABA"),
      I_("Austria"),
      I_("Canadian"),
      I_("FCF Swift"),
      I_("Germany"),
      I_("Japanese"),
      I_("Other"),
      I_("UK"),
      I_("Hong Kong"),
      I_("Switzerland"),
      I_("BIC- Bank Identifier Code"),
      I_("CC - Canadian PAPR Number"),
      I_("CH - CHIPS Universal Identifier"),
      I_("CP - CHIPS Participant Number"),
      I_("FW - Fedwire Routing Number"),
      I_("NA - Network Address"),
      I_("SC - Sort Code"),
      I_("SW - Swiss Clearing Code"),
      I_("BL - German Bankleitzhal (8 digits)"),
      I_("Singapore"),
      I_("BSB - Australia"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_231_001_000_000;
   const BFSubstitutionSet SubSet_002_231_001_000_000(
    &aKeys_002_231_001_000_000[0], &aValues_002_231_001_000_000[0] );
   // Substitution set BankIDTypeSubst.  Language: enCA
   static const I_CHAR* aKeys_002_231_003_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_231_003_000_000[] = {
      I_("ABA"),
      I_("Austria"),
      I_("Canadian"),
      I_("FCF Swift"),
      I_("Germany"),
      I_("Japanese"),
      I_("Other"),
      I_("UK"),
      I_("Hong Kong"),
      I_("Switzerland"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_231_003_000_000;
   const BFSubstitutionSet SubSet_002_231_003_000_000(
    &aKeys_002_231_003_000_000[0], &aValues_002_231_003_000_000[0] );
   // Substitution set BankIDTypeSubst.  Language: frCA
   static const I_CHAR* aKeys_002_231_005_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      0x00
   };

   static const I_CHAR* aValues_002_231_005_000_000[] = {
      I_("ABA"),
      I_("Autriche"),
      I_("Canadienne"),
      I_("FTD SWIFT"),
      I_("Allemagne"),
      I_("Japonaise"),
      I_("Autre"),
      I_("Royaume-Uni"),
      I_("Hong Kong"),
      I_("Suisse"),
      I_("BIC - code BIC"),
      I_("CC - numéro PAPR canadien"),
      I_("CH - identificateur universel CHIPS"),
      I_("CP - numéro de participant CHIPS"),
      I_("FW - numéro d'acheminement Fedwire (numéro ABA)"),
      I_("NA - adresse réseau (code de destination de la Bank of America)"),
      I_("SC - code guichet"),
      I_("SW - code de compensation suisse"),
      I_("BL - code bancaire allemand (8 caractères numériques)"),
      I_("Singapour"),
      I_("BSB - Australie"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_231_005_000_000;
   const BFSubstitutionSet SubSet_002_231_005_000_000(
    &aKeys_002_231_005_000_000[0], &aValues_002_231_005_000_000[0] );
   // Substitution set BankIDTypeSubst.  Language: enIE
   static const I_CHAR* aKeys_002_231_006_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_231_006_000_000[] = {
      I_("ABA"),
      I_("Austria"),
      I_("Canadian"),
      I_("FCF Swift"),
      I_("Germany"),
      I_("Japanese"),
      I_("Other"),
      I_("UK"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_231_006_000_000;
   const BFSubstitutionSet SubSet_002_231_006_000_000(
    &aKeys_002_231_006_000_000[0], &aValues_002_231_006_000_000[0] );
   // Substitution set BankIDTypeSubst.  Language: deDE
   static const I_CHAR* aKeys_002_231_007_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_231_007_000_000[] = {
      I_("ABA"),
      I_("Austria"),
      I_("Canadian"),
      I_("FCF Swift"),
      I_("Germany"),
      I_("Japanese"),
      I_("Other"),
      I_("UK"),
      I_("Hong Kong"),
      I_("Switzerland"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_231_007_000_000;
   const BFSubstitutionSet SubSet_002_231_007_000_000(
    &aKeys_002_231_007_000_000[0], &aValues_002_231_007_000_000[0] );
   // Substitution set BankIDTypeSubst.  Language: esEs
   static const I_CHAR* aKeys_002_231_008_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_231_008_000_000[] = {
      I_("ABA"),
      I_("Austria"),
      I_("Canadian"),
      I_("FCF Swift"),
      I_("Germany"),
      I_("Japanese"),
      I_("Other"),
      I_("UK"),
      I_("Hong Kong"),
      I_("Switzerland"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_231_008_000_000;
   const BFSubstitutionSet SubSet_002_231_008_000_000(
    &aKeys_002_231_008_000_000[0], &aValues_002_231_008_000_000[0] );
   // Substitution set BankIDTypeSubst.  Language: nlNL
   static const I_CHAR* aKeys_002_231_010_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_231_010_000_000[] = {
      I_("ABA"),
      I_("OOSTENRIJK"),
      I_("Canadees"),
      I_("FCF Swift"),
      I_("DUITSLAND"),
      I_("Japanese"),
      I_("Overig"),
      I_("UK"),
      I_("HONGKONG"),
      I_("ZWITSERLAND"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_231_010_000_000;
   const BFSubstitutionSet SubSet_002_231_010_000_000(
    &aKeys_002_231_010_000_000[0], &aValues_002_231_010_000_000[0] );
   // Substitution set ACHProcessorSet.  Language: enUS
   static const I_CHAR* aKeys_002_234_001_000_000[] = {
      I_("AUT"),
      I_("DEU"),
      I_("DEFLTACH"),
      0x00
   };

   static const I_CHAR* aValues_002_234_001_000_000[] = {
      I_("Austria"),
      I_("Germany"),
      I_("DEFLTACH"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_234_001_000_000;
   const BFSubstitutionSet SubSet_002_234_001_000_000(
    &aKeys_002_234_001_000_000[0], &aValues_002_234_001_000_000[0] );
   // Substitution set ACHProcessorSet.  Language: enCA
   static const I_CHAR* aKeys_002_234_003_000_000[] = {
      I_("AUT"),
      I_("DEU"),
      0x00
   };

   static const I_CHAR* aValues_002_234_003_000_000[] = {
      I_("Austria"),
      I_("Germany"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_234_003_000_000;
   const BFSubstitutionSet SubSet_002_234_003_000_000(
    &aKeys_002_234_003_000_000[0], &aValues_002_234_003_000_000[0] );
   // Substitution set ACHProcessorSet.  Language: frCA
   static const I_CHAR* aKeys_002_234_005_000_000[] = {
      I_("AUT"),
      I_("DEU"),
      I_("DEFLTACH"),
      0x00
   };

   static const I_CHAR* aValues_002_234_005_000_000[] = {
      I_("Autriche"),
      I_("Allemagne"),
      I_("DEFLTACH"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_234_005_000_000;
   const BFSubstitutionSet SubSet_002_234_005_000_000(
    &aKeys_002_234_005_000_000[0], &aValues_002_234_005_000_000[0] );
   // Substitution set ACHProcessorSet.  Language: enIE
   static const I_CHAR* aKeys_002_234_006_000_000[] = {
      I_("AUT"),
      I_("DEU"),
      0x00
   };

   static const I_CHAR* aValues_002_234_006_000_000[] = {
      I_("Austria"),
      I_("Germany"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_234_006_000_000;
   const BFSubstitutionSet SubSet_002_234_006_000_000(
    &aKeys_002_234_006_000_000[0], &aValues_002_234_006_000_000[0] );
   // Substitution set ACHProcessorSet.  Language: deDE
   static const I_CHAR* aKeys_002_234_007_000_000[] = {
      I_("AUT"),
      I_("DEU"),
      0x00
   };

   static const I_CHAR* aValues_002_234_007_000_000[] = {
      I_("Austria"),
      I_("Germany"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_234_007_000_000;
   const BFSubstitutionSet SubSet_002_234_007_000_000(
    &aKeys_002_234_007_000_000[0], &aValues_002_234_007_000_000[0] );
   // Substitution set ACHProcessorSet.  Language: esEs
   static const I_CHAR* aKeys_002_234_008_000_000[] = {
      I_("AUT"),
      I_("DEU"),
      0x00
   };

   static const I_CHAR* aValues_002_234_008_000_000[] = {
      I_("Austria"),
      I_("Germany"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_234_008_000_000;
   const BFSubstitutionSet SubSet_002_234_008_000_000(
    &aKeys_002_234_008_000_000[0], &aValues_002_234_008_000_000[0] );
   // Substitution set ACHProcessorSet.  Language: nlNL
   static const I_CHAR* aKeys_002_234_010_000_000[] = {
      I_("AUT"),
      I_("DEU"),
      0x00
   };

   static const I_CHAR* aValues_002_234_010_000_000[] = {
      I_("OOSTENRIJK"),
      I_("DUITSLAND"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_234_010_000_000;
   const BFSubstitutionSet SubSet_002_234_010_000_000(
    &aKeys_002_234_010_000_000[0], &aValues_002_234_010_000_000[0] );
   // Substitution set BankingEntitySubst.  Language: enUS
   static const I_CHAR* aKeys_002_235_001_000_000[] = {
      I_("10"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("01"),
      I_("11"),
      I_("07"),
      I_("05"),
      I_("12"),
      I_("13"),
      0x00
   };

   static const I_CHAR* aValues_002_235_001_000_000[] = {
      I_("Shareholder Banking Info"),
      I_("Broker Banking Info"),
      I_("Branch Banking Info"),
      I_("Agent Banking Info"),
      I_("Client Banking Info"),
      I_("Fund Banking Info"),
      I_("Fund Class Banking Info"),
      I_("Fund Group Banking Info"),
      I_("Fund Sponsor Banking Info"),
      I_("Reg Agent"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_235_001_000_000;
   const BFSubstitutionSet SubSet_002_235_001_000_000(
    &aKeys_002_235_001_000_000[0], &aValues_002_235_001_000_000[0] );
   // Substitution set BankingEntitySubst.  Language: enCA
   static const I_CHAR* aKeys_002_235_003_000_000[] = {
      I_("10"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("01"),
      I_("11"),
      0x00
   };

   static const I_CHAR* aValues_002_235_003_000_000[] = {
      I_("Shareholder Banking Info"),
      I_("Broker Banking Info"),
      I_("Branch Banking Info"),
      I_("Agent Banking Info"),
      I_("Client Banking Info"),
      I_("Fund Banking Info"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_235_003_000_000;
   const BFSubstitutionSet SubSet_002_235_003_000_000(
    &aKeys_002_235_003_000_000[0], &aValues_002_235_003_000_000[0] );
   // Substitution set BankingEntitySubst.  Language: frCA
   static const I_CHAR* aKeys_002_235_005_000_000[] = {
      I_("10"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("01"),
      I_("11"),
      I_("07"),
      I_("05"),
      I_("12"),
      I_("13"),
      0x00
   };

   static const I_CHAR* aValues_002_235_005_000_000[] = {
      I_("Information bancaire du détenteur"),
      I_("Information bancaire du courtier"),
      I_("Information bancaire de l'unité de service"),
      I_("Information bancaire de l'agent"),
      I_("Information bancaire du client"),
      I_("Information bancaire du fonds"),
      I_("Information bancaire de la classe de fonds"),
      I_("Information bancaire du groupe de fonds"),
      I_("Information bancaire du promoteur du fonds"),
      I_("Agent d'enregistrement"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_235_005_000_000;
   const BFSubstitutionSet SubSet_002_235_005_000_000(
    &aKeys_002_235_005_000_000[0], &aValues_002_235_005_000_000[0] );
   // Substitution set BankingEntitySubst.  Language: enIE
   static const I_CHAR* aKeys_002_235_006_000_000[] = {
      I_("10"),
      I_("02"),
      I_("03"),
      I_("04"),
      0x00
   };

   static const I_CHAR* aValues_002_235_006_000_000[] = {
      I_("Shareholder Banking Info"),
      I_("Broker Banking Info"),
      I_("Branch Banking Info"),
      I_("Agent Banking Info"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_235_006_000_000;
   const BFSubstitutionSet SubSet_002_235_006_000_000(
    &aKeys_002_235_006_000_000[0], &aValues_002_235_006_000_000[0] );
   // Substitution set BankingEntitySubst.  Language: deDE
   static const I_CHAR* aKeys_002_235_007_000_000[] = {
      I_("10"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("01"),
      I_("11"),
      I_("07"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_235_007_000_000[] = {
      I_("Shareholder Banking Info"),
      I_("Broker Banking Info"),
      I_("Branch Banking Info"),
      I_("Agent Banking Info"),
      I_("Client Banking Info"),
      I_("Fund Banking Info"),
      I_("Fund Class Banking Info"),
      I_("Fund Group Banking Info"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_235_007_000_000;
   const BFSubstitutionSet SubSet_002_235_007_000_000(
    &aKeys_002_235_007_000_000[0], &aValues_002_235_007_000_000[0] );
   // Substitution set BankingEntitySubst.  Language: esEs
   static const I_CHAR* aKeys_002_235_008_000_000[] = {
      I_("10"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("01"),
      I_("11"),
      0x00
   };

   static const I_CHAR* aValues_002_235_008_000_000[] = {
      I_("Shareholder Banking Info"),
      I_("Broker Banking Info"),
      I_("Branch Banking Info"),
      I_("Agent Banking Info"),
      I_("Client Banking Info"),
      I_("Fund Banking Info"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_235_008_000_000;
   const BFSubstitutionSet SubSet_002_235_008_000_000(
    &aKeys_002_235_008_000_000[0], &aValues_002_235_008_000_000[0] );
   // Substitution set BankingEntitySubst.  Language: nlNL
   static const I_CHAR* aKeys_002_235_010_000_000[] = {
      I_("10"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("01"),
      I_("11"),
      0x00
   };

   static const I_CHAR* aValues_002_235_010_000_000[] = {
      I_("Shareholder Banking Info"),
      I_("Broker Banking Info"),
      I_("Branch Banking Info"),
      I_("Agent Banking Info"),
      I_("Client Banking Info"),
      I_("Fund Banking Info"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_235_010_000_000;
   const BFSubstitutionSet SubSet_002_235_010_000_000(
    &aKeys_002_235_010_000_000[0], &aValues_002_235_010_000_000[0] );
   // Substitution set BankInstrComboSetBroker.  Language: enUS
   static const I_CHAR* aKeys_002_238_001_000_000[] = {
      I_("Broker"),
      0x00
   };

   static const I_CHAR* aValues_002_238_001_000_000[] = {
      I_("Broker"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_238_001_000_000;
   const BFSubstitutionSet SubSet_002_238_001_000_000(
    &aKeys_002_238_001_000_000[0], &aValues_002_238_001_000_000[0] );
   // Substitution set BankInstrComboSetBroker.  Language: enCA
   static const I_CHAR* aKeys_002_238_003_000_000[] = {
      I_("Broker"),
      0x00
   };

   static const I_CHAR* aValues_002_238_003_000_000[] = {
      I_("Broker"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_238_003_000_000;
   const BFSubstitutionSet SubSet_002_238_003_000_000(
    &aKeys_002_238_003_000_000[0], &aValues_002_238_003_000_000[0] );
   // Substitution set BankInstrComboSetBroker.  Language: frCA
   static const I_CHAR* aKeys_002_238_005_000_000[] = {
      I_("Broker"),
      0x00
   };

   static const I_CHAR* aValues_002_238_005_000_000[] = {
      I_("Courtier"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_238_005_000_000;
   const BFSubstitutionSet SubSet_002_238_005_000_000(
    &aKeys_002_238_005_000_000[0], &aValues_002_238_005_000_000[0] );
   // Substitution set BankInstrComboSetBroker.  Language: enIE
   static const I_CHAR* aKeys_002_238_006_000_000[] = {
      I_("Broker"),
      0x00
   };

   static const I_CHAR* aValues_002_238_006_000_000[] = {
      I_("Broker"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_238_006_000_000;
   const BFSubstitutionSet SubSet_002_238_006_000_000(
    &aKeys_002_238_006_000_000[0], &aValues_002_238_006_000_000[0] );
   // Substitution set BankInstrComboSetBroker.  Language: deDE
   static const I_CHAR* aKeys_002_238_007_000_000[] = {
      I_("Broker"),
      0x00
   };

   static const I_CHAR* aValues_002_238_007_000_000[] = {
      I_("Broker"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_238_007_000_000;
   const BFSubstitutionSet SubSet_002_238_007_000_000(
    &aKeys_002_238_007_000_000[0], &aValues_002_238_007_000_000[0] );
   // Substitution set BankInstrComboSetBroker.  Language: esEs
   static const I_CHAR* aKeys_002_238_008_000_000[] = {
      I_("Broker"),
      0x00
   };

   static const I_CHAR* aValues_002_238_008_000_000[] = {
      I_("Broker"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_238_008_000_000;
   const BFSubstitutionSet SubSet_002_238_008_000_000(
    &aKeys_002_238_008_000_000[0], &aValues_002_238_008_000_000[0] );
   // Substitution set BankInstrComboSetBroker.  Language: nlNL
   static const I_CHAR* aKeys_002_238_010_000_000[] = {
      I_("Broker"),
      0x00
   };

   static const I_CHAR* aValues_002_238_010_000_000[] = {
      I_("Makelaar"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_238_010_000_000;
   const BFSubstitutionSet SubSet_002_238_010_000_000(
    &aKeys_002_238_010_000_000[0], &aValues_002_238_010_000_000[0] );
   // Substitution set BankInstrComboSetBranch.  Language: enUS
   static const I_CHAR* aKeys_002_239_001_000_000[] = {
      I_("Branch"),
      0x00
   };

   static const I_CHAR* aValues_002_239_001_000_000[] = {
      I_("Branch"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_239_001_000_000;
   const BFSubstitutionSet SubSet_002_239_001_000_000(
    &aKeys_002_239_001_000_000[0], &aValues_002_239_001_000_000[0] );
   // Substitution set BankInstrComboSetBranch.  Language: enCA
   static const I_CHAR* aKeys_002_239_003_000_000[] = {
      I_("Branch"),
      0x00
   };

   static const I_CHAR* aValues_002_239_003_000_000[] = {
      I_("Branch"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_239_003_000_000;
   const BFSubstitutionSet SubSet_002_239_003_000_000(
    &aKeys_002_239_003_000_000[0], &aValues_002_239_003_000_000[0] );
   // Substitution set BankInstrComboSetBranch.  Language: frCA
   static const I_CHAR* aKeys_002_239_005_000_000[] = {
      I_("Branch"),
      0x00
   };

   static const I_CHAR* aValues_002_239_005_000_000[] = {
      I_("Unité de service"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_239_005_000_000;
   const BFSubstitutionSet SubSet_002_239_005_000_000(
    &aKeys_002_239_005_000_000[0], &aValues_002_239_005_000_000[0] );
   // Substitution set BankInstrComboSetBranch.  Language: enIE
   static const I_CHAR* aKeys_002_239_006_000_000[] = {
      I_("Branch"),
      0x00
   };

   static const I_CHAR* aValues_002_239_006_000_000[] = {
      I_("Branch"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_239_006_000_000;
   const BFSubstitutionSet SubSet_002_239_006_000_000(
    &aKeys_002_239_006_000_000[0], &aValues_002_239_006_000_000[0] );
   // Substitution set BankInstrComboSetBranch.  Language: deDE
   static const I_CHAR* aKeys_002_239_007_000_000[] = {
      I_("Branch"),
      0x00
   };

   static const I_CHAR* aValues_002_239_007_000_000[] = {
      I_("Branch"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_239_007_000_000;
   const BFSubstitutionSet SubSet_002_239_007_000_000(
    &aKeys_002_239_007_000_000[0], &aValues_002_239_007_000_000[0] );
   // Substitution set BankInstrComboSetBranch.  Language: esEs
   static const I_CHAR* aKeys_002_239_008_000_000[] = {
      I_("Branch"),
      0x00
   };

   static const I_CHAR* aValues_002_239_008_000_000[] = {
      I_("Branch"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_239_008_000_000;
   const BFSubstitutionSet SubSet_002_239_008_000_000(
    &aKeys_002_239_008_000_000[0], &aValues_002_239_008_000_000[0] );
   // Substitution set BankInstrComboSetBranch.  Language: nlNL
   static const I_CHAR* aKeys_002_239_010_000_000[] = {
      I_("Branch"),
      0x00
   };

   static const I_CHAR* aValues_002_239_010_000_000[] = {
      I_("Branch"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_239_010_000_000;
   const BFSubstitutionSet SubSet_002_239_010_000_000(
    &aKeys_002_239_010_000_000[0], &aValues_002_239_010_000_000[0] );
}
