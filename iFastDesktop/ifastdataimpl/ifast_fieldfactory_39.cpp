// Data Field Factory Function
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Friday, January 18, 2019 14:49:03

#include "stdafx.h"
#include <bfdata/bfdatafield.hpp>
#include <bfdata/bfdataid.hpp>

namespace ifds
{
   extern const BFTextFieldId DfltConfDetlKeyValue;
   extern const BFTextFieldId DfltConfDetlDefValue;
   extern const BFTextFieldId PriceCode6;
   extern const BFTextFieldId PriceDesc6;
   extern const BFDecimalFieldId UnitValue6;
   extern const BFDecimalFieldId ChgFactor6;
   extern const BFTextFieldId PriceCode7;
   extern const BFTextFieldId PriceDesc7;
   extern const BFDecimalFieldId UnitValue7;
   extern const BFDecimalFieldId ChgFactor7;
   extern const BFTextFieldId PriceCode8;
   extern const BFDecimalFieldId UnitValue8;
   extern const BFTextFieldId PriceDesc8;
   extern const BFDecimalFieldId ChgFactor8;
   extern const BFTextFieldId PriceCode9;
   extern const BFTextFieldId PriceDesc9;
   extern const BFDecimalFieldId UnitValue9;
   extern const BFDecimalFieldId ChgFactor9;
   extern const BFTextFieldId PriceCode10;
   extern const BFTextFieldId PriceDesc10;
   extern const BFDecimalFieldId UnitValue10;
   extern const BFDecimalFieldId ChgFactor10;
   extern const BFTextFieldId PriceCode11;
   extern const BFTextFieldId PriceDesc11;
   extern const BFDecimalFieldId UnitValue11;
   extern const BFDecimalFieldId ChgFactor11;
   extern const BFTextFieldId PriceCode12;
   extern const BFTextFieldId PriceDesc12;
   extern const BFDecimalFieldId UnitValue12;
   extern const BFDecimalFieldId ChgFactor12;
   extern const BFTextFieldId PriceCode13;
   extern const BFTextFieldId PriceDesc13;
   extern const BFDecimalFieldId UnitValue13;
   extern const BFDecimalFieldId ChgFactor13;
   extern const BFTextFieldId PriceTypes;
   extern const BFTextFieldId GetNextAvailList;
   extern const BFDecimalFieldId Deduction;
   extern const BFDecimalFieldId CashRate;
   extern const BFDecimalFieldId AttrbRate;
   extern const BFDecimalFieldId TaxCrdRate;
   extern const BFDecimalFieldId CashAmt;
   extern const BFDecimalFieldId AttrbAmt;
   extern const BFDecimalFieldId TaxCrdAmt;
   extern const BFTextFieldId ComponentSplit;
   extern const BFTextFieldId AMSDeltaAllocHeading;
   extern const BFTextFieldId AMSDeltaRequestUUID;
   extern const BFTextFieldId DilutionLinkNum;
   extern const BFDecimalFieldId AMSAllocDelta;
   extern const BFTextFieldId AMSDeltaDetlUUID;
   extern const BFTextFieldId FSRVLinkNum;
   extern const BFTextFieldId WHTDistributionHeading;
   extern const BFTextFieldId TermEntryExist;
   extern const BFTextFieldId DistSplitType;
   extern const BFTextFieldId FundSERVClient;
   extern const BFDateFieldId LastAMSModDate;
   extern const BFTextFieldId rxOpenDate;
   extern const BFTextFieldId rxCloseDate;
   extern const BFTextFieldId RejFundCode;
   extern const BFTextFieldId PriceInCode;
   extern const BFTextFieldId PriceInCodeList;
   extern const BFTextFieldId PriceCodeList;
   extern const BFTextFieldId RebookCopy;
   extern const BFTextFieldId AcctOpenCloseDates;
   extern const BFTextFieldId AccDetailsFundsCFHeadingSet;
   extern const BFTextFieldId IntraDayPricing;
   extern const BFTextFieldId NASUMode;
   extern const BFTextFieldId RDSPValidation;
   extern const BFTextFieldId RDSPRelntoBene;
   extern const BFTextFieldId RDSPConsent;
   extern const BFDateFieldId RDSPConsentDeff;
   extern const BFTextFieldId AccountClosingReasonRDSP;
   extern const BFTextFieldId GRRepayReasonRDSP;
   extern const BFTextFieldId FullMoneyOutIndc;
   extern const BFTextFieldId GateOverrideIndicator;
   extern const BFTextFieldId ExtAccount;
   extern const BFTextFieldId ExtSpecimenPlanNo;
   extern const BFDecimalFieldId NontaxContrib;
   extern const BFDecimalFieldId Rollovers;
   extern const BFDecimalFieldId CDSGrant;
   extern const BFDecimalFieldId CDSBond;
   extern const BFDecimalFieldId CurrYrFMV;
   extern const BFDecimalFieldId PrevYrGrantBond;
   extern const BFDecimalFieldId PrevYrContrib;
   extern const BFDecimalFieldId PrevYrNonTaxRedAmt;
   extern const BFDecimalFieldId PrevYrTaxRedAmt;
   extern const BFDecimalFieldId CurrYrNonTaxRedAmt;
   extern const BFDecimalFieldId CurrYrTaxRedAmt;
   extern const BFTextFieldId CallingType;
   extern const BFTextFieldId VerifyFilter;
   extern const BFDateFieldId RDSPPaymtDate;
   extern const BFTextFieldId LiqRedFeeExist;
   extern const BFDecimalFieldId RefundNAV;
   extern const BFNumericFieldId SrchEntityId;
   extern const BFTextFieldId DistrAcctTypeDetl;
   extern const BFTextFieldId MatchingKey;
   extern const BFTextFieldId CashDateOverriden;
   extern const BFTextFieldId OrderUserOverride;   
   extern const BFTextFieldId VerifyStatDetails;
   extern const BFTextFieldId DefStatus;
   extern const BFTextFieldId VerifyReqExist;
   extern const BFTextFieldId GrossNetType;
   extern const BFDataFieldProperties s_FldProp_DfltConfDetlKeyValue;
   extern const BFDataFieldProperties s_FldProp_DfltConfDetlDefValue;
   extern const BFDataFieldProperties s_FldProp_PriceCode6;
   extern const BFDataFieldProperties s_FldProp_PriceDesc6;
   extern const BFDataFieldProperties s_FldProp_UnitValue6;
   extern const BFDataFieldProperties s_FldProp_ChgFactor6;
   extern const BFDataFieldProperties s_FldProp_PriceCode7;
   extern const BFDataFieldProperties s_FldProp_PriceDesc7;
   extern const BFDataFieldProperties s_FldProp_UnitValue7;
   extern const BFDataFieldProperties s_FldProp_ChgFactor7;
   extern const BFDataFieldProperties s_FldProp_PriceCode8;
   extern const BFDataFieldProperties s_FldProp_UnitValue8;
   extern const BFDataFieldProperties s_FldProp_PriceDesc8;
   extern const BFDataFieldProperties s_FldProp_ChgFactor8;
   extern const BFDataFieldProperties s_FldProp_PriceCode9;
   extern const BFDataFieldProperties s_FldProp_PriceDesc9;
   extern const BFDataFieldProperties s_FldProp_UnitValue9;
   extern const BFDataFieldProperties s_FldProp_ChgFactor9;
   extern const BFDataFieldProperties s_FldProp_PriceCode10;
   extern const BFDataFieldProperties s_FldProp_PriceDesc10;
   extern const BFDataFieldProperties s_FldProp_UnitValue10;
   extern const BFDataFieldProperties s_FldProp_ChgFactor10;
   extern const BFDataFieldProperties s_FldProp_PriceCode11;
   extern const BFDataFieldProperties s_FldProp_PriceDesc11;
   extern const BFDataFieldProperties s_FldProp_UnitValue11;
   extern const BFDataFieldProperties s_FldProp_ChgFactor11;
   extern const BFDataFieldProperties s_FldProp_PriceCode12;
   extern const BFDataFieldProperties s_FldProp_PriceDesc12;
   extern const BFDataFieldProperties s_FldProp_UnitValue12;
   extern const BFDataFieldProperties s_FldProp_ChgFactor12;
   extern const BFDataFieldProperties s_FldProp_PriceCode13;
   extern const BFDataFieldProperties s_FldProp_PriceDesc13;
   extern const BFDataFieldProperties s_FldProp_UnitValue13;
   extern const BFDataFieldProperties s_FldProp_ChgFactor13;
   extern const BFDataFieldProperties s_FldProp_PriceTypes;
   extern const BFDataFieldProperties s_FldProp_GetNextAvailList;
   extern const BFDataFieldProperties s_FldProp_Deduction;
   extern const BFDataFieldProperties s_FldProp_CashRate;
   extern const BFDataFieldProperties s_FldProp_AttrbRate;
   extern const BFDataFieldProperties s_FldProp_TaxCrdRate;
   extern const BFDataFieldProperties s_FldProp_CashAmt;
   extern const BFDataFieldProperties s_FldProp_AttrbAmt;
   extern const BFDataFieldProperties s_FldProp_TaxCrdAmt;
   extern const BFDataFieldProperties s_FldProp_ComponentSplit;
   extern const BFDataFieldProperties s_FldProp_AMSDeltaAllocHeading;
   extern const BFDataFieldProperties s_FldProp_AMSDeltaRequestUUID;
   extern const BFDataFieldProperties s_FldProp_DilutionLinkNum;
   extern const BFDataFieldProperties s_FldProp_AMSAllocDelta;
   extern const BFDataFieldProperties s_FldProp_AMSDeltaDetlUUID;
   extern const BFDataFieldProperties s_FldProp_FSRVLinkNum;
   extern const BFDataFieldProperties s_FldProp_TermEntryExist;
   extern const BFDataFieldProperties s_FldProp_DistSplitType;
   extern const BFDataFieldProperties s_FldProp_FundSERVClient;
   extern const BFDataFieldProperties s_FldProp_LastAMSModDate;
   extern const BFDataFieldProperties s_FldProp_rxOpenDate;
   extern const BFDataFieldProperties s_FldProp_rxCloseDate;
   extern const BFDataFieldProperties s_FldProp_RejFundCode;
   extern const BFDataFieldProperties s_FldProp_PriceInCode;
   extern const BFDataFieldProperties s_FldProp_PriceInCodeList;
   extern const BFDataFieldProperties s_FldProp_PriceCodeList;
   extern const BFDataFieldProperties s_FldProp_RebookCopy;
   extern const BFDataFieldProperties s_FldProp_AcctOpenCloseDates;
   extern const BFDataFieldProperties s_FldProp_AccDetailsFundsCFHeadingSet;
   extern const BFDataFieldProperties s_FldProp_IntraDayPricing;
   extern const BFDataFieldProperties s_FldProp_NASUMode;
   extern const BFDataFieldProperties s_FldProp_RDSPValidation;
   extern const BFDataFieldProperties s_FldProp_RDSPRelntoBene;
   extern const BFDataFieldProperties s_FldProp_RDSPConsent;
   extern const BFDataFieldProperties s_FldProp_RDSPConsentDeff;
   extern const BFDataFieldProperties s_FldProp_AccountClosingReasonRDSP;
   extern const BFDataFieldProperties s_FldProp_GRRepayReasonRDSP;
   extern const BFDataFieldProperties s_FldProp_FullMoneyOutIndc;
   extern const BFDataFieldProperties s_FldProp_GateOverrideIndicator;
   extern const BFDataFieldProperties s_FldProp_ExtAccount;
   extern const BFDataFieldProperties s_FldProp_ExtSpecimenPlanNo;
   extern const BFDataFieldProperties s_FldProp_NontaxContrib;
   extern const BFDataFieldProperties s_FldProp_Rollovers;
   extern const BFDataFieldProperties s_FldProp_CDSGrant;
   extern const BFDataFieldProperties s_FldProp_CDSBond;
   extern const BFDataFieldProperties s_FldProp_CurrYrFMV;
   extern const BFDataFieldProperties s_FldProp_PrevYrGrantBond;
   extern const BFDataFieldProperties s_FldProp_PrevYrContrib;
   extern const BFDataFieldProperties s_FldProp_PrevYrNonTaxRedAmt;
   extern const BFDataFieldProperties s_FldProp_PrevYrTaxRedAmt;
   extern const BFDataFieldProperties s_FldProp_CurrYrNonTaxRedAmt;
   extern const BFDataFieldProperties s_FldProp_CurrYrTaxRedAmt;
   extern const BFDataFieldProperties s_FldProp_CallingType;
   extern const BFDataFieldProperties s_FldProp_VerifyFilter;
   extern const BFDataFieldProperties s_FldProp_RDSPPaymtDate;
   extern const BFDataFieldProperties s_FldProp_LiqRedFeeExist;
   extern const BFDataFieldProperties s_FldProp_RefundNAV;
   extern const BFDataFieldProperties s_FldProp_SrchEntityId;
   extern const BFDataFieldProperties s_FldProp_DistrAcctTypeDetl;
   extern const BFDataFieldProperties s_FldProp_MatchingKey;
   extern const BFDataFieldProperties s_FldProp_CashDateOverriden;
   extern const BFDataFieldProperties s_FldProp_OrderUserOverride;   
   extern const BFDataFieldProperties s_FldProp_VerifyStatDetails;
   extern const BFDataFieldProperties s_FldProp_DefStatus;
   extern const BFDataFieldProperties s_FldProp_VerifyReqExist;
   extern const BFDataFieldProperties s_FldProp_GrossNetType;
   BFDataField* createField_39( const BFFieldId id )
   {
      BFDataField* pField = NULL;
      switch( id.getId() )
      {
         case 40007800: pField = new BFTextField_60( DfltConfDetlKeyValue, &s_FldProp_DfltConfDetlKeyValue ); break;
         case 40007801: pField = new BFTextField_60( DfltConfDetlDefValue, &s_FldProp_DfltConfDetlDefValue ); break;
         case 40007802: pField = new BFTextField_60( PriceCode6, &s_FldProp_PriceCode6 ); break;
         case 40007803: pField = new BFTextField_60( PriceDesc6, &s_FldProp_PriceDesc6 ); break;
         case 40007804: pField = new BFDecimalField( UnitValue6, &s_FldProp_UnitValue6 ); break;
         case 40007805: pField = new BFDecimalField( ChgFactor6, &s_FldProp_ChgFactor6 ); break;
         case 40007806: pField = new BFTextField_60( PriceCode7, &s_FldProp_PriceCode7 ); break;
         case 40007807: pField = new BFTextField_60( PriceDesc7, &s_FldProp_PriceDesc7 ); break;
         case 40007808: pField = new BFDecimalField( UnitValue7, &s_FldProp_UnitValue7 ); break;
         case 40007809: pField = new BFDecimalField( ChgFactor7, &s_FldProp_ChgFactor7 ); break;
         case 40007810: pField = new BFTextField_60( PriceCode8, &s_FldProp_PriceCode8 ); break;
         case 40007811: pField = new BFTextField_60( PriceDesc8, &s_FldProp_PriceDesc8 ); break;
         case 40007812: pField = new BFDecimalField( UnitValue8, &s_FldProp_UnitValue8 ); break;
         case 40007813: pField = new BFDecimalField( ChgFactor8, &s_FldProp_ChgFactor8 ); break;
         case 40007814: pField = new BFTextField_60( PriceCode9, &s_FldProp_PriceCode9 ); break;
         case 40007815: pField = new BFTextField_60( PriceDesc9, &s_FldProp_PriceDesc9 ); break;
         case 40007816: pField = new BFDecimalField( UnitValue9, &s_FldProp_UnitValue9 ); break;
         case 40007817: pField = new BFDecimalField( ChgFactor9, &s_FldProp_ChgFactor9 ); break;
         case 40007818: pField = new BFTextField_60( PriceCode10, &s_FldProp_PriceCode10 ); break;
         case 40007819: pField = new BFTextField_60( PriceDesc10, &s_FldProp_PriceDesc10 ); break;
         case 40007820: pField = new BFDecimalField( UnitValue10, &s_FldProp_UnitValue10 ); break;
         case 40007821: pField = new BFDecimalField( ChgFactor10, &s_FldProp_ChgFactor10 ); break;
         case 40007822: pField = new BFTextField_60( PriceCode11, &s_FldProp_PriceCode11 ); break;
         case 40007823: pField = new BFTextField_60( PriceDesc11, &s_FldProp_PriceDesc11 ); break;
         case 40007824: pField = new BFDecimalField( UnitValue11, &s_FldProp_UnitValue11 ); break;
         case 40007825: pField = new BFDecimalField( ChgFactor11, &s_FldProp_ChgFactor11 ); break;
         case 40007826: pField = new BFTextField_60( PriceCode12, &s_FldProp_PriceCode12 ); break;
         case 40007827: pField = new BFTextField_60( PriceDesc12, &s_FldProp_PriceDesc12 ); break;
         case 40007828: pField = new BFDecimalField( UnitValue12, &s_FldProp_UnitValue12 ); break;
         case 40007829: pField = new BFDecimalField( ChgFactor12, &s_FldProp_ChgFactor12 ); break;
         case 40007830: pField = new BFTextField_60( PriceCode13, &s_FldProp_PriceCode13 ); break;
         case 40007831: pField = new BFTextField_60( PriceDesc13, &s_FldProp_PriceDesc13 ); break;
         case 40007832: pField = new BFDecimalField( UnitValue13, &s_FldProp_UnitValue13 ); break;
         case 40007833: pField = new BFDecimalField( ChgFactor13, &s_FldProp_ChgFactor13 ); break;
         case 40007834: pField = new BFTextField_60( PriceTypes, &s_FldProp_PriceTypes ); break;
         case 40007835: pField = new BFTextField_1( GetNextAvailList, &s_FldProp_GetNextAvailList ); break;
         case 40007836: pField = new BFDecimalField( Deduction, &s_FldProp_Deduction ); break;
         case 40007837: pField = new BFDecimalField( CashRate, &s_FldProp_CashRate ); break;
         case 40007838: pField = new BFDecimalField( AttrbRate, &s_FldProp_AttrbRate ); break;
         case 40007839: pField = new BFDecimalField( TaxCrdRate, &s_FldProp_TaxCrdRate ); break;
         case 40007840: pField = new BFDecimalField( CashAmt, &s_FldProp_CashAmt ); break;
         case 40007841: pField = new BFDecimalField( AttrbAmt, &s_FldProp_AttrbAmt ); break;
         case 40007842: pField = new BFDecimalField( TaxCrdAmt, &s_FldProp_TaxCrdAmt ); break;
         case 40007847: pField = new BFTextField_1( ComponentSplit, &s_FldProp_ComponentSplit ); break;
         case 40007848: pField = new BFTextField_60( AMSDeltaAllocHeading, &s_FldProp_AMSDeltaAllocHeading ); break;
         case 40007849: pField = new BFTextField_60( AMSDeltaRequestUUID, &s_FldProp_AMSDeltaRequestUUID ); break;
         case 40007850: pField = new BFTextField<20>( DilutionLinkNum, &s_FldProp_DilutionLinkNum ); break;
         case 40007853: pField = new BFDecimalField( AMSAllocDelta, &s_FldProp_AMSAllocDelta ); break;
         case 40007854: pField = new BFTextField_60( AMSDeltaDetlUUID, &s_FldProp_AMSDeltaDetlUUID ); break;
         case 40007856: pField = new BFTextField<20>( FSRVLinkNum, &s_FldProp_FSRVLinkNum ); break;
         case 40007860: pField = new BFTextField_1( TermEntryExist, &s_FldProp_TermEntryExist ); break;
         case 40007861: pField = new BFTextField_2( DistSplitType, &s_FldProp_DistSplitType ); break;
         case 40007865: pField = new BFTextField_1( FundSERVClient, &s_FldProp_FundSERVClient ); break;
         case 40007866: pField = new BFDateField( LastAMSModDate, &s_FldProp_LastAMSModDate ); break;
         case 40007867: pField = new BFTextField_10( rxOpenDate, &s_FldProp_rxOpenDate ); break;
         case 40007868: pField = new BFTextField_10( rxCloseDate, &s_FldProp_rxCloseDate ); break;
         case 40007873: pField = new BFTextField_60( RejFundCode, &s_FldProp_RejFundCode ); break;
         case 40007875: pField = new BFTextField_60( PriceInCode, &s_FldProp_PriceInCode ); break;
         case 40007878: pField = new BFTextField_60( PriceInCodeList, &s_FldProp_PriceInCodeList ); break;
         case 40007879: pField = new BFTextField_60( PriceCodeList, &s_FldProp_PriceCodeList ); break;
         case 40007882: pField = new BFTextField_1( RebookCopy, &s_FldProp_RebookCopy ); break;
         case 40007883: pField = new BFTextField_1( AcctOpenCloseDates, &s_FldProp_AcctOpenCloseDates ); break;
         case 40007884: pField = new BFTextField_60( AccDetailsFundsCFHeadingSet, &s_FldProp_AccDetailsFundsCFHeadingSet ); break;
         case 40007885: pField = new BFTextField_1( IntraDayPricing, &s_FldProp_IntraDayPricing ); break;
         case 40007886: pField = new BFTextField_1( NASUMode, &s_FldProp_NASUMode ); break;
         case 40007887: pField = new BFTextField_1( RDSPValidation, &s_FldProp_RDSPValidation ); break;
         case 40007888: pField = new BFTextField_60( RDSPRelntoBene, &s_FldProp_RDSPRelntoBene ); break;
         case 40007889: pField = new BFTextField_1( RDSPConsent, &s_FldProp_RDSPConsent ); break;
         case 40007890: pField = new BFDateField( RDSPConsentDeff, &s_FldProp_RDSPConsentDeff ); break;
         case 40007891: pField = new BFTextField_60( AccountClosingReasonRDSP, &s_FldProp_AccountClosingReasonRDSP ); break;
         case 40007892: pField = new BFTextField_60( GRRepayReasonRDSP, &s_FldProp_GRRepayReasonRDSP ); break;
         case 40007893: pField = new BFTextField_60( FullMoneyOutIndc, &s_FldProp_FullMoneyOutIndc ); break;
         case 40007896: pField = new BFTextField_60( GateOverrideIndicator, &s_FldProp_GateOverrideIndicator ); break;
         case 40007900: pField = new BFTextField<30>( ExtAccount, &s_FldProp_ExtAccount ); break;
         case 40007901: pField = new BFTextField<30>( ExtSpecimenPlanNo, &s_FldProp_ExtSpecimenPlanNo ); break;
         case 40007902: pField = new BFDecimalField( NontaxContrib, &s_FldProp_NontaxContrib ); break;
         case 40007903: pField = new BFDecimalField( Rollovers, &s_FldProp_Rollovers ); break;
         case 40007904: pField = new BFDecimalField( CDSGrant, &s_FldProp_CDSGrant ); break;
         case 40007905: pField = new BFDecimalField( CDSBond, &s_FldProp_CDSBond ); break;
         case 40007906: pField = new BFDecimalField( CurrYrFMV, &s_FldProp_CurrYrFMV ); break;
         case 40007907: pField = new BFDecimalField( PrevYrGrantBond, &s_FldProp_PrevYrGrantBond ); break;
         case 40007908: pField = new BFDecimalField( PrevYrContrib, &s_FldProp_PrevYrContrib ); break;
         case 40007909: pField = new BFDecimalField( PrevYrNonTaxRedAmt, &s_FldProp_PrevYrNonTaxRedAmt ); break;
         case 40007910: pField = new BFDecimalField( PrevYrTaxRedAmt, &s_FldProp_PrevYrTaxRedAmt ); break;
         case 40007911: pField = new BFDecimalField( CurrYrNonTaxRedAmt, &s_FldProp_CurrYrNonTaxRedAmt ); break;
         case 40007912: pField = new BFDecimalField( CurrYrTaxRedAmt, &s_FldProp_CurrYrTaxRedAmt ); break;
         case 40007915: pField = new BFTextField_60( CallingType, &s_FldProp_CallingType ); break;
         case 40007916: pField = new BFTextField_60( VerifyFilter, &s_FldProp_VerifyFilter ); break;
         case 40007917: pField = new BFDateField( RDSPPaymtDate, &s_FldProp_RDSPPaymtDate ); break;
         case 40007918: pField = new BFTextField_1( LiqRedFeeExist, &s_FldProp_LiqRedFeeExist ); break;
         case 40007921: pField = new BFDecimalField( RefundNAV, &s_FldProp_RefundNAV ); break;
         case 40007928: pField = new BFNumericField( SrchEntityId, &s_FldProp_SrchEntityId ); break;
         case 40007930: pField = new BFTextField<80>( DistrAcctTypeDetl, &s_FldProp_DistrAcctTypeDetl ); break;
		 case 40007931: pField = new BFTextField_1( CashDateOverriden, &s_FldProp_CashDateOverriden ); break; 
         case 40007932: pField = new BFTextField<12>( MatchingKey, &s_FldProp_MatchingKey ); break;                  
         case 40007933: pField = new BFTextField_10( OrderUserOverride, &s_FldProp_OrderUserOverride ); break;		 
         case 40007934: pField = new BFTextField_60( VerifyStatDetails, &s_FldProp_VerifyStatDetails ); break;
         case 40007943: pField = new BFTextField_60( DefStatus, &s_FldProp_DefStatus ); break;
         case 40007944: pField = new BFTextField_1( VerifyReqExist, &s_FldProp_VerifyReqExist ); break;
		 case 40007945: pField = new BFTextField_1( GrossNetType, &s_FldProp_GrossNetType ); break;
	  }
      return pField;
   }
}












