// BFDataImpl implementation file for DataSet DSTC0114.REQ
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0114_req.h"


// This function creates an instance of dsi_DSTC0114_REQ
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0114_REQ() { return new dsi_DSTC0114_REQ; }

dsi_DSTC0114_REQ::dsi_DSTC0114_REQ()
: BFDataImpl( 40001236 )
, SessionId_( ifds::SessionId, &ifds::s_FldProp_SessionId )
, User_Id_( ifds::User_Id, &ifds::s_FldProp_User_Id )
, LanguageCode_( ifds::LanguageCode, &ifds::s_FldProp_LanguageCode )
, CompanyId_( ifds::CompanyId, &ifds::s_FldProp_CompanyId )
, RunMode_( ifds::RunMode, &ifds::s_FldProp_RunMode )
, RegAddr_( ifds::RegAddr, &ifds::s_FldProp_RegAddr )
, DivConfAddr_( ifds::DivConfAddr, &ifds::s_FldProp_DivConfAddr )
, DivChqAddr_( ifds::DivChqAddr, &ifds::s_FldProp_DivChqAddr )
, TxnConfAddr_( ifds::TxnConfAddr, &ifds::s_FldProp_TxnConfAddr )
, DupConfAddr_( ifds::DupConfAddr, &ifds::s_FldProp_DupConfAddr )
, StmtAddr_( ifds::StmtAddr, &ifds::s_FldProp_StmtAddr )
, DupStmtAddr_( ifds::DupStmtAddr, &ifds::s_FldProp_DupStmtAddr )
, CertAddr_( ifds::CertAddr, &ifds::s_FldProp_CertAddr )
, TaxAddr_( ifds::TaxAddr, &ifds::s_FldProp_TaxAddr )
, LetAddr_( ifds::LetAddr, &ifds::s_FldProp_LetAddr )
, BenAddr_( ifds::BenAddr, &ifds::s_FldProp_BenAddr )
, DupConfCopies_( ifds::DupConfCopies, &ifds::s_FldProp_DupConfCopies )
, DupStmtCopies_( ifds::DupStmtCopies, &ifds::s_FldProp_DupStmtCopies )
, RegOnHold_( ifds::RegOnHold, &ifds::s_FldProp_RegOnHold )
, DivConfOnHold_( ifds::DivConfOnHold, &ifds::s_FldProp_DivConfOnHold )
, DivChqOnHold_( ifds::DivChqOnHold, &ifds::s_FldProp_DivChqOnHold )
, TxnConfOnHold_( ifds::TxnConfOnHold, &ifds::s_FldProp_TxnConfOnHold )
, DupConfOnHold_( ifds::DupConfOnHold, &ifds::s_FldProp_DupConfOnHold )
, StmtOnHold_( ifds::StmtOnHold, &ifds::s_FldProp_StmtOnHold )
, DupStmtOnHold_( ifds::DupStmtOnHold, &ifds::s_FldProp_DupStmtOnHold )
, CertOnHold_( ifds::CertOnHold, &ifds::s_FldProp_CertOnHold )
, TaxOnHold_( ifds::TaxOnHold, &ifds::s_FldProp_TaxOnHold )
, LetOnHold_( ifds::LetOnHold, &ifds::s_FldProp_LetOnHold )
, BenOnHold_( ifds::BenOnHold, &ifds::s_FldProp_BenOnHold )
, SATxnConfCode_( ifds::SATxnConfCode, &ifds::s_FldProp_SATxnConfCode )
, SADivConfCode_( ifds::SADivConfCode, &ifds::s_FldProp_SADivConfCode )
, SALettersCode_( ifds::SALettersCode, &ifds::s_FldProp_SALettersCode )
, AcctMstrVer_( ifds::AcctMstrVer, &ifds::s_FldProp_AcctMstrVer )
, NFCAddr_( ifds::NFCAddr, &ifds::s_FldProp_NFCAddr )
, NFConHold_( ifds::NFConHold, &ifds::s_FldProp_NFConHold )
, AccountNum_( ifds::AccountNum, &ifds::s_FldProp_AccountNum )
, AcctMstrRid_( ifds::AcctMstrRid, &ifds::s_FldProp_AcctMstrRid )
, Track_( ifds::Track, &ifds::s_FldProp_Track )
, Activity_( ifds::Activity, &ifds::s_FldProp_Activity )
, ContrAddr_( ifds::ContrAddr, &ifds::s_FldProp_ContrAddr )
, ContrHold_( ifds::ContrHold, &ifds::s_FldProp_ContrHold )
, AnnlRptsAddr_( ifds::AnnlRptsAddr, &ifds::s_FldProp_AnnlRptsAddr )
, AnnlRptsHold_( ifds::AnnlRptsHold, &ifds::s_FldProp_AnnlRptsHold )
, ProspAddr_( ifds::ProspAddr, &ifds::s_FldProp_ProspAddr )
, ProspHold_( ifds::ProspHold, &ifds::s_FldProp_ProspHold )
, TaxSuppress_( ifds::TaxSuppress, &ifds::s_FldProp_TaxSuppress )
, TaxWaive_( ifds::TaxWaive, &ifds::s_FldProp_TaxWaive )
, TaxMail_( ifds::TaxMail, &ifds::s_FldProp_TaxMail )
, TaxFax_( ifds::TaxFax, &ifds::s_FldProp_TaxFax )
, TaxCD_( ifds::TaxCD, &ifds::s_FldProp_TaxCD )
, TaxEmail_( ifds::TaxEmail, &ifds::s_FldProp_TaxEmail )
, LetSuppress_( ifds::LetSuppress, &ifds::s_FldProp_LetSuppress )
, LetWaive_( ifds::LetWaive, &ifds::s_FldProp_LetWaive )
, LetMail_( ifds::LetMail, &ifds::s_FldProp_LetMail )
, LetFax_( ifds::LetFax, &ifds::s_FldProp_LetFax )
, LetCD_( ifds::LetCD, &ifds::s_FldProp_LetCD )
, LetEmail_( ifds::LetEmail, &ifds::s_FldProp_LetEmail )
, CertSuppress_( ifds::CertSuppress, &ifds::s_FldProp_CertSuppress )
, CertWaive_( ifds::CertWaive, &ifds::s_FldProp_CertWaive )
, CertMail_( ifds::CertMail, &ifds::s_FldProp_CertMail )
, CertCD_( ifds::CertCD, &ifds::s_FldProp_CertCD )
, CertEmail_( ifds::CertEmail, &ifds::s_FldProp_CertEmail )
, CertFax_( ifds::CertFax, &ifds::s_FldProp_CertFax )
, DivConfSuppress_( ifds::DivConfSuppress, &ifds::s_FldProp_DivConfSuppress )
, DivConfWaive_( ifds::DivConfWaive, &ifds::s_FldProp_DivConfWaive )
, DivConfMail_( ifds::DivConfMail, &ifds::s_FldProp_DivConfMail )
, DivConfFax_( ifds::DivConfFax, &ifds::s_FldProp_DivConfFax )
, DivConfCD_( ifds::DivConfCD, &ifds::s_FldProp_DivConfCD )
, DivConfEmail_( ifds::DivConfEmail, &ifds::s_FldProp_DivConfEmail )
, DivChqSuppress_( ifds::DivChqSuppress, &ifds::s_FldProp_DivChqSuppress )
, DivChqWaive_( ifds::DivChqWaive, &ifds::s_FldProp_DivChqWaive )
, DivChqMail_( ifds::DivChqMail, &ifds::s_FldProp_DivChqMail )
, DivChqFax_( ifds::DivChqFax, &ifds::s_FldProp_DivChqFax )
, DivChqCD_( ifds::DivChqCD, &ifds::s_FldProp_DivChqCD )
, DivChqEmail_( ifds::DivChqEmail, &ifds::s_FldProp_DivChqEmail )
, RegSuppress_( ifds::RegSuppress, &ifds::s_FldProp_RegSuppress )
, RegWaive_( ifds::RegWaive, &ifds::s_FldProp_RegWaive )
, RegMail_( ifds::RegMail, &ifds::s_FldProp_RegMail )
, RegFax_( ifds::RegFax, &ifds::s_FldProp_RegFax )
, RegCD_( ifds::RegCD, &ifds::s_FldProp_RegCD )
, RegEmail_( ifds::RegEmail, &ifds::s_FldProp_RegEmail )
, AnnlRptsSuppress_( ifds::AnnlRptsSuppress, &ifds::s_FldProp_AnnlRptsSuppress )
, AnnlRptsWaive_( ifds::AnnlRptsWaive, &ifds::s_FldProp_AnnlRptsWaive )
, AnnlRptsMail_( ifds::AnnlRptsMail, &ifds::s_FldProp_AnnlRptsMail )
, AnnlRptsFax_( ifds::AnnlRptsFax, &ifds::s_FldProp_AnnlRptsFax )
, AnnlRptsCD_( ifds::AnnlRptsCD, &ifds::s_FldProp_AnnlRptsCD )
, AnnlRptsEmail_( ifds::AnnlRptsEmail, &ifds::s_FldProp_AnnlRptsEmail )
, ProspSuppress_( ifds::ProspSuppress, &ifds::s_FldProp_ProspSuppress )
, ProspWaive_( ifds::ProspWaive, &ifds::s_FldProp_ProspWaive )
, ProspMail_( ifds::ProspMail, &ifds::s_FldProp_ProspMail )
, ProspFax_( ifds::ProspFax, &ifds::s_FldProp_ProspFax )
, ProspCD_( ifds::ProspCD, &ifds::s_FldProp_ProspCD )
, ProspEmail_( ifds::ProspEmail, &ifds::s_FldProp_ProspEmail )
, BenSuppress_( ifds::BenSuppress, &ifds::s_FldProp_BenSuppress )
, BenWaive_( ifds::BenWaive, &ifds::s_FldProp_BenWaive )
, BenMail_( ifds::BenMail, &ifds::s_FldProp_BenMail )
, BenFax_( ifds::BenFax, &ifds::s_FldProp_BenFax )
, BenCD_( ifds::BenCD, &ifds::s_FldProp_BenCD )
, BenEmail_( ifds::BenEmail, &ifds::s_FldProp_BenEmail )
, StmtSuppress_( ifds::StmtSuppress, &ifds::s_FldProp_StmtSuppress )
, StmtWaive_( ifds::StmtWaive, &ifds::s_FldProp_StmtWaive )
, StmtMail_( ifds::StmtMail, &ifds::s_FldProp_StmtMail )
, StmtFax_( ifds::StmtFax, &ifds::s_FldProp_StmtFax )
, StmtCD_( ifds::StmtCD, &ifds::s_FldProp_StmtCD )
, StmtEmail_( ifds::StmtEmail, &ifds::s_FldProp_StmtEmail )
, DupStmtSuppress_( ifds::DupStmtSuppress, &ifds::s_FldProp_DupStmtSuppress )
, DupStmtWaive_( ifds::DupStmtWaive, &ifds::s_FldProp_DupStmtWaive )
, DupStmtMail_( ifds::DupStmtMail, &ifds::s_FldProp_DupStmtMail )
, DupStmtFax_( ifds::DupStmtFax, &ifds::s_FldProp_DupStmtFax )
, DupStmtCD_( ifds::DupStmtCD, &ifds::s_FldProp_DupStmtCD )
, DupStmtEmail_( ifds::DupStmtEmail, &ifds::s_FldProp_DupStmtEmail )
, NFConfSuppress_( ifds::NFConfSuppress, &ifds::s_FldProp_NFConfSuppress )
, NFConfWaive_( ifds::NFConfWaive, &ifds::s_FldProp_NFConfWaive )
, NFConfMail_( ifds::NFConfMail, &ifds::s_FldProp_NFConfMail )
, NFConfFax_( ifds::NFConfFax, &ifds::s_FldProp_NFConfFax )
, NFConfCD_( ifds::NFConfCD, &ifds::s_FldProp_NFConfCD )
, NFConfEmail_( ifds::NFConfEmail, &ifds::s_FldProp_NFConfEmail )
, TxnConfSuppress_( ifds::TxnConfSuppress, &ifds::s_FldProp_TxnConfSuppress )
, TxnConfWaive_( ifds::TxnConfWaive, &ifds::s_FldProp_TxnConfWaive )
, TxnConfMail_( ifds::TxnConfMail, &ifds::s_FldProp_TxnConfMail )
, TxnConfFax_( ifds::TxnConfFax, &ifds::s_FldProp_TxnConfFax )
, TxnConfCD_( ifds::TxnConfCD, &ifds::s_FldProp_TxnConfCD )
, TxnConfEmail_( ifds::TxnConfEmail, &ifds::s_FldProp_TxnConfEmail )
, DupConfSuppress_( ifds::DupConfSuppress, &ifds::s_FldProp_DupConfSuppress )
, DupConfWaive_( ifds::DupConfWaive, &ifds::s_FldProp_DupConfWaive )
, DupConfMail_( ifds::DupConfMail, &ifds::s_FldProp_DupConfMail )
, DupConfFax_( ifds::DupConfFax, &ifds::s_FldProp_DupConfFax )
, DupConfCD_( ifds::DupConfCD, &ifds::s_FldProp_DupConfCD )
, DupConfEmail_( ifds::DupConfEmail, &ifds::s_FldProp_DupConfEmail )
, ContrSuppress_( ifds::ContrSuppress, &ifds::s_FldProp_ContrSuppress )
, ContrWaive_( ifds::ContrWaive, &ifds::s_FldProp_ContrWaive )
, ContrMail_( ifds::ContrMail, &ifds::s_FldProp_ContrMail )
, ContrFax_( ifds::ContrFax, &ifds::s_FldProp_ContrFax )
, ContrCD_( ifds::ContrCD, &ifds::s_FldProp_ContrCD )
, ContrEmail_( ifds::ContrEmail, &ifds::s_FldProp_ContrEmail )
, SemiAnnualSuppress_( ifds::SemiAnnualSuppress, &ifds::s_FldProp_SemiAnnualSuppress )
, SemiAnnualWaive_( ifds::SemiAnnualWaive, &ifds::s_FldProp_SemiAnnualWaive )
, SemiAnnualMail_( ifds::SemiAnnualMail, &ifds::s_FldProp_SemiAnnualMail )
, SemiAnnualFax_( ifds::SemiAnnualFax, &ifds::s_FldProp_SemiAnnualFax )
, SemiAnnualCD_( ifds::SemiAnnualCD, &ifds::s_FldProp_SemiAnnualCD )
, SemiAnnualEmail_( ifds::SemiAnnualEmail, &ifds::s_FldProp_SemiAnnualEmail )
, SemiAnnualAddr_( ifds::SemiAnnualAddr, &ifds::s_FldProp_SemiAnnualAddr )
, SemiAnnualOnHold_( ifds::SemiAnnualOnHold, &ifds::s_FldProp_SemiAnnualOnHold )
, TaxEpost_( ifds::TaxEpost, &ifds::s_FldProp_TaxEpost )
, LetEpost_( ifds::LetEpost, &ifds::s_FldProp_LetEpost )
, CertEpost_( ifds::CertEpost, &ifds::s_FldProp_CertEpost )
, DivConfEpost_( ifds::DivConfEpost, &ifds::s_FldProp_DivConfEpost )
, DivChqEpost_( ifds::DivChqEpost, &ifds::s_FldProp_DivChqEpost )
, ContrEPost_( ifds::ContrEPost, &ifds::s_FldProp_ContrEPost )
, RegEpost_( ifds::RegEpost, &ifds::s_FldProp_RegEpost )
, AnnlRptsEpost_( ifds::AnnlRptsEpost, &ifds::s_FldProp_AnnlRptsEpost )
, ProspEpost_( ifds::ProspEpost, &ifds::s_FldProp_ProspEpost )
, BenEpost_( ifds::BenEpost, &ifds::s_FldProp_BenEpost )
, StmtEpost_( ifds::StmtEpost, &ifds::s_FldProp_StmtEpost )
, DupStmtEpost_( ifds::DupStmtEpost, &ifds::s_FldProp_DupStmtEpost )
, NFConfEpost_( ifds::NFConfEpost, &ifds::s_FldProp_NFConfEpost )
, TxnConfEpost_( ifds::TxnConfEpost, &ifds::s_FldProp_TxnConfEpost )
, DupConfEpost_( ifds::DupConfEpost, &ifds::s_FldProp_DupConfEpost )
, SemiAnnualEpost_( ifds::SemiAnnualEpost, &ifds::s_FldProp_SemiAnnualEpost )
, ContributionSuppress_( ifds::ContributionSuppress, &ifds::s_FldProp_ContributionSuppress )
, ContributionWaive_( ifds::ContributionWaive, &ifds::s_FldProp_ContributionWaive )
, ContributionMail_( ifds::ContributionMail, &ifds::s_FldProp_ContributionMail )
, ContributionFax_( ifds::ContributionFax, &ifds::s_FldProp_ContributionFax )
, ContributionCD_( ifds::ContributionCD, &ifds::s_FldProp_ContributionCD )
, ContributionEmail_( ifds::ContributionEmail, &ifds::s_FldProp_ContributionEmail )
, ContributionEpost_( ifds::ContributionEpost, &ifds::s_FldProp_ContributionEpost )
, ContributionAddr_( ifds::ContributionAddr, &ifds::s_FldProp_ContributionAddr )
, ContributionOnHold_( ifds::ContributionOnHold, &ifds::s_FldProp_ContributionOnHold )
, SmAnnlMRFPAddr_( ifds::SmAnnlMRFPAddr, &ifds::s_FldProp_SmAnnlMRFPAddr )
, SmAnnlMRFPSuppress_( ifds::SmAnnlMRFPSuppress, &ifds::s_FldProp_SmAnnlMRFPSuppress )
, SmAnnlMRFPWaive_( ifds::SmAnnlMRFPWaive, &ifds::s_FldProp_SmAnnlMRFPWaive )
, SmAnnlMRFPHold_( ifds::SmAnnlMRFPHold, &ifds::s_FldProp_SmAnnlMRFPHold )
, SmAnnlMRFPMail_( ifds::SmAnnlMRFPMail, &ifds::s_FldProp_SmAnnlMRFPMail )
, SmAnnlMRFPFax_( ifds::SmAnnlMRFPFax, &ifds::s_FldProp_SmAnnlMRFPFax )
, SmAnnlMRFPCD_( ifds::SmAnnlMRFPCD, &ifds::s_FldProp_SmAnnlMRFPCD )
, SmAnnlMRFPEmail_( ifds::SmAnnlMRFPEmail, &ifds::s_FldProp_SmAnnlMRFPEmail )
, SmAnnlMRFPEpost_( ifds::SmAnnlMRFPEpost, &ifds::s_FldProp_SmAnnlMRFPEpost )
, SmAnnlMRFPAuth_( ifds::SmAnnlMRFPAuth, &ifds::s_FldProp_SmAnnlMRFPAuth )
, AnnlMRFPAddr_( ifds::AnnlMRFPAddr, &ifds::s_FldProp_AnnlMRFPAddr )
, AnnlMRFPSuppress_( ifds::AnnlMRFPSuppress, &ifds::s_FldProp_AnnlMRFPSuppress )
, AnnlMRFPWaive_( ifds::AnnlMRFPWaive, &ifds::s_FldProp_AnnlMRFPWaive )
, AnnlMRFPHold_( ifds::AnnlMRFPHold, &ifds::s_FldProp_AnnlMRFPHold )
, AnnlMRFPMail_( ifds::AnnlMRFPMail, &ifds::s_FldProp_AnnlMRFPMail )
, AnnlMRFPFax_( ifds::AnnlMRFPFax, &ifds::s_FldProp_AnnlMRFPFax )
, AnnlMRFPCD_( ifds::AnnlMRFPCD, &ifds::s_FldProp_AnnlMRFPCD )
, AnnlMRFPEmail_( ifds::AnnlMRFPEmail, &ifds::s_FldProp_AnnlMRFPEmail )
, AnnlMRFPEpost_( ifds::AnnlMRFPEpost, &ifds::s_FldProp_AnnlMRFPEpost )
, AnnlMRFPAuth_( ifds::AnnlMRFPAuth, &ifds::s_FldProp_AnnlMRFPAuth )
, TaxAuth_( ifds::TaxAuth, &ifds::s_FldProp_TaxAuth )
, LetAuth_( ifds::LetAuth, &ifds::s_FldProp_LetAuth )
, CertAuth_( ifds::CertAuth, &ifds::s_FldProp_CertAuth )
, DivConfAuth_( ifds::DivConfAuth, &ifds::s_FldProp_DivConfAuth )
, DivChqAuth_( ifds::DivChqAuth, &ifds::s_FldProp_DivChqAuth )
, ContrAuth_( ifds::ContrAuth, &ifds::s_FldProp_ContrAuth )
, RegAuth_( ifds::RegAuth, &ifds::s_FldProp_RegAuth )
, AnnlRptsAuth_( ifds::AnnlRptsAuth, &ifds::s_FldProp_AnnlRptsAuth )
, ProspAuth_( ifds::ProspAuth, &ifds::s_FldProp_ProspAuth )
, BenAuth_( ifds::BenAuth, &ifds::s_FldProp_BenAuth )
, StmtAuth_( ifds::StmtAuth, &ifds::s_FldProp_StmtAuth )
, DupStmtAuth_( ifds::DupStmtAuth, &ifds::s_FldProp_DupStmtAuth )
, NFConAuth_( ifds::NFConAuth, &ifds::s_FldProp_NFConAuth )
, TxnConfAuth_( ifds::TxnConfAuth, &ifds::s_FldProp_TxnConfAuth )
, DupConfAuth_( ifds::DupConfAuth, &ifds::s_FldProp_DupConfAuth )
, SmAnnlRptsAuth_( ifds::SmAnnlRptsAuth, &ifds::s_FldProp_SmAnnlRptsAuth )
, ContributionAuth_( ifds::ContributionAuth, &ifds::s_FldProp_ContributionAuth )
, StmtFrequency_( ifds::StmtFrequency, &ifds::s_FldProp_StmtFrequency )
{
   cFields_ = 206;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0114_REQ::~dsi_DSTC0114_REQ()
{
}

BFDataImpl* dsi_DSTC0114_REQ::clone()
{
   dsi_DSTC0114_REQ* p = new dsi_DSTC0114_REQ;
   p->SessionId_ = SessionId_;
   p->User_Id_ = User_Id_;
   p->LanguageCode_ = LanguageCode_;
   p->CompanyId_ = CompanyId_;
   p->RunMode_ = RunMode_;
   p->RegAddr_ = RegAddr_;
   p->DivConfAddr_ = DivConfAddr_;
   p->DivChqAddr_ = DivChqAddr_;
   p->TxnConfAddr_ = TxnConfAddr_;
   p->DupConfAddr_ = DupConfAddr_;
   p->StmtAddr_ = StmtAddr_;
   p->DupStmtAddr_ = DupStmtAddr_;
   p->CertAddr_ = CertAddr_;
   p->TaxAddr_ = TaxAddr_;
   p->LetAddr_ = LetAddr_;
   p->BenAddr_ = BenAddr_;
   p->DupConfCopies_ = DupConfCopies_;
   p->DupStmtCopies_ = DupStmtCopies_;
   p->RegOnHold_ = RegOnHold_;
   p->DivConfOnHold_ = DivConfOnHold_;
   p->DivChqOnHold_ = DivChqOnHold_;
   p->TxnConfOnHold_ = TxnConfOnHold_;
   p->DupConfOnHold_ = DupConfOnHold_;
   p->StmtOnHold_ = StmtOnHold_;
   p->DupStmtOnHold_ = DupStmtOnHold_;
   p->CertOnHold_ = CertOnHold_;
   p->TaxOnHold_ = TaxOnHold_;
   p->LetOnHold_ = LetOnHold_;
   p->BenOnHold_ = BenOnHold_;
   p->SATxnConfCode_ = SATxnConfCode_;
   p->SADivConfCode_ = SADivConfCode_;
   p->SALettersCode_ = SALettersCode_;
   p->AcctMstrVer_ = AcctMstrVer_;
   p->NFCAddr_ = NFCAddr_;
   p->NFConHold_ = NFConHold_;
   p->AccountNum_ = AccountNum_;
   p->AcctMstrRid_ = AcctMstrRid_;
   p->Track_ = Track_;
   p->Activity_ = Activity_;
   p->ContrAddr_ = ContrAddr_;
   p->ContrHold_ = ContrHold_;
   p->AnnlRptsAddr_ = AnnlRptsAddr_;
   p->AnnlRptsHold_ = AnnlRptsHold_;
   p->ProspAddr_ = ProspAddr_;
   p->ProspHold_ = ProspHold_;
   p->TaxSuppress_ = TaxSuppress_;
   p->TaxWaive_ = TaxWaive_;
   p->TaxMail_ = TaxMail_;
   p->TaxFax_ = TaxFax_;
   p->TaxCD_ = TaxCD_;
   p->TaxEmail_ = TaxEmail_;
   p->LetSuppress_ = LetSuppress_;
   p->LetWaive_ = LetWaive_;
   p->LetMail_ = LetMail_;
   p->LetFax_ = LetFax_;
   p->LetCD_ = LetCD_;
   p->LetEmail_ = LetEmail_;
   p->CertSuppress_ = CertSuppress_;
   p->CertWaive_ = CertWaive_;
   p->CertMail_ = CertMail_;
   p->CertCD_ = CertCD_;
   p->CertEmail_ = CertEmail_;
   p->CertFax_ = CertFax_;
   p->DivConfSuppress_ = DivConfSuppress_;
   p->DivConfWaive_ = DivConfWaive_;
   p->DivConfMail_ = DivConfMail_;
   p->DivConfFax_ = DivConfFax_;
   p->DivConfCD_ = DivConfCD_;
   p->DivConfEmail_ = DivConfEmail_;
   p->DivChqSuppress_ = DivChqSuppress_;
   p->DivChqWaive_ = DivChqWaive_;
   p->DivChqMail_ = DivChqMail_;
   p->DivChqFax_ = DivChqFax_;
   p->DivChqCD_ = DivChqCD_;
   p->DivChqEmail_ = DivChqEmail_;
   p->RegSuppress_ = RegSuppress_;
   p->RegWaive_ = RegWaive_;
   p->RegMail_ = RegMail_;
   p->RegFax_ = RegFax_;
   p->RegCD_ = RegCD_;
   p->RegEmail_ = RegEmail_;
   p->AnnlRptsSuppress_ = AnnlRptsSuppress_;
   p->AnnlRptsWaive_ = AnnlRptsWaive_;
   p->AnnlRptsMail_ = AnnlRptsMail_;
   p->AnnlRptsFax_ = AnnlRptsFax_;
   p->AnnlRptsCD_ = AnnlRptsCD_;
   p->AnnlRptsEmail_ = AnnlRptsEmail_;
   p->ProspSuppress_ = ProspSuppress_;
   p->ProspWaive_ = ProspWaive_;
   p->ProspMail_ = ProspMail_;
   p->ProspFax_ = ProspFax_;
   p->ProspCD_ = ProspCD_;
   p->ProspEmail_ = ProspEmail_;
   p->BenSuppress_ = BenSuppress_;
   p->BenWaive_ = BenWaive_;
   p->BenMail_ = BenMail_;
   p->BenFax_ = BenFax_;
   p->BenCD_ = BenCD_;
   p->BenEmail_ = BenEmail_;
   p->StmtSuppress_ = StmtSuppress_;
   p->StmtWaive_ = StmtWaive_;
   p->StmtMail_ = StmtMail_;
   p->StmtFax_ = StmtFax_;
   p->StmtCD_ = StmtCD_;
   p->StmtEmail_ = StmtEmail_;
   p->DupStmtSuppress_ = DupStmtSuppress_;
   p->DupStmtWaive_ = DupStmtWaive_;
   p->DupStmtMail_ = DupStmtMail_;
   p->DupStmtFax_ = DupStmtFax_;
   p->DupStmtCD_ = DupStmtCD_;
   p->DupStmtEmail_ = DupStmtEmail_;
   p->NFConfSuppress_ = NFConfSuppress_;
   p->NFConfWaive_ = NFConfWaive_;
   p->NFConfMail_ = NFConfMail_;
   p->NFConfFax_ = NFConfFax_;
   p->NFConfCD_ = NFConfCD_;
   p->NFConfEmail_ = NFConfEmail_;
   p->TxnConfSuppress_ = TxnConfSuppress_;
   p->TxnConfWaive_ = TxnConfWaive_;
   p->TxnConfMail_ = TxnConfMail_;
   p->TxnConfFax_ = TxnConfFax_;
   p->TxnConfCD_ = TxnConfCD_;
   p->TxnConfEmail_ = TxnConfEmail_;
   p->DupConfSuppress_ = DupConfSuppress_;
   p->DupConfWaive_ = DupConfWaive_;
   p->DupConfMail_ = DupConfMail_;
   p->DupConfFax_ = DupConfFax_;
   p->DupConfCD_ = DupConfCD_;
   p->DupConfEmail_ = DupConfEmail_;
   p->ContrSuppress_ = ContrSuppress_;
   p->ContrWaive_ = ContrWaive_;
   p->ContrMail_ = ContrMail_;
   p->ContrFax_ = ContrFax_;
   p->ContrCD_ = ContrCD_;
   p->ContrEmail_ = ContrEmail_;
   p->SemiAnnualSuppress_ = SemiAnnualSuppress_;
   p->SemiAnnualWaive_ = SemiAnnualWaive_;
   p->SemiAnnualMail_ = SemiAnnualMail_;
   p->SemiAnnualFax_ = SemiAnnualFax_;
   p->SemiAnnualCD_ = SemiAnnualCD_;
   p->SemiAnnualEmail_ = SemiAnnualEmail_;
   p->SemiAnnualAddr_ = SemiAnnualAddr_;
   p->SemiAnnualOnHold_ = SemiAnnualOnHold_;
   p->TaxEpost_ = TaxEpost_;
   p->LetEpost_ = LetEpost_;
   p->CertEpost_ = CertEpost_;
   p->DivConfEpost_ = DivConfEpost_;
   p->DivChqEpost_ = DivChqEpost_;
   p->ContrEPost_ = ContrEPost_;
   p->RegEpost_ = RegEpost_;
   p->AnnlRptsEpost_ = AnnlRptsEpost_;
   p->ProspEpost_ = ProspEpost_;
   p->BenEpost_ = BenEpost_;
   p->StmtEpost_ = StmtEpost_;
   p->DupStmtEpost_ = DupStmtEpost_;
   p->NFConfEpost_ = NFConfEpost_;
   p->TxnConfEpost_ = TxnConfEpost_;
   p->DupConfEpost_ = DupConfEpost_;
   p->SemiAnnualEpost_ = SemiAnnualEpost_;
   p->ContributionSuppress_ = ContributionSuppress_;
   p->ContributionWaive_ = ContributionWaive_;
   p->ContributionMail_ = ContributionMail_;
   p->ContributionFax_ = ContributionFax_;
   p->ContributionCD_ = ContributionCD_;
   p->ContributionEmail_ = ContributionEmail_;
   p->ContributionEpost_ = ContributionEpost_;
   p->ContributionAddr_ = ContributionAddr_;
   p->ContributionOnHold_ = ContributionOnHold_;
   p->SmAnnlMRFPAddr_ = SmAnnlMRFPAddr_;
   p->SmAnnlMRFPSuppress_ = SmAnnlMRFPSuppress_;
   p->SmAnnlMRFPWaive_ = SmAnnlMRFPWaive_;
   p->SmAnnlMRFPHold_ = SmAnnlMRFPHold_;
   p->SmAnnlMRFPMail_ = SmAnnlMRFPMail_;
   p->SmAnnlMRFPFax_ = SmAnnlMRFPFax_;
   p->SmAnnlMRFPCD_ = SmAnnlMRFPCD_;
   p->SmAnnlMRFPEmail_ = SmAnnlMRFPEmail_;
   p->SmAnnlMRFPEpost_ = SmAnnlMRFPEpost_;
   p->SmAnnlMRFPAuth_ = SmAnnlMRFPAuth_;
   p->AnnlMRFPAddr_ = AnnlMRFPAddr_;
   p->AnnlMRFPSuppress_ = AnnlMRFPSuppress_;
   p->AnnlMRFPWaive_ = AnnlMRFPWaive_;
   p->AnnlMRFPHold_ = AnnlMRFPHold_;
   p->AnnlMRFPMail_ = AnnlMRFPMail_;
   p->AnnlMRFPFax_ = AnnlMRFPFax_;
   p->AnnlMRFPCD_ = AnnlMRFPCD_;
   p->AnnlMRFPEmail_ = AnnlMRFPEmail_;
   p->AnnlMRFPEpost_ = AnnlMRFPEpost_;
   p->AnnlMRFPAuth_ = AnnlMRFPAuth_;
   p->TaxAuth_ = TaxAuth_;
   p->LetAuth_ = LetAuth_;
   p->CertAuth_ = CertAuth_;
   p->DivConfAuth_ = DivConfAuth_;
   p->DivChqAuth_ = DivChqAuth_;
   p->ContrAuth_ = ContrAuth_;
   p->RegAuth_ = RegAuth_;
   p->AnnlRptsAuth_ = AnnlRptsAuth_;
   p->ProspAuth_ = ProspAuth_;
   p->BenAuth_ = BenAuth_;
   p->StmtAuth_ = StmtAuth_;
   p->DupStmtAuth_ = DupStmtAuth_;
   p->NFConAuth_ = NFConAuth_;
   p->TxnConfAuth_ = TxnConfAuth_;
   p->DupConfAuth_ = DupConfAuth_;
   p->SmAnnlRptsAuth_ = SmAnnlRptsAuth_;
   p->ContributionAuth_ = ContributionAuth_;
   p->StmtFrequency_ = StmtFrequency_;
   return(p);
}

BFDataField* dsi_DSTC0114_REQ::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40000005: return ( &SessionId_ ); break; // SessionId
      case 40000002: return ( &User_Id_ ); break; // User_Id
      case 40000030: return ( &LanguageCode_ ); break; // LanguageCode
      case 40000031: return ( &CompanyId_ ); break; // CompanyId
      case 40000990: return ( &RunMode_ ); break; // RunMode
      case 40000545: return ( &RegAddr_ ); break; // RegAddr
      case 40000546: return ( &DivConfAddr_ ); break; // DivConfAddr
      case 40000547: return ( &DivChqAddr_ ); break; // DivChqAddr
      case 40000548: return ( &TxnConfAddr_ ); break; // TxnConfAddr
      case 40000549: return ( &DupConfAddr_ ); break; // DupConfAddr
      case 40000550: return ( &StmtAddr_ ); break; // StmtAddr
      case 40000551: return ( &DupStmtAddr_ ); break; // DupStmtAddr
      case 40000552: return ( &CertAddr_ ); break; // CertAddr
      case 40000553: return ( &TaxAddr_ ); break; // TaxAddr
      case 40000554: return ( &LetAddr_ ); break; // LetAddr
      case 40000555: return ( &BenAddr_ ); break; // BenAddr
      case 40000556: return ( &DupConfCopies_ ); break; // DupConfCopies
      case 40000557: return ( &DupStmtCopies_ ); break; // DupStmtCopies
      case 40000558: return ( &RegOnHold_ ); break; // RegOnHold
      case 40000559: return ( &DivConfOnHold_ ); break; // DivConfOnHold
      case 40000560: return ( &DivChqOnHold_ ); break; // DivChqOnHold
      case 40000561: return ( &TxnConfOnHold_ ); break; // TxnConfOnHold
      case 40000562: return ( &DupConfOnHold_ ); break; // DupConfOnHold
      case 40000563: return ( &StmtOnHold_ ); break; // StmtOnHold
      case 40000564: return ( &DupStmtOnHold_ ); break; // DupStmtOnHold
      case 40000565: return ( &CertOnHold_ ); break; // CertOnHold
      case 40000566: return ( &TaxOnHold_ ); break; // TaxOnHold
      case 40000567: return ( &LetOnHold_ ); break; // LetOnHold
      case 40000568: return ( &BenOnHold_ ); break; // BenOnHold
      case 40000570: return ( &SATxnConfCode_ ); break; // SATxnConfCode
      case 40000572: return ( &SADivConfCode_ ); break; // SADivConfCode
      case 40000574: return ( &SALettersCode_ ); break; // SALettersCode
      case 40000909: return ( &AcctMstrVer_ ); break; // AcctMstrVer
      case 40001054: return ( &NFCAddr_ ); break; // NFCAddr
      case 40001055: return ( &NFConHold_ ); break; // NFConHold
      case 40000040: return ( &AccountNum_ ); break; // AccountNum
      case 40000910: return ( &AcctMstrRid_ ); break; // AcctMstrRid
      case 40002065: return ( &Track_ ); break; // Track
      case 40002066: return ( &Activity_ ); break; // Activity
      case 40003278: return ( &ContrAddr_ ); break; // ContrAddr
      case 40003279: return ( &ContrHold_ ); break; // ContrHold
      case 40003280: return ( &AnnlRptsAddr_ ); break; // AnnlRptsAddr
      case 40003281: return ( &AnnlRptsHold_ ); break; // AnnlRptsHold
      case 40003282: return ( &ProspAddr_ ); break; // ProspAddr
      case 40003283: return ( &ProspHold_ ); break; // ProspHold
      case 40003321: return ( &TaxSuppress_ ); break; // TaxSuppress
      case 40003322: return ( &TaxWaive_ ); break; // TaxWaive
      case 40003323: return ( &TaxMail_ ); break; // TaxMail
      case 40003324: return ( &TaxFax_ ); break; // TaxFax
      case 40003325: return ( &TaxCD_ ); break; // TaxCD
      case 40003326: return ( &TaxEmail_ ); break; // TaxEmail
      case 40003379: return ( &LetSuppress_ ); break; // LetSuppress
      case 40003380: return ( &LetWaive_ ); break; // LetWaive
      case 40003381: return ( &LetMail_ ); break; // LetMail
      case 40003382: return ( &LetFax_ ); break; // LetFax
      case 40003383: return ( &LetCD_ ); break; // LetCD
      case 40003384: return ( &LetEmail_ ); break; // LetEmail
      case 40003309: return ( &CertSuppress_ ); break; // CertSuppress
      case 40003310: return ( &CertWaive_ ); break; // CertWaive
      case 40003311: return ( &CertMail_ ); break; // CertMail
      case 40003313: return ( &CertCD_ ); break; // CertCD
      case 40003314: return ( &CertEmail_ ); break; // CertEmail
      case 40003312: return ( &CertFax_ ); break; // CertFax
      case 40003297: return ( &DivConfSuppress_ ); break; // DivConfSuppress
      case 40003298: return ( &DivConfWaive_ ); break; // DivConfWaive
      case 40003299: return ( &DivConfMail_ ); break; // DivConfMail
      case 40003300: return ( &DivConfFax_ ); break; // DivConfFax
      case 40003301: return ( &DivConfCD_ ); break; // DivConfCD
      case 40003302: return ( &DivConfEmail_ ); break; // DivConfEmail
      case 40003303: return ( &DivChqSuppress_ ); break; // DivChqSuppress
      case 40003304: return ( &DivChqWaive_ ); break; // DivChqWaive
      case 40003305: return ( &DivChqMail_ ); break; // DivChqMail
      case 40003306: return ( &DivChqFax_ ); break; // DivChqFax
      case 40003307: return ( &DivChqCD_ ); break; // DivChqCD
      case 40003308: return ( &DivChqEmail_ ); break; // DivChqEmail
      case 40003291: return ( &RegSuppress_ ); break; // RegSuppress
      case 40003292: return ( &RegWaive_ ); break; // RegWaive
      case 40003293: return ( &RegMail_ ); break; // RegMail
      case 40003294: return ( &RegFax_ ); break; // RegFax
      case 40003295: return ( &RegCD_ ); break; // RegCD
      case 40003296: return ( &RegEmail_ ); break; // RegEmail
      case 40003327: return ( &AnnlRptsSuppress_ ); break; // AnnlRptsSuppress
      case 40003328: return ( &AnnlRptsWaive_ ); break; // AnnlRptsWaive
      case 40003329: return ( &AnnlRptsMail_ ); break; // AnnlRptsMail
      case 40003330: return ( &AnnlRptsFax_ ); break; // AnnlRptsFax
      case 40003332: return ( &AnnlRptsCD_ ); break; // AnnlRptsCD
      case 40003333: return ( &AnnlRptsEmail_ ); break; // AnnlRptsEmail
      case 40003334: return ( &ProspSuppress_ ); break; // ProspSuppress
      case 40003335: return ( &ProspWaive_ ); break; // ProspWaive
      case 40003336: return ( &ProspMail_ ); break; // ProspMail
      case 40003337: return ( &ProspFax_ ); break; // ProspFax
      case 40003338: return ( &ProspCD_ ); break; // ProspCD
      case 40003339: return ( &ProspEmail_ ); break; // ProspEmail
      case 40003340: return ( &BenSuppress_ ); break; // BenSuppress
      case 40003341: return ( &BenWaive_ ); break; // BenWaive
      case 40003342: return ( &BenMail_ ); break; // BenMail
      case 40003343: return ( &BenFax_ ); break; // BenFax
      case 40003344: return ( &BenCD_ ); break; // BenCD
      case 40003345: return ( &BenEmail_ ); break; // BenEmail
      case 40003346: return ( &StmtSuppress_ ); break; // StmtSuppress
      case 40003347: return ( &StmtWaive_ ); break; // StmtWaive
      case 40003348: return ( &StmtMail_ ); break; // StmtMail
      case 40003350: return ( &StmtFax_ ); break; // StmtFax
      case 40003351: return ( &StmtCD_ ); break; // StmtCD
      case 40003352: return ( &StmtEmail_ ); break; // StmtEmail
      case 40003353: return ( &DupStmtSuppress_ ); break; // DupStmtSuppress
      case 40003354: return ( &DupStmtWaive_ ); break; // DupStmtWaive
      case 40003355: return ( &DupStmtMail_ ); break; // DupStmtMail
      case 40003356: return ( &DupStmtFax_ ); break; // DupStmtFax
      case 40003357: return ( &DupStmtCD_ ); break; // DupStmtCD
      case 40003358: return ( &DupStmtEmail_ ); break; // DupStmtEmail
      case 40003359: return ( &NFConfSuppress_ ); break; // NFConfSuppress
      case 40003360: return ( &NFConfWaive_ ); break; // NFConfWaive
      case 40003361: return ( &NFConfMail_ ); break; // NFConfMail
      case 40003362: return ( &NFConfFax_ ); break; // NFConfFax
      case 40003363: return ( &NFConfCD_ ); break; // NFConfCD
      case 40003365: return ( &NFConfEmail_ ); break; // NFConfEmail
      case 40003367: return ( &TxnConfSuppress_ ); break; // TxnConfSuppress
      case 40003368: return ( &TxnConfWaive_ ); break; // TxnConfWaive
      case 40003369: return ( &TxnConfMail_ ); break; // TxnConfMail
      case 40003370: return ( &TxnConfFax_ ); break; // TxnConfFax
      case 40003371: return ( &TxnConfCD_ ); break; // TxnConfCD
      case 40003372: return ( &TxnConfEmail_ ); break; // TxnConfEmail
      case 40003373: return ( &DupConfSuppress_ ); break; // DupConfSuppress
      case 40003374: return ( &DupConfWaive_ ); break; // DupConfWaive
      case 40003375: return ( &DupConfMail_ ); break; // DupConfMail
      case 40003376: return ( &DupConfFax_ ); break; // DupConfFax
      case 40003377: return ( &DupConfCD_ ); break; // DupConfCD
      case 40003378: return ( &DupConfEmail_ ); break; // DupConfEmail
      case 40003315: return ( &ContrSuppress_ ); break; // ContrSuppress
      case 40003316: return ( &ContrWaive_ ); break; // ContrWaive
      case 40003317: return ( &ContrMail_ ); break; // ContrMail
      case 40003318: return ( &ContrFax_ ); break; // ContrFax
      case 40003319: return ( &ContrCD_ ); break; // ContrCD
      case 40003320: return ( &ContrEmail_ ); break; // ContrEmail
      case 40003777: return ( &SemiAnnualSuppress_ ); break; // SemiAnnualSuppress
      case 40003778: return ( &SemiAnnualWaive_ ); break; // SemiAnnualWaive
      case 40003779: return ( &SemiAnnualMail_ ); break; // SemiAnnualMail
      case 40003780: return ( &SemiAnnualFax_ ); break; // SemiAnnualFax
      case 40003781: return ( &SemiAnnualCD_ ); break; // SemiAnnualCD
      case 40003782: return ( &SemiAnnualEmail_ ); break; // SemiAnnualEmail
      case 40003783: return ( &SemiAnnualAddr_ ); break; // SemiAnnualAddr
      case 40003784: return ( &SemiAnnualOnHold_ ); break; // SemiAnnualOnHold
      case 40004928: return ( &TaxEpost_ ); break; // TaxEpost
      case 40004930: return ( &LetEpost_ ); break; // LetEpost
      case 40004931: return ( &CertEpost_ ); break; // CertEpost
      case 40004932: return ( &DivConfEpost_ ); break; // DivConfEpost
      case 40004933: return ( &DivChqEpost_ ); break; // DivChqEpost
      case 40004934: return ( &ContrEPost_ ); break; // ContrEPost
      case 40004935: return ( &RegEpost_ ); break; // RegEpost
      case 40004936: return ( &AnnlRptsEpost_ ); break; // AnnlRptsEpost
      case 40004937: return ( &ProspEpost_ ); break; // ProspEpost
      case 40004938: return ( &BenEpost_ ); break; // BenEpost
      case 40004939: return ( &StmtEpost_ ); break; // StmtEpost
      case 40004940: return ( &DupStmtEpost_ ); break; // DupStmtEpost
      case 40004941: return ( &NFConfEpost_ ); break; // NFConfEpost
      case 40004942: return ( &TxnConfEpost_ ); break; // TxnConfEpost
      case 40004943: return ( &DupConfEpost_ ); break; // DupConfEpost
      case 40004944: return ( &SemiAnnualEpost_ ); break; // SemiAnnualEpost
      case 40004945: return ( &ContributionSuppress_ ); break; // ContributionSuppress
      case 40004946: return ( &ContributionWaive_ ); break; // ContributionWaive
      case 40004947: return ( &ContributionMail_ ); break; // ContributionMail
      case 40004948: return ( &ContributionFax_ ); break; // ContributionFax
      case 40004949: return ( &ContributionCD_ ); break; // ContributionCD
      case 40004950: return ( &ContributionEmail_ ); break; // ContributionEmail
      case 40004951: return ( &ContributionEpost_ ); break; // ContributionEpost
      case 40004952: return ( &ContributionAddr_ ); break; // ContributionAddr
      case 40004953: return ( &ContributionOnHold_ ); break; // ContributionOnHold
      case 40005273: return ( &SmAnnlMRFPAddr_ ); break; // SmAnnlMRFPAddr
      case 40005300: return ( &SmAnnlMRFPSuppress_ ); break; // SmAnnlMRFPSuppress
      case 40005301: return ( &SmAnnlMRFPWaive_ ); break; // SmAnnlMRFPWaive
      case 40005293: return ( &SmAnnlMRFPHold_ ); break; // SmAnnlMRFPHold
      case 40005295: return ( &SmAnnlMRFPMail_ ); break; // SmAnnlMRFPMail
      case 40005299: return ( &SmAnnlMRFPFax_ ); break; // SmAnnlMRFPFax
      case 40005294: return ( &SmAnnlMRFPCD_ ); break; // SmAnnlMRFPCD
      case 40005296: return ( &SmAnnlMRFPEmail_ ); break; // SmAnnlMRFPEmail
      case 40005298: return ( &SmAnnlMRFPEpost_ ); break; // SmAnnlMRFPEpost
      case 40005289: return ( &SmAnnlMRFPAuth_ ); break; // SmAnnlMRFPAuth
      case 40005275: return ( &AnnlMRFPAddr_ ); break; // AnnlMRFPAddr
      case 40005310: return ( &AnnlMRFPSuppress_ ); break; // AnnlMRFPSuppress
      case 40005311: return ( &AnnlMRFPWaive_ ); break; // AnnlMRFPWaive
      case 40005290: return ( &AnnlMRFPHold_ ); break; // AnnlMRFPHold
      case 40005306: return ( &AnnlMRFPMail_ ); break; // AnnlMRFPMail
      case 40005304: return ( &AnnlMRFPFax_ ); break; // AnnlMRFPFax
      case 40005302: return ( &AnnlMRFPCD_ ); break; // AnnlMRFPCD
      case 40005309: return ( &AnnlMRFPEmail_ ); break; // AnnlMRFPEmail
      case 40005303: return ( &AnnlMRFPEpost_ ); break; // AnnlMRFPEpost
      case 40005288: return ( &AnnlMRFPAuth_ ); break; // AnnlMRFPAuth
      case 40005280: return ( &TaxAuth_ ); break; // TaxAuth
      case 40005281: return ( &LetAuth_ ); break; // LetAuth
      case 40005279: return ( &CertAuth_ ); break; // CertAuth
      case 40005270: return ( &DivConfAuth_ ); break; // DivConfAuth
      case 40005271: return ( &DivChqAuth_ ); break; // DivChqAuth
      case 40005286: return ( &ContrAuth_ ); break; // ContrAuth
      case 40005269: return ( &RegAuth_ ); break; // RegAuth
      case 40005287: return ( &AnnlRptsAuth_ ); break; // AnnlRptsAuth
      case 40005285: return ( &ProspAuth_ ); break; // ProspAuth
      case 40005282: return ( &BenAuth_ ); break; // BenAuth
      case 40005277: return ( &StmtAuth_ ); break; // StmtAuth
      case 40005278: return ( &DupStmtAuth_ ); break; // DupStmtAuth
      case 40005283: return ( &NFConAuth_ ); break; // NFConAuth
      case 40005272: return ( &TxnConfAuth_ ); break; // TxnConfAuth
      case 40005276: return ( &DupConfAuth_ ); break; // DupConfAuth
      case 40005284: return ( &SmAnnlRptsAuth_ ); break; // SmAnnlRptsAuth
      case 40005313: return ( &ContributionAuth_ ); break; // ContributionAuth
      case 40006679: return ( &StmtFrequency_ ); break; // StmtFrequency
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0114_REQ::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0114_REQ* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0114_REQ::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 206 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &SessionId_; break;
            case 1: aFlds_[1] = &User_Id_; break;
            case 2: aFlds_[2] = &LanguageCode_; break;
            case 3: aFlds_[3] = &CompanyId_; break;
            case 4: aFlds_[4] = &RunMode_; break;
            case 5: aFlds_[5] = &RegAddr_; break;
            case 6: aFlds_[6] = &DivConfAddr_; break;
            case 7: aFlds_[7] = &DivChqAddr_; break;
            case 8: aFlds_[8] = &TxnConfAddr_; break;
            case 9: aFlds_[9] = &DupConfAddr_; break;
            case 10: aFlds_[10] = &StmtAddr_; break;
            case 11: aFlds_[11] = &DupStmtAddr_; break;
            case 12: aFlds_[12] = &CertAddr_; break;
            case 13: aFlds_[13] = &TaxAddr_; break;
            case 14: aFlds_[14] = &LetAddr_; break;
            case 15: aFlds_[15] = &BenAddr_; break;
            case 16: aFlds_[16] = &DupConfCopies_; break;
            case 17: aFlds_[17] = &DupStmtCopies_; break;
            case 18: aFlds_[18] = &RegOnHold_; break;
            case 19: aFlds_[19] = &DivConfOnHold_; break;
            case 20: aFlds_[20] = &DivChqOnHold_; break;
            case 21: aFlds_[21] = &TxnConfOnHold_; break;
            case 22: aFlds_[22] = &DupConfOnHold_; break;
            case 23: aFlds_[23] = &StmtOnHold_; break;
            case 24: aFlds_[24] = &DupStmtOnHold_; break;
            case 25: aFlds_[25] = &CertOnHold_; break;
            case 26: aFlds_[26] = &TaxOnHold_; break;
            case 27: aFlds_[27] = &LetOnHold_; break;
            case 28: aFlds_[28] = &BenOnHold_; break;
            case 29: aFlds_[29] = &SATxnConfCode_; break;
            case 30: aFlds_[30] = &SADivConfCode_; break;
            case 31: aFlds_[31] = &SALettersCode_; break;
            case 32: aFlds_[32] = &AcctMstrVer_; break;
            case 33: aFlds_[33] = &NFCAddr_; break;
            case 34: aFlds_[34] = &NFConHold_; break;
            case 35: aFlds_[35] = &AccountNum_; break;
            case 36: aFlds_[36] = &AcctMstrRid_; break;
            case 37: aFlds_[37] = &Track_; break;
            case 38: aFlds_[38] = &Activity_; break;
            case 39: aFlds_[39] = &ContrAddr_; break;
            case 40: aFlds_[40] = &ContrHold_; break;
            case 41: aFlds_[41] = &AnnlRptsAddr_; break;
            case 42: aFlds_[42] = &AnnlRptsHold_; break;
            case 43: aFlds_[43] = &ProspAddr_; break;
            case 44: aFlds_[44] = &ProspHold_; break;
            case 45: aFlds_[45] = &TaxSuppress_; break;
            case 46: aFlds_[46] = &TaxWaive_; break;
            case 47: aFlds_[47] = &TaxMail_; break;
            case 48: aFlds_[48] = &TaxFax_; break;
            case 49: aFlds_[49] = &TaxCD_; break;
            case 50: aFlds_[50] = &TaxEmail_; break;
            case 51: aFlds_[51] = &LetSuppress_; break;
            case 52: aFlds_[52] = &LetWaive_; break;
            case 53: aFlds_[53] = &LetMail_; break;
            case 54: aFlds_[54] = &LetFax_; break;
            case 55: aFlds_[55] = &LetCD_; break;
            case 56: aFlds_[56] = &LetEmail_; break;
            case 57: aFlds_[57] = &CertSuppress_; break;
            case 58: aFlds_[58] = &CertWaive_; break;
            case 59: aFlds_[59] = &CertMail_; break;
            case 60: aFlds_[60] = &CertCD_; break;
            case 61: aFlds_[61] = &CertEmail_; break;
            case 62: aFlds_[62] = &CertFax_; break;
            case 63: aFlds_[63] = &DivConfSuppress_; break;
            case 64: aFlds_[64] = &DivConfWaive_; break;
            case 65: aFlds_[65] = &DivConfMail_; break;
            case 66: aFlds_[66] = &DivConfFax_; break;
            case 67: aFlds_[67] = &DivConfCD_; break;
            case 68: aFlds_[68] = &DivConfEmail_; break;
            case 69: aFlds_[69] = &DivChqSuppress_; break;
            case 70: aFlds_[70] = &DivChqWaive_; break;
            case 71: aFlds_[71] = &DivChqMail_; break;
            case 72: aFlds_[72] = &DivChqFax_; break;
            case 73: aFlds_[73] = &DivChqCD_; break;
            case 74: aFlds_[74] = &DivChqEmail_; break;
            case 75: aFlds_[75] = &RegSuppress_; break;
            case 76: aFlds_[76] = &RegWaive_; break;
            case 77: aFlds_[77] = &RegMail_; break;
            case 78: aFlds_[78] = &RegFax_; break;
            case 79: aFlds_[79] = &RegCD_; break;
            case 80: aFlds_[80] = &RegEmail_; break;
            case 81: aFlds_[81] = &AnnlRptsSuppress_; break;
            case 82: aFlds_[82] = &AnnlRptsWaive_; break;
            case 83: aFlds_[83] = &AnnlRptsMail_; break;
            case 84: aFlds_[84] = &AnnlRptsFax_; break;
            case 85: aFlds_[85] = &AnnlRptsCD_; break;
            case 86: aFlds_[86] = &AnnlRptsEmail_; break;
            case 87: aFlds_[87] = &ProspSuppress_; break;
            case 88: aFlds_[88] = &ProspWaive_; break;
            case 89: aFlds_[89] = &ProspMail_; break;
            case 90: aFlds_[90] = &ProspFax_; break;
            case 91: aFlds_[91] = &ProspCD_; break;
            case 92: aFlds_[92] = &ProspEmail_; break;
            case 93: aFlds_[93] = &BenSuppress_; break;
            case 94: aFlds_[94] = &BenWaive_; break;
            case 95: aFlds_[95] = &BenMail_; break;
            case 96: aFlds_[96] = &BenFax_; break;
            case 97: aFlds_[97] = &BenCD_; break;
            case 98: aFlds_[98] = &BenEmail_; break;
            case 99: aFlds_[99] = &StmtSuppress_; break;
            case 100: aFlds_[100] = &StmtWaive_; break;
            case 101: aFlds_[101] = &StmtMail_; break;
            case 102: aFlds_[102] = &StmtFax_; break;
            case 103: aFlds_[103] = &StmtCD_; break;
            case 104: aFlds_[104] = &StmtEmail_; break;
            case 105: aFlds_[105] = &DupStmtSuppress_; break;
            case 106: aFlds_[106] = &DupStmtWaive_; break;
            case 107: aFlds_[107] = &DupStmtMail_; break;
            case 108: aFlds_[108] = &DupStmtFax_; break;
            case 109: aFlds_[109] = &DupStmtCD_; break;
            case 110: aFlds_[110] = &DupStmtEmail_; break;
            case 111: aFlds_[111] = &NFConfSuppress_; break;
            case 112: aFlds_[112] = &NFConfWaive_; break;
            case 113: aFlds_[113] = &NFConfMail_; break;
            case 114: aFlds_[114] = &NFConfFax_; break;
            case 115: aFlds_[115] = &NFConfCD_; break;
            case 116: aFlds_[116] = &NFConfEmail_; break;
            case 117: aFlds_[117] = &TxnConfSuppress_; break;
            case 118: aFlds_[118] = &TxnConfWaive_; break;
            case 119: aFlds_[119] = &TxnConfMail_; break;
            case 120: aFlds_[120] = &TxnConfFax_; break;
            case 121: aFlds_[121] = &TxnConfCD_; break;
            case 122: aFlds_[122] = &TxnConfEmail_; break;
            case 123: aFlds_[123] = &DupConfSuppress_; break;
            case 124: aFlds_[124] = &DupConfWaive_; break;
            case 125: aFlds_[125] = &DupConfMail_; break;
            case 126: aFlds_[126] = &DupConfFax_; break;
            case 127: aFlds_[127] = &DupConfCD_; break;
            case 128: aFlds_[128] = &DupConfEmail_; break;
            case 129: aFlds_[129] = &ContrSuppress_; break;
            case 130: aFlds_[130] = &ContrWaive_; break;
            case 131: aFlds_[131] = &ContrMail_; break;
            case 132: aFlds_[132] = &ContrFax_; break;
            case 133: aFlds_[133] = &ContrCD_; break;
            case 134: aFlds_[134] = &ContrEmail_; break;
            case 135: aFlds_[135] = &SemiAnnualSuppress_; break;
            case 136: aFlds_[136] = &SemiAnnualWaive_; break;
            case 137: aFlds_[137] = &SemiAnnualMail_; break;
            case 138: aFlds_[138] = &SemiAnnualFax_; break;
            case 139: aFlds_[139] = &SemiAnnualCD_; break;
            case 140: aFlds_[140] = &SemiAnnualEmail_; break;
            case 141: aFlds_[141] = &SemiAnnualAddr_; break;
            case 142: aFlds_[142] = &SemiAnnualOnHold_; break;
            case 143: aFlds_[143] = &TaxEpost_; break;
            case 144: aFlds_[144] = &LetEpost_; break;
            case 145: aFlds_[145] = &CertEpost_; break;
            case 146: aFlds_[146] = &DivConfEpost_; break;
            case 147: aFlds_[147] = &DivChqEpost_; break;
            case 148: aFlds_[148] = &ContrEPost_; break;
            case 149: aFlds_[149] = &RegEpost_; break;
            case 150: aFlds_[150] = &AnnlRptsEpost_; break;
            case 151: aFlds_[151] = &ProspEpost_; break;
            case 152: aFlds_[152] = &BenEpost_; break;
            case 153: aFlds_[153] = &StmtEpost_; break;
            case 154: aFlds_[154] = &DupStmtEpost_; break;
            case 155: aFlds_[155] = &NFConfEpost_; break;
            case 156: aFlds_[156] = &TxnConfEpost_; break;
            case 157: aFlds_[157] = &DupConfEpost_; break;
            case 158: aFlds_[158] = &SemiAnnualEpost_; break;
            case 159: aFlds_[159] = &ContributionSuppress_; break;
            case 160: aFlds_[160] = &ContributionWaive_; break;
            case 161: aFlds_[161] = &ContributionMail_; break;
            case 162: aFlds_[162] = &ContributionFax_; break;
            case 163: aFlds_[163] = &ContributionCD_; break;
            case 164: aFlds_[164] = &ContributionEmail_; break;
            case 165: aFlds_[165] = &ContributionEpost_; break;
            case 166: aFlds_[166] = &ContributionAddr_; break;
            case 167: aFlds_[167] = &ContributionOnHold_; break;
            case 168: aFlds_[168] = &SmAnnlMRFPAddr_; break;
            case 169: aFlds_[169] = &SmAnnlMRFPSuppress_; break;
            case 170: aFlds_[170] = &SmAnnlMRFPWaive_; break;
            case 171: aFlds_[171] = &SmAnnlMRFPHold_; break;
            case 172: aFlds_[172] = &SmAnnlMRFPMail_; break;
            case 173: aFlds_[173] = &SmAnnlMRFPFax_; break;
            case 174: aFlds_[174] = &SmAnnlMRFPCD_; break;
            case 175: aFlds_[175] = &SmAnnlMRFPEmail_; break;
            case 176: aFlds_[176] = &SmAnnlMRFPEpost_; break;
            case 177: aFlds_[177] = &SmAnnlMRFPAuth_; break;
            case 178: aFlds_[178] = &AnnlMRFPAddr_; break;
            case 179: aFlds_[179] = &AnnlMRFPSuppress_; break;
            case 180: aFlds_[180] = &AnnlMRFPWaive_; break;
            case 181: aFlds_[181] = &AnnlMRFPHold_; break;
            case 182: aFlds_[182] = &AnnlMRFPMail_; break;
            case 183: aFlds_[183] = &AnnlMRFPFax_; break;
            case 184: aFlds_[184] = &AnnlMRFPCD_; break;
            case 185: aFlds_[185] = &AnnlMRFPEmail_; break;
            case 186: aFlds_[186] = &AnnlMRFPEpost_; break;
            case 187: aFlds_[187] = &AnnlMRFPAuth_; break;
            case 188: aFlds_[188] = &TaxAuth_; break;
            case 189: aFlds_[189] = &LetAuth_; break;
            case 190: aFlds_[190] = &CertAuth_; break;
            case 191: aFlds_[191] = &DivConfAuth_; break;
            case 192: aFlds_[192] = &DivChqAuth_; break;
            case 193: aFlds_[193] = &ContrAuth_; break;
            case 194: aFlds_[194] = &RegAuth_; break;
            case 195: aFlds_[195] = &AnnlRptsAuth_; break;
            case 196: aFlds_[196] = &ProspAuth_; break;
            case 197: aFlds_[197] = &BenAuth_; break;
            case 198: aFlds_[198] = &StmtAuth_; break;
            case 199: aFlds_[199] = &DupStmtAuth_; break;
            case 200: aFlds_[200] = &NFConAuth_; break;
            case 201: aFlds_[201] = &TxnConfAuth_; break;
            case 202: aFlds_[202] = &DupConfAuth_; break;
            case 203: aFlds_[203] = &SmAnnlRptsAuth_; break;
            case 204: aFlds_[204] = &ContributionAuth_; break;
            case 205: aFlds_[205] = &StmtFrequency_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0114_REQ::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0114_REQ* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0114_REQ::getLargestDefinedField( void ) const
{
   return( 60 );
}

unsigned long dsi_DSTC0114_REQ::getDefinedByteLength( void ) const
{
   return( 2001 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0114_REQ::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0114_REQ::fieldExists( id );
}

bool dsi_DSTC0114_REQ::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40000005: return( true );
      case 40000002: return( true );
      case 40000030: return( true );
      case 40000031: return( true );
      case 40000990: return( true );
      case 40000545: return( true );
      case 40000546: return( true );
      case 40000547: return( true );
      case 40000548: return( true );
      case 40000549: return( true );
      case 40000550: return( true );
      case 40000551: return( true );
      case 40000552: return( true );
      case 40000553: return( true );
      case 40000554: return( true );
      case 40000555: return( true );
      case 40000556: return( true );
      case 40000557: return( true );
      case 40000558: return( true );
      case 40000559: return( true );
      case 40000560: return( true );
      case 40000561: return( true );
      case 40000562: return( true );
      case 40000563: return( true );
      case 40000564: return( true );
      case 40000565: return( true );
      case 40000566: return( true );
      case 40000567: return( true );
      case 40000568: return( true );
      case 40000570: return( true );
      case 40000572: return( true );
      case 40000574: return( true );
      case 40000909: return( true );
      case 40001054: return( true );
      case 40001055: return( true );
      case 40000040: return( true );
      case 40000910: return( true );
      case 40002065: return( true );
      case 40002066: return( true );
      case 40003278: return( true );
      case 40003279: return( true );
      case 40003280: return( true );
      case 40003281: return( true );
      case 40003282: return( true );
      case 40003283: return( true );
      case 40003321: return( true );
      case 40003322: return( true );
      case 40003323: return( true );
      case 40003324: return( true );
      case 40003325: return( true );
      case 40003326: return( true );
      case 40003379: return( true );
      case 40003380: return( true );
      case 40003381: return( true );
      case 40003382: return( true );
      case 40003383: return( true );
      case 40003384: return( true );
      case 40003309: return( true );
      case 40003310: return( true );
      case 40003311: return( true );
      case 40003313: return( true );
      case 40003314: return( true );
      case 40003312: return( true );
      case 40003297: return( true );
      case 40003298: return( true );
      case 40003299: return( true );
      case 40003300: return( true );
      case 40003301: return( true );
      case 40003302: return( true );
      case 40003303: return( true );
      case 40003304: return( true );
      case 40003305: return( true );
      case 40003306: return( true );
      case 40003307: return( true );
      case 40003308: return( true );
      case 40003291: return( true );
      case 40003292: return( true );
      case 40003293: return( true );
      case 40003294: return( true );
      case 40003295: return( true );
      case 40003296: return( true );
      case 40003327: return( true );
      case 40003328: return( true );
      case 40003329: return( true );
      case 40003330: return( true );
      case 40003332: return( true );
      case 40003333: return( true );
      case 40003334: return( true );
      case 40003335: return( true );
      case 40003336: return( true );
      case 40003337: return( true );
      case 40003338: return( true );
      case 40003339: return( true );
      case 40003340: return( true );
      case 40003341: return( true );
      case 40003342: return( true );
      case 40003343: return( true );
      case 40003344: return( true );
      case 40003345: return( true );
      case 40003346: return( true );
      case 40003347: return( true );
      case 40003348: return( true );
      case 40003350: return( true );
      case 40003351: return( true );
      case 40003352: return( true );
      case 40003353: return( true );
      case 40003354: return( true );
      case 40003355: return( true );
      case 40003356: return( true );
      case 40003357: return( true );
      case 40003358: return( true );
      case 40003359: return( true );
      case 40003360: return( true );
      case 40003361: return( true );
      case 40003362: return( true );
      case 40003363: return( true );
      case 40003365: return( true );
      case 40003367: return( true );
      case 40003368: return( true );
      case 40003369: return( true );
      case 40003370: return( true );
      case 40003371: return( true );
      case 40003372: return( true );
      case 40003373: return( true );
      case 40003374: return( true );
      case 40003375: return( true );
      case 40003376: return( true );
      case 40003377: return( true );
      case 40003378: return( true );
      case 40003315: return( true );
      case 40003316: return( true );
      case 40003317: return( true );
      case 40003318: return( true );
      case 40003319: return( true );
      case 40003320: return( true );
      case 40003777: return( true );
      case 40003778: return( true );
      case 40003779: return( true );
      case 40003780: return( true );
      case 40003781: return( true );
      case 40003782: return( true );
      case 40003783: return( true );
      case 40003784: return( true );
      case 40004928: return( true );
      case 40004930: return( true );
      case 40004931: return( true );
      case 40004932: return( true );
      case 40004933: return( true );
      case 40004934: return( true );
      case 40004935: return( true );
      case 40004936: return( true );
      case 40004937: return( true );
      case 40004938: return( true );
      case 40004939: return( true );
      case 40004940: return( true );
      case 40004941: return( true );
      case 40004942: return( true );
      case 40004943: return( true );
      case 40004944: return( true );
      case 40004945: return( true );
      case 40004946: return( true );
      case 40004947: return( true );
      case 40004948: return( true );
      case 40004949: return( true );
      case 40004950: return( true );
      case 40004951: return( true );
      case 40004952: return( true );
      case 40004953: return( true );
      case 40005273: return( true );
      case 40005300: return( true );
      case 40005301: return( true );
      case 40005293: return( true );
      case 40005295: return( true );
      case 40005299: return( true );
      case 40005294: return( true );
      case 40005296: return( true );
      case 40005298: return( true );
      case 40005289: return( true );
      case 40005275: return( true );
      case 40005310: return( true );
      case 40005311: return( true );
      case 40005290: return( true );
      case 40005306: return( true );
      case 40005304: return( true );
      case 40005302: return( true );
      case 40005309: return( true );
      case 40005303: return( true );
      case 40005288: return( true );
      case 40005280: return( true );
      case 40005281: return( true );
      case 40005279: return( true );
      case 40005270: return( true );
      case 40005271: return( true );
      case 40005286: return( true );
      case 40005269: return( true );
      case 40005287: return( true );
      case 40005285: return( true );
      case 40005282: return( true );
      case 40005277: return( true );
      case 40005278: return( true );
      case 40005283: return( true );
      case 40005272: return( true );
      case 40005276: return( true );
      case 40005284: return( true );
      case 40005313: return( true );
      case 40006679: return( true );
   }
   return false;
}

