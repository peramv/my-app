// Data Field Properties
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdataid.hpp>
#include "ifast_substitutions.h"
#include "ifast_masks.h"

namespace ifds
{
   extern const BFDataId DSTC0436_REQ;
   extern const BFDataId DSTC0436_VW;
   extern const BFTextFieldId FromSegTradeEntryCheck;
   extern const BFTextFieldId IsCancelModSEGTradeAllowed;
   extern const BFTextFieldId ErrorValue1;
   extern const BFTextFieldId ErrorValue2;
   extern const BFTextFieldId ErrorValue3;
   extern const BFTextFieldId ErrorValue4;
   extern const BFTextFieldId WarnValue1;
   extern const BFTextFieldId WarnValue2;
   extern const BFTextFieldId WarnValue3;
   extern const BFTextFieldId WarnValue4;
   extern const BFTextFieldId RedCodesGuaranteeOverride;
   extern const BFTextFieldId GuaranteesOverride;
   extern const BFTextFieldId AcctFromToXEdit;
   extern const BFTextFieldId FromToSegTradeEntryCheck;
   extern const BFTextFieldId BankInstrComboContMatInstr;
   extern const BFTextFieldId PUD1;
   extern const BFTextFieldId GIRedemOrder;
   extern const BFTextFieldId GIRedemAmountType;
   extern const BFTextFieldId GIRedemInvSelectAmountType;
   extern const BFTextFieldId Insured;
   extern const BFTextFieldId InsuranceRefNum;
   extern const BFDecimalFieldId PaidPACSAmt;
   extern const BFDecimalFieldId ExpectedAmt;
   extern const BFDecimalFieldId BonusPercentage;
   extern const BFTextFieldId ContractMatBasedOnOrig;
   extern const BFTextFieldId WhereUseTaxType;
   extern const BFTextFieldId BankInstrComboRegAgent;
   extern const BFTextFieldId RegAgent;
   extern const BFTextFieldId CountryOfIssue;
   extern const BFTextFieldId CPFActiveFlag;
   extern const BFTextFieldId LanguageDefault;
   extern const BFTextFieldId XrefCountryOfIssue;
   extern const BFTextFieldId PrintAcctConf;
   extern const BFTextFieldId MatInstrFundClassXEdit;
   extern const BFTextFieldId TaxTypeList;
   extern const BFTextFieldId PensionJurisdictionList;
   extern const BFTextFieldId TaxTypeRuleCurrSet;
   extern const BFTextFieldId MaxFeeAppl;
   extern const BFTextFieldId NonFinConfirm;
   extern const BFTextFieldId RefCode;
   extern const BFTextFieldId RefType;
   extern const BFTextFieldId SrchRefCode;
   extern const BFTextFieldId SrchAcctRegKey;
   extern const BFTextFieldId EmpAgentAppl;
   extern const BFTextFieldId TransferOption;
   extern const BFTextFieldId FundEliPSG;
   extern const BFTextFieldId FundSERVValidation;
   extern const BFTextFieldId LTAIndicator;
   extern const BFTextFieldId ModifyCompAgent;
   extern const BFTextFieldId IsAllocationChanged;
   extern const BFTextFieldId PortfolioXEdit;
   extern const BFTextFieldId LinkedContract;
   extern const BFDataId DSTC0439_REQ;
   extern const BFDataId DSTC0439_VW;
   extern const BFTextFieldId BrokerCodeNew;
   extern const BFTextFieldId BranchCodeNew;
   extern const BFTextFieldId SlsRepCodeNew;
   extern const BFTextFieldId RefundCalc;
   extern const BFTextFieldId DilutionCalc;
   extern const BFTextFieldId SourceOfFundApp;
   extern const BFTextFieldId RefundPayType;
   extern const BFTextFieldId RefundOption;
   extern const BFDecimalFieldId DilutionAmount;
   extern const BFDecimalFieldId RefundAmount;
   extern const BFDecimalFieldId RefundFXRate;
   extern const BFTextFieldId RefundCurrency;
   extern const BFTextFieldId RegAgentCode;
   extern const BFTextFieldId MaxFeeRate;
   extern const BFTextFieldId RefundRVCD;
   extern const BFTextFieldId NFConfBnkDetl;
   extern const BFDateFieldId StopAdjDate;
   extern const BFTextFieldId RRIFSrcOfAcct;
   extern const BFTextFieldId RRIFSrcOfFund;
   extern const BFTextFieldId SrcOfFunds_DP_IA;
   extern const BFTextFieldId SrcOfFunds_PW_IA;
   extern const BFTextFieldId SrcOfFunds_SWP_IA;
   extern const BFTextFieldId SrcOfFunds_GIC_IA;
   extern const BFTextFieldId RefundOptionAvailable;
   extern const BFTextFieldId InvestStatus1;
   extern const BFTextFieldId DfCMDBaseOn;
   extern const BFTextFieldId TaxApl;
   extern const BFTextFieldId TopUpClass;
   extern const BFTextFieldId TopUpFund;
   extern const BFTextFieldId ValidRATaxType;
   extern const BFTextFieldId DilutionAvail;
   extern const BFTextFieldId SrcOfFunds_IA_Required;
   extern const BFTextFieldId SrcOfFunds_IA;
   extern const BFTextFieldId SrcOfFunds_IA_ED;
   extern const BFTextFieldId SrcOfFunds_IA_PW;
   extern const BFTextFieldId SrcOfFunds_IA_GIC;
   extern const BFTextFieldId SrcOfFunds_IA_SWP;
   extern const BFTextFieldId SrcOfFunds_IA_RIF;
   extern const BFDataId DSTC0437_REQ;
   extern const BFDataId DSTC0437_VW;
   extern const BFDecimalFieldId SWPCalculatedAmount;
   extern const BFTextFieldId GWLWAAvailOptions;
   extern const BFDataId DSTC0438_REQ;
   extern const BFDataId DSTC0438_VW;
   extern const BFTextFieldId SWPAmountType;
   extern const BFTextFieldId NonFinConfirms;
   extern const BFTextFieldId SWPGLOpt;
   extern const BFTextFieldId RRIFGLOpt;
   extern const BFDateFieldId T5AnniversaryDate;
   extern const BFTextFieldId TaxAnniversary;
   extern const BFDecimalFieldId TaxableAmount;
   extern const BFTextFieldId BrokerBranchRepXEdit;
   extern const BFTextFieldId UpdateSvcAgent;
   extern const BFTextFieldId ServiceAgentUpdated;
   extern const BFTextFieldId AutoUpdateSvcAgent;
   extern const BFTextFieldId StopReasonPAC;
   extern const BFTextFieldId ACBListHeading5;
   extern const BFTextFieldId ACBListHeading6;
   extern const BFTextFieldId ACBListHeading7;
   extern const BFTextFieldId ACBListHeading8;
   extern const BFTextFieldId CalcAmountXEdit;
   extern const BFTextFieldId LGFundClassXEdit;
   extern const BFDecimalFieldId BrkOverideAmt;
   extern const BFDateFieldId NextDrawDate;
   extern const BFDateFieldId PACDrawDeff;
   extern const BFDataId DSTC0440_REQ;
   extern const BFDataId DSTC0440_VW;
   extern const BFTextFieldId NetOfFeesFlag;
   extern const BFDecimalFieldId ScaleMaxRateChk;
   extern const BFDecimalFieldId ScaleMinRateChk;
   extern const BFTextFieldId CombinedLoadType;
   extern const BFDateFieldId TaxableTrustDate;
   extern const BFTextFieldId RightToCancelDefault;
   extern const BFTextFieldId RightToCancel;
   extern const BFDateFieldId IdExpireDate;
   extern const BFTextFieldId FATCAApplicable;
   extern const BFTextFieldId FATCAFFI;
   extern const BFTextFieldId FdBrokerDefaultlvl;
   extern const BFTextFieldId LV_EstateAllocation;
   extern const BFDataId DSTC0441_REQ;
   extern const BFDataId DSTC0441_VW;
   extern const BFDataId DSTC0441_VWRepeat_Record;
   extern const BFDecimalFieldId FundClassAmtFullPW;
   extern const BFNumericFieldId BenefEntityID;
   extern const BFTextFieldId BenefAddrCode;
   extern const BFTextFieldId BenefAddrLevel;
   extern const BFDecimalFieldId BenefPrcnt;
   extern const BFDecimalFieldId BenefAmount;
   extern const BFDecimalFieldId BenefUnits;
   extern const BFTextFieldId BenefName;
   extern const BFTextFieldId RDREnv;
   extern const BFTextFieldId RDRAdvice;
   extern const BFTextFieldId RDRApplic;
   extern const BFTextFieldId RDRDefault;
   extern const BFDataId DSTC0442_REQ;
   extern const BFDataId DSTC0442_VW;
   extern const BFDateFieldId ExpireDate;
   extern const BFDateFieldId RequestDate;
   extern const BFTextFieldId AcctDocListUUID;
   extern const BFDataId DSTC0443_REQ;
   extern const BFDataId DSTC0443_VW;
   extern const BFDataId DSTC0443_VWRepeat_Record;
   extern const BFTextFieldId BenefRunMode;
   extern const BFDecimalFieldId OwnershipPrcnt;
   extern const BFDecimalFieldId TaxablePrcnt;
   extern const BFDataId DSTC0444_REQ;
   extern const BFDataId DSTC0444_VW;
   extern const BFDataId DSTC0444_VWRepeat_Record;
   extern const BFTextFieldId GuaranteeFeeAppl;
   extern const BFTextFieldId SDRTExemptCode;
   extern const BFTextFieldId SDRTReportFlag;
   extern const BFTextFieldId BenefRecType;
   extern const BFDecimalFieldId InvHisCalculatedMVA;
   extern const BFTextFieldId InvHisMVAReason;
   extern const BFDecimalFieldId TaxCreditAmt;
   extern const BFTextFieldId DistributionType;
   extern const BFDataId DSTC0445_REQ;
   extern const BFDataId DSTC0445_VW;
   extern const BFTextFieldId EventComm;
   extern const BFTextFieldId RequireEventCommission;
   extern const BFDataId DSTC0446_REQ;
   extern const BFTextFieldId NationalID;
   extern const BFTextFieldId COINationalID;
   extern const BFTextFieldId Passport;
   extern const BFTextFieldId COIPassport;
   extern const BFDataId DSTC0446_VW;
   extern const BFTextFieldId IDExemptionReasonCode;

   //------------------------------------------------------------------
   // Field s_FldProp_FromSegTradeEntryCheck (6802)
   //------------------------------------------------------------------
   const DString& s_FldProp_FromSegTradeEntryCheck_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6802_1( I_("") );
      return( dstrDefValue_6802_1 );
   }
   const DString& s_FldProp_FromSegTradeEntryCheck_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6802_1( I_("FromSegTradeEntryCheck") );
      return( dstrFldLabel_6802_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FromSegTradeEntryCheck(
       BFDataFieldProperties::Type::text // field is a text field
      ,FromSegTradeEntryCheck // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FromSegTradeEntryCheck_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FromSegTradeEntryCheck_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IsCancelModSEGTradeAllowed (6803)
   //------------------------------------------------------------------
   const DString& s_FldProp_IsCancelModSEGTradeAllowed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6803_1( I_("Y") );
      return( dstrDefValue_6803_1 );
   }
   const DString& s_FldProp_IsCancelModSEGTradeAllowed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6803_1( I_("IsCancelModSEGTradeAllowed") );
      return( dstrFldLabel_6803_1 );
   }
   PBF_SSC subset_super_chooser_2_6803( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IsCancelModSEGTradeAllowed(
       BFDataFieldProperties::Type::text // field is a text field
      ,IsCancelModSEGTradeAllowed // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IsCancelModSEGTradeAllowed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IsCancelModSEGTradeAllowed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6803 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ErrorValue1 (6804)
   //------------------------------------------------------------------
   const DString& s_FldProp_ErrorValue1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6804_1( I_("") );
      return( dstrDefValue_6804_1 );
   }
   const DString& s_FldProp_ErrorValue1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6804_1( I_("ErrorValue1") );
      return( dstrFldLabel_6804_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ErrorValue1(
       BFDataFieldProperties::Type::text // field is a text field
      ,ErrorValue1 // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ErrorValue1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ErrorValue1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ErrorValue2 (6805)
   //------------------------------------------------------------------
   const DString& s_FldProp_ErrorValue2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6805_1( I_("") );
      return( dstrDefValue_6805_1 );
   }
   const DString& s_FldProp_ErrorValue2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6805_1( I_("ErrorValue2") );
      return( dstrFldLabel_6805_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ErrorValue2(
       BFDataFieldProperties::Type::text // field is a text field
      ,ErrorValue2 // fieldId
      ,200 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ErrorValue2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ErrorValue2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ErrorValue3 (6806)
   //------------------------------------------------------------------
   const DString& s_FldProp_ErrorValue3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6806_1( I_("") );
      return( dstrDefValue_6806_1 );
   }
   const DString& s_FldProp_ErrorValue3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6806_1( I_("ErrorValue3") );
      return( dstrFldLabel_6806_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ErrorValue3(
       BFDataFieldProperties::Type::text // field is a text field
      ,ErrorValue3 // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ErrorValue3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ErrorValue3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ErrorValue4 (6807)
   //------------------------------------------------------------------
   const DString& s_FldProp_ErrorValue4_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6807_1( I_("") );
      return( dstrDefValue_6807_1 );
   }
   const DString& s_FldProp_ErrorValue4_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6807_1( I_("ErrorValue4") );
      return( dstrFldLabel_6807_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ErrorValue4(
       BFDataFieldProperties::Type::text // field is a text field
      ,ErrorValue4 // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ErrorValue4_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ErrorValue4_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WarnValue1 (6808)
   //------------------------------------------------------------------
   const DString& s_FldProp_WarnValue1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6808_1( I_("") );
      return( dstrDefValue_6808_1 );
   }
   const DString& s_FldProp_WarnValue1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6808_1( I_("WarnValue1") );
      return( dstrFldLabel_6808_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WarnValue1(
       BFDataFieldProperties::Type::text // field is a text field
      ,WarnValue1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WarnValue1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WarnValue1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WarnValue2 (6809)
   //------------------------------------------------------------------
   const DString& s_FldProp_WarnValue2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6809_1( I_("") );
      return( dstrDefValue_6809_1 );
   }
   const DString& s_FldProp_WarnValue2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6809_1( I_("WarnValue2") );
      return( dstrFldLabel_6809_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WarnValue2(
       BFDataFieldProperties::Type::text // field is a text field
      ,WarnValue2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WarnValue2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WarnValue2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WarnValue3 (6810)
   //------------------------------------------------------------------
   const DString& s_FldProp_WarnValue3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6810_1( I_("") );
      return( dstrDefValue_6810_1 );
   }
   const DString& s_FldProp_WarnValue3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6810_1( I_("WarnValue3") );
      return( dstrFldLabel_6810_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WarnValue3(
       BFDataFieldProperties::Type::text // field is a text field
      ,WarnValue3 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WarnValue3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WarnValue3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WarnValue4 (6811)
   //------------------------------------------------------------------
   const DString& s_FldProp_WarnValue4_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6811_1( I_("") );
      return( dstrDefValue_6811_1 );
   }
   const DString& s_FldProp_WarnValue4_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6811_1( I_("WarnValue4") );
      return( dstrFldLabel_6811_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WarnValue4(
       BFDataFieldProperties::Type::text // field is a text field
      ,WarnValue4 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WarnValue4_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WarnValue4_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RedCodesGuaranteeOverride (6812)
   //------------------------------------------------------------------
   const DString& s_FldProp_RedCodesGuaranteeOverride_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6812_1( I_("") );
      return( dstrDefValue_6812_1 );
   }
   const DString& s_FldProp_RedCodesGuaranteeOverride_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6812_1( I_("RedCodesGuaranteeOverride") );
      return( dstrFldLabel_6812_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RedCodesGuaranteeOverride(
       BFDataFieldProperties::Type::text // field is a text field
      ,RedCodesGuaranteeOverride // fieldId
      ,200 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RedCodesGuaranteeOverride_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RedCodesGuaranteeOverride_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuaranteesOverride (6813)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuaranteesOverride_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6813_1( I_("") );
      return( dstrDefValue_6813_1 );
   }
   const DString& s_FldProp_GuaranteesOverride_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6813_1( I_("GuaranteesOverride") );
      return( dstrFldLabel_6813_1 );
   }
   PBF_SSC subset_super_chooser_2_6813( const ClientLocale& locale )
   {
      return chooser_ss_002_972; // defined in ifast_substitutions_chooser_32.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuaranteesOverride(
       BFDataFieldProperties::Type::text // field is a text field
      ,GuaranteesOverride // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GuaranteesOverride_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GuaranteesOverride_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6813 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctFromToXEdit (6814)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctFromToXEdit_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6814_1( I_("") );
      return( dstrDefValue_6814_1 );
   }
   const DString& s_FldProp_AcctFromToXEdit_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6814_1( I_("AcctFromToXEdit") );
      return( dstrFldLabel_6814_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctFromToXEdit(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctFromToXEdit // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctFromToXEdit_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctFromToXEdit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FromToSegTradeEntryCheck (6815)
   //------------------------------------------------------------------
   const DString& s_FldProp_FromToSegTradeEntryCheck_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6815_1( I_("") );
      return( dstrDefValue_6815_1 );
   }
   const DString& s_FldProp_FromToSegTradeEntryCheck_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6815_1( I_("FromToSegTradeEntryCheck") );
      return( dstrFldLabel_6815_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FromToSegTradeEntryCheck(
       BFDataFieldProperties::Type::text // field is a text field
      ,FromToSegTradeEntryCheck // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FromToSegTradeEntryCheck_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FromToSegTradeEntryCheck_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankInstrComboContMatInstr (6816)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankInstrComboContMatInstr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6816_1( I_("") );
      return( dstrDefValue_6816_1 );
   }
   const DString& s_FldProp_BankInstrComboContMatInstr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6816_1( I_("BankInstrComboContMatInstr") );
      return( dstrFldLabel_6816_1 );
   }
   PBF_SSC subset_super_chooser_2_6816( const ClientLocale& locale )
   {
      return chooser_ss_002_878; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankInstrComboContMatInstr(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankInstrComboContMatInstr // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankInstrComboContMatInstr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankInstrComboContMatInstr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6816 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PUD1 (6817)
   //------------------------------------------------------------------
   const DString& s_FldProp_PUD1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6817_1( I_("") );
      return( dstrDefValue_6817_1 );
   }
   const DString& s_FldProp_PUD1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6817_1( I_("PUD1") );
      return( dstrFldLabel_6817_1 );
   }
   PBF_SSC subset_super_chooser_2_6817( const ClientLocale& locale )
   {
      return chooser_ss_002_875; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PUD1(
       BFDataFieldProperties::Type::text // field is a text field
      ,PUD1 // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PUD1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PUD1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6817 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GIRedemOrder (6818)
   //------------------------------------------------------------------
   const DString& s_FldProp_GIRedemOrder_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6818_1( I_("") );
      return( dstrDefValue_6818_1 );
   }
   const DString& s_FldProp_GIRedemOrder_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6818_1( I_("GIRedemOrder") );
      return( dstrFldLabel_6818_1 );
   }
   PBF_SSC subset_super_chooser_2_6818( const ClientLocale& locale )
   {
      return chooser_ss_002_879; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GIRedemOrder(
       BFDataFieldProperties::Type::text // field is a text field
      ,GIRedemOrder // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GIRedemOrder_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GIRedemOrder_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6818 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GIRedemAmountType (6819)
   //------------------------------------------------------------------
   const DString& s_FldProp_GIRedemAmountType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6819_1( I_("") );
      return( dstrDefValue_6819_1 );
   }
   const DString& s_FldProp_GIRedemAmountType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6819_1( I_("GIRedemAmountType") );
      return( dstrFldLabel_6819_1 );
   }
   PBF_SSC subset_super_chooser_2_6819( const ClientLocale& locale )
   {
      return chooser_ss_002_880; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GIRedemAmountType(
       BFDataFieldProperties::Type::text // field is a text field
      ,GIRedemAmountType // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GIRedemAmountType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GIRedemAmountType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6819 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GIRedemInvSelectAmountType (6820)
   //------------------------------------------------------------------
   const DString& s_FldProp_GIRedemInvSelectAmountType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6820_1( I_("") );
      return( dstrDefValue_6820_1 );
   }
   const DString& s_FldProp_GIRedemInvSelectAmountType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6820_1( I_("GIRedemInvSelectAmountType") );
      return( dstrFldLabel_6820_1 );
   }
   PBF_SSC subset_super_chooser_2_6820( const ClientLocale& locale )
   {
      return chooser_ss_002_881; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GIRedemInvSelectAmountType(
       BFDataFieldProperties::Type::text // field is a text field
      ,GIRedemInvSelectAmountType // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GIRedemInvSelectAmountType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GIRedemInvSelectAmountType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6820 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Insured (6821)
   //------------------------------------------------------------------
   const DString& s_FldProp_Insured_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6821_1( I_("") );
      return( dstrDefValue_6821_1 );
   }
   const DString& s_FldProp_Insured_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6821_1( I_("Insured") );
      return( dstrFldLabel_6821_1 );
   }
   PBF_SSC subset_super_chooser_2_6821( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Insured(
       BFDataFieldProperties::Type::text // field is a text field
      ,Insured // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Insured_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Insured_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6821 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InsuranceRefNum (6822)
   //------------------------------------------------------------------
   const DString& s_FldProp_InsuranceRefNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6822_1( I_("") );
      return( dstrDefValue_6822_1 );
   }
   const DString& s_FldProp_InsuranceRefNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6822_1( I_("InsuranceRefNum") );
      return( dstrFldLabel_6822_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InsuranceRefNum(
       BFDataFieldProperties::Type::text // field is a text field
      ,InsuranceRefNum // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InsuranceRefNum_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InsuranceRefNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PaidPACSAmt (6824)
   //------------------------------------------------------------------
   const DString& s_FldProp_PaidPACSAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6824_1( I_("") );
      return( dstrDefValue_6824_1 );
   }
   double s_FldProp_PaidPACSAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_PaidPACSAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6824_1( I_("PaidPACSAmt") );
      return( dstrFldLabel_6824_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PaidPACSAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PaidPACSAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_PaidPACSAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PaidPACSAmt_d_DVF // default value
      ,s_FldProp_PaidPACSAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExpectedAmt (6825)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExpectedAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6825_1( I_("") );
      return( dstrDefValue_6825_1 );
   }
   double s_FldProp_ExpectedAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ExpectedAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6825_1( I_("ExpectedAmt") );
      return( dstrFldLabel_6825_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExpectedAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ExpectedAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ExpectedAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ExpectedAmt_d_DVF // default value
      ,s_FldProp_ExpectedAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BonusPercentage (6826)
   //------------------------------------------------------------------
   const DString& s_FldProp_BonusPercentage_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6826_1( I_("") );
      return( dstrDefValue_6826_1 );
   }
   double s_FldProp_BonusPercentage_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_BonusPercentage_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6826_1( I_("BonusPercentage") );
      return( dstrFldLabel_6826_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BonusPercentage(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BonusPercentage // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_BonusPercentage_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BonusPercentage_d_DVF // default value
      ,s_FldProp_BonusPercentage_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ContractMatBasedOnOrig (6827)
   //------------------------------------------------------------------
   const DString& s_FldProp_ContractMatBasedOnOrig_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6827_1( I_("") );
      return( dstrDefValue_6827_1 );
   }
   const DString& s_FldProp_ContractMatBasedOnOrig_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6827_1( I_("ContractMatBasedOnOrig") );
      return( dstrFldLabel_6827_1 );
   }
   PBF_SSC subset_super_chooser_2_6827( const ClientLocale& locale )
   {
      return chooser_ss_002_856; // defined in ifast_substitutions_chooser_28.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ContractMatBasedOnOrig(
       BFDataFieldProperties::Type::text // field is a text field
      ,ContractMatBasedOnOrig // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ContractMatBasedOnOrig_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ContractMatBasedOnOrig_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6827 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WhereUseTaxType (6828)
   //------------------------------------------------------------------
   const DString& s_FldProp_WhereUseTaxType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6828_1( I_("") );
      return( dstrDefValue_6828_1 );
   }
   const DString& s_FldProp_WhereUseTaxType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6828_1( I_("WhereUseTaxType") );
      return( dstrFldLabel_6828_1 );
   }
   PBF_SSC subset_super_chooser_2_6828( const ClientLocale& locale )
   {
      return chooser_ss_002_882; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WhereUseTaxType(
       BFDataFieldProperties::Type::text // field is a text field
      ,WhereUseTaxType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WhereUseTaxType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WhereUseTaxType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6828 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankInstrComboRegAgent (6829)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankInstrComboRegAgent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6829_1( I_("") );
      return( dstrDefValue_6829_1 );
   }
   const DString& s_FldProp_BankInstrComboRegAgent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6829_1( I_("BankInstrComboRegAgent") );
      return( dstrFldLabel_6829_1 );
   }
   PBF_SSC subset_super_chooser_2_6829( const ClientLocale& locale )
   {
      return chooser_ss_002_883; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankInstrComboRegAgent(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankInstrComboRegAgent // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankInstrComboRegAgent_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankInstrComboRegAgent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6829 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RegAgent (6830)
   //------------------------------------------------------------------
   const DString& s_FldProp_RegAgent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6830_1( I_("") );
      return( dstrDefValue_6830_1 );
   }
   const DString& s_FldProp_RegAgent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6830_1( I_("RegAgent") );
      return( dstrFldLabel_6830_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RegAgent(
       BFDataFieldProperties::Type::text // field is a text field
      ,RegAgent // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RegAgent_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RegAgent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CountryOfIssue (6831)
   //------------------------------------------------------------------
   const DString& s_FldProp_CountryOfIssue_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6831_1( I_("") );
      return( dstrDefValue_6831_1 );
   }
   const DString& s_FldProp_CountryOfIssue_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6831_1( I_("CountryOfIssue") );
      return( dstrFldLabel_6831_1 );
   }
   PBF_SSC subset_super_chooser_2_6831( const ClientLocale& locale )
   {
      return chooser_ss_002_013; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CountryOfIssue(
       BFDataFieldProperties::Type::text // field is a text field
      ,CountryOfIssue // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CountryOfIssue_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CountryOfIssue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6831 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CPFActiveFlag (6832)
   //------------------------------------------------------------------
   const DString& s_FldProp_CPFActiveFlag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6832_1( I_("") );
      return( dstrDefValue_6832_1 );
   }
   const DString& s_FldProp_CPFActiveFlag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6832_1( I_("CPFActiveFlag") );
      return( dstrFldLabel_6832_1 );
   }
   PBF_SSC subset_super_chooser_2_6832( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CPFActiveFlag(
       BFDataFieldProperties::Type::text // field is a text field
      ,CPFActiveFlag // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CPFActiveFlag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CPFActiveFlag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6832 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LanguageDefault (6834)
   //------------------------------------------------------------------
   const DString& s_FldProp_LanguageDefault_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6834_1( I_("") );
      return( dstrDefValue_6834_1 );
   }
   const DString& s_FldProp_LanguageDefault_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6834_1( I_("LanguageDefault") );
      return( dstrFldLabel_6834_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LanguageDefault(
       BFDataFieldProperties::Type::text // field is a text field
      ,LanguageDefault // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LanguageDefault_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LanguageDefault_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_XrefCountryOfIssue (6835)
   //------------------------------------------------------------------
   const DString& s_FldProp_XrefCountryOfIssue_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6835_1( I_("") );
      return( dstrDefValue_6835_1 );
   }
   const DString& s_FldProp_XrefCountryOfIssue_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6835_1( I_("XrefCountryOfIssue") );
      return( dstrFldLabel_6835_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_XrefCountryOfIssue(
       BFDataFieldProperties::Type::text // field is a text field
      ,XrefCountryOfIssue // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_XrefCountryOfIssue_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_XrefCountryOfIssue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PrintAcctConf (6838)
   //------------------------------------------------------------------
   const DString& s_FldProp_PrintAcctConf_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6838_1( I_("") );
      return( dstrDefValue_6838_1 );
   }
   const DString& s_FldProp_PrintAcctConf_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6838_1( I_("PrintAcctConf") );
      return( dstrFldLabel_6838_1 );
   }
   PBF_SSC subset_super_chooser_2_6838( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PrintAcctConf(
       BFDataFieldProperties::Type::text // field is a text field
      ,PrintAcctConf // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PrintAcctConf_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PrintAcctConf_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6838 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MatInstrFundClassXEdit (6839)
   //------------------------------------------------------------------
   const DString& s_FldProp_MatInstrFundClassXEdit_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6839_1( I_("") );
      return( dstrDefValue_6839_1 );
   }
   const DString& s_FldProp_MatInstrFundClassXEdit_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6839_1( I_("MatInstrFundClassXEdit") );
      return( dstrFldLabel_6839_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MatInstrFundClassXEdit(
       BFDataFieldProperties::Type::text // field is a text field
      ,MatInstrFundClassXEdit // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MatInstrFundClassXEdit_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MatInstrFundClassXEdit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxTypeList (6840)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxTypeList_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6840_1( I_("") );
      return( dstrDefValue_6840_1 );
   }
   const DString& s_FldProp_TaxTypeList_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6840_1( I_("TaxTypeList") );
      return( dstrFldLabel_6840_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxTypeList(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxTypeList // fieldId
      ,150 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxTypeList_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxTypeList_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PensionJurisdictionList (6841)
   //------------------------------------------------------------------
   const DString& s_FldProp_PensionJurisdictionList_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6841_1( I_("") );
      return( dstrDefValue_6841_1 );
   }
   const DString& s_FldProp_PensionJurisdictionList_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6841_1( I_("PensionJurisdictionList") );
      return( dstrFldLabel_6841_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PensionJurisdictionList(
       BFDataFieldProperties::Type::text // field is a text field
      ,PensionJurisdictionList // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PensionJurisdictionList_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PensionJurisdictionList_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxTypeRuleCurrSet (6842)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxTypeRuleCurrSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6842_1( I_("") );
      return( dstrDefValue_6842_1 );
   }
   const DString& s_FldProp_TaxTypeRuleCurrSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6842_1( I_("TaxTypeRuleCurrSet") );
      return( dstrFldLabel_6842_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxTypeRuleCurrSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxTypeRuleCurrSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxTypeRuleCurrSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxTypeRuleCurrSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxFeeAppl (6843)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxFeeAppl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6843_1( I_("") );
      return( dstrDefValue_6843_1 );
   }
   const DString& s_FldProp_MaxFeeAppl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6843_1( I_("MaxFeeAppl") );
      return( dstrFldLabel_6843_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxFeeAppl(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaxFeeAppl // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaxFeeAppl_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaxFeeAppl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NonFinConfirm (6844)
   //------------------------------------------------------------------
   const DString& s_FldProp_NonFinConfirm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6844_1( I_("N") );
      return( dstrDefValue_6844_1 );
   }
   const DString& s_FldProp_NonFinConfirm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6844_1( I_("NonFinConfirm") );
      return( dstrFldLabel_6844_1 );
   }
   PBF_SSC subset_super_chooser_2_6844( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NonFinConfirm(
       BFDataFieldProperties::Type::text // field is a text field
      ,NonFinConfirm // fieldId
      ,3 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NonFinConfirm_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NonFinConfirm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6844 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RefCode (6845)
   //------------------------------------------------------------------
   const DString& s_FldProp_RefCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6845_1( I_("") );
      return( dstrDefValue_6845_1 );
   }
   const DString& s_FldProp_RefCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6845_1( I_("RefCode") );
      return( dstrFldLabel_6845_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RefCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,RefCode // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RefCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RefCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RefType (6846)
   //------------------------------------------------------------------
   const DString& s_FldProp_RefType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6846_1( I_("") );
      return( dstrDefValue_6846_1 );
   }
   const DString& s_FldProp_RefType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6846_1( I_("RefType") );
      return( dstrFldLabel_6846_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RefType(
       BFDataFieldProperties::Type::text // field is a text field
      ,RefType // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RefType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RefType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrchRefCode (6847)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrchRefCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6847_1( I_("") );
      return( dstrDefValue_6847_1 );
   }
   const DString& s_FldProp_SrchRefCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6847_1( I_("SrchRefCode") );
      return( dstrFldLabel_6847_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrchRefCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrchRefCode // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrchRefCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrchRefCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrchAcctRegKey (6848)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrchAcctRegKey_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6848_1( I_("") );
      return( dstrDefValue_6848_1 );
   }
   const DString& s_FldProp_SrchAcctRegKey_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6848_1( I_("SrchAcctRegKey") );
      return( dstrFldLabel_6848_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrchAcctRegKey(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrchAcctRegKey // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrchAcctRegKey_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrchAcctRegKey_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EmpAgentAppl (6849)
   //------------------------------------------------------------------
   const DString& s_FldProp_EmpAgentAppl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6849_1( I_("") );
      return( dstrDefValue_6849_1 );
   }
   const DString& s_FldProp_EmpAgentAppl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6849_1( I_("EmpAgentAppl") );
      return( dstrFldLabel_6849_1 );
   }
   PBF_SSC subset_super_chooser_2_6849( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EmpAgentAppl(
       BFDataFieldProperties::Type::text // field is a text field
      ,EmpAgentAppl // fieldId
      ,2 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EmpAgentAppl_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EmpAgentAppl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6849 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransferOption (6850)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransferOption_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6850_1( I_("") );
      return( dstrDefValue_6850_1 );
   }
   const DString& s_FldProp_TransferOption_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6850_1( I_("TransferOption") );
      return( dstrFldLabel_6850_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransferOption(
       BFDataFieldProperties::Type::text // field is a text field
      ,TransferOption // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransferOption_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TransferOption_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundEliPSG (6851)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundEliPSG_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6851_1( I_("") );
      return( dstrDefValue_6851_1 );
   }
   const DString& s_FldProp_FundEliPSG_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6851_1( I_("FundEliPSG") );
      return( dstrFldLabel_6851_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundEliPSG(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundEliPSG // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundEliPSG_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundEliPSG_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundSERVValidation (6852)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundSERVValidation_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6852_1( I_("") );
      return( dstrDefValue_6852_1 );
   }
   const DString& s_FldProp_FundSERVValidation_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6852_1( I_("FundSERVValidation") );
      return( dstrFldLabel_6852_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundSERVValidation(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundSERVValidation // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundSERVValidation_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundSERVValidation_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LTAIndicator (6853)
   //------------------------------------------------------------------
   const DString& s_FldProp_LTAIndicator_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6853_1( I_("") );
      return( dstrDefValue_6853_1 );
   }
   const DString& s_FldProp_LTAIndicator_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6853_1( I_("LTAIndicator") );
      return( dstrFldLabel_6853_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LTAIndicator(
       BFDataFieldProperties::Type::text // field is a text field
      ,LTAIndicator // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LTAIndicator_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LTAIndicator_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ModifyCompAgent (6854)
   //------------------------------------------------------------------
   const DString& s_FldProp_ModifyCompAgent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6854_1( I_("") );
      return( dstrDefValue_6854_1 );
   }
   const DString& s_FldProp_ModifyCompAgent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6854_1( I_("ModifyCompAgent") );
      return( dstrFldLabel_6854_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ModifyCompAgent(
       BFDataFieldProperties::Type::text // field is a text field
      ,ModifyCompAgent // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ModifyCompAgent_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ModifyCompAgent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IsAllocationChanged (6855)
   //------------------------------------------------------------------
   const DString& s_FldProp_IsAllocationChanged_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6855_1( I_("") );
      return( dstrDefValue_6855_1 );
   }
   const DString& s_FldProp_IsAllocationChanged_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6855_1( I_("IsAllocationChanged") );
      return( dstrFldLabel_6855_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IsAllocationChanged(
       BFDataFieldProperties::Type::text // field is a text field
      ,IsAllocationChanged // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IsAllocationChanged_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IsAllocationChanged_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PortfolioXEdit (6856)
   //------------------------------------------------------------------
   const DString& s_FldProp_PortfolioXEdit_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6856_1( I_("") );
      return( dstrDefValue_6856_1 );
   }
   const DString& s_FldProp_PortfolioXEdit_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6856_1( I_("PortfolioXEdit") );
      return( dstrFldLabel_6856_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PortfolioXEdit(
       BFDataFieldProperties::Type::text // field is a text field
      ,PortfolioXEdit // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PortfolioXEdit_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PortfolioXEdit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LinkedContract (6857)
   //------------------------------------------------------------------
   const DString& s_FldProp_LinkedContract_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6857_1( I_("") );
      return( dstrDefValue_6857_1 );
   }
   const DString& s_FldProp_LinkedContract_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6857_1( I_("LinkedContract") );
      return( dstrFldLabel_6857_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LinkedContract(
       BFDataFieldProperties::Type::text // field is a text field
      ,LinkedContract // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LinkedContract_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LinkedContract_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BrokerCodeNew (6860)
   //------------------------------------------------------------------
   const DString& s_FldProp_BrokerCodeNew_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6860_1( I_("") );
      return( dstrDefValue_6860_1 );
   }
   const DString& s_FldProp_BrokerCodeNew_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6860_1( I_("BrokerCodeNew") );
      return( dstrFldLabel_6860_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BrokerCodeNew(
       BFDataFieldProperties::Type::text // field is a text field
      ,BrokerCodeNew // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BrokerCodeNew_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BrokerCodeNew_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BranchCodeNew (6861)
   //------------------------------------------------------------------
   const DString& s_FldProp_BranchCodeNew_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6861_1( I_("") );
      return( dstrDefValue_6861_1 );
   }
   const DString& s_FldProp_BranchCodeNew_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6861_1( I_("BranchCodeNew") );
      return( dstrFldLabel_6861_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BranchCodeNew(
       BFDataFieldProperties::Type::text // field is a text field
      ,BranchCodeNew // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BranchCodeNew_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BranchCodeNew_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsRepCodeNew (6862)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsRepCodeNew_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6862_1( I_("") );
      return( dstrDefValue_6862_1 );
   }
   const DString& s_FldProp_SlsRepCodeNew_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6862_1( I_("SlsRepCodeNew") );
      return( dstrFldLabel_6862_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsRepCodeNew(
       BFDataFieldProperties::Type::text // field is a text field
      ,SlsRepCodeNew // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsRepCodeNew_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SlsRepCodeNew_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RefundCalc (6863)
   //------------------------------------------------------------------
   const DString& s_FldProp_RefundCalc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6863_1( I_("") );
      return( dstrDefValue_6863_1 );
   }
   const DString& s_FldProp_RefundCalc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6863_1( I_("RefundCalc") );
      return( dstrFldLabel_6863_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RefundCalc(
       BFDataFieldProperties::Type::text // field is a text field
      ,RefundCalc // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RefundCalc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RefundCalc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DilutionCalc (6864)
   //------------------------------------------------------------------
   const DString& s_FldProp_DilutionCalc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6864_1( I_("") );
      return( dstrDefValue_6864_1 );
   }
   const DString& s_FldProp_DilutionCalc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6864_1( I_("DilutionCalc") );
      return( dstrFldLabel_6864_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DilutionCalc(
       BFDataFieldProperties::Type::text // field is a text field
      ,DilutionCalc // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DilutionCalc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DilutionCalc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SourceOfFundApp (6865)
   //------------------------------------------------------------------
   const DString& s_FldProp_SourceOfFundApp_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6865_1( I_("") );
      return( dstrDefValue_6865_1 );
   }
   const DString& s_FldProp_SourceOfFundApp_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6865_1( I_("SourceOfFundApp") );
      return( dstrFldLabel_6865_1 );
   }
   PBF_SSC subset_super_chooser_2_6865( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SourceOfFundApp(
       BFDataFieldProperties::Type::text // field is a text field
      ,SourceOfFundApp // fieldId
      ,2 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SourceOfFundApp_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SourceOfFundApp_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6865 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RefundPayType (6866)
   //------------------------------------------------------------------
   const DString& s_FldProp_RefundPayType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6866_1( I_("") );
      return( dstrDefValue_6866_1 );
   }
   const DString& s_FldProp_RefundPayType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6866_1( I_("RefundPayType") );
      return( dstrFldLabel_6866_1 );
   }
   PBF_SSC subset_super_chooser_2_6866( const ClientLocale& locale )
   {
      return chooser_ss_002_884; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RefundPayType(
       BFDataFieldProperties::Type::text // field is a text field
      ,RefundPayType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RefundPayType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RefundPayType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6866 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RefundOption (6867)
   //------------------------------------------------------------------
   const DString& s_FldProp_RefundOption_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6867_1( I_("") );
      return( dstrDefValue_6867_1 );
   }
   const DString& s_FldProp_RefundOption_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6867_1( I_("RefundOption") );
      return( dstrFldLabel_6867_1 );
   }
   PBF_SSC subset_super_chooser_2_6867( const ClientLocale& locale )
   {
      return chooser_ss_002_885; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RefundOption(
       BFDataFieldProperties::Type::text // field is a text field
      ,RefundOption // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RefundOption_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RefundOption_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6867 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DilutionAmount (6868)
   //------------------------------------------------------------------
   const DString& s_FldProp_DilutionAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6868_1( I_("") );
      return( dstrDefValue_6868_1 );
   }
   double s_FldProp_DilutionAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_DilutionAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6868_1( I_("DilutionAmount") );
      return( dstrFldLabel_6868_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DilutionAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DilutionAmount // fieldId
      ,20 // length
      ,0 // minimum length
      ,4 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_DilutionAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DilutionAmount_d_DVF // default value
      ,s_FldProp_DilutionAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RefundAmount (6869)
   //------------------------------------------------------------------
   const DString& s_FldProp_RefundAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6869_1( I_("") );
      return( dstrDefValue_6869_1 );
   }
   double s_FldProp_RefundAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_RefundAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6869_1( I_("RefundAmount") );
      return( dstrFldLabel_6869_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RefundAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RefundAmount // fieldId
      ,20 // length
      ,0 // minimum length
      ,4 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_RefundAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RefundAmount_d_DVF // default value
      ,s_FldProp_RefundAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RefundFXRate (6870)
   //------------------------------------------------------------------
   const DString& s_FldProp_RefundFXRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6870_1( I_("") );
      return( dstrDefValue_6870_1 );
   }
   double s_FldProp_RefundFXRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_RefundFXRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6870_1( I_("RefundFXRate") );
      return( dstrFldLabel_6870_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RefundFXRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RefundFXRate // fieldId
      ,20 // length
      ,0 // minimum length
      ,4 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_RefundFXRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RefundFXRate_d_DVF // default value
      ,s_FldProp_RefundFXRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RefundCurrency (6871)
   //------------------------------------------------------------------
   const DString& s_FldProp_RefundCurrency_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6871_1( I_("") );
      return( dstrDefValue_6871_1 );
   }
   const DString& s_FldProp_RefundCurrency_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6871_1( I_("RefundCurrency") );
      return( dstrFldLabel_6871_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RefundCurrency(
       BFDataFieldProperties::Type::text // field is a text field
      ,RefundCurrency // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RefundCurrency_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RefundCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RegAgentCode (6872)
   //------------------------------------------------------------------
   const DString& s_FldProp_RegAgentCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6872_1( I_("") );
      return( dstrDefValue_6872_1 );
   }
   const DString& s_FldProp_RegAgentCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6872_1( I_("RegAgentCode") );
      return( dstrFldLabel_6872_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RegAgentCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,RegAgentCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RegAgentCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RegAgentCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxFeeRate (6873)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxFeeRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6873_1( I_("") );
      return( dstrDefValue_6873_1 );
   }
   const DString& s_FldProp_MaxFeeRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6873_1( I_("MaxFeeRate") );
      return( dstrFldLabel_6873_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxFeeRate(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaxFeeRate // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaxFeeRate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaxFeeRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RefundRVCD (6874)
   //------------------------------------------------------------------
   const DString& s_FldProp_RefundRVCD_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6874_1( I_("") );
      return( dstrDefValue_6874_1 );
   }
   const DString& s_FldProp_RefundRVCD_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6874_1( I_("RefundRVCD") );
      return( dstrFldLabel_6874_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RefundRVCD(
       BFDataFieldProperties::Type::text // field is a text field
      ,RefundRVCD // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RefundRVCD_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RefundRVCD_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NFConfBnkDetl (6875)
   //------------------------------------------------------------------
   const DString& s_FldProp_NFConfBnkDetl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6875_1( I_("") );
      return( dstrDefValue_6875_1 );
   }
   const DString& s_FldProp_NFConfBnkDetl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6875_1( I_("NFConfBnkDetl") );
      return( dstrFldLabel_6875_1 );
   }
   PBF_SSC subset_super_chooser_2_6875( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NFConfBnkDetl(
       BFDataFieldProperties::Type::text // field is a text field
      ,NFConfBnkDetl // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NFConfBnkDetl_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NFConfBnkDetl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6875 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopAdjDate (6876)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopAdjDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6876_1( I_("") );
      return( dstrDefValue_6876_1 );
   }
   const DString& s_FldProp_StopAdjDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6876_1( I_("StopAdjDate") );
      return( dstrFldLabel_6876_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopAdjDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,StopAdjDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopAdjDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopAdjDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RRIFSrcOfAcct (6877)
   //------------------------------------------------------------------
   const DString& s_FldProp_RRIFSrcOfAcct_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6877_1( I_("") );
      return( dstrDefValue_6877_1 );
   }
   const DString& s_FldProp_RRIFSrcOfAcct_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6877_1( I_("RRIFSrcOfAcct") );
      return( dstrFldLabel_6877_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RRIFSrcOfAcct(
       BFDataFieldProperties::Type::text // field is a text field
      ,RRIFSrcOfAcct // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RRIFSrcOfAcct_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RRIFSrcOfAcct_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RRIFSrcOfFund (6878)
   //------------------------------------------------------------------
   const DString& s_FldProp_RRIFSrcOfFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6878_1( I_("") );
      return( dstrDefValue_6878_1 );
   }
   const DString& s_FldProp_RRIFSrcOfFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6878_1( I_("RRIFSrcOfFund") );
      return( dstrFldLabel_6878_1 );
   }
   PBF_SSC subset_super_chooser_2_6878( const ClientLocale& locale )
   {
      return chooser_ss_002_889; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RRIFSrcOfFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,RRIFSrcOfFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RRIFSrcOfFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RRIFSrcOfFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6878 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFunds_DP_IA (6879)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFunds_DP_IA_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6879_1( I_("") );
      return( dstrDefValue_6879_1 );
   }
   const DString& s_FldProp_SrcOfFunds_DP_IA_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6879_1( I_("SrcOfFunds_DP_IA") );
      return( dstrFldLabel_6879_1 );
   }
   PBF_SSC subset_super_chooser_2_6879( const ClientLocale& locale )
   {
      return chooser_ss_002_886; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFunds_DP_IA(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFunds_DP_IA // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFunds_DP_IA_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFunds_DP_IA_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6879 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFunds_PW_IA (6880)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFunds_PW_IA_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6880_1( I_("") );
      return( dstrDefValue_6880_1 );
   }
   const DString& s_FldProp_SrcOfFunds_PW_IA_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6880_1( I_("SrcOfFunds_PW_IA") );
      return( dstrFldLabel_6880_1 );
   }
   PBF_SSC subset_super_chooser_2_6880( const ClientLocale& locale )
   {
      return chooser_ss_002_887; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFunds_PW_IA(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFunds_PW_IA // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFunds_PW_IA_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFunds_PW_IA_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6880 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFunds_SWP_IA (6881)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFunds_SWP_IA_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6881_1( I_("") );
      return( dstrDefValue_6881_1 );
   }
   const DString& s_FldProp_SrcOfFunds_SWP_IA_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6881_1( I_("SrcOfFunds_SWP_IA") );
      return( dstrFldLabel_6881_1 );
   }
   PBF_SSC subset_super_chooser_2_6881( const ClientLocale& locale )
   {
      return chooser_ss_002_888; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFunds_SWP_IA(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFunds_SWP_IA // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFunds_SWP_IA_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFunds_SWP_IA_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6881 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFunds_GIC_IA (6882)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFunds_GIC_IA_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6882_1( I_("") );
      return( dstrDefValue_6882_1 );
   }
   const DString& s_FldProp_SrcOfFunds_GIC_IA_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6882_1( I_("SrcOfFunds_GIC_IA") );
      return( dstrFldLabel_6882_1 );
   }
   PBF_SSC subset_super_chooser_2_6882( const ClientLocale& locale )
   {
      return chooser_ss_002_890; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFunds_GIC_IA(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFunds_GIC_IA // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFunds_GIC_IA_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFunds_GIC_IA_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6882 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RefundOptionAvailable (6884)
   //------------------------------------------------------------------
   const DString& s_FldProp_RefundOptionAvailable_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6884_1( I_("") );
      return( dstrDefValue_6884_1 );
   }
   const DString& s_FldProp_RefundOptionAvailable_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6884_1( I_("RefundOptionAvailable") );
      return( dstrFldLabel_6884_1 );
   }
   PBF_SSC subset_super_chooser_2_6884( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RefundOptionAvailable(
       BFDataFieldProperties::Type::text // field is a text field
      ,RefundOptionAvailable // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RefundOptionAvailable_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RefundOptionAvailable_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6884 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvestStatus1 (6885)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvestStatus1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6885_1( I_("") );
      return( dstrDefValue_6885_1 );
   }
   const DString& s_FldProp_InvestStatus1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6885_1( I_("") );
      return( dstrFldLabel_6885_1 );
   }
   PBF_SSC subset_super_chooser_2_6885( const ClientLocale& locale )
   {
      return chooser_ss_002_893; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvestStatus1(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvestStatus1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvestStatus1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvestStatus1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6885 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DfCMDBaseOn (6886)
   //------------------------------------------------------------------
   const DString& s_FldProp_DfCMDBaseOn_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6886_1( I_("") );
      return( dstrDefValue_6886_1 );
   }
   const DString& s_FldProp_DfCMDBaseOn_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6886_1( I_("DfCMDBaseOn") );
      return( dstrFldLabel_6886_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DfCMDBaseOn(
       BFDataFieldProperties::Type::text // field is a text field
      ,DfCMDBaseOn // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DfCMDBaseOn_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DfCMDBaseOn_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxApl (6888)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxApl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6888_1( I_("") );
      return( dstrDefValue_6888_1 );
   }
   const DString& s_FldProp_TaxApl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6888_1( I_("TaxApl") );
      return( dstrFldLabel_6888_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxApl(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxApl // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxApl_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxApl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TopUpClass (6889)
   //------------------------------------------------------------------
   const DString& s_FldProp_TopUpClass_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6889_1( I_("") );
      return( dstrDefValue_6889_1 );
   }
   const DString& s_FldProp_TopUpClass_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6889_1( I_("TopUpClass") );
      return( dstrFldLabel_6889_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TopUpClass(
       BFDataFieldProperties::Type::text // field is a text field
      ,TopUpClass // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TopUpClass_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TopUpClass_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TopUpFund (6890)
   //------------------------------------------------------------------
   const DString& s_FldProp_TopUpFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6890_1( I_("") );
      return( dstrDefValue_6890_1 );
   }
   const DString& s_FldProp_TopUpFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6890_1( I_("TopUpFund") );
      return( dstrFldLabel_6890_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TopUpFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,TopUpFund // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TopUpFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TopUpFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ValidRATaxType (6891)
   //------------------------------------------------------------------
   const DString& s_FldProp_ValidRATaxType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6891_1( I_("") );
      return( dstrDefValue_6891_1 );
   }
   const DString& s_FldProp_ValidRATaxType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6891_1( I_("ValidRATaxType") );
      return( dstrFldLabel_6891_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ValidRATaxType(
       BFDataFieldProperties::Type::text // field is a text field
      ,ValidRATaxType // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ValidRATaxType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ValidRATaxType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DilutionAvail (6892)
   //------------------------------------------------------------------
   const DString& s_FldProp_DilutionAvail_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6892_1( I_("") );
      return( dstrDefValue_6892_1 );
   }
   const DString& s_FldProp_DilutionAvail_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6892_1( I_("DilutionAvail") );
      return( dstrFldLabel_6892_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DilutionAvail(
       BFDataFieldProperties::Type::text // field is a text field
      ,DilutionAvail // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DilutionAvail_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DilutionAvail_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFunds_IA_Required (6893)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFunds_IA_Required_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6893_1( I_("") );
      return( dstrDefValue_6893_1 );
   }
   const DString& s_FldProp_SrcOfFunds_IA_Required_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6893_1( I_("SrcOfFunds_IA_Required") );
      return( dstrFldLabel_6893_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFunds_IA_Required(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFunds_IA_Required // fieldId
      ,300 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFunds_IA_Required_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFunds_IA_Required_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFunds_IA (6894)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFunds_IA_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6894_1( I_("") );
      return( dstrDefValue_6894_1 );
   }
   const DString& s_FldProp_SrcOfFunds_IA_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6894_1( I_("SrcOfFunds_IA") );
      return( dstrFldLabel_6894_1 );
   }
   PBF_SSC subset_super_chooser_2_6894( const ClientLocale& locale )
   {
      return chooser_ss_002_891; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFunds_IA(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFunds_IA // fieldId
      ,300 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFunds_IA_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFunds_IA_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6894 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFunds_IA_ED (6895)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFunds_IA_ED_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6895_1( I_("") );
      return( dstrDefValue_6895_1 );
   }
   const DString& s_FldProp_SrcOfFunds_IA_ED_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6895_1( I_("SrcOfFunds_IA_ED") );
      return( dstrFldLabel_6895_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFunds_IA_ED(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFunds_IA_ED // fieldId
      ,300 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFunds_IA_ED_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFunds_IA_ED_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFunds_IA_PW (6896)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFunds_IA_PW_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6896_1( I_("") );
      return( dstrDefValue_6896_1 );
   }
   const DString& s_FldProp_SrcOfFunds_IA_PW_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6896_1( I_("SrcOfFunds_IA_PW") );
      return( dstrFldLabel_6896_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFunds_IA_PW(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFunds_IA_PW // fieldId
      ,300 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFunds_IA_PW_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFunds_IA_PW_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFunds_IA_GIC (6897)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFunds_IA_GIC_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6897_1( I_("") );
      return( dstrDefValue_6897_1 );
   }
   const DString& s_FldProp_SrcOfFunds_IA_GIC_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6897_1( I_("SrcOfFunds_IA_GIC") );
      return( dstrFldLabel_6897_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFunds_IA_GIC(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFunds_IA_GIC // fieldId
      ,300 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFunds_IA_GIC_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFunds_IA_GIC_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFunds_IA_SWP (6898)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFunds_IA_SWP_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6898_1( I_("") );
      return( dstrDefValue_6898_1 );
   }
   const DString& s_FldProp_SrcOfFunds_IA_SWP_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6898_1( I_("SrcOfFunds_IA_SWP") );
      return( dstrFldLabel_6898_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFunds_IA_SWP(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFunds_IA_SWP // fieldId
      ,300 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFunds_IA_SWP_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFunds_IA_SWP_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFunds_IA_RIF (6899)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFunds_IA_RIF_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6899_1( I_("") );
      return( dstrDefValue_6899_1 );
   }
   const DString& s_FldProp_SrcOfFunds_IA_RIF_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6899_1( I_("SrcOfFunds_IA_RIF") );
      return( dstrFldLabel_6899_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFunds_IA_RIF(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFunds_IA_RIF // fieldId
      ,300 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFunds_IA_RIF_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFunds_IA_RIF_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SWPCalculatedAmount (6904)
   //------------------------------------------------------------------
   const DString& s_FldProp_SWPCalculatedAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6904_1( I_("") );
      return( dstrDefValue_6904_1 );
   }
   double s_FldProp_SWPCalculatedAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_SWPCalculatedAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6904_1( I_("") );
      return( dstrFldLabel_6904_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SWPCalculatedAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,SWPCalculatedAmount // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_SWPCalculatedAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_SWPCalculatedAmount_d_DVF // default value
      ,s_FldProp_SWPCalculatedAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GWLWAAvailOptions (6905)
   //------------------------------------------------------------------
   const DString& s_FldProp_GWLWAAvailOptions_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6905_1( I_("") );
      return( dstrDefValue_6905_1 );
   }
   const DString& s_FldProp_GWLWAAvailOptions_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6905_1( I_("") );
      return( dstrFldLabel_6905_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GWLWAAvailOptions(
       BFDataFieldProperties::Type::text // field is a text field
      ,GWLWAAvailOptions // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GWLWAAvailOptions_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GWLWAAvailOptions_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SWPAmountType (6908)
   //------------------------------------------------------------------
   const DString& s_FldProp_SWPAmountType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6908_1( I_("") );
      return( dstrDefValue_6908_1 );
   }
   const DString& s_FldProp_SWPAmountType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6908_1( I_("") );
      return( dstrFldLabel_6908_1 );
   }
   PBF_SSC subset_super_chooser_2_6908( const ClientLocale& locale )
   {
      return chooser_ss_002_894; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SWPAmountType(
       BFDataFieldProperties::Type::text // field is a text field
      ,SWPAmountType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SWPAmountType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SWPAmountType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6908 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NonFinConfirms (6909)
   //------------------------------------------------------------------
   const DString& s_FldProp_NonFinConfirms_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6909_1( I_("") );
      return( dstrDefValue_6909_1 );
   }
   const DString& s_FldProp_NonFinConfirms_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6909_1( I_("NonFinConfirms") );
      return( dstrFldLabel_6909_1 );
   }
   PBF_SSC subset_super_chooser_2_6909( const ClientLocale& locale )
   {
      return chooser_ss_002_895; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NonFinConfirms(
       BFDataFieldProperties::Type::text // field is a text field
      ,NonFinConfirms // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NonFinConfirms_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NonFinConfirms_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6909 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SWPGLOpt (6910)
   //------------------------------------------------------------------
   const DString& s_FldProp_SWPGLOpt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6910_1( I_("") );
      return( dstrDefValue_6910_1 );
   }
   const DString& s_FldProp_SWPGLOpt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6910_1( I_("") );
      return( dstrFldLabel_6910_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SWPGLOpt(
       BFDataFieldProperties::Type::text // field is a text field
      ,SWPGLOpt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SWPGLOpt_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SWPGLOpt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RRIFGLOpt (6911)
   //------------------------------------------------------------------
   const DString& s_FldProp_RRIFGLOpt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6911_1( I_("") );
      return( dstrDefValue_6911_1 );
   }
   const DString& s_FldProp_RRIFGLOpt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6911_1( I_("") );
      return( dstrFldLabel_6911_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RRIFGLOpt(
       BFDataFieldProperties::Type::text // field is a text field
      ,RRIFGLOpt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RRIFGLOpt_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RRIFGLOpt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_T5AnniversaryDate (6912)
   //------------------------------------------------------------------
   const DString& s_FldProp_T5AnniversaryDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6912_1( I_("") );
      return( dstrDefValue_6912_1 );
   }
   const DString& s_FldProp_T5AnniversaryDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6912_1( I_("") );
      return( dstrFldLabel_6912_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_T5AnniversaryDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,T5AnniversaryDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_T5AnniversaryDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_T5AnniversaryDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxAnniversary (6914)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxAnniversary_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6914_1( I_("N") );
      return( dstrDefValue_6914_1 );
   }
   const DString& s_FldProp_TaxAnniversary_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6914_1( I_("TaxAnniversary") );
      return( dstrFldLabel_6914_1 );
   }
   PBF_SSC subset_super_chooser_2_6914( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxAnniversary(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxAnniversary // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxAnniversary_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxAnniversary_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6914 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxableAmount (6916)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxableAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6916_1( I_("0.00") );
      return( dstrDefValue_6916_1 );
   }
   double s_FldProp_TaxableAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0.00 );
   }
   const DString& s_FldProp_TaxableAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6916_1( I_("TaxableAmount") );
      return( dstrFldLabel_6916_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxableAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TaxableAmount // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_TaxableAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TaxableAmount_d_DVF // default value
      ,s_FldProp_TaxableAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BrokerBranchRepXEdit (6917)
   //------------------------------------------------------------------
   const DString& s_FldProp_BrokerBranchRepXEdit_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6917_1( I_("") );
      return( dstrDefValue_6917_1 );
   }
   const DString& s_FldProp_BrokerBranchRepXEdit_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6917_1( I_("BrokerBranchRepXEdit") );
      return( dstrFldLabel_6917_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BrokerBranchRepXEdit(
       BFDataFieldProperties::Type::text // field is a text field
      ,BrokerBranchRepXEdit // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BrokerBranchRepXEdit_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BrokerBranchRepXEdit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UpdateSvcAgent (6918)
   //------------------------------------------------------------------
   const DString& s_FldProp_UpdateSvcAgent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6918_1( I_("") );
      return( dstrDefValue_6918_1 );
   }
   const DString& s_FldProp_UpdateSvcAgent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6918_1( I_("UpdateSvcAgent") );
      return( dstrFldLabel_6918_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UpdateSvcAgent(
       BFDataFieldProperties::Type::text // field is a text field
      ,UpdateSvcAgent // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_UpdateSvcAgent_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_UpdateSvcAgent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ServiceAgentUpdated (6919)
   //------------------------------------------------------------------
   const DString& s_FldProp_ServiceAgentUpdated_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6919_1( I_("") );
      return( dstrDefValue_6919_1 );
   }
   const DString& s_FldProp_ServiceAgentUpdated_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6919_1( I_("ServiceAgentUpdated") );
      return( dstrFldLabel_6919_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ServiceAgentUpdated(
       BFDataFieldProperties::Type::text // field is a text field
      ,ServiceAgentUpdated // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ServiceAgentUpdated_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ServiceAgentUpdated_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AutoUpdateSvcAgent (6920)
   //------------------------------------------------------------------
   const DString& s_FldProp_AutoUpdateSvcAgent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6920_1( I_("") );
      return( dstrDefValue_6920_1 );
   }
   const DString& s_FldProp_AutoUpdateSvcAgent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6920_1( I_("AutoUpdateSvcAgent") );
      return( dstrFldLabel_6920_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AutoUpdateSvcAgent(
       BFDataFieldProperties::Type::text // field is a text field
      ,AutoUpdateSvcAgent // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AutoUpdateSvcAgent_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AutoUpdateSvcAgent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopReasonPAC (6921)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopReasonPAC_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6921_1( I_("") );
      return( dstrDefValue_6921_1 );
   }
   const DString& s_FldProp_StopReasonPAC_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6921_1( I_("StopReasonPAC") );
      return( dstrFldLabel_6921_1 );
   }
   PBF_SSC subset_super_chooser_2_6921( const ClientLocale& locale )
   {
      return chooser_ss_002_896; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopReasonPAC(
       BFDataFieldProperties::Type::text // field is a text field
      ,StopReasonPAC // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopReasonPAC_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopReasonPAC_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6921 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBListHeading5 (6922)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBListHeading5_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6922_1( I_("") );
      return( dstrDefValue_6922_1 );
   }
   const DString& s_FldProp_ACBListHeading5_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6922_1( I_("ACBListHeading5") );
      return( dstrFldLabel_6922_1 );
   }
   PBF_SSC subset_super_chooser_2_6922( const ClientLocale& locale )
   {
      return chooser_ss_002_897; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBListHeading5(
       BFDataFieldProperties::Type::text // field is a text field
      ,ACBListHeading5 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ACBListHeading5_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ACBListHeading5_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6922 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBListHeading6 (6923)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBListHeading6_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6923_1( I_("") );
      return( dstrDefValue_6923_1 );
   }
   const DString& s_FldProp_ACBListHeading6_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6923_1( I_("ACBListHeading6") );
      return( dstrFldLabel_6923_1 );
   }
   PBF_SSC subset_super_chooser_2_6923( const ClientLocale& locale )
   {
      return chooser_ss_002_898; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBListHeading6(
       BFDataFieldProperties::Type::text // field is a text field
      ,ACBListHeading6 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ACBListHeading6_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ACBListHeading6_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6923 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBListHeading7 (6924)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBListHeading7_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6924_1( I_("") );
      return( dstrDefValue_6924_1 );
   }
   const DString& s_FldProp_ACBListHeading7_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6924_1( I_("ACBListHeading7") );
      return( dstrFldLabel_6924_1 );
   }
   PBF_SSC subset_super_chooser_2_6924( const ClientLocale& locale )
   {
      return chooser_ss_002_899; // defined in ifast_substitutions_chooser_29.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBListHeading7(
       BFDataFieldProperties::Type::text // field is a text field
      ,ACBListHeading7 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ACBListHeading7_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ACBListHeading7_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6924 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBListHeading8 (6925)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBListHeading8_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6925_1( I_("") );
      return( dstrDefValue_6925_1 );
   }
   const DString& s_FldProp_ACBListHeading8_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6925_1( I_("ACBListHeading8") );
      return( dstrFldLabel_6925_1 );
   }
   PBF_SSC subset_super_chooser_2_6925( const ClientLocale& locale )
   {
      return chooser_ss_002_900; // defined in ifast_substitutions_chooser_30.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBListHeading8(
       BFDataFieldProperties::Type::text // field is a text field
      ,ACBListHeading8 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ACBListHeading8_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ACBListHeading8_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6925 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CalcAmountXEdit (6926)
   //------------------------------------------------------------------
   const DString& s_FldProp_CalcAmountXEdit_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6926_1( I_("") );
      return( dstrDefValue_6926_1 );
   }
   const DString& s_FldProp_CalcAmountXEdit_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6926_1( I_("") );
      return( dstrFldLabel_6926_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CalcAmountXEdit(
       BFDataFieldProperties::Type::text // field is a text field
      ,CalcAmountXEdit // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CalcAmountXEdit_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CalcAmountXEdit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LGFundClassXEdit (6927)
   //------------------------------------------------------------------
   const DString& s_FldProp_LGFundClassXEdit_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6927_1( I_("") );
      return( dstrDefValue_6927_1 );
   }
   const DString& s_FldProp_LGFundClassXEdit_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6927_1( I_("") );
      return( dstrFldLabel_6927_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LGFundClassXEdit(
       BFDataFieldProperties::Type::text // field is a text field
      ,LGFundClassXEdit // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LGFundClassXEdit_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LGFundClassXEdit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BrkOverideAmt (6931)
   //------------------------------------------------------------------
   const DString& s_FldProp_BrkOverideAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6931_1( I_("") );
      return( dstrDefValue_6931_1 );
   }
   double s_FldProp_BrkOverideAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_BrkOverideAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6931_1( I_("BrkOverideAmt") );
      return( dstrFldLabel_6931_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BrkOverideAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BrkOverideAmt // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_16 // mask chooser function
      ,s_FldProp_BrkOverideAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BrkOverideAmt_d_DVF // default value
      ,s_FldProp_BrkOverideAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NextDrawDate (6932)
   //------------------------------------------------------------------
   const DString& s_FldProp_NextDrawDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6932_1( I_("") );
      return( dstrDefValue_6932_1 );
   }
   const DString& s_FldProp_NextDrawDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6932_1( I_("NextDrawDate") );
      return( dstrFldLabel_6932_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NextDrawDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,NextDrawDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NextDrawDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NextDrawDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PACDrawDeff (6935)
   //------------------------------------------------------------------
   const DString& s_FldProp_PACDrawDeff_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6935_1( I_("") );
      return( dstrDefValue_6935_1 );
   }
   const DString& s_FldProp_PACDrawDeff_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6935_1( I_("PACDrawDeff") );
      return( dstrFldLabel_6935_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PACDrawDeff(
       BFDataFieldProperties::Type::date // field is a date field
      ,PACDrawDeff // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PACDrawDeff_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PACDrawDeff_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetOfFeesFlag (6938)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetOfFeesFlag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6938_1( I_("") );
      return( dstrDefValue_6938_1 );
   }
   const DString& s_FldProp_NetOfFeesFlag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6938_1( I_("NetOfFeesFlag") );
      return( dstrFldLabel_6938_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetOfFeesFlag(
       BFDataFieldProperties::Type::text // field is a text field
      ,NetOfFeesFlag // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NetOfFeesFlag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NetOfFeesFlag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ScaleMaxRateChk (6939)
   //------------------------------------------------------------------
   const DString& s_FldProp_ScaleMaxRateChk_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6939_1( I_("") );
      return( dstrDefValue_6939_1 );
   }
   double s_FldProp_ScaleMaxRateChk_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ScaleMaxRateChk_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6939_1( I_("ScaleMaxRateChk") );
      return( dstrFldLabel_6939_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ScaleMaxRateChk(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ScaleMaxRateChk // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ScaleMaxRateChk_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ScaleMaxRateChk_d_DVF // default value
      ,s_FldProp_ScaleMaxRateChk_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ScaleMinRateChk (6940)
   //------------------------------------------------------------------
   const DString& s_FldProp_ScaleMinRateChk_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6940_1( I_("") );
      return( dstrDefValue_6940_1 );
   }
   double s_FldProp_ScaleMinRateChk_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ScaleMinRateChk_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6940_1( I_("ScaleMinRateChk") );
      return( dstrFldLabel_6940_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ScaleMinRateChk(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ScaleMinRateChk // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ScaleMinRateChk_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ScaleMinRateChk_d_DVF // default value
      ,s_FldProp_ScaleMinRateChk_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CombinedLoadType (6941)
   //------------------------------------------------------------------
   const DString& s_FldProp_CombinedLoadType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6941_1( I_("") );
      return( dstrDefValue_6941_1 );
   }
   const DString& s_FldProp_CombinedLoadType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6941_1( I_("CombinedLoadType") );
      return( dstrFldLabel_6941_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CombinedLoadType(
       BFDataFieldProperties::Type::text // field is a text field
      ,CombinedLoadType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CombinedLoadType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CombinedLoadType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxableTrustDate (6942)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxableTrustDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6942_1( I_("") );
      return( dstrDefValue_6942_1 );
   }
   const DString& s_FldProp_TaxableTrustDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6942_1( I_("TaxableTrustDate") );
      return( dstrFldLabel_6942_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxableTrustDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,TaxableTrustDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxableTrustDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxableTrustDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RightToCancelDefault (6943)
   //------------------------------------------------------------------
   const DString& s_FldProp_RightToCancelDefault_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6943_1( I_("") );
      return( dstrDefValue_6943_1 );
   }
   const DString& s_FldProp_RightToCancelDefault_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6943_1( I_("") );
      return( dstrFldLabel_6943_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RightToCancelDefault(
       BFDataFieldProperties::Type::text // field is a text field
      ,RightToCancelDefault // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RightToCancelDefault_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RightToCancelDefault_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RightToCancel (6944)
   //------------------------------------------------------------------
   const DString& s_FldProp_RightToCancel_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6944_1( I_("00") );
      return( dstrDefValue_6944_1 );
   }
   const DString& s_FldProp_RightToCancel_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6944_1( I_("") );
      return( dstrFldLabel_6944_1 );
   }
   PBF_SSC subset_super_chooser_2_6944( const ClientLocale& locale )
   {
      return chooser_ss_002_903; // defined in ifast_substitutions_chooser_30.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RightToCancel(
       BFDataFieldProperties::Type::text // field is a text field
      ,RightToCancel // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RightToCancel_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RightToCancel_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6944 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IdExpireDate (6945)
   //------------------------------------------------------------------
   const DString& s_FldProp_IdExpireDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6945_1( I_("") );
      return( dstrDefValue_6945_1 );
   }
   const DString& s_FldProp_IdExpireDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6945_1( I_("IdExpireDate") );
      return( dstrFldLabel_6945_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IdExpireDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,IdExpireDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IdExpireDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IdExpireDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FATCAApplicable (6946)
   //------------------------------------------------------------------
   const DString& s_FldProp_FATCAApplicable_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6946_1( I_("") );
      return( dstrDefValue_6946_1 );
   }
   const DString& s_FldProp_FATCAApplicable_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6946_1( I_("FATCAApplicable") );
      return( dstrFldLabel_6946_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FATCAApplicable(
       BFDataFieldProperties::Type::text // field is a text field
      ,FATCAApplicable // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FATCAApplicable_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FATCAApplicable_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FATCAFFI (6947)
   //------------------------------------------------------------------
   const DString& s_FldProp_FATCAFFI_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6947_1( I_("") );
      return( dstrDefValue_6947_1 );
   }
   const DString& s_FldProp_FATCAFFI_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6947_1( I_("FATCAFFI") );
      return( dstrFldLabel_6947_1 );
   }
   PBF_SSC subset_super_chooser_2_6947( const ClientLocale& locale )
   {
      return chooser_ss_002_904; // defined in ifast_substitutions_chooser_30.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FATCAFFI(
       BFDataFieldProperties::Type::text // field is a text field
      ,FATCAFFI // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FATCAFFI_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FATCAFFI_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6947 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FdBrokerDefaultlvl (6948)
   //------------------------------------------------------------------
   const DString& s_FldProp_FdBrokerDefaultlvl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6948_1( I_("") );
      return( dstrDefValue_6948_1 );
   }
   const DString& s_FldProp_FdBrokerDefaultlvl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6948_1( I_("FdBrokerDefaultlvl") );
      return( dstrFldLabel_6948_1 );
   }
   PBF_SSC subset_super_chooser_2_6948( const ClientLocale& locale )
   {
      return chooser_ss_002_905; // defined in ifast_substitutions_chooser_30.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FdBrokerDefaultlvl(
       BFDataFieldProperties::Type::text // field is a text field
      ,FdBrokerDefaultlvl // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FdBrokerDefaultlvl_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FdBrokerDefaultlvl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6948 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_EstateAllocation (6949)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_EstateAllocation_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6949_1( I_("") );
      return( dstrDefValue_6949_1 );
   }
   const DString& s_FldProp_LV_EstateAllocation_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6949_1( I_("LV_EstateAllocation") );
      return( dstrFldLabel_6949_1 );
   }
   PBF_SSC subset_super_chooser_2_6949( const ClientLocale& locale )
   {
      return chooser_ss_002_906; // defined in ifast_substitutions_chooser_30.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_EstateAllocation(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_EstateAllocation // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_EstateAllocation_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_EstateAllocation_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6949 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundClassAmtFullPW (6953)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundClassAmtFullPW_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6953_1( I_("") );
      return( dstrDefValue_6953_1 );
   }
   double s_FldProp_FundClassAmtFullPW_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FundClassAmtFullPW_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6953_1( I_("FundClassAmtFullPW") );
      return( dstrFldLabel_6953_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundClassAmtFullPW(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FundClassAmtFullPW // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_FundClassAmtFullPW_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FundClassAmtFullPW_d_DVF // default value
      ,s_FldProp_FundClassAmtFullPW_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenefEntityID (6955)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenefEntityID_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6955_1( I_("") );
      return( dstrDefValue_6955_1 );
   }
   DIINT64 s_FldProp_BenefEntityID_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_BenefEntityID_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6955_1( I_("BenefEntityID") );
      return( dstrFldLabel_6955_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenefEntityID(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,BenefEntityID // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BenefEntityID_s_DVF // default value
      ,s_FldProp_BenefEntityID_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_BenefEntityID_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenefAddrCode (6956)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenefAddrCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6956_1( I_("") );
      return( dstrDefValue_6956_1 );
   }
   const DString& s_FldProp_BenefAddrCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6956_1( I_("BenefAddrCode") );
      return( dstrFldLabel_6956_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenefAddrCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,BenefAddrCode // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BenefAddrCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BenefAddrCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenefAddrLevel (6957)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenefAddrLevel_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6957_1( I_("") );
      return( dstrDefValue_6957_1 );
   }
   const DString& s_FldProp_BenefAddrLevel_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6957_1( I_("BenefAddrLevel") );
      return( dstrFldLabel_6957_1 );
   }
   PBF_SSC subset_super_chooser_2_6957( const ClientLocale& locale )
   {
      return chooser_ss_002_907; // defined in ifast_substitutions_chooser_30.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenefAddrLevel(
       BFDataFieldProperties::Type::text // field is a text field
      ,BenefAddrLevel // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BenefAddrLevel_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BenefAddrLevel_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6957 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenefPrcnt (6958)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenefPrcnt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6958_1( I_("") );
      return( dstrDefValue_6958_1 );
   }
   double s_FldProp_BenefPrcnt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_BenefPrcnt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6958_1( I_("BenefPrcnt") );
      return( dstrFldLabel_6958_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenefPrcnt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BenefPrcnt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_BenefPrcnt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BenefPrcnt_d_DVF // default value
      ,s_FldProp_BenefPrcnt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenefAmount (6959)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenefAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6959_1( I_("") );
      return( dstrDefValue_6959_1 );
   }
   double s_FldProp_BenefAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_BenefAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6959_1( I_("BenefAmount") );
      return( dstrFldLabel_6959_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenefAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BenefAmount // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_BenefAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BenefAmount_d_DVF // default value
      ,s_FldProp_BenefAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenefUnits (6960)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenefUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6960_1( I_("") );
      return( dstrDefValue_6960_1 );
   }
   double s_FldProp_BenefUnits_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_BenefUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6960_1( I_("BenefUnits") );
      return( dstrFldLabel_6960_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenefUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BenefUnits // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_BenefUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BenefUnits_d_DVF // default value
      ,s_FldProp_BenefUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenefName (6961)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenefName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6961_1( I_("") );
      return( dstrDefValue_6961_1 );
   }
   const DString& s_FldProp_BenefName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6961_1( I_("BenefName") );
      return( dstrFldLabel_6961_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenefName(
       BFDataFieldProperties::Type::text // field is a text field
      ,BenefName // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BenefName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BenefName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RDREnv (6962)
   //------------------------------------------------------------------
   const DString& s_FldProp_RDREnv_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6962_1( I_("") );
      return( dstrDefValue_6962_1 );
   }
   const DString& s_FldProp_RDREnv_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6962_1( I_("RDREnv") );
      return( dstrFldLabel_6962_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RDREnv(
       BFDataFieldProperties::Type::text // field is a text field
      ,RDREnv // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RDREnv_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RDREnv_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RDRAdvice (6963)
   //------------------------------------------------------------------
   const DString& s_FldProp_RDRAdvice_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6963_1( I_("") );
      return( dstrDefValue_6963_1 );
   }
   const DString& s_FldProp_RDRAdvice_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6963_1( I_("RDRAdvice") );
      return( dstrFldLabel_6963_1 );
   }
   PBF_SSC subset_super_chooser_2_6963( const ClientLocale& locale )
   {
      return chooser_ss_002_908; // defined in ifast_substitutions_chooser_30.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RDRAdvice(
       BFDataFieldProperties::Type::text // field is a text field
      ,RDRAdvice // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RDRAdvice_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RDRAdvice_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6963 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RDRApplic (6964)
   //------------------------------------------------------------------
   const DString& s_FldProp_RDRApplic_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6964_1( I_("") );
      return( dstrDefValue_6964_1 );
   }
   const DString& s_FldProp_RDRApplic_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6964_1( I_("RDRApplic") );
      return( dstrFldLabel_6964_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RDRApplic(
       BFDataFieldProperties::Type::text // field is a text field
      ,RDRApplic // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RDRApplic_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RDRApplic_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RDRDefault (6965)
   //------------------------------------------------------------------
   const DString& s_FldProp_RDRDefault_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6965_1( I_("") );
      return( dstrDefValue_6965_1 );
   }
   const DString& s_FldProp_RDRDefault_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6965_1( I_("RDRDefault") );
      return( dstrFldLabel_6965_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RDRDefault(
       BFDataFieldProperties::Type::text // field is a text field
      ,RDRDefault // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RDRDefault_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RDRDefault_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExpireDate (6968)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExpireDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6968_1( I_("") );
      return( dstrDefValue_6968_1 );
   }
   const DString& s_FldProp_ExpireDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6968_1( I_("") );
      return( dstrFldLabel_6968_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExpireDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,ExpireDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ExpireDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ExpireDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RequestDate (6969)
   //------------------------------------------------------------------
   const DString& s_FldProp_RequestDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6969_1( I_("") );
      return( dstrDefValue_6969_1 );
   }
   const DString& s_FldProp_RequestDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6969_1( I_("") );
      return( dstrFldLabel_6969_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RequestDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,RequestDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RequestDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RequestDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctDocListUUID (6970)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctDocListUUID_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6970_1( I_("") );
      return( dstrDefValue_6970_1 );
   }
   const DString& s_FldProp_AcctDocListUUID_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6970_1( I_("") );
      return( dstrFldLabel_6970_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctDocListUUID(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctDocListUUID // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctDocListUUID_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctDocListUUID_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenefRunMode (6974)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenefRunMode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6974_1( I_("") );
      return( dstrDefValue_6974_1 );
   }
   const DString& s_FldProp_BenefRunMode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6974_1( I_("BenefRunMode") );
      return( dstrFldLabel_6974_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenefRunMode(
       BFDataFieldProperties::Type::text // field is a text field
      ,BenefRunMode // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BenefRunMode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BenefRunMode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OwnershipPrcnt (6975)
   //------------------------------------------------------------------
   const DString& s_FldProp_OwnershipPrcnt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6975_1( I_("") );
      return( dstrDefValue_6975_1 );
   }
   double s_FldProp_OwnershipPrcnt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_OwnershipPrcnt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6975_1( I_("OwnershipPrcnt") );
      return( dstrFldLabel_6975_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OwnershipPrcnt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,OwnershipPrcnt // fieldId
      ,20 // length
      ,0 // minimum length
      ,4 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OwnershipPrcnt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_OwnershipPrcnt_d_DVF // default value
      ,s_FldProp_OwnershipPrcnt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxablePrcnt (6976)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxablePrcnt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6976_1( I_("") );
      return( dstrDefValue_6976_1 );
   }
   double s_FldProp_TaxablePrcnt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_TaxablePrcnt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6976_1( I_("TaxablePrcnt") );
      return( dstrFldLabel_6976_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxablePrcnt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TaxablePrcnt // fieldId
      ,20 // length
      ,0 // minimum length
      ,4 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxablePrcnt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TaxablePrcnt_d_DVF // default value
      ,s_FldProp_TaxablePrcnt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuaranteeFeeAppl (6980)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuaranteeFeeAppl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6980_1( I_("") );
      return( dstrDefValue_6980_1 );
   }
   const DString& s_FldProp_GuaranteeFeeAppl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6980_1( I_("GuaranteeFeeAppl") );
      return( dstrFldLabel_6980_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuaranteeFeeAppl(
       BFDataFieldProperties::Type::text // field is a text field
      ,GuaranteeFeeAppl // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GuaranteeFeeAppl_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GuaranteeFeeAppl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SDRTExemptCode (6981)
   //------------------------------------------------------------------
   const DString& s_FldProp_SDRTExemptCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6981_1( I_("") );
      return( dstrDefValue_6981_1 );
   }
   const DString& s_FldProp_SDRTExemptCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6981_1( I_("SDRT Exempt Code") );
      return( dstrFldLabel_6981_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SDRTExemptCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,SDRTExemptCode // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SDRTExemptCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SDRTExemptCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SDRTReportFlag (6982)
   //------------------------------------------------------------------
   const DString& s_FldProp_SDRTReportFlag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6982_1( I_("") );
      return( dstrDefValue_6982_1 );
   }
   const DString& s_FldProp_SDRTReportFlag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6982_1( I_("SDRT Report Flag") );
      return( dstrFldLabel_6982_1 );
   }
   PBF_SSC subset_super_chooser_2_6982( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SDRTReportFlag(
       BFDataFieldProperties::Type::text // field is a text field
      ,SDRTReportFlag // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SDRTReportFlag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SDRTReportFlag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6982 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenefRecType (6984)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenefRecType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6984_1( I_("") );
      return( dstrDefValue_6984_1 );
   }
   const DString& s_FldProp_BenefRecType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6984_1( I_("BenefRecType") );
      return( dstrFldLabel_6984_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenefRecType(
       BFDataFieldProperties::Type::text // field is a text field
      ,BenefRecType // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BenefRecType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BenefRecType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvHisCalculatedMVA (6985)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvHisCalculatedMVA_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6985_1( I_("") );
      return( dstrDefValue_6985_1 );
   }
   double s_FldProp_InvHisCalculatedMVA_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_InvHisCalculatedMVA_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6985_1( I_("") );
      return( dstrFldLabel_6985_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvHisCalculatedMVA(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,InvHisCalculatedMVA // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_InvHisCalculatedMVA_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_InvHisCalculatedMVA_d_DVF // default value
      ,s_FldProp_InvHisCalculatedMVA_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvHisMVAReason (6986)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvHisMVAReason_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6986_1( I_("") );
      return( dstrDefValue_6986_1 );
   }
   const DString& s_FldProp_InvHisMVAReason_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6986_1( I_("") );
      return( dstrFldLabel_6986_1 );
   }
   PBF_SSC subset_super_chooser_2_6986( const ClientLocale& locale )
   {
      return chooser_ss_002_909; // defined in ifast_substitutions_chooser_30.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvHisMVAReason(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvHisMVAReason // fieldId
      ,2 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvHisMVAReason_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvHisMVAReason_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6986 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxCreditAmt (6988)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxCreditAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6988_1( I_("") );
      return( dstrDefValue_6988_1 );
   }
   double s_FldProp_TaxCreditAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_TaxCreditAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6988_1( I_("TaxCreditAmt") );
      return( dstrFldLabel_6988_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxCreditAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TaxCreditAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,4 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_TaxCreditAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TaxCreditAmt_d_DVF // default value
      ,s_FldProp_TaxCreditAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DistributionType (6989)
   //------------------------------------------------------------------
   const DString& s_FldProp_DistributionType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6989_1( I_("") );
      return( dstrDefValue_6989_1 );
   }
   const DString& s_FldProp_DistributionType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6989_1( I_("DistributionType") );
      return( dstrFldLabel_6989_1 );
   }
   PBF_SSC subset_super_chooser_2_6989( const ClientLocale& locale )
   {
      return chooser_ss_002_910; // defined in ifast_substitutions_chooser_30.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DistributionType(
       BFDataFieldProperties::Type::text // field is a text field
      ,DistributionType // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DistributionType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DistributionType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6989 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EventComm (6992)
   //------------------------------------------------------------------
   const DString& s_FldProp_EventComm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6992_1( I_("") );
      return( dstrDefValue_6992_1 );
   }
   const DString& s_FldProp_EventComm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6992_1( I_("EventComm") );
      return( dstrFldLabel_6992_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EventComm(
       BFDataFieldProperties::Type::text // field is a text field
      ,EventComm // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EventComm_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EventComm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RequireEventCommission (6993)
   //------------------------------------------------------------------
   const DString& s_FldProp_RequireEventCommission_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6993_1( I_("") );
      return( dstrDefValue_6993_1 );
   }
   const DString& s_FldProp_RequireEventCommission_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6993_1( I_("RequireEventCommission") );
      return( dstrFldLabel_6993_1 );
   }
   PBF_SSC subset_super_chooser_2_6993( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RequireEventCommission(
       BFDataFieldProperties::Type::text // field is a text field
      ,RequireEventCommission // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RequireEventCommission_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RequireEventCommission_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_6993 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NationalID (6995)
   //------------------------------------------------------------------
   const DString& s_FldProp_NationalID_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6995_1( I_("") );
      return( dstrDefValue_6995_1 );
   }
   const DString& s_FldProp_NationalID_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6995_1( I_("") );
      return( dstrFldLabel_6995_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NationalID(
       BFDataFieldProperties::Type::text // field is a text field
      ,NationalID // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NationalID_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NationalID_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_COINationalID (6996)
   //------------------------------------------------------------------
   const DString& s_FldProp_COINationalID_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6996_1( I_("") );
      return( dstrDefValue_6996_1 );
   }
   const DString& s_FldProp_COINationalID_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6996_1( I_("") );
      return( dstrFldLabel_6996_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_COINationalID(
       BFDataFieldProperties::Type::text // field is a text field
      ,COINationalID // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_COINationalID_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_COINationalID_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Passport (6997)
   //------------------------------------------------------------------
   const DString& s_FldProp_Passport_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6997_1( I_("") );
      return( dstrDefValue_6997_1 );
   }
   const DString& s_FldProp_Passport_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6997_1( I_("") );
      return( dstrFldLabel_6997_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Passport(
       BFDataFieldProperties::Type::text // field is a text field
      ,Passport // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Passport_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Passport_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_COIPassport (6998)
   //------------------------------------------------------------------
   const DString& s_FldProp_COIPassport_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_6998_1( I_("") );
      return( dstrDefValue_6998_1 );
   }
   const DString& s_FldProp_COIPassport_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_6998_1( I_("") );
      return( dstrFldLabel_6998_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_COIPassport(
       BFDataFieldProperties::Type::text // field is a text field
      ,COIPassport // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_COIPassport_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_COIPassport_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );
}
