// BFDataImpl implementation file for DataSet DSTC0264.REQRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0264_reqrepeat_record.h"


// This function creates an instance of dsi_DSTC0264_REQRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0264_REQRepeat_Record() { return new dsi_DSTC0264_REQRepeat_Record; }

dsi_DSTC0264_REQRepeat_Record::dsi_DSTC0264_REQRepeat_Record()
: BFDataImpl( 40004224 )
, RunMode_( ifds::RunMode, &ifds::s_FldProp_RunMode )
, BankIdNum_( ifds::BankIdNum, &ifds::s_FldProp_BankIdNum )
, SwiftCode_( ifds::SwiftCode, &ifds::s_FldProp_SwiftCode )
, RefNumber_( ifds::RefNumber, &ifds::s_FldProp_RefNumber )
, Name_( ifds::Name, &ifds::s_FldProp_Name )
, ShortName_( ifds::ShortName, &ifds::s_FldProp_ShortName )
, BankContact_( ifds::BankContact, &ifds::s_FldProp_BankContact )
, ParentBank_( ifds::ParentBank, &ifds::s_FldProp_ParentBank )
, BankIdType_( ifds::BankIdType, &ifds::s_FldProp_BankIdType )
, Telex_( ifds::Telex, &ifds::s_FldProp_Telex )
, FaxCntryCode_( ifds::FaxCntryCode, &ifds::s_FldProp_FaxCntryCode )
, FaxAreaCode_( ifds::FaxAreaCode, &ifds::s_FldProp_FaxAreaCode )
, FaxNumber_( ifds::FaxNumber, &ifds::s_FldProp_FaxNumber )
, PhoneCntryCode_( ifds::PhoneCntryCode, &ifds::s_FldProp_PhoneCntryCode )
, PhoneAreaCode_( ifds::PhoneAreaCode, &ifds::s_FldProp_PhoneAreaCode )
, PhoneNumber_( ifds::PhoneNumber, &ifds::s_FldProp_PhoneNumber )
, BankAddr1_( ifds::BankAddr1, &ifds::s_FldProp_BankAddr1 )
, BankAddr2_( ifds::BankAddr2, &ifds::s_FldProp_BankAddr2 )
, BankAddr3_( ifds::BankAddr3, &ifds::s_FldProp_BankAddr3 )
, BankAddr4_( ifds::BankAddr4, &ifds::s_FldProp_BankAddr4 )
, BankAddr5_( ifds::BankAddr5, &ifds::s_FldProp_BankAddr5 )
, BankPostal_( ifds::BankPostal, &ifds::s_FldProp_BankPostal )
, BankCountry_( ifds::BankCountry, &ifds::s_FldProp_BankCountry )
, City_( ifds::City, &ifds::s_FldProp_City )
, Province_( ifds::Province, &ifds::s_FldProp_Province )
, InstRole_( ifds::InstRole, &ifds::s_FldProp_InstRole )
, VersionNum_( ifds::VersionNum, &ifds::s_FldProp_VersionNum )
, CodePage_( ifds::CodePage, &ifds::s_FldProp_CodePage )
, BankAcctNum_( ifds::BankAcctNum, &ifds::s_FldProp_BankAcctNum )
, Currency_( ifds::Currency, &ifds::s_FldProp_Currency )
, FinancialYearEnd_( ifds::FinancialYearEnd, &ifds::s_FldProp_FinancialYearEnd )
, FIStatusCode_( ifds::FIStatusCode, &ifds::s_FldProp_FIStatusCode )
, InstCategory_( ifds::InstCategory, &ifds::s_FldProp_InstCategory )
, BankRecId_( ifds::BankRecId, &ifds::s_FldProp_BankRecId )
, FITransitCode_( ifds::FITransitCode, &ifds::s_FldProp_FITransitCode )
{
   cFields_ = 35;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0264_REQRepeat_Record::~dsi_DSTC0264_REQRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0264_REQRepeat_Record::clone()
{
   dsi_DSTC0264_REQRepeat_Record* p = new dsi_DSTC0264_REQRepeat_Record;
   p->RunMode_ = RunMode_;
   p->BankIdNum_ = BankIdNum_;
   p->SwiftCode_ = SwiftCode_;
   p->RefNumber_ = RefNumber_;
   p->Name_ = Name_;
   p->ShortName_ = ShortName_;
   p->BankContact_ = BankContact_;
   p->ParentBank_ = ParentBank_;
   p->BankIdType_ = BankIdType_;
   p->Telex_ = Telex_;
   p->FaxCntryCode_ = FaxCntryCode_;
   p->FaxAreaCode_ = FaxAreaCode_;
   p->FaxNumber_ = FaxNumber_;
   p->PhoneCntryCode_ = PhoneCntryCode_;
   p->PhoneAreaCode_ = PhoneAreaCode_;
   p->PhoneNumber_ = PhoneNumber_;
   p->BankAddr1_ = BankAddr1_;
   p->BankAddr2_ = BankAddr2_;
   p->BankAddr3_ = BankAddr3_;
   p->BankAddr4_ = BankAddr4_;
   p->BankAddr5_ = BankAddr5_;
   p->BankPostal_ = BankPostal_;
   p->BankCountry_ = BankCountry_;
   p->City_ = City_;
   p->Province_ = Province_;
   p->InstRole_ = InstRole_;
   p->VersionNum_ = VersionNum_;
   p->CodePage_ = CodePage_;
   p->BankAcctNum_ = BankAcctNum_;
   p->Currency_ = Currency_;
   p->FinancialYearEnd_ = FinancialYearEnd_;
   p->FIStatusCode_ = FIStatusCode_;
   p->InstCategory_ = InstCategory_;
   p->BankRecId_ = BankRecId_;
   p->FITransitCode_ = FITransitCode_;
   return(p);
}

BFDataField* dsi_DSTC0264_REQRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40000990: return ( &RunMode_ ); break; // RunMode
      case 40002301: return ( &BankIdNum_ ); break; // BankIdNum
      case 40000245: return ( &SwiftCode_ ); break; // SwiftCode
      case 40000246: return ( &RefNumber_ ); break; // RefNumber
      case 40001090: return ( &Name_ ); break; // Name
      case 40004202: return ( &ShortName_ ); break; // ShortName
      case 40002146: return ( &BankContact_ ); break; // BankContact
      case 40004204: return ( &ParentBank_ ); break; // ParentBank
      case 40002119: return ( &BankIdType_ ); break; // BankIdType
      case 40000628: return ( &Telex_ ); break; // Telex
      case 40002986: return ( &FaxCntryCode_ ); break; // FaxCntryCode
      case 40002987: return ( &FaxAreaCode_ ); break; // FaxAreaCode
      case 40000298: return ( &FaxNumber_ ); break; // FaxNumber
      case 40004227: return ( &PhoneCntryCode_ ); break; // PhoneCntryCode
      case 40004226: return ( &PhoneAreaCode_ ); break; // PhoneAreaCode
      case 40000297: return ( &PhoneNumber_ ); break; // PhoneNumber
      case 40002167: return ( &BankAddr1_ ); break; // BankAddr1
      case 40002168: return ( &BankAddr2_ ); break; // BankAddr2
      case 40002169: return ( &BankAddr3_ ); break; // BankAddr3
      case 40002170: return ( &BankAddr4_ ); break; // BankAddr4
      case 40002171: return ( &BankAddr5_ ); break; // BankAddr5
      case 40002142: return ( &BankPostal_ ); break; // BankPostal
      case 40002144: return ( &BankCountry_ ); break; // BankCountry
      case 40000576: return ( &City_ ); break; // City
      case 40000811: return ( &Province_ ); break; // Province
      case 40004205: return ( &InstRole_ ); break; // InstRole
      case 40000228: return ( &VersionNum_ ); break; // VersionNum
      case 40004209: return ( &CodePage_ ); break; // CodePage
      case 40000248: return ( &BankAcctNum_ ); break; // BankAcctNum
      case 40000180: return ( &Currency_ ); break; // Currency
      case 40004211: return ( &FinancialYearEnd_ ); break; // FinancialYearEnd
      case 40004212: return ( &FIStatusCode_ ); break; // FIStatusCode
      case 40004213: return ( &InstCategory_ ); break; // InstCategory
      case 40004207: return ( &BankRecId_ ); break; // BankRecId
      case 40004254: return ( &FITransitCode_ ); break; // FITransitCode
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0264_REQRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0264_REQRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0264_REQRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 35 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &RunMode_; break;
            case 1: aFlds_[1] = &BankIdNum_; break;
            case 2: aFlds_[2] = &SwiftCode_; break;
            case 3: aFlds_[3] = &RefNumber_; break;
            case 4: aFlds_[4] = &Name_; break;
            case 5: aFlds_[5] = &ShortName_; break;
            case 6: aFlds_[6] = &BankContact_; break;
            case 7: aFlds_[7] = &ParentBank_; break;
            case 8: aFlds_[8] = &BankIdType_; break;
            case 9: aFlds_[9] = &Telex_; break;
            case 10: aFlds_[10] = &FaxCntryCode_; break;
            case 11: aFlds_[11] = &FaxAreaCode_; break;
            case 12: aFlds_[12] = &FaxNumber_; break;
            case 13: aFlds_[13] = &PhoneCntryCode_; break;
            case 14: aFlds_[14] = &PhoneAreaCode_; break;
            case 15: aFlds_[15] = &PhoneNumber_; break;
            case 16: aFlds_[16] = &BankAddr1_; break;
            case 17: aFlds_[17] = &BankAddr2_; break;
            case 18: aFlds_[18] = &BankAddr3_; break;
            case 19: aFlds_[19] = &BankAddr4_; break;
            case 20: aFlds_[20] = &BankAddr5_; break;
            case 21: aFlds_[21] = &BankPostal_; break;
            case 22: aFlds_[22] = &BankCountry_; break;
            case 23: aFlds_[23] = &City_; break;
            case 24: aFlds_[24] = &Province_; break;
            case 25: aFlds_[25] = &InstRole_; break;
            case 26: aFlds_[26] = &VersionNum_; break;
            case 27: aFlds_[27] = &CodePage_; break;
            case 28: aFlds_[28] = &BankAcctNum_; break;
            case 29: aFlds_[29] = &Currency_; break;
            case 30: aFlds_[30] = &FinancialYearEnd_; break;
            case 31: aFlds_[31] = &FIStatusCode_; break;
            case 32: aFlds_[32] = &InstCategory_; break;
            case 33: aFlds_[33] = &BankRecId_; break;
            case 34: aFlds_[34] = &FITransitCode_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0264_REQRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0264_REQRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0264_REQRepeat_Record::getLargestDefinedField( void ) const
{
   return( 200 );
}

unsigned long dsi_DSTC0264_REQRepeat_Record::getDefinedByteLength( void ) const
{
   return( 1677 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0264_REQRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0264_REQRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0264_REQRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40000990: return( true );
      case 40002301: return( true );
      case 40000245: return( true );
      case 40000246: return( true );
      case 40001090: return( true );
      case 40004202: return( true );
      case 40002146: return( true );
      case 40004204: return( true );
      case 40002119: return( true );
      case 40000628: return( true );
      case 40002986: return( true );
      case 40002987: return( true );
      case 40000298: return( true );
      case 40004227: return( true );
      case 40004226: return( true );
      case 40000297: return( true );
      case 40002167: return( true );
      case 40002168: return( true );
      case 40002169: return( true );
      case 40002170: return( true );
      case 40002171: return( true );
      case 40002142: return( true );
      case 40002144: return( true );
      case 40000576: return( true );
      case 40000811: return( true );
      case 40004205: return( true );
      case 40000228: return( true );
      case 40004209: return( true );
      case 40000248: return( true );
      case 40000180: return( true );
      case 40004211: return( true );
      case 40004212: return( true );
      case 40004213: return( true );
      case 40004207: return( true );
      case 40004254: return( true );
   }
   return false;
}

