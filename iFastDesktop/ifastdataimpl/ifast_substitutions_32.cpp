// BFSubstitutionSet objects
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Monday, July 30, 2018 13:24:15

#include "stdafx.h"
#include <commonport.h>
#include <clientlocale.hpp>

namespace ifds
{
   // Substitution set YesNoNumericSet.  Language: enUS
   static const I_CHAR* aKeys_002_960_001_000_000[] = {
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_960_001_000_000[] = {
      I_("Yes"),
      I_("No"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_960_001_000_000;
   const BFSubstitutionSet SubSet_002_960_001_000_000(
    &aKeys_002_960_001_000_000[0], &aValues_002_960_001_000_000[0] );
   // Substitution set YesNoNumericSet.  Language: frCA
   static const I_CHAR* aKeys_002_960_005_000_000[] = {
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_960_005_000_000[] = {
      I_("Oui"),
      I_("Non"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_960_005_000_000;
   const BFSubstitutionSet SubSet_002_960_005_000_000(
    &aKeys_002_960_005_000_000[0], &aValues_002_960_005_000_000[0] );
   // Substitution set SettleNetworkSet.  Language: enUS
   static const I_CHAR* aKeys_002_961_001_000_000[] = {
      I_("FSRV"),
      0x00
   };

   static const I_CHAR* aValues_002_961_001_000_000[] = {
      I_("FundSERV"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_961_001_000_000;
   const BFSubstitutionSet SubSet_002_961_001_000_000(
    &aKeys_002_961_001_000_000[0], &aValues_002_961_001_000_000[0] );
   // Substitution set SettleNetworkSet.  Language: frCA
   static const I_CHAR* aKeys_002_961_005_000_000[] = {
      I_("FSRV"),
      0x00
   };

   static const I_CHAR* aValues_002_961_005_000_000[] = {
      I_("FundSERV"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_961_005_000_000;
   const BFSubstitutionSet SubSet_002_961_005_000_000(
    &aKeys_002_961_005_000_000[0], &aValues_002_961_005_000_000[0] );
   // Substitution set ExSysDilPymtNSMSet.  Language: enUS
   static const I_CHAR* aKeys_002_962_001_000_000[] = {
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_962_001_000_000[] = {
      I_("Yes"),
      I_("No"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_962_001_000_000;
   const BFSubstitutionSet SubSet_002_962_001_000_000(
    &aKeys_002_962_001_000_000[0], &aValues_002_962_001_000_000[0] );
   // Substitution set ExSysDilPymtNSMSet.  Language: frCA
   static const I_CHAR* aKeys_002_962_005_000_000[] = {
      I_("02"),
      I_("03"),
      0x00
   };

   static const I_CHAR* aValues_002_962_005_000_000[] = {
      I_("Oui"),
      I_("Non"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_962_005_000_000;
   const BFSubstitutionSet SubSet_002_962_005_000_000(
    &aKeys_002_962_005_000_000[0], &aValues_002_962_005_000_000[0] );
   // Substitution set SAGESReportedStatusSet.  Language: enUS
   static const I_CHAR* aKeys_002_963_001_000_000[] = {
      I_("NR"),
      I_("RP"),
      I_("RC"),
      I_("CX"),
      0x00
   };

   static const I_CHAR* aValues_002_963_001_000_000[] = {
      I_("NR – Not Reported"),
      I_("RP – Reported"),
      I_("RC – Report Cancel "),
      I_("CX - Cancelled"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_963_001_000_000;
   const BFSubstitutionSet SubSet_002_963_001_000_000(
    &aKeys_002_963_001_000_000[0], &aValues_002_963_001_000_000[0] );
   // Substitution set SAGESReportedStatusSet.  Language: frCA
   static const I_CHAR* aKeys_002_963_005_000_000[] = {
      I_("NR"),
      I_("RP"),
      I_("RC"),
      I_("CX"),
      0x00
   };

   static const I_CHAR* aValues_002_963_005_000_000[] = {
      I_("NR – Not Reported"),
      I_("RP – Reported"),
      I_("RC – Report Cancel "),
      I_("CX - Cancelled"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_963_005_000_000;
   const BFSubstitutionSet SubSet_002_963_005_000_000(
    &aKeys_002_963_005_000_000[0], &aValues_002_963_005_000_000[0] );
   // Substitution set SuppressCodeSet2.  Language: enUS
   static const I_CHAR* aKeys_002_964_001_000_000[] = {
      I_("07"),
      I_("10"),
      I_("01"),
      I_("02"),
      I_("16"),
      I_("05"),
      I_("03"),
      I_("14"),
      I_("04"),
      I_("12"),
      I_("11"),
      I_("09"),
      I_("13"),
      I_("08"),
      I_("15"),
      I_("06"),
      I_("99"),
      I_("25"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("96"),
      I_("26"),
      I_("27"),
      I_("98"),
      I_("28"),
      0x00
   };

   static const I_CHAR* aValues_002_964_001_000_000[] = {
      I_("Adjustment"),
      I_("Bulk Account Conversion"),
      I_("CESG Grant Return"),
      I_("Chequing Privilege"),
      I_("Clearing"),
      I_("Conversion to Other Currency"),
      I_("Manual Issued"),
      I_("Mirror transaction for protected funds"),
      I_("Money Wired"),
      I_("Net Settlement - Bulk Cheque"),
      I_("Net Settlement - Money Wired"),
      I_("Net Settlement - No Cheque"),
      I_("Net Settlement - Subscription"),
      I_("Net Settlement - US$"),
      I_("Prepaid Trustee Fees"),
      I_("Reinvestment to Other Fund"),
      I_("Suppressed Cheque"),
      I_("SAGES Grant"),
      I_("Void cheque for payment thru FundSERV"),
      I_("Guarantee Fees"),
      I_("Trailer Fee below threshold"),
      I_("Inactive Broker Commission"),
      I_("Distribution is not verified"),
      I_("Shareholder Address is not verified"),
      I_("Banking info is not verified"),
      I_("Suppress Chq - Auto SGMR"),
      I_("Suppressed Chq-Trade Cancelled"),
      I_("Mirror Redemptions for RSP Clone"),
      I_("Void cheque for payment thru bank file"),
      I_("Address has Return Mail Flag Set"),
      I_("BCTESG Grant"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_964_001_000_000;
   const BFSubstitutionSet SubSet_002_964_001_000_000(
    &aKeys_002_964_001_000_000[0], &aValues_002_964_001_000_000[0] );
   // Substitution set SuppressCodeSet2.  Language: enCA
   static const I_CHAR* aKeys_002_964_003_000_000[] = {
      I_("07"),
      I_("10"),
      I_("01"),
      I_("02"),
      I_("05"),
      I_("03"),
      I_("14"),
      I_("04"),
      I_("12"),
      I_("11"),
      I_("09"),
      I_("13"),
      I_("08"),
      I_("15"),
      I_("06"),
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_964_003_000_000[] = {
      I_("Adjustment"),
      I_("Bulk Account Conversion"),
      I_("CESG Grant Return"),
      I_("Chequing Privilege"),
      I_("Conversion to Other Currency"),
      I_("Manual Issued"),
      I_("Mirror transaction for protected funds"),
      I_("Money Wired"),
      I_("Net Settlement - Bulk Cheque"),
      I_("Net Settlement - Money Wired"),
      I_("Net Settlement - No Cheque"),
      I_("Net Settlement - Subscription"),
      I_("Net Settlement - US$"),
      I_("Prepaid Trustee Fees"),
      I_("Reinvestment to Other Fund"),
      I_("Suppressed Cheque"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_964_003_000_000;
   const BFSubstitutionSet SubSet_002_964_003_000_000(
    &aKeys_002_964_003_000_000[0], &aValues_002_964_003_000_000[0] );
   // Substitution set SuppressCodeSet2.  Language: frCA
   static const I_CHAR* aKeys_002_964_005_000_000[] = {
      I_("07"),
      I_("10"),
      I_("01"),
      I_("02"),
      I_("16"),
      I_("05"),
      I_("03"),
      I_("14"),
      I_("04"),
      I_("12"),
      I_("11"),
      I_("09"),
      I_("13"),
      I_("08"),
      I_("15"),
      I_("06"),
      I_("99"),
      I_("25"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("96"),
      I_("26"),
      I_("98"),
      I_("28"),
      0x00
   };

   static const I_CHAR* aValues_002_964_005_000_000[] = {
      I_("Ajustement"),
      I_("Conversion de compte global"),
      I_("Remboursement de subvention SCEE"),
      I_("Privilège de chèques"),
      I_("Compensation"),
      I_("Conversion en une autre devise"),
      I_("Émission manuelle"),
      I_("Transaction réciproque pour fonds protégés"),
      I_("Argent transféré"),
      I_("Règlement net - chèque global"),
      I_("Règlement net - argent transféré"),
      I_("Règlement net - aucun chèque"),
      I_("Règlement net - souscription"),
      I_("Règlement net - USD"),
      I_("Frais de fiducie prépayés"),
      I_("Réinvestissement dans un autre fonds"),
      I_("Chèque supprimé"),
      I_("SAGES Grant"),
      I_("Void cheque for payment thru FundSERV"),
      I_("Guarantee Fees"),
      I_("Trailer Fee below threshold"),
      I_("Inactive Broker Commission"),
      I_("Distribution is not verified"),
      I_("Shareholder Address is not verified"),
      I_("Banking info is not verified"),
      I_("Suppress Chq - Auto SGMR"),
      I_("Suppressed Chq-Trade Cancelled"),
      I_("Mirror Redemptions for RSP Clone"),
      I_("Address has Return Mail Flag Set"),
      I_("Subvention SEEEFCB"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_964_005_000_000;
   const BFSubstitutionSet SubSet_002_964_005_000_000(
    &aKeys_002_964_005_000_000[0], &aValues_002_964_005_000_000[0] );
   // Substitution set SuppressCodeSet2.  Language: enIE
   static const I_CHAR* aKeys_002_964_006_000_000[] = {
      I_("07"),
      I_("10"),
      I_("01"),
      I_("02"),
      I_("05"),
      I_("03"),
      I_("14"),
      I_("04"),
      I_("12"),
      I_("11"),
      I_("09"),
      I_("13"),
      I_("08"),
      I_("15"),
      I_("06"),
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_964_006_000_000[] = {
      I_("Adjustment"),
      I_("Bulk Account Conversion"),
      I_("CESG Grant Return"),
      I_("Chequing Privilege"),
      I_("Conversion to Other Currency"),
      I_("Manual Issued"),
      I_("Mirror transaction for protected funds"),
      I_("Money Wired"),
      I_("Net Settlement - Bulk Cheque"),
      I_("Net Settlement - Money Wired"),
      I_("Net Settlement - No Cheque"),
      I_("Net Settlement - Subscription"),
      I_("Net Settlement - US$"),
      I_("Prepaid Trustee Fees"),
      I_("Reinvestment to Other Fund"),
      I_("Suppressed Cheque"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_964_006_000_000;
   const BFSubstitutionSet SubSet_002_964_006_000_000(
    &aKeys_002_964_006_000_000[0], &aValues_002_964_006_000_000[0] );
   // Substitution set SuppressCodeSet2.  Language: deDE
   static const I_CHAR* aKeys_002_964_007_000_000[] = {
      I_("07"),
      I_("10"),
      I_("01"),
      I_("02"),
      I_("16"),
      I_("05"),
      I_("03"),
      I_("14"),
      I_("04"),
      I_("12"),
      I_("11"),
      I_("09"),
      I_("13"),
      I_("08"),
      I_("15"),
      I_("06"),
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_964_007_000_000[] = {
      I_("Adjustment"),
      I_("Bulk Account Conversion"),
      I_("CESG Grant Return"),
      I_("Chequing Privilege"),
      I_("Clearing"),
      I_("Conversion to Other Currency"),
      I_("Manual Issued"),
      I_("Mirror transaction for protected funds"),
      I_("Money Wired"),
      I_("Net Settlement - Bulk Cheque"),
      I_("Net Settlement - Money Wired"),
      I_("Net Settlement - No Cheque"),
      I_("Net Settlement - Subscription"),
      I_("Net Settlement - US$"),
      I_("Prepaid Trustee Fees"),
      I_("Reinvestment to Other Fund"),
      I_("Suppressed Cheque"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_964_007_000_000;
   const BFSubstitutionSet SubSet_002_964_007_000_000(
    &aKeys_002_964_007_000_000[0], &aValues_002_964_007_000_000[0] );
   // Substitution set SuppressCodeSet2.  Language: esEs
   static const I_CHAR* aKeys_002_964_008_000_000[] = {
      I_("07"),
      I_("10"),
      I_("01"),
      I_("02"),
      I_("05"),
      I_("03"),
      I_("14"),
      I_("04"),
      I_("12"),
      I_("11"),
      I_("09"),
      I_("13"),
      I_("08"),
      I_("15"),
      I_("06"),
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_964_008_000_000[] = {
      I_("Adjustment"),
      I_("Bulk Account Conversion"),
      I_("CESG Grant Return"),
      I_("Chequing Privilege"),
      I_("Conversion to Other Currency"),
      I_("Manual Issued"),
      I_("Mirror transaction for protected funds"),
      I_("Money Wired"),
      I_("Net Settlement - Bulk Cheque"),
      I_("Net Settlement - Money Wired"),
      I_("Net Settlement - No Cheque"),
      I_("Net Settlement - Subscription"),
      I_("Net Settlement - US$"),
      I_("Prepaid Trustee Fees"),
      I_("Reinvestment to Other Fund"),
      I_("Suppressed Cheque"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_964_008_000_000;
   const BFSubstitutionSet SubSet_002_964_008_000_000(
    &aKeys_002_964_008_000_000[0], &aValues_002_964_008_000_000[0] );
   // Substitution set SuppressCodeSet2.  Language: nlNL
   static const I_CHAR* aKeys_002_964_010_000_000[] = {
      I_("07"),
      I_("10"),
      I_("01"),
      I_("02"),
      I_("16"),
      I_("05"),
      I_("03"),
      I_("14"),
      I_("04"),
      I_("12"),
      I_("11"),
      I_("09"),
      I_("13"),
      I_("08"),
      I_("15"),
      I_("06"),
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_964_010_000_000[] = {
      I_("Adjustment"),
      I_("Bulk Account Conversion"),
      I_("CESG-toelageteruggave"),
      I_("Chequing Privilege"),
      I_("Clearing"),
      I_("Conversion to Other Currency"),
      I_("Manual Issued"),
      I_("Mirror transaction for protected funds"),
      I_("Money Wired"),
      I_("Net Settlement - Bulk Cheque"),
      I_("Net Settlement - Money Wired"),
      I_("Net Settlement - No Cheque"),
      I_("Net Settlement - Subscription"),
      I_("Net Settlement - US$"),
      I_("Prepaid Trustee Fees"),
      I_("Reinvestment to Other Fund"),
      I_("Genegeerde cheque"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_964_010_000_000;
   const BFSubstitutionSet SubSet_002_964_010_000_000(
    &aKeys_002_964_010_000_000[0], &aValues_002_964_010_000_000[0] );
   // Substitution set ManualPostDividendDivTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_965_001_000_000[] = {
      I_("PD59"),
      I_("CI"),
      I_("SI"),
      I_("FC"),
      I_("MR59"),
      0x00
   };

   static const I_CHAR* aValues_002_965_001_000_000[] = {
      I_("ID"),
      I_("CI"),
      I_("SI"),
      I_("FC"),
      I_("MR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_965_001_000_000;
   const BFSubstitutionSet SubSet_002_965_001_000_000(
    &aKeys_002_965_001_000_000[0], &aValues_002_965_001_000_000[0] );
   // Substitution set ManualPostDividendDivTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_965_005_000_000[] = {
      I_("PD59"),
      I_("CI"),
      I_("SI"),
      I_("FC"),
      I_("MR59"),
      0x00
   };

   static const I_CHAR* aValues_002_965_005_000_000[] = {
      I_("ID"),
      I_("CI"),
      I_("SI"),
      I_("FC"),
      I_("MR"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_965_005_000_000;
   const BFSubstitutionSet SubSet_002_965_005_000_000(
    &aKeys_002_965_005_000_000[0], &aValues_002_965_005_000_000[0] );
   // Substitution set StopRuleLevelSet.  Language: enUS
   static const I_CHAR* aKeys_002_966_001_000_000[] = {
      I_("735"),
      I_("736"),
      I_("737"),
      I_("738"),
      I_("739"),
      I_("740"),
      I_("741"),
      I_("742"),
      I_("743"),
      I_("744"),
      I_("745"),
      I_("746"),
      I_("747"),
      I_("748"),
      I_("749"),
      I_("750"),
      I_("751"),
      I_("752"),
      I_("753"),
      I_("754"),
      0x00
   };

   static const I_CHAR* aValues_002_966_001_000_000[] = {
      I_("Account: ,Purchase"),
      I_("Broker: ,Purchase"),
      I_("Branch: ,Purchase"),
      I_("Sales Rep: ,Purchase"),
      I_("Fund,Purchase"),
      I_("Account: ,Redemption"),
      I_("Broker: ,Redemption"),
      I_("Branch: ,Redemption"),
      I_("Sales Rep: ,Redemption"),
      I_("Fund,Redemption"),
      I_("Account: ,Transfer/Exchange In"),
      I_("Broker: ,Transfer/Exchange In"),
      I_("Branch: ,Transfer/Exchange In"),
      I_("Sales Rep: ,Transfer/Exchange In"),
      I_("Fund,Transfer/Exchange In"),
      I_("Account: ,Transfer/ExchangeOut"),
      I_("Broker: ,Transfer/Exchange Out"),
      I_("Branch: ,Transfer/Exchange Out"),
      I_("Sales Rep: ,Transfer/Exchange Out"),
      I_("Fund,Transfer/Exchange Out"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_966_001_000_000;
   const BFSubstitutionSet SubSet_002_966_001_000_000(
    &aKeys_002_966_001_000_000[0], &aValues_002_966_001_000_000[0] );
   // Substitution set StopRuleLevelSet.  Language: frCA
   static const I_CHAR* aKeys_002_966_005_000_000[] = {
      I_("735"),
      I_("736"),
      I_("737"),
      I_("738"),
      I_("739"),
      I_("740"),
      I_("741"),
      I_("742"),
      I_("743"),
      I_("744"),
      I_("745"),
      I_("746"),
      I_("747"),
      I_("748"),
      I_("749"),
      I_("750"),
      I_("751"),
      I_("752"),
      I_("753"),
      I_("754"),
      0x00
   };

   static const I_CHAR* aValues_002_966_005_000_000[] = {
      I_("Compte: ,Acheter"),
      I_("Courtier: ,Acheter"),
      I_("Branche: ,Acheter"),
      I_("Représentant des ventes: ,Acheter"),
      I_("Fonds,Acheter"),
      I_("Compte: ,Rachat"),
      I_("Courtier: ,Rachat"),
      I_("Branche: ,Rachat"),
      I_("Représentant des ventes: ,Rachat"),
      I_("Fonds,Rachat"),
      I_("Compte: ,Transfert / échange Dans"),
      I_("Courtier: ,Transfert / échange Dans"),
      I_("Branche: ,Transfert / échange Dans"),
      I_("Représentant des ventes: ,Transfert / échange Dans"),
      I_("Fonds,Transfert / échange Dans"),
      I_("Compte: ,Transfert / échange Dehors"),
      I_("Courtier: ,Transfert / échange Dehors"),
      I_("Branche: ,Transfert / échange Dehors"),
      I_("Représentant des ventes: ,Transfert / échange Dehors"),
      I_("Fonds,Transfert / échange Dehors"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_966_005_000_000;
   const BFSubstitutionSet SubSet_002_966_005_000_000(
    &aKeys_002_966_005_000_000[0], &aValues_002_966_005_000_000[0] );
   // Substitution set InvestorClassificationSet.  Language: enUS
   static const I_CHAR* aKeys_002_967_001_000_000[] = {
      I_("RETL"),
      I_("PROF"),
      I_("INST"),
      I_("PRWT"),
      0x00
   };

   static const I_CHAR* aValues_002_967_001_000_000[] = {
      I_("Retail Investor"),
      I_("Professional Investor"),
      I_("Institutional"),
      I_("Private Wealth"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_967_001_000_000;
   const BFSubstitutionSet SubSet_002_967_001_000_000(
    &aKeys_002_967_001_000_000[0], &aValues_002_967_001_000_000[0] );
   // Substitution set InvestorClassificationSet.  Language: frCA
   static const I_CHAR* aKeys_002_967_005_000_000[] = {
      I_("RETL"),
      I_("PROF"),
      I_("INST"),
      I_("PRWT"),
      0x00
   };

   static const I_CHAR* aValues_002_967_005_000_000[] = {
      I_("Investisseurs De Détail"),
      I_("Investisseur Professionnel"),
      I_("Institutionnel"),
      I_("Gestion privée"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_967_005_000_000;
   const BFSubstitutionSet SubSet_002_967_005_000_000(
    &aKeys_002_967_005_000_000[0], &aValues_002_967_005_000_000[0] );
   // Substitution set AIFMDInvestorCategorySet.  Language: enUS
   static const I_CHAR* aKeys_002_968_001_000_000[] = {
      I_("BANK"),
      I_("GENG"),
      I_("HHLD"),
      I_("INSC"),
      I_("NFCO"),
      I_("NONE"),
      I_("OCIU"),
      I_("OFIN"),
      I_("PFND"),
      I_("UNKN"),
      0x00
   };

   static const I_CHAR* aValues_002_968_001_000_000[] = {
      I_("BANK"),
      I_("GENG"),
      I_("HHLD"),
      I_("INSC"),
      I_("NFCO"),
      I_("NONE"),
      I_("OCIU"),
      I_("OFIN"),
      I_("PFND"),
      I_("UNKN"),
      /* *** WARNING 101-1 *** AIFMDInvestorCategorySet [968] is missing frCA value for key UNKN.  enUS value is "UNKN".  Client: Default [0], Market: Default [0]". */

      0x00
   };

   extern const BFSubstitutionSet SubSet_002_968_001_000_000;
   const BFSubstitutionSet SubSet_002_968_001_000_000(
    &aKeys_002_968_001_000_000[0], &aValues_002_968_001_000_000[0] );
   // Substitution set AIFMDInvestorCategorySet.  Language: frCA
   static const I_CHAR* aKeys_002_968_005_000_000[] = {
      I_("BANK"),
      I_("GENG"),
      I_("INSC"),
      I_("NFCO"),
      I_("NONE"),
      I_("OCIU"),
      I_("OFIN"),
      I_("PFND"),
      I_("UNKN"),
      0x00
   };

   static const I_CHAR* aValues_002_968_005_000_000[] = {
      I_("BANK"),
      I_("GENG"),
      I_("INSC"),
      I_("NFCO"),
      I_("NONE"),
      I_("OCIU"),
      I_("OFIN"),
      I_("PFND"),
      I_("UNKN"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_968_005_000_000;
   const BFSubstitutionSet SubSet_002_968_005_000_000(
    &aKeys_002_968_005_000_000[0], &aValues_002_968_005_000_000[0] );
   // Substitution set UserActionSet.  Language: enUS
   static const I_CHAR* aKeys_002_969_001_000_000[] = {
      I_("D"),
      I_("V"),
      0x00
   };

   static const I_CHAR* aValues_002_969_001_000_000[] = {
      I_("Delete"),
      I_("Verify"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_969_001_000_000;
   const BFSubstitutionSet SubSet_002_969_001_000_000(
    &aKeys_002_969_001_000_000[0], &aValues_002_969_001_000_000[0] );
   // Substitution set UserActionSet.  Language: frCA
   static const I_CHAR* aKeys_002_969_005_000_000[] = {
      I_("D"),
      I_("V"),
      0x00
   };

   static const I_CHAR* aValues_002_969_005_000_000[] = {
      I_("Effacer"),
      I_("Vérifier"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_969_005_000_000;
   const BFSubstitutionSet SubSet_002_969_005_000_000(
    &aKeys_002_969_005_000_000[0], &aValues_002_969_005_000_000[0] );
   // Substitution set LV_TradeVerificationSearchHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_971_001_000_000[] = {
      I_("VerifyTrade"),
      I_("DeleteTrade"),
      I_("rxAcctNum"),
      I_("TransNum"),
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("TransType"),
      I_("TradeDate"),
      I_("Amount"),
      I_("AmountType"),
      I_("NetworkID"),
      I_("GoodBad"),
	  I_("SponsorCode"),
	  I_("FundGroup"),
      I_("Platform"),
	  I_("PriceType"),
      I_("PriceInCode"),
      0x00
   };

   static const I_CHAR* aValues_002_971_001_000_000[] = {
      I_("Accept"),
      I_("Delete"),
      I_("Account Number"),
      I_("Transaction Number"),
      I_("Fund"),
      I_("Class"),
      I_("Transaction Type"),
      I_("Trade Date"),
      I_("Amount"),
      I_("Amount Type"),
      I_("Network-ID"),
      I_("Good/Bad"),
      /* *** WARNING 101-1 *** LV_TradeVerificationSearchHeadingSet [971] is missing frCA value for key GoodBad.  enUS value is "Good/Bad".  Client: Default [0], Market: Default [0]". */
      I_("Fund Sponsor Code"),
	  I_("Valuation Fund Group"),
      I_("Trading Platform"),
	  I_("Price Type"),
      I_("Price-In Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_971_001_000_000;
   const BFSubstitutionSet SubSet_002_971_001_000_000(
    &aKeys_002_971_001_000_000[0], &aValues_002_971_001_000_000[0] );
   // Substitution set LV_TradeVerificationSearchHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_971_005_000_000[] = {
      I_("VerifyTrade"),
      I_("DeleteTrade"),
      I_("rxAcctNum"),
      I_("TransNum"),
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("TransType"),
      I_("TradeDate"),
      I_("AmountType"),
      I_("NetworkID"),
      I_("GoodBad"),
	  I_("SponsorCode"),
	  I_("FundGroup"),
      I_("Platform"),
	  I_("PriceType"),
      I_("PriceInCode"),
      0x00
   };

   static const I_CHAR* aValues_002_971_005_000_000[] = {
      I_("Accepter"),
      I_("Effacer"),
      I_("Numéro de compte"),
      I_("Nombre de transactions"),
      I_("Fond"),
      I_("Classe"),
      I_("Type de transaction"),
      I_("Date de Commerce"),
      I_("Montant en Type"),
      I_("Réseau-ID"),
      I_("Bon/Mauvais"),
	  I_("Fund Sponsor Code"),
	  I_("Valuation Fund Group"),
      I_("Trading Platform"),
	  I_("Price Type"),
      I_("Price-In Type"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_971_005_000_000;
   const BFSubstitutionSet SubSet_002_971_005_000_000(
    &aKeys_002_971_005_000_000[0], &aValues_002_971_005_000_000[0] );
   // Substitution set GuaranteesOverrideSet.  Language: enUS
   static const I_CHAR* aKeys_002_972_001_000_000[] = {
      I_("Y"),
      I_("N"),
      0x00
   };

   static const I_CHAR* aValues_002_972_001_000_000[] = {
      I_("Guarantees as Purchase"),
      I_("Carry Over Guarantee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_972_001_000_000;
   const BFSubstitutionSet SubSet_002_972_001_000_000(
    &aKeys_002_972_001_000_000[0], &aValues_002_972_001_000_000[0] );
   // Substitution set GuaranteesOverrideSet.  Language: frCA
   static const I_CHAR* aKeys_002_972_005_000_000[] = {
      I_("Y"),
      I_("N"),
      0x00
   };

   static const I_CHAR* aValues_002_972_005_000_000[] = {
      I_("Reval de garantie"),
      I_("Report de garantie"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_972_005_000_000;
   const BFSubstitutionSet SubSet_002_972_005_000_000(
    &aKeys_002_972_005_000_000[0], &aValues_002_972_005_000_000[0] );
   // Substitution set TPSReasonSet.  Language: enUS
   static const I_CHAR* aKeys_002_973_001_000_000[] = {
      I_("NA"),
      I_("BR"),
      I_("FD"),
      I_("TX"),
      I_("ZB"),
      0x00
   };

   static const I_CHAR* aValues_002_973_001_000_000[] = {
      I_("Nominee Account"),
      I_("DCFI Broker"),
      I_("Fund holding"),
      I_("Tax/Account Type"),
      I_("Zero Balance"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_973_001_000_000;
   const BFSubstitutionSet SubSet_002_973_001_000_000(
    &aKeys_002_973_001_000_000[0], &aValues_002_973_001_000_000[0] );
   // Substitution set TPSReasonSet.  Language: frCA
   static const I_CHAR* aKeys_002_973_005_000_000[] = {
      I_("NA"),
      I_("BR"),
      I_("FD"),
      I_("TX"),
      I_("ZB"),
      0x00
   };

   static const I_CHAR* aValues_002_973_005_000_000[] = {
      I_("Compte de nominé"),
      I_("Courtier IFRC"),
      I_("Position du Fonds"),
      I_("Type de compte/régime fiscal"),
      I_("Solde nul"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_973_005_000_000;
   const BFSubstitutionSet SubSet_002_973_005_000_000(
    &aKeys_002_973_005_000_000[0], &aValues_002_973_005_000_000[0] );
   // Substitution set InvReasonSet.  Language: enUS
   static const I_CHAR* aKeys_002_974_001_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("10"),
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_974_001_000_000[] = {
      I_("Car"),
      I_("Emergency Savings"),
      I_("Home Purchase"),
      I_("Retirement"),
      I_("Savings"),
      I_("Income"),
      I_("Legacy/Inheritance"),
      I_("Cash Reserves"),
      I_("Vacation Fund"),
      I_("Educational Purposes"),
      I_("Other"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_974_001_000_000;
   const BFSubstitutionSet SubSet_002_974_001_000_000(
    &aKeys_002_974_001_000_000[0], &aValues_002_974_001_000_000[0] );
   // Substitution set InvReasonSet.  Language: frCA
   static const I_CHAR* aKeys_002_974_005_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("10"),
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_974_005_000_000[] = {
      I_("Car"),
      I_("Emergency Savings"),
      I_("Home Purchase"),
      I_("Retirement"),
      I_("Savings"),
      I_("Income"),
      I_("Legacy/Inheritance"),
      I_("Cash Reserves"),
      I_("Vacation Fund"),
      I_("Educational Purposes"),
      I_("Other"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_974_005_000_000;
   const BFSubstitutionSet SubSet_002_974_005_000_000(
    &aKeys_002_974_005_000_000[0], &aValues_002_974_005_000_000[0] );
   // Substitution set AggregationTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_976_001_000_000[] = {
      I_("CON"),
      I_("IMM"),
      I_("REG"),
      0x00
   };

   static const I_CHAR* aValues_002_976_001_000_000[] = {
      I_("Continuous Aggregation"),
      I_("Immediate Aggregation"),
      I_("Regular Aggregation"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_976_001_000_000;
   const BFSubstitutionSet SubSet_002_976_001_000_000(
    &aKeys_002_976_001_000_000[0], &aValues_002_976_001_000_000[0] );
   // Substitution set AggregationTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_976_005_000_000[] = {
      I_("CON"),
      I_("IMM"),
      I_("REG"),
      0x00
   };

   static const I_CHAR* aValues_002_976_005_000_000[] = {
      I_("Agrégation Continu"),
      I_("Agrégation Immédiate"),
      I_("Agrégation Régulière"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_976_005_000_000;
   const BFSubstitutionSet SubSet_002_976_005_000_000(
    &aKeys_002_976_005_000_000[0], &aValues_002_976_005_000_000[0] );
   // Substitution set LV_HypoRedSummaryAmountHeadingSetWithCB.  Language: enUS
   static const I_CHAR* aKeys_002_977_001_000_000[] = {
      I_("FundCode"),
      I_("ClassCode"),
      I_("Baycom"),
      I_("FundCurrency"),
      I_("Amount"),
      I_("FreeAmount"),
      I_("ApplicableAmt"),
      I_("DSC"),
      I_("Fee"),
      I_("ProvTax"),
      I_("FedTax"),
      I_("TotCBAmount"),
      0x00
   };

   static const I_CHAR* aValues_002_977_001_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Num"),
      I_("Currency"),
      I_("Amount"),
      I_("Free Amt"),
      I_("Applicable Amt"),
      I_("DSC"),
      I_("Fees"),
      I_("Provincial Tax"),
      I_("Federal Tax"),
      I_("Clawback Comm."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_977_001_000_000;
   const BFSubstitutionSet SubSet_002_977_001_000_000(
    &aKeys_002_977_001_000_000[0], &aValues_002_977_001_000_000[0] );
   // Substitution set LV_HypoRedSummaryAmountHeadingSetWithCB.  Language: frCA
   static const I_CHAR* aKeys_002_977_005_000_000[] = {
      I_("FundCode"),
      I_("ClassCode"),
      I_("Baycom"),
      I_("FundCurrency"),
      I_("Amount"),
      I_("FreeAmount"),
      I_("ApplicableAmt"),
      I_("DSC"),
      I_("Fee"),
      I_("ProvTax"),
      I_("FedTax"),
      I_("TotCBAmount"),
      0x00
   };

   static const I_CHAR* aValues_002_977_005_000_000[] = {
      I_("Fonds"),
      I_("Classe"),
      I_("No"),
      I_("Devise"),
      I_("Montant"),
      I_("Montant sans frais"),
      I_("Montant applicable"),
      I_("FAR"),
      I_("Frais"),
      I_("Impôt provincial"),
      I_("Impôt fédéral"),
      I_("Disposition de récup. comm."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_977_005_000_000;
   const BFSubstitutionSet SubSet_002_977_005_000_000(
    &aKeys_002_977_005_000_000[0], &aValues_002_977_005_000_000[0] );
   // Substitution set LV_HypoRedDetailAmountHeadingSetWithCB.  Language: enUS
   static const I_CHAR* aKeys_002_978_001_000_000[] = {
      I_("FundCode"),
      I_("ClassCode"),
      I_("Baycom"),
      I_("FundCurrency"),
      I_("Amount"),
      I_("FeePercent"),
      I_("DSC"),
      I_("TotCBAmount"),
      0x00
   };

   static const I_CHAR* aValues_002_978_001_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Num"),
      I_("Currency"),
      I_("Amount"),
      I_("Fee%"),
      I_("DSC"),
      I_("Clawback Comm."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_978_001_000_000;
   const BFSubstitutionSet SubSet_002_978_001_000_000(
    &aKeys_002_978_001_000_000[0], &aValues_002_978_001_000_000[0] );
   // Substitution set LV_HypoRedDetailAmountHeadingSetWithCB.  Language: frCA
   static const I_CHAR* aKeys_002_978_005_000_000[] = {
      I_("FundCode"),
      I_("ClassCode"),
      I_("Baycom"),
      I_("FundCurrency"),
      I_("Amount"),
      I_("FeePercent"),
      I_("DSC"),
      I_("TotCBAmount"),
      0x00
   };

   static const I_CHAR* aValues_002_978_005_000_000[] = {
      I_("Fonds"),
      I_("Classe"),
      I_("No"),
      I_("Devise"),
      I_("Montant"),
      I_("Pourcentage de frais"),
      I_("FAR"),
      I_("Disposition de récup. comm."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_978_005_000_000;
   const BFSubstitutionSet SubSet_002_978_005_000_000(
    &aKeys_002_978_005_000_000[0], &aValues_002_978_005_000_000[0] );
   // Substitution set LV_HypoRedTotalHeadingSetWithCB.  Language: enUS
   static const I_CHAR* aKeys_002_979_001_000_000[] = {
      I_("Currency"),
      I_("GrossAmt"),
      I_("DSC"),
      I_("Fee"),
      I_("ProvTax"),
      I_("FedTax"),
      I_("NetAmt"),
      I_("TotCBAmount"),
      0x00
   };

   static const I_CHAR* aValues_002_979_001_000_000[] = {
      I_("Currency"),
      I_("Gross Amount"),
      I_("DSC"),
      I_("Fees"),
      I_("Provincial Tax"),
      I_("Federal Tax"),
      I_("Net Amount"),
      I_("Clawback Comm."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_979_001_000_000;
   const BFSubstitutionSet SubSet_002_979_001_000_000(
    &aKeys_002_979_001_000_000[0], &aValues_002_979_001_000_000[0] );
   // Substitution set LV_HypoRedTotalHeadingSetWithCB.  Language: frCA
   static const I_CHAR* aKeys_002_979_005_000_000[] = {
      I_("Currency"),
      I_("GrossAmt"),
      I_("DSC"),
      I_("Fee"),
      I_("ProvTax"),
      I_("FedTax"),
      I_("NetAmt"),
      I_("TotCBAmount"),
      0x00
   };

   static const I_CHAR* aValues_002_979_005_000_000[] = {
      I_("Devise"),
      I_("Montant brut"),
      I_("FAR"),
      I_("Frais"),
      I_("Impôt provincial"),
      I_("Impôt fédéral"),
      I_("Montant net"),
      I_("Disposition de récup. comm."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_979_005_000_000;
   const BFSubstitutionSet SubSet_002_979_005_000_000(
    &aKeys_002_979_005_000_000[0], &aValues_002_979_005_000_000[0] );
   // Substitution set BankInstrComboSetDefaultNoRRIFAcct.  Language: enUS
   static const I_CHAR* aKeys_002_980_001_000_000[] = {
      I_("Account"),
      I_("Systematic"),
      I_("Distribution"),
      0x00
   };

   static const I_CHAR* aValues_002_980_001_000_000[] = {
      I_("Default"),
      I_("Systematic"),
      I_("Distribution"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_980_001_000_000;
   const BFSubstitutionSet SubSet_002_980_001_000_000(
    &aKeys_002_980_001_000_000[0], &aValues_002_980_001_000_000[0] );
   // Substitution set BankInstrComboSetDefaultNoRRIFAcct.  Language: frCA
   static const I_CHAR* aKeys_002_980_005_000_000[] = {
      I_("Account"),
      I_("Systematic"),
      I_("Distribution"),
      0x00
   };

   static const I_CHAR* aValues_002_980_005_000_000[] = {
      I_("Default"),
      I_("Systématique"),
      I_("Distribution"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_980_005_000_000;
   const BFSubstitutionSet SubSet_002_980_005_000_000(
    &aKeys_002_980_005_000_000[0], &aValues_002_980_005_000_000[0] );
   // Substitution set SourceofFundsCheckedSet.  Language: enUS
   static const I_CHAR* aKeys_002_981_001_000_000[] = {
      I_("Req"),
      I_("Yes"),
      0x00
   };

   static const I_CHAR* aValues_002_981_001_000_000[] = {
      I_("Requested"),
      I_("Yes"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_981_001_000_000;
   const BFSubstitutionSet SubSet_002_981_001_000_000(
    &aKeys_002_981_001_000_000[0], &aValues_002_981_001_000_000[0] );
   // Substitution set SourceofFundsCheckedSet.  Language: frCA
   static const I_CHAR* aKeys_002_981_005_000_000[] = {
      I_("Req"),
      I_("Yes"),
      0x00
   };

   static const I_CHAR* aValues_002_981_005_000_000[] = {
      I_("Demandé"),
      I_("Oui"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_981_005_000_000;
   const BFSubstitutionSet SubSet_002_981_005_000_000(
    &aKeys_002_981_005_000_000[0], &aValues_002_981_005_000_000[0] );
   // Substitution set NotApplicableSet.  Language: enUS
   static const I_CHAR* aKeys_002_982_001_000_000[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_982_001_000_000[] = {
      I_("Not Applicable"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_982_001_000_000;
   const BFSubstitutionSet SubSet_002_982_001_000_000(
    &aKeys_002_982_001_000_000[0], &aValues_002_982_001_000_000[0] );
   // Substitution set NotApplicableSet.  Language: frCA
   static const I_CHAR* aKeys_002_982_005_000_000[] = {
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_982_005_000_000[] = {
      I_("Pas Applicable"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_982_005_000_000;
   const BFSubstitutionSet SubSet_002_982_005_000_000(
    &aKeys_002_982_005_000_000[0], &aValues_002_982_005_000_000[0] );
   // Substitution set FeeModelCopyToGroupHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_983_001_000_000[] = {
      I_("FeeModelSrc"),
      I_("GroupDest"),
      0x00
   };

   static const I_CHAR* aValues_002_983_001_000_000[] = {
      I_("From"),
      I_("Group To"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_983_001_000_000;
   const BFSubstitutionSet SubSet_002_983_001_000_000(
    &aKeys_002_983_001_000_000[0], &aValues_002_983_001_000_000[0] );
   // Substitution set FeeModelCopyToGroupHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_983_005_000_000[] = {
      I_("FeeModelSrc"),
      I_("GroupDest"),
      0x00
   };

   static const I_CHAR* aValues_002_983_005_000_000[] = {
      I_("From"),
      I_("Group To"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_983_005_000_000;
   const BFSubstitutionSet SubSet_002_983_005_000_000(
    &aKeys_002_983_005_000_000[0], &aValues_002_983_005_000_000[0] );
   // Substitution set SuppressionReasonCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_984_001_000_000[] = {
      I_("01"),
      I_("03"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_984_001_000_000[] = {
      I_("Awaiting Banking Info"),
      I_("Other"),
      I_("Suppress instr received"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_984_001_000_000;
   const BFSubstitutionSet SubSet_002_984_001_000_000(
    &aKeys_002_984_001_000_000[0], &aValues_002_984_001_000_000[0] );
   // Substitution set SuppressionReasonCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_984_005_000_000[] = {
      I_("01"),
      I_("03"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_984_005_000_000[] = {
      I_("En attente Infos Banking"),
      I_("Autre"),
      I_("Réprimer instr reçu"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_984_005_000_000;
   const BFSubstitutionSet SubSet_002_984_005_000_000(
    &aKeys_002_984_005_000_000[0], &aValues_002_984_005_000_000[0] );
   // Substitution set EntityAssociationSet.  Language: frCA
   static const I_CHAR* aKeys_002_985_005_000_000[] = {
      I_("CRS801"),
      I_("CRS802"),
      I_("CRS803"),
      I_("CRS804"),
      I_("CRS805"),
      I_("CRS806"),
      I_("CRS807"),
      I_("CRS808"),
      I_("CRS809"),
      I_("CRS810"),
      I_("CRS811"),
      I_("CRS812"),
      I_("CRS813"),
      0x00
   };

   static const I_CHAR* aValues_002_985_005_000_000[] = {
      I_("PDC d’une personne morale - propriété"),
      I_("PDC d’une personne morale - autres moyens"),
      I_("PDC d’une personne morale - haut dirigeant"),
      I_("PDC d’une convention - fiducie - disposant"),
      I_("PDC d’une convention - fiducie - fiduciaire"),
      I_("PDC d’une convention - fiducie - personne chargée de surveiller le fiduciaire"),
      I_("PDC d’une convention - fiducie - bénéficiaire"),
      I_("PDC d’une convention - fiducie - autre"),
      I_("PDC d’une convention - autre - disposant ou équivalent"),
      I_("PDC d’une convention - autre - fiduciaire ou équivalent"),
      I_("PDC d’une convention - autre - personne chargée de surveiller le fiduciaire ou équivalente"),
      I_("PDC d’une convention - autre - bénéficiaire ou équivalent"),
      I_("PDC d’une convention - autre - autre ou équivalent"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_985_005_000_000;
   const BFSubstitutionSet SubSet_002_985_005_000_000(
    &aKeys_002_985_005_000_000[0], &aValues_002_985_005_000_000[0] );
   // Substitution set EntityAssociationSet.  Language: enUS
   static const I_CHAR* aKeys_002_985_001_000_000[] = {
      I_("CRS801"),
      I_("CRS802"),
      I_("CRS803"),
      I_("CRS804"),
      I_("CRS805"),
      I_("CRS806"),
      I_("CRS807"),
      I_("CRS808"),
      I_("CRS809"),
      I_("CRS810"),
      I_("CRS811"),
      I_("CRS812"),
      I_("CRS813"),
      0x00
   };

   static const I_CHAR* aValues_002_985_001_000_000[] = {
      I_("CP of legal person - ownership"),
      I_("CP of legal person - other means"),
      I_("CP of legal person - senior managing official"),
      I_("CP of legal arrangement - trust - settlor"),
      I_("CP of legal arrangement - trust - trustee"),
      I_("CP of legal arrangement - trust - protector"),
      I_("CP of legal arrangement - trust - beneficiary"),
      I_("CP of legal arrangement - trust - other"),
      I_("CP of legal arrangement - other - settlor-equivalent"),
      I_("CP of legal arrangement - other - trustee-equivalent"),
      I_("CP of legal arrangement - other - protector-equivalent"),
      I_("CP of legal arrangement - other - beneficiary-equivalent"),
      I_("CP of legal arrangement - other - other-equivalent"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_985_001_000_000;
   const BFSubstitutionSet SubSet_002_985_001_000_000(
    &aKeys_002_985_001_000_000[0], &aValues_002_985_001_000_000[0] );
   // Substitution set KYCBusinessTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_986_005_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      0x00
   };

   static const I_CHAR* aValues_002_986_005_000_000[] = {
      I_("Cigarette/Distribution de cannabis"),
      I_("Production ou commercialisation de produits agricoles (récolte)"),
      I_("Production ou commercialisation de produits agricoles (cheptel)"),
      I_("Pêche/Récolte de fruits de mer"),
      I_("Aménagement paysager/Horticulture"),
      I_("Exploitation forestière/Foresterie"),
      I_("Extraction minière/Pétrole/Production gazière/Services"),
      I_("Piégeage/Chasse"),
      I_("Club d'athlétisme/Entraineurs/Activités sportives"),
      I_("Jeu/Casino/Bingo/Loterie"),
      I_("Médias (presse/musique/télévision/film)"),
      I_("Photographie"),
      I_("Puériculture/Garderie/Camp"),
      I_("Institutions de formation/Formation privée"),
      I_("Banque/Fiducie/Hypothèque/Services de prêt"),
      I_("Club d'investissement/Société de portefeuille familiale"),
      I_("Services monétaires/GA/Change"),
      I_("Valeurs mobilières/Planification financière/Services d'assurance"),
      I_("Fiducies (immobilière/familiale/personnelle)"),
      I_("Organisme de bienfaisance autorisé (dont groupes religieux autorisés)"),
      I_("Organisme de bienfaisance/Sans but lucratif non autorisé"),
      I_("Gouvernement/Service public - provincial"),
      I_("Gouvernement/Service public - fédéral"),
      I_("Gouvernement/Service public - municipal"),
      I_("Organismes publics/Services sociaux/Société de la couronne"),
      I_("Laboratoire/Services d'analyse"),
      I_("Massage/Spa - autorisé"),
      I_("Massage/Spa - non autorisé"),
      I_("Société de professionnels médicaux (dont en commandite)"),
      I_("Fournitures médicales/Services"),
      I_("Pharmacie/Société pharmaceutique"),
      I_("Personnes âgées/Établissements de santé"),
      I_("Hébergement/Hôtellerie"),
      I_("Bar/Boîte de nuit/Divertissement pour adulte/Salon de massage"),
      I_("Planification et organisation d'évènements"),
      I_("Restauration/Traiteur/Préparation alimentaire"),
      I_("Tourisme/Parc d'attraction/Salle de jeux électroniques"),
      I_("Services d'urgence (police, pompiers, ambulance)"),
      I_("Société d'avocats/Services juridiques/Étude notariale"),
      I_("Services de sécurité/Enquêteurs"),
      I_("Armes/Munitions/Approvisionnement militaire"),
      I_("Gouvernement - Militaire/Forces armées/Marine"),
      I_("Comptabilité/Audit/Consultation financière"),
      I_("Administration/Secrétariat"),
      I_("Publicité/Média/Services de conception en TI"),
      I_("Centres d'appel/Télémarketing/Sous-traitance administrative"),
      I_("Société de copropriétés/Gestion d'immeuble/Nettoyage"),
      I_("Ressources humaines/Avantages sociaux/Paie"),
      I_("Services de gestion"),
      I_("Marketing/Ventes"),
      I_("Art/Antiquaire"),
      I_("Adjudication/Prêteur sur gage/Consignation"),
      I_("Dépanneurs"),
      I_("Services funéraires"),
      I_("Soins capillaires/Esthétique/Ongles/Cosmétiques"),
      I_("Magasin d'alcool (non détenu ou exploité par le gouvernement)"),
      I_("Stationnement (non détenu ou exploité par le gouvernement)"),
      I_("Pierres et métaux précieux, joaillerie"),
      I_("Agents immobilier/Courtiers"),
      I_("Commerce de détail (autre)"),
      I_("Commerce de détail, mode"),
      I_("Commerce de détail, électronique"),
      I_("Commerce de détail alimentaire/Épicerie"),
      I_("Fabricant de distributeurs automatiques"),
      I_("Commerce de gros - Marchandises générales"),
      I_("Commerce de gros - Fabrication/Construction"),
      I_("Laboratoires/Centres de recherche"),
      I_("Technologie/Gestion/Soutien"),
      I_("Architectures/Planificateurs/Ingénieurs"),
      I_("Construction/Personne de métier/Entrepreneur en construction"),
      I_("Fournisseurs de services de construction/Sociétés"),
      I_("Vendeur/Loueur d'équipement"),
      I_("Fabrication - Produit fini"),
      I_("Fabrication - Chaine d'approvisionnement"),
      I_("Télécommunication/Services publics"),
      I_("Concessionnaire automobiles/Camions"),
      I_("Concessionnaire avions/Concessionnaire bateaux"),
      I_("Services de taxi/Limousine"),
      I_("Société de transport (aérien/ferroviaire/autobus)"),
      I_("Agence de voyage"),
      I_("Commerce de gros/Logistique/Transport/Intérieur"),
      I_("Commerce de gros/Logistique/Transport/International"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_986_005_000_000;
   const BFSubstitutionSet SubSet_002_986_005_000_000(
    &aKeys_002_986_005_000_000[0], &aValues_002_986_005_000_000[0] );
   // Substitution set KYCBusinessTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_986_001_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("50"),
      I_("51"),
      I_("52"),
      I_("53"),
      I_("54"),
      I_("55"),
      I_("56"),
      I_("57"),
      I_("58"),
      I_("59"),
      I_("60"),
      I_("61"),
      I_("62"),
      I_("63"),
      I_("64"),
      I_("65"),
      I_("66"),
      I_("67"),
      I_("68"),
      I_("69"),
      I_("70"),
      I_("71"),
      I_("72"),
      I_("73"),
      I_("74"),
      I_("75"),
      I_("76"),
      I_("77"),
      I_("78"),
      I_("79"),
      I_("80"),
      I_("81"),
      I_("82"),
      0x00
   };

   static const I_CHAR* aValues_002_986_001_000_000[] = {
      I_("Cigarette/Cannabis Distribution"),
      I_("Farming (Crop) production or markets"),
      I_("Farming (Livestock) production or markets"),
      I_("Fish/Seafood production, camps or markets"),
      I_("Landscaping/Horticulture"),
      I_("Logging/Forestry"),
      I_("Mining/Oil/Gas Production/Services"),
      I_("Trapping/Hunting"),
      I_("Athletic Clubs/Trainers/Fitness Services"),
      I_("Gambling/Casino/Bingo/Lottery"),
      I_("Media production (Print/Music/Television/Movie)"),
      I_("Photography"),
      I_("Child Care/Day Care/Camp"),
      I_("Educational Institutions/Private Learning"),
      I_("Banking/Trust/Mortgage/Lending Services"),
      I_("Investment Club/Family Holding Company"),
      I_("Money Services/ATM/Currency Services"),
      I_("Securities/Financial Planning/Insurance Services"),
      I_("Trusts (Real Estate/Family/Personal)"),
      I_("Charity - Registered (Includes registered religious groups)"),
      I_("Charity/Non-profit - Not Registered"),
      I_("Government/Public Service -  Provincial"),
      I_("Government/Public Service - Federal"),
      I_("Government/Public Service - Municipal"),
      I_("Government Agencies/Social Services/Crown Corp"),
      I_("Laboratory/Testing Services"),
      I_("Massage/Spa - Registered"),
      I_("Massage/Spa - Unregistered"),
      I_("Medical Professional Services Corp/Partnership"),
      I_("Medical Supply/Services"),
      I_("Pharmacy/Pharmaceutical"),
      I_("Retirement/Medical Care Facility"),
      I_("Accommodations/Hotel"),
      I_("Bar/Nightclub/Adult Entertainment/Massage Parlour"),
      I_("Event Planning and Services"),
      I_("Restaurant/Caterer/Food Preparation"),
      I_("Tourism/Amusement Park/Arcade"),
      I_("Emergency Services Agencies (Police/Fire/Ambulance)"),
      I_("Law Firm/Legal Services/Notary"),
      I_("Security Services/Investigators"),
      I_("Arms/Ammunition/Military Supply"),
      I_("Government  - Military/Armed Forces/Navy"),
      I_("Accountant/Auditing/Financial Consulting"),
      I_("Administration/Clerical"),
      I_("Advertising/Media/IT Design Services"),
      I_("Call Centres/Telemarketing/Admin Outsourcing"),
      I_("Condominium Corporation/Facility Management/Cleaning"),
      I_("Human Resources/Benefits/Payroll Services"),
      I_("Management Services"),
      I_("Marketing/Sales"),
      I_("Art or Antique Dealer"),
      I_("Auction/Pawn Broker/Consignment Services"),
      I_("Convenience Store"),
      I_("Funeral Services"),
      I_("Hair Care/Beautician/Nails/Cosmetics"),
      I_("Liquor Store (Non-gov’t owned and operated)"),
      I_("Parking Garage (Non-gov’t owned & operated)"),
      I_("Precious Metals/Stones and Jewels Dealer"),
      I_("Real estate Agents/Brokers"),
      I_("Retail (Other)"),
      I_("Retail Clothing"),
      I_("Retail Electronics"),
      I_("Retail Food/Grocery"),
      I_("Vending Machine Provider"),
      I_("Wholesale Trade - General Goods"),
      I_("Wholesale Trade - Manufacturing/Construction"),
      I_("Laboratories/Research Centres"),
      I_("Technology Management/Support"),
      I_("Architects/Planners/Engineers"),
      I_("Construction/Tradesperson/Building Contractor"),
      I_("Construction Suppliers/Companies"),
      I_("Equipment Dealer/Rental"),
      I_("Manufacturer - Finished Product"),
      I_("Manufacturer - Supply Chain"),
      I_("Telecommunications/Utilities"),
      I_("Auto/Truck Dealership"),
      I_("Boat/Plane Dealership"),
      I_("Taxi/Limousine Services"),
      I_("Transportation company (Airline/Railway/Bus)"),
      I_("Travel Agency"),
      I_("Warehouse/Logistics/Shipping/Domestic"),
      I_("Warehouse/Logistics/Shipping/International"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_986_001_000_000;
   const BFSubstitutionSet SubSet_002_986_001_000_000(
    &aKeys_002_986_001_000_000[0], &aValues_002_986_001_000_000[0] );
   // Substitution set KYCLegalFormSet.  Language: frCA
   static const I_CHAR* aKeys_002_987_005_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_987_005_000_000[] = {
      I_("Association/Société/Loge"),
      I_("Organisme de bienfaisance/Sans but lucratif"),
      I_("Compte communautaire"),
      I_("Société de copropriétés"),
      I_("Société"),
      I_("Société de portefeuille"),
      I_("Succession"),
      I_("Partenariat"),
      I_("Commerce/Organisation syndicale"),
      I_("Fiducie"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_987_005_000_000;
   const BFSubstitutionSet SubSet_002_987_005_000_000(
    &aKeys_002_987_005_000_000[0], &aValues_002_987_005_000_000[0] );
   // Substitution set KYCLegalFormSet.  Language: enUS
   static const I_CHAR* aKeys_002_987_001_000_000[] = {
      I_("1"),
      I_("2"),
      I_("3"),
      I_("4"),
      I_("5"),
      I_("6"),
      I_("7"),
      I_("8"),
      I_("9"),
      I_("10"),
      0x00
   };

   static const I_CHAR* aValues_002_987_001_000_000[] = {
      I_("Association/Society/Lodge"),
      I_("Charity/Not-For-Profit"),
      I_("Community Account"),
      I_("Condominium Corporation"),
      I_("Corporation"),
      I_("Holding Company"),
      I_("Estate"),
      I_("Partnership"),
      I_("Trade/Labor Union"),
      I_("Trust"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_987_001_000_000;
   const BFSubstitutionSet SubSet_002_987_001_000_000(
    &aKeys_002_987_001_000_000[0], &aValues_002_987_001_000_000[0] );
   // Substitution set RemarkFilterBySet.  Language: enUS
   static const I_CHAR* aKeys_002_988_001_000_000[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_988_001_000_000[] = {
      I_("All"),
      I_("Active"),
      I_("Inactive"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_988_001_000_000;
   const BFSubstitutionSet SubSet_002_988_001_000_000(
    &aKeys_002_988_001_000_000[0], &aValues_002_988_001_000_000[0] );
   // Substitution set RemarkFilterBySet.  Language: frCA
   static const I_CHAR* aKeys_002_988_005_000_000[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_988_005_000_000[] = {
      I_("All"),
      I_("Active"),
      I_("Inactive"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_988_005_000_000;
   const BFSubstitutionSet SubSet_002_988_005_000_000(
    &aKeys_002_988_005_000_000[0], &aValues_002_988_005_000_000[0] );
   // Substitution set AlertMessageSet.  Language: frCA
   static const I_CHAR* aKeys_002_989_005_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_989_005_000_000[] = {
      I_("Le compte présente un statut de retour du courrier"),
      I_("Le compte présente un chèque dont la date est dépassée"),
      I_("Le compte présente un statut de bien non réclamé"),
      I_("Le compte présente un (des) chèque(s) remis"),
      I_("Le compte présente une alerte!"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_989_005_000_000;
   const BFSubstitutionSet SubSet_002_989_005_000_000(
    &aKeys_002_989_005_000_000[0], &aValues_002_989_005_000_000[0] );
   // Substitution set AlertMessageSet.  Language: enUS
   static const I_CHAR* aKeys_002_989_001_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_989_001_000_000[] = {
      I_("There is a Return Mail Status on the Account"),
      I_("There is a Stale Dated Cheque on the Account"),
      I_("There is an Unclaimed Property Status on the Account"),
      I_("There is Remitted Cheque(s) on the Account"),
      I_("There are Alert(s) on this account!"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_989_001_000_000;
   const BFSubstitutionSet SubSet_002_989_001_000_000(
    &aKeys_002_989_001_000_000[0], &aValues_002_989_001_000_000[0] );
   // Substitution set AlertMessagesHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_990_005_000_000[] = {
      I_("AlertCode"),
      0x00
   };

   static const I_CHAR* aValues_002_990_005_000_000[] = {
      I_("Messages"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_990_005_000_000;
   const BFSubstitutionSet SubSet_002_990_005_000_000(
    &aKeys_002_990_005_000_000[0], &aValues_002_990_005_000_000[0] );
   // Substitution set AlertMessagesHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_990_001_000_000[] = {
      I_("AlertCode"),
      0x00
   };

   static const I_CHAR* aValues_002_990_001_000_000[] = {
      I_("Messages"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_990_001_000_000;
   const BFSubstitutionSet SubSet_002_990_001_000_000(
    &aKeys_002_990_001_000_000[0], &aValues_002_990_001_000_000[0] );

   // Substitution set ExternalInstitutionSet.  Language: enUS
   static const I_CHAR* aKeys_002_991_001_000_000[] = {
      I_("ACE"),
      I_("QSA"),
      I_("MOR"),
      I_("ACN"),
      I_("ADD"),
      I_("AGL"),
      I_("ACM"),
      I_("AFM"),
      I_("AGF"),
      I_("ALN"),
      I_("ALI"),
      I_("AZL"),
      I_("AAM"),
      I_("ANF"),
      I_("APM"),
      I_("ANT"),
      I_("AHP"),
      I_("AHF"),
      I_("ALB"),
      I_("ATB"),
      I_("AUR"),
      I_("ACA"),
      I_("BTB"),
      I_("BCM"),
      I_("BRG"),
      I_("TWC"),
      I_("BSD"),
      I_("BLK"),
      I_("BBG"),
      I_("MTL"),
      I_("AAT"),
      I_("BLA"),
      I_("GGF"),
      I_("JHI"),
      I_("JHN"),
      I_("BNP"),
      I_("BIP"),
      I_("BRF"),
      I_("BGC"),
      I_("CAM"),
      I_("BIM"),
      I_("BTA"),
      I_("BMG"),
      I_("CDO"),
      I_("CWF"),
      I_("CHS"),
      I_("GOC"),
      I_("CFM"),
      I_("ITI"),
      I_("CIF"),
      I_("CEN"),
      I_("CHO"),
      I_("CIG"),
      I_("ATL"),
      I_("CIB"),
      I_("CBL"),
      I_("CCL"),
      I_("MPI"),
      I_("CCG"),
      I_("CGF"),
      I_("CVT"),
      I_("CSP"),
      I_("CRY"),
      I_("DRL"),
      I_("DKC"),
      I_("IMP"),
      I_("DJT"),
      I_("DFA"),
      I_("DCC"),
      I_("DMI"),
      I_("DON"),
      I_("DYN"),
      I_("EWF"),
      I_("SWA"),
      I_("EHP"),
      I_("EDG"),
      I_("ELM"),
      I_("EFP"),
      I_("EPC"),
      I_("ECM"),
      I_("EQB"),
      I_("ELC"),
      I_("EXL"),
      I_("FID"),
      I_("FHC"),
      I_("FIA"),
      I_("FIE"),
      I_("SIC"),
      I_("FQL"),
      I_("FAF"),
      I_("FOR"),
      I_("FGL"),
      I_("FGM"),
      I_("FGP"),
      I_("FTO"),
      I_("TML"),
      I_("FSC"),
      I_("FCC"),
      I_("FTC"),
      I_("FAM"),
      I_("GAL"),
      I_("GLT"),
      I_("GFM"),
      I_("GCM"),
      I_("GPF"),
      I_("GVC"),
      I_("GOF"),
      I_("GDM"),
      I_("GWD"),
      I_("WOF"),
      I_("HCP"),
      I_("HAR"),
      I_("HRV"),
      I_("YAM"),
      I_("HEW"),
      I_("HGC"),
      I_("HIL"),
      I_("HOM"),
      I_("HSP"),
      I_("HKB"),
      I_("HSB"),
      I_("IAC"),
      I_("CCM"),
      I_("IBN"),
      I_("INA"),
      I_("ISO"),
      I_("AIM"),
      I_("ATS"),
      I_("IAM"),
      I_("IPF"),
      I_("IGI"),
      I_("ICC"),
      I_("TLC"),
      I_("JRF"),
      I_("JCC"),
      I_("JMF"),
      I_("JOV"),
      I_("KJH"),
      I_("KPT"),
      I_("KEN"),
      I_("KFL"),
      I_("KWC"),
      I_("KVC"),
      I_("LCA"),
      I_("LDM"),
      I_("LAU"),
      I_("DAM"),
      I_("LAF"),
      I_("LWP"),
      I_("LML"),
      I_("LON"),
      I_("SWF"),
      I_("LYZ"),
      I_("SGP"),
      I_("MFC"),
      I_("MRD"),
      I_("MAC"),
      I_("MMI"),
      I_("MAG"),
      I_("MAJ"),
      I_("MCC"),
      I_("ISL"),
      I_("MMF"),
      I_("MIP"),
      I_("MAV"),
      I_("MIC"),
      I_("MIN"),
      I_("MAT"),
      I_("MAW"),
      I_("MIT"),
      I_("MPW"),
      I_("MCO"),
      I_("MER"),
      I_("MID"),
      I_("MMA"),
      I_("NBN"),
      I_("NBC"),
      I_("NEW"),
      I_("NPT"),
      I_("NXG"),
      I_("NIA"),
      I_("NWM"),
      I_("NRP"),
      I_("NGM"),
      I_("NWT"),
      I_("OLF"),
      I_("SRI"),
      I_("OCP"),
      I_("PAL"),
      I_("PIF"),
      I_("PGF"),
      I_("PGL"),
      I_("KIP"),
      I_("PHN"),
      I_("PIC"),
      I_("PMC"),
      I_("PMO"),
      I_("POL"),
      I_("PAI"),
      I_("PTL"),
      I_("PCS"),
      I_("ALC"),
      I_("PRO"),
      I_("PFC"),
      I_("QLF"),
      I_("QWE"),
      I_("RGP"),
      I_("TCG"),
      I_("RDN"),
      I_("PPM"),
      I_("RBB"),
      I_("RBC"),
      I_("RBF"),
      I_("RBL"),
      I_("RLI"),
      I_("CWC"),
      I_("RAM"),
      I_("RES"),
      I_("ROI"),
      I_("NRF"),
      I_("RBS"),
      I_("ROS"),
      I_("RCP"),
      I_("RPA"),
      I_("RPI"),
      I_("FRC"),
      I_("CCP"),
      I_("SSP"),
      I_("SMA"),
      I_("BNS"),
      I_("SCB"),
      I_("PCA"),
      I_("NCE"),
      I_("SHP"),
      I_("SCF"),
      I_("SIL"),
      I_("SPA"),
      I_("SPR"),
      I_("SLI"),
      I_("SLM"),
      I_("SIF"),
      I_("SCO"),
      I_("SCL"),
      I_("SCA"),
      I_("SLF"),
      I_("SUN"),
      I_("INB"),
      I_("INI"),
      I_("TAY"),
      I_("TDG"),
      I_("TDB"),
      I_("TDN"),
      I_("TER"),
      I_("CAN"),
      I_("ECF"),
      I_("GWL"),
      I_("MPS"),
      I_("MSE"),
      I_("MCB"),
      I_("MCP"),
      I_("MGE"),
      I_("MGF"),
      I_("MGS"),
      I_("MIF"),
      I_("MLC"),
      I_("MLP"),
      I_("MPB"),
      I_("MPP"),
      I_("MRP"),
      I_("MAX"),
      I_("TEC"),
      I_("TBR"),
      I_("JFT"),
      I_("TMI"),
      I_("TAI"),
      I_("TRZ"),
      I_("TPM"),
      I_("TPH"),
      I_("TUR"),
      I_("UGA"),
      I_("VPI"),
      I_("VAN"),
      I_("VPM"),
      I_("VCM"),
      I_("VRT"),
      I_("VCC"),
      I_("WAR"),
      I_("WAL"),
      I_("WCA"),
      I_("WCO"),
      I_("WFC"),
      I_("SBH"),
      I_("YTM"),
      I_("ZAG"),
      I_("EHP"),
      I_("FTW"),
      I_("KJH"),
      I_("NPT"),
      I_("PCS"),
      I_("OTR"),
      0x00
   };

   static const I_CHAR* aValues_002_991_001_000_000[] = {
      I_("Acernis Capital Management Inc."),
      I_("Acker Finley Asset Management Inc."),
      I_("ACM Advisors Ltd."),
      I_("Acorn Global Investments Inc."),
      I_("Addenda Capital Inc."),
      I_("Adroit Investment Management Ltd"),
      I_("AEGON Capital Management Inc."),
      I_("AEGON Fund Management Inc."),
      I_("AGF Management Limited"),
      I_("Alignvest Capital Management Inc."),
      I_("Alitis Investment Counsel Inc."),
      I_("Allianz Life Insurance Company of North America"),
      I_("AlphaNorth Asset Management"),
      I_("AlphaNorth Asset Management"),
      I_("AlphaPro Management Inc."),
      I_("Antares Investment Management"),
      I_("Arrow Capital Management Inc."),
      I_("Aston Hill Asset Management Inc."),
      I_("ATB Financial"),
      I_("ATB Investment Management Inc."),
      I_("Aurion Capital Management Inc."),
      I_("Auspice Capital Advisors Ltd."),
      I_("B2B Bank"),
      I_("Barometer Capital Management Inc."),
      I_("Barrage Capital Inc."),
      I_("Bellwether Investment Management Inc."),
      I_("Black Swan Dexteritas Inc."),
      I_("BlackRock Asset Management Canada Limited"),
      I_("BloombergSen Inc."),
      I_("BMO Bullion"),
      I_("BMO Deposit Products"),
      I_("BMO Life Assurance Company"),
      I_("BMO Mutual Funds"),
      I_("BMO Mutual Funds"),
      I_("BMO Structured Notes"),
      I_("BNP Paribas (Canada)"),
      I_("Brandes Investment Partners"),
      I_("Bridging Finance Inc."),
      I_("Bristol Gate Capital Partners Inc."),
      I_("Brompton Funds Limited"),
      I_("Brookfield Investment Management (Canada) Inc."),
      I_("BT Global Growth Inc."),
      I_("Bullion Management Services Inc."),
      I_("CADO Investment Fund Management Inc."),
      I_("Caldwell Investment Management Ltd."),
      I_("Canadian Horizons Settlement Corp."),
      I_("Canoe Financial Limited Partnership"),
      I_("Canso Fund Management Ltd."),
      I_("Capital Direct Management Ltd."),
      I_("Capital International Asset Management (Canada) Inc."),
      I_("Centurion Asset Management Inc."),
      I_("Chou Associates Management Inc."),
      I_("CI Investments Inc."),
      I_("CIBC Asset Management Inc."),
      I_("CIBC Mutual Funds"),
      I_("CIBC World Markets"),
      I_("Connor, Clark & Lunn Investment Management Ltd."),
      I_("Connor, Clark and Lunn Private Capital Ltd."),
      I_("Cortland Credit Group Inc."),
      I_("Counsel Portfolio Services Inc."),
      I_("Covenant Capital Management Inc."),
      I_("Credit Suisse International"),
      I_("Crystalline Management Inc."),
      I_("Davis Rea Ltd. Investment Management"),
      I_("Deans Knight Capital Management Ltd."),
      I_("Desjardins Financial Security"),
      I_("Desjardins Trust Inc."),
      I_("Dimensional Fund Advisors Canada Inc."),
      I_("Discovery Capital Management Corp."),
      I_("Dixon Mitchell Investment Counsel Inc."),
      I_("Donville Kent Asset Management Inc."),
      I_("Dynamic Funds"),
      I_("East West Investment Management Corporation"),
      I_("East West Investment Management Corporation"),
      I_("EdgeHill Partners"),
      I_("EdgePoint Wealth Management Inc."),
      I_("Empire Life Investment Inc."),
      I_("Entrust Focus Partners LP"),
      I_("Epic Capital Management Inc."),
      I_("Equilibrium Capital Management Inc."),
      I_("Equitable Bank"),
      I_("Equitable Life of Canada"),
      I_("Excel Funds Management Inc."),
      I_("Fidelity Investments Canada ULC"),
      I_("Fieldhouse Capital Management Inc."),
      I_("Fiera Capital Corporation"),
      I_("Fiera Capital Corporation"),
      I_("Fiera Capital Corporation"),
      I_("Fiera Quantum Limited"),
      I_("First Asset Investment Management Inc."),
      I_("Forge First Asset Management Inc."),
      I_("Formula Growth Limited"),
      I_("Formula Growth Limited"),
      I_("Foyston, Gordon & Payne Inc."),
      I_("Franklin Templeton Investment Funds"),
      I_("Franklin Templeton Investments Corp."),
      I_("Front Street Capital"),
      I_("FrontFour Capital Corp."),
      I_("FT Portfolios Canada Co"),
      I_("Fulcra Asset Management Inc."),
      I_("Galileo Equity Management Inc."),
      I_("Galliant Capital Management Inc."),
      I_("GENFUND Management Inc."),
      I_("Genus Capital Management Inc."),
      I_("Global Growth Assets Inc."),
      I_("Globevest Capital Ltd."),
      I_("Golden Opportunities Fund Inc."),
      I_("Goodman & Company Investment Counsel Inc."),
      I_("Goodwood Inc."),
      I_("Growth Works Capital Ltd."),
      I_("Hamilton Capital Partners Inc."),
      I_("Harmony"),
      I_("Harvest Portfolios Group Inc."),
      I_("Heritage Yorkville Mutual Fund Corporations"),
      I_("Heward Investment Management Inc."),
      I_("HGC Investment Management Inc."),
      I_("Hillsdale Investment Management Ltd."),
      I_("Home Trust Company"),
      I_("HSBC Bank Canada Inc."),
      I_("HSBC Global Asset Management (Canada) Limited"),
      I_("HSBC Global Asset Management (Canada) Limited"),
      I_("IA Clarington GIF"),
      I_("IA Clarington Investments Inc."),
      I_("ICICI Bank Canada"),
      I_("Industrial Alliance Insurance and Financial Services Inc."),
      I_("Inflection Management Inc."),
      I_("Invesco Canada Ltd./Invesco Canada Lt‚e"),
      I_("Invesco Canada Ltd./Invesco Canada Lt‚e"),
      I_("Investec Asset Management Guernsey Limited"),
      I_("Investment Partners Fund"),
      I_("Investors Group Financial Services Inc."),
      I_("Invico Capital Corporation"),
      I_("ivari"),
      I_("Jarislowsky Fraser Limited"),
      I_("JCClark Ltd."),
      I_("JM Fund Management Inc."),
      I_("JovFinancial Solutions Inc."),
      I_("K.J. Harrison & Partners Inc."),
      I_("K2 & Associates Investment Management Inc."),
      I_("Kensington Capital Partners Limited"),
      I_("KFL Capital Management Ltd."),
      I_("Kingwest & Company"),
      I_("KV Capital Inc."),
      I_("La Capitale"),
      I_("Landry Investment Management Inc."),
      I_("Laurus Investment Counsel Inc."),
      I_("LDIC INC."),
      I_("Lester Asset Management Inc."),
      I_("Lightwater Partners Ltd."),
      I_("Lincluden Management Limited"),
      I_("London Life Insurance Company"),
      I_("Lorne Steinberg Wealth Management Inc."),
      I_("Lysander Funds Limited"),
      I_("MacDougall Investment Counsel Inc."),
      I_("Mackenzie Financial Corporation"),
      I_("Mackenzie Financial Corporation"),
      I_("MacNicol & Associates Asset Management Inc."),
      I_("Magenta Capital Corporation"),
      I_("Magna Mutual Funds Inc."),
      I_("Majestic Asset Management LLC"),
      I_("Man Investments Canada Corp."),
      I_("Manulife Asset Management Accord (2015) Inc."),
      I_("Manulife Asset Management Limited"),
      I_("Manulife Investments"),
      I_("Marquest Asset Management Inc."),
      I_("Marquest Asset Management Inc."),
      I_("Marquest Asset Management Inc."),
      I_("Matco Financial Inc."),
      I_("Mawer Investment Management Ltd."),
      I_("McElvaine Investment Management Ltd."),
      I_("McLean & Partners Wealth Management Ltd."),
      I_("MCOCI Mortgage Company of Canada Inc. MIC"),
      I_("Merrill Lynch Canada Inc."),
      I_("Middlefield Group"),
      I_("Morgan Meighen & Associates Limited"),
      I_("National Bank Correspondent Network Inc."),
      I_("National Bank Investment Inc."),
      I_("NewGen Asset Management Limited"),
      I_("Newport Private Wealth Inc."),
      I_("NGAM Canada LP"),
      I_("Niagara Capital Partners Ltd."),
      I_("Nicola Wealth Management Ltd."),
      I_("Norrep Fund"),
      I_("North Growth Management Ltd."),
      I_("Northwest and Ethical Investments L.P."),
      I_("O'Leary Funds Management LP"),
      I_("OceanRock Investment Inc."),
      I_("Onex Credit Partners, LLC"),
      I_("Palos Management Inc."),
      I_("Pavilion Advisory Group Ltd"),
      I_("Penderfund Capital Management"),
      I_("Permal Investment Management Services Limited"),
      I_("Perron & Partners Wealth Management Corp."),
      I_("Phillips Hager & North Investment Funds Ltd."),
      I_("Picton Mahoney Asset Management"),
      I_("PIMCO Canada Corp."),
      I_("PIMCO Canada Corp."),
      I_("Polar Securities Inc."),
      I_("Portfolio Strategies Corporation"),
      I_("Portland Investment Counsel Inc."),
      I_("Primerica Concert Series"),
      I_("Primevest Capital Corp."),
      I_("Pro-Financial Asset Management Inc."),
      I_("Purpose Investments Inc."),
      I_("Quantum Leap Asset Management Limited"),
      I_("Qwest Investment Fund Management Ltd."),
      I_("R.E.G.A.R Gestion Priv‚e Inc."),
      I_("R.N. Croft Financial Group Inc."),
      I_("Radin Capital Partners Inc."),
      I_("Rayne Capital Opportunities Fund L.P."),
      I_("RBC Dominion Securities Inc."),
      I_("RBC Dominion Securities Inc."),
      I_("RBC Funds"),
      I_("RBC Global Asset Management Inc."),
      I_("RBC Life Insurance Company"),
      I_("Redwood Asset Management Inc."),
      I_("Redwood Asset Management Inc."),
      I_("Resolute Funds Limited"),
      I_("Return on Innovation Advisors Ltd."),
      I_("Roadmap Capital Inc."),
      I_("Robson Capital Management Inc."),
      I_("Ross Smith Asset Management Inc."),
      I_("Roundtable Capital Partners Inc."),
      I_("RP Investment Advisors"),
      I_("RP Investment Advisors"),
      I_("Russell Investments Canada Limited"),
      I_("SaskWorks Venture Fund Inc."),
      I_("Scotia Capital Inc."),
      I_("Scotia Capital Inc."),
      I_("Scotia Securities Inc."),
      I_("SecureCare Capital Inc."),
      I_("SEI Investments Canada Company"),
      I_("Sentry Investments Inc."),
      I_("Sherpa Asset Management Inc."),
      I_("Silvercove Fund Management Inc."),
      I_("Silvercreek Management Inc."),
      I_("Spartan Fund Management Inc."),
      I_("Sprott Asset Management LP."),
      I_("Standard Life Assurance Company"),
      I_("Standard Life Mutual Funds Ltd."),
      I_("Steadyhand Investment Funds Inc."),
      I_("Stephenson & Company Capital Management Inc."),
      I_("Stone & Co. Limited"),
      I_("Stratigis Capital Advisors Inc."),
      I_("Sun Life Assurance Company of Canada"),
      I_("Sun Life Global Investments (Canada) Inc."),
      I_("Tangerine Bank"),
      I_("Tangerine Investment Management Inc."),
      I_("Taylor Asset Management Inc."),
      I_("TD GIF II"),
      I_("TD Mutual Funds"),
      I_("TD Structured Notes"),
      I_("Terra Fund Management Ltd."),
      I_("The Canada Life Assurance Company"),
      I_("The Empire Life Insurance Company"),
      I_("The Great-West Life Assurance Company"),
      I_("The Manufacturers Life Insurance Co."),
      I_("The Manufacturers Life Insurance Co."),
      I_("The Manufacturers Life Insurance Company"),
      I_("The Manufacturers Life Insurance Company"),
      I_("The Manufacturers Life Insurance Company"),
      I_("The Manufacturers Life Insurance Company"),
      I_("The Manufacturers Life Insurance Company"),
      I_("The Manufacturers Life Insurance Company"),
      I_("The Manufacturers Life Insurance Company"),
      I_("The Manufacturers Life Insurance Company"),
      I_("The Manufacturers Life Insurance Company"),
      I_("The Manufacturers Life Insurance Company"),
      I_("The Manufacturers Life Insurance Company"),
      I_("The Quadrus Group of Funds"),
      I_("Third Eye Capital Management Inc."),
      I_("Timbercreek Asset Management Ltd."),
      I_("Timelo Investment Management Inc."),
      I_("Tradex Management Inc."),
      I_("Transamerica - AIC Segregated Funds"),
      I_("Trez Capital Fund Management LP"),
      I_("Triasima Portfolio Management Inc."),
      I_("Triumph Asset Management Inc."),
      I_("Turtle Creek Asset Management Inc."),
      I_("UBS Global Asset Management (Canada) Inc."),
      I_("Value Partners Investments Inc."),
      I_("Vantage Asset Management"),
      I_("Vantage Point Investment Management Inc."),
      I_("Venator Capital Management Ltd."),
      I_("Vertex One Asset Management Inc."),
      I_("Vision Capital Corporation"),
      I_("W.A. Robinson Asset Management Ltd."),
      I_("Walton International Group Inc."),
      I_("Waratah Capital Advisors Ltd."),
      I_("Wealthco Asset Management Inc."),
      I_("West Face Capital Inc."),
      I_("Yorkville Asset Management Inc."),
      I_("YTM Capital Asset Management Ltd."),
      I_("Zag Bank"),
      I_("EdgeHill Partners"),
      I_("Franklin Templeton Investments Corp."),
      I_("K.J. Harrison & Partners Inc."),
      I_("Newport Private Wealth Inc."),
      I_("Primerica Concert Series"),
      I_("Other"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_991_001_000_000;
   const BFSubstitutionSet SubSet_002_991_001_000_000(
    &aKeys_002_991_001_000_000[0], &aValues_002_991_001_000_000[0] );
   // Substitution set SearchExternalInstitutionSet.  Language: enUS
   static const I_CHAR* aKeys_002_992_001_000_000[] = {
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_992_001_000_000[] = {
      I_("External Institution"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_992_001_000_000;
   const BFSubstitutionSet SubSet_002_992_001_000_000(
    &aKeys_002_992_001_000_000[0], &aValues_002_992_001_000_000[0] );
   // Substitution set SearchExternalInstitutionSet.  Language: frCA
   static const I_CHAR* aKeys_002_992_005_000_000[] = {
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_992_005_000_000[] = {
      I_("Institution externe"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_992_005_000_000;
   const BFSubstitutionSet SubSet_002_992_005_000_000(
    &aKeys_002_992_005_000_000[0], &aValues_002_992_005_000_000[0] );
   // Substitution set SearchExternalInstitutionUsingSet.  Language: enUS
   static const I_CHAR* aKeys_002_993_001_000_000[] = {
      I_("00"),
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_993_001_000_000[] = {
      I_("Code"),
      I_("Name"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_993_001_000_000;
   const BFSubstitutionSet SubSet_002_993_001_000_000(
    &aKeys_002_993_001_000_000[0], &aValues_002_993_001_000_000[0] );
   // Substitution set SearchExternalInstitutionUsingSet.  Language: frCA
   static const I_CHAR* aKeys_002_993_005_000_000[] = {
      I_("00"),
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_993_005_000_000[] = {
      I_("Code"),
      I_("Nom"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_993_005_000_000;
   const BFSubstitutionSet SubSet_002_993_005_000_000(
    &aKeys_002_993_005_000_000[0], &aValues_002_993_005_000_000[0] );
   // Substitution set LV_ExternalInstitutionHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_994_005_000_000[] = {
      I_("CompanyCode"),
      I_("CompanyName"),
      0x00
   };

   static const I_CHAR* aValues_002_994_005_000_000[] = {
      I_("Code"),
      I_("Nom"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_994_005_000_000;
   const BFSubstitutionSet SubSet_002_994_005_000_000(
    &aKeys_002_994_005_000_000[0], &aValues_002_994_005_000_000[0] );
   // Substitution set LV_ExternalInstitutionHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_994_001_000_000[] = {
      I_("CompanyCode"),
      I_("CompanyName"),
      0x00
   };

   static const I_CHAR* aValues_002_994_001_000_000[] = {
      I_("Code"),
      I_("Name"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_994_001_000_000;
   const BFSubstitutionSet SubSet_002_994_001_000_000(
    &aKeys_002_994_001_000_000[0], &aValues_002_994_001_000_000[0] );
   // Substitution set LV_SystematicGridLeftHeadingCustomPayoutSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_995_005_003_000[] = {
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankAcctCurrency"),
      I_("SrcOfFund"),
      I_("SourceOfBankAcct"),
      I_("GrossOrNet"),
      I_("Fee"),
      I_("FeeCurrency"),
      I_("AdminFeeAmt"),
      I_("AdminFeeCurr"),
      I_("FlatPercent"),
      I_("SplitComm"),
      I_("FedTaxPUDOverride"),
      I_("FedRate"),
      I_("ProvTaxPUDOverride"),
      I_("ProvRate"),
      I_("BatchName"),
      I_("BatchTrace"),
      I_("StatusCode"),
      I_("StopReason"),
      I_("VerifyStat"),
      I_("NonFinConfirms"),
      I_("RDRAdvice"),
      I_("SourceOfTrade"),
      I_("ChannelOfTrade"),
      I_("Platform"),
      I_("PSDAdvice"),
      I_("SignatureDate"),
      I_("YearlyAmount"),
      I_("CPIRate"),
      0x00
   };

   static const I_CHAR* aValues_002_995_005_003_000[] = {
      I_("Méthode de paiement"),
      I_("Programme de traitement de fichier"),
      I_("Devise de règlement"),
      I_("Source des fonds"),
      I_("Source du compte"),
      I_("Brut/net"),
      I_("Frais"),
      I_("Monnaie des frais"),
      I_("Frais d'administration"),
      I_("Monnaie des frais d'administration"),
      I_("Pourcentage fixe"),
      I_("Partage de comm."),
      I_("Modification de l'impÃ´t fÃ©dÃ©ral"),
      I_("ImpÃ´t fÃ©dÃ©ral"),
      I_("Modification de l'impÃ´t provincial"),
      I_("ImpÃ´t provincial"),
      I_("Nom du lot"),
      I_("Trace du lot"),
      I_("Statut"),
      I_("Raison de l'arrêt"),
      I_("Vérifier le statut"),
      I_("Confirmations non financiÃ¨res"),
      I_("Conseil RDD"),
      I_("Source"),
      I_("Canal"),
      I_("Plate-Forme"),
      I_("PSD-Conseils"),
      I_("Signature Date"),
      I_("Effective Yearly Payout Amount"),
      I_("CPI Rate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_995_005_003_000;
   const BFSubstitutionSet SubSet_002_995_005_003_000(
    &aKeys_002_995_005_003_000[0], &aValues_002_995_005_003_000[0] );
   // Substitution set LV_SystematicGridLeftHeadingCustomPayoutSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_995_001_003_000[] = {
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankAcctCurrency"),
      I_("SrcOfFund"),
      I_("SourceOfBankAcct"),
      I_("GrossOrNet"),
      I_("Fee"),
      I_("FeeCurrency"),
      I_("AdminFeeAmt"),
      I_("AdminFeeCurr"),
      I_("FlatPercent"),
      I_("SplitComm"),
      I_("FedTaxPUDOverride"),
      I_("FedRate"),
      I_("ProvTaxPUDOverride"),
      I_("ProvRate"),
      I_("BatchName"),
      I_("BatchTrace"),
      I_("StatusCode"),
      I_("StopReason"),
      I_("VerifyStat"),
      I_("NonFinConfirms"),
      I_("RDRAdvice"),
      I_("SourceOfTrade"),
      I_("ChannelOfTrade"),
      I_("Platform"),
      I_("PSDAdvice"),
      I_("SignatureDate"),
      I_("YearlyAmount"),
      I_("CPIRate"),
      0x00
   };

   static const I_CHAR* aValues_002_995_001_003_000[] = {
      I_("Payment Method"),
      I_("File Processor"),
      I_("Settle Currency"),
      I_("Fund Source"),
      I_("Account Source"),
      I_("Gross/Net"),
      I_("Fee"),
      I_("Fee Currency"),
      I_("Admin Fee"),
      I_("Admin Fee Currency"),
      I_("Flat/Percentage"),
      I_("Split Commission"),
      I_("Override Fed Tax"),
      I_("Federal Tax"),
      I_("Override Prov Tax"),
      I_("Provincial Tax"),
      I_("Batch Name"),
      I_("Batch Trace"),
      I_("Status"),
      I_("Stop Reason"),
      I_("Verify Status"),
      I_("Non-Financial Confirms"),
      I_("RDR Advice"),
      I_("Source"),
      I_("Channel"),
      I_("Platform"),
      I_("PSD-Advice"),
      I_("Signature Date"),
      I_("Effective Yearly Payout Amount"),
      I_("CPI Rate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_995_001_003_000;
   const BFSubstitutionSet SubSet_002_995_001_003_000(
    &aKeys_002_995_001_003_000[0], &aValues_002_995_001_003_000[0] );
   // Substitution set LV_SystematicGridLeftHeadingCustomPayoutSet.  Language: frCA
   static const I_CHAR* aKeys_002_995_005_000_000[] = {
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankAcctCurrency"),
      I_("SrcOfFund"),
      I_("SourceOfBankAcct"),
      I_("GrossOrNet"),
      I_("Fee"),
      I_("FeeCurrency"),
      I_("AdminFeeAmt"),
      I_("AdminFeeCurr"),
      I_("FlatPercent"),
      I_("SplitComm"),
      I_("FedTaxPUDOverride"),
      I_("FedRate"),
      I_("ProvTaxPUDOverride"),
      I_("ProvRate"),
      I_("BatchName"),
      I_("BatchTrace"),
      I_("StatusCode"),
      I_("StopReason"),
      I_("VerifyStat"),
      I_("NonFinConfirms"),
      I_("RDRAdvice"),
      I_("EventReceiptDate"),
      I_("EventReceiptTime"),
      I_("SourceOfTrade"),
      I_("ChannelOfTrade"),
      I_("Platform"),
      I_("PSDAdvice"),
      I_("SignatureDate"),
      I_("YearlyAmount"),
      I_("CPIRate"),
      0x00
   };

   static const I_CHAR* aValues_002_995_005_000_000[] = {
      I_("Payment Method"),
      I_("File Processor"),
      I_("Settle Currency"),
      I_("Fund Source"),
      I_("Account Source"),
      I_("Gross/Net"),
      I_("Fee"),
      I_("Fee Currency"),
      I_("Admin Fee"),
      I_("Admin Fee Currency"),
      I_("Flat/Percentage"),
      I_("Split Commission"),
      I_("Override Fed Tax"),
      I_("Federal Tax"),
      I_("Override Prov Tax"),
      I_("Provincial Tax"),
      I_("Batch Name"),
      I_("Batch Trace"),
      I_("Status"),
      I_("Stop Reason"),
      I_("Verify Status"),
      I_("Non-Financial Confirms"),
      I_("RDR Advice"),
      I_("Event Receipt Date"),
      I_("Event Receipt Time"),
      I_("Source"),
      I_("Channel"),
      I_("Platform"),
      I_("PSD-Advice"),
      I_("Signature Date"),
      I_("Effective Yearly Payout Amount"),
      I_("CPI Rate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_995_005_000_000;
   const BFSubstitutionSet SubSet_002_995_005_000_000(
    &aKeys_002_995_005_000_000[0], &aValues_002_995_005_000_000[0] );
   // Substitution set LV_SystematicGridLeftHeadingCustomPayoutSet.  Language: enUS
   static const I_CHAR* aKeys_002_995_001_000_000[] = {
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankAcctCurrency"),
      I_("SrcOfFund"),
      I_("SourceOfBankAcct"),
      I_("GrossOrNet"),
      I_("Fee"),
      I_("FeeCurrency"),
      I_("AdminFeeAmt"),
      I_("AdminFeeCurr"),
      I_("FlatPercent"),
      I_("SplitComm"),
      I_("FedTaxPUDOverride"),
      I_("FedRate"),
      I_("ProvTaxPUDOverride"),
      I_("ProvRate"),
      I_("BatchName"),
      I_("BatchTrace"),
      I_("StatusCode"),
      I_("StopReason"),
      I_("VerifyStat"),
      I_("NonFinConfirms"),
      I_("RDRAdvice"),
      I_("EventReceiptDate"),
      I_("EventReceiptTime"),
      I_("SourceOfTrade"),
      I_("ChannelOfTrade"),
      I_("Platform"),
      I_("PSDAdvice"),
      I_("SignatureDate"),
      I_("YearlyAmount"),
      I_("CPIRate"),
      0x00
   };

   static const I_CHAR* aValues_002_995_001_000_000[] = {
      I_("Payment Method"),
      I_("File Processor"),
      I_("Settle Currency"),
      I_("Fund Source"),
      I_("Account Source"),
      I_("Gross/Net"),
      I_("Fee"),
      I_("Fee Currency"),
      I_("Admin Fee"),
      I_("Admin Fee Currency"),
      I_("Flat/Percentage"),
      I_("Split Commission"),
      I_("Override Fed Tax"),
      I_("Federal Tax"),
      I_("Override Prov Tax"),
      I_("Provincial Tax"),
      I_("Batch Name"),
      I_("Batch Trace"),
      I_("Status"),
      I_("Stop Reason"),
      I_("Verify Status"),
      I_("Non-Financial Confirms"),
      I_("RDR Advice"),
      I_("Event Receipt Date"),
      I_("Event Receipt Time"),
      I_("Source"),
      I_("Channel"),
      I_("Platform"),
      I_("PSD-Advice"),
      I_("Signature Date"),
      I_("Effective Yearly Payout Amount"),
      I_("CPI Rate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_995_001_000_000;
   const BFSubstitutionSet SubSet_002_995_001_000_000(
    &aKeys_002_995_001_000_000[0], &aValues_002_995_001_000_000[0] );
   // Substitution set LV_SystematicGridLeftHeadingPortfolioPayoutSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_996_005_003_000[] = {
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankAcctCurrency"),
      I_("SrcOfFund"),
      I_("SourceOfBankAcct"),
      I_("GrossOrNet"),
      I_("Fee"),
      I_("FeeCurrency"),
      I_("AdminFeeAmt"),
      I_("AdminFeeCurr"),
      I_("FlatPercent"),
      I_("SplitComm"),
      I_("FedTaxPUDOverride"),
      I_("FedRate"),
      I_("ProvTaxPUDOverride"),
      I_("ProvRate"),
      I_("BatchName"),
      I_("BatchTrace"),
      I_("StatusCode"),
      I_("StopReason"),
      I_("VerifyStat"),
      I_("NonFinConfirms"),
      I_("RDRAdvice"),
      I_("SourceOfTrade"),
      I_("ChannelOfTrade"),
      I_("Platform"),
      I_("PSDAdvice"),
      I_("SignatureDate"),
      I_("YearlyAmount"),
      I_("CPIRate"),
      I_("PayoutFactorRate"),
      0x00
   };

   static const I_CHAR* aValues_002_996_005_003_000[] = {
      I_("Méthode de paiement"),
      I_("Programme de traitement de fichier"),
      I_("Devise de règlement"),
      I_("Source des fonds"),
      I_("Source du compte"),
      I_("Brut/net"),
      I_("Frais"),
      I_("Monnaie des frais"),
      I_("Frais d'administration"),
      I_("Monnaie des frais d'administration"),
      I_("Pourcentage fixe"),
      I_("Partage de comm."),
      I_("Modification de l'impÃ´t fÃ©dÃ©ral"),
      I_("ImpÃ´t fÃ©dÃ©ral"),
      I_("Modification de l'impÃ´t provincial"),
      I_("ImpÃ´t provincial"),
      I_("Nom du lot"),
      I_("Trace du lot"),
      I_("Statut"),
      I_("Raison de l'arrêt"),
      I_("Vérifier le statut"),
      I_("Confirmations non financiÃ¨res"),
      I_("Conseil RDD"),
      I_("Source"),
      I_("Canal"),
      I_("Plate-Forme"),
      I_("PSD-Conseils"),
      I_("Signature Date"),
      I_("Effective Yearly Payout Amount"),
      I_("CPI Rate"),
      I_("Payout Factor Rate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_996_005_003_000;
   const BFSubstitutionSet SubSet_002_996_005_003_000(
    &aKeys_002_996_005_003_000[0], &aValues_002_996_005_003_000[0] );
   // Substitution set LV_SystematicGridLeftHeadingPortfolioPayoutSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_996_001_003_000[] = {
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankAcctCurrency"),
      I_("SrcOfFund"),
      I_("SourceOfBankAcct"),
      I_("GrossOrNet"),
      I_("Fee"),
      I_("FeeCurrency"),
      I_("AdminFeeAmt"),
      I_("AdminFeeCurr"),
      I_("FlatPercent"),
      I_("SplitComm"),
      I_("FedTaxPUDOverride"),
      I_("FedRate"),
      I_("ProvTaxPUDOverride"),
      I_("ProvRate"),
      I_("BatchName"),
      I_("BatchTrace"),
      I_("StatusCode"),
      I_("StopReason"),
      I_("VerifyStat"),
      I_("NonFinConfirms"),
      I_("RDRAdvice"),
      I_("SourceOfTrade"),
      I_("ChannelOfTrade"),
      I_("Platform"),
      I_("PSDAdvice"),
      I_("SignatureDate"),
      I_("YearlyAmount"),
      I_("CPIRate"),
      I_("PayoutFactorRate"),
      0x00
   };

   static const I_CHAR* aValues_002_996_001_003_000[] = {
      I_("Payment Method"),
      I_("File Processor"),
      I_("Settle Currency"),
      I_("Fund Source"),
      I_("Account Source"),
      I_("Gross/Net"),
      I_("Fee"),
      I_("Fee Currency"),
      I_("Admin Fee"),
      I_("Admin Fee Currency"),
      I_("Flat/Percentage"),
      I_("Split Commission"),
      I_("Override Fed Tax"),
      I_("Federal Tax"),
      I_("Override Prov Tax"),
      I_("Provincial Tax"),
      I_("Batch Name"),
      I_("Batch Trace"),
      I_("Status"),
      I_("Stop Reason"),
      I_("Verify Status"),
      I_("Non-Financial Confirms"),
      I_("RDR Advice"),
      I_("Source"),
      I_("Channel"),
      I_("Platform"),
      I_("PSD-Advice"),
      I_("Signature Date"),
      I_("Effective Yearly Payout Amount"),
      I_("CPI Rate"),
      I_("Payout Factor Rate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_996_001_003_000;
   const BFSubstitutionSet SubSet_002_996_001_003_000(
    &aKeys_002_996_001_003_000[0], &aValues_002_996_001_003_000[0] );
   // Substitution set LV_SystematicGridLeftHeadingPortfolioPayoutSet.  Language: frCA
   static const I_CHAR* aKeys_002_996_005_000_000[] = {
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankAcctCurrency"),
      I_("SrcOfFund"),
      I_("SourceOfBankAcct"),
      I_("GrossOrNet"),
      I_("Fee"),
      I_("FeeCurrency"),
      I_("AdminFeeAmt"),
      I_("AdminFeeCurr"),
      I_("FlatPercent"),
      I_("SplitComm"),
      I_("FedTaxPUDOverride"),
      I_("FedRate"),
      I_("ProvTaxPUDOverride"),
      I_("ProvRate"),
      I_("BatchName"),
      I_("BatchTrace"),
      I_("StatusCode"),
      I_("StopReason"),
      I_("VerifyStat"),
      I_("NonFinConfirms"),
      I_("RDRAdvice"),
      I_("SourceOfTrade"),
      I_("ChannelOfTrade"),
      I_("Platform"),
      I_("PSDAdvice"),
      I_("SignatureDate"),
      I_("YearlyAmount"),
      I_("CPIRate"),
      I_("PayoutFactorRate"),
      0x00
   };

   static const I_CHAR* aValues_002_996_005_000_000[] = {
      I_("Méthode de paiement"),
      I_("Programme de traitement de fichier"),
      I_("Devise de règlement"),
      I_("Source des fonds"),
      I_("Source du compte"),
      I_("Brut/net"),
      I_("Frais"),
      I_("Monnaie des frais"),
      I_("Frais d'administration"),
      I_("Monnaie des frais d'administration"),
      I_("Pourcentage fixe"),
      I_("Partage de comm."),
      I_("Modification de l'impÃ´t fÃ©dÃ©ral"),
      I_("ImpÃ´t fÃ©dÃ©ral"),
      I_("Modification de l'impÃ´t provincial"),
      I_("ImpÃ´t provincial"),
      I_("Nom du lot"),
      I_("Trace du lot"),
      I_("Statut"),
      I_("Raison de l'arrêt"),
      I_("Vérifier le statut"),
      I_("Confirmations non financiÃ¨res"),
      I_("Conseil RDD"),
      I_("Source"),
      I_("Canal"),
      I_("Plate-Forme"),
      I_("PSD-Conseils"),
      I_("Signature Date"),
      I_("Effective Yearly Payout Amount"),
      I_("CPI Rate"),
      I_("Payout Factor Rate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_996_005_000_000;
   const BFSubstitutionSet SubSet_002_996_005_000_000(
    &aKeys_002_996_005_000_000[0], &aValues_002_996_005_000_000[0] );
   // Substitution set LV_SystematicGridLeftHeadingPortfolioPayoutSet.  Language: enUS
   static const I_CHAR* aKeys_002_996_001_000_000[] = {
      I_("PayMethod"),
      I_("ACHProcessor"),
      I_("BankAcctCurrency"),
      I_("SrcOfFund"),
      I_("SourceOfBankAcct"),
      I_("GrossOrNet"),
      I_("Fee"),
      I_("FeeCurrency"),
      I_("AdminFeeAmt"),
      I_("AdminFeeCurr"),
      I_("FlatPercent"),
      I_("SplitComm"),
      I_("FedTaxPUDOverride"),
      I_("FedRate"),
      I_("ProvTaxPUDOverride"),
      I_("ProvRate"),
      I_("BatchName"),
      I_("BatchTrace"),
      I_("StatusCode"),
      I_("StopReason"),
      I_("VerifyStat"),
      I_("NonFinConfirms"),
      I_("RDRAdvice"),
      I_("EventReceiptDate"),
      I_("EventReceiptTime"),
      I_("SourceOfTrade"),
      I_("ChannelOfTrade"),
      I_("Platform"),
      I_("PSDAdvice"),
      I_("SignatureDate"),
      I_("YearlyAmount"),
      I_("CPIRate"),
      I_("PayoutFactorRate"),
      0x00
   };

   static const I_CHAR* aValues_002_996_001_000_000[] = {
      I_("Payment Method"),
      I_("File Processor"),
      I_("Settle Currency"),
      I_("Fund Source"),
      I_("Account Source"),
      I_("Gross/Net"),
      I_("Fee"),
      I_("Fee Currency"),
      I_("Admin Fee"),
      I_("Admin Fee Currency"),
      I_("Flat/Percentage"),
      I_("Split Commission"),
      I_("Override Fed Tax"),
      I_("Federal Tax"),
      I_("Override Prov Tax"),
      I_("Provincial Tax"),
      I_("Batch Name"),
      I_("Batch Trace"),
      I_("Status"),
      I_("Stop Reason"),
      I_("Verify Status"),
      I_("Non-Financial Confirms"),
      I_("RDR Advice"),
      I_("Event Receipt Date"),
      I_("Event Receipt Time"),
      I_("Source"),
      I_("Channel"),
      I_("Platform"),
      I_("PSD-Advice"),
      I_("Signature Date"),
      I_("Effective Yearly Payout Amount"),
      I_("CPI Rate"),
      I_("Payout Factor Rate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_996_001_000_000;
   const BFSubstitutionSet SubSet_002_996_001_000_000(
    &aKeys_002_996_001_000_000[0], &aValues_002_996_001_000_000[0] );
   // Substitution set SWPAmountTypeAllocCustomPayoutSet.  Language: frCA
   static const I_CHAR* aKeys_002_997_005_000_000[] = {
      I_("D"),
      0x00
   };

   static const I_CHAR* aValues_002_997_005_000_000[] = {
      I_("Custom"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_997_005_000_000;
   const BFSubstitutionSet SubSet_002_997_005_000_000(
    &aKeys_002_997_005_000_000[0], &aValues_002_997_005_000_000[0] );
   // Substitution set SWPAmountTypeAllocCustomPayoutSet.  Language: enUS
   static const I_CHAR* aKeys_002_997_001_000_000[] = {
      I_("D"),
      0x00
   };

   static const I_CHAR* aValues_002_997_001_000_000[] = {
      I_("Custom"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_997_001_000_000;
   const BFSubstitutionSet SubSet_002_997_001_000_000(
    &aKeys_002_997_001_000_000[0], &aValues_002_997_001_000_000[0] );
   // Substitution set AmountTypeSettleCurrCustomPayoutSet.  Language: frCA
   static const I_CHAR* aKeys_002_998_005_000_000[] = {
      I_("D"),
      0x00
   };

   static const I_CHAR* aValues_002_998_005_000_000[] = {
      I_("Custom"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_998_005_000_000;
   const BFSubstitutionSet SubSet_002_998_005_000_000(
    &aKeys_002_998_005_000_000[0], &aValues_002_998_005_000_000[0] );
   // Substitution set AmountTypeSettleCurrCustomPayoutSet.  Language: enUS
   static const I_CHAR* aKeys_002_998_001_000_000[] = {
      I_("D"),
      0x00
   };

   static const I_CHAR* aValues_002_998_001_000_000[] = {
      I_("Custom"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_998_001_000_000;
   const BFSubstitutionSet SubSet_002_998_001_000_000(
    &aKeys_002_998_001_000_000[0], &aValues_002_998_001_000_000[0] );
   // Substitution set SWPAmountTypeAllocPortfolioPayoutSet.  Language: frCA
   static const I_CHAR* aKeys_002_999_005_000_000[] = {
      I_("D"),
      0x00
   };

   static const I_CHAR* aValues_002_999_005_000_000[] = {
      I_("Portfolio"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_999_005_000_000;
   const BFSubstitutionSet SubSet_002_999_005_000_000(
    &aKeys_002_999_005_000_000[0], &aValues_002_999_005_000_000[0] );
   // Substitution set SWPAmountTypeAllocPortfolioPayoutSet.  Language: enUS
   static const I_CHAR* aKeys_002_999_001_000_000[] = {
      I_("D"),
      0x00
   };

   static const I_CHAR* aValues_002_999_001_000_000[] = {
      I_("Portfolio"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_999_001_000_000;
   const BFSubstitutionSet SubSet_002_999_001_000_000(
    &aKeys_002_999_001_000_000[0], &aValues_002_999_001_000_000[0] );
   // Substitution set OrderRoutingSet.  Language: enUS
   static const I_CHAR* aKeys_002_1020_001_000_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   static const I_CHAR* aValues_002_1020_001_000_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1020_001_000_000;
   const BFSubstitutionSet SubSet_002_1020_001_000_000(
    &aKeys_002_1020_001_000_000[0], &aValues_002_1020_001_000_000[0] );
	// Substitution set OrderRoutingSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_1020_001_003_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   static const I_CHAR* aValues_002_1020_001_003_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1020_001_003_000;
   const BFSubstitutionSet SubSet_002_1020_001_003_000(
    &aKeys_002_1020_001_003_000[0], &aValues_002_1020_001_003_000[0] );
   // Substitution set OrderRoutingSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_1020_005_003_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   static const I_CHAR* aValues_002_1020_005_003_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1020_005_003_000;
   const BFSubstitutionSet SubSet_002_1020_005_003_000(
    &aKeys_002_1020_005_003_000[0], &aValues_002_1020_005_003_000[0] );
	// Substitution set OrderRoutingSet.  Language: frCA
   static const I_CHAR* aKeys_002_1020_005_000_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   static const I_CHAR* aValues_002_1020_005_000_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1020_005_000_000;
   const BFSubstitutionSet SubSet_002_1020_005_000_000(
    &aKeys_002_1020_005_000_000[0], &aValues_002_1020_005_000_000[0] );
	 // Substitution set OrderRoutingSet.  Language: deDE
   static const I_CHAR* aKeys_002_1020_007_000_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   static const I_CHAR* aValues_002_1020_007_000_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1020_007_000_000;
   const BFSubstitutionSet SubSet_002_1020_007_000_000(
    &aKeys_002_1020_007_000_000[0], &aValues_002_1020_007_000_000[0] );
	   // Substitution set OrderRoutingSet.  Language: deDE, Market: 3
   static const I_CHAR* aKeys_002_1020_007_003_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   static const I_CHAR* aValues_002_1020_007_003_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1020_007_003_000;
   const BFSubstitutionSet SubSet_002_1020_007_003_000(
    &aKeys_002_1020_007_003_000[0], &aValues_002_1020_007_003_000[0] );
	// Substitution set OrderRoutingSet.  Language: deDE, Market: 4
   static const I_CHAR* aKeys_002_1020_007_004_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   static const I_CHAR* aValues_002_1020_007_004_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1020_007_004_000;
   const BFSubstitutionSet SubSet_002_1020_007_004_000(
    &aKeys_002_1020_007_004_000[0], &aValues_002_1020_007_004_000[0] );
   // Substitution set OrderRoutingSet.  Language: frCA, Market: 4
   static const I_CHAR* aKeys_002_1020_005_004_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   static const I_CHAR* aValues_002_1020_005_004_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1020_005_004_000;
   const BFSubstitutionSet SubSet_002_1020_005_004_000(
    &aKeys_002_1020_005_004_000[0], &aValues_002_1020_005_004_000[0] );
   // Substitution set OrderRoutingSet.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_1020_001_004_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   static const I_CHAR* aValues_002_1020_001_004_000[] = {
      I_("Include"),
      I_("Exclude"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1020_001_004_000;
   const BFSubstitutionSet SubSet_002_1020_001_004_000(
    &aKeys_002_1020_001_004_000[0], &aValues_002_1020_001_004_000[0] );
   // Substitution set AMSHypocalcRebalSet.  Language: enUS
   static const I_CHAR* aKeys_002_1021_001_000_000[] = {
      I_("StartDate"),
      I_("InclPending"),
      I_("AMSCode"),
      I_("AccountNum"),
      I_("GlobalLevelRebal"),
      I_("AccountLevelRebal"),
      0x00
   };

   static const I_CHAR* aValues_002_1021_001_000_000[] = {
      I_("Trade Date"),
      I_("Include Pending Trades"),
      I_("AMS Code"),
      I_("Account Number"),
      I_("Global Level Rebalance"),
      I_("Account Level Rebalance"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1021_001_000_000;
   const BFSubstitutionSet SubSet_002_1021_001_000_000(
    &aKeys_002_1021_001_000_000[0], &aValues_002_1021_001_000_000[0] );
   // Substitution set AMSHypocalcRebalSet.  Language: frCA
   static const I_CHAR* aKeys_002_1021_005_000_000[] = {
      I_("StartDate"),
      I_("InclPending"),
      I_("AMSCode"),
      I_("AccountNum"),
      I_("GlobalLevelRebal"),
      I_("AccountLevelRebal"),
      0x00
   };

   static const I_CHAR* aValues_002_1021_005_000_000[] = {
      I_("Date de transaction"),
      I_("Inclure les transactions en suspens"),
      I_("Code SGP"),
      I_("Numéro de compte"),
      I_("Rééquilibrage au niveau mondial"),
      I_("Rééquilibrage au niveau du compte"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1021_005_000_000;
   const BFSubstitutionSet SubSet_002_1021_005_000_000(
    &aKeys_002_1021_005_000_000[0], &aValues_002_1021_005_000_000[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 25
   static const I_CHAR* aKeys_002_1022_001_004_025[] = {

      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };
   static const I_CHAR* aValues_002_1022_001_004_025[] = {

      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_025;
   const BFSubstitutionSet SubSet_002_1022_001_004_025(
    &aKeys_002_1022_001_004_025[0], &aValues_002_1022_001_004_025[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 24
   static const I_CHAR* aKeys_002_1022_001_004_024[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_024[] = {
      I_("Not Applicable"),
      I_("Individual"),
	  I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_024;
   const BFSubstitutionSet SubSet_002_1022_001_004_024(
    &aKeys_002_1022_001_004_024[0], &aValues_002_1022_001_004_024[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 23
   static const I_CHAR* aKeys_002_1022_001_004_023[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_023[] = {
      I_("Not Applicable"),
      I_("Individual"),
	  I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_023;
   const BFSubstitutionSet SubSet_002_1022_001_004_023(
    &aKeys_002_1022_001_004_023[0], &aValues_002_1022_001_004_023[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 22
   static const I_CHAR* aKeys_002_1022_001_004_022[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_022[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_022;
   const BFSubstitutionSet SubSet_002_1022_001_004_022(
    &aKeys_002_1022_001_004_022[0], &aValues_002_1022_001_004_022[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 21
   static const I_CHAR* aKeys_002_1022_001_004_021[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_021[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_021;
   const BFSubstitutionSet SubSet_002_1022_001_004_021(
    &aKeys_002_1022_001_004_021[0], &aValues_002_1022_001_004_021[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 20
   static const I_CHAR* aKeys_002_1022_001_004_020[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_020[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_020;
   const BFSubstitutionSet SubSet_002_1022_001_004_020(
    &aKeys_002_1022_001_004_020[0], &aValues_002_1022_001_004_020[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 19
   static const I_CHAR* aKeys_002_1022_001_004_019[] = {
	   I_("00"),
	   I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_019[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_019;
   const BFSubstitutionSet SubSet_002_1022_001_004_019(
    &aKeys_002_1022_001_004_019[0], &aValues_002_1022_001_004_019[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 18
   static const I_CHAR* aKeys_002_1022_001_004_018[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_018[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_018;
   const BFSubstitutionSet SubSet_002_1022_001_004_018(
    &aKeys_002_1022_001_004_018[0], &aValues_002_1022_001_004_018[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 17
   static const I_CHAR* aKeys_002_1022_001_004_017[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_017[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_017;
   const BFSubstitutionSet SubSet_002_1022_001_004_017(
    &aKeys_002_1022_001_004_017[0], &aValues_002_1022_001_004_017[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 16
   static const I_CHAR* aKeys_002_1022_001_004_016[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_016[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_016;
   const BFSubstitutionSet SubSet_002_1022_001_004_016(
    &aKeys_002_1022_001_004_016[0], &aValues_002_1022_001_004_016[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 15
   static const I_CHAR* aKeys_002_1022_001_004_015[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_015[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_015;
   const BFSubstitutionSet SubSet_002_1022_001_004_015(
    &aKeys_002_1022_001_004_015[0], &aValues_002_1022_001_004_015[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 14
   static const I_CHAR* aKeys_002_1022_001_004_014[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_014[] = {
      I_("Not Applicable"),
      I_("Individual"),
	  I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_014;
   const BFSubstitutionSet SubSet_002_1022_001_004_014(
    &aKeys_002_1022_001_004_014[0], &aValues_002_1022_001_004_014[0] );
   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 13

   static const I_CHAR* aKeys_002_1022_001_004_013[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

  static const I_CHAR* aValues_002_1022_001_004_013[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_013;
   const BFSubstitutionSet SubSet_002_1022_001_004_013(
    &aKeys_002_1022_001_004_013[0], &aValues_002_1022_001_004_013[0] );
   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 12

   static const I_CHAR* aKeys_002_1022_001_004_012[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_012[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_012;
   const BFSubstitutionSet SubSet_002_1022_001_004_012(
    &aKeys_002_1022_001_004_012[0], &aValues_002_1022_001_004_012[0] );
   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 11

   static const I_CHAR* aKeys_002_1022_001_004_011[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_011[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_011;
   const BFSubstitutionSet SubSet_002_1022_001_004_011(
    &aKeys_002_1022_001_004_011[0], &aValues_002_1022_001_004_011[0] );
   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 10

   static const I_CHAR* aKeys_002_1022_001_004_010[] = {
      I_("00"),

      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_010[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_010;
   const BFSubstitutionSet SubSet_002_1022_001_004_010(
    &aKeys_002_1022_001_004_010[0], &aValues_002_1022_001_004_010[0] );
   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 9

   static const I_CHAR* aKeys_002_1022_001_004_009[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_009[] = {
	   I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_009;
   const BFSubstitutionSet SubSet_002_1022_001_004_009(
    &aKeys_002_1022_001_004_009[0], &aValues_002_1022_001_004_009[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 8
   static const I_CHAR* aKeys_002_1022_001_004_008[] = {
      I_("00"),
     I_("01"),
      I_("02"),
      I_("03"),
     I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_008[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
	 I_("Superannuation"),
     I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_008;
   const BFSubstitutionSet SubSet_002_1022_001_004_008(
    &aKeys_002_1022_001_004_008[0], &aValues_002_1022_001_004_008[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 7
   static const I_CHAR* aKeys_002_1022_001_004_007[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_007[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
      I_("Superannuation"),
	  I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_007;
   const BFSubstitutionSet SubSet_002_1022_001_004_007(
    &aKeys_002_1022_001_004_007[0], &aValues_002_1022_001_004_007[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 6
   static const I_CHAR* aKeys_002_1022_001_004_006[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
     I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
     0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_006[] = {
      I_("Not Applicable"),
      I_("Individual"),
      I_("Corporate"),
	  I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_006;
   const BFSubstitutionSet SubSet_002_1022_001_004_006(
    &aKeys_002_1022_001_004_006[0], &aValues_002_1022_001_004_006[0] );

   // Substitution set TaxModelSet.  Language: enUS, Market: 4, Client: 5
   static const I_CHAR* aKeys_002_1022_001_004_005[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_005[] = {
      I_("Not Applicable"),
	  I_("Individual"),
	  I_("Corporate"),
      I_("Superannuation"),
      I_("Trust"),
      I_("Individual Non-MIT"),
      I_("Corporate Non-MIT"),
      I_("Superannuation Non-MIT"),
      I_("Trust Non-MIT"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1022_001_004_005;
   const BFSubstitutionSet SubSet_002_1022_001_004_005(
    &aKeys_002_1022_001_004_005[0], &aValues_002_1022_001_004_005[0] );

	// Substitution set TaxModelSet.  Language: frCA
   static const I_CHAR* aKeys_002_1022_005_000_000[] = {

      I_("00"),

      0x00
   };

   static const I_CHAR* aValues_002_1022_005_000_000[] = {

      I_("Not Applicable"),

      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1022_005_000_000;
   const BFSubstitutionSet SubSet_002_1022_005_000_000(
    &aKeys_002_1022_005_000_000[0], &aValues_002_1022_005_000_000[0] );

	// Substitution set TaxModelSet.  Language: frCA, Market: 3
   static const I_CHAR* aKeys_002_1022_005_003_000[] = {

      I_("00"),

      0x00
   };

   static const I_CHAR* aValues_002_1022_005_003_000[] = {

      I_("Not Applicable"),

	  0x00
   };

   extern const BFSubstitutionSet SubSet_002_1022_005_003_000;
   const BFSubstitutionSet SubSet_002_1022_005_003_000(
    &aKeys_002_1022_005_003_000[0], &aValues_002_1022_005_003_000[0] );

 // Substitution set TaxModelSet.  Language: enUS, Market: 4
   static const I_CHAR* aKeys_002_1022_001_004_000[] = {

      I_("00"),
	  0x00
   };

   static const I_CHAR* aValues_002_1022_001_004_000[] = {

      I_("Not Applicable"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1022_001_004_000;
   const BFSubstitutionSet SubSet_002_1022_001_004_000(
    &aKeys_002_1022_001_004_000[0], &aValues_002_1022_001_004_000[0] );



   // Substitution set TaxModelSet.  Language: enUS

   static const I_CHAR* aKeys_002_1022_001_000_000[] = {

	   I_("00"),

      0x00

   };



   static const I_CHAR* aValues_002_1022_001_000_000[] = {



      I_("Not Applicable"),

      0x00

   };
   extern const BFSubstitutionSet SubSet_002_1022_001_000_000;
   const BFSubstitutionSet SubSet_002_1022_001_000_000(
    &aKeys_002_1022_001_000_000[0], &aValues_002_1022_001_000_000[0] );
   // Substitution set LV_AMSDeltaAllocHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_1023_001_000_000[] = {
      I_("FundCode"),
      I_("ClassCode"),
      I_("ToFundNumber"),
      I_("AllocPercentage"),
      I_("AMSAllocDelta"),
      0x00
   };

   static const I_CHAR* aValues_002_1023_001_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Asset Allocation"),
      I_("Delta Percentage"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1023_001_000_000;
   const BFSubstitutionSet SubSet_002_1023_001_000_000(
    &aKeys_002_1023_001_000_000[0], &aValues_002_1023_001_000_000[0] );
   // Substitution set LV_AMSDeltaAllocHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_1023_005_000_000[] = {
      I_("FundCode"),
      I_("ClassCode"),
      I_("ToFundNumber"),
      I_("AllocPercentage"),
      I_("AMSAllocDelta"),
      0x00
   };

   static const I_CHAR* aValues_002_1023_005_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("Asset Allocation"),
      I_("Delta Percentage"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1023_005_000_000;
   const BFSubstitutionSet SubSet_002_1023_005_000_000(
    &aKeys_002_1023_005_000_000[0], &aValues_002_1023_005_000_000[0] );

   // Substitution set DistributionSplitType.  Language: enUS
   static const I_CHAR* aKeys_002_1026_001_000_000[] = {

      I_("01"),

      I_("02"),

      0x00
   };

   static const I_CHAR* aValues_002_1026_001_000_000[] = {

      I_("Account Level"),

      I_("Fund/Class level"),

      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1026_001_000_000;
   const BFSubstitutionSet SubSet_002_1026_001_000_000(
    &aKeys_002_1026_001_000_000[0], &aValues_002_1026_001_000_000[0] );
   // Substitution set DistributionSplitType.  Language: frCA
   static const I_CHAR* aKeys_002_1026_005_000_000[] = {

      I_("01"),

      I_("02"),

      0x00
   };

   static const I_CHAR* aValues_002_1026_005_000_000[] = {

      I_("Account Level"),

      I_("Fund/Class level"),

      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1026_005_000_000;
   const BFSubstitutionSet SubSet_002_1026_005_000_000(
    &aKeys_002_1026_005_000_000[0], &aValues_002_1026_005_000_000[0] );
   // Substitution set AmountTypeSettleCurrPortfolioPayoutSet.  Language: frCA
   static const I_CHAR* aKeys_002_1000_005_000_000[] = {
      I_("D"),
      0x00
   };

   static const I_CHAR* aValues_002_1000_005_000_000[] = {
      I_("Portfolio"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1000_005_000_000;
   const BFSubstitutionSet SubSet_002_1000_005_000_000(
    &aKeys_002_1000_005_000_000[0], &aValues_002_1000_005_000_000[0] );
   // Substitution set AmountTypeSettleCurrPortfolioPayoutSet.  Language: enUS
   static const I_CHAR* aKeys_002_1000_001_000_000[] = {
      I_("D"),
      0x00
   };

   static const I_CHAR* aValues_002_1000_001_000_000[] = {
      I_("Portfolio"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1000_001_000_000;
   const BFSubstitutionSet SubSet_002_1000_001_000_000(
    &aKeys_002_1000_001_000_000[0], &aValues_002_1000_001_000_000[0] );

   // Substitution set LV_AccDetailsFundsCFHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_1027_001_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("Baycom"),
      I_("FundNAV"),
      I_("SettledUnits"),
      I_("SettledValue"),
      I_("Currency"),
      I_("rxOpenDate"),
      I_("rxCloseDate"),
      0x00
   };

   static const I_CHAR* aValues_002_1027_001_000_000[] = {
      I_("Fund"),
      I_("Class"),
      I_("Number"),
      I_("NAV"),
      I_("Settled Units"),
      I_("Market Value"),
      I_("Fund Currency"),
      I_("Open Date"),
      I_("Close Date"),
      0x00
   };
   extern const BFSubstitutionSet SubSet_002_1027_001_000_000;
   const BFSubstitutionSet SubSet_002_1027_001_000_000(
    &aKeys_002_1027_001_000_000[0], &aValues_002_1027_001_000_000[0] );

// Substitution set LV_AccDetailsFundsCFHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_1027_005_000_000[] = {
      I_("rxFundCode"),
      I_("rxClassCode"),
      I_("Baycom"),
      I_("FundNAV"),
      I_("SettledUnits"),
      I_("SettledValue"),
      I_("Currency"),
      I_("rxOpenDate"),
      I_("rxCloseDate"),
      0x00
   };

   static const I_CHAR* aValues_002_1027_005_000_000[] = {
      I_("Fonds"),
      I_("Classe"),
      I_("Numéro"),
      I_("Valeur de l'actif net"),
      I_("Unités réglées"),
      I_("Valeur marchande"),
      I_("Devise du fonds"),
      I_("Open Date"),
      I_("Close Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1027_005_000_000;
   const BFSubstitutionSet SubSet_002_1027_005_000_000(
    &aKeys_002_1027_005_000_000[0], &aValues_002_1027_005_000_000[0] );

   // Substitution set RDSPRelntoBeneSet.  Language: frCA
   static const I_CHAR* aKeys_002_1028_005_000_000[] = {
      I_("SF"),
      I_("FM"),
      I_("LR"),
      I_("GD"),
      I_("TR"),
      I_("CR"),
      I_("LP"),
      I_("PD"),
      I_("AG"),
      I_("IT"),
      0x00
   };

   static const I_CHAR* aValues_002_1028_005_000_000[] = {
      I_("Self"),
      I_("Qualified Family Member"),
      I_("Legal Representative"),
      I_("Guardian"),
      I_("Tutor"),
      I_("Curator"),
      I_("Legal Parent"),
      I_("Public Department"),
      I_("Agency"),
      I_("Institution"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1028_005_000_000;
   const BFSubstitutionSet SubSet_002_1028_005_000_000(
    &aKeys_002_1028_005_000_000[0], &aValues_002_1028_005_000_000[0] );

   // Substitution set RDSPRelntoBeneSet.  Language: enUS
   static const I_CHAR* aKeys_002_1028_001_000_000[] = {
      I_("SF"),
      I_("FM"),
      I_("LR"),
      I_("GD"),
      I_("TR"),
      I_("CR"),
      I_("LP"),
      I_("PD"),
      I_("AG"),
      I_("IT"),
      0x00
   };

   static const I_CHAR* aValues_002_1028_001_000_000[] = {
      I_("Self"),
      I_("Qualified Family Member"),
      I_("Legal Representative"),
      I_("Guardian"),
      I_("Tutor"),
      I_("Curator"),
      I_("Legal Parent"),
      I_("Public Department"),
      I_("Agency"),
      I_("Institution"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1028_001_000_000;
   const BFSubstitutionSet SubSet_002_1028_001_000_000(
    &aKeys_002_1028_001_000_000[0], &aValues_002_1028_001_000_000[0] );

   // Substitution set AccountClosingReasonRDSPSet.  Language: frCA
   static const I_CHAR* aKeys_002_1029_005_000_000[] = {
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_1029_005_000_000[] = {
      I_("Death of Beneficiary"),
      I_("Loss of DTC"),
      I_("Transfer"),
      I_("Plan De-Registered"),
      I_("Other Reason"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1029_005_000_000;
   const BFSubstitutionSet SubSet_002_1029_005_000_000(
    &aKeys_002_1029_005_000_000[0], &aValues_002_1029_005_000_000[0] );

   // Substitution set AccountClosingReasonRDSPSet.  Language: enUS
   static const I_CHAR* aKeys_002_1029_001_000_000[] = {
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("99"),
      0x00
   };

   static const I_CHAR* aValues_002_1029_001_000_000[] = {
      I_("Death of Beneficiary"),
      I_("Loss of DTC"),
      I_("Transfer"),
      I_("Plan De-Registered"),
      I_("Other Reason"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1029_001_000_000;
   const BFSubstitutionSet SubSet_002_1029_001_000_000(
    &aKeys_002_1029_001_000_000[0], &aValues_002_1029_001_000_000[0] );

   // Substitution set GrantRepayReasonSetRDSP.  Language: frCA
   static const I_CHAR* aKeys_002_1030_005_000_000[] = {
      I_("DP"),
      I_("LP"),
      I_("CT"),
      I_("CR"),
      I_("BD"),
      I_("DB"),
      I_("NE"),
      I_("BP"),
      0x00
   };

   static const I_CHAR* aValues_002_1030_005_000_000[] = {
      I_("DAP"),
      I_("LDAP"),
      I_("Contract terminated"),
      I_("Contract ceases to be registered"),
      I_("Beneficiary ceases to be DTC eligible"),
      I_("Death of Beneficiary"),
      I_("Non entitlement"),
      I_("Bond payment rectification"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1030_005_000_000;
   const BFSubstitutionSet SubSet_002_1030_005_000_000(
    &aKeys_002_1030_005_000_000[0], &aValues_002_1030_005_000_000[0] );
   // Substitution set GrantRepayReasonSetRDSP.  Language: enUS
   static const I_CHAR* aKeys_002_1030_001_000_000[] = {
      I_("DP"),
      I_("LP"),
      I_("CT"),
      I_("CR"),
      I_("BD"),
      I_("DB"),
      I_("NE"),
      I_("BP"),
      0x00
   };

   static const I_CHAR* aValues_002_1030_001_000_000[] = {
      I_("DAP"),
      I_("LDAP"),
      I_("Contract terminated"),
      I_("Contract ceases to be registered"),
      I_("Beneficiary ceases to be DTC eligible"),
      I_("Death of Beneficiary"),
      I_("Non entitlement"),
      I_("Bond payment rectification"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1030_001_000_000;
   const BFSubstitutionSet SubSet_002_1030_001_000_000(
    &aKeys_002_1030_001_000_000[0], &aValues_002_1030_001_000_000[0] );

   // Substitution set FullMoneyOutIndcSet.  Language: frCA
   static const I_CHAR* aKeys_002_1031_005_000_000[] = {
      I_("ALLFND"),
      0x00
   };

   static const I_CHAR* aValues_002_1031_005_000_000[] = {
      I_("All Fund"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1031_005_000_000;
   const BFSubstitutionSet SubSet_002_1031_005_000_000(
    &aKeys_002_1031_005_000_000[0], &aValues_002_1031_005_000_000[0] );

   // Substitution set FullMoneyOutIndcSet.  Language: enUS
   static const I_CHAR* aKeys_002_1031_001_000_000[] = {
      I_("ALLFND"),
      0x00
   };

   static const I_CHAR* aValues_002_1031_001_000_000[] = {
      I_("All Fund"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1031_001_000_000;
   const BFSubstitutionSet SubSet_002_1031_001_000_000(
    &aKeys_002_1031_001_000_000[0], &aValues_002_1031_001_000_000[0] );

   // Substitution set AccountTypeDetailsSet.  Language: enUS, Market: 3
   static const I_CHAR* aKeys_002_1034_001_003_000[] = {
      I_("D"),
      I_("M"),
      I_("F"),
      I_(" "),
      0x00
   };


   static const I_CHAR* aValues_002_1034_001_003_000[] = {
      I_("Discount Investor"),
      I_("Discretionary/Managed Fee-Based Account"),
      I_("Fee-Based Account"),
      I_("Not Applicable"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_1034_001_003_000;
   const BFSubstitutionSet SubSet_002_1034_001_003_000( 
    &aKeys_002_1034_001_003_000[0], &aValues_002_1034_001_003_000[0] );

   // The "empty" substitution set for use by Chooser Functions which have nothing to choose
   static const I_CHAR* aKeys_Empty[] = {0x00};
   static const I_CHAR* aValues_Empty[] = {0x00};
   extern const BFSubstitutionSet SubSet_Empty;
   const BFSubstitutionSet SubSet_Empty( aKeys_Empty, aValues_Empty );

}
