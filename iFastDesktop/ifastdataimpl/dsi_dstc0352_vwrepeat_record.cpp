// BFDataImpl implementation file for DataSet DSTC0352.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0352_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0352_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0352_VWRepeat_Record() { return new dsi_DSTC0352_VWRepeat_Record; }

dsi_DSTC0352_VWRepeat_Record::dsi_DSTC0352_VWRepeat_Record()
: BFDataImpl( 40005268 )
, GroupType_( ifds::GroupType, &ifds::s_FldProp_GroupType )
, FundGroup_( ifds::FundGroup, &ifds::s_FldProp_FundGroup )
, DocumentType_( ifds::DocumentType, &ifds::s_FldProp_DocumentType )
, HoldMail_( ifds::HoldMail, &ifds::s_FldProp_HoldMail )
, ProcessDate_( ifds::ProcessDate, &ifds::s_FldProp_ProcessDate )
, Username_( ifds::Username, &ifds::s_FldProp_Username )
, ModDate_( ifds::ModDate, &ifds::s_FldProp_ModDate )
, ModUser_( ifds::ModUser, &ifds::s_FldProp_ModUser )
, DeliveryOptionDefault_( ifds::DeliveryOptionDefault, &ifds::s_FldProp_DeliveryOptionDefault )
{
   cFields_ = 9;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0352_VWRepeat_Record::~dsi_DSTC0352_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0352_VWRepeat_Record::clone()
{
   dsi_DSTC0352_VWRepeat_Record* p = new dsi_DSTC0352_VWRepeat_Record;
   p->GroupType_ = GroupType_;
   p->FundGroup_ = FundGroup_;
   p->DocumentType_ = DocumentType_;
   p->HoldMail_ = HoldMail_;
   p->ProcessDate_ = ProcessDate_;
   p->Username_ = Username_;
   p->ModDate_ = ModDate_;
   p->ModUser_ = ModUser_;
   p->DeliveryOptionDefault_ = DeliveryOptionDefault_;
   return(p);
}

BFDataField* dsi_DSTC0352_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40001076: return ( &GroupType_ ); break; // GroupType
      case 40002031: return ( &FundGroup_ ); break; // FundGroup
      case 40003255: return ( &DocumentType_ ); break; // DocumentType
      case 40000814: return ( &HoldMail_ ); break; // HoldMail
      case 40000216: return ( &ProcessDate_ ); break; // ProcessDate
      case 40000117: return ( &Username_ ); break; // Username
      case 40000217: return ( &ModDate_ ); break; // ModDate
      case 40000218: return ( &ModUser_ ); break; // ModUser
      case 40007038: return ( &DeliveryOptionDefault_ ); break; // DeliveryOptionDefault
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0352_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0352_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0352_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 9 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &GroupType_; break;
            case 1: aFlds_[1] = &FundGroup_; break;
            case 2: aFlds_[2] = &DocumentType_; break;
            case 3: aFlds_[3] = &HoldMail_; break;
            case 4: aFlds_[4] = &ProcessDate_; break;
            case 5: aFlds_[5] = &Username_; break;
            case 6: aFlds_[6] = &ModDate_; break;
            case 7: aFlds_[7] = &ModUser_; break;
            case 8: aFlds_[8] = &DeliveryOptionDefault_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0352_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0352_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0352_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 60 );
}

unsigned long dsi_DSTC0352_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 381 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0352_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0352_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0352_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40001076: return( true );
      case 40002031: return( true );
      case 40003255: return( true );
      case 40000814: return( true );
      case 40000216: return( true );
      case 40000117: return( true );
      case 40000217: return( true );
      case 40000218: return( true );
      case 40007038: return( true );
   }
   return false;
}

