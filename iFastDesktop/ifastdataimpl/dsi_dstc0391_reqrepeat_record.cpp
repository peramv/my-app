// BFDataImpl implementation file for DataSet DSTC0391.REQRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0391_reqrepeat_record.h"


// This function creates an instance of dsi_DSTC0391_REQRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0391_REQRepeat_Record() { return new dsi_DSTC0391_REQRepeat_Record; }

dsi_DSTC0391_REQRepeat_Record::dsi_DSTC0391_REQRepeat_Record()
: BFDataImpl( 40005866 )
, ChqId_( ifds::ChqId, &ifds::s_FldProp_ChqId )
, ChqStatus_( ifds::ChqStatus, &ifds::s_FldProp_ChqStatus )
, ChqStage_( ifds::ChqStage, &ifds::s_FldProp_ChqStage )
, StageStampDate_( ifds::StageStampDate, &ifds::s_FldProp_StageStampDate )
, RemittanceDate_( ifds::RemittanceDate, &ifds::s_FldProp_RemittanceDate )
, ChqComments_( ifds::ChqComments, &ifds::s_FldProp_ChqComments )
, VersionNum_( ifds::VersionNum, &ifds::s_FldProp_VersionNum )
, RunMode_( ifds::RunMode, &ifds::s_FldProp_RunMode )
, StageAssignBy_( ifds::StageAssignBy, &ifds::s_FldProp_StageAssignBy )
{
   cFields_ = 9;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0391_REQRepeat_Record::~dsi_DSTC0391_REQRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0391_REQRepeat_Record::clone()
{
   dsi_DSTC0391_REQRepeat_Record* p = new dsi_DSTC0391_REQRepeat_Record;
   p->ChqId_ = ChqId_;
   p->ChqStatus_ = ChqStatus_;
   p->ChqStage_ = ChqStage_;
   p->StageStampDate_ = StageStampDate_;
   p->RemittanceDate_ = RemittanceDate_;
   p->ChqComments_ = ChqComments_;
   p->VersionNum_ = VersionNum_;
   p->RunMode_ = RunMode_;
   p->StageAssignBy_ = StageAssignBy_;
   return(p);
}

BFDataField* dsi_DSTC0391_REQRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40005860: return ( &ChqId_ ); break; // ChqId
      case 40000426: return ( &ChqStatus_ ); break; // ChqStatus
      case 40005861: return ( &ChqStage_ ); break; // ChqStage
      case 40005863: return ( &StageStampDate_ ); break; // StageStampDate
      case 40005864: return ( &RemittanceDate_ ); break; // RemittanceDate
      case 40005859: return ( &ChqComments_ ); break; // ChqComments
      case 40000228: return ( &VersionNum_ ); break; // VersionNum
      case 40000990: return ( &RunMode_ ); break; // RunMode
      case 40005924: return ( &StageAssignBy_ ); break; // StageAssignBy
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0391_REQRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0391_REQRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0391_REQRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 9 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &ChqId_; break;
            case 1: aFlds_[1] = &ChqStatus_; break;
            case 2: aFlds_[2] = &ChqStage_; break;
            case 3: aFlds_[3] = &StageStampDate_; break;
            case 4: aFlds_[4] = &RemittanceDate_; break;
            case 5: aFlds_[5] = &ChqComments_; break;
            case 6: aFlds_[6] = &VersionNum_; break;
            case 7: aFlds_[7] = &RunMode_; break;
            case 8: aFlds_[8] = &StageAssignBy_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0391_REQRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0391_REQRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0391_REQRepeat_Record::getLargestDefinedField( void ) const
{
   return( 100 );
}

unsigned long dsi_DSTC0391_REQRepeat_Record::getDefinedByteLength( void ) const
{
   return( 480 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0391_REQRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0391_REQRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0391_REQRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40005860: return( true );
      case 40000426: return( true );
      case 40005861: return( true );
      case 40005863: return( true );
      case 40005864: return( true );
      case 40005859: return( true );
      case 40000228: return( true );
      case 40000990: return( true );
      case 40005924: return( true );
   }
   return false;
}

