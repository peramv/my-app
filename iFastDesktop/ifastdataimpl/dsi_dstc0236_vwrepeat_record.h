// BFDataImpl header file for DataSet DSTC0236.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId TaxJurisCode;
   extern const BFTextFieldId ResProvCode;
   extern const BFTextFieldId TaxType;
   extern const BFTextFieldId AcctType;
   extern const BFTextFieldId AcctDesignation;
   extern const BFTextFieldId StopFlag;
   extern const BFTextFieldId StopFlagSeverityCode;
   extern const BFDecimalFieldId MinInitAmt;
   extern const BFTextFieldId MinInitAmtSeverityCode;
   extern const BFDecimalFieldId MinSubSeqAmt;
   extern const BFTextFieldId MinSubSeqAmtSeverityCode;
   extern const BFTextFieldId RuleType;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_TaxJurisCode;
   extern const BFDataFieldProperties s_FldProp_ResProvCode;
   extern const BFDataFieldProperties s_FldProp_TaxType;
   extern const BFDataFieldProperties s_FldProp_AcctType;
   extern const BFDataFieldProperties s_FldProp_AcctDesignation;
   extern const BFDataFieldProperties s_FldProp_StopFlag;
   extern const BFDataFieldProperties s_FldProp_StopFlagSeverityCode;
   extern const BFDataFieldProperties s_FldProp_MinInitAmt;
   extern const BFDataFieldProperties s_FldProp_MinInitAmtSeverityCode;
   extern const BFDataFieldProperties s_FldProp_MinSubSeqAmt;
   extern const BFDataFieldProperties s_FldProp_MinSubSeqAmtSeverityCode;
   extern const BFDataFieldProperties s_FldProp_RuleType;
}


class dsi_DSTC0236_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0236_VWRepeat_Record();
   virtual ~dsi_DSTC0236_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[12];
   // Field Declarations
   BFTextField<250> TaxJurisCode_;
   BFTextField_60 ResProvCode_;
   BFTextField_60 TaxType_;
   BFTextField_60 AcctType_;
   BFTextField_60 AcctDesignation_;
   BFTextField_1 StopFlag_;
   BFTextField_60 StopFlagSeverityCode_;
   BFDecimalField MinInitAmt_;
   BFTextField_60 MinInitAmtSeverityCode_;
   BFDecimalField MinSubSeqAmt_;
   BFTextField_60 MinSubSeqAmtSeverityCode_;
   BFTextField_60 RuleType_;

};
