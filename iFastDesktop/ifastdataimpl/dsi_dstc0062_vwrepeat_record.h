// BFDataImpl header file for DataSet DSTC0062.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId RecType;
   extern const BFTextFieldId rxFundCode;
   extern const BFTextFieldId rxClassCode;
   extern const BFDateFieldId AsofDate;
   extern const BFDecimalFieldId EligibleUnits;
   extern const BFDecimalFieldId IntRate;
   extern const BFBigDecimalFieldId IntValue;
   extern const BFDecimalFieldId IntPaid;
   extern const BFBigDecimalFieldId AccumTotal;
   extern const BFDecimalFieldId MktValue;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_RecType;
   extern const BFDataFieldProperties s_FldProp_rxFundCode;
   extern const BFDataFieldProperties s_FldProp_rxClassCode;
   extern const BFDataFieldProperties s_FldProp_AsofDate;
   extern const BFDataFieldProperties s_FldProp_EligibleUnits;
   extern const BFDataFieldProperties s_FldProp_IntRate;
   extern const BFDataFieldProperties s_FldProp_IntValue;
   extern const BFDataFieldProperties s_FldProp_IntPaid;
   extern const BFDataFieldProperties s_FldProp_AccumTotal;
   extern const BFDataFieldProperties s_FldProp_MktValue;
}


class dsi_DSTC0062_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0062_VWRepeat_Record();
   virtual ~dsi_DSTC0062_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[10];
   // Field Declarations
   BFTextField_60 RecType_;
   BFTextField_60 rxFundCode_;
   BFTextField_60 rxClassCode_;
   BFDateField AsofDate_;
   BFDecimalField EligibleUnits_;
   BFDecimalField IntRate_;
   BFBigDecimalField IntValue_;
   BFDecimalField IntPaid_;
   BFBigDecimalField AccumTotal_;
   BFDecimalField MktValue_;

};
