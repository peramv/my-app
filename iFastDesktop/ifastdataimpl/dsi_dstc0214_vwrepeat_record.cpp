// BFDataImpl implementation file for DataSet DSTC0214.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0214_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0214_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0214_VWRepeat_Record() { return new dsi_DSTC0214_VWRepeat_Record; }

dsi_DSTC0214_VWRepeat_Record::dsi_DSTC0214_VWRepeat_Record()
: BFDataImpl( 40003254 )
, DocumentType_( ifds::DocumentType, &ifds::s_FldProp_DocumentType )
, EntityAddrCode_( ifds::EntityAddrCode, &ifds::s_FldProp_EntityAddrCode )
, Suppress_( ifds::Suppress, &ifds::s_FldProp_Suppress )
, DeliveryOption_( ifds::DeliveryOption, &ifds::s_FldProp_DeliveryOption )
, ProcessDate_( ifds::ProcessDate, &ifds::s_FldProp_ProcessDate )
, Username_( ifds::Username, &ifds::s_FldProp_Username )
, ModDate_( ifds::ModDate, &ifds::s_FldProp_ModDate )
, ModUser_( ifds::ModUser, &ifds::s_FldProp_ModUser )
, DelOptnRecId_( ifds::DelOptnRecId, &ifds::s_FldProp_DelOptnRecId )
, DelOptnVersion_( ifds::DelOptnVersion, &ifds::s_FldProp_DelOptnVersion )
, Consent_( ifds::Consent, &ifds::s_FldProp_Consent )
, FundGroup_( ifds::FundGroup, &ifds::s_FldProp_FundGroup )
, Mail_( ifds::Mail, &ifds::s_FldProp_Mail )
, Fax_( ifds::Fax, &ifds::s_FldProp_Fax )
, CD_( ifds::CD, &ifds::s_FldProp_CD )
, LEmail_( ifds::LEmail, &ifds::s_FldProp_LEmail )
, EPost_( ifds::EPost, &ifds::s_FldProp_EPost )
, AuthCode_( ifds::AuthCode, &ifds::s_FldProp_AuthCode )
, OnHold_( ifds::OnHold, &ifds::s_FldProp_OnHold )
{
   cFields_ = 19;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0214_VWRepeat_Record::~dsi_DSTC0214_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0214_VWRepeat_Record::clone()
{
   dsi_DSTC0214_VWRepeat_Record* p = new dsi_DSTC0214_VWRepeat_Record;
   p->DocumentType_ = DocumentType_;
   p->EntityAddrCode_ = EntityAddrCode_;
   p->Suppress_ = Suppress_;
   p->DeliveryOption_ = DeliveryOption_;
   p->ProcessDate_ = ProcessDate_;
   p->Username_ = Username_;
   p->ModDate_ = ModDate_;
   p->ModUser_ = ModUser_;
   p->DelOptnRecId_ = DelOptnRecId_;
   p->DelOptnVersion_ = DelOptnVersion_;
   p->Consent_ = Consent_;
   p->FundGroup_ = FundGroup_;
   p->Mail_ = Mail_;
   p->Fax_ = Fax_;
   p->CD_ = CD_;
   p->LEmail_ = LEmail_;
   p->EPost_ = EPost_;
   p->AuthCode_ = AuthCode_;
   p->OnHold_ = OnHold_;
   return(p);
}

BFDataField* dsi_DSTC0214_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40003255: return ( &DocumentType_ ); break; // DocumentType
      case 40003389: return ( &EntityAddrCode_ ); break; // EntityAddrCode
      case 40003288: return ( &Suppress_ ); break; // Suppress
      case 40003258: return ( &DeliveryOption_ ); break; // DeliveryOption
      case 40000216: return ( &ProcessDate_ ); break; // ProcessDate
      case 40000117: return ( &Username_ ); break; // Username
      case 40000217: return ( &ModDate_ ); break; // ModDate
      case 40000218: return ( &ModUser_ ); break; // ModUser
      case 40003256: return ( &DelOptnRecId_ ); break; // DelOptnRecId
      case 40003257: return ( &DelOptnVersion_ ); break; // DelOptnVersion
      case 40003388: return ( &Consent_ ); break; // Consent
      case 40002031: return ( &FundGroup_ ); break; // FundGroup
      case 40003867: return ( &Mail_ ); break; // Mail
      case 40003869: return ( &Fax_ ); break; // Fax
      case 40003870: return ( &CD_ ); break; // CD
      case 40003871: return ( &LEmail_ ); break; // LEmail
      case 40004954: return ( &EPost_ ); break; // EPost
      case 40005314: return ( &AuthCode_ ); break; // AuthCode
      case 40003866: return ( &OnHold_ ); break; // OnHold
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0214_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0214_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0214_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 19 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &DocumentType_; break;
            case 1: aFlds_[1] = &EntityAddrCode_; break;
            case 2: aFlds_[2] = &Suppress_; break;
            case 3: aFlds_[3] = &DeliveryOption_; break;
            case 4: aFlds_[4] = &ProcessDate_; break;
            case 5: aFlds_[5] = &Username_; break;
            case 6: aFlds_[6] = &ModDate_; break;
            case 7: aFlds_[7] = &ModUser_; break;
            case 8: aFlds_[8] = &DelOptnRecId_; break;
            case 9: aFlds_[9] = &DelOptnVersion_; break;
            case 10: aFlds_[10] = &Consent_; break;
            case 11: aFlds_[11] = &FundGroup_; break;
            case 12: aFlds_[12] = &Mail_; break;
            case 13: aFlds_[13] = &Fax_; break;
            case 14: aFlds_[14] = &CD_; break;
            case 15: aFlds_[15] = &LEmail_; break;
            case 16: aFlds_[16] = &EPost_; break;
            case 17: aFlds_[17] = &AuthCode_; break;
            case 18: aFlds_[18] = &OnHold_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0214_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0214_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0214_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 60 );
}

unsigned long dsi_DSTC0214_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 397 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0214_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0214_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0214_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40003255: return( true );
      case 40003389: return( true );
      case 40003288: return( true );
      case 40003258: return( true );
      case 40000216: return( true );
      case 40000117: return( true );
      case 40000217: return( true );
      case 40000218: return( true );
      case 40003256: return( true );
      case 40003257: return( true );
      case 40003388: return( true );
      case 40002031: return( true );
      case 40003867: return( true );
      case 40003869: return( true );
      case 40003870: return( true );
      case 40003871: return( true );
      case 40004954: return( true );
      case 40005314: return( true );
      case 40003866: return( true );
   }
   return false;
}

