// BFDataImpl header file for DataSet DSTC0427.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId MatSwpInstructionType;
   extern const BFNumericFieldId AccountNum;
   extern const BFTextFieldId Fund;
   extern const BFTextFieldId Class;
   extern const BFTextFieldId SplitType;
   extern const BFDateFieldId EffectiveDate;
   extern const BFNumericFieldId TransNum;
   extern const BFTextFieldId CashSweepBal;
   extern const BFDecimalFieldId SelectedAmt;
   extern const BFDecimalFieldId IntInvestId;
   extern const BFTextFieldId GoodBad;
   extern const BFNumericFieldId TransId;
   extern const BFNumericFieldId TransSeq;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_MatSwpInstructionType;
   extern const BFDataFieldProperties s_FldProp_AccountNum;
   extern const BFDataFieldProperties s_FldProp_Fund;
   extern const BFDataFieldProperties s_FldProp_Class;
   extern const BFDataFieldProperties s_FldProp_SplitType;
   extern const BFDataFieldProperties s_FldProp_EffectiveDate;
   extern const BFDataFieldProperties s_FldProp_TransNum;
   extern const BFDataFieldProperties s_FldProp_CashSweepBal;
   extern const BFDataFieldProperties s_FldProp_SelectedAmt;
   extern const BFDataFieldProperties s_FldProp_IntInvestId;
   extern const BFDataFieldProperties s_FldProp_GoodBad;
   extern const BFDataFieldProperties s_FldProp_TransId;
   extern const BFDataFieldProperties s_FldProp_TransSeq;
}


class dsi_DSTC0427_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0427_VWRepeat_Record();
   virtual ~dsi_DSTC0427_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[13];
   // Field Declarations
   BFTextField_60 MatSwpInstructionType_;
   BFNumericField AccountNum_;
   BFTextField_60 Fund_;
   BFTextField_60 Class_;
   BFTextField_1 SplitType_;
   BFDateField EffectiveDate_;
   BFNumericField TransNum_;
   BFTextField_60 CashSweepBal_;
   BFDecimalField SelectedAmt_;
   BFDecimalField IntInvestId_;
   BFTextField_1 GoodBad_;
   BFNumericField TransId_;
   BFNumericField TransSeq_;

};
