// BFDataImpl header file for DataSet DSTC0051.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId IdType;
   extern const BFTextFieldId IdTypeDesc;
   extern const BFTextFieldId IdValue;
   extern const BFDateFieldId IdDate;
   extern const BFDecimalFieldId EntitySearchIdVer;
   extern const BFDecimalFieldId EntitySearchRid;
   extern const BFTextFieldId IdStatus;
   extern const BFTextFieldId IdAllowOverride;
   extern const BFTextFieldId CountryOfIssue;
   extern const BFDateFieldId IdExpireDate;
   extern const BFTextFieldId VerifyStat;
   extern const BFTextFieldId Username;
   extern const BFTextFieldId ModUser;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_IdType;
   extern const BFDataFieldProperties s_FldProp_IdTypeDesc;
   extern const BFDataFieldProperties s_FldProp_IdValue;
   extern const BFDataFieldProperties s_FldProp_IdDate;
   extern const BFDataFieldProperties s_FldProp_EntitySearchIdVer;
   extern const BFDataFieldProperties s_FldProp_EntitySearchRid;
   extern const BFDataFieldProperties s_FldProp_IdStatus;
   extern const BFDataFieldProperties s_FldProp_IdAllowOverride;
   extern const BFDataFieldProperties s_FldProp_CountryOfIssue;
   extern const BFDataFieldProperties s_FldProp_IdExpireDate;
   extern const BFDataFieldProperties s_FldProp_VerifyStat;
   extern const BFDataFieldProperties s_FldProp_Username;
   extern const BFDataFieldProperties s_FldProp_ModUser;
}


class dsi_DSTC0051_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0051_VWRepeat_Record();
   virtual ~dsi_DSTC0051_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[13];
   // Field Declarations
   BFTextField_60 IdType_;
   BFTextField_60 IdTypeDesc_;
   BFTextField_60 IdValue_;
   BFDateField IdDate_;
   BFDecimalField EntitySearchIdVer_;
   BFDecimalField EntitySearchRid_;
   BFTextField_60 IdStatus_;
   BFTextField<20> IdAllowOverride_;
   BFTextField_60 CountryOfIssue_;
   BFDateField IdExpireDate_;
   BFTextField_60 VerifyStat_;
   BFTextField_60 Username_;
   BFTextField_60 ModUser_;
};
