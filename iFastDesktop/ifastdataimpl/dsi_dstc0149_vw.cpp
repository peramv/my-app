// BFDataImpl implementation file for DataSet DSTC0149.VW
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Monday, December 03, 2018 19:10:31


#include "stdafx.h"
#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0149_vw.h"


// This function creates an instance of dsi_DSTC0149_VW
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0149_VW() { return new dsi_DSTC0149_VW; }

dsi_DSTC0149_VW::dsi_DSTC0149_VW()
: BFDataImpl( 40002096 )
, AllowMultiplePacSwp_( ifds::AllowMultiplePacSwp, &ifds::s_FldProp_AllowMultiplePacSwp )
, SWPEditlevel_( ifds::SWPEditlevel, &ifds::s_FldProp_SWPEditlevel )
, SWPMin_( ifds::SWPMin, &ifds::s_FldProp_SWPMin )
, SWPHardEdit_( ifds::SWPHardEdit, &ifds::s_FldProp_SWPHardEdit )
, DSCOverride_( ifds::DSCOverride, &ifds::s_FldProp_DSCOverride )
, DabScreen_( ifds::DabScreen, &ifds::s_FldProp_DabScreen )
, DepositId2_( ifds::DepositId2, &ifds::s_FldProp_DepositId2 )
, DispClientTradeID_( ifds::DispClientTradeID, &ifds::s_FldProp_DispClientTradeID )
, DefaultBankType_( ifds::DefaultBankType, &ifds::s_FldProp_DefaultBankType )
, DispManageStyle_( ifds::DispManageStyle, &ifds::s_FldProp_DispManageStyle )
, DefaultBankUpd_( ifds::DefaultBankUpd, &ifds::s_FldProp_DefaultBankUpd )
, SplitOnAddPur_( ifds::SplitOnAddPur, &ifds::s_FldProp_SplitOnAddPur )
, SplitOnModPur_( ifds::SplitOnModPur, &ifds::s_FldProp_SplitOnModPur )
, SplitOnReqOnly_( ifds::SplitOnReqOnly, &ifds::s_FldProp_SplitOnReqOnly )
, SplitComBankDeflt_( ifds::SplitComBankDeflt, &ifds::s_FldProp_SplitComBankDeflt )
, ValSplCom_( ifds::ValSplCom, &ifds::s_FldProp_ValSplCom )
, SavePlanClient_( ifds::SavePlanClient, &ifds::s_FldProp_SavePlanClient )
, PACLastRunDate_( ifds::PACLastRunDate, &ifds::s_FldProp_PACLastRunDate )
, SWPLastRunDate_( ifds::SWPLastRunDate, &ifds::s_FldProp_SWPLastRunDate )
, ManualSettleDates_( ifds::ManualSettleDates, &ifds::s_FldProp_ManualSettleDates )
, ACHSavingsPlan_( ifds::ACHSavingsPlan, &ifds::s_FldProp_ACHSavingsPlan )
, ACHPAC_( ifds::ACHPAC, &ifds::s_FldProp_ACHPAC )
, ForeignContent_( ifds::ForeignContent, &ifds::s_FldProp_ForeignContent )
, AllowUnitsPurchase_( ifds::AllowUnitsPurchase, &ifds::s_FldProp_AllowUnitsPurchase )
, MultiCurrEFTUnitPurch_( ifds::MultiCurrEFTUnitPurch, &ifds::s_FldProp_MultiCurrEFTUnitPurch )
, DisAllowPayTypeUnitPurch_( ifds::DisAllowPayTypeUnitPurch, &ifds::s_FldProp_DisAllowPayTypeUnitPurch )
, AllowCashDistrib_( ifds::AllowCashDistrib, &ifds::s_FldProp_AllowCashDistrib )
, PACCalendar_( ifds::PACCalendar, &ifds::s_FldProp_PACCalendar )
, ProductGroupCode_( ifds::ProductGroupCode, &ifds::s_FldProp_ProductGroupCode )
, TradeDateLag_( ifds::TradeDateLag, &ifds::s_FldProp_TradeDateLag )
, TradeDateLagExch_( ifds::TradeDateLagExch, &ifds::s_FldProp_TradeDateLagExch )
, FCRebalancing_( ifds::FCRebalancing, &ifds::s_FldProp_FCRebalancing )
, CommFeeCodes_( ifds::CommFeeCodes, &ifds::s_FldProp_CommFeeCodes )
, CalcSwitch_( ifds::CalcSwitch, &ifds::s_FldProp_CalcSwitch )
, MiscFeeDefn_( ifds::MiscFeeDefn, &ifds::s_FldProp_MiscFeeDefn )
, AcctLvlFIFO_( ifds::AcctLvlFIFO, &ifds::s_FldProp_AcctLvlFIFO )
, CompCodeFlag_( ifds::CompCodeFlag, &ifds::s_FldProp_CompCodeFlag )
, PriceProcAtFndGrp_( ifds::PriceProcAtFndGrp, &ifds::s_FldProp_PriceProcAtFndGrp )
, MgmtFeeType_( ifds::MgmtFeeType, &ifds::s_FldProp_MgmtFeeType )
, LLPWithdrawalRules_( ifds::LLPWithdrawalRules, &ifds::s_FldProp_LLPWithdrawalRules )
, RRIFFromAlloc_( ifds::RRIFFromAlloc, &ifds::s_FldProp_RRIFFromAlloc )
, IsoCompliant_( ifds::IsoCompliant, &ifds::s_FldProp_IsoCompliant )
, ReviewDateFlag_( ifds::ReviewDateFlag, &ifds::s_FldProp_ReviewDateFlag )
, OverrideReviewDate_( ifds::OverrideReviewDate, &ifds::s_FldProp_OverrideReviewDate )
, ReviewMnths_( ifds::ReviewMnths, &ifds::s_FldProp_ReviewMnths )
, BankChrgs_( ifds::BankChrgs, &ifds::s_FldProp_BankChrgs )
, ConsolidEFT_( ifds::ConsolidEFT, &ifds::s_FldProp_ConsolidEFT )
, ACHRedemption_( ifds::ACHRedemption, &ifds::s_FldProp_ACHRedemption )
, ValueDateApplic_( ifds::ValueDateApplic, &ifds::s_FldProp_ValueDateApplic )
, SettleAll_( ifds::SettleAll, &ifds::s_FldProp_SettleAll )
, DuplicateAltAcct_( ifds::DuplicateAltAcct, &ifds::s_FldProp_DuplicateAltAcct )
, BankDetlName_( ifds::BankDetlName, &ifds::s_FldProp_BankDetlName )
, OPDeliveryMethods_( ifds::OPDeliveryMethods, &ifds::s_FldProp_OPDeliveryMethods )
, OPDeliveryOption_( ifds::OPDeliveryOption, &ifds::s_FldProp_OPDeliveryOption )
, CnsntToWaive_( ifds::CnsntToWaive, &ifds::s_FldProp_CnsntToWaive )
, OverridePrcntFree_( ifds::OverridePrcntFree, &ifds::s_FldProp_OverridePrcntFree )
, OvrdRBLThrshld_( ifds::OvrdRBLThrshld, &ifds::s_FldProp_OvrdRBLThrshld )
, CommonCurrency_( ifds::CommonCurrency, &ifds::s_FldProp_CommonCurrency )
, RBLThrshldDflt_( ifds::RBLThrshldDflt, &ifds::s_FldProp_RBLThrshldDflt )
, DispRBLSysThrshld_( ifds::DispRBLSysThrshld, &ifds::s_FldProp_DispRBLSysThrshld )
, ShrAddressFormat_( ifds::ShrAddressFormat, &ifds::s_FldProp_ShrAddressFormat )
, FundLimitOverride_( ifds::FundLimitOverride, &ifds::s_FldProp_FundLimitOverride )
, RestrictAMSBroker_( ifds::RestrictAMSBroker, &ifds::s_FldProp_RestrictAMSBroker )
, NetworkOrder_( ifds::NetworkOrder, &ifds::s_FldProp_NetworkOrder )
, EarlyPWFeeElig_( ifds::EarlyPWFeeElig, &ifds::s_FldProp_EarlyPWFeeElig )
, ShortTermTRFeeElig_( ifds::ShortTermTRFeeElig, &ifds::s_FldProp_ShortTermTRFeeElig )
, MailingByFundGroup_( ifds::MailingByFundGroup, &ifds::s_FldProp_MailingByFundGroup )
, ATFeeApply_( ifds::ATFeeApply, &ifds::s_FldProp_ATFeeApply )
, FeeOverrideType_( ifds::FeeOverrideType, &ifds::s_FldProp_FeeOverrideType )
, SummitAccountsLowerBound_( ifds::SummitAccountsLowerBound, &ifds::s_FldProp_SummitAccountsLowerBound )
, SummitAccountsUpperBound_( ifds::SummitAccountsUpperBound, &ifds::s_FldProp_SummitAccountsUpperBound )
, RRIFToAlloc_( ifds::RRIFToAlloc, &ifds::s_FldProp_RRIFToAlloc )
, ACHTrailerFee_( ifds::ACHTrailerFee, &ifds::s_FldProp_ACHTrailerFee )
, ACHCommission_( ifds::ACHCommission, &ifds::s_FldProp_ACHCommission )
, ACHDividend_( ifds::ACHDividend, &ifds::s_FldProp_ACHDividend )
, KYCAccountLevel_( ifds::KYCAccountLevel, &ifds::s_FldProp_KYCAccountLevel )
, AllowRetMailAutomation_( ifds::AllowRetMailAutomation, &ifds::s_FldProp_AllowRetMailAutomation )
, NoWithTax_( ifds::NoWithTax, &ifds::s_FldProp_NoWithTax )
, TaxOnRRIFRed_( ifds::TaxOnRRIFRed, &ifds::s_FldProp_TaxOnRRIFRed )
, WithTaxOverride_( ifds::WithTaxOverride, &ifds::s_FldProp_WithTaxOverride )
, AutomaticAll_( ifds::AutomaticAll, &ifds::s_FldProp_AutomaticAll )
, RIFTTaxableRedCode_( ifds::RIFTTaxableRedCode, &ifds::s_FldProp_RIFTTaxableRedCode )
, FullRedCode_( ifds::FullRedCode, &ifds::s_FldProp_FullRedCode )
, AllowMultiFundTransfer_( ifds::AllowMultiFundTransfer, &ifds::s_FldProp_AllowMultiFundTransfer )
, SalutationFormat_( ifds::SalutationFormat, &ifds::s_FldProp_SalutationFormat )
, DefaultBankInstCode_( ifds::DefaultBankInstCode, &ifds::s_FldProp_DefaultBankInstCode )
, NASUPopupOptions_( ifds::NASUPopupOptions, &ifds::s_FldProp_NASUPopupOptions )
, AFBAgentCoCode_( ifds::AFBAgentCoCode, &ifds::s_FldProp_AFBAgentCoCode )
, DefaultSTTRFlag_( ifds::DefaultSTTRFlag, &ifds::s_FldProp_DefaultSTTRFlag )
, DefaultERFlag_( ifds::DefaultERFlag, &ifds::s_FldProp_DefaultERFlag )
, ADLevyFee_( ifds::ADLevyFee, &ifds::s_FldProp_ADLevyFee )
, ADLevyFeeTransType_( ifds::ADLevyFeeTransType, &ifds::s_FldProp_ADLevyFeeTransType )
, FndMrgRedCod_( ifds::FndMrgRedCod, &ifds::s_FldProp_FndMrgRedCod )
, NSCCCompliant_( ifds::NSCCCompliant, &ifds::s_FldProp_NSCCCompliant )
, NSCCCurrencyList_( ifds::NSCCCurrencyList, &ifds::s_FldProp_NSCCCurrencyList )
, STTRFeeExclRedCodeList_( ifds::STTRFeeExclRedCodeList, &ifds::s_FldProp_STTRFeeExclRedCodeList )
, EntityRiskLevel_( ifds::EntityRiskLevel, &ifds::s_FldProp_EntityRiskLevel )
, EqualizationActive_( ifds::EqualizationActive, &ifds::s_FldProp_EqualizationActive )
, RegisteredTaxTypes_( ifds::RegisteredTaxTypes, &ifds::s_FldProp_RegisteredTaxTypes )
, AntiDilutionCalc_( ifds::AntiDilutionCalc, &ifds::s_FldProp_AntiDilutionCalc )
, UFactorCodes_( ifds::UFactorCodes, &ifds::s_FldProp_UFactorCodes )
, ACHPurch_( ifds::ACHPurch, &ifds::s_FldProp_ACHPurch )
, ACHSWP_( ifds::ACHSWP, &ifds::s_FldProp_ACHSWP )
, ACHAdminFee_( ifds::ACHAdminFee, &ifds::s_FldProp_ACHAdminFee )
, ClearingIdDefault_( ifds::ClearingIdDefault, &ifds::s_FldProp_ClearingIdDefault )
, ErrorAcctNum_( ifds::ErrorAcctNum, &ifds::s_FldProp_ErrorAcctNum )
, FundBrokerApplicable_( ifds::FundBrokerApplicable, &ifds::s_FldProp_FundBrokerApplicable )
, ValidNetworkType_( ifds::ValidNetworkType, &ifds::s_FldProp_ValidNetworkType )
, NetworkTypeUpd_( ifds::NetworkTypeUpd, &ifds::s_FldProp_NetworkTypeUpd )
, EUSDParticip_( ifds::EUSDParticip, &ifds::s_FldProp_EUSDParticip )
, DefEUSDOption_( ifds::DefEUSDOption, &ifds::s_FldProp_DefEUSDOption )
, VerCancTrd_( ifds::VerCancTrd, &ifds::s_FldProp_VerCancTrd )
, ActCatNegBal_( ifds::ActCatNegBal, &ifds::s_FldProp_ActCatNegBal )
, ActCatWireSett_( ifds::ActCatWireSett, &ifds::s_FldProp_ActCatWireSett )
, BackDatedReason_( ifds::BackDatedReason, &ifds::s_FldProp_BackDatedReason )
, Accountable_( ifds::Accountable, &ifds::s_FldProp_Accountable )
, OPCConfirmsBrokerScreen_( ifds::OPCConfirmsBrokerScreen, &ifds::s_FldProp_OPCConfirmsBrokerScreen )
, JumboPriceApplicable_( ifds::JumboPriceApplicable, &ifds::s_FldProp_JumboPriceApplicable )
, ClawbackBasedOnDate_( ifds::ClawbackBasedOnDate, &ifds::s_FldProp_ClawbackBasedOnDate )
, EUSDOption_( ifds::EUSDOption, &ifds::s_FldProp_EUSDOption )
, SuppressInactiveFunds_( ifds::SuppressInactiveFunds, &ifds::s_FldProp_SuppressInactiveFunds )
, ExemptLevelList_( ifds::ExemptLevelList, &ifds::s_FldProp_ExemptLevelList )
, AccessLevelCat_( ifds::AccessLevelCat, &ifds::s_FldProp_AccessLevelCat )
, GWOSupported_( ifds::GWOSupported, &ifds::s_FldProp_GWOSupported )
, AssigneeScreen_( ifds::AssigneeScreen, &ifds::s_FldProp_AssigneeScreen )
, Address1_( ifds::Address1, &ifds::s_FldProp_Address1 )
, Address2_( ifds::Address2, &ifds::s_FldProp_Address2 )
, Address3_( ifds::Address3, &ifds::s_FldProp_Address3 )
, Address4_( ifds::Address4, &ifds::s_FldProp_Address4 )
, Address5_( ifds::Address5, &ifds::s_FldProp_Address5 )
, PostalCode_( ifds::PostalCode, &ifds::s_FldProp_PostalCode )
, CountryCode_( ifds::CountryCode, &ifds::s_FldProp_CountryCode )
, ClientName_( ifds::ClientName, &ifds::s_FldProp_ClientName )
, RedPayEntExist_( ifds::RedPayEntExist, &ifds::s_FldProp_RedPayEntExist )
, IsRRIFUnusedMaxApp_( ifds::IsRRIFUnusedMaxApp, &ifds::s_FldProp_IsRRIFUnusedMaxApp )
, CompanyCode_( ifds::CompanyCode, &ifds::s_FldProp_CompanyCode )
, JointDefaultDisposition_( ifds::JointDefaultDisposition, &ifds::s_FldProp_JointDefaultDisposition )
, BackWithholdTax_( ifds::BackWithholdTax, &ifds::s_FldProp_BackWithholdTax )
, ConsolTransType_( ifds::ConsolTransType, &ifds::s_FldProp_ConsolTransType )
, Consolidation_( ifds::Consolidation, &ifds::s_FldProp_Consolidation )
, ConsolDefault_( ifds::ConsolDefault, &ifds::s_FldProp_ConsolDefault )
, PurchNetting_( ifds::PurchNetting, &ifds::s_FldProp_PurchNetting )
, DftOrdTypeTR_( ifds::DftOrdTypeTR, &ifds::s_FldProp_DftOrdTypeTR )
, DftOrdTypeEX_( ifds::DftOrdTypeEX, &ifds::s_FldProp_DftOrdTypeEX )
, DftOrdTypeDSK_( ifds::DftOrdTypeDSK, &ifds::s_FldProp_DftOrdTypeDSK )
, CSSStopSINMatch_( ifds::CSSStopSINMatch, &ifds::s_FldProp_CSSStopSINMatch )
, AMSFreqOvrd_( ifds::AMSFreqOvrd, &ifds::s_FldProp_AMSFreqOvrd )
, RebalanceDay_( ifds::RebalanceDay, &ifds::s_FldProp_RebalanceDay )
, DistribChkAllowTfr_( ifds::DistribChkAllowTfr, &ifds::s_FldProp_DistribChkAllowTfr )
, KYCLevel_( ifds::KYCLevel, &ifds::s_FldProp_KYCLevel )
, MFRCorporateFund_( ifds::MFRCorporateFund, &ifds::s_FldProp_MFRCorporateFund )
, NetOfFeesDate_( ifds::NetOfFeesDate, &ifds::s_FldProp_NetOfFeesDate )
, DispHistUnitACB_( ifds::DispHistUnitACB, &ifds::s_FldProp_DispHistUnitACB )
, DivDates_( ifds::DivDates, &ifds::s_FldProp_DivDates )
, SwitchBanks_( ifds::SwitchBanks, &ifds::s_FldProp_SwitchBanks )
, CheckCloseBatch_( ifds::CheckCloseBatch, &ifds::s_FldProp_CheckCloseBatch )
, DefltFeeOption_( ifds::DefltFeeOption, &ifds::s_FldProp_DefltFeeOption )
, OnLineEntExcept_( ifds::OnLineEntExcept, &ifds::s_FldProp_OnLineEntExcept )
, UnitRoundingApplicable_( ifds::UnitRoundingApplicable, &ifds::s_FldProp_UnitRoundingApplicable )
, UnitRoundMethod_( ifds::UnitRoundMethod, &ifds::s_FldProp_UnitRoundMethod )
, RegDocsExist_( ifds::RegDocsExist, &ifds::s_FldProp_RegDocsExist )
, DeathClaimDocExist_( ifds::DeathClaimDocExist, &ifds::s_FldProp_DeathClaimDocExist )
, UnregPlan_( ifds::UnregPlan, &ifds::s_FldProp_UnregPlan )
, NonregLike_( ifds::NonregLike, &ifds::s_FldProp_NonregLike )
, IntRIFPlan_( ifds::IntRIFPlan, &ifds::s_FldProp_IntRIFPlan )
, ExtRIFPlan_( ifds::ExtRIFPlan, &ifds::s_FldProp_ExtRIFPlan )
, AllRIFPlan_( ifds::AllRIFPlan, &ifds::s_FldProp_AllRIFPlan )
, IntLIRAPlan_( ifds::IntLIRAPlan, &ifds::s_FldProp_IntLIRAPlan )
, AllLIRAPlan_( ifds::AllLIRAPlan, &ifds::s_FldProp_AllLIRAPlan )
, IntRESP_( ifds::IntRESP, &ifds::s_FldProp_IntRESP )
, IntRSP_( ifds::IntRSP, &ifds::s_FldProp_IntRSP )
, TaxJurisUpdateOpt_( ifds::TaxJurisUpdateOpt, &ifds::s_FldProp_TaxJurisUpdateOpt )
, RetMailOrStlDtChqAlert_( ifds::RetMailOrStlDtChqAlert, &ifds::s_FldProp_RetMailOrStlDtChqAlert )
, DeathClaimRedCodes_( ifds::DeathClaimRedCodes, &ifds::s_FldProp_DeathClaimRedCodes )
, IntLockInPlan_( ifds::IntLockInPlan, &ifds::s_FldProp_IntLockInPlan )
, AlwdTaxType_( ifds::AlwdTaxType, &ifds::s_FldProp_AlwdTaxType )
, LIRALike_( ifds::LIRALike, &ifds::s_FldProp_LIRALike )
, LIFLike_( ifds::LIFLike, &ifds::s_FldProp_LIFLike )
, FELCommOnGrant_( ifds::FELCommOnGrant, &ifds::s_FldProp_FELCommOnGrant )
, AllocTypeForBrokerValidation_( ifds::AllocTypeForBrokerValidation, &ifds::s_FldProp_AllocTypeForBrokerValidation )
, TFSATaxList_( ifds::TFSATaxList, &ifds::s_FldProp_TFSATaxList )
, AutoBatch_( ifds::AutoBatch, &ifds::s_FldProp_AutoBatch )
, ClosedCountryApplicable_( ifds::ClosedCountryApplicable, &ifds::s_FldProp_ClosedCountryApplicable )
, DskPCLookEnb_( ifds::DskPCLookEnb, &ifds::s_FldProp_DskPCLookEnb )
, DirectDepositBankApplicable_( ifds::DirectDepositBankApplicable, &ifds::s_FldProp_DirectDepositBankApplicable )
, VersionLabel_( ifds::VersionLabel, &ifds::s_FldProp_VersionLabel )
, CompanyUrl_( ifds::CompanyUrl, &ifds::s_FldProp_CompanyUrl )
, SettleLocOpt_( ifds::SettleLocOpt, &ifds::s_FldProp_SettleLocOpt )
, TUPActive_( ifds::TUPActive, &ifds::s_FldProp_TUPActive )
, TerminationAgeBeforeDeff_( ifds::TerminationAgeBeforeDeff, &ifds::s_FldProp_TerminationAgeBeforeDeff )
, TerminationAgeAfterDeff_( ifds::TerminationAgeAfterDeff, &ifds::s_FldProp_TerminationAgeAfterDeff )
, RESPAgeLimitsDeff_( ifds::RESPAgeLimitsDeff, &ifds::s_FldProp_RESPAgeLimitsDeff )
, GuaranteeGuardOn_( ifds::GuaranteeGuardOn, &ifds::s_FldProp_GuaranteeGuardOn )
, TrailerFeeArch_( ifds::TrailerFeeArch, &ifds::s_FldProp_TrailerFeeArch )
, AllowChqChange_( ifds::AllowChqChange, &ifds::s_FldProp_AllowChqChange )
, TFSAAcctCatCodeList_( ifds::TFSAAcctCatCodeList, &ifds::s_FldProp_TFSAAcctCatCodeList )
, RRSPAcctCatCodeList_( ifds::RRSPAcctCatCodeList, &ifds::s_FldProp_RRSPAcctCatCodeList )
, NetworkRespReqApplicable_( ifds::NetworkRespReqApplicable, &ifds::s_FldProp_NetworkRespReqApplicable )
, NetworkIDForAmountTrade_( ifds::NetworkIDForAmountTrade, &ifds::s_FldProp_NetworkIDForAmountTrade )
, AllEFTConsolActive_( ifds::AllEFTConsolActive, &ifds::s_FldProp_AllEFTConsolActive )
, BulkBackDate_( ifds::BulkBackDate, &ifds::s_FldProp_BulkBackDate )
, AllEFTConsolShrLv_( ifds::AllEFTConsolShrLv, &ifds::s_FldProp_AllEFTConsolShrLv )
, ACBUnitOffset_( ifds::ACBUnitOffset, &ifds::s_FldProp_ACBUnitOffset )
, EAPEarningCodes_( ifds::EAPEarningCodes, &ifds::s_FldProp_EAPEarningCodes )
, IWTEnable_( ifds::IWTEnable, &ifds::s_FldProp_IWTEnable )
, IWTTaxJurisList_( ifds::IWTTaxJurisList, &ifds::s_FldProp_IWTTaxJurisList )
, NonReceiptApplicable_( ifds::NonReceiptApplicable, &ifds::s_FldProp_NonReceiptApplicable )
, GuaranteeCalcByRules_( ifds::GuaranteeCalcByRules, &ifds::s_FldProp_GuaranteeCalcByRules )
, PorfolioIsRequried_( ifds::PorfolioIsRequried, &ifds::s_FldProp_PorfolioIsRequried )
, SOFforSGMR_( ifds::SOFforSGMR, &ifds::s_FldProp_SOFforSGMR )
, SourceOfFund_( ifds::SourceOfFund, &ifds::s_FldProp_SourceOfFund )
, StmtFreqDefault_( ifds::StmtFreqDefault, &ifds::s_FldProp_StmtFreqDefault )
, StmtFreqList_( ifds::StmtFreqList, &ifds::s_FldProp_StmtFreqList )
, RedCodesGuaranteeOverride_( ifds::RedCodesGuaranteeOverride, &ifds::s_FldProp_RedCodesGuaranteeOverride )
, CPFActiveFlag_( ifds::CPFActiveFlag, &ifds::s_FldProp_CPFActiveFlag )
, PrintAcctConf_( ifds::PrintAcctConf, &ifds::s_FldProp_PrintAcctConf )
, LanguageDefault_( ifds::LanguageDefault, &ifds::s_FldProp_LanguageDefault )
, EmpAgentAppl_( ifds::EmpAgentAppl, &ifds::s_FldProp_EmpAgentAppl )
, FundEliPSG_( ifds::FundEliPSG, &ifds::s_FldProp_FundEliPSG )
, FundSERVValidation_( ifds::FundSERVValidation, &ifds::s_FldProp_FundSERVValidation )
, LTAIndicator_( ifds::LTAIndicator, &ifds::s_FldProp_LTAIndicator )
, ModifyCompAgent_( ifds::ModifyCompAgent, &ifds::s_FldProp_ModifyCompAgent )
, SourceOfFundApp_( ifds::SourceOfFundApp, &ifds::s_FldProp_SourceOfFundApp )
, RefundRVCD_( ifds::RefundRVCD, &ifds::s_FldProp_RefundRVCD )
, FundAlloc_( ifds::FundAlloc, &ifds::s_FldProp_FundAlloc )
, NFConfBnkDetl_( ifds::NFConfBnkDetl, &ifds::s_FldProp_NFConfBnkDetl )
, RefundCalc_( ifds::RefundCalc, &ifds::s_FldProp_RefundCalc )
, DilutionCalc_( ifds::DilutionCalc, &ifds::s_FldProp_DilutionCalc )
, SrcOfFunds_IA_Required_( ifds::SrcOfFunds_IA_Required, &ifds::s_FldProp_SrcOfFunds_IA_Required )
, SrcOfFunds_IA_ED_( ifds::SrcOfFunds_IA_ED, &ifds::s_FldProp_SrcOfFunds_IA_ED )
, SrcOfFunds_IA_PW_( ifds::SrcOfFunds_IA_PW, &ifds::s_FldProp_SrcOfFunds_IA_PW )
, SrcOfFunds_IA_GIC_( ifds::SrcOfFunds_IA_GIC, &ifds::s_FldProp_SrcOfFunds_IA_GIC )
, SrcOfFunds_IA_SWP_( ifds::SrcOfFunds_IA_SWP, &ifds::s_FldProp_SrcOfFunds_IA_SWP )
, SrcOfFunds_IA_RIF_( ifds::SrcOfFunds_IA_RIF, &ifds::s_FldProp_SrcOfFunds_IA_RIF )
, TaxAnniversary_( ifds::TaxAnniversary, &ifds::s_FldProp_TaxAnniversary )
, RightToCancelDefault_( ifds::RightToCancelDefault, &ifds::s_FldProp_RightToCancelDefault )
, FATCAApplicable_( ifds::FATCAApplicable, &ifds::s_FldProp_FATCAApplicable )
, RDREnv_( ifds::RDREnv, &ifds::s_FldProp_RDREnv )
, ApplFeeModelType_( ifds::ApplFeeModelType, &ifds::s_FldProp_ApplFeeModelType )
, AutoGenFeeModelCode_( ifds::AutoGenFeeModelCode, &ifds::s_FldProp_AutoGenFeeModelCode )
, AutoStopAssociation_( ifds::AutoStopAssociation, &ifds::s_FldProp_AutoStopAssociation )
, ListDocType_( ifds::ListDocType, &ifds::s_FldProp_ListDocType )
, InvApplicable_( ifds::InvApplicable, &ifds::s_FldProp_InvApplicable )
, RptGrpApplicable_( ifds::RptGrpApplicable, &ifds::s_FldProp_RptGrpApplicable )
, MstrActActive_( ifds::MstrActActive, &ifds::s_FldProp_MstrActActive )
, MstrActAttrbName_( ifds::MstrActAttrbName, &ifds::s_FldProp_MstrActAttrbName )
, MstrActAttrbValue_( ifds::MstrActAttrbValue, &ifds::s_FldProp_MstrActAttrbValue )
, IsTrlFeeAcctLevelApp_( ifds::IsTrlFeeAcctLevelApp, &ifds::s_FldProp_IsTrlFeeAcctLevelApp )
, ReportFFIType_( ifds::ReportFFIType, &ifds::s_FldProp_ReportFFIType )
, FundIDList_( ifds::FundIDList, &ifds::s_FldProp_FundIDList )
, RetMailUpdt_( ifds::RetMailUpdt, &ifds::s_FldProp_RetMailUpdt )
, AllowBankUpdOnProcessedPAC_( ifds::AllowBankUpdOnProcessedPAC, &ifds::s_FldProp_AllowBankUpdOnProcessedPAC )
, DistribInstrAsRatioOpt_( ifds::DistribInstrAsRatioOpt, &ifds::s_FldProp_DistribInstrAsRatioOpt )
, MgmtFeePayOptOvd_( ifds::MgmtFeePayOptOvd, &ifds::s_FldProp_MgmtFeePayOptOvd )
, OPCNonFinConfDefPAC_( ifds::OPCNonFinConfDefPAC, &ifds::s_FldProp_OPCNonFinConfDefPAC )
, ShowDilution_( ifds::ShowDilution, &ifds::s_FldProp_ShowDilution )
, ShowExSysDilPymtNSM_( ifds::ShowExSysDilPymtNSM, &ifds::s_FldProp_ShowExSysDilPymtNSM )
, CPFRefundApplicable_( ifds::CPFRefundApplicable, &ifds::s_FldProp_CPFRefundApplicable )
, MultiPrices_( ifds::MultiPrices, &ifds::s_FldProp_MultiPrices )
, SAGESActive_( ifds::SAGESActive, &ifds::s_FldProp_SAGESActive )
, SAGESDeff_( ifds::SAGESDeff, &ifds::s_FldProp_SAGESDeff )
, TFRApplicable_( ifds::TFRApplicable, &ifds::s_FldProp_TFRApplicable )
, CIApplicable_( ifds::CIApplicable, &ifds::s_FldProp_CIApplicable )
, SIApplicable_( ifds::SIApplicable, &ifds::s_FldProp_SIApplicable )
, AdvisorFeeAppl_( ifds::AdvisorFeeAppl, &ifds::s_FldProp_AdvisorFeeAppl )
, EDocsAccessAppl_( ifds::EDocsAccessAppl, &ifds::s_FldProp_EDocsAccessAppl )
, AutoDefaultCancelGrant_( ifds::AutoDefaultCancelGrant, &ifds::s_FldProp_AutoDefaultCancelGrant )
, AggActive_( ifds::AggActive, &ifds::s_FldProp_AggActive )
, AggActCatgry_( ifds::AggActCatgry, &ifds::s_FldProp_AggActCatgry )
, AggDefAggMod_( ifds::AggDefAggMod, &ifds::s_FldProp_AggDefAggMod )
, BankingLevel_( ifds::BankingLevel, &ifds::s_FldProp_BankingLevel )
, DefaultBankingLevel_( ifds::DefaultBankingLevel, &ifds::s_FldProp_DefaultBankingLevel )
, HighRiskDispMode_( ifds::HighRiskDispMode, &ifds::s_FldProp_HighRiskDispMode )
, HighRiskLevels_( ifds::HighRiskLevels, &ifds::s_FldProp_HighRiskLevels )
, RiskApplEntity_( ifds::RiskApplEntity, &ifds::s_FldProp_RiskApplEntity )
, RiskApplEntitySeq_( ifds::RiskApplEntitySeq, &ifds::s_FldProp_RiskApplEntitySeq )
, RiskForAcctHldrRsk_( ifds::RiskForAcctHldrRsk, &ifds::s_FldProp_RiskForAcctHldrRsk )
, RebalDateFormat_( ifds::RebalDateFormat, &ifds::s_FldProp_RebalDateFormat )
, IsRESPTransform_( ifds::IsRESPTransform, &ifds::s_FldProp_IsRESPTransform )
, CRSEntityList_( ifds::CRSEntityList, &ifds::s_FldProp_CRSEntityList )
, TaxComplianceList_( ifds::TaxComplianceList, &ifds::s_FldProp_TaxComplianceList )
, CRSActive_( ifds::CRSActive, &ifds::s_FldProp_CRSActive )
, TrackTrActive_( ifds::TrackTrActive, &ifds::s_FldProp_TrackTrActive )
, TrackTrRedCode_( ifds::TrackTrRedCode, &ifds::s_FldProp_TrackTrRedCode )
, TrackTrDepCode_( ifds::TrackTrDepCode, &ifds::s_FldProp_TrackTrDepCode )
, TrackTrOther_( ifds::TrackTrOther, &ifds::s_FldProp_TrackTrOther )
, OrigTradeFee_( ifds::OrigTradeFee, &ifds::s_FldProp_OrigTradeFee )
, AltFndIdntfr_( ifds::AltFndIdntfr, &ifds::s_FldProp_AltFndIdntfr )
, TFSAAgeOfMajor_( ifds::TFSAAgeOfMajor, &ifds::s_FldProp_TFSAAgeOfMajor )
, TFSAProvCode_( ifds::TFSAProvCode, &ifds::s_FldProp_TFSAProvCode )
, ApplPUDbyDefault_( ifds::ApplPUDbyDefault, &ifds::s_FldProp_ApplPUDbyDefault )
, ApplPUDbyBEL_( ifds::ApplPUDbyBEL, &ifds::s_FldProp_ApplPUDbyBEL )
, ApplPUDbyCB_( ifds::ApplPUDbyCB, &ifds::s_FldProp_ApplPUDbyCB )
, RefundAllowed_( ifds::RefundAllowed, &ifds::s_FldProp_RefundAllowed )
, RefundSettleDateOpt_( ifds::RefundSettleDateOpt, &ifds::s_FldProp_RefundSettleDateOpt )
, ShowCGMktVal_( ifds::ShowCGMktVal, &ifds::s_FldProp_ShowCGMktVal )
, PrcntFeeDipOpt_( ifds::PrcntFeeDipOpt, &ifds::s_FldProp_PrcntFeeDipOpt )
, MultipleRisk_( ifds::MultipleRisk, &ifds::s_FldProp_MultipleRisk )
, AWDPortalURL_( ifds::AWDPortalURL, &ifds::s_FldProp_AWDPortalURL )
, IntraDayPricing_( ifds::IntraDayPricing, &ifds::s_FldProp_IntraDayPricing )
, LastNameFormat_( ifds::LastNameFormat, &ifds::s_FldProp_LastNameFormat )
, PendingTradeCashDateOverride_( ifds::PendingTradeCashDateOverride, &ifds::s_FldProp_PendingTradeCashDateOverride )
, OrderUserOverride_( ifds::OrderUserOverride, &ifds::s_FldProp_OrderUserOverride )
, DefStatus_( ifds::DefStatus, &ifds::s_FldProp_DefStatus )
{
    cFields_ = 305;
    memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0149_VW::~dsi_DSTC0149_VW()
{
}

BFDataImpl* dsi_DSTC0149_VW::clone()
{
    dsi_DSTC0149_VW* p = new dsi_DSTC0149_VW;
    p->AllowMultiplePacSwp_ = AllowMultiplePacSwp_;
    p->SWPEditlevel_ = SWPEditlevel_;
    p->SWPMin_ = SWPMin_;
    p->SWPHardEdit_ = SWPHardEdit_;
    p->DSCOverride_ = DSCOverride_;
    p->DabScreen_ = DabScreen_;
    p->DepositId2_ = DepositId2_;
    p->DispClientTradeID_ = DispClientTradeID_;
    p->DefaultBankType_ = DefaultBankType_;
    p->DispManageStyle_ = DispManageStyle_;
    p->DefaultBankUpd_ = DefaultBankUpd_;
    p->SplitOnAddPur_ = SplitOnAddPur_;
    p->SplitOnModPur_ = SplitOnModPur_;
    p->SplitOnReqOnly_ = SplitOnReqOnly_;
    p->SplitComBankDeflt_ = SplitComBankDeflt_;
    p->ValSplCom_ = ValSplCom_;
    p->SavePlanClient_ = SavePlanClient_;
    p->PACLastRunDate_ = PACLastRunDate_;
    p->SWPLastRunDate_ = SWPLastRunDate_;
    p->ManualSettleDates_ = ManualSettleDates_;
    p->ACHSavingsPlan_ = ACHSavingsPlan_;
    p->ACHPAC_ = ACHPAC_;
    p->ForeignContent_ = ForeignContent_;
    p->AllowUnitsPurchase_ = AllowUnitsPurchase_;
    p->MultiCurrEFTUnitPurch_ = MultiCurrEFTUnitPurch_;
    p->DisAllowPayTypeUnitPurch_ = DisAllowPayTypeUnitPurch_;
    p->AllowCashDistrib_ = AllowCashDistrib_;
    p->PACCalendar_ = PACCalendar_;
    p->ProductGroupCode_ = ProductGroupCode_;
    p->TradeDateLag_ = TradeDateLag_;
    p->TradeDateLagExch_ = TradeDateLagExch_;
    p->FCRebalancing_ = FCRebalancing_;
    p->CommFeeCodes_ = CommFeeCodes_;
    p->CalcSwitch_ = CalcSwitch_;
    p->MiscFeeDefn_ = MiscFeeDefn_;
    p->AcctLvlFIFO_ = AcctLvlFIFO_;
    p->CompCodeFlag_ = CompCodeFlag_;
    p->PriceProcAtFndGrp_ = PriceProcAtFndGrp_;
    p->MgmtFeeType_ = MgmtFeeType_;
    p->LLPWithdrawalRules_ = LLPWithdrawalRules_;
    p->RRIFFromAlloc_ = RRIFFromAlloc_;
    p->IsoCompliant_ = IsoCompliant_;
    p->ReviewDateFlag_ = ReviewDateFlag_;
    p->OverrideReviewDate_ = OverrideReviewDate_;
    p->ReviewMnths_ = ReviewMnths_;
    p->BankChrgs_ = BankChrgs_;
    p->ConsolidEFT_ = ConsolidEFT_;
    p->ACHRedemption_ = ACHRedemption_;
    p->ValueDateApplic_ = ValueDateApplic_;
    p->SettleAll_ = SettleAll_;
    p->DuplicateAltAcct_ = DuplicateAltAcct_;
    p->BankDetlName_ = BankDetlName_;
    p->OPDeliveryMethods_ = OPDeliveryMethods_;
    p->OPDeliveryOption_ = OPDeliveryOption_;
    p->CnsntToWaive_ = CnsntToWaive_;
    p->OverridePrcntFree_ = OverridePrcntFree_;
    p->OvrdRBLThrshld_ = OvrdRBLThrshld_;
    p->CommonCurrency_ = CommonCurrency_;
    p->RBLThrshldDflt_ = RBLThrshldDflt_;
    p->DispRBLSysThrshld_ = DispRBLSysThrshld_;
    p->ShrAddressFormat_ = ShrAddressFormat_;
    p->FundLimitOverride_ = FundLimitOverride_;
    p->RestrictAMSBroker_ = RestrictAMSBroker_;
    p->NetworkOrder_ = NetworkOrder_;
    p->EarlyPWFeeElig_ = EarlyPWFeeElig_;
    p->ShortTermTRFeeElig_ = ShortTermTRFeeElig_;
    p->MailingByFundGroup_ = MailingByFundGroup_;
    p->ATFeeApply_ = ATFeeApply_;
    p->FeeOverrideType_ = FeeOverrideType_;
    p->SummitAccountsLowerBound_ = SummitAccountsLowerBound_;
    p->SummitAccountsUpperBound_ = SummitAccountsUpperBound_;
    p->RRIFToAlloc_ = RRIFToAlloc_;
    p->ACHTrailerFee_ = ACHTrailerFee_;
    p->ACHCommission_ = ACHCommission_;
    p->ACHDividend_ = ACHDividend_;
    p->KYCAccountLevel_ = KYCAccountLevel_;
    p->AllowRetMailAutomation_ = AllowRetMailAutomation_;
    p->NoWithTax_ = NoWithTax_;
    p->TaxOnRRIFRed_ = TaxOnRRIFRed_;
    p->WithTaxOverride_ = WithTaxOverride_;
    p->AutomaticAll_ = AutomaticAll_;
    p->RIFTTaxableRedCode_ = RIFTTaxableRedCode_;
    p->FullRedCode_ = FullRedCode_;
    p->AllowMultiFundTransfer_ = AllowMultiFundTransfer_;
    p->SalutationFormat_ = SalutationFormat_;
    p->DefaultBankInstCode_ = DefaultBankInstCode_;
    p->NASUPopupOptions_ = NASUPopupOptions_;
    p->AFBAgentCoCode_ = AFBAgentCoCode_;
    p->DefaultSTTRFlag_ = DefaultSTTRFlag_;
    p->DefaultERFlag_ = DefaultERFlag_;
    p->ADLevyFee_ = ADLevyFee_;
    p->ADLevyFeeTransType_ = ADLevyFeeTransType_;
    p->FndMrgRedCod_ = FndMrgRedCod_;
    p->NSCCCompliant_ = NSCCCompliant_;
    p->NSCCCurrencyList_ = NSCCCurrencyList_;
    p->STTRFeeExclRedCodeList_ = STTRFeeExclRedCodeList_;
    p->EntityRiskLevel_ = EntityRiskLevel_;
    p->EqualizationActive_ = EqualizationActive_;
    p->RegisteredTaxTypes_ = RegisteredTaxTypes_;
    p->AntiDilutionCalc_ = AntiDilutionCalc_;
    p->UFactorCodes_ = UFactorCodes_;
    p->ACHPurch_ = ACHPurch_;
    p->ACHSWP_ = ACHSWP_;
    p->ACHAdminFee_ = ACHAdminFee_;
    p->ClearingIdDefault_ = ClearingIdDefault_;
    p->ErrorAcctNum_ = ErrorAcctNum_;
    p->FundBrokerApplicable_ = FundBrokerApplicable_;
    p->ValidNetworkType_ = ValidNetworkType_;
    p->NetworkTypeUpd_ = NetworkTypeUpd_;
    p->EUSDParticip_ = EUSDParticip_;
    p->DefEUSDOption_ = DefEUSDOption_;
    p->VerCancTrd_ = VerCancTrd_;
    p->ActCatNegBal_ = ActCatNegBal_;
    p->ActCatWireSett_ = ActCatWireSett_;
    p->BackDatedReason_ = BackDatedReason_;
    p->Accountable_ = Accountable_;
    p->OPCConfirmsBrokerScreen_ = OPCConfirmsBrokerScreen_;
    p->JumboPriceApplicable_ = JumboPriceApplicable_;
    p->ClawbackBasedOnDate_ = ClawbackBasedOnDate_;
    p->EUSDOption_ = EUSDOption_;
    p->SuppressInactiveFunds_ = SuppressInactiveFunds_;
    p->ExemptLevelList_ = ExemptLevelList_;
    p->AccessLevelCat_ = AccessLevelCat_;
    p->GWOSupported_ = GWOSupported_;
    p->AssigneeScreen_ = AssigneeScreen_;
    p->Address1_ = Address1_;
    p->Address2_ = Address2_;
    p->Address3_ = Address3_;
    p->Address4_ = Address4_;
    p->Address5_ = Address5_;
    p->PostalCode_ = PostalCode_;
    p->CountryCode_ = CountryCode_;
    p->ClientName_ = ClientName_;
    p->RedPayEntExist_ = RedPayEntExist_;
    p->IsRRIFUnusedMaxApp_ = IsRRIFUnusedMaxApp_;
    p->CompanyCode_ = CompanyCode_;
    p->JointDefaultDisposition_ = JointDefaultDisposition_;
    p->BackWithholdTax_ = BackWithholdTax_;
    p->ConsolTransType_ = ConsolTransType_;
    p->Consolidation_ = Consolidation_;
    p->ConsolDefault_ = ConsolDefault_;
    p->PurchNetting_ = PurchNetting_;
    p->DftOrdTypeTR_ = DftOrdTypeTR_;
    p->DftOrdTypeEX_ = DftOrdTypeEX_;
    p->DftOrdTypeDSK_ = DftOrdTypeDSK_;
    p->CSSStopSINMatch_ = CSSStopSINMatch_;
    p->AMSFreqOvrd_ = AMSFreqOvrd_;
    p->RebalanceDay_ = RebalanceDay_;
    p->DistribChkAllowTfr_ = DistribChkAllowTfr_;
    p->KYCLevel_ = KYCLevel_;
    p->MFRCorporateFund_ = MFRCorporateFund_;
    p->NetOfFeesDate_ = NetOfFeesDate_;
    p->DispHistUnitACB_ = DispHistUnitACB_;
    p->DivDates_ = DivDates_;
    p->SwitchBanks_ = SwitchBanks_;
    p->CheckCloseBatch_ = CheckCloseBatch_;
    p->DefltFeeOption_ = DefltFeeOption_;
    p->OnLineEntExcept_ = OnLineEntExcept_;
    p->UnitRoundingApplicable_ = UnitRoundingApplicable_;
    p->UnitRoundMethod_ = UnitRoundMethod_;
    p->RegDocsExist_ = RegDocsExist_;
    p->DeathClaimDocExist_ = DeathClaimDocExist_;
    p->UnregPlan_ = UnregPlan_;
    p->NonregLike_ = NonregLike_;
    p->IntRIFPlan_ = IntRIFPlan_;
    p->ExtRIFPlan_ = ExtRIFPlan_;
    p->AllRIFPlan_ = AllRIFPlan_;
    p->IntLIRAPlan_ = IntLIRAPlan_;
    p->AllLIRAPlan_ = AllLIRAPlan_;
    p->IntRESP_ = IntRESP_;
    p->IntRSP_ = IntRSP_;
    p->TaxJurisUpdateOpt_ = TaxJurisUpdateOpt_;
    p->RetMailOrStlDtChqAlert_ = RetMailOrStlDtChqAlert_;
    p->DeathClaimRedCodes_ = DeathClaimRedCodes_;
    p->IntLockInPlan_ = IntLockInPlan_;
    p->AlwdTaxType_ = AlwdTaxType_;
    p->LIRALike_ = LIRALike_;
    p->LIFLike_ = LIFLike_;
    p->FELCommOnGrant_ = FELCommOnGrant_;
    p->AllocTypeForBrokerValidation_ = AllocTypeForBrokerValidation_;
    p->TFSATaxList_ = TFSATaxList_;
    p->AutoBatch_ = AutoBatch_;
    p->ClosedCountryApplicable_ = ClosedCountryApplicable_;
    p->DskPCLookEnb_ = DskPCLookEnb_;
    p->DirectDepositBankApplicable_ = DirectDepositBankApplicable_;
    p->VersionLabel_ = VersionLabel_;
    p->CompanyUrl_ = CompanyUrl_;
    p->SettleLocOpt_ = SettleLocOpt_;
    p->TUPActive_ = TUPActive_;
    p->TerminationAgeBeforeDeff_ = TerminationAgeBeforeDeff_;
    p->TerminationAgeAfterDeff_ = TerminationAgeAfterDeff_;
    p->RESPAgeLimitsDeff_ = RESPAgeLimitsDeff_;
    p->GuaranteeGuardOn_ = GuaranteeGuardOn_;
    p->TrailerFeeArch_ = TrailerFeeArch_;
    p->AllowChqChange_ = AllowChqChange_;
    p->TFSAAcctCatCodeList_ = TFSAAcctCatCodeList_;
    p->RRSPAcctCatCodeList_ = RRSPAcctCatCodeList_;
    p->NetworkRespReqApplicable_ = NetworkRespReqApplicable_;
    p->NetworkIDForAmountTrade_ = NetworkIDForAmountTrade_;
    p->AllEFTConsolActive_ = AllEFTConsolActive_;
    p->BulkBackDate_ = BulkBackDate_;
    p->AllEFTConsolShrLv_ = AllEFTConsolShrLv_;
    p->ACBUnitOffset_ = ACBUnitOffset_;
    p->EAPEarningCodes_ = EAPEarningCodes_;
    p->IWTEnable_ = IWTEnable_;
    p->IWTTaxJurisList_ = IWTTaxJurisList_;
    p->NonReceiptApplicable_ = NonReceiptApplicable_;
    p->GuaranteeCalcByRules_ = GuaranteeCalcByRules_;
    p->PorfolioIsRequried_ = PorfolioIsRequried_;
    p->SOFforSGMR_ = SOFforSGMR_;
    p->SourceOfFund_ = SourceOfFund_;
    p->StmtFreqDefault_ = StmtFreqDefault_;
    p->StmtFreqList_ = StmtFreqList_;
    p->RedCodesGuaranteeOverride_ = RedCodesGuaranteeOverride_;
    p->CPFActiveFlag_ = CPFActiveFlag_;
    p->PrintAcctConf_ = PrintAcctConf_;
    p->LanguageDefault_ = LanguageDefault_;
    p->EmpAgentAppl_ = EmpAgentAppl_;
    p->FundEliPSG_ = FundEliPSG_;
    p->FundSERVValidation_ = FundSERVValidation_;
    p->LTAIndicator_ = LTAIndicator_;
    p->ModifyCompAgent_ = ModifyCompAgent_;
    p->SourceOfFundApp_ = SourceOfFundApp_;
    p->RefundRVCD_ = RefundRVCD_;
    p->FundAlloc_ = FundAlloc_;
    p->NFConfBnkDetl_ = NFConfBnkDetl_;
    p->RefundCalc_ = RefundCalc_;
    p->DilutionCalc_ = DilutionCalc_;
    p->SrcOfFunds_IA_Required_ = SrcOfFunds_IA_Required_;
    p->SrcOfFunds_IA_ED_ = SrcOfFunds_IA_ED_;
    p->SrcOfFunds_IA_PW_ = SrcOfFunds_IA_PW_;
    p->SrcOfFunds_IA_GIC_ = SrcOfFunds_IA_GIC_;
    p->SrcOfFunds_IA_SWP_ = SrcOfFunds_IA_SWP_;
    p->SrcOfFunds_IA_RIF_ = SrcOfFunds_IA_RIF_;
    p->TaxAnniversary_ = TaxAnniversary_;
    p->RightToCancelDefault_ = RightToCancelDefault_;
    p->FATCAApplicable_ = FATCAApplicable_;
    p->RDREnv_ = RDREnv_;
    p->ApplFeeModelType_ = ApplFeeModelType_;
    p->AutoGenFeeModelCode_ = AutoGenFeeModelCode_;
    p->AutoStopAssociation_ = AutoStopAssociation_;
    p->ListDocType_ = ListDocType_;
    p->InvApplicable_ = InvApplicable_;
    p->RptGrpApplicable_ = RptGrpApplicable_;
    p->MstrActActive_ = MstrActActive_;
    p->MstrActAttrbName_ = MstrActAttrbName_;
    p->MstrActAttrbValue_ = MstrActAttrbValue_;
    p->IsTrlFeeAcctLevelApp_ = IsTrlFeeAcctLevelApp_;
    p->ReportFFIType_ = ReportFFIType_;
    p->FundIDList_ = FundIDList_;
    p->RetMailUpdt_ = RetMailUpdt_;
    p->AllowBankUpdOnProcessedPAC_ = AllowBankUpdOnProcessedPAC_;
    p->DistribInstrAsRatioOpt_ = DistribInstrAsRatioOpt_;
    p->MgmtFeePayOptOvd_ = MgmtFeePayOptOvd_;
    p->OPCNonFinConfDefPAC_ = OPCNonFinConfDefPAC_;
    p->ShowDilution_ = ShowDilution_;
    p->ShowExSysDilPymtNSM_ = ShowExSysDilPymtNSM_;
    p->CPFRefundApplicable_ = CPFRefundApplicable_;
    p->MultiPrices_ = MultiPrices_;
    p->SAGESActive_ = SAGESActive_;
    p->SAGESDeff_ = SAGESDeff_;
    p->TFRApplicable_ = TFRApplicable_;
    p->CIApplicable_ = CIApplicable_;
    p->SIApplicable_ = SIApplicable_;
    p->AdvisorFeeAppl_ = AdvisorFeeAppl_;
    p->EDocsAccessAppl_ = EDocsAccessAppl_;
    p->AutoDefaultCancelGrant_ = AutoDefaultCancelGrant_;
    p->AggActive_ = AggActive_;
    p->AggActCatgry_ = AggActCatgry_;
    p->AggDefAggMod_ = AggDefAggMod_;
    p->BankingLevel_ = BankingLevel_;
    p->DefaultBankingLevel_ = DefaultBankingLevel_;
    p->HighRiskDispMode_ = HighRiskDispMode_;
    p->HighRiskLevels_ = HighRiskLevels_;
    p->RiskApplEntity_ = RiskApplEntity_;
    p->RiskApplEntitySeq_ = RiskApplEntitySeq_;
    p->RiskForAcctHldrRsk_ = RiskForAcctHldrRsk_;
    p->RebalDateFormat_ = RebalDateFormat_;
    p->IsRESPTransform_ = IsRESPTransform_;
    p->CRSEntityList_ = CRSEntityList_;
    p->TaxComplianceList_ = TaxComplianceList_;
    p->CRSActive_ = CRSActive_;
    p->TrackTrActive_ = TrackTrActive_;
    p->TrackTrRedCode_ = TrackTrRedCode_;
    p->TrackTrDepCode_ = TrackTrDepCode_;
    p->TrackTrOther_ = TrackTrOther_;
    p->OrigTradeFee_ = OrigTradeFee_;
    p->AltFndIdntfr_ = AltFndIdntfr_;
    p->TFSAAgeOfMajor_ = TFSAAgeOfMajor_;
    p->TFSAProvCode_ = TFSAProvCode_;
    p->ApplPUDbyDefault_ = ApplPUDbyDefault_;
    p->ApplPUDbyBEL_ = ApplPUDbyBEL_;
    p->ApplPUDbyCB_ = ApplPUDbyCB_;
    p->RefundAllowed_ = RefundAllowed_;
    p->RefundSettleDateOpt_ = RefundSettleDateOpt_;
    p->ShowCGMktVal_ = ShowCGMktVal_;
    p->PrcntFeeDipOpt_ = PrcntFeeDipOpt_;
    p->MultipleRisk_ = MultipleRisk_;
    p->AWDPortalURL_ = AWDPortalURL_;
    p->IntraDayPricing_ = IntraDayPricing_;
    p->LastNameFormat_ = LastNameFormat_;
    p->PendingTradeCashDateOverride_ = PendingTradeCashDateOverride_;
    p->OrderUserOverride_ = OrderUserOverride_;
    p->DefStatus_ = DefStatus_;
    return(p);
}

BFDataField* dsi_DSTC0149_VW::getElement( const BFFieldId& id )
{
    switch( id.getId() ) {
        case 40002091: return ( &AllowMultiplePacSwp_ ); break; // AllowMultiplePacSwp
        case 40002092: return ( &SWPEditlevel_ ); break; // SWPEditlevel
        case 40002093: return ( &SWPMin_ ); break; // SWPMin
        case 40002094: return ( &SWPHardEdit_ ); break; // SWPHardEdit
        case 40002296: return ( &DSCOverride_ ); break; // DSCOverride
        case 40002297: return ( &DabScreen_ ); break; // DabScreen
        case 40001649: return ( &DepositId2_ ); break; // DepositId2
        case 40002451: return ( &DispClientTradeID_ ); break; // DispClientTradeID
        case 40002458: return ( &DefaultBankType_ ); break; // DefaultBankType
        case 40002459: return ( &DispManageStyle_ ); break; // DispManageStyle
        case 40002483: return ( &DefaultBankUpd_ ); break; // DefaultBankUpd
        case 40002484: return ( &SplitOnAddPur_ ); break; // SplitOnAddPur
        case 40002486: return ( &SplitOnModPur_ ); break; // SplitOnModPur
        case 40002487: return ( &SplitOnReqOnly_ ); break; // SplitOnReqOnly
        case 40002488: return ( &SplitComBankDeflt_ ); break; // SplitComBankDeflt
        case 40002489: return ( &ValSplCom_ ); break; // ValSplCom
        case 40002580: return ( &SavePlanClient_ ); break; // SavePlanClient
        case 40002583: return ( &PACLastRunDate_ ); break; // PACLastRunDate
        case 40002584: return ( &SWPLastRunDate_ ); break; // SWPLastRunDate
        case 40002635: return ( &ManualSettleDates_ ); break; // ManualSettleDates
        case 40002659: return ( &ACHSavingsPlan_ ); break; // ACHSavingsPlan
        case 40002661: return ( &ACHPAC_ ); break; // ACHPAC
        case 40002748: return ( &ForeignContent_ ); break; // ForeignContent
        case 40002784: return ( &AllowUnitsPurchase_ ); break; // AllowUnitsPurchase
        case 40002785: return ( &MultiCurrEFTUnitPurch_ ); break; // MultiCurrEFTUnitPurch
        case 40002786: return ( &DisAllowPayTypeUnitPurch_ ); break; // DisAllowPayTypeUnitPurch
        case 40002787: return ( &AllowCashDistrib_ ); break; // AllowCashDistrib
        case 40002788: return ( &PACCalendar_ ); break; // PACCalendar
        case 40002801: return ( &ProductGroupCode_ ); break; // ProductGroupCode
        case 40002800: return ( &TradeDateLag_ ); break; // TradeDateLag
        case 40002803: return ( &TradeDateLagExch_ ); break; // TradeDateLagExch
        case 40002897: return ( &FCRebalancing_ ); break; // FCRebalancing
        case 40002966: return ( &CommFeeCodes_ ); break; // CommFeeCodes
        case 40002967: return ( &CalcSwitch_ ); break; // CalcSwitch
        case 40002968: return ( &MiscFeeDefn_ ); break; // MiscFeeDefn
        case 40002975: return ( &AcctLvlFIFO_ ); break; // AcctLvlFIFO
        case 40002976: return ( &CompCodeFlag_ ); break; // CompCodeFlag
        case 40002997: return ( &PriceProcAtFndGrp_ ); break; // PriceProcAtFndGrp
        case 40003013: return ( &MgmtFeeType_ ); break; // MgmtFeeType
        case 40003041: return ( &LLPWithdrawalRules_ ); break; // LLPWithdrawalRules
        case 40003910: return ( &RRIFFromAlloc_ ); break; // RRIFFromAlloc
        case 40003132: return ( &IsoCompliant_ ); break; // IsoCompliant
        case 40003042: return ( &ReviewDateFlag_ ); break; // ReviewDateFlag
        case 40003043: return ( &OverrideReviewDate_ ); break; // OverrideReviewDate
        case 40003044: return ( &ReviewMnths_ ); break; // ReviewMnths
        case 40003100: return ( &BankChrgs_ ); break; // BankChrgs
        case 40003123: return ( &ConsolidEFT_ ); break; // ConsolidEFT
        case 40003180: return ( &ACHRedemption_ ); break; // ACHRedemption
        case 40003143: return ( &ValueDateApplic_ ); break; // ValueDateApplic
        case 40003108: return ( &SettleAll_ ); break; // SettleAll
        case 40003181: return ( &DuplicateAltAcct_ ); break; // DuplicateAltAcct
        case 40003219: return ( &BankDetlName_ ); break; // BankDetlName
        case 40003242: return ( &OPDeliveryMethods_ ); break; // OPDeliveryMethods
        case 40003244: return ( &OPDeliveryOption_ ); break; // OPDeliveryOption
        case 40003385: return ( &CnsntToWaive_ ); break; // CnsntToWaive
        case 40003449: return ( &OverridePrcntFree_ ); break; // OverridePrcntFree
        case 40003450: return ( &OvrdRBLThrshld_ ); break; // OvrdRBLThrshld
        case 40003451: return ( &CommonCurrency_ ); break; // CommonCurrency
        case 40003452: return ( &RBLThrshldDflt_ ); break; // RBLThrshldDflt
        case 40003453: return ( &DispRBLSysThrshld_ ); break; // DispRBLSysThrshld
        case 40003765: return ( &ShrAddressFormat_ ); break; // ShrAddressFormat
        case 40003774: return ( &FundLimitOverride_ ); break; // FundLimitOverride
        case 40003795: return ( &RestrictAMSBroker_ ); break; // RestrictAMSBroker
        case 40003791: return ( &NetworkOrder_ ); break; // NetworkOrder
        case 40003820: return ( &EarlyPWFeeElig_ ); break; // EarlyPWFeeElig
        case 40003821: return ( &ShortTermTRFeeElig_ ); break; // ShortTermTRFeeElig
        case 40003850: return ( &MailingByFundGroup_ ); break; // MailingByFundGroup
        case 40003881: return ( &ATFeeApply_ ); break; // ATFeeApply
        case 40003882: return ( &FeeOverrideType_ ); break; // FeeOverrideType
        case 40003905: return ( &SummitAccountsLowerBound_ ); break; // SummitAccountsLowerBound
        case 40003906: return ( &SummitAccountsUpperBound_ ); break; // SummitAccountsUpperBound
        case 40003911: return ( &RRIFToAlloc_ ); break; // RRIFToAlloc
        case 40003933: return ( &ACHTrailerFee_ ); break; // ACHTrailerFee
        case 40003934: return ( &ACHCommission_ ); break; // ACHCommission
        case 40003935: return ( &ACHDividend_ ); break; // ACHDividend
        case 40004007: return ( &KYCAccountLevel_ ); break; // KYCAccountLevel
        case 40004060: return ( &AllowRetMailAutomation_ ); break; // AllowRetMailAutomation
        case 40004094: return ( &NoWithTax_ ); break; // NoWithTax
        case 40004095: return ( &TaxOnRRIFRed_ ); break; // TaxOnRRIFRed
        case 40004096: return ( &WithTaxOverride_ ); break; // WithTaxOverride
        case 40004097: return ( &AutomaticAll_ ); break; // AutomaticAll
        case 40004098: return ( &RIFTTaxableRedCode_ ); break; // RIFTTaxableRedCode
        case 40003405: return ( &FullRedCode_ ); break; // FullRedCode
        case 40004148: return ( &AllowMultiFundTransfer_ ); break; // AllowMultiFundTransfer
        case 40004197: return ( &SalutationFormat_ ); break; // SalutationFormat
        case 40004171: return ( &DefaultBankInstCode_ ); break; // DefaultBankInstCode
        case 40004307: return ( &NASUPopupOptions_ ); break; // NASUPopupOptions
        case 40004325: return ( &AFBAgentCoCode_ ); break; // AFBAgentCoCode
        case 40004353: return ( &DefaultSTTRFlag_ ); break; // DefaultSTTRFlag
        case 40004354: return ( &DefaultERFlag_ ); break; // DefaultERFlag
        case 40004355: return ( &ADLevyFee_ ); break; // ADLevyFee
        case 40004365: return ( &ADLevyFeeTransType_ ); break; // ADLevyFeeTransType
        case 40004414: return ( &FndMrgRedCod_ ); break; // FndMrgRedCod
        case 40004419: return ( &NSCCCompliant_ ); break; // NSCCCompliant
        case 40004421: return ( &NSCCCurrencyList_ ); break; // NSCCCurrencyList
        case 40004440: return ( &STTRFeeExclRedCodeList_ ); break; // STTRFeeExclRedCodeList
        case 40004437: return ( &EntityRiskLevel_ ); break; // EntityRiskLevel
        case 40004532: return ( &EqualizationActive_ ); break; // EqualizationActive
        case 40004579: return ( &RegisteredTaxTypes_ ); break; // RegisteredTaxTypes
        case 40004634: return ( &AntiDilutionCalc_ ); break; // AntiDilutionCalc
        case 40004650: return ( &UFactorCodes_ ); break; // UFactorCodes
        case 40004651: return ( &ACHPurch_ ); break; // ACHPurch
        case 40004652: return ( &ACHSWP_ ); break; // ACHSWP
        case 40004647: return ( &ACHAdminFee_ ); break; // ACHAdminFee
        case 40004798: return ( &ClearingIdDefault_ ); break; // ClearingIdDefault
        case 40004799: return ( &ErrorAcctNum_ ); break; // ErrorAcctNum
        case 40004776: return ( &FundBrokerApplicable_ ); break; // FundBrokerApplicable
        case 40004971: return ( &ValidNetworkType_ ); break; // ValidNetworkType
        case 40004982: return ( &NetworkTypeUpd_ ); break; // NetworkTypeUpd
        case 40005051: return ( &EUSDParticip_ ); break; // EUSDParticip
        case 40005052: return ( &DefEUSDOption_ ); break; // DefEUSDOption
        case 40005096: return ( &VerCancTrd_ ); break; // VerCancTrd
        case 40005324: return ( &ActCatNegBal_ ); break; // ActCatNegBal
        case 40005325: return ( &ActCatWireSett_ ); break; // ActCatWireSett
        case 40001353: return ( &BackDatedReason_ ); break; // BackDatedReason
        case 40000476: return ( &Accountable_ ); break; // Accountable
        case 40005135: return ( &OPCConfirmsBrokerScreen_ ); break; // OPCConfirmsBrokerScreen
        case 40005217: return ( &JumboPriceApplicable_ ); break; // JumboPriceApplicable
        case 40005218: return ( &ClawbackBasedOnDate_ ); break; // ClawbackBasedOnDate
        case 40005219: return ( &EUSDOption_ ); break; // EUSDOption
        case 40005260: return ( &SuppressInactiveFunds_ ); break; // SuppressInactiveFunds
        case 40005375: return ( &ExemptLevelList_ ); break; // ExemptLevelList
        case 40005433: return ( &AccessLevelCat_ ); break; // AccessLevelCat
        case 40005444: return ( &GWOSupported_ ); break; // GWOSupported
        case 40005467: return ( &AssigneeScreen_ ); break; // AssigneeScreen
        case 40000138: return ( &Address1_ ); break; // Address1
        case 40000139: return ( &Address2_ ); break; // Address2
        case 40000140: return ( &Address3_ ); break; // Address3
        case 40000141: return ( &Address4_ ); break; // Address4
        case 40000142: return ( &Address5_ ); break; // Address5
        case 40000143: return ( &PostalCode_ ); break; // PostalCode
        case 40000344: return ( &CountryCode_ ); break; // CountryCode
        case 40005470: return ( &ClientName_ ); break; // ClientName
        case 40005491: return ( &RedPayEntExist_ ); break; // RedPayEntExist
        case 40005532: return ( &IsRRIFUnusedMaxApp_ ); break; // IsRRIFUnusedMaxApp
        case 40002245: return ( &CompanyCode_ ); break; // CompanyCode
        case 40005555: return ( &JointDefaultDisposition_ ); break; // JointDefaultDisposition
        case 40005561: return ( &BackWithholdTax_ ); break; // BackWithholdTax
        case 40005564: return ( &ConsolTransType_ ); break; // ConsolTransType
        case 40005566: return ( &Consolidation_ ); break; // Consolidation
        case 40005567: return ( &ConsolDefault_ ); break; // ConsolDefault
        case 40005570: return ( &PurchNetting_ ); break; // PurchNetting
        case 40005574: return ( &DftOrdTypeTR_ ); break; // DftOrdTypeTR
        case 40005575: return ( &DftOrdTypeEX_ ); break; // DftOrdTypeEX
        case 40005576: return ( &DftOrdTypeDSK_ ); break; // DftOrdTypeDSK
        case 40005588: return ( &CSSStopSINMatch_ ); break; // CSSStopSINMatch
        case 40005600: return ( &AMSFreqOvrd_ ); break; // AMSFreqOvrd
        case 40005601: return ( &RebalanceDay_ ); break; // RebalanceDay
        case 40005660: return ( &DistribChkAllowTfr_ ); break; // DistribChkAllowTfr
        case 40005661: return ( &KYCLevel_ ); break; // KYCLevel
        case 40005710: return ( &MFRCorporateFund_ ); break; // MFRCorporateFund
        case 40005730: return ( &NetOfFeesDate_ ); break; // NetOfFeesDate
        case 40005736: return ( &DispHistUnitACB_ ); break; // DispHistUnitACB
        case 40005744: return ( &DivDates_ ); break; // DivDates
        case 40005746: return ( &SwitchBanks_ ); break; // SwitchBanks
        case 40005712: return ( &CheckCloseBatch_ ); break; // CheckCloseBatch
        case 40005780: return ( &DefltFeeOption_ ); break; // DefltFeeOption
        case 40005784: return ( &OnLineEntExcept_ ); break; // OnLineEntExcept
        case 40005817: return ( &UnitRoundingApplicable_ ); break; // UnitRoundingApplicable
        case 40005816: return ( &UnitRoundMethod_ ); break; // UnitRoundMethod
        case 40005856: return ( &RegDocsExist_ ); break; // RegDocsExist
        case 40005857: return ( &DeathClaimDocExist_ ); break; // DeathClaimDocExist
        case 40005905: return ( &UnregPlan_ ); break; // UnregPlan
        case 40005906: return ( &NonregLike_ ); break; // NonregLike
        case 40005907: return ( &IntRIFPlan_ ); break; // IntRIFPlan
        case 40005908: return ( &ExtRIFPlan_ ); break; // ExtRIFPlan
        case 40005909: return ( &AllRIFPlan_ ); break; // AllRIFPlan
        case 40005910: return ( &IntLIRAPlan_ ); break; // IntLIRAPlan
        case 40005911: return ( &AllLIRAPlan_ ); break; // AllLIRAPlan
        case 40005912: return ( &IntRESP_ ); break; // IntRESP
        case 40005913: return ( &IntRSP_ ); break; // IntRSP
        case 40005934: return ( &TaxJurisUpdateOpt_ ); break; // TaxJurisUpdateOpt
        case 40005936: return ( &RetMailOrStlDtChqAlert_ ); break; // RetMailOrStlDtChqAlert
        case 40005941: return ( &DeathClaimRedCodes_ ); break; // DeathClaimRedCodes
        case 40005942: return ( &IntLockInPlan_ ); break; // IntLockInPlan
        case 40005943: return ( &AlwdTaxType_ ); break; // AlwdTaxType
        case 40005944: return ( &LIRALike_ ); break; // LIRALike
        case 40005945: return ( &LIFLike_ ); break; // LIFLike
        case 40005948: return ( &FELCommOnGrant_ ); break; // FELCommOnGrant
        case 40005958: return ( &AllocTypeForBrokerValidation_ ); break; // AllocTypeForBrokerValidation
        case 40005967: return ( &TFSATaxList_ ); break; // TFSATaxList
        case 40005976: return ( &AutoBatch_ ); break; // AutoBatch
        case 40005983: return ( &ClosedCountryApplicable_ ); break; // ClosedCountryApplicable
        case 40005991: return ( &DskPCLookEnb_ ); break; // DskPCLookEnb
        case 40005992: return ( &DirectDepositBankApplicable_ ); break; // DirectDepositBankApplicable
        case 40004309: return ( &VersionLabel_ ); break; // VersionLabel
        case 40005717: return ( &CompanyUrl_ ); break; // CompanyUrl
        case 40006015: return ( &SettleLocOpt_ ); break; // SettleLocOpt
        case 40006066: return ( &TUPActive_ ); break; // TUPActive
        case 40006199: return ( &TerminationAgeBeforeDeff_ ); break; // TerminationAgeBeforeDeff
        case 40006200: return ( &TerminationAgeAfterDeff_ ); break; // TerminationAgeAfterDeff
        case 40006201: return ( &RESPAgeLimitsDeff_ ); break; // RESPAgeLimitsDeff
        case 40006289: return ( &GuaranteeGuardOn_ ); break; // GuaranteeGuardOn
        case 40006315: return ( &TrailerFeeArch_ ); break; // TrailerFeeArch
        case 40006335: return ( &AllowChqChange_ ); break; // AllowChqChange
        case 40006341: return ( &TFSAAcctCatCodeList_ ); break; // TFSAAcctCatCodeList
        case 40006342: return ( &RRSPAcctCatCodeList_ ); break; // RRSPAcctCatCodeList
        case 40006384: return ( &NetworkRespReqApplicable_ ); break; // NetworkRespReqApplicable
        case 40006385: return ( &NetworkIDForAmountTrade_ ); break; // NetworkIDForAmountTrade
        case 40006387: return ( &AllEFTConsolActive_ ); break; // AllEFTConsolActive
        case 40006388: return ( &BulkBackDate_ ); break; // BulkBackDate
        case 40006389: return ( &AllEFTConsolShrLv_ ); break; // AllEFTConsolShrLv
        case 40006408: return ( &ACBUnitOffset_ ); break; // ACBUnitOffset
        case 40006418: return ( &EAPEarningCodes_ ); break; // EAPEarningCodes
        case 40006423: return ( &IWTEnable_ ); break; // IWTEnable
        case 40006424: return ( &IWTTaxJurisList_ ); break; // IWTTaxJurisList
        case 40006585: return ( &NonReceiptApplicable_ ); break; // NonReceiptApplicable
        case 40006586: return ( &GuaranteeCalcByRules_ ); break; // GuaranteeCalcByRules
        case 40006572: return ( &PorfolioIsRequried_ ); break; // PorfolioIsRequried
        case 40006700: return ( &SOFforSGMR_ ); break; // SOFforSGMR
        case 40002038: return ( &SourceOfFund_ ); break; // SourceOfFund
        case 40006677: return ( &StmtFreqDefault_ ); break; // StmtFreqDefault
        case 40006678: return ( &StmtFreqList_ ); break; // StmtFreqList
        case 40006812: return ( &RedCodesGuaranteeOverride_ ); break; // RedCodesGuaranteeOverride
        case 40006832: return ( &CPFActiveFlag_ ); break; // CPFActiveFlag
        case 40006838: return ( &PrintAcctConf_ ); break; // PrintAcctConf
        case 40006834: return ( &LanguageDefault_ ); break; // LanguageDefault
        case 40006849: return ( &EmpAgentAppl_ ); break; // EmpAgentAppl
        case 40006851: return ( &FundEliPSG_ ); break; // FundEliPSG
        case 40006852: return ( &FundSERVValidation_ ); break; // FundSERVValidation
        case 40006853: return ( &LTAIndicator_ ); break; // LTAIndicator
        case 40006854: return ( &ModifyCompAgent_ ); break; // ModifyCompAgent
        case 40006865: return ( &SourceOfFundApp_ ); break; // SourceOfFundApp
        case 40006874: return ( &RefundRVCD_ ); break; // RefundRVCD
        case 40003517: return ( &FundAlloc_ ); break; // FundAlloc
        case 40006875: return ( &NFConfBnkDetl_ ); break; // NFConfBnkDetl
        case 40006863: return ( &RefundCalc_ ); break; // RefundCalc
        case 40006864: return ( &DilutionCalc_ ); break; // DilutionCalc
        case 40006893: return ( &SrcOfFunds_IA_Required_ ); break; // SrcOfFunds_IA_Required
        case 40006895: return ( &SrcOfFunds_IA_ED_ ); break; // SrcOfFunds_IA_ED
        case 40006896: return ( &SrcOfFunds_IA_PW_ ); break; // SrcOfFunds_IA_PW
        case 40006897: return ( &SrcOfFunds_IA_GIC_ ); break; // SrcOfFunds_IA_GIC
        case 40006898: return ( &SrcOfFunds_IA_SWP_ ); break; // SrcOfFunds_IA_SWP
        case 40006899: return ( &SrcOfFunds_IA_RIF_ ); break; // SrcOfFunds_IA_RIF
        case 40006914: return ( &TaxAnniversary_ ); break; // TaxAnniversary
        case 40006943: return ( &RightToCancelDefault_ ); break; // RightToCancelDefault
        case 40006946: return ( &FATCAApplicable_ ); break; // FATCAApplicable
        case 40006962: return ( &RDREnv_ ); break; // RDREnv
        case 40007026: return ( &ApplFeeModelType_ ); break; // ApplFeeModelType
        case 40007027: return ( &AutoGenFeeModelCode_ ); break; // AutoGenFeeModelCode
        case 40007028: return ( &AutoStopAssociation_ ); break; // AutoStopAssociation
        case 40007036: return ( &ListDocType_ ); break; // ListDocType
        case 40007113: return ( &InvApplicable_ ); break; // InvApplicable
        case 40007114: return ( &RptGrpApplicable_ ); break; // RptGrpApplicable
        case 40007120: return ( &MstrActActive_ ); break; // MstrActActive
        case 40007121: return ( &MstrActAttrbName_ ); break; // MstrActAttrbName
        case 40007122: return ( &MstrActAttrbValue_ ); break; // MstrActAttrbValue
        case 40007129: return ( &IsTrlFeeAcctLevelApp_ ); break; // IsTrlFeeAcctLevelApp
        case 40007140: return ( &ReportFFIType_ ); break; // ReportFFIType
        case 40007176: return ( &FundIDList_ ); break; // FundIDList
        case 40007229: return ( &RetMailUpdt_ ); break; // RetMailUpdt
        case 40007231: return ( &AllowBankUpdOnProcessedPAC_ ); break; // AllowBankUpdOnProcessedPAC
        case 40007291: return ( &DistribInstrAsRatioOpt_ ); break; // DistribInstrAsRatioOpt
        case 40007304: return ( &MgmtFeePayOptOvd_ ); break; // MgmtFeePayOptOvd
        case 40007308: return ( &OPCNonFinConfDefPAC_ ); break; // OPCNonFinConfDefPAC
        case 40007328: return ( &ShowDilution_ ); break; // ShowDilution
        case 40007329: return ( &ShowExSysDilPymtNSM_ ); break; // ShowExSysDilPymtNSM
        case 40007344: return ( &CPFRefundApplicable_ ); break; // CPFRefundApplicable
        case 40007342: return ( &MultiPrices_ ); break; // MultiPrices
        case 40007357: return ( &SAGESActive_ ); break; // SAGESActive
        case 40007358: return ( &SAGESDeff_ ); break; // SAGESDeff
        case 40007387: return ( &TFRApplicable_ ); break; // TFRApplicable
        case 40007393: return ( &CIApplicable_ ); break; // CIApplicable
        case 40007396: return ( &SIApplicable_ ); break; // SIApplicable
        case 40007247: return ( &AdvisorFeeAppl_ ); break; // AdvisorFeeAppl
        case 40007429: return ( &EDocsAccessAppl_ ); break; // EDocsAccessAppl
        case 40007485: return ( &AutoDefaultCancelGrant_ ); break; // AutoDefaultCancelGrant
        case 40007494: return ( &AggActive_ ); break; // AggActive
        case 40007495: return ( &AggActCatgry_ ); break; // AggActCatgry
        case 40007496: return ( &AggDefAggMod_ ); break; // AggDefAggMod
        case 40007507: return ( &BankingLevel_ ); break; // BankingLevel
        case 40007508: return ( &DefaultBankingLevel_ ); break; // DefaultBankingLevel
        case 40007512: return ( &HighRiskDispMode_ ); break; // HighRiskDispMode
        case 40007513: return ( &HighRiskLevels_ ); break; // HighRiskLevels
        case 40007514: return ( &RiskApplEntity_ ); break; // RiskApplEntity
        case 40007515: return ( &RiskApplEntitySeq_ ); break; // RiskApplEntitySeq
        case 40007516: return ( &RiskForAcctHldrRsk_ ); break; // RiskForAcctHldrRsk
        case 40007529: return ( &RebalDateFormat_ ); break; // RebalDateFormat
        case 40007537: return ( &IsRESPTransform_ ); break; // IsRESPTransform
        case 40007584: return ( &CRSEntityList_ ); break; // CRSEntityList
        case 40007590: return ( &TaxComplianceList_ ); break; // TaxComplianceList
        case 40007591: return ( &CRSActive_ ); break; // CRSActive
        case 40007619: return ( &TrackTrActive_ ); break; // TrackTrActive
        case 40007620: return ( &TrackTrRedCode_ ); break; // TrackTrRedCode
        case 40007621: return ( &TrackTrDepCode_ ); break; // TrackTrDepCode
        case 40007622: return ( &TrackTrOther_ ); break; // TrackTrOther
        case 40007599: return ( &OrigTradeFee_ ); break; // OrigTradeFee
        case 40007634: return ( &AltFndIdntfr_ ); break; // AltFndIdntfr
        case 40007652: return ( &TFSAAgeOfMajor_ ); break; // TFSAAgeOfMajor
        case 40007651: return ( &TFSAProvCode_ ); break; // TFSAProvCode
        case 40007654: return ( &ApplPUDbyDefault_ ); break; // ApplPUDbyDefault
        case 40007657: return ( &ApplPUDbyBEL_ ); break; // ApplPUDbyBEL
        case 40007656: return ( &ApplPUDbyCB_ ); break; // ApplPUDbyCB
        case 40007658: return ( &RefundAllowed_ ); break; // RefundAllowed
        case 40007659: return ( &RefundSettleDateOpt_ ); break; // RefundSettleDateOpt
        case 40007690: return ( &ShowCGMktVal_ ); break; // ShowCGMktVal
        case 40007696: return ( &PrcntFeeDipOpt_ ); break; // PrcntFeeDipOpt
        case 40007746: return ( &MultipleRisk_ ); break; // MultipleRisk
        case 40007795: return ( &AWDPortalURL_ ); break; // AWDPortalURL
        case 40007885: return ( &IntraDayPricing_ ); break; // IntraDayPricing
        case 40007925: return ( &LastNameFormat_ ); break; // LastNameFormat
        case 40007237: return ( &PendingTradeCashDateOverride_ ); break; // PendingTradeCashDateOverride
        case 40007933: return ( &OrderUserOverride_ ); break; // OrderUserOverride
        case 40007943: return ( &DefStatus_ ); break; // DefStatus
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0149_VW::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0149_VW* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0149_VW::getElementByIndex( unsigned int iField )
{
    if ( iField >=0 && iField < 305 )
    {
        BFDataField* pField = aFlds_[iField];
        if( NULL == pField )
        {
            switch(iField)
            {
                case 0: aFlds_[0] = &AllowMultiplePacSwp_; break;
                case 1: aFlds_[1] = &SWPEditlevel_; break;
                case 2: aFlds_[2] = &SWPMin_; break;
                case 3: aFlds_[3] = &SWPHardEdit_; break;
                case 4: aFlds_[4] = &DSCOverride_; break;
                case 5: aFlds_[5] = &DabScreen_; break;
                case 6: aFlds_[6] = &DepositId2_; break;
                case 7: aFlds_[7] = &DispClientTradeID_; break;
                case 8: aFlds_[8] = &DefaultBankType_; break;
                case 9: aFlds_[9] = &DispManageStyle_; break;
                case 10: aFlds_[10] = &DefaultBankUpd_; break;
                case 11: aFlds_[11] = &SplitOnAddPur_; break;
                case 12: aFlds_[12] = &SplitOnModPur_; break;
                case 13: aFlds_[13] = &SplitOnReqOnly_; break;
                case 14: aFlds_[14] = &SplitComBankDeflt_; break;
                case 15: aFlds_[15] = &ValSplCom_; break;
                case 16: aFlds_[16] = &SavePlanClient_; break;
                case 17: aFlds_[17] = &PACLastRunDate_; break;
                case 18: aFlds_[18] = &SWPLastRunDate_; break;
                case 19: aFlds_[19] = &ManualSettleDates_; break;
                case 20: aFlds_[20] = &ACHSavingsPlan_; break;
                case 21: aFlds_[21] = &ACHPAC_; break;
                case 22: aFlds_[22] = &ForeignContent_; break;
                case 23: aFlds_[23] = &AllowUnitsPurchase_; break;
                case 24: aFlds_[24] = &MultiCurrEFTUnitPurch_; break;
                case 25: aFlds_[25] = &DisAllowPayTypeUnitPurch_; break;
                case 26: aFlds_[26] = &AllowCashDistrib_; break;
                case 27: aFlds_[27] = &PACCalendar_; break;
                case 28: aFlds_[28] = &ProductGroupCode_; break;
                case 29: aFlds_[29] = &TradeDateLag_; break;
                case 30: aFlds_[30] = &TradeDateLagExch_; break;
                case 31: aFlds_[31] = &FCRebalancing_; break;
                case 32: aFlds_[32] = &CommFeeCodes_; break;
                case 33: aFlds_[33] = &CalcSwitch_; break;
                case 34: aFlds_[34] = &MiscFeeDefn_; break;
                case 35: aFlds_[35] = &AcctLvlFIFO_; break;
                case 36: aFlds_[36] = &CompCodeFlag_; break;
                case 37: aFlds_[37] = &PriceProcAtFndGrp_; break;
                case 38: aFlds_[38] = &MgmtFeeType_; break;
                case 39: aFlds_[39] = &LLPWithdrawalRules_; break;
                case 40: aFlds_[40] = &RRIFFromAlloc_; break;
                case 41: aFlds_[41] = &IsoCompliant_; break;
                case 42: aFlds_[42] = &ReviewDateFlag_; break;
                case 43: aFlds_[43] = &OverrideReviewDate_; break;
                case 44: aFlds_[44] = &ReviewMnths_; break;
                case 45: aFlds_[45] = &BankChrgs_; break;
                case 46: aFlds_[46] = &ConsolidEFT_; break;
                case 47: aFlds_[47] = &ACHRedemption_; break;
                case 48: aFlds_[48] = &ValueDateApplic_; break;
                case 49: aFlds_[49] = &SettleAll_; break;
                case 50: aFlds_[50] = &DuplicateAltAcct_; break;
                case 51: aFlds_[51] = &BankDetlName_; break;
                case 52: aFlds_[52] = &OPDeliveryMethods_; break;
                case 53: aFlds_[53] = &OPDeliveryOption_; break;
                case 54: aFlds_[54] = &CnsntToWaive_; break;
                case 55: aFlds_[55] = &OverridePrcntFree_; break;
                case 56: aFlds_[56] = &OvrdRBLThrshld_; break;
                case 57: aFlds_[57] = &CommonCurrency_; break;
                case 58: aFlds_[58] = &RBLThrshldDflt_; break;
                case 59: aFlds_[59] = &DispRBLSysThrshld_; break;
                case 60: aFlds_[60] = &ShrAddressFormat_; break;
                case 61: aFlds_[61] = &FundLimitOverride_; break;
                case 62: aFlds_[62] = &RestrictAMSBroker_; break;
                case 63: aFlds_[63] = &NetworkOrder_; break;
                case 64: aFlds_[64] = &EarlyPWFeeElig_; break;
                case 65: aFlds_[65] = &ShortTermTRFeeElig_; break;
                case 66: aFlds_[66] = &MailingByFundGroup_; break;
                case 67: aFlds_[67] = &ATFeeApply_; break;
                case 68: aFlds_[68] = &FeeOverrideType_; break;
                case 69: aFlds_[69] = &SummitAccountsLowerBound_; break;
                case 70: aFlds_[70] = &SummitAccountsUpperBound_; break;
                case 71: aFlds_[71] = &RRIFToAlloc_; break;
                case 72: aFlds_[72] = &ACHTrailerFee_; break;
                case 73: aFlds_[73] = &ACHCommission_; break;
                case 74: aFlds_[74] = &ACHDividend_; break;
                case 75: aFlds_[75] = &KYCAccountLevel_; break;
                case 76: aFlds_[76] = &AllowRetMailAutomation_; break;
                case 77: aFlds_[77] = &NoWithTax_; break;
                case 78: aFlds_[78] = &TaxOnRRIFRed_; break;
                case 79: aFlds_[79] = &WithTaxOverride_; break;
                case 80: aFlds_[80] = &AutomaticAll_; break;
                case 81: aFlds_[81] = &RIFTTaxableRedCode_; break;
                case 82: aFlds_[82] = &FullRedCode_; break;
                case 83: aFlds_[83] = &AllowMultiFundTransfer_; break;
                case 84: aFlds_[84] = &SalutationFormat_; break;
                case 85: aFlds_[85] = &DefaultBankInstCode_; break;
                case 86: aFlds_[86] = &NASUPopupOptions_; break;
                case 87: aFlds_[87] = &AFBAgentCoCode_; break;
                case 88: aFlds_[88] = &DefaultSTTRFlag_; break;
                case 89: aFlds_[89] = &DefaultERFlag_; break;
                case 90: aFlds_[90] = &ADLevyFee_; break;
                case 91: aFlds_[91] = &ADLevyFeeTransType_; break;
                case 92: aFlds_[92] = &FndMrgRedCod_; break;
                case 93: aFlds_[93] = &NSCCCompliant_; break;
                case 94: aFlds_[94] = &NSCCCurrencyList_; break;
                case 95: aFlds_[95] = &STTRFeeExclRedCodeList_; break;
                case 96: aFlds_[96] = &EntityRiskLevel_; break;
                case 97: aFlds_[97] = &EqualizationActive_; break;
                case 98: aFlds_[98] = &RegisteredTaxTypes_; break;
                case 99: aFlds_[99] = &AntiDilutionCalc_; break;
                case 100: aFlds_[100] = &UFactorCodes_; break;
                case 101: aFlds_[101] = &ACHPurch_; break;
                case 102: aFlds_[102] = &ACHSWP_; break;
                case 103: aFlds_[103] = &ACHAdminFee_; break;
                case 104: aFlds_[104] = &ClearingIdDefault_; break;
                case 105: aFlds_[105] = &ErrorAcctNum_; break;
                case 106: aFlds_[106] = &FundBrokerApplicable_; break;
                case 107: aFlds_[107] = &ValidNetworkType_; break;
                case 108: aFlds_[108] = &NetworkTypeUpd_; break;
                case 109: aFlds_[109] = &EUSDParticip_; break;
                case 110: aFlds_[110] = &DefEUSDOption_; break;
                case 111: aFlds_[111] = &VerCancTrd_; break;
                case 112: aFlds_[112] = &ActCatNegBal_; break;
                case 113: aFlds_[113] = &ActCatWireSett_; break;
                case 114: aFlds_[114] = &BackDatedReason_; break;
                case 115: aFlds_[115] = &Accountable_; break;
                case 116: aFlds_[116] = &OPCConfirmsBrokerScreen_; break;
                case 117: aFlds_[117] = &JumboPriceApplicable_; break;
                case 118: aFlds_[118] = &ClawbackBasedOnDate_; break;
                case 119: aFlds_[119] = &EUSDOption_; break;
                case 120: aFlds_[120] = &SuppressInactiveFunds_; break;
                case 121: aFlds_[121] = &ExemptLevelList_; break;
                case 122: aFlds_[122] = &AccessLevelCat_; break;
                case 123: aFlds_[123] = &GWOSupported_; break;
                case 124: aFlds_[124] = &AssigneeScreen_; break;
                case 125: aFlds_[125] = &Address1_; break;
                case 126: aFlds_[126] = &Address2_; break;
                case 127: aFlds_[127] = &Address3_; break;
                case 128: aFlds_[128] = &Address4_; break;
                case 129: aFlds_[129] = &Address5_; break;
                case 130: aFlds_[130] = &PostalCode_; break;
                case 131: aFlds_[131] = &CountryCode_; break;
                case 132: aFlds_[132] = &ClientName_; break;
                case 133: aFlds_[133] = &RedPayEntExist_; break;
                case 134: aFlds_[134] = &IsRRIFUnusedMaxApp_; break;
                case 135: aFlds_[135] = &CompanyCode_; break;
                case 136: aFlds_[136] = &JointDefaultDisposition_; break;
                case 137: aFlds_[137] = &BackWithholdTax_; break;
                case 138: aFlds_[138] = &ConsolTransType_; break;
                case 139: aFlds_[139] = &Consolidation_; break;
                case 140: aFlds_[140] = &ConsolDefault_; break;
                case 141: aFlds_[141] = &PurchNetting_; break;
                case 142: aFlds_[142] = &DftOrdTypeTR_; break;
                case 143: aFlds_[143] = &DftOrdTypeEX_; break;
                case 144: aFlds_[144] = &DftOrdTypeDSK_; break;
                case 145: aFlds_[145] = &CSSStopSINMatch_; break;
                case 146: aFlds_[146] = &AMSFreqOvrd_; break;
                case 147: aFlds_[147] = &RebalanceDay_; break;
                case 148: aFlds_[148] = &DistribChkAllowTfr_; break;
                case 149: aFlds_[149] = &KYCLevel_; break;
                case 150: aFlds_[150] = &MFRCorporateFund_; break;
                case 151: aFlds_[151] = &NetOfFeesDate_; break;
                case 152: aFlds_[152] = &DispHistUnitACB_; break;
                case 153: aFlds_[153] = &DivDates_; break;
                case 154: aFlds_[154] = &SwitchBanks_; break;
                case 155: aFlds_[155] = &CheckCloseBatch_; break;
                case 156: aFlds_[156] = &DefltFeeOption_; break;
                case 157: aFlds_[157] = &OnLineEntExcept_; break;
                case 158: aFlds_[158] = &UnitRoundingApplicable_; break;
                case 159: aFlds_[159] = &UnitRoundMethod_; break;
                case 160: aFlds_[160] = &RegDocsExist_; break;
                case 161: aFlds_[161] = &DeathClaimDocExist_; break;
                case 162: aFlds_[162] = &UnregPlan_; break;
                case 163: aFlds_[163] = &NonregLike_; break;
                case 164: aFlds_[164] = &IntRIFPlan_; break;
                case 165: aFlds_[165] = &ExtRIFPlan_; break;
                case 166: aFlds_[166] = &AllRIFPlan_; break;
                case 167: aFlds_[167] = &IntLIRAPlan_; break;
                case 168: aFlds_[168] = &AllLIRAPlan_; break;
                case 169: aFlds_[169] = &IntRESP_; break;
                case 170: aFlds_[170] = &IntRSP_; break;
                case 171: aFlds_[171] = &TaxJurisUpdateOpt_; break;
                case 172: aFlds_[172] = &RetMailOrStlDtChqAlert_; break;
                case 173: aFlds_[173] = &DeathClaimRedCodes_; break;
                case 174: aFlds_[174] = &IntLockInPlan_; break;
                case 175: aFlds_[175] = &AlwdTaxType_; break;
                case 176: aFlds_[176] = &LIRALike_; break;
                case 177: aFlds_[177] = &LIFLike_; break;
                case 178: aFlds_[178] = &FELCommOnGrant_; break;
                case 179: aFlds_[179] = &AllocTypeForBrokerValidation_; break;
                case 180: aFlds_[180] = &TFSATaxList_; break;
                case 181: aFlds_[181] = &AutoBatch_; break;
                case 182: aFlds_[182] = &ClosedCountryApplicable_; break;
                case 183: aFlds_[183] = &DskPCLookEnb_; break;
                case 184: aFlds_[184] = &DirectDepositBankApplicable_; break;
                case 185: aFlds_[185] = &VersionLabel_; break;
                case 186: aFlds_[186] = &CompanyUrl_; break;
                case 187: aFlds_[187] = &SettleLocOpt_; break;
                case 188: aFlds_[188] = &TUPActive_; break;
                case 189: aFlds_[189] = &TerminationAgeBeforeDeff_; break;
                case 190: aFlds_[190] = &TerminationAgeAfterDeff_; break;
                case 191: aFlds_[191] = &RESPAgeLimitsDeff_; break;
                case 192: aFlds_[192] = &GuaranteeGuardOn_; break;
                case 193: aFlds_[193] = &TrailerFeeArch_; break;
                case 194: aFlds_[194] = &AllowChqChange_; break;
                case 195: aFlds_[195] = &TFSAAcctCatCodeList_; break;
                case 196: aFlds_[196] = &RRSPAcctCatCodeList_; break;
                case 197: aFlds_[197] = &NetworkRespReqApplicable_; break;
                case 198: aFlds_[198] = &NetworkIDForAmountTrade_; break;
                case 199: aFlds_[199] = &AllEFTConsolActive_; break;
                case 200: aFlds_[200] = &BulkBackDate_; break;
                case 201: aFlds_[201] = &AllEFTConsolShrLv_; break;
                case 202: aFlds_[202] = &ACBUnitOffset_; break;
                case 203: aFlds_[203] = &EAPEarningCodes_; break;
                case 204: aFlds_[204] = &IWTEnable_; break;
                case 205: aFlds_[205] = &IWTTaxJurisList_; break;
                case 206: aFlds_[206] = &NonReceiptApplicable_; break;
                case 207: aFlds_[207] = &GuaranteeCalcByRules_; break;
                case 208: aFlds_[208] = &PorfolioIsRequried_; break;
                case 209: aFlds_[209] = &SOFforSGMR_; break;
                case 210: aFlds_[210] = &SourceOfFund_; break;
                case 211: aFlds_[211] = &StmtFreqDefault_; break;
                case 212: aFlds_[212] = &StmtFreqList_; break;
                case 213: aFlds_[213] = &RedCodesGuaranteeOverride_; break;
                case 214: aFlds_[214] = &CPFActiveFlag_; break;
                case 215: aFlds_[215] = &PrintAcctConf_; break;
                case 216: aFlds_[216] = &LanguageDefault_; break;
                case 217: aFlds_[217] = &EmpAgentAppl_; break;
                case 218: aFlds_[218] = &FundEliPSG_; break;
                case 219: aFlds_[219] = &FundSERVValidation_; break;
                case 220: aFlds_[220] = &LTAIndicator_; break;
                case 221: aFlds_[221] = &ModifyCompAgent_; break;
                case 222: aFlds_[222] = &SourceOfFundApp_; break;
                case 223: aFlds_[223] = &RefundRVCD_; break;
                case 224: aFlds_[224] = &FundAlloc_; break;
                case 225: aFlds_[225] = &NFConfBnkDetl_; break;
                case 226: aFlds_[226] = &RefundCalc_; break;
                case 227: aFlds_[227] = &DilutionCalc_; break;
                case 228: aFlds_[228] = &SrcOfFunds_IA_Required_; break;
                case 229: aFlds_[229] = &SrcOfFunds_IA_ED_; break;
                case 230: aFlds_[230] = &SrcOfFunds_IA_PW_; break;
                case 231: aFlds_[231] = &SrcOfFunds_IA_GIC_; break;
                case 232: aFlds_[232] = &SrcOfFunds_IA_SWP_; break;
                case 233: aFlds_[233] = &SrcOfFunds_IA_RIF_; break;
                case 234: aFlds_[234] = &TaxAnniversary_; break;
                case 235: aFlds_[235] = &RightToCancelDefault_; break;
                case 236: aFlds_[236] = &FATCAApplicable_; break;
                case 237: aFlds_[237] = &RDREnv_; break;
                case 238: aFlds_[238] = &ApplFeeModelType_; break;
                case 239: aFlds_[239] = &AutoGenFeeModelCode_; break;
                case 240: aFlds_[240] = &AutoStopAssociation_; break;
                case 241: aFlds_[241] = &ListDocType_; break;
                case 242: aFlds_[242] = &InvApplicable_; break;
                case 243: aFlds_[243] = &RptGrpApplicable_; break;
                case 244: aFlds_[244] = &MstrActActive_; break;
                case 245: aFlds_[245] = &MstrActAttrbName_; break;
                case 246: aFlds_[246] = &MstrActAttrbValue_; break;
                case 247: aFlds_[247] = &IsTrlFeeAcctLevelApp_; break;
                case 248: aFlds_[248] = &ReportFFIType_; break;
                case 249: aFlds_[249] = &FundIDList_; break;
                case 250: aFlds_[250] = &RetMailUpdt_; break;
                case 251: aFlds_[251] = &AllowBankUpdOnProcessedPAC_; break;
                case 252: aFlds_[252] = &DistribInstrAsRatioOpt_; break;
                case 253: aFlds_[253] = &MgmtFeePayOptOvd_; break;
                case 254: aFlds_[254] = &OPCNonFinConfDefPAC_; break;
                case 255: aFlds_[255] = &ShowDilution_; break;
                case 256: aFlds_[256] = &ShowExSysDilPymtNSM_; break;
                case 257: aFlds_[257] = &CPFRefundApplicable_; break;
                case 258: aFlds_[258] = &MultiPrices_; break;
                case 259: aFlds_[259] = &SAGESActive_; break;
                case 260: aFlds_[260] = &SAGESDeff_; break;
                case 261: aFlds_[261] = &TFRApplicable_; break;
                case 262: aFlds_[262] = &CIApplicable_; break;
                case 263: aFlds_[263] = &SIApplicable_; break;
                case 264: aFlds_[264] = &AdvisorFeeAppl_; break;
                case 265: aFlds_[265] = &EDocsAccessAppl_; break;
                case 266: aFlds_[266] = &AutoDefaultCancelGrant_; break;
                case 267: aFlds_[267] = &AggActive_; break;
                case 268: aFlds_[268] = &AggActCatgry_; break;
                case 269: aFlds_[269] = &AggDefAggMod_; break;
                case 270: aFlds_[270] = &BankingLevel_; break;
                case 271: aFlds_[271] = &DefaultBankingLevel_; break;
                case 272: aFlds_[272] = &HighRiskDispMode_; break;
                case 273: aFlds_[273] = &HighRiskLevels_; break;
                case 274: aFlds_[274] = &RiskApplEntity_; break;
                case 275: aFlds_[275] = &RiskApplEntitySeq_; break;
                case 276: aFlds_[276] = &RiskForAcctHldrRsk_; break;
                case 277: aFlds_[277] = &RebalDateFormat_; break;
                case 278: aFlds_[278] = &IsRESPTransform_; break;
                case 279: aFlds_[279] = &CRSEntityList_; break;
                case 280: aFlds_[280] = &TaxComplianceList_; break;
                case 281: aFlds_[281] = &CRSActive_; break;
                case 282: aFlds_[282] = &TrackTrActive_; break;
                case 283: aFlds_[283] = &TrackTrRedCode_; break;
                case 284: aFlds_[284] = &TrackTrDepCode_; break;
                case 285: aFlds_[285] = &TrackTrOther_; break;
                case 286: aFlds_[286] = &OrigTradeFee_; break;
                case 287: aFlds_[287] = &AltFndIdntfr_; break;
                case 288: aFlds_[288] = &TFSAAgeOfMajor_; break;
                case 289: aFlds_[289] = &TFSAProvCode_; break;
                case 290: aFlds_[290] = &ApplPUDbyDefault_; break;
                case 291: aFlds_[291] = &ApplPUDbyBEL_; break;
                case 292: aFlds_[292] = &ApplPUDbyCB_; break;
                case 293: aFlds_[293] = &RefundAllowed_; break;
                case 294: aFlds_[294] = &RefundSettleDateOpt_; break;
                case 295: aFlds_[295] = &ShowCGMktVal_; break;
                case 296: aFlds_[296] = &PrcntFeeDipOpt_; break;
                case 297: aFlds_[297] = &MultipleRisk_; break;
                case 298: aFlds_[298] = &AWDPortalURL_; break;
                case 299: aFlds_[299] = &IntraDayPricing_; break;
                case 300: aFlds_[300] = &LastNameFormat_; break;
                case 301: aFlds_[301] = &PendingTradeCashDateOverride_; break;
                case 302: aFlds_[302] = &OrderUserOverride_; break;
                case 303: aFlds_[303] = &DefStatus_; break;
                
            }
            pField = aFlds_[iField];
            if( NULL == pField ) return( NULL );
        }
        return( pField );
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0149_VW::getElementByIndex( unsigned int iField ) const
{
    return( ( const_cast< dsi_DSTC0149_VW* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0149_VW::getLargestDefinedField( void ) const
{
    return( 500 );
}

unsigned long dsi_DSTC0149_VW::getDefinedByteLength( void ) const
{
    return( 14007 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0149_VW::exists( const BFFieldId& id ) const
{
    return dsi_DSTC0149_VW::fieldExists( id );
}

bool dsi_DSTC0149_VW::fieldExists( const BFFieldId& id )
{
    switch( id.getId() )
    {
        case 40002091: return ( true );
        case 40002092: return ( true );
        case 40002093: return ( true );
        case 40002094: return ( true );
        case 40002296: return ( true );
        case 40002297: return ( true );
        case 40001649: return ( true );
        case 40002451: return ( true );
        case 40002458: return ( true );
        case 40002459: return ( true );
        case 40002483: return ( true );
        case 40002484: return ( true );
        case 40002486: return ( true );
        case 40002487: return ( true );
        case 40002488: return ( true );
        case 40002489: return ( true );
        case 40002580: return ( true );
        case 40002583: return ( true );
        case 40002584: return ( true );
        case 40002635: return ( true );
        case 40002659: return ( true );
        case 40002661: return ( true );
        case 40002748: return ( true );
        case 40002784: return ( true );
        case 40002785: return ( true );
        case 40002786: return ( true );
        case 40002787: return ( true );
        case 40002788: return ( true );
        case 40002801: return ( true );
        case 40002800: return ( true );
        case 40002803: return ( true );
        case 40002897: return ( true );
        case 40002966: return ( true );
        case 40002967: return ( true );
        case 40002968: return ( true );
        case 40002975: return ( true );
        case 40002976: return ( true );
        case 40002997: return ( true );
        case 40003013: return ( true );
        case 40003041: return ( true );
        case 40003910: return ( true );
        case 40003132: return ( true );
        case 40003042: return ( true );
        case 40003043: return ( true );
        case 40003044: return ( true );
        case 40003100: return ( true );
        case 40003123: return ( true );
        case 40003180: return ( true );
        case 40003143: return ( true );
        case 40003108: return ( true );
        case 40003181: return ( true );
        case 40003219: return ( true );
        case 40003242: return ( true );
        case 40003244: return ( true );
        case 40003385: return ( true );
        case 40003449: return ( true );
        case 40003450: return ( true );
        case 40003451: return ( true );
        case 40003452: return ( true );
        case 40003453: return ( true );
        case 40003765: return ( true );
        case 40003774: return ( true );
        case 40003795: return ( true );
        case 40003791: return ( true );
        case 40003820: return ( true );
        case 40003821: return ( true );
        case 40003850: return ( true );
        case 40003881: return ( true );
        case 40003882: return ( true );
        case 40003905: return ( true );
        case 40003906: return ( true );
        case 40003911: return ( true );
        case 40003933: return ( true );
        case 40003934: return ( true );
        case 40003935: return ( true );
        case 40004007: return ( true );
        case 40004060: return ( true );
        case 40004094: return ( true );
        case 40004095: return ( true );
        case 40004096: return ( true );
        case 40004097: return ( true );
        case 40004098: return ( true );
        case 40003405: return ( true );
        case 40004148: return ( true );
        case 40004197: return ( true );
        case 40004171: return ( true );
        case 40004307: return ( true );
        case 40004325: return ( true );
        case 40004353: return ( true );
        case 40004354: return ( true );
        case 40004355: return ( true );
        case 40004365: return ( true );
        case 40004414: return ( true );
        case 40004419: return ( true );
        case 40004421: return ( true );
        case 40004440: return ( true );
        case 40004437: return ( true );
        case 40004532: return ( true );
        case 40004579: return ( true );
        case 40004634: return ( true );
        case 40004650: return ( true );
        case 40004651: return ( true );
        case 40004652: return ( true );
        case 40004647: return ( true );
        case 40004798: return ( true );
        case 40004799: return ( true );
        case 40004776: return ( true );
        case 40004971: return ( true );
        case 40004982: return ( true );
        case 40005051: return ( true );
        case 40005052: return ( true );
        case 40005096: return ( true );
        case 40005324: return ( true );
        case 40005325: return ( true );
        case 40001353: return ( true );
        case 40000476: return ( true );
        case 40005135: return ( true );
        case 40005217: return ( true );
        case 40005218: return ( true );
        case 40005219: return ( true );
        case 40005260: return ( true );
        case 40005375: return ( true );
        case 40005433: return ( true );
        case 40005444: return ( true );
        case 40005467: return ( true );
        case 40000138: return ( true );
        case 40000139: return ( true );
        case 40000140: return ( true );
        case 40000141: return ( true );
        case 40000142: return ( true );
        case 40000143: return ( true );
        case 40000344: return ( true );
        case 40005470: return ( true );
        case 40005491: return ( true );
        case 40005532: return ( true );
        case 40002245: return ( true );
        case 40005555: return ( true );
        case 40005561: return ( true );
        case 40005564: return ( true );
        case 40005566: return ( true );
        case 40005567: return ( true );
        case 40005570: return ( true );
        case 40005574: return ( true );
        case 40005575: return ( true );
        case 40005576: return ( true );
        case 40005588: return ( true );
        case 40005600: return ( true );
        case 40005601: return ( true );
        case 40005660: return ( true );
        case 40005661: return ( true );
        case 40005710: return ( true );
        case 40005730: return ( true );
        case 40005736: return ( true );
        case 40005744: return ( true );
        case 40005746: return ( true );
        case 40005712: return ( true );
        case 40005780: return ( true );
        case 40005784: return ( true );
        case 40005817: return ( true );
        case 40005816: return ( true );
        case 40005856: return ( true );
        case 40005857: return ( true );
        case 40005905: return ( true );
        case 40005906: return ( true );
        case 40005907: return ( true );
        case 40005908: return ( true );
        case 40005909: return ( true );
        case 40005910: return ( true );
        case 40005911: return ( true );
        case 40005912: return ( true );
        case 40005913: return ( true );
        case 40005934: return ( true );
        case 40005936: return ( true );
        case 40005941: return ( true );
        case 40005942: return ( true );
        case 40005943: return ( true );
        case 40005944: return ( true );
        case 40005945: return ( true );
        case 40005948: return ( true );
        case 40005958: return ( true );
        case 40005967: return ( true );
        case 40005976: return ( true );
        case 40005983: return ( true );
        case 40005991: return ( true );
        case 40005992: return ( true );
        case 40004309: return ( true );
        case 40005717: return ( true );
        case 40006015: return ( true );
        case 40006066: return ( true );
        case 40006199: return ( true );
        case 40006200: return ( true );
        case 40006201: return ( true );
        case 40006289: return ( true );
        case 40006315: return ( true );
        case 40006335: return ( true );
        case 40006341: return ( true );
        case 40006342: return ( true );
        case 40006384: return ( true );
        case 40006385: return ( true );
        case 40006387: return ( true );
        case 40006388: return ( true );
        case 40006389: return ( true );
        case 40006408: return ( true );
        case 40006418: return ( true );
        case 40006423: return ( true );
        case 40006424: return ( true );
        case 40006585: return ( true );
        case 40006586: return ( true );
        case 40006572: return ( true );
        case 40006700: return ( true );
        case 40002038: return ( true );
        case 40006677: return ( true );
        case 40006678: return ( true );
        case 40006812: return ( true );
        case 40006832: return ( true );
        case 40006838: return ( true );
        case 40006834: return ( true );
        case 40006849: return ( true );
        case 40006851: return ( true );
        case 40006852: return ( true );
        case 40006853: return ( true );
        case 40006854: return ( true );
        case 40006865: return ( true );
        case 40006874: return ( true );
        case 40003517: return ( true );
        case 40006875: return ( true );
        case 40006863: return ( true );
        case 40006864: return ( true );
        case 40006893: return ( true );
        case 40006895: return ( true );
        case 40006896: return ( true );
        case 40006897: return ( true );
        case 40006898: return ( true );
        case 40006899: return ( true );
        case 40006914: return ( true );
        case 40006943: return ( true );
        case 40006946: return ( true );
        case 40006962: return ( true );
        case 40007026: return ( true );
        case 40007027: return ( true );
        case 40007028: return ( true );
        case 40007036: return ( true );
        case 40007113: return ( true );
        case 40007114: return ( true );
        case 40007120: return ( true );
        case 40007121: return ( true );
        case 40007122: return ( true );
        case 40007129: return ( true );
        case 40007140: return ( true );
        case 40007176: return ( true );
        case 40007229: return ( true );
        case 40007231: return ( true );
        case 40007291: return ( true );
        case 40007304: return ( true );
        case 40007308: return ( true );
        case 40007328: return ( true );
        case 40007329: return ( true );
        case 40007344: return ( true );
        case 40007342: return ( true );
        case 40007357: return ( true );
        case 40007358: return ( true );
        case 40007387: return ( true );
        case 40007393: return ( true );
        case 40007396: return ( true );
        case 40007247: return ( true );
        case 40007429: return ( true );
        case 40007485: return ( true );
        case 40007494: return ( true );
        case 40007495: return ( true );
        case 40007496: return ( true );
        case 40007507: return ( true );
        case 40007508: return ( true );
        case 40007512: return ( true );
        case 40007513: return ( true );
        case 40007514: return ( true );
        case 40007515: return ( true );
        case 40007516: return ( true );
        case 40007529: return ( true );
        case 40007537: return ( true );
        case 40007584: return ( true );
        case 40007590: return ( true );
        case 40007591: return ( true );
        case 40007619: return ( true );
        case 40007620: return ( true );
        case 40007621: return ( true );
        case 40007622: return ( true );
        case 40007599: return ( true );
        case 40007634: return ( true );
        case 40007652: return ( true );
        case 40007651: return ( true );
        case 40007654: return ( true );
        case 40007657: return ( true );
        case 40007656: return ( true );
        case 40007658: return ( true );
        case 40007659: return ( true );
        case 40007690: return ( true );
        case 40007696: return ( true );
        case 40007746: return ( true );
        case 40007795: return ( true );
        case 40007885: return ( true );
        case 40007925: return ( true );
        case 40007237: return ( true );
        case 40007933: return ( true );
        case 40007943: return ( true );    
    }
    return false;
}

