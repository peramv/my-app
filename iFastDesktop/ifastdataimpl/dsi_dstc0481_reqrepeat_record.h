// BFDataImpl header file for DataSet DSTC0481.REQRepeat_Record
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Thursday, March 30, 2017 10:09:50


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
    //Field Externs
    extern const BFTextFieldId RoundFlg;
    extern const BFTextFieldId RecalcMthd;
    extern const BFIntegerFieldId UnitsPrecisionAcct;
    extern const BFDateFieldId StartDate;
    extern const BFDateFieldId StopDate;
    extern const BFTextFieldId RunMode;
    extern const BFTextFieldId AcctRndRulesUUID;

    //Property Externs
    extern const BFDataFieldProperties s_FldProp_RoundFlg;
    extern const BFDataFieldProperties s_FldProp_RecalcMthd;
    extern const BFDataFieldProperties s_FldProp_UnitsPrecisionAcct;
    extern const BFDataFieldProperties s_FldProp_StartDate;
    extern const BFDataFieldProperties s_FldProp_StopDate;
    extern const BFDataFieldProperties s_FldProp_RunMode;
    extern const BFDataFieldProperties s_FldProp_AcctRndRulesUUID;
}


class dsi_DSTC0481_REQRepeat_Record : public BFDataImpl 
{
public:
    // Constructors
    dsi_DSTC0481_REQRepeat_Record();
    virtual ~dsi_DSTC0481_REQRepeat_Record();

    virtual BFDataImpl* clone();

    virtual BFDataField* getElement( const BFFieldId& id );
    virtual const BFDataField* getElement( const BFFieldId& id ) const;
    virtual BFDataField* getElementByIndex( unsigned int iField );
    virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


    virtual unsigned long getLargestDefinedField( void ) const;
    virtual unsigned long getDefinedByteLength( void ) const;
    virtual bool exists( const BFFieldId& id ) const;
    static bool fieldExists( const BFFieldId& id );

private:
    BFDataField* aFlds_[7];
    // Field Declarations
    BFTextField_1 RoundFlg_;
    BFTextField<3> RecalcMthd_;
    BFIntegerField UnitsPrecisionAcct_;
    BFDateField StartDate_;
    BFDateField StopDate_;
    BFTextField_60 RunMode_;
    BFTextField_60 AcctRndRulesUUID_;
};
