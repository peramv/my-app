// BFDataImpl implementation file for DataSet DSTC0351.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0351_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0351_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0351_VWRepeat_Record() { return new dsi_DSTC0351_VWRepeat_Record; }

dsi_DSTC0351_VWRepeat_Record::dsi_DSTC0351_VWRepeat_Record()
: BFDataImpl( 40005255 )
, NAVBefRedPeriod_( ifds::NAVBefRedPeriod, &ifds::s_FldProp_NAVBefRedPeriod )
, NAVBefRedAcct_( ifds::NAVBefRedAcct, &ifds::s_FldProp_NAVBefRedAcct )
, RedAmountPeriod_( ifds::RedAmountPeriod, &ifds::s_FldProp_RedAmountPeriod )
, RedAmountAcct_( ifds::RedAmountAcct, &ifds::s_FldProp_RedAmountAcct )
, Percentage_( ifds::Percentage, &ifds::s_FldProp_Percentage )
, NAVAftRedPeriod_( ifds::NAVAftRedPeriod, &ifds::s_FldProp_NAVAftRedPeriod )
, NAVAftRedAcct_( ifds::NAVAftRedAcct, &ifds::s_FldProp_NAVAftRedAcct )
, GuarBefRedPeriod_( ifds::GuarBefRedPeriod, &ifds::s_FldProp_GuarBefRedPeriod )
, GuarBefRedAcct_( ifds::GuarBefRedAcct, &ifds::s_FldProp_GuarBefRedAcct )
, GuarRedctnPeriod_( ifds::GuarRedctnPeriod, &ifds::s_FldProp_GuarRedctnPeriod )
, GuarRedctnAct_( ifds::GuarRedctnAct, &ifds::s_FldProp_GuarRedctnAct )
, GuarAftRedPeriod_( ifds::GuarAftRedPeriod, &ifds::s_FldProp_GuarAftRedPeriod )
, GuarAftRedAcct_( ifds::GuarAftRedAcct, &ifds::s_FldProp_GuarAftRedAcct )
, ResetMaturDate_( ifds::ResetMaturDate, &ifds::s_FldProp_ResetMaturDate )
, ResetNAV_( ifds::ResetNAV, &ifds::s_FldProp_ResetNAV )
, PrevGuar_( ifds::PrevGuar, &ifds::s_FldProp_PrevGuar )
, ResetGuarAmount_( ifds::ResetGuarAmount, &ifds::s_FldProp_ResetGuarAmount )
, GuarTot_( ifds::GuarTot, &ifds::s_FldProp_GuarTot )
, ProcessDate_( ifds::ProcessDate, &ifds::s_FldProp_ProcessDate )
{
   cFields_ = 19;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0351_VWRepeat_Record::~dsi_DSTC0351_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0351_VWRepeat_Record::clone()
{
   dsi_DSTC0351_VWRepeat_Record* p = new dsi_DSTC0351_VWRepeat_Record;
   p->NAVBefRedPeriod_ = NAVBefRedPeriod_;
   p->NAVBefRedAcct_ = NAVBefRedAcct_;
   p->RedAmountPeriod_ = RedAmountPeriod_;
   p->RedAmountAcct_ = RedAmountAcct_;
   p->Percentage_ = Percentage_;
   p->NAVAftRedPeriod_ = NAVAftRedPeriod_;
   p->NAVAftRedAcct_ = NAVAftRedAcct_;
   p->GuarBefRedPeriod_ = GuarBefRedPeriod_;
   p->GuarBefRedAcct_ = GuarBefRedAcct_;
   p->GuarRedctnPeriod_ = GuarRedctnPeriod_;
   p->GuarRedctnAct_ = GuarRedctnAct_;
   p->GuarAftRedPeriod_ = GuarAftRedPeriod_;
   p->GuarAftRedAcct_ = GuarAftRedAcct_;
   p->ResetMaturDate_ = ResetMaturDate_;
   p->ResetNAV_ = ResetNAV_;
   p->PrevGuar_ = PrevGuar_;
   p->ResetGuarAmount_ = ResetGuarAmount_;
   p->GuarTot_ = GuarTot_;
   p->ProcessDate_ = ProcessDate_;
   return(p);
}

BFDataField* dsi_DSTC0351_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40001423: return ( &NAVBefRedPeriod_ ); break; // NAVBefRedPeriod
      case 40001424: return ( &NAVBefRedAcct_ ); break; // NAVBefRedAcct
      case 40001438: return ( &RedAmountPeriod_ ); break; // RedAmountPeriod
      case 40001439: return ( &RedAmountAcct_ ); break; // RedAmountAcct
      case 40000291: return ( &Percentage_ ); break; // Percentage
      case 40001440: return ( &NAVAftRedPeriod_ ); break; // NAVAftRedPeriod
      case 40001441: return ( &NAVAftRedAcct_ ); break; // NAVAftRedAcct
      case 40001426: return ( &GuarBefRedPeriod_ ); break; // GuarBefRedPeriod
      case 40001425: return ( &GuarBefRedAcct_ ); break; // GuarBefRedAcct
      case 40001427: return ( &GuarRedctnPeriod_ ); break; // GuarRedctnPeriod
      case 40001428: return ( &GuarRedctnAct_ ); break; // GuarRedctnAct
      case 40001429: return ( &GuarAftRedPeriod_ ); break; // GuarAftRedPeriod
      case 40001430: return ( &GuarAftRedAcct_ ); break; // GuarAftRedAcct
      case 40001432: return ( &ResetMaturDate_ ); break; // ResetMaturDate
      case 40001433: return ( &ResetNAV_ ); break; // ResetNAV
      case 40001434: return ( &PrevGuar_ ); break; // PrevGuar
      case 40001435: return ( &ResetGuarAmount_ ); break; // ResetGuarAmount
      case 40001436: return ( &GuarTot_ ); break; // GuarTot
      case 40000216: return ( &ProcessDate_ ); break; // ProcessDate
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0351_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0351_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0351_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 19 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &NAVBefRedPeriod_; break;
            case 1: aFlds_[1] = &NAVBefRedAcct_; break;
            case 2: aFlds_[2] = &RedAmountPeriod_; break;
            case 3: aFlds_[3] = &RedAmountAcct_; break;
            case 4: aFlds_[4] = &Percentage_; break;
            case 5: aFlds_[5] = &NAVAftRedPeriod_; break;
            case 6: aFlds_[6] = &NAVAftRedAcct_; break;
            case 7: aFlds_[7] = &GuarBefRedPeriod_; break;
            case 8: aFlds_[8] = &GuarBefRedAcct_; break;
            case 9: aFlds_[9] = &GuarRedctnPeriod_; break;
            case 10: aFlds_[10] = &GuarRedctnAct_; break;
            case 11: aFlds_[11] = &GuarAftRedPeriod_; break;
            case 12: aFlds_[12] = &GuarAftRedAcct_; break;
            case 13: aFlds_[13] = &ResetMaturDate_; break;
            case 14: aFlds_[14] = &ResetNAV_; break;
            case 15: aFlds_[15] = &PrevGuar_; break;
            case 16: aFlds_[16] = &ResetGuarAmount_; break;
            case 17: aFlds_[17] = &GuarTot_; break;
            case 18: aFlds_[18] = &ProcessDate_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0351_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0351_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0351_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 23 );
}

unsigned long dsi_DSTC0351_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 363 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0351_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0351_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0351_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40001423: return( true );
      case 40001424: return( true );
      case 40001438: return( true );
      case 40001439: return( true );
      case 40000291: return( true );
      case 40001440: return( true );
      case 40001441: return( true );
      case 40001426: return( true );
      case 40001425: return( true );
      case 40001427: return( true );
      case 40001428: return( true );
      case 40001429: return( true );
      case 40001430: return( true );
      case 40001432: return( true );
      case 40001433: return( true );
      case 40001434: return( true );
      case 40001435: return( true );
      case 40001436: return( true );
      case 40000216: return( true );
   }
   return false;
}

