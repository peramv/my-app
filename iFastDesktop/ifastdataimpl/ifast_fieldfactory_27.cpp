// Data Field Factory Function
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdatafield.hpp>
#include <bfdata/bfdataid.hpp>

namespace ifds
{
   extern const BFTextFieldId ProcessedTrade;
   extern const BFTextFieldId RbkMCHFileIndicator;
   extern const BFTextFieldId RbkSecRecFileIndicator;
   extern const BFTextFieldId ResetPassword;
   extern const BFTextFieldId ExcludeCancelled;
   extern const BFTextFieldId ReportingCurrency;
   extern const BFDecimalFieldId ReportingExchRate;
   extern const BFDateFieldId NAVDate;
   extern const BFTextFieldId MCHFileTransHist;
   extern const BFTextFieldId SecRecFileTransHist;
   extern const BFTextFieldId DirectTo;
   extern const BFTextFieldId DirectToShrGrp;
   extern const BFTextFieldId ESGSettle;
   extern const BFTextFieldId SWPSettleESGElig;
   extern const BFTextFieldId CashIDSettleESGElig;
   extern const BFTextFieldId Reconciled;
   extern const BFTextFieldId NSCCControlNumber;
   extern const BFTextFieldId ExcludeBadTrades;
   extern const BFTextFieldId ExcludeClass;
   extern const BFTextFieldId IgnoreFundLoadGrp;
   extern const BFTextFieldId FilterCurrency;
   extern const BFTextFieldId ShrGrpAccessAll;
   extern const BFTextFieldId AccessLevelCat;
   extern const BFDataId DSTC0366_REQ;
   extern const BFDataId DSTC0366_VW;
   extern const BFIntegerFieldId EUSDStatus;
   extern const BFTextFieldId CustomScheduleList;
   extern const BFDateFieldId GWOCotAnnivDate;
   extern const BFTextFieldId GWOContract;
   extern const BFTextFieldId IsNewAcctContract;
   extern const BFTextFieldId GWOSupported;
   extern const BFTextFieldId IsGWOContract;
   extern const BFDataId DSTC0367_REQ;
   extern const BFTextFieldId ProvReg;
   extern const BFDataId DSTC0367_VW;
   extern const BFTextFieldId BackdatedAllowed;
   extern const BFTextFieldId WarnParam;
   extern const BFTextFieldId WarnParam1;
   extern const BFTextFieldId WarnParam2;
   extern const BFTextFieldId WarnParam3;
   extern const BFTextFieldId WarnParam5;
   extern const BFTextFieldId WarnParam4;
   extern const BFTextFieldId HasNegativeComm;
   extern const BFDataId DSTC0370_REQ;
   extern const BFDataId DSTC0370_VW;
   extern const BFTextFieldId AmtTypeRedCode;
   extern const BFTextFieldId ExistAssignee;
   extern const BFTextFieldId AssigneeScreen;
   extern const BFTextFieldId CMDModifiable;
   extern const BFTextFieldId BasedOnBW;
   extern const BFTextFieldId ClientName;
   extern const BFTextFieldId SearchTypeMgmt;
   extern const BFTextFieldId PayToEntityMgmt;
   extern const BFTextFieldId PayInstructExists;
   extern const BFTextFieldId PayToEntityListMgmtCoHeading;
   extern const BFTextFieldId MgmtCoPayReq;
   extern const BFTextFieldId TimeZoneCode;
   extern const BFTextFieldId CutOffLevel;
   extern const BFNumericFieldId CutOffDays;
   extern const BFNumericFieldId CutOffTimeID;
   extern const BFTextFieldId NetworkSenderLvlCutOffTimesHeading;
   extern const BFTextFieldId IsNetworkSender;
   extern const BFTextFieldId AllowUDMUpdate;
   extern const BFDecimalFieldId ACBAmount;
   extern const BFDecimalFieldId YTDUnassisted;
   extern const BFDecimalFieldId YTDAssisted;
   extern const BFDecimalFieldId YTDGrant;
   extern const BFTextFieldId TradePayInstructHeadSet;
   extern const BFTextFieldId ConsolType;
   extern const BFTextFieldId RedPayEntExist;
   extern const BFTextFieldId PayInstrOption;
   extern const BFTextFieldId TPIPayEntity;
   extern const BFTextFieldId TPIPaymentFor;
   extern const BFTextFieldId TPIPayType;
   extern const BFTextFieldId TPIACHProcessor;
   extern const BFTextFieldId TPIPayMethod;
   extern const BFTextFieldId TPIBankCharge;
   extern const BFTextFieldId TPICurrOption;
   extern const BFTextFieldId TPIPayCurrency;
   extern const BFTextFieldId TPIUsePayEntAddr;
   extern const BFTextFieldId TPIAddress1;
   extern const BFTextFieldId TPIAddress2;
   extern const BFTextFieldId TPIAddress3;
   extern const BFTextFieldId TPIAddress4;
   extern const BFTextFieldId TPIAddress5;
   extern const BFTextFieldId TPIAddrCntry;
   extern const BFTextFieldId TPIAddrPSTL;
   extern const BFTextFieldId TPIDirectTo;
   extern const BFIntegerFieldId TPIReinvAccount;
   extern const BFTextFieldId TPICompanyCode;
   extern const BFTextFieldId TPITOShGroup;
   extern const BFDecimalFieldId TPIPercentage;
   extern const BFTextFieldId TPIConsolLevel;
   extern const BFTextFieldId TPIConsolType;
   extern const BFIntegerFieldId RecTypeVersion;
   extern const BFIntegerFieldId RecTypRecid;
   extern const BFTextFieldId RecTypRunMode;
   extern const BFIntegerFieldId TPITrdPayInstrID;
   extern const BFDecimalFieldId TPIPayInstructID;
   extern const BFIntegerFieldId TPIAcctID;
   extern const BFDataId DSTC0374_REQ;
   extern const BFDataId DSTC0374_VW;
   extern const BFTextFieldId OthPaymentForExist;
   extern const BFDataId DSTC0374_VWRepeat_Record;
   extern const BFTextFieldId PaymentForConsolType;
   extern const BFTextFieldId BankInstrComboTradeBroker;
   extern const BFTextFieldId BankInstrComboTradeBranch;
   extern const BFTextFieldId BankInstrComboTradeSlsrep;
   extern const BFTextFieldId TradePayInstructPayType;
   extern const BFTextFieldId IsRRIFUnusedMaxApp;
   extern const BFTextFieldId CarryForUnusedMax;
   extern const BFTextFieldId OverrideUnusedMax;
   extern const BFDecimalFieldId PYUnusedMax;
   extern const BFDataId DSTC0375_REQ;
   extern const BFDataId DSTC0375_VW;
   extern const BFDecimalFieldId OverrideMndAmt;
   extern const BFDecimalFieldId UnusedAmount;
   extern const BFDecimalFieldId MaxAmount;
   extern const BFTextFieldId isRRIFOverrUnusedAmtApplic;
   extern const BFTextFieldId PayInstructConsolType;
   extern const BFTextFieldId XEditUnusedMaxAmt;
   extern const BFTextFieldId CompanyCodePaymentFor;
   extern const BFTextFieldId PayReconExists;
   extern const BFIntegerFieldId TPIVersion;
   extern const BFDataId DSTC0376_VW;
   extern const BFDataId DSTC0376_REQ;
   extern const BFTextFieldId ToAcctTaxType;
   extern const BFTextFieldId JointDefaultDisposition;
   extern const BFTextFieldId FundLimitOvrdExist;
   extern const BFTextFieldId FundGroupHeading;
   extern const BFDataId DSTC0377_REQ;
   extern const BFDataId DSTC0377_VW;
   extern const BFTextFieldId AcctDesignationTaxType;
   extern const BFTextFieldId BackWithholdTax;
   extern const BFTextFieldId IsNSCDividend;
   extern const BFTextFieldId ConsolTypeID;
   extern const BFTextFieldId ConsolTransType;
   extern const BFTextFieldId Consolidation;
   extern const BFTextFieldId ConsolDefault;
   extern const BFTextFieldId ConsolTypePW;
   extern const BFTextFieldId PayInstructConsolTypeNotPW;
   extern const BFTextFieldId PurchNetting;
   extern const BFDateFieldId SettleInDate;
   extern const BFTextFieldId BrokerToCode;
   extern const BFDateFieldId SuggestSettleInDate;
   extern const BFIntegerFieldId DftOrdTypeTR;
   extern const BFIntegerFieldId DftOrdTypeEX;
   extern const BFTextFieldId DftOrdTypeDSK;
   extern const BFTextFieldId DftOrdType;
   extern const BFDecimalFieldId ExchangeInTotal;
   extern const BFDecimalFieldId ExchangeOutTotal;
   extern const BFDecimalFieldId TransferInTotal;
   extern const BFDecimalFieldId TransferOutTotal;
   extern const BFTextFieldId SendLinkRefNum;
   extern const BFTextFieldId IndTransType;
   extern const BFTextFieldId InstrXEdit;
   extern const BFTextFieldId AcctCategory2;
   extern const BFTextFieldId ConvertAmount;
   extern const BFTextFieldId CSSStopSINMatch;
   extern const BFTextFieldId DistribType;
   extern const BFTextFieldId DefInvestOpt;
   extern const BFTextFieldId OverrideOpt;
   extern const BFDataId DSTC0379_REQ;
   extern const BFDataId DSTC0379_VW;
   extern const BFDataId DSTC0379_VWRepeat_Record;
   extern const BFTextFieldId AssocFund;
   extern const BFTextFieldId AssocClass;
   extern const BFTextFieldId AssocFundNum;
   extern const BFTextFieldId AssocFundClass;
   extern const BFTextFieldId AMSFreqOvrd;
   extern const BFDataFieldProperties s_FldProp_ProcessedTrade;
   extern const BFDataFieldProperties s_FldProp_RbkMCHFileIndicator;
   extern const BFDataFieldProperties s_FldProp_RbkSecRecFileIndicator;
   extern const BFDataFieldProperties s_FldProp_ResetPassword;
   extern const BFDataFieldProperties s_FldProp_ExcludeCancelled;
   extern const BFDataFieldProperties s_FldProp_ReportingCurrency;
   extern const BFDataFieldProperties s_FldProp_ReportingExchRate;
   extern const BFDataFieldProperties s_FldProp_NAVDate;
   extern const BFDataFieldProperties s_FldProp_MCHFileTransHist;
   extern const BFDataFieldProperties s_FldProp_SecRecFileTransHist;
   extern const BFDataFieldProperties s_FldProp_DirectTo;
   extern const BFDataFieldProperties s_FldProp_DirectToShrGrp;
   extern const BFDataFieldProperties s_FldProp_ESGSettle;
   extern const BFDataFieldProperties s_FldProp_SWPSettleESGElig;
   extern const BFDataFieldProperties s_FldProp_CashIDSettleESGElig;
   extern const BFDataFieldProperties s_FldProp_Reconciled;
   extern const BFDataFieldProperties s_FldProp_NSCCControlNumber;
   extern const BFDataFieldProperties s_FldProp_ExcludeBadTrades;
   extern const BFDataFieldProperties s_FldProp_ExcludeClass;
   extern const BFDataFieldProperties s_FldProp_IgnoreFundLoadGrp;
   extern const BFDataFieldProperties s_FldProp_FilterCurrency;
   extern const BFDataFieldProperties s_FldProp_ShrGrpAccessAll;
   extern const BFDataFieldProperties s_FldProp_AccessLevelCat;
   extern const BFDataFieldProperties s_FldProp_DSTC0366_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0366_VW;
   extern const BFDataFieldProperties s_FldProp_EUSDStatus;
   extern const BFDataFieldProperties s_FldProp_CustomScheduleList;
   extern const BFDataFieldProperties s_FldProp_GWOCotAnnivDate;
   extern const BFDataFieldProperties s_FldProp_GWOContract;
   extern const BFDataFieldProperties s_FldProp_IsNewAcctContract;
   extern const BFDataFieldProperties s_FldProp_GWOSupported;
   extern const BFDataFieldProperties s_FldProp_IsGWOContract;
   extern const BFDataFieldProperties s_FldProp_DSTC0367_REQ;
   extern const BFDataFieldProperties s_FldProp_ProvReg;
   extern const BFDataFieldProperties s_FldProp_DSTC0367_VW;
   extern const BFDataFieldProperties s_FldProp_BackdatedAllowed;
   extern const BFDataFieldProperties s_FldProp_WarnParam;
   extern const BFDataFieldProperties s_FldProp_WarnParam1;
   extern const BFDataFieldProperties s_FldProp_WarnParam2;
   extern const BFDataFieldProperties s_FldProp_WarnParam3;
   extern const BFDataFieldProperties s_FldProp_WarnParam5;
   extern const BFDataFieldProperties s_FldProp_WarnParam4;
   extern const BFDataFieldProperties s_FldProp_HasNegativeComm;
   extern const BFDataFieldProperties s_FldProp_DSTC0370_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0370_VW;
   extern const BFDataFieldProperties s_FldProp_AmtTypeRedCode;
   extern const BFDataFieldProperties s_FldProp_ExistAssignee;
   extern const BFDataFieldProperties s_FldProp_AssigneeScreen;
   extern const BFDataFieldProperties s_FldProp_CMDModifiable;
   extern const BFDataFieldProperties s_FldProp_BasedOnBW;
   extern const BFDataFieldProperties s_FldProp_ClientName;
   extern const BFDataFieldProperties s_FldProp_SearchTypeMgmt;
   extern const BFDataFieldProperties s_FldProp_PayToEntityMgmt;
   extern const BFDataFieldProperties s_FldProp_PayInstructExists;
   extern const BFDataFieldProperties s_FldProp_PayToEntityListMgmtCoHeading;
   extern const BFDataFieldProperties s_FldProp_MgmtCoPayReq;
   extern const BFDataFieldProperties s_FldProp_TimeZoneCode;
   extern const BFDataFieldProperties s_FldProp_CutOffLevel;
   extern const BFDataFieldProperties s_FldProp_CutOffDays;
   extern const BFDataFieldProperties s_FldProp_CutOffTimeID;
   extern const BFDataFieldProperties s_FldProp_NetworkSenderLvlCutOffTimesHeading;
   extern const BFDataFieldProperties s_FldProp_IsNetworkSender;
   extern const BFDataFieldProperties s_FldProp_AllowUDMUpdate;
   extern const BFDataFieldProperties s_FldProp_ACBAmount;
   extern const BFDataFieldProperties s_FldProp_YTDUnassisted;
   extern const BFDataFieldProperties s_FldProp_YTDAssisted;
   extern const BFDataFieldProperties s_FldProp_YTDGrant;
   extern const BFDataFieldProperties s_FldProp_TradePayInstructHeadSet;
   extern const BFDataFieldProperties s_FldProp_ConsolType;
   extern const BFDataFieldProperties s_FldProp_RedPayEntExist;
   extern const BFDataFieldProperties s_FldProp_PayInstrOption;
   extern const BFDataFieldProperties s_FldProp_TPIPayEntity;
   extern const BFDataFieldProperties s_FldProp_TPIPaymentFor;
   extern const BFDataFieldProperties s_FldProp_TPIPayType;
   extern const BFDataFieldProperties s_FldProp_TPIACHProcessor;
   extern const BFDataFieldProperties s_FldProp_TPIPayMethod;
   extern const BFDataFieldProperties s_FldProp_TPIBankCharge;
   extern const BFDataFieldProperties s_FldProp_TPICurrOption;
   extern const BFDataFieldProperties s_FldProp_TPIPayCurrency;
   extern const BFDataFieldProperties s_FldProp_TPIUsePayEntAddr;
   extern const BFDataFieldProperties s_FldProp_TPIAddress1;
   extern const BFDataFieldProperties s_FldProp_TPIAddress2;
   extern const BFDataFieldProperties s_FldProp_TPIAddress3;
   extern const BFDataFieldProperties s_FldProp_TPIAddress4;
   extern const BFDataFieldProperties s_FldProp_TPIAddress5;
   extern const BFDataFieldProperties s_FldProp_TPIAddrCntry;
   extern const BFDataFieldProperties s_FldProp_TPIAddrPSTL;
   extern const BFDataFieldProperties s_FldProp_TPIDirectTo;
   extern const BFDataFieldProperties s_FldProp_TPIReinvAccount;
   extern const BFDataFieldProperties s_FldProp_TPICompanyCode;
   extern const BFDataFieldProperties s_FldProp_TPITOShGroup;
   extern const BFDataFieldProperties s_FldProp_TPIPercentage;
   extern const BFDataFieldProperties s_FldProp_TPIConsolLevel;
   extern const BFDataFieldProperties s_FldProp_TPIConsolType;
   extern const BFDataFieldProperties s_FldProp_RecTypeVersion;
   extern const BFDataFieldProperties s_FldProp_RecTypRecid;
   extern const BFDataFieldProperties s_FldProp_RecTypRunMode;
   extern const BFDataFieldProperties s_FldProp_TPITrdPayInstrID;
   extern const BFDataFieldProperties s_FldProp_TPIPayInstructID;
   extern const BFDataFieldProperties s_FldProp_TPIAcctID;
   extern const BFDataFieldProperties s_FldProp_DSTC0374_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0374_VW;
   extern const BFDataFieldProperties s_FldProp_OthPaymentForExist;
   extern const BFDataFieldProperties s_FldProp_DSTC0374_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_PaymentForConsolType;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboTradeBroker;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboTradeBranch;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboTradeSlsrep;
   extern const BFDataFieldProperties s_FldProp_TradePayInstructPayType;
   extern const BFDataFieldProperties s_FldProp_IsRRIFUnusedMaxApp;
   extern const BFDataFieldProperties s_FldProp_CarryForUnusedMax;
   extern const BFDataFieldProperties s_FldProp_OverrideUnusedMax;
   extern const BFDataFieldProperties s_FldProp_PYUnusedMax;
   extern const BFDataFieldProperties s_FldProp_DSTC0375_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0375_VW;
   extern const BFDataFieldProperties s_FldProp_OverrideMndAmt;
   extern const BFDataFieldProperties s_FldProp_UnusedAmount;
   extern const BFDataFieldProperties s_FldProp_MaxAmount;
   extern const BFDataFieldProperties s_FldProp_isRRIFOverrUnusedAmtApplic;
   extern const BFDataFieldProperties s_FldProp_PayInstructConsolType;
   extern const BFDataFieldProperties s_FldProp_XEditUnusedMaxAmt;
   extern const BFDataFieldProperties s_FldProp_CompanyCodePaymentFor;
   extern const BFDataFieldProperties s_FldProp_PayReconExists;
   extern const BFDataFieldProperties s_FldProp_TPIVersion;
   extern const BFDataFieldProperties s_FldProp_DSTC0376_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0376_REQ;
   extern const BFDataFieldProperties s_FldProp_ToAcctTaxType;
   extern const BFDataFieldProperties s_FldProp_JointDefaultDisposition;
   extern const BFDataFieldProperties s_FldProp_FundLimitOvrdExist;
   extern const BFDataFieldProperties s_FldProp_FundGroupHeading;
   extern const BFDataFieldProperties s_FldProp_DSTC0377_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0377_VW;
   extern const BFDataFieldProperties s_FldProp_AcctDesignationTaxType;
   extern const BFDataFieldProperties s_FldProp_BackWithholdTax;
   extern const BFDataFieldProperties s_FldProp_IsNSCDividend;
   extern const BFDataFieldProperties s_FldProp_ConsolTypeID;
   extern const BFDataFieldProperties s_FldProp_ConsolTransType;
   extern const BFDataFieldProperties s_FldProp_Consolidation;
   extern const BFDataFieldProperties s_FldProp_ConsolDefault;
   extern const BFDataFieldProperties s_FldProp_ConsolTypePW;
   extern const BFDataFieldProperties s_FldProp_PayInstructConsolTypeNotPW;
   extern const BFDataFieldProperties s_FldProp_PurchNetting;
   extern const BFDataFieldProperties s_FldProp_SettleInDate;
   extern const BFDataFieldProperties s_FldProp_BrokerToCode;
   extern const BFDataFieldProperties s_FldProp_SuggestSettleInDate;
   extern const BFDataFieldProperties s_FldProp_DftOrdTypeTR;
   extern const BFDataFieldProperties s_FldProp_DftOrdTypeEX;
   extern const BFDataFieldProperties s_FldProp_DftOrdTypeDSK;
   extern const BFDataFieldProperties s_FldProp_DftOrdType;
   extern const BFDataFieldProperties s_FldProp_ExchangeInTotal;
   extern const BFDataFieldProperties s_FldProp_ExchangeOutTotal;
   extern const BFDataFieldProperties s_FldProp_TransferInTotal;
   extern const BFDataFieldProperties s_FldProp_TransferOutTotal;
   extern const BFDataFieldProperties s_FldProp_SendLinkRefNum;
   extern const BFDataFieldProperties s_FldProp_IndTransType;
   extern const BFDataFieldProperties s_FldProp_InstrXEdit;
   extern const BFDataFieldProperties s_FldProp_AcctCategory2;
   extern const BFDataFieldProperties s_FldProp_ConvertAmount;
   extern const BFDataFieldProperties s_FldProp_CSSStopSINMatch;
   extern const BFDataFieldProperties s_FldProp_DistribType;
   extern const BFDataFieldProperties s_FldProp_DefInvestOpt;
   extern const BFDataFieldProperties s_FldProp_OverrideOpt;
   extern const BFDataFieldProperties s_FldProp_DSTC0379_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0379_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0379_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_AssocFund;
   extern const BFDataFieldProperties s_FldProp_AssocClass;
   extern const BFDataFieldProperties s_FldProp_AssocFundNum;
   extern const BFDataFieldProperties s_FldProp_AssocFundClass;
   extern const BFDataFieldProperties s_FldProp_AMSFreqOvrd;
   BFDataField* createField_27( const BFFieldId id )
   {
      BFDataField* pField = NULL;
      switch( id.getId() )
      {
         case 40005400: pField = new BFTextField_1( ProcessedTrade, &s_FldProp_ProcessedTrade ); break; 
         case 40005402: pField = new BFTextField_60( RbkMCHFileIndicator, &s_FldProp_RbkMCHFileIndicator ); break; 
         case 40005403: pField = new BFTextField_60( RbkSecRecFileIndicator, &s_FldProp_RbkSecRecFileIndicator ); break; 
         case 40005404: pField = new BFTextField_1( ResetPassword, &s_FldProp_ResetPassword ); break; 
         case 40005405: pField = new BFTextField_1( ExcludeCancelled, &s_FldProp_ExcludeCancelled ); break; 
         case 40005406: pField = new BFTextField_60( ReportingCurrency, &s_FldProp_ReportingCurrency ); break; 
         case 40005407: pField = new BFDecimalField( ReportingExchRate, &s_FldProp_ReportingExchRate ); break; 
         case 40005408: pField = new BFDateField( NAVDate, &s_FldProp_NAVDate ); break; 
         case 40005410: pField = new BFTextField_60( MCHFileTransHist, &s_FldProp_MCHFileTransHist ); break; 
         case 40005411: pField = new BFTextField_60( SecRecFileTransHist, &s_FldProp_SecRecFileTransHist ); break; 
         case 40005413: pField = new BFTextField_60( DirectTo, &s_FldProp_DirectTo ); break; 
         case 40005414: pField = new BFTextField_60( DirectToShrGrp, &s_FldProp_DirectToShrGrp ); break; 
         case 40005415: pField = new BFTextField_60( ESGSettle, &s_FldProp_ESGSettle ); break; 
         case 40005416: pField = new BFTextField_1( SWPSettleESGElig, &s_FldProp_SWPSettleESGElig ); break; 
         case 40005417: pField = new BFTextField_1( CashIDSettleESGElig, &s_FldProp_CashIDSettleESGElig ); break; 
         case 40005418: pField = new BFTextField_1( Reconciled, &s_FldProp_Reconciled ); break; 
         case 40005419: pField = new BFTextField_60( NSCCControlNumber, &s_FldProp_NSCCControlNumber ); break; 
         case 40005427: pField = new BFTextField_2( ExcludeBadTrades, &s_FldProp_ExcludeBadTrades ); break; 
         case 40005428: pField = new BFTextField_60( ExcludeClass, &s_FldProp_ExcludeClass ); break; 
         case 40005429: pField = new BFTextField_1( IgnoreFundLoadGrp, &s_FldProp_IgnoreFundLoadGrp ); break; 
         case 40005430: pField = new BFTextField_60( FilterCurrency, &s_FldProp_FilterCurrency ); break; 
         case 40005432: pField = new BFTextField_1( ShrGrpAccessAll, &s_FldProp_ShrGrpAccessAll ); break; 
         case 40005433: pField = new BFTextField_60( AccessLevelCat, &s_FldProp_AccessLevelCat ); break; 
         case 40005438: pField = new BFIntegerField( EUSDStatus, &s_FldProp_EUSDStatus ); break; 
         case 40005439: pField = new BFTextField_60( CustomScheduleList, &s_FldProp_CustomScheduleList ); break; 
         case 40005440: pField = new BFDateField( GWOCotAnnivDate, &s_FldProp_GWOCotAnnivDate ); break; 
         case 40005442: pField = new BFTextField<3>( GWOContract, &s_FldProp_GWOContract ); break; 
         case 40005443: pField = new BFTextField<3>( IsNewAcctContract, &s_FldProp_IsNewAcctContract ); break; 
         case 40005444: pField = new BFTextField_1( GWOSupported, &s_FldProp_GWOSupported ); break; 
         case 40005446: pField = new BFTextField_1( IsGWOContract, &s_FldProp_IsGWOContract ); break; 
         case 40005448: pField = new BFTextField_60( ProvReg, &s_FldProp_ProvReg ); break; 
         case 40005452: pField = new BFTextField_1( BackdatedAllowed, &s_FldProp_BackdatedAllowed ); break; 
         case 40005453: pField = new BFTextField_60( WarnParam, &s_FldProp_WarnParam ); break; 
         case 40005455: pField = new BFTextField_60( WarnParam1, &s_FldProp_WarnParam1 ); break; 
         case 40005456: pField = new BFTextField_60( WarnParam2, &s_FldProp_WarnParam2 ); break; 
         case 40005457: pField = new BFTextField_60( WarnParam3, &s_FldProp_WarnParam3 ); break; 
         case 40005458: pField = new BFTextField_60( WarnParam5, &s_FldProp_WarnParam5 ); break; 
         case 40005459: pField = new BFTextField_60( WarnParam4, &s_FldProp_WarnParam4 ); break; 
         case 40005461: pField = new BFTextField<3>( HasNegativeComm, &s_FldProp_HasNegativeComm ); break; 
         case 40005464: pField = new BFTextField_60( AmtTypeRedCode, &s_FldProp_AmtTypeRedCode ); break; 
         case 40005466: pField = new BFTextField_1( ExistAssignee, &s_FldProp_ExistAssignee ); break; 
         case 40005467: pField = new BFTextField_1( AssigneeScreen, &s_FldProp_AssigneeScreen ); break; 
         case 40005468: pField = new BFTextField<3>( CMDModifiable, &s_FldProp_CMDModifiable ); break; 
         case 40005469: pField = new BFTextField_60( BasedOnBW, &s_FldProp_BasedOnBW ); break; 
         case 40005470: pField = new BFTextField_60( ClientName, &s_FldProp_ClientName ); break; 
         case 40005471: pField = new BFTextField_60( SearchTypeMgmt, &s_FldProp_SearchTypeMgmt ); break; 
         case 40005472: pField = new BFTextField_60( PayToEntityMgmt, &s_FldProp_PayToEntityMgmt ); break; 
         case 40005474: pField = new BFTextField_1( PayInstructExists, &s_FldProp_PayInstructExists ); break; 
         case 40005475: pField = new BFTextField_60( PayToEntityListMgmtCoHeading, &s_FldProp_PayToEntityListMgmtCoHeading ); break; 
         case 40005476: pField = new BFTextField_1( MgmtCoPayReq, &s_FldProp_MgmtCoPayReq ); break; 
         case 40005477: pField = new BFTextField_60( TimeZoneCode, &s_FldProp_TimeZoneCode ); break; 
         case 40005478: pField = new BFTextField<4>( CutOffLevel, &s_FldProp_CutOffLevel ); break; 
         case 40005479: pField = new BFNumericField( CutOffDays, &s_FldProp_CutOffDays ); break; 
         case 40005480: pField = new BFNumericField( CutOffTimeID, &s_FldProp_CutOffTimeID ); break; 
         case 40005481: pField = new BFTextField_60( NetworkSenderLvlCutOffTimesHeading, &s_FldProp_NetworkSenderLvlCutOffTimesHeading ); break; 
         case 40005482: pField = new BFTextField<4>( IsNetworkSender, &s_FldProp_IsNetworkSender ); break; 
         case 40005483: pField = new BFTextField<3>( AllowUDMUpdate, &s_FldProp_AllowUDMUpdate ); break; 
         case 40005484: pField = new BFDecimalField( ACBAmount, &s_FldProp_ACBAmount ); break; 
         case 40005485: pField = new BFDecimalField( YTDUnassisted, &s_FldProp_YTDUnassisted ); break; 
         case 40005486: pField = new BFDecimalField( YTDAssisted, &s_FldProp_YTDAssisted ); break; 
         case 40005487: pField = new BFDecimalField( YTDGrant, &s_FldProp_YTDGrant ); break; 
         case 40005489: pField = new BFTextField_60( TradePayInstructHeadSet, &s_FldProp_TradePayInstructHeadSet ); break; 
         case 40005490: pField = new BFTextField_60( ConsolType, &s_FldProp_ConsolType ); break; 
         case 40005491: pField = new BFTextField_1( RedPayEntExist, &s_FldProp_RedPayEntExist ); break; 
         case 40005492: pField = new BFTextField_60( PayInstrOption, &s_FldProp_PayInstrOption ); break; 
         case 40005493: pField = new BFTextField_60( TPIPayEntity, &s_FldProp_TPIPayEntity ); break; 
         case 40005494: pField = new BFTextField_60( TPIPaymentFor, &s_FldProp_TPIPaymentFor ); break; 
         case 40005495: pField = new BFTextField_60( TPIPayType, &s_FldProp_TPIPayType ); break; 
         case 40005496: pField = new BFTextField_60( TPIACHProcessor, &s_FldProp_TPIACHProcessor ); break; 
         case 40005497: pField = new BFTextField_60( TPIPayMethod, &s_FldProp_TPIPayMethod ); break; 
         case 40005498: pField = new BFTextField_60( TPIBankCharge, &s_FldProp_TPIBankCharge ); break; 
         case 40005499: pField = new BFTextField_60( TPICurrOption, &s_FldProp_TPICurrOption ); break; 
         case 40005500: pField = new BFTextField_60( TPIPayCurrency, &s_FldProp_TPIPayCurrency ); break; 
         case 40005501: pField = new BFTextField_1( TPIUsePayEntAddr, &s_FldProp_TPIUsePayEntAddr ); break; 
         case 40005502: pField = new BFTextField_60( TPIAddress1, &s_FldProp_TPIAddress1 ); break; 
         case 40005503: pField = new BFTextField_60( TPIAddress2, &s_FldProp_TPIAddress2 ); break; 
         case 40005504: pField = new BFTextField_60( TPIAddress3, &s_FldProp_TPIAddress3 ); break; 
         case 40005505: pField = new BFTextField_60( TPIAddress4, &s_FldProp_TPIAddress4 ); break; 
         case 40005506: pField = new BFTextField_60( TPIAddress5, &s_FldProp_TPIAddress5 ); break; 
         case 40005507: pField = new BFTextField_60( TPIAddrCntry, &s_FldProp_TPIAddrCntry ); break; 
         case 40005508: pField = new BFTextField_60( TPIAddrPSTL, &s_FldProp_TPIAddrPSTL ); break; 
         case 40005509: pField = new BFTextField_60( TPIDirectTo, &s_FldProp_TPIDirectTo ); break; 
         case 40005510: pField = new BFIntegerField( TPIReinvAccount, &s_FldProp_TPIReinvAccount ); break; 
         case 40005511: pField = new BFTextField_60( TPICompanyCode, &s_FldProp_TPICompanyCode ); break; 
         case 40005512: pField = new BFTextField_60( TPITOShGroup, &s_FldProp_TPITOShGroup ); break; 
         case 40005513: pField = new BFDecimalField( TPIPercentage, &s_FldProp_TPIPercentage ); break; 
         case 40005514: pField = new BFTextField_60( TPIConsolLevel, &s_FldProp_TPIConsolLevel ); break; 
         case 40005515: pField = new BFTextField_60( TPIConsolType, &s_FldProp_TPIConsolType ); break; 
         case 40005516: pField = new BFIntegerField( RecTypeVersion, &s_FldProp_RecTypeVersion ); break; 
         case 40005518: pField = new BFIntegerField( RecTypRecid, &s_FldProp_RecTypRecid ); break; 
         case 40005519: pField = new BFTextField_60( RecTypRunMode, &s_FldProp_RecTypRunMode ); break; 
         case 40005520: pField = new BFIntegerField( TPITrdPayInstrID, &s_FldProp_TPITrdPayInstrID ); break; 
         case 40005521: pField = new BFDecimalField( TPIPayInstructID, &s_FldProp_TPIPayInstructID ); break; 
         case 40005522: pField = new BFIntegerField( TPIAcctID, &s_FldProp_TPIAcctID ); break; 
         case 40005525: pField = new BFTextField_1( OthPaymentForExist, &s_FldProp_OthPaymentForExist ); break; 
         case 40005527: pField = new BFTextField_60( PaymentForConsolType, &s_FldProp_PaymentForConsolType ); break; 
         case 40005528: pField = new BFTextField_60( BankInstrComboTradeBroker, &s_FldProp_BankInstrComboTradeBroker ); break; 
         case 40005529: pField = new BFTextField_60( BankInstrComboTradeBranch, &s_FldProp_BankInstrComboTradeBranch ); break; 
         case 40005530: pField = new BFTextField_60( BankInstrComboTradeSlsrep, &s_FldProp_BankInstrComboTradeSlsrep ); break; 
         case 40005531: pField = new BFTextField_60( TradePayInstructPayType, &s_FldProp_TradePayInstructPayType ); break; 
         case 40005532: pField = new BFTextField<3>( IsRRIFUnusedMaxApp, &s_FldProp_IsRRIFUnusedMaxApp ); break; 
         case 40005533: pField = new BFTextField<3>( CarryForUnusedMax, &s_FldProp_CarryForUnusedMax ); break; 
         case 40005534: pField = new BFTextField<3>( OverrideUnusedMax, &s_FldProp_OverrideUnusedMax ); break; 
         case 40005536: pField = new BFDecimalField( PYUnusedMax, &s_FldProp_PYUnusedMax ); break; 
         case 40005539: pField = new BFDecimalField( OverrideMndAmt, &s_FldProp_OverrideMndAmt ); break; 
         case 40005540: pField = new BFDecimalField( UnusedAmount, &s_FldProp_UnusedAmount ); break; 
         case 40005541: pField = new BFDecimalField( MaxAmount, &s_FldProp_MaxAmount ); break; 
         case 40005543: pField = new BFTextField<3>( isRRIFOverrUnusedAmtApplic, &s_FldProp_isRRIFOverrUnusedAmtApplic ); break; 
         case 40005544: pField = new BFTextField_60( PayInstructConsolType, &s_FldProp_PayInstructConsolType ); break; 
         case 40005545: pField = new BFTextField<5>( XEditUnusedMaxAmt, &s_FldProp_XEditUnusedMaxAmt ); break; 
         case 40005546: pField = new BFTextField_60( CompanyCodePaymentFor, &s_FldProp_CompanyCodePaymentFor ); break; 
         case 40005548: pField = new BFTextField_1( PayReconExists, &s_FldProp_PayReconExists ); break; 
         case 40005550: pField = new BFIntegerField( TPIVersion, &s_FldProp_TPIVersion ); break; 
         case 40005554: pField = new BFTextField_60( ToAcctTaxType, &s_FldProp_ToAcctTaxType ); break; 
         case 40005555: pField = new BFTextField<40>( JointDefaultDisposition, &s_FldProp_JointDefaultDisposition ); break; 
         case 40005556: pField = new BFTextField_1( FundLimitOvrdExist, &s_FldProp_FundLimitOvrdExist ); break; 
         case 40005557: pField = new BFTextField_60( FundGroupHeading, &s_FldProp_FundGroupHeading ); break; 
         case 40005560: pField = new BFTextField_60( AcctDesignationTaxType, &s_FldProp_AcctDesignationTaxType ); break; 
         case 40005561: pField = new BFTextField_1( BackWithholdTax, &s_FldProp_BackWithholdTax ); break; 
         case 40005562: pField = new BFTextField<3>( IsNSCDividend, &s_FldProp_IsNSCDividend ); break; 
         case 40005563: pField = new BFTextField_60( ConsolTypeID, &s_FldProp_ConsolTypeID ); break; 
         case 40005564: pField = new BFTextField_60( ConsolTransType, &s_FldProp_ConsolTransType ); break; 
         case 40005566: pField = new BFTextField_60( Consolidation, &s_FldProp_Consolidation ); break; 
         case 40005567: pField = new BFTextField_60( ConsolDefault, &s_FldProp_ConsolDefault ); break; 
         case 40005568: pField = new BFTextField_60( ConsolTypePW, &s_FldProp_ConsolTypePW ); break; 
         case 40005569: pField = new BFTextField_60( PayInstructConsolTypeNotPW, &s_FldProp_PayInstructConsolTypeNotPW ); break; 
         case 40005570: pField = new BFTextField_60( PurchNetting, &s_FldProp_PurchNetting ); break; 
         case 40005571: pField = new BFDateField( SettleInDate, &s_FldProp_SettleInDate ); break; 
         case 40005572: pField = new BFTextField_60( BrokerToCode, &s_FldProp_BrokerToCode ); break; 
         case 40005573: pField = new BFDateField( SuggestSettleInDate, &s_FldProp_SuggestSettleInDate ); break; 
         case 40005574: pField = new BFIntegerField( DftOrdTypeTR, &s_FldProp_DftOrdTypeTR ); break; 
         case 40005575: pField = new BFIntegerField( DftOrdTypeEX, &s_FldProp_DftOrdTypeEX ); break; 
         case 40005576: pField = new BFTextField_1( DftOrdTypeDSK, &s_FldProp_DftOrdTypeDSK ); break; 
         case 40005577: pField = new BFTextField_60( DftOrdType, &s_FldProp_DftOrdType ); break; 
         case 40005578: pField = new BFDecimalField( ExchangeInTotal, &s_FldProp_ExchangeInTotal ); break; 
         case 40005579: pField = new BFDecimalField( ExchangeOutTotal, &s_FldProp_ExchangeOutTotal ); break; 
         case 40005580: pField = new BFDecimalField( TransferInTotal, &s_FldProp_TransferInTotal ); break; 
         case 40005581: pField = new BFDecimalField( TransferOutTotal, &s_FldProp_TransferOutTotal ); break; 
         case 40005582: pField = new BFTextField_60( SendLinkRefNum, &s_FldProp_SendLinkRefNum ); break; 
         case 40005583: pField = new BFTextField_60( IndTransType, &s_FldProp_IndTransType ); break; 
         case 40005584: pField = new BFTextField<30>( InstrXEdit, &s_FldProp_InstrXEdit ); break; 
         case 40005586: pField = new BFTextField_60( AcctCategory2, &s_FldProp_AcctCategory2 ); break; 
         case 40005587: pField = new BFTextField<4>( ConvertAmount, &s_FldProp_ConvertAmount ); break; 
         case 40005588: pField = new BFTextField<3>( CSSStopSINMatch, &s_FldProp_CSSStopSINMatch ); break; 
         case 40005589: pField = new BFTextField_60( DistribType, &s_FldProp_DistribType ); break; 
         case 40005590: pField = new BFTextField_60( DefInvestOpt, &s_FldProp_DefInvestOpt ); break; 
         case 40005591: pField = new BFTextField_60( OverrideOpt, &s_FldProp_OverrideOpt ); break; 
         case 40005596: pField = new BFTextField<4>( AssocFund, &s_FldProp_AssocFund ); break; 
         case 40005597: pField = new BFTextField_2( AssocClass, &s_FldProp_AssocClass ); break; 
         case 40005598: pField = new BFTextField<4>( AssocFundNum, &s_FldProp_AssocFundNum ); break; 
         case 40005599: pField = new BFTextField_10( AssocFundClass, &s_FldProp_AssocFundClass ); break; 
      }
      return pField;
   }
}
