// BFDataImpl header file for DataSet DSTC0116.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId BrokerCode;
   extern const BFTextFieldId BrokerName;
   extern const BFTextFieldId RegAddrCode;
   extern const BFTextFieldId Addr11Line1;
   extern const BFTextFieldId Addr11Line2;
   extern const BFTextFieldId Addr11Line3;
   extern const BFTextFieldId Addr11Line4;
   extern const BFTextFieldId Addr11Line5;
   extern const BFTextFieldId AddrCntryCode;
   extern const BFTextFieldId PostalCode;
   extern const BFTextFieldId Default;
   extern const BFTextFieldId TaxType;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_BrokerCode;
   extern const BFDataFieldProperties s_FldProp_BrokerName;
   extern const BFDataFieldProperties s_FldProp_RegAddrCode;
   extern const BFDataFieldProperties s_FldProp_Addr11Line1;
   extern const BFDataFieldProperties s_FldProp_Addr11Line2;
   extern const BFDataFieldProperties s_FldProp_Addr11Line3;
   extern const BFDataFieldProperties s_FldProp_Addr11Line4;
   extern const BFDataFieldProperties s_FldProp_Addr11Line5;
   extern const BFDataFieldProperties s_FldProp_AddrCntryCode;
   extern const BFDataFieldProperties s_FldProp_PostalCode;
   extern const BFDataFieldProperties s_FldProp_Default;
   extern const BFDataFieldProperties s_FldProp_TaxType;
}


class dsi_DSTC0116_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0116_VWRepeat_Record();
   virtual ~dsi_DSTC0116_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[12];
   // Field Declarations
   BFTextField_60 BrokerCode_;
   BFTextField_60 BrokerName_;
   BFTextField_60 RegAddrCode_;
   BFTextField_60 Addr11Line1_;
   BFTextField_60 Addr11Line2_;
   BFTextField_60 Addr11Line3_;
   BFTextField_60 Addr11Line4_;
   BFTextField_60 Addr11Line5_;
   BFTextField_60 AddrCntryCode_;
   BFTextField<9> PostalCode_;
   BFTextField_1 Default_;
   BFTextField_60 TaxType_;

};
