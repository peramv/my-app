// BFDataImpl implementation file for DataSet DSTC0221.VWRepeatRecord
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0221_vwrepeatrecord.h"


// This function creates an instance of dsi_DSTC0221_VWRepeatRecord
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0221_VWRepeatRecord() { return new dsi_DSTC0221_VWRepeatRecord; }

dsi_DSTC0221_VWRepeatRecord::dsi_DSTC0221_VWRepeatRecord()
: BFDataImpl( 40003499 )
, SchedJobId_( ifds::SchedJobId, &ifds::s_FldProp_SchedJobId )
, ReportName_( ifds::ReportName, &ifds::s_FldProp_ReportName )
, StartDate_( ifds::StartDate, &ifds::s_FldProp_StartDate )
, EndDate_( ifds::EndDate, &ifds::s_FldProp_EndDate )
, StartTime_( ifds::StartTime, &ifds::s_FldProp_StartTime )
, FinalTime_( ifds::FinalTime, &ifds::s_FldProp_FinalTime )
, JobStatus_( ifds::JobStatus, &ifds::s_FldProp_JobStatus )
, OutputFileName_( ifds::OutputFileName, &ifds::s_FldProp_OutputFileName )
, OutputFilePath_( ifds::OutputFilePath, &ifds::s_FldProp_OutputFilePath )
{
   cFields_ = 9;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0221_VWRepeatRecord::~dsi_DSTC0221_VWRepeatRecord()
{
}

BFDataImpl* dsi_DSTC0221_VWRepeatRecord::clone()
{
   dsi_DSTC0221_VWRepeatRecord* p = new dsi_DSTC0221_VWRepeatRecord;
   p->SchedJobId_ = SchedJobId_;
   p->ReportName_ = ReportName_;
   p->StartDate_ = StartDate_;
   p->EndDate_ = EndDate_;
   p->StartTime_ = StartTime_;
   p->FinalTime_ = FinalTime_;
   p->JobStatus_ = JobStatus_;
   p->OutputFileName_ = OutputFileName_;
   p->OutputFilePath_ = OutputFilePath_;
   return(p);
}

BFDataField* dsi_DSTC0221_VWRepeatRecord::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40003477: return ( &SchedJobId_ ); break; // SchedJobId
      case 40003467: return ( &ReportName_ ); break; // ReportName
      case 40000107: return ( &StartDate_ ); break; // StartDate
      case 40000108: return ( &EndDate_ ); break; // EndDate
      case 40003495: return ( &StartTime_ ); break; // StartTime
      case 40003496: return ( &FinalTime_ ); break; // FinalTime
      case 40003492: return ( &JobStatus_ ); break; // JobStatus
      case 40003493: return ( &OutputFileName_ ); break; // OutputFileName
      case 40003494: return ( &OutputFilePath_ ); break; // OutputFilePath
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0221_VWRepeatRecord::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0221_VWRepeatRecord* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0221_VWRepeatRecord::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 9 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &SchedJobId_; break;
            case 1: aFlds_[1] = &ReportName_; break;
            case 2: aFlds_[2] = &StartDate_; break;
            case 3: aFlds_[3] = &EndDate_; break;
            case 4: aFlds_[4] = &StartTime_; break;
            case 5: aFlds_[5] = &FinalTime_; break;
            case 6: aFlds_[6] = &JobStatus_; break;
            case 7: aFlds_[7] = &OutputFileName_; break;
            case 8: aFlds_[8] = &OutputFilePath_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0221_VWRepeatRecord::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0221_VWRepeatRecord* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0221_VWRepeatRecord::getLargestDefinedField( void ) const
{
   return( 80 );
}

unsigned long dsi_DSTC0221_VWRepeatRecord::getDefinedByteLength( void ) const
{
   return( 411 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0221_VWRepeatRecord::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0221_VWRepeatRecord::fieldExists( id );
}

bool dsi_DSTC0221_VWRepeatRecord::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40003477: return( true );
      case 40003467: return( true );
      case 40000107: return( true );
      case 40000108: return( true );
      case 40003495: return( true );
      case 40003496: return( true );
      case 40003492: return( true );
      case 40003493: return( true );
      case 40003494: return( true );
   }
   return false;
}

