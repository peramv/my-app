// Data Field Properties
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdataid.hpp>
#include "ifast_substitutions.h"
#include "ifast_masks.h"

namespace ifds
{
   extern const BFDateFieldId BailMaturityDate;
   extern const BFIntegerFieldId CotAcctVer;
   extern const BFIntegerFieldId CotAcctRid;
   extern const BFDataId DSTC0105_VWRepeat_Record;
   extern const BFDataId DSTC0105_VW;
   extern const BFTextFieldId ContractListHeading;
   extern const BFDateFieldId LetterDate;
   extern const BFTextFieldId LetterReq;
   extern const BFTextFieldId DividentType;
   extern const BFTextFieldId IntFromDateType;
   extern const BFTextFieldId IntToDateType;
   extern const BFIntegerFieldId SettlePurDays;
   extern const BFIntegerFieldId SettleRedDays;
   extern const BFDateFieldId NextSettleDate;
   extern const BFDateFieldId NextValDate;
   extern const BFTextFieldId CertificateHeadingSet;
   extern const BFTextFieldId IdentAcctEntitiesHeadingSet;
   extern const BFTextFieldId IdentAcctAccountsHeadingSet;
   extern const BFTextFieldId ChequesListHeadingSet;
   extern const BFTextFieldId ChequesDetailHeadingSet;
   extern const BFDecimalFieldId GuarAcctTotal;
   extern const BFDecimalFieldId GuarAmount;
   extern const BFDecimalFieldId GuarAmtAtMatur;
   extern const BFDecimalFieldId NAVBefRedPeriod;
   extern const BFDecimalFieldId NAVBefRedAcct;
   extern const BFDecimalFieldId GuarBefRedAcct;
   extern const BFDecimalFieldId GuarBefRedPeriod;
   extern const BFDecimalFieldId GuarRedctnPeriod;
   extern const BFDecimalFieldId GuarRedctnAct;
   extern const BFDecimalFieldId GuarAftRedPeriod;
   extern const BFDecimalFieldId GuarAftRedAcct;
   extern const BFDecimalFieldId ResetGuarTot;
   extern const BFDateFieldId ResetMaturDate;
   extern const BFDecimalFieldId ResetNAV;
   extern const BFDecimalFieldId PrevGuar;
   extern const BFDecimalFieldId ResetGuarAmount;
   extern const BFDecimalFieldId GuarTot;
   extern const BFDataId DSTC0106_VWRepeat_Record;
   extern const BFDecimalFieldId RedAmountPeriod;
   extern const BFDecimalFieldId RedAmountAcct;
   extern const BFDecimalFieldId NAVAftRedPeriod;
   extern const BFDecimalFieldId NAVAftRedAcct;
   extern const BFTextFieldId TaxJurisDesc;
   extern const BFDataId DSTC0106_REQ;
   extern const BFDataId DSTC0106_VW;
   extern const BFDecimalFieldId AmountInUnit;
   extern const BFNumericFieldId TransactionId;
   extern const BFTextFieldId GuarResetListHeading;
   extern const BFTextFieldId GuaranteeListHeading;
   extern const BFTextFieldId NetAllowed;
   extern const BFTextFieldId LV_RRIF_Heading;
   extern const BFTextFieldId LV_RRIF_AllocHeading;
   extern const BFTextFieldId BatchSrchType;
   extern const BFTextFieldId BatchVerified;
   extern const BFDataId DSTC0124_REQ;
   extern const BFDataId DSTC0124_VW;
   extern const BFTextFieldId GuaranteeRedDetailTop;
   extern const BFTextFieldId GuaranteeRedDetailLeft;
   extern const BFDataId DSTC0123_REQ;
   extern const BFTextFieldId HolidayCode;
   extern const BFDataId DSTC0123_VW;
   extern const BFDataId DSTC0123_VWRepeat_Record;
   extern const BFDataId DSTC0125_REQ;
   extern const BFDataId DSTC0125_VWRepeat_Record;
   extern const BFTextFieldId BusDayCode;
   extern const BFTextFieldId IncludeCode;
   extern const BFTextFieldId SundayIsBusDay;
   extern const BFTextFieldId MondayIsBusDay;
   extern const BFTextFieldId TuesdayIsBusDay;
   extern const BFTextFieldId WednesdayIsBusDay;
   extern const BFTextFieldId ThursdayIsBusDay;
   extern const BFTextFieldId FridayIsBusDay;
   extern const BFTextFieldId SaturdayIsBusDay;
   extern const BFDataId DSTC0125_VW;
   extern const BFDataId DSTC0126_VW;
   extern const BFDataId DSTC0126_REQ;
   extern const BFTextFieldId AllFundGroupTypes;
   extern const BFTextFieldId FundGroupType;
   extern const BFDataId DSTC0126_VWRepeat_Record;
   extern const BFTextFieldId FundGroupCode;
   extern const BFTextFieldId ClassReq;
   extern const BFDataId DSTC0127_VW;
   extern const BFDataId DSTC0127_REQ;
   extern const BFDataId DSTC0128_VW;
   extern const BFDataId DSTC0128_REQ;
   extern const BFDataId DSTC0128_VWRepeat_Record;
   extern const BFTextFieldId Schedule;
   extern const BFTextFieldId TaxRatesHeadingSet;
   extern const BFTextFieldId RESPInfoHeadingSet;
   extern const BFTextFieldId RESPTransactionHeadingSet;
   extern const BFDataId DSTC0112_VW;
   extern const BFDataId DSTC0112_REQ;
   extern const BFDataId DSTC0112_VWRepeat_Record;
   extern const BFDecimalFieldId FedIncRate;
   extern const BFDecimalFieldId FedRedRate;
   extern const BFDecimalFieldId ProvIncRate;
   extern const BFDecimalFieldId ProvRedRate;
   extern const BFDecimalFieldId LowerBound;
   extern const BFDecimalFieldId UpperBound;
   extern const BFDecimalFieldId PerPenRate;
   extern const BFDecimalFieldId LumpPenRate;
   extern const BFTextFieldId PAmtThreasholdCode;
   extern const BFTextFieldId PAmtThreasholdDesc;
   extern const BFDecimalFieldId TaxRateRid;
   extern const BFTextFieldId ModName;
   extern const BFDataId DSTC0111_VW;
   extern const BFDataId DSTC0111_REQ;
   extern const BFDataId DSTC0111_VWRepeat_Record;
   extern const BFTextFieldId HistoryPending;
   extern const BFTextFieldId HRDCTransId;
   extern const BFDecimalFieldId ACAmt;
   extern const BFDecimalFieldId GrantAmount;
   extern const BFTextFieldId GrantTransCode;
   extern const BFTextFieldId GrantTransLabel;
   extern const BFDecimalFieldId GrantTransId;
   extern const BFDecimalFieldId UCAmt;
   extern const BFTextFieldId UCReason;
   extern const BFTextFieldId OldContractId;
   extern const BFTextFieldId OldPlanId;
   extern const BFTextFieldId RESPLetter;
   extern const BFTextFieldId HRDCReported;
   extern const BFTextFieldId RESPTransStat;
   extern const BFTextFieldId TradeAddressTo;
   extern const BFTextFieldId TradeAddressFrom;
   extern const BFTextFieldId TradeAddressToDisplayKanji;
   extern const BFTextFieldId TradeAddressFromDisplayKanji;
   extern const BFTextFieldId MinFromFundAmount;
   extern const BFTextFieldId ValuationDate;
   extern const BFTextFieldId WireOrdFndCls;
   extern const BFTextFieldId NetTradeAllow;
   extern const BFTextFieldId SettleDateFndCls;
   extern const BFTextFieldId RIFPayType;
   extern const BFDecimalFieldId SetupFee;
   extern const BFTextFieldId TradeAttributes;
   extern const BFTextFieldId TradeAttributeFields;
   extern const BFTextFieldId TradingAttribFieldsHeadingSet;
   extern const BFDecimalFieldId MinAmtWith;
   extern const BFDecimalFieldId MinAmtOut;
   extern const BFDecimalFieldId OptAmtWith;
   extern const BFDecimalFieldId OptAmtOut;
   extern const BFDecimalFieldId TotAmtWith;
   extern const BFDecimalFieldId TotAmtOut;
   extern const BFDecimalFieldId TaxAmtOut;
   extern const BFDecimalFieldId OthAmtWith;
   extern const BFDecimalFieldId MinAmt;
   extern const BFDecimalFieldId MinAmtShort;
   extern const BFDecimalFieldId MaxAmt;
   extern const BFDecimalFieldId MaxAmtRemain;
   extern const BFDecimalFieldId sMandMinAmtYr;
   extern const BFDecimalFieldId sMinAmtWith;
   extern const BFDecimalFieldId sMinAmtOut;
   extern const BFDecimalFieldId sMinSched;
   extern const BFDecimalFieldId sMinAmtShort;
   extern const BFDecimalFieldId sMandMaxAmtYr;
   extern const BFDecimalFieldId sMaxAmtWith;
   extern const BFDecimalFieldId sMaxAmtOut;
   extern const BFDecimalFieldId sMaxSched;
   extern const BFDecimalFieldId sMaxAmtShort;
   extern const BFDecimalFieldId mCurrYrDep;
   extern const BFDecimalFieldId mCurrMktValue;
   extern const BFDecimalFieldId mPYEMktValue;
   extern const BFDecimalFieldId mMinAmt;
   extern const BFDecimalFieldId mMinAmtRemain;
   extern const BFDecimalFieldId mMaxAmt;
   extern const BFDecimalFieldId mMaxAmtRemain;
   extern const BFDecimalFieldId mFreeAmtRemain;
   extern const BFDecimalFieldId mFreeAmtUsed;
   extern const BFDecimalFieldId mSchedPayGrossAmt;
   extern const BFDecimalFieldId mSchedWithGrossAmt;
   extern const BFDecimalFieldId mTransfGrossAmt;
   extern const BFDecimalFieldId mTotGrossAmt;
   extern const BFDecimalFieldId mSchedPayChrg;
   extern const BFDecimalFieldId mUnSchedWithChrg;
   extern const BFDecimalFieldId mTransfChrg;
   extern const BFDecimalFieldId mTotChrg;
   extern const BFDecimalFieldId mSchedPymtTaxAmt;
   extern const BFDecimalFieldId mUnSchedWithTaxAmt;
   extern const BFDecimalFieldId mTransfTaxAmt;
   extern const BFDecimalFieldId mTotTax;
   extern const BFDecimalFieldId mSchedPayNetAmt;
   extern const BFDecimalFieldId mUnSchedWithNetAmt;
   extern const BFDecimalFieldId mTransfNetAmt;
   extern const BFDecimalFieldId mTotNetAmt;
   extern const BFTextFieldId MinMaxListTop;
   extern const BFTextFieldId MinMaxListLeft;
   extern const BFDataId DSTC0109_REQ;
   extern const BFDataId DSTC0109_VW;
   extern const BFDecimalFieldId TaxAmtWith;
   extern const BFDecimalFieldId mUnSchedWithGrossAmt;
   extern const BFTextFieldId AutoTransferAllocHeadingSet;
   extern const BFTextFieldId AmtTypeAllocation;
   extern const BFTextFieldId WireOrdNumOrdType;
   extern const BFTextFieldId MinToFundAmount;
   extern const BFTextFieldId FundClassTradeDate;
   extern const BFTextFieldId FundClassGroup;
   extern const BFTextFieldId ToFundClassTradeDate;
   extern const BFTextFieldId ToFundClassGroup;
   extern const BFTextFieldId AmtTypeFundTradeType;
   extern const BFTextFieldId LV_OneTimeRRIFAllocHeading;

   //------------------------------------------------------------------
   // Field s_FldProp_BailMaturityDate (1400)
   //------------------------------------------------------------------
   const DString& s_FldProp_BailMaturityDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1400_4( I_("") );
      return( dstrDefValue_1400_4 );
   }
   const DString& s_FldProp_BailMaturityDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1400_4( I_("BailMaturityDate") );
      return( dstrFldLabel_1400_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BailMaturityDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,BailMaturityDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BailMaturityDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BailMaturityDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CotAcctVer (1401)
   //------------------------------------------------------------------
   const DString& s_FldProp_CotAcctVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1401_5( I_("0") );
      return( dstrDefValue_1401_5 );
   }
   DIINT64 s_FldProp_CotAcctVer_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_CotAcctVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1401_5( I_("CotAcctVer") );
      return( dstrFldLabel_1401_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CotAcctVer(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,CotAcctVer // fieldId
      ,13 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_16 // mask chooser function
      ,s_FldProp_CotAcctVer_s_DVF // default value
      ,s_FldProp_CotAcctVer_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_CotAcctVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CotAcctRid (1402)
   //------------------------------------------------------------------
   const DString& s_FldProp_CotAcctRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1402_4( I_("0") );
      return( dstrDefValue_1402_4 );
   }
   DIINT64 s_FldProp_CotAcctRid_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_CotAcctRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1402_4( I_("CotAcctRid") );
      return( dstrFldLabel_1402_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CotAcctRid(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,CotAcctRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_CotAcctRid_s_DVF // default value
      ,s_FldProp_CotAcctRid_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_CotAcctRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ContractListHeading (1405)
   //------------------------------------------------------------------
   const DString& s_FldProp_ContractListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1405_4( I_("0") );
         return( dstrDefValue_1405_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1405_8( I_("") );
         return( dstrDefValue_1405_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1405_7( I_("") );
         return( dstrDefValue_1405_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1405_5( I_("") );
         return( dstrDefValue_1405_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1405_3( I_("") );
         return( dstrDefValue_1405_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1405_1( I_("") );
         return( dstrDefValue_1405_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1405_6( I_("0") );
         return( dstrDefValue_1405_6 );
      }
      static const DString dstrDefValue_1405_1( I_("") );
      return( dstrDefValue_1405_1 );
   }
   const DString& s_FldProp_ContractListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1405_4( I_("ContractListHeading") );
         return( dstrFldLabel_1405_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1405_8( I_("ContractListHeading") );
         return( dstrFldLabel_1405_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1405_7( I_("ContractListHeading") );
         return( dstrFldLabel_1405_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1405_5( I_("ContractListHeading") );
         return( dstrFldLabel_1405_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1405_3( I_("ContractListHeading") );
         return( dstrFldLabel_1405_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1405_1( I_("ContractListHeading") );
         return( dstrFldLabel_1405_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1405_6( I_("ContractListHeading") );
         return( dstrFldLabel_1405_6 );
      }
      static const DString dstrFldLabel_1405_1( I_("ContractListHeading") );
      return( dstrFldLabel_1405_1 );
   }
   PBF_SSC subset_super_chooser_2_1405( const ClientLocale& locale )
   {
      return chooser_ss_002_262; // defined in ifast_substitutions_chooser_8.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ContractListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,ContractListHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ContractListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ContractListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1405 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LetterDate (1406)
   //------------------------------------------------------------------
   const DString& s_FldProp_LetterDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1406_4( I_(" ") );
      return( dstrDefValue_1406_4 );
   }
   const DString& s_FldProp_LetterDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1406_4( I_("LetterDate") );
      return( dstrFldLabel_1406_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LetterDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,LetterDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LetterDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LetterDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LetterReq (1407)
   //------------------------------------------------------------------
   const DString& s_FldProp_LetterReq_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1407_4( I_("N") );
      return( dstrDefValue_1407_4 );
   }
   const DString& s_FldProp_LetterReq_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1407_4( I_("LetterReq") );
      return( dstrFldLabel_1407_4 );
   }
   PBF_SSC subset_super_chooser_2_1407( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LetterReq(
       BFDataFieldProperties::Type::text // field is a text field
      ,LetterReq // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LetterReq_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LetterReq_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1407 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DividentType (1408)
   //------------------------------------------------------------------
   const DString& s_FldProp_DividentType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1408_4( I_("0") );
      return( dstrDefValue_1408_4 );
   }
   const DString& s_FldProp_DividentType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1408_4( I_("DividentType") );
      return( dstrFldLabel_1408_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DividentType(
       BFDataFieldProperties::Type::text // field is a text field
      ,DividentType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DividentType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DividentType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IntFromDateType (1409)
   //------------------------------------------------------------------
   const DString& s_FldProp_IntFromDateType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1409_4( I_("0") );
      return( dstrDefValue_1409_4 );
   }
   const DString& s_FldProp_IntFromDateType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1409_4( I_("IntFromDateType") );
      return( dstrFldLabel_1409_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IntFromDateType(
       BFDataFieldProperties::Type::text // field is a text field
      ,IntFromDateType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IntFromDateType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IntFromDateType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IntToDateType (1410)
   //------------------------------------------------------------------
   const DString& s_FldProp_IntToDateType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1410_4( I_("0") );
      return( dstrDefValue_1410_4 );
   }
   const DString& s_FldProp_IntToDateType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1410_4( I_("IntToDateType") );
      return( dstrFldLabel_1410_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IntToDateType(
       BFDataFieldProperties::Type::text // field is a text field
      ,IntToDateType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IntToDateType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IntToDateType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettlePurDays (1411)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettlePurDays_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1411_4( I_("0") );
      return( dstrDefValue_1411_4 );
   }
   DIINT64 s_FldProp_SettlePurDays_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_SettlePurDays_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1411_4( I_("SettlePurDays") );
      return( dstrFldLabel_1411_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettlePurDays(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,SettlePurDays // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_SettlePurDays_s_DVF // default value
      ,s_FldProp_SettlePurDays_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_SettlePurDays_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleRedDays (1412)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleRedDays_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1412_8( I_("0") );
      return( dstrDefValue_1412_8 );
   }
   DIINT64 s_FldProp_SettleRedDays_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_SettleRedDays_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1412_8( I_("SettleRedDays") );
      return( dstrFldLabel_1412_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleRedDays(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,SettleRedDays // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_SettleRedDays_s_DVF // default value
      ,s_FldProp_SettleRedDays_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_SettleRedDays_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NextSettleDate (1413)
   //------------------------------------------------------------------
   const DString& s_FldProp_NextSettleDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1413_4( I_(" ") );
      return( dstrDefValue_1413_4 );
   }
   const DString& s_FldProp_NextSettleDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1413_4( I_("NextSettleDate") );
      return( dstrFldLabel_1413_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NextSettleDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,NextSettleDate // fieldId
      ,8 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NextSettleDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NextSettleDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NextValDate (1414)
   //------------------------------------------------------------------
   const DString& s_FldProp_NextValDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1414_4( I_(" ") );
      return( dstrDefValue_1414_4 );
   }
   const DString& s_FldProp_NextValDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1414_4( I_("NextValDate") );
      return( dstrFldLabel_1414_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NextValDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,NextValDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NextValDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NextValDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CertificateHeadingSet (1415)
   //------------------------------------------------------------------
   const DString& s_FldProp_CertificateHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1415_4( I_("0") );
         return( dstrDefValue_1415_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1415_7( I_("") );
         return( dstrDefValue_1415_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1415_5( I_("") );
         return( dstrDefValue_1415_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1415_8( I_("") );
         return( dstrDefValue_1415_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1415_3( I_("") );
         return( dstrDefValue_1415_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1415_1( I_("") );
         return( dstrDefValue_1415_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1415_6( I_("0") );
         return( dstrDefValue_1415_6 );
      }
      static const DString dstrDefValue_1415_1( I_("") );
      return( dstrDefValue_1415_1 );
   }
   const DString& s_FldProp_CertificateHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1415_4( I_("CertificateHeadingSet") );
         return( dstrFldLabel_1415_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1415_7( I_("CertificateHeadingSet") );
         return( dstrFldLabel_1415_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1415_5( I_("CertificateHeadingSet") );
         return( dstrFldLabel_1415_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1415_8( I_("CertificateHeadingSet") );
         return( dstrFldLabel_1415_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1415_3( I_("CertificateHeadingSet") );
         return( dstrFldLabel_1415_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1415_1( I_("CertificateHeadingSet") );
         return( dstrFldLabel_1415_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1415_6( I_("CertificateHeadingSet") );
         return( dstrFldLabel_1415_6 );
      }
      static const DString dstrFldLabel_1415_1( I_("CertificateHeadingSet") );
      return( dstrFldLabel_1415_1 );
   }
   PBF_SSC subset_super_chooser_2_1415( const ClientLocale& locale )
   {
      return chooser_ss_002_159; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CertificateHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,CertificateHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CertificateHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CertificateHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1415 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IdentAcctEntitiesHeadingSet (1416)
   //------------------------------------------------------------------
   const DString& s_FldProp_IdentAcctEntitiesHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1416_5( I_(" ") );
      return( dstrDefValue_1416_5 );
   }
   const DString& s_FldProp_IdentAcctEntitiesHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1416_5( I_("IdentAcctEntitiesHeadingSet") );
      return( dstrFldLabel_1416_5 );
   }
   PBF_SSC subset_super_chooser_2_1416( const ClientLocale& locale )
   {
      return chooser_ss_002_160; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IdentAcctEntitiesHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,IdentAcctEntitiesHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IdentAcctEntitiesHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IdentAcctEntitiesHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1416 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IdentAcctAccountsHeadingSet (1417)
   //------------------------------------------------------------------
   const DString& s_FldProp_IdentAcctAccountsHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1417_8( I_(" ") );
      return( dstrDefValue_1417_8 );
   }
   const DString& s_FldProp_IdentAcctAccountsHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1417_8( I_("IdentAcctAccountsHeadingSet") );
      return( dstrFldLabel_1417_8 );
   }
   PBF_SSC subset_super_chooser_2_1417( const ClientLocale& locale )
   {
      return chooser_ss_002_161; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IdentAcctAccountsHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,IdentAcctAccountsHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IdentAcctAccountsHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IdentAcctAccountsHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1417 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChequesListHeadingSet (1418)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChequesListHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1418_7( I_("") );
         return( dstrDefValue_1418_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1418_6( I_("0") );
         return( dstrDefValue_1418_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1418_5( I_("") );
         return( dstrDefValue_1418_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1418_4( I_("0") );
         return( dstrDefValue_1418_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1418_3( I_("") );
         return( dstrDefValue_1418_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1418_1( I_("") );
         return( dstrDefValue_1418_1 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1418_8( I_("") );
         return( dstrDefValue_1418_8 );
      }
      static const DString dstrDefValue_1418_1( I_("") );
      return( dstrDefValue_1418_1 );
   }
   const DString& s_FldProp_ChequesListHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1418_7( I_("ChequesListHeadingSet") );
         return( dstrFldLabel_1418_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1418_6( I_("ChequesListHeadingSet") );
         return( dstrFldLabel_1418_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1418_5( I_("ChequesListHeadingSet") );
         return( dstrFldLabel_1418_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1418_4( I_("ChequesListHeadingSet") );
         return( dstrFldLabel_1418_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1418_3( I_("ChequesListHeadingSet") );
         return( dstrFldLabel_1418_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1418_1( I_("ChequesListHeadingSet") );
         return( dstrFldLabel_1418_1 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1418_8( I_("ChequesListHeadingSet") );
         return( dstrFldLabel_1418_8 );
      }
      static const DString dstrFldLabel_1418_1( I_("ChequesListHeadingSet") );
      return( dstrFldLabel_1418_1 );
   }
   PBF_SSC subset_super_chooser_2_1418( const ClientLocale& locale )
   {
      return chooser_ss_002_162; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChequesListHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,ChequesListHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ChequesListHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ChequesListHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1418 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChequesDetailHeadingSet (1419)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChequesDetailHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1419_8( I_("") );
         return( dstrDefValue_1419_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1419_7( I_("") );
         return( dstrDefValue_1419_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1419_5( I_("") );
         return( dstrDefValue_1419_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1419_6( I_("0") );
         return( dstrDefValue_1419_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1419_3( I_("") );
         return( dstrDefValue_1419_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1419_1( I_("") );
         return( dstrDefValue_1419_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1419_4( I_("0") );
         return( dstrDefValue_1419_4 );
      }
      static const DString dstrDefValue_1419_1( I_("") );
      return( dstrDefValue_1419_1 );
   }
   const DString& s_FldProp_ChequesDetailHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1419_8( I_("ChequesDetailHeadingSet") );
         return( dstrFldLabel_1419_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1419_7( I_("ChequesDetailHeadingSet") );
         return( dstrFldLabel_1419_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1419_5( I_("ChequesDetailHeadingSet") );
         return( dstrFldLabel_1419_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1419_6( I_("ChequesDetailHeadingSet") );
         return( dstrFldLabel_1419_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1419_3( I_("ChequesDetailHeadingSet") );
         return( dstrFldLabel_1419_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1419_1( I_("ChequesDetailHeadingSet") );
         return( dstrFldLabel_1419_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1419_4( I_("ChequesDetailHeadingSet") );
         return( dstrFldLabel_1419_4 );
      }
      static const DString dstrFldLabel_1419_1( I_("ChequesDetailHeadingSet") );
      return( dstrFldLabel_1419_1 );
   }
   PBF_SSC subset_super_chooser_2_1419( const ClientLocale& locale )
   {
      return chooser_ss_002_163; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChequesDetailHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,ChequesDetailHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ChequesDetailHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ChequesDetailHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1419 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarAcctTotal (1420)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarAcctTotal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1420_4( I_("0") );
      return( dstrDefValue_1420_4 );
   }
   double s_FldProp_GuarAcctTotal_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_GuarAcctTotal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1420_4( I_("GuarAcctTotal") );
      return( dstrFldLabel_1420_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarAcctTotal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GuarAcctTotal // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GuarAcctTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GuarAcctTotal_d_DVF // default value
      ,s_FldProp_GuarAcctTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarAmount (1421)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1421_4( I_("0") );
      return( dstrDefValue_1421_4 );
   }
   double s_FldProp_GuarAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_GuarAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1421_4( I_("GuarAmount") );
      return( dstrFldLabel_1421_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GuarAmount // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GuarAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GuarAmount_d_DVF // default value
      ,s_FldProp_GuarAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarAmtAtMatur (1422)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarAmtAtMatur_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1422_4( I_("0") );
      return( dstrDefValue_1422_4 );
   }
   double s_FldProp_GuarAmtAtMatur_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_GuarAmtAtMatur_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1422_4( I_("GuarAmtAtMatur") );
      return( dstrFldLabel_1422_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarAmtAtMatur(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GuarAmtAtMatur // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_GuarAmtAtMatur_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GuarAmtAtMatur_d_DVF // default value
      ,s_FldProp_GuarAmtAtMatur_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NAVBefRedPeriod (1423)
   //------------------------------------------------------------------
   const DString& s_FldProp_NAVBefRedPeriod_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1423_4( I_(" ") );
      return( dstrDefValue_1423_4 );
   }
   double s_FldProp_NAVBefRedPeriod_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_NAVBefRedPeriod_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1423_4( I_("NAVBefRedPeriod") );
      return( dstrFldLabel_1423_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NAVBefRedPeriod(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,NAVBefRedPeriod // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_NAVBefRedPeriod_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_NAVBefRedPeriod_d_DVF // default value
      ,s_FldProp_NAVBefRedPeriod_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NAVBefRedAcct (1424)
   //------------------------------------------------------------------
   const DString& s_FldProp_NAVBefRedAcct_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1424_4( I_(" ") );
      return( dstrDefValue_1424_4 );
   }
   double s_FldProp_NAVBefRedAcct_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_NAVBefRedAcct_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1424_4( I_("NAVBefRedAcct") );
      return( dstrFldLabel_1424_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NAVBefRedAcct(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,NAVBefRedAcct // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_NAVBefRedAcct_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_NAVBefRedAcct_d_DVF // default value
      ,s_FldProp_NAVBefRedAcct_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarBefRedAcct (1425)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarBefRedAcct_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1425_4( I_(" ") );
      return( dstrDefValue_1425_4 );
   }
   double s_FldProp_GuarBefRedAcct_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_GuarBefRedAcct_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1425_4( I_("GuarBefRedAcct") );
      return( dstrFldLabel_1425_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarBefRedAcct(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GuarBefRedAcct // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GuarBefRedAcct_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GuarBefRedAcct_d_DVF // default value
      ,s_FldProp_GuarBefRedAcct_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarBefRedPeriod (1426)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarBefRedPeriod_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1426_4( I_(" ") );
      return( dstrDefValue_1426_4 );
   }
   double s_FldProp_GuarBefRedPeriod_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_GuarBefRedPeriod_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1426_4( I_("GuarBefRedPeriod") );
      return( dstrFldLabel_1426_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarBefRedPeriod(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GuarBefRedPeriod // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GuarBefRedPeriod_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GuarBefRedPeriod_d_DVF // default value
      ,s_FldProp_GuarBefRedPeriod_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarRedctnPeriod (1427)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarRedctnPeriod_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1427_5( I_(" ") );
      return( dstrDefValue_1427_5 );
   }
   double s_FldProp_GuarRedctnPeriod_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_GuarRedctnPeriod_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1427_5( I_("GuarRedctnPeriod") );
      return( dstrFldLabel_1427_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarRedctnPeriod(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GuarRedctnPeriod // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GuarRedctnPeriod_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GuarRedctnPeriod_d_DVF // default value
      ,s_FldProp_GuarRedctnPeriod_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarRedctnAct (1428)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarRedctnAct_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1428_4( I_(" ") );
      return( dstrDefValue_1428_4 );
   }
   double s_FldProp_GuarRedctnAct_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_GuarRedctnAct_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1428_4( I_("GuarRedctnAct") );
      return( dstrFldLabel_1428_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarRedctnAct(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GuarRedctnAct // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GuarRedctnAct_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GuarRedctnAct_d_DVF // default value
      ,s_FldProp_GuarRedctnAct_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarAftRedPeriod (1429)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarAftRedPeriod_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1429_4( I_(" ") );
      return( dstrDefValue_1429_4 );
   }
   double s_FldProp_GuarAftRedPeriod_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_GuarAftRedPeriod_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1429_4( I_("GuarAftRedPeriod") );
      return( dstrFldLabel_1429_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarAftRedPeriod(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GuarAftRedPeriod // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GuarAftRedPeriod_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GuarAftRedPeriod_d_DVF // default value
      ,s_FldProp_GuarAftRedPeriod_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarAftRedAcct (1430)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarAftRedAcct_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1430_4( I_(" ") );
      return( dstrDefValue_1430_4 );
   }
   double s_FldProp_GuarAftRedAcct_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_GuarAftRedAcct_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1430_4( I_("GuarAftRedAcct") );
      return( dstrFldLabel_1430_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarAftRedAcct(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GuarAftRedAcct // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GuarAftRedAcct_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GuarAftRedAcct_d_DVF // default value
      ,s_FldProp_GuarAftRedAcct_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ResetGuarTot (1431)
   //------------------------------------------------------------------
   const DString& s_FldProp_ResetGuarTot_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1431_5( I_(" ") );
      return( dstrDefValue_1431_5 );
   }
   double s_FldProp_ResetGuarTot_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ResetGuarTot_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1431_5( I_("ResetGuarTot") );
      return( dstrFldLabel_1431_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ResetGuarTot(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ResetGuarTot // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ResetGuarTot_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ResetGuarTot_d_DVF // default value
      ,s_FldProp_ResetGuarTot_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ResetMaturDate (1432)
   //------------------------------------------------------------------
   const DString& s_FldProp_ResetMaturDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1432_4( I_(" ") );
      return( dstrDefValue_1432_4 );
   }
   const DString& s_FldProp_ResetMaturDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1432_4( I_("ResetMaturDate") );
      return( dstrFldLabel_1432_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ResetMaturDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,ResetMaturDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ResetMaturDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ResetMaturDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ResetNAV (1433)
   //------------------------------------------------------------------
   const DString& s_FldProp_ResetNAV_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1433_5( I_(" ") );
      return( dstrDefValue_1433_5 );
   }
   double s_FldProp_ResetNAV_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ResetNAV_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1433_5( I_("ResetNAV") );
      return( dstrFldLabel_1433_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ResetNAV(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ResetNAV // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ResetNAV_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ResetNAV_d_DVF // default value
      ,s_FldProp_ResetNAV_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PrevGuar (1434)
   //------------------------------------------------------------------
   const DString& s_FldProp_PrevGuar_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1434_5( I_(" ") );
      return( dstrDefValue_1434_5 );
   }
   double s_FldProp_PrevGuar_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_PrevGuar_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1434_5( I_("PrevGuar") );
      return( dstrFldLabel_1434_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PrevGuar(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PrevGuar // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_PrevGuar_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PrevGuar_d_DVF // default value
      ,s_FldProp_PrevGuar_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ResetGuarAmount (1435)
   //------------------------------------------------------------------
   const DString& s_FldProp_ResetGuarAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1435_4( I_(" ") );
      return( dstrDefValue_1435_4 );
   }
   double s_FldProp_ResetGuarAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ResetGuarAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1435_4( I_("ResetGuarAmount") );
      return( dstrFldLabel_1435_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ResetGuarAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ResetGuarAmount // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ResetGuarAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ResetGuarAmount_d_DVF // default value
      ,s_FldProp_ResetGuarAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarTot (1436)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarTot_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1436_4( I_(" ") );
      return( dstrDefValue_1436_4 );
   }
   double s_FldProp_GuarTot_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_GuarTot_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1436_4( I_("GuarTot") );
      return( dstrFldLabel_1436_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarTot(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GuarTot // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GuarTot_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GuarTot_d_DVF // default value
      ,s_FldProp_GuarTot_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RedAmountPeriod (1438)
   //------------------------------------------------------------------
   const DString& s_FldProp_RedAmountPeriod_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1438_8( I_(" ") );
      return( dstrDefValue_1438_8 );
   }
   double s_FldProp_RedAmountPeriod_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_RedAmountPeriod_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1438_8( I_("RedAmountPeriod") );
      return( dstrFldLabel_1438_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RedAmountPeriod(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RedAmountPeriod // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_RedAmountPeriod_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RedAmountPeriod_d_DVF // default value
      ,s_FldProp_RedAmountPeriod_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RedAmountAcct (1439)
   //------------------------------------------------------------------
   const DString& s_FldProp_RedAmountAcct_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1439_4( I_(" ") );
      return( dstrDefValue_1439_4 );
   }
   double s_FldProp_RedAmountAcct_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_RedAmountAcct_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1439_4( I_("RedAmountAcct") );
      return( dstrFldLabel_1439_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RedAmountAcct(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RedAmountAcct // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_RedAmountAcct_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RedAmountAcct_d_DVF // default value
      ,s_FldProp_RedAmountAcct_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NAVAftRedPeriod (1440)
   //------------------------------------------------------------------
   const DString& s_FldProp_NAVAftRedPeriod_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1440_5( I_(" ") );
      return( dstrDefValue_1440_5 );
   }
   double s_FldProp_NAVAftRedPeriod_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_NAVAftRedPeriod_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1440_5( I_("NAVAftRedPeriod") );
      return( dstrFldLabel_1440_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NAVAftRedPeriod(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,NAVAftRedPeriod // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_NAVAftRedPeriod_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_NAVAftRedPeriod_d_DVF // default value
      ,s_FldProp_NAVAftRedPeriod_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NAVAftRedAcct (1441)
   //------------------------------------------------------------------
   const DString& s_FldProp_NAVAftRedAcct_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1441_4( I_(" ") );
      return( dstrDefValue_1441_4 );
   }
   double s_FldProp_NAVAftRedAcct_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_NAVAftRedAcct_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1441_4( I_("NAVAftRedAcct") );
      return( dstrFldLabel_1441_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NAVAftRedAcct(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,NAVAftRedAcct // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_NAVAftRedAcct_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_NAVAftRedAcct_d_DVF // default value
      ,s_FldProp_NAVAftRedAcct_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxJurisDesc (1442)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxJurisDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1442_4( I_(" ") );
      return( dstrDefValue_1442_4 );
   }
   const DString& s_FldProp_TaxJurisDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1442_4( I_("TaxJurisDesc") );
      return( dstrFldLabel_1442_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxJurisDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxJurisDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxJurisDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxJurisDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmountInUnit (1445)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmountInUnit_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1445_5( I_(" ") );
      return( dstrDefValue_1445_5 );
   }
   double s_FldProp_AmountInUnit_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_AmountInUnit_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1445_5( I_("AmountInUnit") );
      return( dstrFldLabel_1445_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmountInUnit(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AmountInUnit // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_AmountInUnit_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AmountInUnit_d_DVF // default value
      ,s_FldProp_AmountInUnit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransactionId (1446)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransactionId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1446_4( I_(" ") );
      return( dstrDefValue_1446_4 );
   }
   DIINT64 s_FldProp_TransactionId_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_TransactionId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1446_4( I_("TransactionId") );
      return( dstrFldLabel_1446_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransactionId(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,TransactionId // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransactionId_s_DVF // default value
      ,s_FldProp_TransactionId_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_TransactionId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarResetListHeading (1447)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarResetListHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1447_5( I_(" ") );
      return( dstrDefValue_1447_5 );
   }
   const DString& s_FldProp_GuarResetListHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1447_5( I_("GuarResetListHeading") );
      return( dstrFldLabel_1447_5 );
   }
   PBF_SSC subset_super_chooser_2_1447( const ClientLocale& locale )
   {
      return chooser_ss_002_165; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarResetListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,GuarResetListHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GuarResetListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GuarResetListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1447 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuaranteeListHeading (1448)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuaranteeListHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1448_3( I_(" ") );
      return( dstrDefValue_1448_3 );
   }
   const DString& s_FldProp_GuaranteeListHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1448_3( I_("GuaranteeListHeading") );
      return( dstrFldLabel_1448_3 );
   }
   PBF_SSC subset_super_chooser_2_1448( const ClientLocale& locale )
   {
      return chooser_ss_002_164; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuaranteeListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,GuaranteeListHeading // fieldId
      ,0 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GuaranteeListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GuaranteeListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1448 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetAllowed (1449)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetAllowed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1449_4( I_(" ") );
      return( dstrDefValue_1449_4 );
   }
   const DString& s_FldProp_NetAllowed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1449_4( I_("NetAllowed") );
      return( dstrFldLabel_1449_4 );
   }
   PBF_SSC subset_super_chooser_2_1449( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetAllowed(
       BFDataFieldProperties::Type::text // field is a text field
      ,NetAllowed // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NetAllowed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NetAllowed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1449 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_RRIF_Heading (1450)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_RRIF_Heading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1450_4( I_(" ") );
      return( dstrDefValue_1450_4 );
   }
   const DString& s_FldProp_LV_RRIF_Heading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1450_4( I_("LV_RRIF_Heading") );
      return( dstrFldLabel_1450_4 );
   }
   PBF_SSC subset_super_chooser_2_1450( const ClientLocale& locale )
   {
      return chooser_ss_002_166; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_RRIF_Heading(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_RRIF_Heading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_RRIF_Heading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_RRIF_Heading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1450 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_RRIF_AllocHeading (1451)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_RRIF_AllocHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1451_4( I_(" ") );
      return( dstrDefValue_1451_4 );
   }
   const DString& s_FldProp_LV_RRIF_AllocHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1451_4( I_("LV_RRIF_AllocHeading") );
      return( dstrFldLabel_1451_4 );
   }
   PBF_SSC subset_super_chooser_2_1451( const ClientLocale& locale )
   {
      return chooser_ss_002_167; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_RRIF_AllocHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_RRIF_AllocHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_RRIF_AllocHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_RRIF_AllocHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1451 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BatchSrchType (1452)
   //------------------------------------------------------------------
   const DString& s_FldProp_BatchSrchType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1452_4( I_(" ") );
      return( dstrDefValue_1452_4 );
   }
   const DString& s_FldProp_BatchSrchType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1452_4( I_("BatchSrchType") );
      return( dstrFldLabel_1452_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BatchSrchType(
       BFDataFieldProperties::Type::text // field is a text field
      ,BatchSrchType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BatchSrchType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BatchSrchType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BatchVerified (1453)
   //------------------------------------------------------------------
   const DString& s_FldProp_BatchVerified_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1453_4( I_(" ") );
      return( dstrDefValue_1453_4 );
   }
   const DString& s_FldProp_BatchVerified_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1453_4( I_("BatchVerified") );
      return( dstrFldLabel_1453_4 );
   }
   PBF_SSC subset_super_chooser_2_1453( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BatchVerified(
       BFDataFieldProperties::Type::text // field is a text field
      ,BatchVerified // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BatchVerified_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BatchVerified_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1453 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuaranteeRedDetailTop (1456)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuaranteeRedDetailTop_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1456_5( I_(" ") );
      return( dstrDefValue_1456_5 );
   }
   const DString& s_FldProp_GuaranteeRedDetailTop_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1456_5( I_("GuaranteeRedDetailTop") );
      return( dstrFldLabel_1456_5 );
   }
   PBF_SSC subset_super_chooser_2_1456( const ClientLocale& locale )
   {
      return chooser_ss_002_168; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuaranteeRedDetailTop(
       BFDataFieldProperties::Type::text // field is a text field
      ,GuaranteeRedDetailTop // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GuaranteeRedDetailTop_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GuaranteeRedDetailTop_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1456 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuaranteeRedDetailLeft (1457)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuaranteeRedDetailLeft_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1457_4( I_(" ") );
      return( dstrDefValue_1457_4 );
   }
   const DString& s_FldProp_GuaranteeRedDetailLeft_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1457_4( I_("GuaranteeRedDetailLeft") );
      return( dstrFldLabel_1457_4 );
   }
   PBF_SSC subset_super_chooser_2_1457( const ClientLocale& locale )
   {
      return chooser_ss_002_169; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuaranteeRedDetailLeft(
       BFDataFieldProperties::Type::text // field is a text field
      ,GuaranteeRedDetailLeft // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GuaranteeRedDetailLeft_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GuaranteeRedDetailLeft_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1457 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HolidayCode (1459)
   //------------------------------------------------------------------
   const DString& s_FldProp_HolidayCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1459_4( I_(" ") );
      return( dstrDefValue_1459_4 );
   }
   const DString& s_FldProp_HolidayCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1459_4( I_("HolidayCode") );
      return( dstrFldLabel_1459_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HolidayCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,HolidayCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HolidayCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HolidayCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BusDayCode (1464)
   //------------------------------------------------------------------
   const DString& s_FldProp_BusDayCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1464_4( I_(" ") );
      return( dstrDefValue_1464_4 );
   }
   const DString& s_FldProp_BusDayCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1464_4( I_("BusDayCode") );
      return( dstrFldLabel_1464_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BusDayCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,BusDayCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BusDayCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BusDayCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IncludeCode (1465)
   //------------------------------------------------------------------
   const DString& s_FldProp_IncludeCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1465_4( I_(" ") );
      return( dstrDefValue_1465_4 );
   }
   const DString& s_FldProp_IncludeCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1465_4( I_("IncludeCode") );
      return( dstrFldLabel_1465_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IncludeCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,IncludeCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IncludeCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IncludeCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SundayIsBusDay (1466)
   //------------------------------------------------------------------
   const DString& s_FldProp_SundayIsBusDay_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1466_4( I_(" ") );
      return( dstrDefValue_1466_4 );
   }
   const DString& s_FldProp_SundayIsBusDay_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1466_4( I_("SundayIsBusDay") );
      return( dstrFldLabel_1466_4 );
   }
   PBF_SSC subset_super_chooser_2_1466( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SundayIsBusDay(
       BFDataFieldProperties::Type::text // field is a text field
      ,SundayIsBusDay // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SundayIsBusDay_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SundayIsBusDay_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1466 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MondayIsBusDay (1467)
   //------------------------------------------------------------------
   const DString& s_FldProp_MondayIsBusDay_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1467_8( I_(" ") );
      return( dstrDefValue_1467_8 );
   }
   const DString& s_FldProp_MondayIsBusDay_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1467_8( I_("MondayIsBusDay") );
      return( dstrFldLabel_1467_8 );
   }
   PBF_SSC subset_super_chooser_2_1467( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MondayIsBusDay(
       BFDataFieldProperties::Type::text // field is a text field
      ,MondayIsBusDay // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MondayIsBusDay_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MondayIsBusDay_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1467 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TuesdayIsBusDay (1468)
   //------------------------------------------------------------------
   const DString& s_FldProp_TuesdayIsBusDay_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1468_4( I_(" ") );
      return( dstrDefValue_1468_4 );
   }
   const DString& s_FldProp_TuesdayIsBusDay_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1468_4( I_("TuesdayIsBusDay") );
      return( dstrFldLabel_1468_4 );
   }
   PBF_SSC subset_super_chooser_2_1468( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TuesdayIsBusDay(
       BFDataFieldProperties::Type::text // field is a text field
      ,TuesdayIsBusDay // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TuesdayIsBusDay_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TuesdayIsBusDay_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1468 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WednesdayIsBusDay (1469)
   //------------------------------------------------------------------
   const DString& s_FldProp_WednesdayIsBusDay_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1469_5( I_(" ") );
      return( dstrDefValue_1469_5 );
   }
   const DString& s_FldProp_WednesdayIsBusDay_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1469_5( I_("WednesdayIsBusDay") );
      return( dstrFldLabel_1469_5 );
   }
   PBF_SSC subset_super_chooser_2_1469( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WednesdayIsBusDay(
       BFDataFieldProperties::Type::text // field is a text field
      ,WednesdayIsBusDay // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WednesdayIsBusDay_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WednesdayIsBusDay_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1469 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ThursdayIsBusDay (1470)
   //------------------------------------------------------------------
   const DString& s_FldProp_ThursdayIsBusDay_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1470_4( I_(" ") );
      return( dstrDefValue_1470_4 );
   }
   const DString& s_FldProp_ThursdayIsBusDay_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1470_4( I_("ThursdayIsBusDay") );
      return( dstrFldLabel_1470_4 );
   }
   PBF_SSC subset_super_chooser_2_1470( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ThursdayIsBusDay(
       BFDataFieldProperties::Type::text // field is a text field
      ,ThursdayIsBusDay // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ThursdayIsBusDay_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ThursdayIsBusDay_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1470 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FridayIsBusDay (1471)
   //------------------------------------------------------------------
   const DString& s_FldProp_FridayIsBusDay_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1471_4( I_(" ") );
      return( dstrDefValue_1471_4 );
   }
   const DString& s_FldProp_FridayIsBusDay_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1471_4( I_("FridayIsBusDay") );
      return( dstrFldLabel_1471_4 );
   }
   PBF_SSC subset_super_chooser_2_1471( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FridayIsBusDay(
       BFDataFieldProperties::Type::text // field is a text field
      ,FridayIsBusDay // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FridayIsBusDay_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FridayIsBusDay_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1471 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SaturdayIsBusDay (1472)
   //------------------------------------------------------------------
   const DString& s_FldProp_SaturdayIsBusDay_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1472_4( I_(" ") );
      return( dstrDefValue_1472_4 );
   }
   const DString& s_FldProp_SaturdayIsBusDay_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1472_4( I_("SaturdayIsBusDay") );
      return( dstrFldLabel_1472_4 );
   }
   PBF_SSC subset_super_chooser_2_1472( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SaturdayIsBusDay(
       BFDataFieldProperties::Type::text // field is a text field
      ,SaturdayIsBusDay // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SaturdayIsBusDay_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SaturdayIsBusDay_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1472 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllFundGroupTypes (1476)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllFundGroupTypes_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1476_5( I_(" ") );
      return( dstrDefValue_1476_5 );
   }
   const DString& s_FldProp_AllFundGroupTypes_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1476_5( I_("AllFundGroupTypes") );
      return( dstrFldLabel_1476_5 );
   }
   PBF_SSC subset_super_chooser_2_1476( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllFundGroupTypes(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllFundGroupTypes // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllFundGroupTypes_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllFundGroupTypes_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1476 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundGroupType (1477)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundGroupType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1477_5( I_(" ") );
      return( dstrDefValue_1477_5 );
   }
   const DString& s_FldProp_FundGroupType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1477_5( I_("FundGroupType") );
      return( dstrFldLabel_1477_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundGroupType(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundGroupType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundGroupType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundGroupType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundGroupCode (1479)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundGroupCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1479_5( I_(" ") );
      return( dstrDefValue_1479_5 );
   }
   const DString& s_FldProp_FundGroupCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1479_5( I_("FundGroupCode") );
      return( dstrFldLabel_1479_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundGroupCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundGroupCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundGroupCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundGroupCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ClassReq (1480)
   //------------------------------------------------------------------
   const DString& s_FldProp_ClassReq_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1480_4( I_(" ") );
      return( dstrDefValue_1480_4 );
   }
   const DString& s_FldProp_ClassReq_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1480_4( I_("ClassReq") );
      return( dstrFldLabel_1480_4 );
   }
   PBF_SSC subset_super_chooser_2_1480( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ClassReq(
       BFDataFieldProperties::Type::text // field is a text field
      ,ClassReq // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ClassReq_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ClassReq_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1480 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Schedule (1486)
   //------------------------------------------------------------------
   const DString& s_FldProp_Schedule_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1486_4( I_(" ") );
      return( dstrDefValue_1486_4 );
   }
   const DString& s_FldProp_Schedule_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1486_4( I_("Schedule") );
      return( dstrFldLabel_1486_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Schedule(
       BFDataFieldProperties::Type::text // field is a text field
      ,Schedule // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Schedule_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Schedule_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxRatesHeadingSet (1487)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxRatesHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1487_4( I_(" ") );
      return( dstrDefValue_1487_4 );
   }
   const DString& s_FldProp_TaxRatesHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1487_4( I_("TaxRatesHeadingSet") );
      return( dstrFldLabel_1487_4 );
   }
   PBF_SSC subset_super_chooser_2_1487( const ClientLocale& locale )
   {
      return chooser_ss_002_170; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxRatesHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxRatesHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxRatesHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxRatesHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1487 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RESPInfoHeadingSet (1488)
   //------------------------------------------------------------------
   const DString& s_FldProp_RESPInfoHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1488_4( I_(" ") );
      return( dstrDefValue_1488_4 );
   }
   const DString& s_FldProp_RESPInfoHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1488_4( I_("RESPInfoHeadingSet") );
      return( dstrFldLabel_1488_4 );
   }
   PBF_SSC subset_super_chooser_2_1488( const ClientLocale& locale )
   {
      return chooser_ss_002_172; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RESPInfoHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,RESPInfoHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RESPInfoHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RESPInfoHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1488 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RESPTransactionHeadingSet (1489)
   //------------------------------------------------------------------
   const DString& s_FldProp_RESPTransactionHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1489_5( I_(" ") );
      return( dstrDefValue_1489_5 );
   }
   const DString& s_FldProp_RESPTransactionHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1489_5( I_("RESPTransactionHeadingSet") );
      return( dstrFldLabel_1489_5 );
   }
   PBF_SSC subset_super_chooser_2_1489( const ClientLocale& locale )
   {
      return chooser_ss_002_171; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RESPTransactionHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,RESPTransactionHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RESPTransactionHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RESPTransactionHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1489 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FedIncRate (1493)
   //------------------------------------------------------------------
   const DString& s_FldProp_FedIncRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1493_4( I_(" ") );
      return( dstrDefValue_1493_4 );
   }
   double s_FldProp_FedIncRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FedIncRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1493_4( I_("FedIncRate") );
      return( dstrFldLabel_1493_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FedIncRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FedIncRate // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_FedIncRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FedIncRate_d_DVF // default value
      ,s_FldProp_FedIncRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FedRedRate (1494)
   //------------------------------------------------------------------
   const DString& s_FldProp_FedRedRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1494_4( I_(" ") );
      return( dstrDefValue_1494_4 );
   }
   double s_FldProp_FedRedRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FedRedRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1494_4( I_("FedRedRate") );
      return( dstrFldLabel_1494_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FedRedRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FedRedRate // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_FedRedRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FedRedRate_d_DVF // default value
      ,s_FldProp_FedRedRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvIncRate (1495)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvIncRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1495_4( I_(" ") );
      return( dstrDefValue_1495_4 );
   }
   double s_FldProp_ProvIncRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ProvIncRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1495_4( I_("ProvIncRate") );
      return( dstrFldLabel_1495_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvIncRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ProvIncRate // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_ProvIncRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ProvIncRate_d_DVF // default value
      ,s_FldProp_ProvIncRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvRedRate (1496)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvRedRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1496_5( I_(" ") );
      return( dstrDefValue_1496_5 );
   }
   double s_FldProp_ProvRedRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ProvRedRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1496_5( I_("ProvRedRate") );
      return( dstrFldLabel_1496_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvRedRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ProvRedRate // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_ProvRedRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ProvRedRate_d_DVF // default value
      ,s_FldProp_ProvRedRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LowerBound (1497)
   //------------------------------------------------------------------
   const DString& s_FldProp_LowerBound_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1497_4( I_(" ") );
      return( dstrDefValue_1497_4 );
   }
   double s_FldProp_LowerBound_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_LowerBound_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1497_4( I_("LowerBound") );
      return( dstrFldLabel_1497_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LowerBound(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,LowerBound // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_LowerBound_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_LowerBound_d_DVF // default value
      ,s_FldProp_LowerBound_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UpperBound (1498)
   //------------------------------------------------------------------
   const DString& s_FldProp_UpperBound_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1498_5( I_(" ") );
      return( dstrDefValue_1498_5 );
   }
   double s_FldProp_UpperBound_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_UpperBound_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1498_5( I_("UpperBound") );
      return( dstrFldLabel_1498_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UpperBound(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UpperBound // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_UpperBound_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UpperBound_d_DVF // default value
      ,s_FldProp_UpperBound_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PerPenRate (1499)
   //------------------------------------------------------------------
   const DString& s_FldProp_PerPenRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1499_5( I_(" ") );
      return( dstrDefValue_1499_5 );
   }
   double s_FldProp_PerPenRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_PerPenRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1499_5( I_("PerPenRate") );
      return( dstrFldLabel_1499_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PerPenRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PerPenRate // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_PerPenRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PerPenRate_d_DVF // default value
      ,s_FldProp_PerPenRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LumpPenRate (1500)
   //------------------------------------------------------------------
   const DString& s_FldProp_LumpPenRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1500_4( I_(" ") );
      return( dstrDefValue_1500_4 );
   }
   double s_FldProp_LumpPenRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_LumpPenRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1500_4( I_("LumpPenRate") );
      return( dstrFldLabel_1500_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LumpPenRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,LumpPenRate // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_LumpPenRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_LumpPenRate_d_DVF // default value
      ,s_FldProp_LumpPenRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PAmtThreasholdCode (1501)
   //------------------------------------------------------------------
   const DString& s_FldProp_PAmtThreasholdCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1501_5( I_(" ") );
      return( dstrDefValue_1501_5 );
   }
   const DString& s_FldProp_PAmtThreasholdCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1501_5( I_("PAmtThreasholdCode") );
      return( dstrFldLabel_1501_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PAmtThreasholdCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,PAmtThreasholdCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PAmtThreasholdCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PAmtThreasholdCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PAmtThreasholdDesc (1502)
   //------------------------------------------------------------------
   const DString& s_FldProp_PAmtThreasholdDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1502_4( I_(" ") );
      return( dstrDefValue_1502_4 );
   }
   const DString& s_FldProp_PAmtThreasholdDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1502_4( I_("PAmtThreasholdDesc") );
      return( dstrFldLabel_1502_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PAmtThreasholdDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,PAmtThreasholdDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PAmtThreasholdDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PAmtThreasholdDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxRateRid (1503)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxRateRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1503_3( I_(" ") );
      return( dstrDefValue_1503_3 );
   }
   double s_FldProp_TaxRateRid_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_TaxRateRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1503_3( I_("TaxRateRid") );
      return( dstrFldLabel_1503_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxRateRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TaxRateRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_TaxRateRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TaxRateRid_d_DVF // default value
      ,s_FldProp_TaxRateRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ModName (1504)
   //------------------------------------------------------------------
   const DString& s_FldProp_ModName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1504_4( I_(" ") );
      return( dstrDefValue_1504_4 );
   }
   const DString& s_FldProp_ModName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1504_4( I_("ModName") );
      return( dstrFldLabel_1504_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ModName(
       BFDataFieldProperties::Type::text // field is a text field
      ,ModName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ModName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ModName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HistoryPending (1508)
   //------------------------------------------------------------------
   const DString& s_FldProp_HistoryPending_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1508_7( I_(" ") );
      return( dstrDefValue_1508_7 );
   }
   const DString& s_FldProp_HistoryPending_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1508_7( I_("HistoryPending") );
      return( dstrFldLabel_1508_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HistoryPending(
       BFDataFieldProperties::Type::text // field is a text field
      ,HistoryPending // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HistoryPending_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HistoryPending_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HRDCTransId (1509)
   //------------------------------------------------------------------
   const DString& s_FldProp_HRDCTransId_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1509_4( I_(" ") );
         return( dstrDefValue_1509_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1509_8( I_(" ") );
         return( dstrDefValue_1509_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1509_7( I_(" ") );
         return( dstrDefValue_1509_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1509_1( I_("") );
         return( dstrDefValue_1509_1 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1509_5( I_(" ") );
         return( dstrDefValue_1509_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1509_3( I_(" ") );
         return( dstrDefValue_1509_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1509_6( I_(" ") );
         return( dstrDefValue_1509_6 );
      }
      static const DString dstrDefValue_1509_1( I_("") );
      return( dstrDefValue_1509_1 );
   }
   const DString& s_FldProp_HRDCTransId_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1509_4( I_("HRDCTransId") );
         return( dstrFldLabel_1509_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1509_8( I_("HRDCTransId") );
         return( dstrFldLabel_1509_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1509_7( I_("HRDCTransId") );
         return( dstrFldLabel_1509_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1509_1( I_("HRDCTransId") );
         return( dstrFldLabel_1509_1 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1509_5( I_("HRDCTransId") );
         return( dstrFldLabel_1509_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1509_3( I_("HRDCTransId") );
         return( dstrFldLabel_1509_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1509_6( I_("HRDCTransId") );
         return( dstrFldLabel_1509_6 );
      }
      static const DString dstrFldLabel_1509_1( I_("HRDCTransId") );
      return( dstrFldLabel_1509_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HRDCTransId(
       BFDataFieldProperties::Type::text // field is a text field
      ,HRDCTransId // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HRDCTransId_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HRDCTransId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACAmt (1510)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACAmt_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1510_5( I_("0.00") );
         return( dstrDefValue_1510_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1510_7( I_(" ") );
         return( dstrDefValue_1510_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1510_8( I_(" ") );
         return( dstrDefValue_1510_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1510_6( I_(" ") );
         return( dstrDefValue_1510_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1510_3( I_(" ") );
         return( dstrDefValue_1510_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1510_1( I_("0.00") );
         return( dstrDefValue_1510_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1510_4( I_(" ") );
         return( dstrDefValue_1510_4 );
      }
      static const DString dstrDefValue_1510_1( I_("0.00") );
      return( dstrDefValue_1510_1 );
   }
   double s_FldProp_ACAmt_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.00 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.00 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0 );
      }
      return( 0.00 );
   }
   const DString& s_FldProp_ACAmt_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1510_5( I_("ACAmt") );
         return( dstrFldLabel_1510_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1510_7( I_("ACAmt") );
         return( dstrFldLabel_1510_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1510_8( I_("ACAmt") );
         return( dstrFldLabel_1510_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1510_6( I_("ACAmt") );
         return( dstrFldLabel_1510_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1510_3( I_("ACAmt") );
         return( dstrFldLabel_1510_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1510_1( I_("ACAmt") );
         return( dstrFldLabel_1510_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1510_4( I_("ACAmt") );
         return( dstrFldLabel_1510_4 );
      }
      static const DString dstrFldLabel_1510_1( I_("ACAmt") );
      return( dstrFldLabel_1510_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ACAmt // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ACAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ACAmt_d_DVF // default value
      ,s_FldProp_ACAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GrantAmount (1511)
   //------------------------------------------------------------------
   const DString& s_FldProp_GrantAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1511_4( I_(" ") );
      return( dstrDefValue_1511_4 );
   }
   double s_FldProp_GrantAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_GrantAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1511_4( I_("GrantAmount") );
      return( dstrFldLabel_1511_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GrantAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GrantAmount // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GrantAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GrantAmount_d_DVF // default value
      ,s_FldProp_GrantAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GrantTransCode (1512)
   //------------------------------------------------------------------
   const DString& s_FldProp_GrantTransCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1512_4( I_(" ") );
      return( dstrDefValue_1512_4 );
   }
   const DString& s_FldProp_GrantTransCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1512_4( I_("GrantTransCode") );
      return( dstrFldLabel_1512_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GrantTransCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,GrantTransCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GrantTransCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GrantTransCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GrantTransLabel (1513)
   //------------------------------------------------------------------
   const DString& s_FldProp_GrantTransLabel_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1513_4( I_(" ") );
      return( dstrDefValue_1513_4 );
   }
   const DString& s_FldProp_GrantTransLabel_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1513_4( I_("GrantTransLabel") );
      return( dstrFldLabel_1513_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GrantTransLabel(
       BFDataFieldProperties::Type::text // field is a text field
      ,GrantTransLabel // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GrantTransLabel_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GrantTransLabel_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GrantTransId (1514)
   //------------------------------------------------------------------
   const DString& s_FldProp_GrantTransId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1514_6( I_(" ") );
      return( dstrDefValue_1514_6 );
   }
   double s_FldProp_GrantTransId_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_GrantTransId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1514_6( I_("GrantTransId") );
      return( dstrFldLabel_1514_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GrantTransId(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GrantTransId // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_GrantTransId_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GrantTransId_d_DVF // default value
      ,s_FldProp_GrantTransId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UCAmt (1515)
   //------------------------------------------------------------------
   const DString& s_FldProp_UCAmt_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1515_4( I_(" ") );
         return( dstrDefValue_1515_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1515_8( I_(" ") );
         return( dstrDefValue_1515_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1515_7( I_(" ") );
         return( dstrDefValue_1515_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1515_5( I_("0.00") );
         return( dstrDefValue_1515_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1515_3( I_(" ") );
         return( dstrDefValue_1515_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1515_1( I_("0.00") );
         return( dstrDefValue_1515_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1515_6( I_(" ") );
         return( dstrDefValue_1515_6 );
      }
      static const DString dstrDefValue_1515_1( I_("0.00") );
      return( dstrDefValue_1515_1 );
   }
   double s_FldProp_UCAmt_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.00 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.00 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      return( 0.00 );
   }
   const DString& s_FldProp_UCAmt_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1515_4( I_("UCAmt") );
         return( dstrFldLabel_1515_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1515_8( I_("UCAmt") );
         return( dstrFldLabel_1515_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1515_7( I_("UCAmt") );
         return( dstrFldLabel_1515_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1515_5( I_("UCAmt") );
         return( dstrFldLabel_1515_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1515_3( I_("UCAmt") );
         return( dstrFldLabel_1515_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1515_1( I_("UCAmt") );
         return( dstrFldLabel_1515_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1515_6( I_("UCAmt") );
         return( dstrFldLabel_1515_6 );
      }
      static const DString dstrFldLabel_1515_1( I_("UCAmt") );
      return( dstrFldLabel_1515_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UCAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UCAmt // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_UCAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UCAmt_d_DVF // default value
      ,s_FldProp_UCAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UCReason (1516)
   //------------------------------------------------------------------
   const DString& s_FldProp_UCReason_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1516_4( I_(" ") );
      return( dstrDefValue_1516_4 );
   }
   const DString& s_FldProp_UCReason_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1516_4( I_("UCReason") );
      return( dstrFldLabel_1516_4 );
   }
   PBF_SSC subset_super_chooser_2_1516( const ClientLocale& locale )
   {
      return chooser_ss_002_788; // defined in ifast_substitutions_chooser_26.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UCReason(
       BFDataFieldProperties::Type::text // field is a text field
      ,UCReason // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_UCReason_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_UCReason_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1516 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OldContractId (1517)
   //------------------------------------------------------------------
   const DString& s_FldProp_OldContractId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1517_4( I_(" ") );
      return( dstrDefValue_1517_4 );
   }
   const DString& s_FldProp_OldContractId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1517_4( I_("OldContractId") );
      return( dstrFldLabel_1517_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OldContractId(
       BFDataFieldProperties::Type::text // field is a text field
      ,OldContractId // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OldContractId_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OldContractId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OldPlanId (1518)
   //------------------------------------------------------------------
   const DString& s_FldProp_OldPlanId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1518_8( I_(" ") );
      return( dstrDefValue_1518_8 );
   }
   const DString& s_FldProp_OldPlanId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1518_8( I_("OldPlanId") );
      return( dstrFldLabel_1518_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OldPlanId(
       BFDataFieldProperties::Type::text // field is a text field
      ,OldPlanId // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OldPlanId_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OldPlanId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RESPLetter (1519)
   //------------------------------------------------------------------
   const DString& s_FldProp_RESPLetter_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1519_4( I_(" ") );
         return( dstrDefValue_1519_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1519_7( I_(" ") );
         return( dstrDefValue_1519_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1519_5( I_("N") );
         return( dstrDefValue_1519_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1519_8( I_(" ") );
         return( dstrDefValue_1519_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1519_3( I_(" ") );
         return( dstrDefValue_1519_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1519_1( I_("N") );
         return( dstrDefValue_1519_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1519_6( I_(" ") );
         return( dstrDefValue_1519_6 );
      }
      static const DString dstrDefValue_1519_1( I_("N") );
      return( dstrDefValue_1519_1 );
   }
   const DString& s_FldProp_RESPLetter_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1519_4( I_("RESPLetter") );
         return( dstrFldLabel_1519_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1519_7( I_("RESPLetter") );
         return( dstrFldLabel_1519_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1519_5( I_("RESPLetter") );
         return( dstrFldLabel_1519_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1519_8( I_("RESPLetter") );
         return( dstrFldLabel_1519_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1519_3( I_("RESPLetter") );
         return( dstrFldLabel_1519_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1519_1( I_("RESPLetter") );
         return( dstrFldLabel_1519_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1519_6( I_("RESPLetter") );
         return( dstrFldLabel_1519_6 );
      }
      static const DString dstrFldLabel_1519_1( I_("RESPLetter") );
      return( dstrFldLabel_1519_1 );
   }
   PBF_SSC subset_super_chooser_2_1519( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RESPLetter(
       BFDataFieldProperties::Type::text // field is a text field
      ,RESPLetter // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RESPLetter_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RESPLetter_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1519 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HRDCReported (1520)
   //------------------------------------------------------------------
   const DString& s_FldProp_HRDCReported_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1520_5( I_(" ") );
      return( dstrDefValue_1520_5 );
   }
   const DString& s_FldProp_HRDCReported_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1520_5( I_("HRDCReported") );
      return( dstrFldLabel_1520_5 );
   }
   PBF_SSC subset_super_chooser_2_1520( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HRDCReported(
       BFDataFieldProperties::Type::text // field is a text field
      ,HRDCReported // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HRDCReported_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HRDCReported_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1520 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RESPTransStat (1521)
   //------------------------------------------------------------------
   const DString& s_FldProp_RESPTransStat_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1521_5( I_("N") );
         return( dstrDefValue_1521_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1521_7( I_(" ") );
         return( dstrDefValue_1521_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1521_8( I_(" ") );
         return( dstrDefValue_1521_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1521_6( I_(" ") );
         return( dstrDefValue_1521_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1521_3( I_(" ") );
         return( dstrDefValue_1521_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1521_1( I_("N") );
         return( dstrDefValue_1521_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1521_4( I_(" ") );
         return( dstrDefValue_1521_4 );
      }
      static const DString dstrDefValue_1521_1( I_("N") );
      return( dstrDefValue_1521_1 );
   }
   const DString& s_FldProp_RESPTransStat_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1521_5( I_("RESPTransStat") );
         return( dstrFldLabel_1521_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1521_7( I_("RESPTransStat") );
         return( dstrFldLabel_1521_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1521_8( I_("RESPTransStat") );
         return( dstrFldLabel_1521_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1521_6( I_("RESPTransStat") );
         return( dstrFldLabel_1521_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1521_3( I_("RESPTransStat") );
         return( dstrFldLabel_1521_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1521_1( I_("RESPTransStat") );
         return( dstrFldLabel_1521_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1521_4( I_("RESPTransStat") );
         return( dstrFldLabel_1521_4 );
      }
      static const DString dstrFldLabel_1521_1( I_("RESPTransStat") );
      return( dstrFldLabel_1521_1 );
   }
   PBF_SSC subset_super_chooser_2_1521( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RESPTransStat(
       BFDataFieldProperties::Type::text // field is a text field
      ,RESPTransStat // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RESPTransStat_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RESPTransStat_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1521 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradeAddressTo (1522)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeAddressTo_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1522_4( I_(" ") );
      return( dstrDefValue_1522_4 );
   }
   const DString& s_FldProp_TradeAddressTo_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1522_4( I_("TradeAddressTo") );
      return( dstrFldLabel_1522_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeAddressTo(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeAddressTo // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeAddressTo_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeAddressTo_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradeAddressFrom (1523)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeAddressFrom_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1523_4( I_(" ") );
      return( dstrDefValue_1523_4 );
   }
   const DString& s_FldProp_TradeAddressFrom_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1523_4( I_("TradeAddressFrom") );
      return( dstrFldLabel_1523_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeAddressFrom(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeAddressFrom // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeAddressFrom_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeAddressFrom_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradeAddressToDisplayKanji (1524)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeAddressToDisplayKanji_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1524_4( I_("Yes") );
         return( dstrDefValue_1524_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1524_8( I_("Y") );
         return( dstrDefValue_1524_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1524_7( I_("Y") );
         return( dstrDefValue_1524_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1524_5( I_("Y") );
         return( dstrDefValue_1524_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1524_3( I_("Y") );
         return( dstrDefValue_1524_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1524_1( I_("Y") );
         return( dstrDefValue_1524_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1524_6( I_("Yes") );
         return( dstrDefValue_1524_6 );
      }
      static const DString dstrDefValue_1524_1( I_("Y") );
      return( dstrDefValue_1524_1 );
   }
   const DString& s_FldProp_TradeAddressToDisplayKanji_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1524_4( I_("TradeAddressToDisplayKanji") );
         return( dstrFldLabel_1524_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1524_8( I_("TradeAddressToDisplayKanji") );
         return( dstrFldLabel_1524_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1524_7( I_("TradeAddressToDisplayKanji") );
         return( dstrFldLabel_1524_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1524_5( I_("TradeAddressToDisplayKanji") );
         return( dstrFldLabel_1524_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1524_3( I_("TradeAddressToDisplayKanji") );
         return( dstrFldLabel_1524_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1524_1( I_("TradeAddressToDisplayKanji") );
         return( dstrFldLabel_1524_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1524_6( I_("TradeAddressToDisplayKanji") );
         return( dstrFldLabel_1524_6 );
      }
      static const DString dstrFldLabel_1524_1( I_("TradeAddressToDisplayKanji") );
      return( dstrFldLabel_1524_1 );
   }
   PBF_SSC subset_super_chooser_2_1524( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeAddressToDisplayKanji(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeAddressToDisplayKanji // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeAddressToDisplayKanji_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeAddressToDisplayKanji_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1524 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradeAddressFromDisplayKanji (1525)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeAddressFromDisplayKanji_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1525_4( I_(" ") );
      return( dstrDefValue_1525_4 );
   }
   const DString& s_FldProp_TradeAddressFromDisplayKanji_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1525_4( I_("TradeAddressFromDisplayKanji") );
      return( dstrFldLabel_1525_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeAddressFromDisplayKanji(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeAddressFromDisplayKanji // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeAddressFromDisplayKanji_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeAddressFromDisplayKanji_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinFromFundAmount (1526)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinFromFundAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1526_4( I_(" ") );
      return( dstrDefValue_1526_4 );
   }
   const DString& s_FldProp_MinFromFundAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1526_4( I_("MinFromFundAmount") );
      return( dstrFldLabel_1526_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinFromFundAmount(
       BFDataFieldProperties::Type::text // field is a text field
      ,MinFromFundAmount // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MinFromFundAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MinFromFundAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ValuationDate (1527)
   //------------------------------------------------------------------
   const DString& s_FldProp_ValuationDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1527_4( I_(" ") );
      return( dstrDefValue_1527_4 );
   }
   const DString& s_FldProp_ValuationDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1527_4( I_("ValuationDate") );
      return( dstrFldLabel_1527_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ValuationDate(
       BFDataFieldProperties::Type::text // field is a text field
      ,ValuationDate // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ValuationDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ValuationDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WireOrdFndCls (1528)
   //------------------------------------------------------------------
   const DString& s_FldProp_WireOrdFndCls_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1528_4( I_(" ") );
      return( dstrDefValue_1528_4 );
   }
   const DString& s_FldProp_WireOrdFndCls_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1528_4( I_("WireOrdFndCls") );
      return( dstrFldLabel_1528_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WireOrdFndCls(
       BFDataFieldProperties::Type::text // field is a text field
      ,WireOrdFndCls // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WireOrdFndCls_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WireOrdFndCls_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetTradeAllow (1529)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetTradeAllow_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1529_5( I_(" ") );
      return( dstrDefValue_1529_5 );
   }
   const DString& s_FldProp_NetTradeAllow_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1529_5( I_("NetTradeAllow") );
      return( dstrFldLabel_1529_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetTradeAllow(
       BFDataFieldProperties::Type::text // field is a text field
      ,NetTradeAllow // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NetTradeAllow_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NetTradeAllow_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleDateFndCls (1530)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleDateFndCls_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1530_4( I_(" ") );
      return( dstrDefValue_1530_4 );
   }
   const DString& s_FldProp_SettleDateFndCls_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1530_4( I_("SettleDateFndCls") );
      return( dstrFldLabel_1530_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleDateFndCls(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettleDateFndCls // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettleDateFndCls_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettleDateFndCls_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RIFPayType (1531)
   //------------------------------------------------------------------
   const DString& s_FldProp_RIFPayType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1531_4( I_(" ") );
      return( dstrDefValue_1531_4 );
   }
   const DString& s_FldProp_RIFPayType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1531_4( I_("RIFPayType") );
      return( dstrFldLabel_1531_4 );
   }
   PBF_SSC subset_super_chooser_2_1531( const ClientLocale& locale )
   {
      return chooser_ss_002_038; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RIFPayType(
       BFDataFieldProperties::Type::text // field is a text field
      ,RIFPayType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RIFPayType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RIFPayType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1531 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SetupFee (1532)
   //------------------------------------------------------------------
   const DString& s_FldProp_SetupFee_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1532_4( I_("0") );
      return( dstrDefValue_1532_4 );
   }
   double s_FldProp_SetupFee_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_SetupFee_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1532_4( I_("SetupFee") );
      return( dstrFldLabel_1532_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SetupFee(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,SetupFee // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SetupFee_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_SetupFee_d_DVF // default value
      ,s_FldProp_SetupFee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradeAttributes (1533)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeAttributes_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1533_5( I_(" ") );
      return( dstrDefValue_1533_5 );
   }
   const DString& s_FldProp_TradeAttributes_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1533_5( I_("TradeAttributes") );
      return( dstrFldLabel_1533_5 );
   }
   PBF_SSC subset_super_chooser_2_1533( const ClientLocale& locale )
   {
      return chooser_ss_002_173; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeAttributes(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeAttributes // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeAttributes_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeAttributes_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1533 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradeAttributeFields (1534)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeAttributeFields_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1534_4( I_(" ") );
      return( dstrDefValue_1534_4 );
   }
   const DString& s_FldProp_TradeAttributeFields_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1534_4( I_("TradeAttributeFields") );
      return( dstrFldLabel_1534_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeAttributeFields(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeAttributeFields // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeAttributeFields_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeAttributeFields_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradingAttribFieldsHeadingSet (1535)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradingAttribFieldsHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1535_5( I_(" ") );
      return( dstrDefValue_1535_5 );
   }
   const DString& s_FldProp_TradingAttribFieldsHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1535_5( I_("TradingAttribFieldsHeadingSet") );
      return( dstrFldLabel_1535_5 );
   }
   PBF_SSC subset_super_chooser_2_1535( const ClientLocale& locale )
   {
      return chooser_ss_002_173; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradingAttribFieldsHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradingAttribFieldsHeadingSet // fieldId
      ,50 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradingAttribFieldsHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradingAttribFieldsHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1535 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinAmtWith (1536)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinAmtWith_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1536_5( I_("0") );
      return( dstrDefValue_1536_5 );
   }
   double s_FldProp_MinAmtWith_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MinAmtWith_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1536_5( I_("MinAmtWith") );
      return( dstrFldLabel_1536_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinAmtWith(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinAmtWith // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinAmtWith_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinAmtWith_d_DVF // default value
      ,s_FldProp_MinAmtWith_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinAmtOut (1537)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinAmtOut_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1537_4( I_("0") );
      return( dstrDefValue_1537_4 );
   }
   double s_FldProp_MinAmtOut_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MinAmtOut_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1537_4( I_("MinAmtOut") );
      return( dstrFldLabel_1537_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinAmtOut(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinAmtOut // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinAmtOut_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinAmtOut_d_DVF // default value
      ,s_FldProp_MinAmtOut_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OptAmtWith (1538)
   //------------------------------------------------------------------
   const DString& s_FldProp_OptAmtWith_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1538_5( I_("0") );
      return( dstrDefValue_1538_5 );
   }
   double s_FldProp_OptAmtWith_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_OptAmtWith_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1538_5( I_("OptAmtWith") );
      return( dstrFldLabel_1538_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OptAmtWith(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,OptAmtWith // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_OptAmtWith_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_OptAmtWith_d_DVF // default value
      ,s_FldProp_OptAmtWith_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OptAmtOut (1539)
   //------------------------------------------------------------------
   const DString& s_FldProp_OptAmtOut_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1539_4( I_("0") );
      return( dstrDefValue_1539_4 );
   }
   double s_FldProp_OptAmtOut_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_OptAmtOut_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1539_4( I_("OptAmtOut") );
      return( dstrFldLabel_1539_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OptAmtOut(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,OptAmtOut // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_OptAmtOut_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_OptAmtOut_d_DVF // default value
      ,s_FldProp_OptAmtOut_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TotAmtWith (1540)
   //------------------------------------------------------------------
   const DString& s_FldProp_TotAmtWith_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1540_4( I_("0") );
      return( dstrDefValue_1540_4 );
   }
   double s_FldProp_TotAmtWith_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_TotAmtWith_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1540_4( I_("TotAmtWith") );
      return( dstrFldLabel_1540_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TotAmtWith(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TotAmtWith // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_TotAmtWith_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TotAmtWith_d_DVF // default value
      ,s_FldProp_TotAmtWith_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TotAmtOut (1541)
   //------------------------------------------------------------------
   const DString& s_FldProp_TotAmtOut_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1541_4( I_("0") );
      return( dstrDefValue_1541_4 );
   }
   double s_FldProp_TotAmtOut_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_TotAmtOut_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1541_4( I_("TotAmtOut") );
      return( dstrFldLabel_1541_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TotAmtOut(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TotAmtOut // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_TotAmtOut_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TotAmtOut_d_DVF // default value
      ,s_FldProp_TotAmtOut_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxAmtOut (1542)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxAmtOut_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1542_4( I_("0") );
      return( dstrDefValue_1542_4 );
   }
   double s_FldProp_TaxAmtOut_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_TaxAmtOut_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1542_4( I_("TaxAmtOut") );
      return( dstrFldLabel_1542_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxAmtOut(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TaxAmtOut // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_TaxAmtOut_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TaxAmtOut_d_DVF // default value
      ,s_FldProp_TaxAmtOut_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OthAmtWith (1543)
   //------------------------------------------------------------------
   const DString& s_FldProp_OthAmtWith_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1543_4( I_("0") );
      return( dstrDefValue_1543_4 );
   }
   double s_FldProp_OthAmtWith_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_OthAmtWith_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1543_4( I_("OthAmtWith") );
      return( dstrFldLabel_1543_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OthAmtWith(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,OthAmtWith // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_OthAmtWith_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_OthAmtWith_d_DVF // default value
      ,s_FldProp_OthAmtWith_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinAmt (1544)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1544_8( I_("0") );
      return( dstrDefValue_1544_8 );
   }
   double s_FldProp_MinAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MinAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1544_8( I_("MinAmt") );
      return( dstrFldLabel_1544_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinAmt_d_DVF // default value
      ,s_FldProp_MinAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinAmtShort (1545)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinAmtShort_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1545_4( I_("0") );
      return( dstrDefValue_1545_4 );
   }
   double s_FldProp_MinAmtShort_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MinAmtShort_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1545_4( I_("MinAmtShort") );
      return( dstrFldLabel_1545_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinAmtShort(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinAmtShort // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinAmtShort_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinAmtShort_d_DVF // default value
      ,s_FldProp_MinAmtShort_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxAmt (1546)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1546_4( I_("0") );
      return( dstrDefValue_1546_4 );
   }
   double s_FldProp_MaxAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MaxAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1546_4( I_("MaxAmt") );
      return( dstrFldLabel_1546_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MaxAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MaxAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MaxAmt_d_DVF // default value
      ,s_FldProp_MaxAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxAmtRemain (1547)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxAmtRemain_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1547_4( I_("0") );
      return( dstrDefValue_1547_4 );
   }
   double s_FldProp_MaxAmtRemain_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MaxAmtRemain_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1547_4( I_("MaxAmtRemain") );
      return( dstrFldLabel_1547_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxAmtRemain(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MaxAmtRemain // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MaxAmtRemain_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MaxAmtRemain_d_DVF // default value
      ,s_FldProp_MaxAmtRemain_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_sMandMinAmtYr (1548)
   //------------------------------------------------------------------
   const DString& s_FldProp_sMandMinAmtYr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1548_5( I_("0") );
      return( dstrDefValue_1548_5 );
   }
   double s_FldProp_sMandMinAmtYr_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_sMandMinAmtYr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1548_5( I_("sMandMinAmtYr") );
      return( dstrFldLabel_1548_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_sMandMinAmtYr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,sMandMinAmtYr // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_sMandMinAmtYr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_sMandMinAmtYr_d_DVF // default value
      ,s_FldProp_sMandMinAmtYr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_sMinAmtWith (1549)
   //------------------------------------------------------------------
   const DString& s_FldProp_sMinAmtWith_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1549_4( I_("0") );
      return( dstrDefValue_1549_4 );
   }
   double s_FldProp_sMinAmtWith_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_sMinAmtWith_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1549_4( I_("sMinAmtWith") );
      return( dstrFldLabel_1549_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_sMinAmtWith(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,sMinAmtWith // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_sMinAmtWith_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_sMinAmtWith_d_DVF // default value
      ,s_FldProp_sMinAmtWith_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_sMinAmtOut (1550)
   //------------------------------------------------------------------
   const DString& s_FldProp_sMinAmtOut_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1550_5( I_("0") );
      return( dstrDefValue_1550_5 );
   }
   double s_FldProp_sMinAmtOut_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_sMinAmtOut_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1550_5( I_("sMinAmtOut") );
      return( dstrFldLabel_1550_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_sMinAmtOut(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,sMinAmtOut // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_sMinAmtOut_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_sMinAmtOut_d_DVF // default value
      ,s_FldProp_sMinAmtOut_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_sMinSched (1551)
   //------------------------------------------------------------------
   const DString& s_FldProp_sMinSched_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1551_3( I_("0") );
      return( dstrDefValue_1551_3 );
   }
   double s_FldProp_sMinSched_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_sMinSched_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1551_3( I_("sMinSched") );
      return( dstrFldLabel_1551_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_sMinSched(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,sMinSched // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_sMinSched_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_sMinSched_d_DVF // default value
      ,s_FldProp_sMinSched_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_sMinAmtShort (1552)
   //------------------------------------------------------------------
   const DString& s_FldProp_sMinAmtShort_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1552_4( I_("0") );
      return( dstrDefValue_1552_4 );
   }
   double s_FldProp_sMinAmtShort_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_sMinAmtShort_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1552_4( I_("sMinAmtShort") );
      return( dstrFldLabel_1552_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_sMinAmtShort(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,sMinAmtShort // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_sMinAmtShort_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_sMinAmtShort_d_DVF // default value
      ,s_FldProp_sMinAmtShort_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_sMandMaxAmtYr (1553)
   //------------------------------------------------------------------
   const DString& s_FldProp_sMandMaxAmtYr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1553_4( I_("0") );
      return( dstrDefValue_1553_4 );
   }
   double s_FldProp_sMandMaxAmtYr_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_sMandMaxAmtYr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1553_4( I_("sMandMaxAmtYr") );
      return( dstrFldLabel_1553_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_sMandMaxAmtYr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,sMandMaxAmtYr // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_sMandMaxAmtYr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_sMandMaxAmtYr_d_DVF // default value
      ,s_FldProp_sMandMaxAmtYr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_sMaxAmtWith (1554)
   //------------------------------------------------------------------
   const DString& s_FldProp_sMaxAmtWith_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1554_4( I_("0") );
      return( dstrDefValue_1554_4 );
   }
   double s_FldProp_sMaxAmtWith_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_sMaxAmtWith_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1554_4( I_("sMaxAmtWith") );
      return( dstrFldLabel_1554_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_sMaxAmtWith(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,sMaxAmtWith // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_sMaxAmtWith_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_sMaxAmtWith_d_DVF // default value
      ,s_FldProp_sMaxAmtWith_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_sMaxAmtOut (1555)
   //------------------------------------------------------------------
   const DString& s_FldProp_sMaxAmtOut_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1555_5( I_("0") );
      return( dstrDefValue_1555_5 );
   }
   double s_FldProp_sMaxAmtOut_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_sMaxAmtOut_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1555_5( I_("sMaxAmtOut") );
      return( dstrFldLabel_1555_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_sMaxAmtOut(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,sMaxAmtOut // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_sMaxAmtOut_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_sMaxAmtOut_d_DVF // default value
      ,s_FldProp_sMaxAmtOut_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_sMaxSched (1556)
   //------------------------------------------------------------------
   const DString& s_FldProp_sMaxSched_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1556_4( I_("0") );
      return( dstrDefValue_1556_4 );
   }
   double s_FldProp_sMaxSched_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_sMaxSched_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1556_4( I_("sMaxSched") );
      return( dstrFldLabel_1556_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_sMaxSched(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,sMaxSched // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_sMaxSched_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_sMaxSched_d_DVF // default value
      ,s_FldProp_sMaxSched_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_sMaxAmtShort (1557)
   //------------------------------------------------------------------
   const DString& s_FldProp_sMaxAmtShort_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1557_5( I_("0") );
      return( dstrDefValue_1557_5 );
   }
   double s_FldProp_sMaxAmtShort_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_sMaxAmtShort_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1557_5( I_("sMaxAmtShort") );
      return( dstrFldLabel_1557_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_sMaxAmtShort(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,sMaxAmtShort // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_sMaxAmtShort_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_sMaxAmtShort_d_DVF // default value
      ,s_FldProp_sMaxAmtShort_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mCurrYrDep (1558)
   //------------------------------------------------------------------
   const DString& s_FldProp_mCurrYrDep_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1558_5( I_("0") );
      return( dstrDefValue_1558_5 );
   }
   double s_FldProp_mCurrYrDep_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mCurrYrDep_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1558_5( I_("mCurrYrDep") );
      return( dstrFldLabel_1558_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mCurrYrDep(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mCurrYrDep // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mCurrYrDep_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mCurrYrDep_d_DVF // default value
      ,s_FldProp_mCurrYrDep_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mCurrMktValue (1559)
   //------------------------------------------------------------------
   const DString& s_FldProp_mCurrMktValue_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1559_4( I_("0") );
      return( dstrDefValue_1559_4 );
   }
   double s_FldProp_mCurrMktValue_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mCurrMktValue_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1559_4( I_("mCurrMktValue") );
      return( dstrFldLabel_1559_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mCurrMktValue(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mCurrMktValue // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mCurrMktValue_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mCurrMktValue_d_DVF // default value
      ,s_FldProp_mCurrMktValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mPYEMktValue (1560)
   //------------------------------------------------------------------
   const DString& s_FldProp_mPYEMktValue_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1560_5( I_("0") );
      return( dstrDefValue_1560_5 );
   }
   double s_FldProp_mPYEMktValue_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mPYEMktValue_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1560_5( I_("mPYEMktValue") );
      return( dstrFldLabel_1560_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mPYEMktValue(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mPYEMktValue // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mPYEMktValue_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mPYEMktValue_d_DVF // default value
      ,s_FldProp_mPYEMktValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mMinAmt (1561)
   //------------------------------------------------------------------
   const DString& s_FldProp_mMinAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1561_4( I_("0") );
      return( dstrDefValue_1561_4 );
   }
   double s_FldProp_mMinAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mMinAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1561_4( I_("mMinAmt") );
      return( dstrFldLabel_1561_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mMinAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mMinAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mMinAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mMinAmt_d_DVF // default value
      ,s_FldProp_mMinAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mMinAmtRemain (1562)
   //------------------------------------------------------------------
   const DString& s_FldProp_mMinAmtRemain_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1562_3( I_("0") );
      return( dstrDefValue_1562_3 );
   }
   double s_FldProp_mMinAmtRemain_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mMinAmtRemain_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1562_3( I_("mMinAmtRemain") );
      return( dstrFldLabel_1562_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mMinAmtRemain(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mMinAmtRemain // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mMinAmtRemain_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mMinAmtRemain_d_DVF // default value
      ,s_FldProp_mMinAmtRemain_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mMaxAmt (1563)
   //------------------------------------------------------------------
   const DString& s_FldProp_mMaxAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1563_4( I_("0") );
      return( dstrDefValue_1563_4 );
   }
   double s_FldProp_mMaxAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mMaxAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1563_4( I_("mMaxAmt") );
      return( dstrFldLabel_1563_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mMaxAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mMaxAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mMaxAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mMaxAmt_d_DVF // default value
      ,s_FldProp_mMaxAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mMaxAmtRemain (1564)
   //------------------------------------------------------------------
   const DString& s_FldProp_mMaxAmtRemain_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1564_3( I_("0") );
      return( dstrDefValue_1564_3 );
   }
   double s_FldProp_mMaxAmtRemain_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mMaxAmtRemain_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1564_3( I_("mMaxAmtRemain") );
      return( dstrFldLabel_1564_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mMaxAmtRemain(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mMaxAmtRemain // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mMaxAmtRemain_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mMaxAmtRemain_d_DVF // default value
      ,s_FldProp_mMaxAmtRemain_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mFreeAmtRemain (1565)
   //------------------------------------------------------------------
   const DString& s_FldProp_mFreeAmtRemain_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1565_1( I_("0") );
      return( dstrDefValue_1565_1 );
   }
   double s_FldProp_mFreeAmtRemain_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mFreeAmtRemain_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1565_1( I_("mFreeAmtRemain") );
      return( dstrFldLabel_1565_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mFreeAmtRemain(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mFreeAmtRemain // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mFreeAmtRemain_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mFreeAmtRemain_d_DVF // default value
      ,s_FldProp_mFreeAmtRemain_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mFreeAmtUsed (1566)
   //------------------------------------------------------------------
   const DString& s_FldProp_mFreeAmtUsed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1566_5( I_("0") );
      return( dstrDefValue_1566_5 );
   }
   double s_FldProp_mFreeAmtUsed_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mFreeAmtUsed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1566_5( I_("mFreeAmtUsed") );
      return( dstrFldLabel_1566_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mFreeAmtUsed(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mFreeAmtUsed // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mFreeAmtUsed_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mFreeAmtUsed_d_DVF // default value
      ,s_FldProp_mFreeAmtUsed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mSchedPayGrossAmt (1567)
   //------------------------------------------------------------------
   const DString& s_FldProp_mSchedPayGrossAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1567_7( I_("0") );
      return( dstrDefValue_1567_7 );
   }
   double s_FldProp_mSchedPayGrossAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mSchedPayGrossAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1567_7( I_("mSchedPayGrossAmt") );
      return( dstrFldLabel_1567_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mSchedPayGrossAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mSchedPayGrossAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mSchedPayGrossAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mSchedPayGrossAmt_d_DVF // default value
      ,s_FldProp_mSchedPayGrossAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mSchedWithGrossAmt (1568)
   //------------------------------------------------------------------
   const DString& s_FldProp_mSchedWithGrossAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1568_4( I_("0") );
      return( dstrDefValue_1568_4 );
   }
   double s_FldProp_mSchedWithGrossAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mSchedWithGrossAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1568_4( I_("mSchedWithGrossAmt") );
      return( dstrFldLabel_1568_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mSchedWithGrossAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mSchedWithGrossAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mSchedWithGrossAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mSchedWithGrossAmt_d_DVF // default value
      ,s_FldProp_mSchedWithGrossAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mTransfGrossAmt (1569)
   //------------------------------------------------------------------
   const DString& s_FldProp_mTransfGrossAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1569_5( I_("0") );
      return( dstrDefValue_1569_5 );
   }
   double s_FldProp_mTransfGrossAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mTransfGrossAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1569_5( I_("mTransfGrossAmt") );
      return( dstrFldLabel_1569_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mTransfGrossAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mTransfGrossAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mTransfGrossAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mTransfGrossAmt_d_DVF // default value
      ,s_FldProp_mTransfGrossAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mTotGrossAmt (1570)
   //------------------------------------------------------------------
   const DString& s_FldProp_mTotGrossAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1570_4( I_("0") );
      return( dstrDefValue_1570_4 );
   }
   double s_FldProp_mTotGrossAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mTotGrossAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1570_4( I_("mTotGrossAmt") );
      return( dstrFldLabel_1570_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mTotGrossAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mTotGrossAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mTotGrossAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mTotGrossAmt_d_DVF // default value
      ,s_FldProp_mTotGrossAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mSchedPayChrg (1571)
   //------------------------------------------------------------------
   const DString& s_FldProp_mSchedPayChrg_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1571_4( I_("0") );
      return( dstrDefValue_1571_4 );
   }
   double s_FldProp_mSchedPayChrg_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mSchedPayChrg_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1571_4( I_("mSchedPayChrg") );
      return( dstrFldLabel_1571_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mSchedPayChrg(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mSchedPayChrg // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mSchedPayChrg_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mSchedPayChrg_d_DVF // default value
      ,s_FldProp_mSchedPayChrg_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mUnSchedWithChrg (1572)
   //------------------------------------------------------------------
   const DString& s_FldProp_mUnSchedWithChrg_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1572_4( I_("0") );
      return( dstrDefValue_1572_4 );
   }
   double s_FldProp_mUnSchedWithChrg_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mUnSchedWithChrg_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1572_4( I_("mUnSchedWithChrg") );
      return( dstrFldLabel_1572_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mUnSchedWithChrg(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mUnSchedWithChrg // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mUnSchedWithChrg_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mUnSchedWithChrg_d_DVF // default value
      ,s_FldProp_mUnSchedWithChrg_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mTransfChrg (1573)
   //------------------------------------------------------------------
   const DString& s_FldProp_mTransfChrg_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1573_5( I_("0") );
      return( dstrDefValue_1573_5 );
   }
   double s_FldProp_mTransfChrg_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mTransfChrg_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1573_5( I_("mTransfChrg") );
      return( dstrFldLabel_1573_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mTransfChrg(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mTransfChrg // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mTransfChrg_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mTransfChrg_d_DVF // default value
      ,s_FldProp_mTransfChrg_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mTotChrg (1574)
   //------------------------------------------------------------------
   const DString& s_FldProp_mTotChrg_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1574_4( I_("0") );
      return( dstrDefValue_1574_4 );
   }
   double s_FldProp_mTotChrg_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mTotChrg_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1574_4( I_("mTotChrg") );
      return( dstrFldLabel_1574_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mTotChrg(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mTotChrg // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mTotChrg_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mTotChrg_d_DVF // default value
      ,s_FldProp_mTotChrg_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mSchedPymtTaxAmt (1575)
   //------------------------------------------------------------------
   const DString& s_FldProp_mSchedPymtTaxAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1575_4( I_("0") );
      return( dstrDefValue_1575_4 );
   }
   double s_FldProp_mSchedPymtTaxAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mSchedPymtTaxAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1575_4( I_("mSchedPymtTaxAmt") );
      return( dstrFldLabel_1575_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mSchedPymtTaxAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mSchedPymtTaxAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mSchedPymtTaxAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mSchedPymtTaxAmt_d_DVF // default value
      ,s_FldProp_mSchedPymtTaxAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mUnSchedWithTaxAmt (1576)
   //------------------------------------------------------------------
   const DString& s_FldProp_mUnSchedWithTaxAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1576_4( I_("0") );
      return( dstrDefValue_1576_4 );
   }
   double s_FldProp_mUnSchedWithTaxAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mUnSchedWithTaxAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1576_4( I_("mUnSchedWithTaxAmt") );
      return( dstrFldLabel_1576_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mUnSchedWithTaxAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mUnSchedWithTaxAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mUnSchedWithTaxAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mUnSchedWithTaxAmt_d_DVF // default value
      ,s_FldProp_mUnSchedWithTaxAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mTransfTaxAmt (1577)
   //------------------------------------------------------------------
   const DString& s_FldProp_mTransfTaxAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1577_4( I_("0") );
      return( dstrDefValue_1577_4 );
   }
   double s_FldProp_mTransfTaxAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mTransfTaxAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1577_4( I_("mTransfTaxAmt") );
      return( dstrFldLabel_1577_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mTransfTaxAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mTransfTaxAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mTransfTaxAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mTransfTaxAmt_d_DVF // default value
      ,s_FldProp_mTransfTaxAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mTotTax (1578)
   //------------------------------------------------------------------
   const DString& s_FldProp_mTotTax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1578_4( I_("0") );
      return( dstrDefValue_1578_4 );
   }
   double s_FldProp_mTotTax_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mTotTax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1578_4( I_("mTotTax") );
      return( dstrFldLabel_1578_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mTotTax(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mTotTax // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mTotTax_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mTotTax_d_DVF // default value
      ,s_FldProp_mTotTax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mSchedPayNetAmt (1579)
   //------------------------------------------------------------------
   const DString& s_FldProp_mSchedPayNetAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1579_4( I_("0") );
      return( dstrDefValue_1579_4 );
   }
   double s_FldProp_mSchedPayNetAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mSchedPayNetAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1579_4( I_("mSchedPayNetAmt") );
      return( dstrFldLabel_1579_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mSchedPayNetAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mSchedPayNetAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mSchedPayNetAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mSchedPayNetAmt_d_DVF // default value
      ,s_FldProp_mSchedPayNetAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mUnSchedWithNetAmt (1580)
   //------------------------------------------------------------------
   const DString& s_FldProp_mUnSchedWithNetAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1580_4( I_("0") );
      return( dstrDefValue_1580_4 );
   }
   double s_FldProp_mUnSchedWithNetAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mUnSchedWithNetAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1580_4( I_("mUnSchedWithNetAmt") );
      return( dstrFldLabel_1580_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mUnSchedWithNetAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mUnSchedWithNetAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mUnSchedWithNetAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mUnSchedWithNetAmt_d_DVF // default value
      ,s_FldProp_mUnSchedWithNetAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mTransfNetAmt (1581)
   //------------------------------------------------------------------
   const DString& s_FldProp_mTransfNetAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1581_3( I_("0") );
      return( dstrDefValue_1581_3 );
   }
   double s_FldProp_mTransfNetAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mTransfNetAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1581_3( I_("mTransfNetAmt") );
      return( dstrFldLabel_1581_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mTransfNetAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mTransfNetAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mTransfNetAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mTransfNetAmt_d_DVF // default value
      ,s_FldProp_mTransfNetAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mTotNetAmt (1582)
   //------------------------------------------------------------------
   const DString& s_FldProp_mTotNetAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1582_4( I_("0") );
      return( dstrDefValue_1582_4 );
   }
   double s_FldProp_mTotNetAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mTotNetAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1582_4( I_("mTotNetAmt") );
      return( dstrFldLabel_1582_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mTotNetAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mTotNetAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mTotNetAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mTotNetAmt_d_DVF // default value
      ,s_FldProp_mTotNetAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinMaxListTop (1583)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinMaxListTop_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1583_4( I_("0") );
         return( dstrDefValue_1583_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1583_5( I_("") );
         return( dstrDefValue_1583_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1583_8( I_("") );
         return( dstrDefValue_1583_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1583_7( I_("") );
         return( dstrDefValue_1583_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1583_1( I_("") );
         return( dstrDefValue_1583_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1583_3( I_("") );
         return( dstrDefValue_1583_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1583_6( I_("0") );
         return( dstrDefValue_1583_6 );
      }
      static const DString dstrDefValue_1583_1( I_("") );
      return( dstrDefValue_1583_1 );
   }
   const DString& s_FldProp_MinMaxListTop_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1583_4( I_("MinMaxListTop") );
         return( dstrFldLabel_1583_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1583_5( I_("MinMaxListTop") );
         return( dstrFldLabel_1583_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1583_8( I_("MinMaxListTop") );
         return( dstrFldLabel_1583_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1583_7( I_("MinMaxListTop") );
         return( dstrFldLabel_1583_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1583_1( I_("MinMaxListTop") );
         return( dstrFldLabel_1583_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1583_3( I_("MinMaxListTop") );
         return( dstrFldLabel_1583_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1583_6( I_("MinMaxListTop") );
         return( dstrFldLabel_1583_6 );
      }
      static const DString dstrFldLabel_1583_1( I_("MinMaxListTop") );
      return( dstrFldLabel_1583_1 );
   }
   PBF_SSC subset_super_chooser_2_1583( const ClientLocale& locale )
   {
      return chooser_ss_002_174; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinMaxListTop(
       BFDataFieldProperties::Type::text // field is a text field
      ,MinMaxListTop // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MinMaxListTop_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MinMaxListTop_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1583 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinMaxListLeft (1584)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinMaxListLeft_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1584_4( I_("0") );
         return( dstrDefValue_1584_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1584_7( I_("") );
         return( dstrDefValue_1584_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1584_5( I_("") );
         return( dstrDefValue_1584_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1584_8( I_("") );
         return( dstrDefValue_1584_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1584_3( I_("") );
         return( dstrDefValue_1584_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1584_1( I_("") );
         return( dstrDefValue_1584_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1584_6( I_("0") );
         return( dstrDefValue_1584_6 );
      }
      static const DString dstrDefValue_1584_1( I_("") );
      return( dstrDefValue_1584_1 );
   }
   const DString& s_FldProp_MinMaxListLeft_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1584_4( I_("MinMaxListLeft") );
         return( dstrFldLabel_1584_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1584_7( I_("MinMaxListLeft") );
         return( dstrFldLabel_1584_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1584_5( I_("MinMaxListLeft") );
         return( dstrFldLabel_1584_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1584_8( I_("MinMaxListLeft") );
         return( dstrFldLabel_1584_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1584_3( I_("MinMaxListLeft") );
         return( dstrFldLabel_1584_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1584_1( I_("MinMaxListLeft") );
         return( dstrFldLabel_1584_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1584_6( I_("MinMaxListLeft") );
         return( dstrFldLabel_1584_6 );
      }
      static const DString dstrFldLabel_1584_1( I_("MinMaxListLeft") );
      return( dstrFldLabel_1584_1 );
   }
   PBF_SSC subset_super_chooser_2_1584( const ClientLocale& locale )
   {
      return chooser_ss_002_175; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinMaxListLeft(
       BFDataFieldProperties::Type::text // field is a text field
      ,MinMaxListLeft // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MinMaxListLeft_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MinMaxListLeft_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1584 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxAmtWith (1587)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxAmtWith_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1587_5( I_("0") );
      return( dstrDefValue_1587_5 );
   }
   double s_FldProp_TaxAmtWith_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_TaxAmtWith_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1587_5( I_("TaxAmtWith") );
      return( dstrFldLabel_1587_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxAmtWith(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TaxAmtWith // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_TaxAmtWith_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TaxAmtWith_d_DVF // default value
      ,s_FldProp_TaxAmtWith_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_mUnSchedWithGrossAmt (1588)
   //------------------------------------------------------------------
   const DString& s_FldProp_mUnSchedWithGrossAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1588_5( I_("0") );
      return( dstrDefValue_1588_5 );
   }
   double s_FldProp_mUnSchedWithGrossAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_mUnSchedWithGrossAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1588_5( I_("mUnSchedWithGrossAmt") );
      return( dstrFldLabel_1588_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_mUnSchedWithGrossAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,mUnSchedWithGrossAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_mUnSchedWithGrossAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_mUnSchedWithGrossAmt_d_DVF // default value
      ,s_FldProp_mUnSchedWithGrossAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AutoTransferAllocHeadingSet (1589)
   //------------------------------------------------------------------
   const DString& s_FldProp_AutoTransferAllocHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1589_4( I_(" ") );
      return( dstrDefValue_1589_4 );
   }
   const DString& s_FldProp_AutoTransferAllocHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1589_4( I_("AutoTransferAllocHeadingSet") );
      return( dstrFldLabel_1589_4 );
   }
   PBF_SSC subset_super_chooser_2_1589( const ClientLocale& locale )
   {
      return chooser_ss_002_176; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AutoTransferAllocHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,AutoTransferAllocHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AutoTransferAllocHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AutoTransferAllocHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1589 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmtTypeAllocation (1590)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmtTypeAllocation_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1590_5( I_(" ") );
      return( dstrDefValue_1590_5 );
   }
   const DString& s_FldProp_AmtTypeAllocation_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1590_5( I_("AmtTypeAllocation") );
      return( dstrFldLabel_1590_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmtTypeAllocation(
       BFDataFieldProperties::Type::text // field is a text field
      ,AmtTypeAllocation // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AmtTypeAllocation_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AmtTypeAllocation_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WireOrdNumOrdType (1591)
   //------------------------------------------------------------------
   const DString& s_FldProp_WireOrdNumOrdType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1591_4( I_(" ") );
      return( dstrDefValue_1591_4 );
   }
   const DString& s_FldProp_WireOrdNumOrdType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1591_4( I_("WireOrdNumOrdType") );
      return( dstrFldLabel_1591_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WireOrdNumOrdType(
       BFDataFieldProperties::Type::text // field is a text field
      ,WireOrdNumOrdType // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WireOrdNumOrdType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WireOrdNumOrdType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinToFundAmount (1592)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinToFundAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1592_3( I_(" ") );
      return( dstrDefValue_1592_3 );
   }
   const DString& s_FldProp_MinToFundAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1592_3( I_("MinToFundAmount") );
      return( dstrFldLabel_1592_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinToFundAmount(
       BFDataFieldProperties::Type::text // field is a text field
      ,MinToFundAmount // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MinToFundAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MinToFundAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundClassTradeDate (1593)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundClassTradeDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1593_1( I_(" ") );
      return( dstrDefValue_1593_1 );
   }
   const DString& s_FldProp_FundClassTradeDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1593_1( I_("FundClassTradeDate") );
      return( dstrFldLabel_1593_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundClassTradeDate(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundClassTradeDate // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundClassTradeDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundClassTradeDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundClassGroup (1595)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundClassGroup_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1594_4( I_(" ") );
         return( dstrDefValue_1594_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1594_8( I_(" ") );
         return( dstrDefValue_1594_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1594_7( I_(" ") );
         return( dstrDefValue_1594_7 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1594_3( I_(" ") );
         return( dstrDefValue_1594_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1594_6( I_(" ") );
         return( dstrDefValue_1594_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1594_5( I_(" ") );
         return( dstrDefValue_1594_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1595_4( I_(" ") );
         return( dstrDefValue_1595_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1595_8( I_(" ") );
         return( dstrDefValue_1595_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1595_7( I_(" ") );
         return( dstrDefValue_1595_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1595_5( I_(" ") );
         return( dstrDefValue_1595_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1595_3( I_(" ") );
         return( dstrDefValue_1595_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1595_1( I_(" ") );
         return( dstrDefValue_1595_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1595_6( I_(" ") );
         return( dstrDefValue_1595_6 );
      }
      static const DString dstrDefValue_1595_1( I_(" ") );
      return( dstrDefValue_1595_1 );
   }
   const DString& s_FldProp_FundClassGroup_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1594_4( I_("FundClassTradeType") );
         return( dstrFldLabel_1594_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1594_8( I_("FundClassTradeType") );
         return( dstrFldLabel_1594_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1594_7( I_("FundClassTradeType") );
         return( dstrFldLabel_1594_7 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1594_3( I_("FundClassTradeType") );
         return( dstrFldLabel_1594_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1594_6( I_("FundClassTradeType") );
         return( dstrFldLabel_1594_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1594_5( I_("FundClassTradeType") );
         return( dstrFldLabel_1594_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1595_4( I_("FundClassGroup") );
         return( dstrFldLabel_1595_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1595_8( I_("FundClassGroup") );
         return( dstrFldLabel_1595_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1595_7( I_("FundClassGroup") );
         return( dstrFldLabel_1595_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1595_5( I_("FundClassGroup") );
         return( dstrFldLabel_1595_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1595_3( I_("FundClassGroup") );
         return( dstrFldLabel_1595_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1595_1( I_("FundClassGroup") );
         return( dstrFldLabel_1595_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1595_6( I_("FundClassGroup") );
         return( dstrFldLabel_1595_6 );
      }
      static const DString dstrFldLabel_1595_1( I_("FundClassGroup") );
      return( dstrFldLabel_1595_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundClassGroup(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundClassGroup // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundClassGroup_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundClassGroup_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ToFundClassTradeDate (1596)
   //------------------------------------------------------------------
   const DString& s_FldProp_ToFundClassTradeDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1596_3( I_(" ") );
      return( dstrDefValue_1596_3 );
   }
   const DString& s_FldProp_ToFundClassTradeDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1596_3( I_("ToFundClassTradeDate") );
      return( dstrFldLabel_1596_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ToFundClassTradeDate(
       BFDataFieldProperties::Type::text // field is a text field
      ,ToFundClassTradeDate // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ToFundClassTradeDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ToFundClassTradeDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ToFundClassGroup (1598)
   //------------------------------------------------------------------
   const DString& s_FldProp_ToFundClassGroup_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1597_3( I_(" ") );
         return( dstrDefValue_1597_3 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1597_4( I_(" ") );
         return( dstrDefValue_1597_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1597_5( I_(" ") );
         return( dstrDefValue_1597_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1597_6( I_(" ") );
         return( dstrDefValue_1597_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1597_7( I_(" ") );
         return( dstrDefValue_1597_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1597_8( I_(" ") );
         return( dstrDefValue_1597_8 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1598_4( I_(" ") );
         return( dstrDefValue_1598_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1598_8( I_(" ") );
         return( dstrDefValue_1598_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1598_7( I_(" ") );
         return( dstrDefValue_1598_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1598_5( I_(" ") );
         return( dstrDefValue_1598_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1598_1( I_(" ") );
         return( dstrDefValue_1598_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1598_3( I_(" ") );
         return( dstrDefValue_1598_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1598_6( I_(" ") );
         return( dstrDefValue_1598_6 );
      }
      static const DString dstrDefValue_1598_1( I_(" ") );
      return( dstrDefValue_1598_1 );
   }
   const DString& s_FldProp_ToFundClassGroup_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1597_3( I_("ToFundClassTradeType") );
         return( dstrFldLabel_1597_3 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1597_4( I_("ToFundClassTradeType") );
         return( dstrFldLabel_1597_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1597_5( I_("ToFundClassTradeType") );
         return( dstrFldLabel_1597_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1597_6( I_("ToFundClassTradeType") );
         return( dstrFldLabel_1597_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1597_7( I_("ToFundClassTradeType") );
         return( dstrFldLabel_1597_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1597_8( I_("ToFundClassTradeType") );
         return( dstrFldLabel_1597_8 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1598_4( I_("ToFundClassGroup") );
         return( dstrFldLabel_1598_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1598_8( I_("ToFundClassGroup") );
         return( dstrFldLabel_1598_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1598_7( I_("ToFundClassGroup") );
         return( dstrFldLabel_1598_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1598_5( I_("ToFundClassGroup") );
         return( dstrFldLabel_1598_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1598_1( I_("ToFundClassGroup") );
         return( dstrFldLabel_1598_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1598_3( I_("ToFundClassGroup") );
         return( dstrFldLabel_1598_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1598_6( I_("ToFundClassGroup") );
         return( dstrFldLabel_1598_6 );
      }
      static const DString dstrFldLabel_1598_1( I_("ToFundClassGroup") );
      return( dstrFldLabel_1598_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ToFundClassGroup(
       BFDataFieldProperties::Type::text // field is a text field
      ,ToFundClassGroup // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ToFundClassGroup_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ToFundClassGroup_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmtTypeFundTradeType (1599)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmtTypeFundTradeType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1599_4( I_(" ") );
      return( dstrDefValue_1599_4 );
   }
   const DString& s_FldProp_AmtTypeFundTradeType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1599_4( I_("AmtTypeFundTradeType") );
      return( dstrFldLabel_1599_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmtTypeFundTradeType(
       BFDataFieldProperties::Type::text // field is a text field
      ,AmtTypeFundTradeType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AmtTypeFundTradeType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AmtTypeFundTradeType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );
}
