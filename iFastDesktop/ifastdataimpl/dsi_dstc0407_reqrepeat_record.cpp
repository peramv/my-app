// BFDataImpl implementation file for DataSet DSTC0407.REQRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// ViewsGenerator: Generated on : Friday, June 16, 2017 14:08:18


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0407_reqrepeat_record.h"


// This function creates an instance of dsi_DSTC0407_REQRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0407_REQRepeat_Record() { return new dsi_DSTC0407_REQRepeat_Record; }

dsi_DSTC0407_REQRepeat_Record::dsi_DSTC0407_REQRepeat_Record()
: BFDataImpl( 40006236 )
, RunMode_( ifds::RunMode, &ifds::s_FldProp_RunMode )
, RecordLevel_( ifds::RecordLevel, &ifds::s_FldProp_RecordLevel )
, RESPBenefIDFrom_( ifds::RESPBenefIDFrom, &ifds::s_FldProp_RESPBenefIDFrom )
, RESPTrfAllocEntityTypeFrom_( ifds::RESPTrfAllocEntityTypeFrom, &ifds::s_FldProp_RESPTrfAllocEntityTypeFrom )
, RESPTrfEntityTypeSeqFrom_( ifds::RESPTrfEntityTypeSeqFrom, &ifds::s_FldProp_RESPTrfEntityTypeSeqFrom )
, RESPBenefIDTo_( ifds::RESPBenefIDTo, &ifds::s_FldProp_RESPBenefIDTo )
, RESPTrfAllocEntityTypeTo_( ifds::RESPTrfAllocEntityTypeTo, &ifds::s_FldProp_RESPTrfAllocEntityTypeTo )
, RESPTrfEntityTypeSeqTo_( ifds::RESPTrfEntityTypeSeqTo, &ifds::s_FldProp_RESPTrfEntityTypeSeqTo )
, YTDContr_( ifds::YTDContr, &ifds::s_FldProp_YTDContr )
, TDContr_( ifds::TDContr, &ifds::s_FldProp_TDContr )
, GrantAmount_( ifds::GrantAmount, &ifds::s_FldProp_GrantAmount )
, AdditionalGrant_( ifds::AdditionalGrant, &ifds::s_FldProp_AdditionalGrant )
, CLBAmount_( ifds::CLBAmount, &ifds::s_FldProp_CLBAmount )
, PGrantAmount_( ifds::PGrantAmount, &ifds::s_FldProp_PGrantAmount )
, TDRedContrib_( ifds::TDRedContrib, &ifds::s_FldProp_TDRedContrib )
, TDRedEarning_( ifds::TDRedEarning, &ifds::s_FldProp_TDRedEarning )
, RedCESG_( ifds::RedCESG, &ifds::s_FldProp_RedCESG )
, RedCLB_( ifds::RedCLB, &ifds::s_FldProp_RedCLB )
, RedPGrant_( ifds::RedPGrant, &ifds::s_FldProp_RedPGrant )
, UCAmt_( ifds::UCAmt, &ifds::s_FldProp_UCAmt )
, ACAmt_( ifds::ACAmt, &ifds::s_FldProp_ACAmt )
, Pre98ContribAmt_( ifds::Pre98ContribAmt, &ifds::s_FldProp_Pre98ContribAmt )
, Pre98RedContribAmt_( ifds::Pre98RedContribAmt, &ifds::s_FldProp_Pre98RedContribAmt )
, TransferPercent_( ifds::TransferPercent, &ifds::s_FldProp_TransferPercent )
, QESIUCAmount_( ifds::QESIUCAmount, &ifds::s_FldProp_QESIUCAmount )
, QESIACAmount_( ifds::QESIACAmount, &ifds::s_FldProp_QESIACAmount )
, QESIYTDContribution_( ifds::QESIYTDContribution, &ifds::s_FldProp_QESIYTDContribution )
, QESIBasicGrant_( ifds::QESIBasicGrant, &ifds::s_FldProp_QESIBasicGrant )
, QESIIncreaseAmt_( ifds::QESIIncreaseAmt, &ifds::s_FldProp_QESIIncreaseAmt )
, Pre98QESIContrib_( ifds::Pre98QESIContrib, &ifds::s_FldProp_Pre98QESIContrib )
, Pre2007QESIContrib_( ifds::Pre2007QESIContrib, &ifds::s_FldProp_Pre2007QESIContrib )
, RESPExtTrDetlUUID_( ifds::RESPExtTrDetlUUID, &ifds::s_FldProp_RESPExtTrDetlUUID )
, RESPExtTrDetlVer_( ifds::RESPExtTrDetlVer, &ifds::s_FldProp_RESPExtTrDetlVer )
, RESPContrDetlUUID_( ifds::RESPContrDetlUUID, &ifds::s_FldProp_RESPContrDetlUUID )
, RESPContrDetlVer_( ifds::RESPContrDetlVer, &ifds::s_FldProp_RESPContrDetlVer )
, EligibleTransfer_( ifds::EligibleTransfer, &ifds::s_FldProp_EligibleTransfer )
, TotTransfINDC_( ifds::TotTransfINDC, &ifds::s_FldProp_TotTransfINDC )
, HistNonTrustYear_( ifds::HistNonTrustYear, &ifds::s_FldProp_HistNonTrustYear )
, CESGPaid_( ifds::CESGPaid, &ifds::s_FldProp_CESGPaid )
, QESIPaid_( ifds::QESIPaid, &ifds::s_FldProp_QESIPaid )
, SAGESGrant_( ifds::SAGESGrant, &ifds::s_FldProp_SAGESGrant )
, SAGESUCAmount_( ifds::SAGESUCAmount, &ifds::s_FldProp_SAGESUCAmount )
, SAGESACAmount_( ifds::SAGESACAmount, &ifds::s_FldProp_SAGESACAmount )
, BCTESGGrant_( ifds::BCTESGGrant, &ifds::s_FldProp_BCTESGGrant )
, UCRedAmt_( ifds::UCRedAmt, &ifds::s_FldProp_UCRedAmt )
, ACRedAmt_( ifds::ACRedAmt, &ifds::s_FldProp_ACRedAmt )
, SAGESRedUCAmt_( ifds::SAGESRedUCAmt, &ifds::s_FldProp_SAGESRedUCAmt )
, SAGESRedACAmt_( ifds::SAGESRedACAmt, &ifds::s_FldProp_SAGESRedACAmt )
, QESIRedUCAmt_( ifds::QESIRedUCAmt, &ifds::s_FldProp_QESIRedUCAmt )
, QESIRedACAmt_( ifds::QESIRedACAmt, &ifds::s_FldProp_QESIRedACAmt )
, QESIRedYTDContrib_( ifds::QESIRedYTDContrib, &ifds::s_FldProp_QESIRedYTDContrib )
, Pre2007QESIRedContrib_( ifds::Pre2007QESIRedContrib, &ifds::s_FldProp_Pre2007QESIRedContrib )
, RedAdditionalGrant_( ifds::RedAdditionalGrant, &ifds::s_FldProp_RedAdditionalGrant )
, RedSAGES_( ifds::RedSAGES, &ifds::s_FldProp_RedSAGES )
, QESIRedBasic_( ifds::QESIRedBasic, &ifds::s_FldProp_QESIRedBasic )
, QESIRedIncrease_( ifds::QESIRedIncrease, &ifds::s_FldProp_QESIRedIncrease )
, RedBCTESG_( ifds::RedBCTESG, &ifds::s_FldProp_RedBCTESG )
{
    cFields_ = 57;
    memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0407_REQRepeat_Record::~dsi_DSTC0407_REQRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0407_REQRepeat_Record::clone()
{
    dsi_DSTC0407_REQRepeat_Record* p = new dsi_DSTC0407_REQRepeat_Record;
    p->RunMode_ = RunMode_;
    p->RecordLevel_ = RecordLevel_;
    p->RESPBenefIDFrom_ = RESPBenefIDFrom_;
    p->RESPTrfAllocEntityTypeFrom_ = RESPTrfAllocEntityTypeFrom_;
    p->RESPTrfEntityTypeSeqFrom_ = RESPTrfEntityTypeSeqFrom_;
    p->RESPBenefIDTo_ = RESPBenefIDTo_;
    p->RESPTrfAllocEntityTypeTo_ = RESPTrfAllocEntityTypeTo_;
    p->RESPTrfEntityTypeSeqTo_ = RESPTrfEntityTypeSeqTo_;
    p->YTDContr_ = YTDContr_;
    p->TDContr_ = TDContr_;
    p->GrantAmount_ = GrantAmount_;
    p->AdditionalGrant_ = AdditionalGrant_;
    p->CLBAmount_ = CLBAmount_;
    p->PGrantAmount_ = PGrantAmount_;
    p->TDRedContrib_ = TDRedContrib_;
    p->TDRedEarning_ = TDRedEarning_;
    p->RedCESG_ = RedCESG_;
    p->RedCLB_ = RedCLB_;
    p->RedPGrant_ = RedPGrant_;
    p->UCAmt_ = UCAmt_;
    p->ACAmt_ = ACAmt_;
    p->Pre98ContribAmt_ = Pre98ContribAmt_;
    p->Pre98RedContribAmt_ = Pre98RedContribAmt_;
    p->TransferPercent_ = TransferPercent_;
    p->QESIUCAmount_ = QESIUCAmount_;
    p->QESIACAmount_ = QESIACAmount_;
    p->QESIYTDContribution_ = QESIYTDContribution_;
    p->QESIBasicGrant_ = QESIBasicGrant_;
    p->QESIIncreaseAmt_ = QESIIncreaseAmt_;
    p->Pre98QESIContrib_ = Pre98QESIContrib_;
    p->Pre2007QESIContrib_ = Pre2007QESIContrib_;
    p->RESPExtTrDetlUUID_ = RESPExtTrDetlUUID_;
    p->RESPExtTrDetlVer_ = RESPExtTrDetlVer_;
    p->RESPContrDetlUUID_ = RESPContrDetlUUID_;
    p->RESPContrDetlVer_ = RESPContrDetlVer_;
    p->EligibleTransfer_ = EligibleTransfer_;
    p->TotTransfINDC_ = TotTransfINDC_;
    p->HistNonTrustYear_ = HistNonTrustYear_;
    p->CESGPaid_ = CESGPaid_;
    p->QESIPaid_ = QESIPaid_;
    p->SAGESGrant_ = SAGESGrant_;
    p->SAGESUCAmount_ = SAGESUCAmount_;
    p->SAGESACAmount_ = SAGESACAmount_;
    p->BCTESGGrant_ = BCTESGGrant_;
    p->UCRedAmt_ = UCRedAmt_;
    p->ACRedAmt_ = ACRedAmt_;
    p->SAGESRedUCAmt_ = SAGESRedUCAmt_;
    p->SAGESRedACAmt_ = SAGESRedACAmt_;
    p->QESIRedUCAmt_ = QESIRedUCAmt_;
    p->QESIRedACAmt_ = QESIRedACAmt_;
    p->QESIRedYTDContrib_ = QESIRedYTDContrib_;
    p->Pre2007QESIRedContrib_ = Pre2007QESIRedContrib_;
    p->RedAdditionalGrant_ = RedAdditionalGrant_;
    p->RedSAGES_ = RedSAGES_;
    p->QESIRedBasic_ = QESIRedBasic_;
    p->QESIRedIncrease_ = QESIRedIncrease_;
    p->RedBCTESG_ = RedBCTESG_;
    return(p);
}

BFDataField* dsi_DSTC0407_REQRepeat_Record::getElement( const BFFieldId& id )
{
    switch( id.getId() ) {
        case 40000990: return ( &RunMode_ ); break; // RunMode
        case 40006190: return ( &RecordLevel_ ); break; // RecordLevel
        case 40006233: return ( &RESPBenefIDFrom_ ); break; // RESPBenefIDFrom
        case 40006191: return ( &RESPTrfAllocEntityTypeFrom_ ); break; // RESPTrfAllocEntityTypeFrom
        case 40006192: return ( &RESPTrfEntityTypeSeqFrom_ ); break; // RESPTrfEntityTypeSeqFrom
        case 40006195: return ( &RESPBenefIDTo_ ); break; // RESPBenefIDTo
        case 40006193: return ( &RESPTrfAllocEntityTypeTo_ ); break; // RESPTrfAllocEntityTypeTo
        case 40006194: return ( &RESPTrfEntityTypeSeqTo_ ); break; // RESPTrfEntityTypeSeqTo
        case 40000787: return ( &YTDContr_ ); break; // YTDContr
        case 40006198: return ( &TDContr_ ); break; // TDContr
        case 40001511: return ( &GrantAmount_ ); break; // GrantAmount
        case 40006202: return ( &AdditionalGrant_ ); break; // AdditionalGrant
        case 40006203: return ( &CLBAmount_ ); break; // CLBAmount
        case 40006204: return ( &PGrantAmount_ ); break; // PGrantAmount
        case 40006205: return ( &TDRedContrib_ ); break; // TDRedContrib
        case 40000771: return ( &TDRedEarning_ ); break; // TDRedEarning
        case 40006207: return ( &RedCESG_ ); break; // RedCESG
        case 40006208: return ( &RedCLB_ ); break; // RedCLB
        case 40006209: return ( &RedPGrant_ ); break; // RedPGrant
        case 40001515: return ( &UCAmt_ ); break; // UCAmt
        case 40001510: return ( &ACAmt_ ); break; // ACAmt
        case 40006210: return ( &Pre98ContribAmt_ ); break; // Pre98ContribAmt
        case 40006212: return ( &Pre98RedContribAmt_ ); break; // Pre98RedContribAmt
        case 40006213: return ( &TransferPercent_ ); break; // TransferPercent
        case 40006216: return ( &QESIUCAmount_ ); break; // QESIUCAmount
        case 40006217: return ( &QESIACAmount_ ); break; // QESIACAmount
        case 40006218: return ( &QESIYTDContribution_ ); break; // QESIYTDContribution
        case 40006219: return ( &QESIBasicGrant_ ); break; // QESIBasicGrant
        case 40006220: return ( &QESIIncreaseAmt_ ); break; // QESIIncreaseAmt
        case 40006221: return ( &Pre98QESIContrib_ ); break; // Pre98QESIContrib
        case 40006222: return ( &Pre2007QESIContrib_ ); break; // Pre2007QESIContrib
        case 40006223: return ( &RESPExtTrDetlUUID_ ); break; // RESPExtTrDetlUUID
        case 40006224: return ( &RESPExtTrDetlVer_ ); break; // RESPExtTrDetlVer
        case 40006225: return ( &RESPContrDetlUUID_ ); break; // RESPContrDetlUUID
        case 40006117: return ( &RESPContrDetlVer_ ); break; // RESPContrDetlVer
        case 40006258: return ( &EligibleTransfer_ ); break; // EligibleTransfer
        case 40006369: return ( &TotTransfINDC_ ); break; // TotTransfINDC
        case 40006368: return ( &HistNonTrustYear_ ); break; // HistNonTrustYear
        case 40006417: return ( &CESGPaid_ ); break; // CESGPaid
        case 40007017: return ( &QESIPaid_ ); break; // QESIPaid
        case 40007354: return ( &SAGESGrant_ ); break; // SAGESGrant
        case 40007355: return ( &SAGESUCAmount_ ); break; // SAGESUCAmount
        case 40007356: return ( &SAGESACAmount_ ); break; // SAGESACAmount
        case 40007538: return ( &BCTESGGrant_ ); break; // BCTESGGrant
        case 40007759: return ( &UCRedAmt_ ); break; // UCRedAmt
        case 40007760: return ( &ACRedAmt_ ); break; // ACRedAmt
        case 40007761: return ( &SAGESRedUCAmt_ ); break; // SAGESRedUCAmt
        case 40007762: return ( &SAGESRedACAmt_ ); break; // SAGESRedACAmt
        case 40007763: return ( &QESIRedUCAmt_ ); break; // QESIRedUCAmt
        case 40007764: return ( &QESIRedACAmt_ ); break; // QESIRedACAmt
        case 40007765: return ( &QESIRedYTDContrib_ ); break; // QESIRedYTDContrib
        case 40007766: return ( &Pre2007QESIRedContrib_ ); break; // Pre2007QESIRedContrib
        case 40007767: return ( &RedAdditionalGrant_ ); break; // RedAdditionalGrant
        case 40007768: return ( &RedSAGES_ ); break; // RedSAGES
        case 40007769: return ( &QESIRedBasic_ ); break; // QESIRedBasic
        case 40007770: return ( &QESIRedIncrease_ ); break; // QESIRedIncrease
        case 40007771: return ( &RedBCTESG_ ); break; // RedBCTESG
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0407_REQRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0407_REQRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0407_REQRepeat_Record::getElementByIndex( unsigned int iField )
{
    if ( iField >=0 && iField < 57 )
    {
        BFDataField* pField = aFlds_[iField];
        if( NULL == pField )
        {
            switch(iField)
            {
                case 0: aFlds_[0] = &RunMode_; break;
                case 1: aFlds_[1] = &RecordLevel_; break;
                case 2: aFlds_[2] = &RESPBenefIDFrom_; break;
                case 3: aFlds_[3] = &RESPTrfAllocEntityTypeFrom_; break;
                case 4: aFlds_[4] = &RESPTrfEntityTypeSeqFrom_; break;
                case 5: aFlds_[5] = &RESPBenefIDTo_; break;
                case 6: aFlds_[6] = &RESPTrfAllocEntityTypeTo_; break;
                case 7: aFlds_[7] = &RESPTrfEntityTypeSeqTo_; break;
                case 8: aFlds_[8] = &YTDContr_; break;
                case 9: aFlds_[9] = &TDContr_; break;
                case 10: aFlds_[10] = &GrantAmount_; break;
                case 11: aFlds_[11] = &AdditionalGrant_; break;
                case 12: aFlds_[12] = &CLBAmount_; break;
                case 13: aFlds_[13] = &PGrantAmount_; break;
                case 14: aFlds_[14] = &TDRedContrib_; break;
                case 15: aFlds_[15] = &TDRedEarning_; break;
                case 16: aFlds_[16] = &RedCESG_; break;
                case 17: aFlds_[17] = &RedCLB_; break;
                case 18: aFlds_[18] = &RedPGrant_; break;
                case 19: aFlds_[19] = &UCAmt_; break;
                case 20: aFlds_[20] = &ACAmt_; break;
                case 21: aFlds_[21] = &Pre98ContribAmt_; break;
                case 22: aFlds_[22] = &Pre98RedContribAmt_; break;
                case 23: aFlds_[23] = &TransferPercent_; break;
                case 24: aFlds_[24] = &QESIUCAmount_; break;
                case 25: aFlds_[25] = &QESIACAmount_; break;
                case 26: aFlds_[26] = &QESIYTDContribution_; break;
                case 27: aFlds_[27] = &QESIBasicGrant_; break;
                case 28: aFlds_[28] = &QESIIncreaseAmt_; break;
                case 29: aFlds_[29] = &Pre98QESIContrib_; break;
                case 30: aFlds_[30] = &Pre2007QESIContrib_; break;
                case 31: aFlds_[31] = &RESPExtTrDetlUUID_; break;
                case 32: aFlds_[32] = &RESPExtTrDetlVer_; break;
                case 33: aFlds_[33] = &RESPContrDetlUUID_; break;
                case 34: aFlds_[34] = &RESPContrDetlVer_; break;
                case 35: aFlds_[35] = &EligibleTransfer_; break;
                case 36: aFlds_[36] = &TotTransfINDC_; break;
                case 37: aFlds_[37] = &HistNonTrustYear_; break;
                case 38: aFlds_[38] = &CESGPaid_; break;
                case 39: aFlds_[39] = &QESIPaid_; break;
                case 40: aFlds_[40] = &SAGESGrant_; break;
                case 41: aFlds_[41] = &SAGESUCAmount_; break;
                case 42: aFlds_[42] = &SAGESACAmount_; break;
                case 43: aFlds_[43] = &BCTESGGrant_; break;
                case 44: aFlds_[44] = &UCRedAmt_; break;
                case 45: aFlds_[45] = &ACRedAmt_; break;
                case 46: aFlds_[46] = &SAGESRedUCAmt_; break;
                case 47: aFlds_[47] = &SAGESRedACAmt_; break;
                case 48: aFlds_[48] = &QESIRedUCAmt_; break;
                case 49: aFlds_[49] = &QESIRedACAmt_; break;
                case 50: aFlds_[50] = &QESIRedYTDContrib_; break;
                case 51: aFlds_[51] = &Pre2007QESIRedContrib_; break;
                case 52: aFlds_[52] = &RedAdditionalGrant_; break;
                case 53: aFlds_[53] = &RedSAGES_; break;
                case 54: aFlds_[54] = &QESIRedBasic_; break;
                case 55: aFlds_[55] = &QESIRedIncrease_; break;
                case 56: aFlds_[56] = &RedBCTESG_; break;
            }
            pField = aFlds_[iField];
            if( NULL == pField ) return( NULL );
        }
        return( pField );
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0407_REQRepeat_Record::getElementByIndex( unsigned int iField ) const
{
    return( ( const_cast< dsi_DSTC0407_REQRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0407_REQRepeat_Record::getLargestDefinedField( void ) const
{
    return( 60 );
}

unsigned long dsi_DSTC0407_REQRepeat_Record::getDefinedByteLength( void ) const
{
    return( 1304 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0407_REQRepeat_Record::exists( const BFFieldId& id ) const
{
    return dsi_DSTC0407_REQRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0407_REQRepeat_Record::fieldExists( const BFFieldId& id )
{
    switch( id.getId() )
    {
        case 40000990: return ( true );
        case 40006190: return ( true );
        case 40006233: return ( true );
        case 40006191: return ( true );
        case 40006192: return ( true );
        case 40006195: return ( true );
        case 40006193: return ( true );
        case 40006194: return ( true );
        case 40000787: return ( true );
        case 40006198: return ( true );
        case 40001511: return ( true );
        case 40006202: return ( true );
        case 40006203: return ( true );
        case 40006204: return ( true );
        case 40006205: return ( true );
        case 40000771: return ( true );
        case 40006207: return ( true );
        case 40006208: return ( true );
        case 40006209: return ( true );
        case 40001515: return ( true );
        case 40001510: return ( true );
        case 40006210: return ( true );
        case 40006212: return ( true );
        case 40006213: return ( true );
        case 40006216: return ( true );
        case 40006217: return ( true );
        case 40006218: return ( true );
        case 40006219: return ( true );
        case 40006220: return ( true );
        case 40006221: return ( true );
        case 40006222: return ( true );
        case 40006223: return ( true );
        case 40006224: return ( true );
        case 40006225: return ( true );
        case 40006117: return ( true );
        case 40006258: return ( true );
        case 40006369: return ( true );
        case 40006368: return ( true );
        case 40006417: return ( true );
        case 40007017: return ( true );
        case 40007354: return ( true );
        case 40007355: return ( true );
        case 40007356: return ( true );
        case 40007538: return ( true );
        case 40007759: return ( true );
        case 40007760: return ( true );
        case 40007761: return ( true );
        case 40007762: return ( true );
        case 40007763: return ( true );
        case 40007764: return ( true );
        case 40007765: return ( true );
        case 40007766: return ( true );
        case 40007767: return ( true );
        case 40007768: return ( true );
        case 40007769: return ( true );
        case 40007770: return ( true );
        case 40007771: return ( true );
    }
    return false;
}

