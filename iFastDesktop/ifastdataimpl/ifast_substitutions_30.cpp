// BFSubstitutionSet objects
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Tuesday, April 11, 2017 03:49:37

#include "stdafx.h"
#include <commonport.h>
#include <clientlocale.hpp>

namespace ifds
{
   // Substitution set LV_ACBListHeadingSet8.  Language: enUS
   static const I_CHAR* aKeys_002_900_001_000_000[] = {
      I_("TradeDate"),
      I_("TransType"),
      I_("Units"),
      I_("TransAmount"),
      I_("UnitsHeld"),
      I_("AdjustedCost"),
      I_("ACBPerUnit"),
      I_("HistUnitACB"),
      I_("ACBOffset"),
      I_("TaxableAmount"),
      0x00
   };

   static const I_CHAR* aValues_002_900_001_000_000[] = {
      I_("Trade Date"),
      I_("Trans. Type"),
      I_("Units"),
      I_("Amount"),
      I_("Total Units"),
      I_("Adjusted Cost"),
      I_("Unit ACB"),
      I_("Historical Unit ACB"),
      I_("Offset Unit ACB"),
      I_("Taxable Amount"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_900_001_000_000;
   const BFSubstitutionSet SubSet_002_900_001_000_000(
    &aKeys_002_900_001_000_000[0], &aValues_002_900_001_000_000[0] );
   // Substitution set LV_ACBListHeadingSet8.  Language: frCA
   static const I_CHAR* aKeys_002_900_005_000_000[] = {
      I_("TradeDate"),
      I_("TransType"),
      I_("Units"),
      I_("TransAmount"),
      I_("UnitsHeld"),
      I_("AdjustedCost"),
      I_("ACBPerUnit"),
      I_("HistUnitACB"),
      I_("ACBOffset"),
      I_("TaxableAmount"),
      0x00
   };

   static const I_CHAR* aValues_002_900_005_000_000[] = {
      I_("Date de transaction"),
      I_("Type de transaction"),
      I_("Unités"),
      I_("Montant"),
      I_("Total d'unités"),
      I_("Coût rajusté"),
      I_("PBR unitaire"),
      I_("Historique de PBR unitaire"),
      I_("Écart de PBR unitaire"),
      I_("Montant imposable"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_900_005_000_000;
   const BFSubstitutionSet SubSet_002_900_005_000_000(
    &aKeys_002_900_005_000_000[0], &aValues_002_900_005_000_000[0] );
   // Substitution set RightToCancelSet.  Language: enUS
   static const I_CHAR* aKeys_002_903_001_000_000[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_903_001_000_000[] = {
      I_("N/A"),
      I_("Yes"),
      I_("No"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_903_001_000_000;
   const BFSubstitutionSet SubSet_002_903_001_000_000(
    &aKeys_002_903_001_000_000[0], &aValues_002_903_001_000_000[0] );
   // Substitution set RightToCancelSet.  Language: frCA
   static const I_CHAR* aKeys_002_903_005_000_000[] = {
      I_("00"),
      I_("01"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_903_005_000_000[] = {
      I_("S. O."),
      I_("Oui"),
      I_("Non"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_903_005_000_000;
   const BFSubstitutionSet SubSet_002_903_005_000_000(
    &aKeys_002_903_005_000_000[0], &aValues_002_903_005_000_000[0] );
   // Substitution set FATCAFFI_Set.  Language: enUS
   static const I_CHAR* aKeys_002_904_001_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("96"),
      I_("97"),
      I_("98"),
      I_("99"),
      I_("INS"),
      I_("PRO"),
      I_("OTH"),
      I_("CRS101"),
      I_("CRS102"),
      I_("CRS103"),
      I_("CRS104"),
      I_("CRS105"),
      I_("CRS106"),
      I_("CRS107"),
      I_("CRS108"),
      I_("CRS109"),
      I_("CRS110"),
      I_("CRS111"),
      I_("CRS112"),
      I_("CRS113"),
      I_("CRS114"),
      I_("CRS115"),
      I_("CRS116"),
      I_("CRS117"),
      I_("CRS118"),
      I_("CRS119"),
      I_("CRS120"),
      I_("CRS121"),
      I_("CRS122"),
      I_("CRS123"),
      I_("FSRV00"),
      0x00
   };

   static const I_CHAR* aValues_002_904_001_000_000[] = {
      I_("U.S. Withholding Agent - FI"),
      I_("U.S. Withholding Agent - Other"),
      I_("Territory FI - not treated as U.S. Person"),
      I_("Territory FI - treated as U.S. Person"),
      I_("U.S. branch of Participating FFI - treated as U.S. Person"),
      I_("U.S. branch of Participating FFI - not treated as U.S. Person"),
      I_("U.S. branch of Registered Deemed-Compliant FFI - treated as U.S. Person"),
      I_("Participating FFI - Other"),
      I_("Participating FFI - Reporting Model 2 FFI"),
      I_("Registered Deemed-Compliant FFI - Reporting Model 1 FFI"),
      I_("Registered Deemed-Compliant FFI - Sponsored Entity"),
      I_("Registered Deemed-Compliant FFI - Other"),
      I_("Certified Deemed-Compliant FFI - Other"),
      I_("Certified Deemed-Compliant FFI - FFI with Low Value Accounts"),
      I_("Certified Deemed-Compliant FFI - Non-Registering Local Bank"),
      I_("Certified Deemed-Compliant FFI - Sponsored Entity"),
      I_("Certified Deemed-Compliant FFI - Investment Advisor or Investment Manager"),
      I_("Nonparticipating FFI"),
      I_("Owner-Documented FFI"),
      I_("Limited Branch treated as Nonparticipating FFI"),
      I_("Limited FFI treated as Nonparticipating FFI"),
      I_("Passive NFFE identifying Substantial U.S. Owners"),
      I_("Passive NFFE with no Substantial U.S. Owners"),
      I_("Publicly Traded Corporation or Affiliate of Publicly Traded Corporation"),
      I_("Active NFFE"),
      I_("Excepted NFFE - Other"),
      I_("Individual"),
      I_("Section 501(c) Entities"),
      I_("Excepted Territory NFFE"),
      I_("Exempt Beneficial Owner"),
      I_("Entity Wholly Owned By Exempt Beneficial Owners"),
      I_("Unknown Recipient"),
      I_("Recalcitrant Account Holder"),
      I_("NFFE - WP or WT"),
      I_("Nonreporting IGA FFI"),
      I_("Direct reporting NFFE"),
      I_("U.S. reportable account"),
      I_("Non-consenting U.S. account"),
      I_("Sponsored direct reporting NFFE"),
      I_("Excepted Inter-affiliate FFI"),
      I_("Undocumented Preexisting Obligation"),
      I_("Recalcitrant Pool - No U.S. Indicia"),
      I_("Recalcitrant Pool - U.S. Indicia"),
      I_("Recalcitrant Pool - Dormant Account"),
      I_("Recalcitrant Pool - U.S. Persons"),
      I_("Recalcitrant Pool - Passive NFFEs"),
      I_("Nonparticipation FFI Pool"),
      I_("U.S. Payees Pool"),
      I_("Owner-Documented FFI Identifying Substantial US Owners"),
      I_("Restricted distributor"),
      I_("Nonprofit organization"),
      I_("Exempted FFI"),
      I_("Specified US Persons"),
      I_("Pending"),
      I_("Local Financial Institution"),
      I_("Other Partner Jurisdiction Financial Institution"),
      I_("Well Informed - Institutional"),
      I_("Well Informed - Professional"),
      I_("Well Informed - Other"),
      I_("Passive NFE with one or more controlling person(s)"),
      I_("CRS Reportable person (no controlling persons)"),
      I_("Passive NFE that is a CRS reportable person"),
      I_("FI - Investment Entity located in a Non-Participating Jurisdiction"),
      I_("Financial Institution - Participating FFI"),
      I_("FI - Investment Entity - Other Investment Entity"),
      I_("FI - Depository, Custodial, Specified Insurance Company"),
      I_("FI - Non-Reporting - Governmental Entity"),
      I_("FI - Non-Reporting - International organisation"),
      I_("FI - Non-Reporting - Central Bank"),
      I_("FI - Non-Reporting - Broad Participation Retirement Fund"),
      I_("FI - Non-Reporting - Narrow Participation Retirement Fund"),
      I_("FI - Non-Reporting - Pension,Govt, International Org, Central Bank"),
      I_("FI - Non-Reporting - Exempt Collective Investment Vehicle"),
      I_("FI - Non-Reporting - Trustee-Documented Trust"),
      I_("FI - Non-Reporting - Qualified Credit Card Issuer"),
      I_("FI - Non-Reporting - Other"),
      I_("Active NFE - corporation the stock of which is regularly traded"),
      I_("Active NFE - a Government Entity or Central Bank"),
      I_("Active NFE - an International Organisation"),
      I_("Active NFE - other"),
      I_("Financial Institution, including Non-Reporting Financial Institutions"),
      I_("Inv Entity (Prof managed) outside of a CRS Participating jurisdiction"),
      I_("Fundserv Non-Reportable"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_904_001_000_000;
   const BFSubstitutionSet SubSet_002_904_001_000_000(
    &aKeys_002_904_001_000_000[0], &aValues_002_904_001_000_000[0] );
   // Substitution set FATCAFFI_Set.  Language: frCA
   static const I_CHAR* aKeys_002_904_005_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("17"),
      I_("18"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      I_("23"),
      I_("24"),
      I_("25"),
      I_("26"),
      I_("27"),
      I_("28"),
      I_("29"),
      I_("30"),
      I_("31"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      I_("48"),
      I_("49"),
      I_("93"),
      I_("94"),
      I_("95"),
      I_("96"),
      I_("97"),
      I_("98"),
      I_("99"),
      I_("INS"),
      I_("PRO"),
      I_("OTH"),
      I_("CRS101"),
      I_("CRS102"),
      I_("CRS103"),
      I_("CRS104"),
      I_("CRS105"),
      I_("CRS106"),
      I_("CRS107"),
      I_("CRS108"),
      I_("CRS109"),
      I_("CRS110"),
      I_("CRS111"),
      I_("CRS112"),
      I_("CRS113"),
      I_("CRS114"),
      I_("CRS115"),
      I_("CRS116"),
      I_("CRS117"),
      I_("CRS118"),
      I_("CRS119"),
      I_("CRS120"),
      I_("CRS121"),
      I_("CRS122"),
      I_("CRS123"),
      I_("FSRV00"),
      0x00
   };

   static const I_CHAR* aValues_002_904_005_000_000[] = {
      I_("Agent de retenue d'impôt (É.-U.) - IF"),
      I_("Agent de retenue d'impôt (É.-U.) - Autre"),
      I_("IF du territoire - non considérée comme personne américaine"),
      I_("IF du territoire - considérée comme personne américaine"),
      I_("Succursale américaine d'une IFE participante - considérée comme personne américaine"),
      I_("Succursale américaine d'une IFE participante - non considérée comme personne américaine"),
      I_("Succursale américaine d'une IFE réputée conforme enregistrée - considérée comme personne américaine"),
      I_("IFE participante - autre"),
      I_("IFE participante - IFE modèle de déclaration 2"),
      I_("IFE réputée conforme enregistrée - IFE modèle de déclaration 1"),
      I_("IFE réputée conforme enregistrée - Entité promotrice"),
      I_("IFE réputée conforme enregistrée - Autre"),
      I_("IFE réputée conforme certifiée - Autre"),
      I_("IFE réputée conforme certifiée - IFE avec comptes à faible valeur"),
      I_("IFE réputée conforme certifiée - Banque locale non enregistrée"),
      I_("IFE réputée conforme certifiée - Entité promotrice"),
      I_("IFE réputée conforme certifiée - conseiller ou gestionnaire de placements"),
      I_("IFE non participante"),
      I_("IFE propriétaire documentée"),
      I_("Succursale limitée considérée comme IFE non participante"),
      I_("IFE limitée traitée comme IFE non participante"),
      I_("EENF passive identifiant propriétaires substantiels des É.-U."),
      I_("EENF passive sans propriétaires substantiels des É.-U."),
      I_("Société inscrite en bourse ou filiale de société inscrite en bourse"),
      I_("EENF active"),
      I_("EENF exclue - autre"),
      I_("Individuel"),
      I_("Entités du paragraphe 501©"),
      I_("EENF de territoire exclu"),
      I_("Propriétaire bénéficiaire exempté"),
      I_("Entité entièrement détenue par propriétaires bénéficiaires exclus"),
      I_("Destinataire inconnu"),
      I_("Titulaire de compte récalcitrant"),
      I_("NFFE - WP or WTEENF - CR ou FR"),
      I_("IFE CIG non déclarante"),
      I_("EENF déclarante directe"),
      I_("Compte déclarant aux É.-U."),
      I_("Compte américain non consentant"),
      I_("EENF déclarante directe promotrice"),
      I_("IFE inter-affiliée exclue"),
      I_("Obligation préexistante non documentée"),
      I_("Fonds récalcitrant - aucun indice des É.-U."),
      I_("Fonds récalcitrant - indices des É.-U."),
      I_("Fonds récalcitrant - compte dormant"),
      I_("Fonds récalcitrant - personnes américaines"),
      I_("Fonds récalcitrant - EENF passives"),
      I_("Fonds IFE non participante"),
      I_("Fonds de créanciers américains"),
      I_("Owner-Documented FFI Identifying Substantial US Owners"),
      I_("Distributeur soumis à des restrictions"),
      I_("Organisme sans but lucratif"),
      I_("IFE exemptée"),
      I_("Personnes américaines déterminées"),
      I_("En cours"),
      I_("Institution financière locale"),
      I_("Institution financière d'autres territoires partenaires"),
      I_("Bien Informés - Institutionnel"),
      I_("Bien Informés - Professionnel"),
      I_("Bien Informés - Autre"),
      I_("ENF passive ayant une ou plusieurs personnes détenant le contrôle"),
      I_("Personne soumise à déclaration NCD (aucune personne détenant le contrôle)"),
      I_("ENF passive étant une personne soumise à déclaration NCD"),
      I_("IF - Entité d’investissement située dans une juridiction non partenaire"),
      I_("Institution financière - IFE partenaire"),
      I_("IF - Entité d’investissement - autre entité d’investissement"),
      I_("IF - Compagnie d’assurance déterminée, de conservation, de dépôt"),
      I_("IF - Entité publique non déclarante"),
      I_("IF - Organisation internationale non déclarante"),
      I_("IF - Banque centrale non déclarante"),
      I_("IF - Caisse de retraite à large participation - non déclarante"),
      I_("IF - Caisse de retraite à participation étroite - non déclarante"),
      I_("IF - Banque centrale, org. internationale, gouvernement, caisse de retraite - non déclarant"),
      I_("IF - Organisme de placement collectif dispensé - non déclarant"),
      I_("IF - Fiduciaire-fiducie inscrite - non déclarant"),
      I_("IF - Émetteur de carte de crédit homologué - non déclarant"),
      I_("IF - Autre - non déclarant"),
      I_("ENF active - Société dont les titres font l'objet de transactions régulières"),
      I_("ENF active - Entité publique ou banque centrale"),
      I_("ENF active - Organisation internationale"),
      I_("ENF active - Autre"),
      I_("Institution financière, dont institutions financières non déclarantes"),
      I_("Entité d’investissement (gérée professionnellement) située en dehors d’une juridiction partenaire des NCD"),
      I_("Fundserv non déclarant"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_904_005_000_000;
   const BFSubstitutionSet SubSet_002_904_005_000_000(
    &aKeys_002_904_005_000_000[0], &aValues_002_904_005_000_000[0] );
   // Substitution set FdBrokerDefaultlvlSet.  Language: enUS
   static const I_CHAR* aKeys_002_905_001_000_000[] = {
      I_("01"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_905_001_000_000[] = {
      I_("Account Level"),
      I_("Fund Level"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_905_001_000_000;
   const BFSubstitutionSet SubSet_002_905_001_000_000(
    &aKeys_002_905_001_000_000[0], &aValues_002_905_001_000_000[0] );
   // Substitution set FdBrokerDefaultlvlSet.  Language: frCA
   static const I_CHAR* aKeys_002_905_005_000_000[] = {
      I_("01"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_905_005_000_000[] = {
      I_("Niveau du compte"),
      I_("Niveau du fonds"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_905_005_000_000;
   const BFSubstitutionSet SubSet_002_905_005_000_000(
    &aKeys_002_905_005_000_000[0], &aValues_002_905_005_000_000[0] );
   // Substitution set LV_EstateAllocationSet.  Language: enUS
   static const I_CHAR* aKeys_002_906_001_000_000[] = {
      I_("BenefEntityID"),
      I_("BenefName"),
      I_("BenefPrcnt"),
      I_("BenefAmount"),
      I_("BenefUnits"),
      I_("BenefAddrLevel"),
      I_("BenefAddrCode"),
      0x00
   };

   static const I_CHAR* aValues_002_906_001_000_000[] = {
      I_("Entity ID"),
      I_("Beneficiary Name"),
      I_("Percent"),
      I_("Amount"),
      I_("Units"),
      I_("Address Level"),
      I_("Address Code"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_906_001_000_000;
   const BFSubstitutionSet SubSet_002_906_001_000_000(
    &aKeys_002_906_001_000_000[0], &aValues_002_906_001_000_000[0] );
   // Substitution set LV_EstateAllocationSet.  Language: frCA
   static const I_CHAR* aKeys_002_906_005_000_000[] = {
      I_("BenefEntityID"),
      I_("BenefName"),
      I_("BenefPrcnt"),
      I_("BenefAmount"),
      I_("BenefUnits"),
      I_("BenefAddrLevel"),
      I_("BenefAddrCode"),
      0x00
   };

   static const I_CHAR* aValues_002_906_005_000_000[] = {
      I_("Code d'entité"),
      I_("Nom du bénéficiaire"),
      I_("Pourcentage"),
      I_("Montant"),
      I_("Unités"),
      I_("Niveau de l'adresse"),
      I_("Code d'adresse"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_906_005_000_000;
   const BFSubstitutionSet SubSet_002_906_005_000_000(
    &aKeys_002_906_005_000_000[0], &aValues_002_906_005_000_000[0] );
   // Substitution set BenefAddrLevelSet.  Language: enUS
   static const I_CHAR* aKeys_002_907_001_000_000[] = {
      I_("E"),
      I_("S"),
      0x00
   };

   static const I_CHAR* aValues_002_907_001_000_000[] = {
      I_("Entity"),
      I_("Shareholder"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_907_001_000_000;
   const BFSubstitutionSet SubSet_002_907_001_000_000(
    &aKeys_002_907_001_000_000[0], &aValues_002_907_001_000_000[0] );
   // Substitution set BenefAddrLevelSet.  Language: frCA
   static const I_CHAR* aKeys_002_907_005_000_000[] = {
      I_("E"),
      I_("S"),
      0x00
   };

   static const I_CHAR* aValues_002_907_005_000_000[] = {
      I_("Entité"),
      I_("Détenteur"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_907_005_000_000;
   const BFSubstitutionSet SubSet_002_907_005_000_000(
    &aKeys_002_907_005_000_000[0], &aValues_002_907_005_000_000[0] );
   // Substitution set RDRAdviceSet.  Language: enUS
   static const I_CHAR* aKeys_002_908_001_000_000[] = {
      I_("01"),
      I_("02"),
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_908_001_000_000[] = {
      I_("Not provided"),
      I_("Provided"),
      I_("N/A"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_908_001_000_000;
   const BFSubstitutionSet SubSet_002_908_001_000_000(
    &aKeys_002_908_001_000_000[0], &aValues_002_908_001_000_000[0] );
   // Substitution set RDRAdviceSet.  Language: frCA
   static const I_CHAR* aKeys_002_908_005_000_000[] = {
      I_("01"),
      I_("02"),
      I_("00"),
      0x00
   };

   static const I_CHAR* aValues_002_908_005_000_000[] = {
      I_("Non fourni"),
      I_("Fourni"),
      I_("S. O."),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_908_005_000_000;
   const BFSubstitutionSet SubSet_002_908_005_000_000(
    &aKeys_002_908_005_000_000[0], &aValues_002_908_005_000_000[0] );
   // Substitution set MVAReasonCode.  Language: enUS
   static const I_CHAR* aKeys_002_909_001_000_000[] = {
      I_("01"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_909_001_000_000[] = {
      I_("Gain Offset Loss"),
      I_("Pay Net Gain"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_909_001_000_000;
   const BFSubstitutionSet SubSet_002_909_001_000_000(
    &aKeys_002_909_001_000_000[0], &aValues_002_909_001_000_000[0] );
   // Substitution set MVAReasonCode.  Language: frCA
   static const I_CHAR* aKeys_002_909_005_000_000[] = {
      I_("01"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_909_005_000_000[] = {
      I_("Gain Offset Loss"),
      I_("Pay Net Gain"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_909_005_000_000;
   const BFSubstitutionSet SubSet_002_909_005_000_000(
    &aKeys_002_909_005_000_000[0], &aValues_002_909_005_000_000[0] );
   // Substitution set DistributionTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_910_001_000_000[] = {
      I_("01"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_910_001_000_000[] = {
      I_("Dividend Distribution"),
      I_("Interest Distribution"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_910_001_000_000;
   const BFSubstitutionSet SubSet_002_910_001_000_000(
    &aKeys_002_910_001_000_000[0], &aValues_002_910_001_000_000[0] );
   // Substitution set DistributionTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_910_005_000_000[] = {
      I_("01"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_910_005_000_000[] = {
      I_("Distribution du dividende"),
      I_("Distribution de l'intérêt"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_910_005_000_000;
   const BFSubstitutionSet SubSet_002_910_005_000_000(
    &aKeys_002_910_005_000_000[0], &aValues_002_910_005_000_000[0] );
   // Substitution set IDExemptionReasonCodeSet.  Language: enUS
   static const I_CHAR* aKeys_002_914_001_000_000[] = {
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_914_001_000_000[] = {
      I_("Tax exempt"),
      I_("Corporate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_914_001_000_000;
   const BFSubstitutionSet SubSet_002_914_001_000_000(
    &aKeys_002_914_001_000_000[0], &aValues_002_914_001_000_000[0] );
   // Substitution set IDExemptionReasonCodeSet.  Language: frCA
   static const I_CHAR* aKeys_002_914_005_000_000[] = {
      I_("04"),
      I_("05"),
      0x00
   };

   static const I_CHAR* aValues_002_914_005_000_000[] = {
      I_("Exemption d'impôts du Royaume-Uni"),
      I_("Société du Royaume-Uni"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_914_005_000_000;
   const BFSubstitutionSet SubSet_002_914_005_000_000(
    &aKeys_002_914_005_000_000[0], &aValues_002_914_005_000_000[0] );
   // Substitution set InvSummSortBySet.  Language: enUS
   static const I_CHAR* aKeys_002_915_001_000_000[] = {
      I_("TD"),
      I_("MD"),
      0x00
   };

   static const I_CHAR* aValues_002_915_001_000_000[] = {
      I_("Trade Date"),
      I_("Maturity Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_915_001_000_000;
   const BFSubstitutionSet SubSet_002_915_001_000_000(
    &aKeys_002_915_001_000_000[0], &aValues_002_915_001_000_000[0] );
   // Substitution set InvSummSortBySet.  Language: frCA
   static const I_CHAR* aKeys_002_915_005_000_000[] = {
      I_("TD"),
      I_("MD"),
      0x00
   };

   static const I_CHAR* aValues_002_915_005_000_000[] = {
      I_("Trade Date"),
      I_("Maturity Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_915_005_000_000;
   const BFSubstitutionSet SubSet_002_915_005_000_000(
    &aKeys_002_915_005_000_000[0], &aValues_002_915_005_000_000[0] );
   // Substitution set ZeroDistributionApplSet.  Language: enUS
   static const I_CHAR* aKeys_002_916_001_000_000[] = {
      I_("00"),
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_916_001_000_000[] = {
      I_("No"),
      I_("Yes"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_916_001_000_000;
   const BFSubstitutionSet SubSet_002_916_001_000_000(
    &aKeys_002_916_001_000_000[0], &aValues_002_916_001_000_000[0] );
   // Substitution set ZeroDistributionApplSet.  Language: frCA
   static const I_CHAR* aKeys_002_916_005_000_000[] = {
      I_("00"),
      I_("01"),
      0x00
   };

   static const I_CHAR* aValues_002_916_005_000_000[] = {
      I_("No"),
      I_("Yes"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_916_005_000_000;
   const BFSubstitutionSet SubSet_002_916_005_000_000(
    &aKeys_002_916_005_000_000[0], &aValues_002_916_005_000_000[0] );
   // Substitution set PSDAdviceSet.  Language: enUS
   static const I_CHAR* aKeys_002_917_001_000_000[] = {
      I_("01"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_917_001_000_000[] = {
      I_("Yes"),
      I_("No"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_917_001_000_000;
   const BFSubstitutionSet SubSet_002_917_001_000_000(
    &aKeys_002_917_001_000_000[0], &aValues_002_917_001_000_000[0] );
   // Substitution set PSDAdviceSet.  Language: frCA
   static const I_CHAR* aKeys_002_917_005_000_000[] = {
      I_("01"),
      I_("02"),
      0x00
   };

   static const I_CHAR* aValues_002_917_005_000_000[] = {
      I_("Yes"),
      I_("No"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_917_005_000_000;
   const BFSubstitutionSet SubSet_002_917_005_000_000(
    &aKeys_002_917_005_000_000[0], &aValues_002_917_005_000_000[0] );
   // Substitution set FeeModelTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_918_001_000_000[] = {
      I_("MF"),
      I_("MFR"),
      I_("MFMFR"),
      I_("TRD"),
      I_("DF"),
      0x00
   };

   static const I_CHAR* aValues_002_918_001_000_000[] = {
      I_("Management Fee"),
      I_("Management Fee Rebate"),
      I_("Management Fee / Management Fee Rebate"),
      I_("Default"),
      I_("Advisor Fee"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_918_001_000_000;
   const BFSubstitutionSet SubSet_002_918_001_000_000(
    &aKeys_002_918_001_000_000[0], &aValues_002_918_001_000_000[0] );
   // Substitution set FeeModelTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_918_005_000_000[] = {
      I_("MF"),
      I_("MFR"),
      I_("MFMFR"),
      I_("TRD"),
      I_("DF"),
      0x00
   };

   static const I_CHAR* aValues_002_918_005_000_000[] = {
      I_("Management Fee"),
      I_("Management Fee Rebate"),
      I_("Management Fee / Management Fee Rebate"),
      I_("Default"),
      I_("Frais de conseil de placement"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_918_005_000_000;
   const BFSubstitutionSet SubSet_002_918_005_000_000(
    &aKeys_002_918_005_000_000[0], &aValues_002_918_005_000_000[0] );
   // Substitution set DocumentMailSet.  Language: enUS
   static const I_CHAR* aKeys_002_919_001_000_000[] = {
      I_("Y"),
      I_("N"),
      I_("D"),
      0x00
   };

   static const I_CHAR* aValues_002_919_001_000_000[] = {
      I_("Yes"),
      I_("No"),
      I_("Default"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_919_001_000_000;
   const BFSubstitutionSet SubSet_002_919_001_000_000(
    &aKeys_002_919_001_000_000[0], &aValues_002_919_001_000_000[0] );
   // Substitution set DocumentMailSet.  Language: frCA
   static const I_CHAR* aKeys_002_919_005_000_000[] = {
      I_("Y"),
      I_("N"),
      I_("D"),
      0x00
   };

   static const I_CHAR* aValues_002_919_005_000_000[] = {
      I_("Yes"),
      I_("No"),
      I_("Default"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_919_005_000_000;
   const BFSubstitutionSet SubSet_002_919_005_000_000(
    &aKeys_002_919_005_000_000[0], &aValues_002_919_005_000_000[0] );
   // Substitution set ShrOutputTypeSet.  Language: enUS
   static const I_CHAR* aKeys_002_920_001_000_000[] = {
      I_("REG"),
      I_("LRG"),
      I_("BRL"),
      I_("AUD"),
      0x00
   };

   static const I_CHAR* aValues_002_920_001_000_000[] = {
      I_("Regular Print"),
      I_("Large Print"),
      I_("Braille"),
      I_("Audio"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_920_001_000_000;
   const BFSubstitutionSet SubSet_002_920_001_000_000(
    &aKeys_002_920_001_000_000[0], &aValues_002_920_001_000_000[0] );
   // Substitution set ShrOutputTypeSet.  Language: frCA
   static const I_CHAR* aKeys_002_920_005_000_000[] = {
      I_("REG"),
      I_("LRG"),
      I_("BRL"),
      I_("AUD"),
      0x00
   };

   static const I_CHAR* aValues_002_920_005_000_000[] = {
      I_("Regular Print"),
      I_("Large Print"),
      I_("Braille"),
      I_("Audio"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_920_005_000_000;
   const BFSubstitutionSet SubSet_002_920_005_000_000(
    &aKeys_002_920_005_000_000[0], &aValues_002_920_005_000_000[0] );
   // Substitution set DocTypeMailMappingSet.  Language: enUS
   static const I_CHAR* aKeys_002_921_001_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      0x00
   };

   static const I_CHAR* aValues_002_921_001_000_000[] = {
      I_("Confirmation"),
      I_("Statements"),
      I_("NonFinancialConfirm"),
      I_("ContractNotes"),
      I_("DividendConfirmation"),
      I_("DividendCheque"),
      I_("Certificate"),
      I_("TaxReceipt"),
      I_("Letters"),
      I_("AnnualReports"),
      I_("Prospectuses"),
      I_("AdditionalConfirmation"),
      I_("AdditionalStatement"),
      I_("Register"),
      I_("BeneficialOwner"),
      I_("SemiAnnualReport"),
      I_("ContributionReceipt"),
      I_("AnnualMRFP"),
      I_("SmAnnlMRFP"),
      I_("SystemCheques"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_921_001_000_000;
   const BFSubstitutionSet SubSet_002_921_001_000_000(
    &aKeys_002_921_001_000_000[0], &aValues_002_921_001_000_000[0] );
   // Substitution set DocTypeMailMappingSet.  Language: frCA
   static const I_CHAR* aKeys_002_921_005_000_000[] = {
      I_("01"),
      I_("02"),
      I_("03"),
      I_("04"),
      I_("05"),
      I_("06"),
      I_("07"),
      I_("08"),
      I_("09"),
      I_("10"),
      I_("11"),
      I_("12"),
      I_("13"),
      I_("14"),
      I_("15"),
      I_("16"),
      I_("19"),
      I_("20"),
      I_("21"),
      I_("22"),
      0x00
   };

   static const I_CHAR* aValues_002_921_005_000_000[] = {
      I_("Confirmation"),
      I_("Statements"),
      I_("NonFinancialConfirm"),
      I_("ContractNotes"),
      I_("DividendConfirmation"),
      I_("DividendCheque"),
      I_("Certificate"),
      I_("TaxReceipt"),
      I_("Letters"),
      I_("AnnualReports"),
      I_("Prospectuses"),
      I_("AdditionalConfirmation"),
      I_("AdditionalStatement"),
      I_("Register"),
      I_("BeneficialOwner"),
      I_("SemiAnnualReport"),
      I_("ContributionReceipt"),
      I_("AnnualMRFP"),
      I_("SmAnnlMRFP"),
      I_("SystemCheques"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_921_005_000_000;
   const BFSubstitutionSet SubSet_002_921_005_000_000(
    &aKeys_002_921_005_000_000[0], &aValues_002_921_005_000_000[0] );
   // Substitution set DeliveryOptionDefaultSet.  Language: enUS
   static const I_CHAR* aKeys_002_922_001_000_000[] = {
      I_("01"),
      I_("17"),
      I_("07"),
      I_("23"),
      I_("05"),
      I_("21"),
      I_("09"),
      I_("25"),
      I_("06"),
      I_("22"),
      I_("10"),
      I_("26"),
      I_("08"),
      I_("24"),
      I_("11"),
      I_("27"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      0x00
   };

   static const I_CHAR* aValues_002_922_001_000_000[] = {
      I_("YNNNN"),
      I_("YNNNY"),
      I_("YNNYN"),
      I_("YNNYY"),
      I_("YNYNN"),
      I_("YNYNY"),
      I_("YNYYN"),
      I_("YNYYY"),
      I_("YYNNN"),
      I_("YYNNY"),
      I_("YYNYN"),
      I_("YYNYY"),
      I_("YYYNN"),
      I_("YYYNY"),
      I_("YYYYN"),
      I_("YYYYY"),
      I_("DNNNN"),
      I_("DNNNY"),
      I_("DNNYN"),
      I_("DNNYY"),
      I_("DNYNN"),
      I_("DNYNY"),
      I_("DNYYN"),
      I_("DNYYY"),
      I_("DYNNN"),
      I_("DYNNY"),
      I_("DYNYN"),
      I_("DYNYY"),
      I_("DYYNN"),
      I_("DYYNY"),
      I_("DYYYN"),
      I_("DYYYY"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_922_001_000_000;
   const BFSubstitutionSet SubSet_002_922_001_000_000(
    &aKeys_002_922_001_000_000[0], &aValues_002_922_001_000_000[0] );
   // Substitution set DeliveryOptionDefaultSet.  Language: frCA
   static const I_CHAR* aKeys_002_922_005_000_000[] = {
      I_("01"),
      I_("17"),
      I_("07"),
      I_("23"),
      I_("05"),
      I_("21"),
      I_("09"),
      I_("25"),
      I_("06"),
      I_("22"),
      I_("10"),
      I_("26"),
      I_("08"),
      I_("24"),
      I_("11"),
      I_("27"),
      I_("32"),
      I_("33"),
      I_("34"),
      I_("35"),
      I_("36"),
      I_("37"),
      I_("38"),
      I_("39"),
      I_("40"),
      I_("41"),
      I_("42"),
      I_("43"),
      I_("44"),
      I_("45"),
      I_("46"),
      I_("47"),
      0x00
   };

   static const I_CHAR* aValues_002_922_005_000_000[] = {
      I_("YNNNN"),
      I_("YNNNY"),
      I_("YNNYN"),
      I_("YNNYY"),
      I_("YNYNN"),
      I_("YNYNY"),
      I_("YNYYN"),
      I_("YNYYY"),
      I_("YYNNN"),
      I_("YYNNY"),
      I_("YYNYN"),
      I_("YYNYY"),
      I_("YYYNN"),
      I_("YYYNY"),
      I_("YYYYN"),
      I_("YYYYY"),
      I_("DNNNN"),
      I_("DNNNY"),
      I_("DNNYN"),
      I_("DNNYY"),
      I_("DNYNN"),
      I_("DNYNY"),
      I_("DNYYN"),
      I_("DNYYY"),
      I_("DYNNN"),
      I_("DYNNY"),
      I_("DYNYN"),
      I_("DYNYY"),
      I_("DYYNN"),
      I_("DYYNY"),
      I_("DYYYN"),
      I_("DYYYY"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_922_005_000_000;
   const BFSubstitutionSet SubSet_002_922_005_000_000(
    &aKeys_002_922_005_000_000[0], &aValues_002_922_005_000_000[0] );
   // Substitution set LV_HoldingCompHeadingSubstSet.  Language: enUS
   static const I_CHAR* aKeys_002_923_001_000_000[] = {
      I_("WhereUseKey"),
      I_("HoldingCompName"),
      I_("CompanyUsage"),
      I_("AggregationMethod"),
      I_("Deff"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_923_001_000_000[] = {
      I_("Holding Co Code"),
      I_("Holding Co Name"),
      I_("Usage"),
      I_("Aggr Type"),
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_923_001_000_000;
   const BFSubstitutionSet SubSet_002_923_001_000_000(
    &aKeys_002_923_001_000_000[0], &aValues_002_923_001_000_000[0] );
   // Substitution set LV_HoldingCompHeadingSubstSet.  Language: frCA
   static const I_CHAR* aKeys_002_923_005_000_000[] = {
      I_("WhereUseKey"),
      I_("HoldingCompName"),
      I_("CompanyUsage"),
      I_("AggregationMethod"),
      I_("Deff"),
      I_("StopDate"),
      0x00
   };

   static const I_CHAR* aValues_002_923_005_000_000[] = {
      I_("Holding Co Code"),
      I_("Holding Co Name"),
      I_("Usage"),
      I_("Aggr Type"),
      I_("Effective Date"),
      I_("Stop Date"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_923_005_000_000;
   const BFSubstitutionSet SubSet_002_923_005_000_000(
    &aKeys_002_923_005_000_000[0], &aValues_002_923_005_000_000[0] );
   // Substitution set CompanyUsageSet.  Language: enUS
   static const I_CHAR* aKeys_002_924_001_000_000[] = {
      I_("MF"),
      I_("MFR"),
      0x00
   };

   static const I_CHAR* aValues_002_924_001_000_000[] = {
      I_("Management Fee"),
      I_("Management Fee Rebate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_924_001_000_000;
   const BFSubstitutionSet SubSet_002_924_001_000_000(
    &aKeys_002_924_001_000_000[0], &aValues_002_924_001_000_000[0] );
   // Substitution set CompanyUsageSet.  Language: frCA
   static const I_CHAR* aKeys_002_924_005_000_000[] = {
      I_("MF"),
      I_("MFR"),
      0x00
   };

   static const I_CHAR* aValues_002_924_005_000_000[] = {
      I_("Management Fee"),
      I_("Management Fee Rebate"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_924_005_000_000;
   const BFSubstitutionSet SubSet_002_924_005_000_000(
    &aKeys_002_924_005_000_000[0], &aValues_002_924_005_000_000[0] );
   // Substitution set AggregationMethodSet.  Language: enUS
   static const I_CHAR* aKeys_002_925_001_000_000[] = {
      I_("FA"),
      I_("TGA"),
      0x00
   };

   static const I_CHAR* aValues_002_925_001_000_000[] = {
      I_("Fund Assets"),
      I_("Total Global Assets"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_925_001_000_000;
   const BFSubstitutionSet SubSet_002_925_001_000_000(
    &aKeys_002_925_001_000_000[0], &aValues_002_925_001_000_000[0] );
   // Substitution set AggregationMethodSet.  Language: frCA
   static const I_CHAR* aKeys_002_925_005_000_000[] = {
      I_("FA"),
      I_("TGA"),
      0x00
   };

   static const I_CHAR* aValues_002_925_005_000_000[] = {
      I_("Fund Assets"),
      I_("Total Global Assets"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_925_005_000_000;
   const BFSubstitutionSet SubSet_002_925_005_000_000(
    &aKeys_002_925_005_000_000[0], &aValues_002_925_005_000_000[0] );
   // Substitution set ModelAggregationMethodSet.  Language: enUS
   static const I_CHAR* aKeys_002_926_001_000_000[] = {
      I_("IND"),
      I_("ALL"),
      I_("TGA"),
      I_("FLK"),
      0x00
   };

   static const I_CHAR* aValues_002_926_001_000_000[] = {
      I_("IND - Individual Aggregation for eligible funds"),
      I_("ALL - Aggregate all eligible funds"),
      I_("TGA - Aggregate all assets + additional assets"),
      I_("FLK - Aggregate by Fund Link"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_926_001_000_000;
   const BFSubstitutionSet SubSet_002_926_001_000_000(
    &aKeys_002_926_001_000_000[0], &aValues_002_926_001_000_000[0] );
   // Substitution set ModelAggregationMethodSet.  Language: frCA
   static const I_CHAR* aKeys_002_926_005_000_000[] = {
      I_("IND"),
      I_("ALL"),
      I_("TGA"),
      I_("FLK"),
      0x00
   };

   static const I_CHAR* aValues_002_926_005_000_000[] = {
      I_("IND - Individual Aggregation for eligible funds"),
      I_("ALL - Aggregate all eligible funds"),
      I_("TGA - Aggregate all assets + additional assets"),
      I_("FLK - Aggregate by Fund Link"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_926_005_000_000;
   const BFSubstitutionSet SubSet_002_926_005_000_000(
    &aKeys_002_926_005_000_000[0], &aValues_002_926_005_000_000[0] );
   // Substitution set LV_FeeThresholdSysHeadingSet.  Language: enUS
   static const I_CHAR* aKeys_002_927_001_000_000[] = {
      I_("ThrshldLevel"),
      I_("ThrshldLower"),
      I_("ThrshldUpper"),
      0x00
   };

   static const I_CHAR* aValues_002_927_001_000_000[] = {
      I_("Thershold Level"),
      I_("Threshold Lower"),
      I_("Threshold Upper"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_927_001_000_000;
   const BFSubstitutionSet SubSet_002_927_001_000_000(
    &aKeys_002_927_001_000_000[0], &aValues_002_927_001_000_000[0] );
   // Substitution set LV_FeeThresholdSysHeadingSet.  Language: frCA
   static const I_CHAR* aKeys_002_927_005_000_000[] = {
      I_("ThrshldLevel"),
      I_("ThrshldLower"),
      I_("ThrshldUpper"),
      0x00
   };

   static const I_CHAR* aValues_002_927_005_000_000[] = {
      I_("Thershold Level"),
      I_("Threshold Lower"),
      I_("Threshold Upper"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_927_005_000_000;
   const BFSubstitutionSet SubSet_002_927_005_000_000(
    &aKeys_002_927_005_000_000[0], &aValues_002_927_005_000_000[0] );
   // Substitution set ScheduleFreqSet.  Language: enUS
   static const I_CHAR* aKeys_002_928_001_000_000[] = {
      I_("33"),
      I_("32"),
      I_("34"),
      I_("31"),
      0x00
   };

   static const I_CHAR* aValues_002_928_001_000_000[] = {
      I_("Monthly"),
      I_("Quarterly"),
      I_("Semi Annually"),
      I_("Yearly"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_928_001_000_000;
   const BFSubstitutionSet SubSet_002_928_001_000_000(
    &aKeys_002_928_001_000_000[0], &aValues_002_928_001_000_000[0] );
   // Substitution set ScheduleFreqSet.  Language: frCA
   static const I_CHAR* aKeys_002_928_005_000_000[] = {
      I_("33"),
      I_("32"),
      I_("34"),
      I_("31"),
      0x00
   };

   static const I_CHAR* aValues_002_928_005_000_000[] = {
      I_("Monthly"),
      I_("Quarterly"),
      I_("Semi Annually"),
      I_("Yearly"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_928_005_000_000;
   const BFSubstitutionSet SubSet_002_928_005_000_000(
    &aKeys_002_928_005_000_000[0], &aValues_002_928_005_000_000[0] );
   // Substitution set TaxInclusiveSet.  Language: enUS
   static const I_CHAR* aKeys_002_929_001_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_929_001_000_000[] = {
      I_("Not Applicable"),
      I_("Inclusive"),
      I_("Exclusive"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_929_001_000_000;
   const BFSubstitutionSet SubSet_002_929_001_000_000(
    &aKeys_002_929_001_000_000[0], &aValues_002_929_001_000_000[0] );
   // Substitution set TaxInclusiveSet.  Language: frCA
   static const I_CHAR* aKeys_002_929_005_000_000[] = {
      I_("0"),
      I_("1"),
      I_("2"),
      0x00
   };

   static const I_CHAR* aValues_002_929_005_000_000[] = {
      I_("Not Applicable"),
      I_("Inclusive"),
      I_("Exclusive"),
      0x00
   };

   extern const BFSubstitutionSet SubSet_002_929_005_000_000;
   const BFSubstitutionSet SubSet_002_929_005_000_000(
    &aKeys_002_929_005_000_000[0], &aValues_002_929_005_000_000[0] );
}
