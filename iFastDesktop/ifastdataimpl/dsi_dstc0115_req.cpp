// BFDataImpl implementation file for DataSet DSTC0115.REQ
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Monday, November 12, 2018 16:30:09


#include "stdafx.h"
#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0115_req.h"


// This function creates an instance of dsi_DSTC0115_REQ
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0115_REQ() { return new dsi_DSTC0115_REQ; }

dsi_DSTC0115_REQ::dsi_DSTC0115_REQ()
: BFDataImpl( 40001349, 40001350 )
, SessionId_( ifds::SessionId, &ifds::s_FldProp_SessionId )
, User_Id_( ifds::User_Id, &ifds::s_FldProp_User_Id )
, LanguageCode_( ifds::LanguageCode, &ifds::s_FldProp_LanguageCode )
, CompanyId_( ifds::CompanyId, &ifds::s_FldProp_CompanyId )
, RunMode_( ifds::RunMode, &ifds::s_FldProp_RunMode )
, AccountNum_( ifds::AccountNum, &ifds::s_FldProp_AccountNum )
, TradesTransType_( ifds::TradesTransType, &ifds::s_FldProp_TradesTransType )
, Broker_( ifds::Broker, &ifds::s_FldProp_Broker )
, Branch_( ifds::Branch, &ifds::s_FldProp_Branch )
, SlsrepCode_( ifds::SlsrepCode, &ifds::s_FldProp_SlsrepCode )
, Amount_( ifds::Amount, &ifds::s_FldProp_Amount )
, AmtType_( ifds::AmtType, &ifds::s_FldProp_AmtType )
, GrossOrNet_( ifds::GrossOrNet, &ifds::s_FldProp_GrossOrNet )
, Fee_( ifds::Fee, &ifds::s_FldProp_Fee )
, FlatPercent_( ifds::FlatPercent, &ifds::s_FldProp_FlatPercent )
, TradesPayType_( ifds::TradesPayType, &ifds::s_FldProp_TradesPayType )
, SrcOfFund_( ifds::SrcOfFund, &ifds::s_FldProp_SrcOfFund )
, EffectiveDate_( ifds::EffectiveDate, &ifds::s_FldProp_EffectiveDate )
, SettleDate_( ifds::SettleDate, &ifds::s_FldProp_SettleDate )
, DealDate_( ifds::DealDate, &ifds::s_FldProp_DealDate )
, DealTime_( ifds::DealTime, &ifds::s_FldProp_DealTime )
, OrderType_( ifds::OrderType, &ifds::s_FldProp_OrderType )
, OrderSource_( ifds::OrderSource, &ifds::s_FldProp_OrderSource )
, FromFund_( ifds::FromFund, &ifds::s_FldProp_FromFund )
, FromClass_( ifds::FromClass, &ifds::s_FldProp_FromClass )
, ToFund_( ifds::ToFund, &ifds::s_FldProp_ToFund )
, ToClass_( ifds::ToClass, &ifds::s_FldProp_ToClass )
, AccountTo_( ifds::AccountTo, &ifds::s_FldProp_AccountTo )
, RedCode_( ifds::RedCode, &ifds::s_FldProp_RedCode )
, DepositType_( ifds::DepositType, &ifds::s_FldProp_DepositType )
, DepositDate_( ifds::DepositDate, &ifds::s_FldProp_DepositDate )
, ExchRate_( ifds::ExchRate, &ifds::s_FldProp_ExchRate )
, UseEnteredFee_( ifds::UseEnteredFee, &ifds::s_FldProp_UseEnteredFee )
, Accountable_( ifds::Accountable, &ifds::s_FldProp_Accountable )
, BackDatedReason_( ifds::BackDatedReason, &ifds::s_FldProp_BackDatedReason )
, GoodBad_( ifds::GoodBad, &ifds::s_FldProp_GoodBad )
, CertRequired_( ifds::CertRequired, &ifds::s_FldProp_CertRequired )
, RecptIssued_( ifds::RecptIssued, &ifds::s_FldProp_RecptIssued )
, WireOrdNum_( ifds::WireOrdNum, &ifds::s_FldProp_WireOrdNum )
, GICId_( ifds::GICId, &ifds::s_FldProp_GICId )
, Remarks1_( ifds::Remarks1, &ifds::s_FldProp_Remarks1 )
, Remarks2_( ifds::Remarks2, &ifds::s_FldProp_Remarks2 )
, Remarks3_( ifds::Remarks3, &ifds::s_FldProp_Remarks3 )
, ProvSales_( ifds::ProvSales, &ifds::s_FldProp_ProvSales )
, SettleCurrency_( ifds::SettleCurrency, &ifds::s_FldProp_SettleCurrency )
, SettledBy_( ifds::SettledBy, &ifds::s_FldProp_SettledBy )
, SettleType_( ifds::SettleType, &ifds::s_FldProp_SettleType )
, ExpGNSettle_( ifds::ExpGNSettle, &ifds::s_FldProp_ExpGNSettle )
, SrcOfAccount_( ifds::SrcOfAccount, &ifds::s_FldProp_SrcOfAccount )
, DepId_( ifds::DepId, &ifds::s_FldProp_DepId )
, SettleSource_( ifds::SettleSource, &ifds::s_FldProp_SettleSource )
, CashDate_( ifds::CashDate, &ifds::s_FldProp_CashDate )
, BatchName_( ifds::BatchName, &ifds::s_FldProp_BatchName )
, Trace_( ifds::Trace, &ifds::s_FldProp_Trace )
, SetAsDefault_( ifds::SetAsDefault, &ifds::s_FldProp_SetAsDefault )
, InterDetlRid_( ifds::InterDetlRid, &ifds::s_FldProp_InterDetlRid )
, InstCode_( ifds::InstCode, &ifds::s_FldProp_InstCode )
, SwiftCode_( ifds::SwiftCode, &ifds::s_FldProp_SwiftCode )
, RefNumber_( ifds::RefNumber, &ifds::s_FldProp_RefNumber )
, TransitNo_( ifds::TransitNo, &ifds::s_FldProp_TransitNo )
, BankAcctNum_( ifds::BankAcctNum, &ifds::s_FldProp_BankAcctNum )
, BankAcctName_( ifds::BankAcctName, &ifds::s_FldProp_BankAcctName )
, BankAcctType_( ifds::BankAcctType, &ifds::s_FldProp_BankAcctType )
, TransNum_( ifds::TransNum, &ifds::s_FldProp_TransNum )
, CreateRep_( ifds::CreateRep, &ifds::s_FldProp_CreateRep )
, InstName_( ifds::InstName, &ifds::s_FldProp_InstName )
, EntityType_( ifds::EntityType, &ifds::s_FldProp_EntityType )
, EntityTypeSeq_( ifds::EntityTypeSeq, &ifds::s_FldProp_EntityTypeSeq )
, TransId_( ifds::TransId, &ifds::s_FldProp_TransId )
, RoundFlag_( ifds::RoundFlag, &ifds::s_FldProp_RoundFlag )
, SuppressCode_( ifds::SuppressCode, &ifds::s_FldProp_SuppressCode )
, FeeCurrency_( ifds::FeeCurrency, &ifds::s_FldProp_FeeCurrency )
, AddrCode_( ifds::AddrCode, &ifds::s_FldProp_AddrCode )
, DeliveryMethod_( ifds::DeliveryMethod, &ifds::s_FldProp_DeliveryMethod )
, Track_( ifds::Track, &ifds::s_FldProp_Track )
, Activity_( ifds::Activity, &ifds::s_FldProp_Activity )
, ExternalId_( ifds::ExternalId, &ifds::s_FldProp_ExternalId )
, BankIdType_( ifds::BankIdType, &ifds::s_FldProp_BankIdType )
, BankIdTypeCB_( ifds::BankIdTypeCB, &ifds::s_FldProp_BankIdTypeCB )
, InstNameCB_( ifds::InstNameCB, &ifds::s_FldProp_InstNameCB )
, TransitNoCB_( ifds::TransitNoCB, &ifds::s_FldProp_TransitNoCB )
, BankIdValueCB_( ifds::BankIdValueCB, &ifds::s_FldProp_BankIdValueCB )
, FFC_( ifds::FFC, &ifds::s_FldProp_FFC )
, FFC1_( ifds::FFC1, &ifds::s_FldProp_FFC1 )
, ACHProcessor_( ifds::ACHProcessor, &ifds::s_FldProp_ACHProcessor )
, BankContactCB_( ifds::BankContactCB, &ifds::s_FldProp_BankContactCB )
, BankCountryCB_( ifds::BankCountryCB, &ifds::s_FldProp_BankCountryCB )
, BankPostalCB_( ifds::BankPostalCB, &ifds::s_FldProp_BankPostalCB )
, BankAddrCB1_( ifds::BankAddrCB1, &ifds::s_FldProp_BankAddrCB1 )
, BankAddrCB2_( ifds::BankAddrCB2, &ifds::s_FldProp_BankAddrCB2 )
, BankAddrCB3_( ifds::BankAddrCB3, &ifds::s_FldProp_BankAddrCB3 )
, BankAddrCB4_( ifds::BankAddrCB4, &ifds::s_FldProp_BankAddrCB4 )
, BankAddrCB5_( ifds::BankAddrCB5, &ifds::s_FldProp_BankAddrCB5 )
, BankAddr1_( ifds::BankAddr1, &ifds::s_FldProp_BankAddr1 )
, BankAddr2_( ifds::BankAddr2, &ifds::s_FldProp_BankAddr2 )
, BankAddr3_( ifds::BankAddr3, &ifds::s_FldProp_BankAddr3 )
, BankAddr4_( ifds::BankAddr4, &ifds::s_FldProp_BankAddr4 )
, BankAddr5_( ifds::BankAddr5, &ifds::s_FldProp_BankAddr5 )
, BankContact_( ifds::BankContact, &ifds::s_FldProp_BankContact )
, BankCountry_( ifds::BankCountry, &ifds::s_FldProp_BankCountry )
, BankPostal_( ifds::BankPostal, &ifds::s_FldProp_BankPostal )
, BankIdValue_( ifds::BankIdValue, &ifds::s_FldProp_BankIdValue )
, BankId_( ifds::BankId, &ifds::s_FldProp_BankId )
, TransSeq_( ifds::TransSeq, &ifds::s_FldProp_TransSeq )
, VersionNum_( ifds::VersionNum, &ifds::s_FldProp_VersionNum )
, ClientTradeId_( ifds::ClientTradeId, &ifds::s_FldProp_ClientTradeId )
, DSCOverrideCode_( ifds::DSCOverrideCode, &ifds::s_FldProp_DSCOverrideCode )
, DSCOverrideAmt_( ifds::DSCOverrideAmt, &ifds::s_FldProp_DSCOverrideAmt )
, CreateSplitCom_( ifds::CreateSplitCom, &ifds::s_FldProp_CreateSplitCom )
, ExchInFee_( ifds::ExchInFee, &ifds::s_FldProp_ExchInFee )
, ExchInFlatPercent_( ifds::ExchInFlatPercent, &ifds::s_FldProp_ExchInFlatPercent )
, PayReason1_( ifds::PayReason1, &ifds::s_FldProp_PayReason1 )
, PayReason2_( ifds::PayReason2, &ifds::s_FldProp_PayReason2 )
, BankChrgs_( ifds::BankChrgs, &ifds::s_FldProp_BankChrgs )
, ValueDate_( ifds::ValueDate, &ifds::s_FldProp_ValueDate )
, PayMethod_( ifds::PayMethod, &ifds::s_FldProp_PayMethod )
, NetworkID_( ifds::NetworkID, &ifds::s_FldProp_NetworkID )
, ExtTransNum_( ifds::ExtTransNum, &ifds::s_FldProp_ExtTransNum )
, SendRefNum_( ifds::SendRefNum, &ifds::s_FldProp_SendRefNum )
, PartRefNum_( ifds::PartRefNum, &ifds::s_FldProp_PartRefNum )
, MasterRefNum_( ifds::MasterRefNum, &ifds::s_FldProp_MasterRefNum )
, ExchOutFee_( ifds::ExchOutFee, &ifds::s_FldProp_ExchOutFee )
, ExchOutFlatPrcnt_( ifds::ExchOutFlatPrcnt, &ifds::s_FldProp_ExchOutFlatPrcnt )
, ChargeERSTTRFee_( ifds::ChargeERSTTRFee, &ifds::s_FldProp_ChargeERSTTRFee )
, ChargeWDFee_( ifds::ChargeWDFee, &ifds::s_FldProp_ChargeWDFee )
, FedRate_( ifds::FedRate, &ifds::s_FldProp_FedRate )
, TransRatePUDFed_( ifds::TransRatePUDFed, &ifds::s_FldProp_TransRatePUDFed )
, ProvRate_( ifds::ProvRate, &ifds::s_FldProp_ProvRate )
, TransRatePUDProv_( ifds::TransRatePUDProv, &ifds::s_FldProp_TransRatePUDProv )
, OverrideTax_( ifds::OverrideTax, &ifds::s_FldProp_OverrideTax )
, SetFromAsDefault_( ifds::SetFromAsDefault, &ifds::s_FldProp_SetFromAsDefault )
, BorrowedFunds_( ifds::BorrowedFunds, &ifds::s_FldProp_BorrowedFunds )
, FrSettlLocCode_( ifds::FrSettlLocCode, &ifds::s_FldProp_FrSettlLocCode )
, FrDeliveryTo_( ifds::FrDeliveryTo, &ifds::s_FldProp_FrDeliveryTo )
, FrSettlLocDescription_( ifds::FrSettlLocDescription, &ifds::s_FldProp_FrSettlLocDescription )
, FrInFavourOf_( ifds::FrInFavourOf, &ifds::s_FldProp_FrInFavourOf )
, FrForAccount_( ifds::FrForAccount, &ifds::s_FldProp_FrForAccount )
, FrClearingMethod_( ifds::FrClearingMethod, &ifds::s_FldProp_FrClearingMethod )
, ToSettlLocCode_( ifds::ToSettlLocCode, &ifds::s_FldProp_ToSettlLocCode )
, ToDeliveryTo_( ifds::ToDeliveryTo, &ifds::s_FldProp_ToDeliveryTo )
, ToSettlLocDescription_( ifds::ToSettlLocDescription, &ifds::s_FldProp_ToSettlLocDescription )
, ToInFavourOf_( ifds::ToInFavourOf, &ifds::s_FldProp_ToInFavourOf )
, ToForAccount_( ifds::ToForAccount, &ifds::s_FldProp_ToForAccount )
, ToClearingMethod_( ifds::ToClearingMethod, &ifds::s_FldProp_ToClearingMethod )
, FeeTo_( ifds::FeeTo, &ifds::s_FldProp_FeeTo )
, ADLFeeCharge_( ifds::ADLFeeCharge, &ifds::s_FldProp_ADLFeeCharge )
, LSIFCode_( ifds::LSIFCode, &ifds::s_FldProp_LSIFCode )
, AcqFeeOption_( ifds::AcqFeeOption, &ifds::s_FldProp_AcqFeeOption )
, DiscountRate_( ifds::DiscountRate, &ifds::s_FldProp_DiscountRate )
, SettleDateOverriden_( ifds::SettleDateOverriden, &ifds::s_FldProp_SettleDateOverriden )
, ForceVerify_( ifds::ForceVerify, &ifds::s_FldProp_ForceVerify )
, FrSettlInstrCode_( ifds::FrSettlInstrCode, &ifds::s_FldProp_FrSettlInstrCode )
, ToSettlInstrCode_( ifds::ToSettlInstrCode, &ifds::s_FldProp_ToSettlInstrCode )
, FundBrokerCode_( ifds::FundBrokerCode, &ifds::s_FldProp_FundBrokerCode )
, AggregateOption_( ifds::AggregateOption, &ifds::s_FldProp_AggregateOption )
, ConfirmRequired_( ifds::ConfirmRequired, &ifds::s_FldProp_ConfirmRequired )
, AggOrdAdjustNum_( ifds::AggOrdAdjustNum, &ifds::s_FldProp_AggOrdAdjustNum )
, RqdRefresh_( ifds::RqdRefresh, &ifds::s_FldProp_RqdRefresh )
, OtherConfirmType_( ifds::OtherConfirmType, &ifds::s_FldProp_OtherConfirmType )
, ExternalPrice_( ifds::ExternalPrice, &ifds::s_FldProp_ExternalPrice )
, ExternalSettleDate_( ifds::ExternalSettleDate, &ifds::s_FldProp_ExternalSettleDate )
, ExternalSettleAmt_( ifds::ExternalSettleAmt, &ifds::s_FldProp_ExternalSettleAmt )
, ROAAmount_( ifds::ROAAmount, &ifds::s_FldProp_ROAAmount )
, AdjTransNum_( ifds::AdjTransNum, &ifds::s_FldProp_AdjTransNum )
, Cost_( ifds::Cost, &ifds::s_FldProp_Cost )
, TIS_( ifds::TIS, &ifds::s_FldProp_TIS )
, OverrideCost_( ifds::OverrideCost, &ifds::s_FldProp_OverrideCost )
, OverrideTIS_( ifds::OverrideTIS, &ifds::s_FldProp_OverrideTIS )
, MCHFileIndicator_( ifds::MCHFileIndicator, &ifds::s_FldProp_MCHFileIndicator )
, SecRecFileIndicator_( ifds::SecRecFileIndicator, &ifds::s_FldProp_SecRecFileIndicator )
, ESGSettle_( ifds::ESGSettle, &ifds::s_FldProp_ESGSettle )
, PayInstrOption_( ifds::PayInstrOption, &ifds::s_FldProp_PayInstrOption )
, SettleInDate_( ifds::SettleInDate, &ifds::s_FldProp_SettleInDate )
, CloneAcctAMS_( ifds::CloneAcctAMS, &ifds::s_FldProp_CloneAcctAMS )
, MFPayment_( ifds::MFPayment, &ifds::s_FldProp_MFPayment )
, WorkType_( ifds::WorkType, &ifds::s_FldProp_WorkType )
, AWDCrda_( ifds::AWDCrda, &ifds::s_FldProp_AWDCrda )
, LinkedEntityId_( ifds::LinkedEntityId, &ifds::s_FldProp_LinkedEntityId )
, BnkAcctIDLink_( ifds::BnkAcctIDLink, &ifds::s_FldProp_BnkAcctIDLink )
, AssocTransId_( ifds::AssocTransId, &ifds::s_FldProp_AssocTransId )
, GRRepayReason_( ifds::GRRepayReason, &ifds::s_FldProp_GRRepayReason )
, RESPReportHRDC_( ifds::RESPReportHRDC, &ifds::s_FldProp_RESPReportHRDC )
, CourseStart_( ifds::CourseStart, &ifds::s_FldProp_CourseStart )
, CourseLen_( ifds::CourseLen, &ifds::s_FldProp_CourseLen )
, PSEProgramLen_( ifds::PSEProgramLen, &ifds::s_FldProp_PSEProgramLen )
, PSEProgramType_( ifds::PSEProgramType, &ifds::s_FldProp_PSEProgramType )
, PSEProgramYear_( ifds::PSEProgramYear, &ifds::s_FldProp_PSEProgramYear )
, EduInstPstl_( ifds::EduInstPstl, &ifds::s_FldProp_EduInstPstl )
, Tainted_( ifds::Tainted, &ifds::s_FldProp_Tainted )
, OCRdmYear_( ifds::OCRdmYear, &ifds::s_FldProp_OCRdmYear )
, RESPLetter_( ifds::RESPLetter, &ifds::s_FldProp_RESPLetter )
, RESPTransStat_( ifds::RESPTransStat, &ifds::s_FldProp_RESPTransStat )
, FromPlanNum_( ifds::FromPlanNum, &ifds::s_FldProp_FromPlanNum )
, FromContractId_( ifds::FromContractId, &ifds::s_FldProp_FromContractId )
, ToPlanNum_( ifds::ToPlanNum, &ifds::s_FldProp_ToPlanNum )
, ToContractId_( ifds::ToContractId, &ifds::s_FldProp_ToContractId )
, InceptionDate_( ifds::InceptionDate, &ifds::s_FldProp_InceptionDate )
, TerminationDate_( ifds::TerminationDate, &ifds::s_FldProp_TerminationDate )
, NEQ1_( ifds::NEQ1, &ifds::s_FldProp_NEQ1 )
, NEQ2_( ifds::NEQ2, &ifds::s_FldProp_NEQ2 )
, RESPContrDetlTaxYear_( ifds::RESPContrDetlTaxYear, &ifds::s_FldProp_RESPContrDetlTaxYear )
, AcctLvlOverride_( ifds::AcctLvlOverride, &ifds::s_FldProp_AcctLvlOverride )
, AssistedContrAmt_( ifds::AssistedContrAmt, &ifds::s_FldProp_AssistedContrAmt )
, AcctOwnerID_( ifds::AcctOwnerID, &ifds::s_FldProp_AcctOwnerID )
, ToFlatPercent_( ifds::ToFlatPercent, &ifds::s_FldProp_ToFlatPercent )
, NetworkRespRequired_( ifds::NetworkRespRequired, &ifds::s_FldProp_NetworkRespRequired )
, EAPCESGPaid_( ifds::EAPCESGPaid, &ifds::s_FldProp_EAPCESGPaid )
, IntInvestType_( ifds::IntInvestType, &ifds::s_FldProp_IntInvestType )
, IntCalcMthd_( ifds::IntCalcMthd, &ifds::s_FldProp_IntCalcMthd )
, InvestTerm_( ifds::InvestTerm, &ifds::s_FldProp_InvestTerm )
, GIMaturityDate_( ifds::GIMaturityDate, &ifds::s_FldProp_GIMaturityDate )
, IntCredFreq_( ifds::IntCredFreq, &ifds::s_FldProp_IntCredFreq )
, NextIntCredDate_( ifds::NextIntCredDate, &ifds::s_FldProp_NextIntCredDate )
, CommRedRate_( ifds::CommRedRate, &ifds::s_FldProp_CommRedRate )
, AddlAmt_( ifds::AddlAmt, &ifds::s_FldProp_AddlAmt )
, ForcedRate_( ifds::ForcedRate, &ifds::s_FldProp_ForcedRate )
, IntRate_( ifds::IntRate, &ifds::s_FldProp_IntRate )
, InvestStatus_( ifds::InvestStatus, &ifds::s_FldProp_InvestStatus )
, IsGIFund_( ifds::IsGIFund, &ifds::s_FldProp_IsGIFund )
, PendTrdContract_( ifds::PendTrdContract, &ifds::s_FldProp_PendTrdContract )
, PFCrystalisation_( ifds::PFCrystalisation, &ifds::s_FldProp_PFCrystalisation )
, ValuationDt_( ifds::ValuationDt, &ifds::s_FldProp_ValuationDt )
, PaymentInfo_( ifds::PaymentInfo, &ifds::s_FldProp_PaymentInfo )
, RedemOrder_( ifds::RedemOrder, &ifds::s_FldProp_RedemOrder )
, GuaranteesOverride_( ifds::GuaranteesOverride, &ifds::s_FldProp_GuaranteesOverride )
, RightToCancel_( ifds::RightToCancel, &ifds::s_FldProp_RightToCancel )
, RDRAdvice_( ifds::RDRAdvice, &ifds::s_FldProp_RDRAdvice )
, SDRTExemptCode_( ifds::SDRTExemptCode, &ifds::s_FldProp_SDRTExemptCode )
, PSDAdvice_( ifds::PSDAdvice, &ifds::s_FldProp_PSDAdvice )
, PymtRoutingMthd_( ifds::PymtRoutingMthd, &ifds::s_FldProp_PymtRoutingMthd )
, EventReceiptDate_( ifds::EventReceiptDate, &ifds::s_FldProp_EventReceiptDate )
, EventReceiptTime_( ifds::EventReceiptTime, &ifds::s_FldProp_EventReceiptTime )
, SourceOfTrade_( ifds::SourceOfTrade, &ifds::s_FldProp_SourceOfTrade )
, ChannelOfTrade_( ifds::ChannelOfTrade, &ifds::s_FldProp_ChannelOfTrade )
, Platform_( ifds::Platform, &ifds::s_FldProp_Platform )
, SettleNetwork_( ifds::SettleNetwork, &ifds::s_FldProp_SettleNetwork )
, NegMoneyMktInt_( ifds::NegMoneyMktInt, &ifds::s_FldProp_NegMoneyMktInt )
, ReinvestmentRate_( ifds::ReinvestmentRate, &ifds::s_FldProp_ReinvestmentRate )
, NumUnitEligDividends_( ifds::NumUnitEligDividends, &ifds::s_FldProp_NumUnitEligDividends )
, NumUnitDividends_( ifds::NumUnitDividends, &ifds::s_FldProp_NumUnitDividends )
, DivUnitId_( ifds::DivUnitId, &ifds::s_FldProp_DivUnitId )
, ReInvUnitId_( ifds::ReInvUnitId, &ifds::s_FldProp_ReInvUnitId )
, DeliveryNetwork_( ifds::DeliveryNetwork, &ifds::s_FldProp_DeliveryNetwork )
, ToCashMsgType_( ifds::ToCashMsgType, &ifds::s_FldProp_ToCashMsgType )
, ToIntermediaryBank_( ifds::ToIntermediaryBank, &ifds::s_FldProp_ToIntermediaryBank )
, ToReceivingBank_( ifds::ToReceivingBank, &ifds::s_FldProp_ToReceivingBank )
, ToBeneficiary_( ifds::ToBeneficiary, &ifds::s_FldProp_ToBeneficiary )
, ToSpecialInstructions_( ifds::ToSpecialInstructions, &ifds::s_FldProp_ToSpecialInstructions )
, FrCashMsgType_( ifds::FrCashMsgType, &ifds::s_FldProp_FrCashMsgType )
, FrIntermediaryBank_( ifds::FrIntermediaryBank, &ifds::s_FldProp_FrIntermediaryBank )
, FrReceivingBank_( ifds::FrReceivingBank, &ifds::s_FldProp_FrReceivingBank )
, FrBeneficiary_( ifds::FrBeneficiary, &ifds::s_FldProp_FrBeneficiary )
, FrSpecialInstructions_( ifds::FrSpecialInstructions, &ifds::s_FldProp_FrSpecialInstructions )
, G1Impact_( ifds::G1Impact, &ifds::s_FldProp_G1Impact )
, G2Impact_( ifds::G2Impact, &ifds::s_FldProp_G2Impact )
, CrossSysAcctNum_( ifds::CrossSysAcctNum, &ifds::s_FldProp_CrossSysAcctNum )
, AggregationType_( ifds::AggregationType, &ifds::s_FldProp_AggregationType )
, SourceofFundsChecked_( ifds::SourceofFundsChecked, &ifds::s_FldProp_SourceofFundsChecked )
, ExternalInstitution_( ifds::ExternalInstitution, &ifds::s_FldProp_ExternalInstitution )
, RefundAmtOpt_( ifds::RefundAmtOpt, &ifds::s_FldProp_RefundAmtOpt )
, Deconversion_( ifds::Deconversion, &ifds::s_FldProp_Deconversion )
, OrderRouting_( ifds::OrderRouting, &ifds::s_FldProp_OrderRouting )
, TradeInDate_( ifds::TradeInDate, &ifds::s_FldProp_TradeInDate )
, ValuationInDt_( ifds::ValuationInDt, &ifds::s_FldProp_ValuationInDt )
, FrCSDLocation_( ifds::FrCSDLocation, &ifds::s_FldProp_FrCSDLocation )
, FrCSDAcctNum_( ifds::FrCSDAcctNum, &ifds::s_FldProp_FrCSDAcctNum )
, ToCSDLocation_( ifds::ToCSDLocation, &ifds::s_FldProp_ToCSDLocation )
, ToCSDAcctNum_( ifds::ToCSDAcctNum, &ifds::s_FldProp_ToCSDAcctNum )
, PricingCode_( ifds::PricingCode, &ifds::s_FldProp_PricingCode )
, DilutionLinkNum_( ifds::DilutionLinkNum, &ifds::s_FldProp_DilutionLinkNum )
, PriceInCode_( ifds::PriceInCode, &ifds::s_FldProp_PriceInCode )
, FullMoneyOutIndc_( ifds::FullMoneyOutIndc, &ifds::s_FldProp_FullMoneyOutIndc )
, ExtAccount_( ifds::ExtAccount, &ifds::s_FldProp_ExtAccount )
, ExtSpecimenPlanNo_( ifds::ExtSpecimenPlanNo, &ifds::s_FldProp_ExtSpecimenPlanNo )
, NontaxContrib_( ifds::NontaxContrib, &ifds::s_FldProp_NontaxContrib )
, Rollovers_( ifds::Rollovers, &ifds::s_FldProp_Rollovers )
, CDSGrant_( ifds::CDSGrant, &ifds::s_FldProp_CDSGrant )
, CDSBond_( ifds::CDSBond, &ifds::s_FldProp_CDSBond )
, CurrYrFMV_( ifds::CurrYrFMV, &ifds::s_FldProp_CurrYrFMV )
, PrevYrGrantBond_( ifds::PrevYrGrantBond, &ifds::s_FldProp_PrevYrGrantBond )
, PrevYrContrib_( ifds::PrevYrContrib, &ifds::s_FldProp_PrevYrContrib )
, PrevYrNonTaxRedAmt_( ifds::PrevYrNonTaxRedAmt, &ifds::s_FldProp_PrevYrNonTaxRedAmt )
, PrevYrTaxRedAmt_( ifds::PrevYrTaxRedAmt, &ifds::s_FldProp_PrevYrTaxRedAmt )
, CurrYrNonTaxRedAmt_( ifds::CurrYrNonTaxRedAmt, &ifds::s_FldProp_CurrYrNonTaxRedAmt )
, CurrYrTaxRedAmt_( ifds::CurrYrTaxRedAmt, &ifds::s_FldProp_CurrYrTaxRedAmt )
, GateOverrideIndicator_( ifds::GateOverrideIndicator, &ifds::s_FldProp_GateOverrideIndicator )
, RDSPPaymtDate_( ifds::RDSPPaymtDate, &ifds::s_FldProp_RDSPPaymtDate )
, MatchingKey_( ifds::MatchingKey, &ifds::s_FldProp_MatchingKey )
, RepeatCount_( ifds::RepeatCount, &ifds::s_FldProp_RepeatCount )
{
    cFields_ = 289;
    memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0115_REQ::~dsi_DSTC0115_REQ()
{
}

BFDataImpl* dsi_DSTC0115_REQ::clone()
{
    dsi_DSTC0115_REQ* p = new dsi_DSTC0115_REQ;
    p->SessionId_ = SessionId_;
    p->User_Id_ = User_Id_;
    p->LanguageCode_ = LanguageCode_;
    p->CompanyId_ = CompanyId_;
    p->RunMode_ = RunMode_;
    p->AccountNum_ = AccountNum_;
    p->TradesTransType_ = TradesTransType_;
    p->Broker_ = Broker_;
    p->Branch_ = Branch_;
    p->SlsrepCode_ = SlsrepCode_;
    p->Amount_ = Amount_;
    p->AmtType_ = AmtType_;
    p->GrossOrNet_ = GrossOrNet_;
    p->Fee_ = Fee_;
    p->FlatPercent_ = FlatPercent_;
    p->TradesPayType_ = TradesPayType_;
    p->SrcOfFund_ = SrcOfFund_;
    p->EffectiveDate_ = EffectiveDate_;
    p->SettleDate_ = SettleDate_;
    p->DealDate_ = DealDate_;
    p->DealTime_ = DealTime_;
    p->OrderType_ = OrderType_;
    p->OrderSource_ = OrderSource_;
    p->FromFund_ = FromFund_;
    p->FromClass_ = FromClass_;
    p->ToFund_ = ToFund_;
    p->ToClass_ = ToClass_;
    p->AccountTo_ = AccountTo_;
    p->RedCode_ = RedCode_;
    p->DepositType_ = DepositType_;
    p->DepositDate_ = DepositDate_;
    p->ExchRate_ = ExchRate_;
    p->UseEnteredFee_ = UseEnteredFee_;
    p->Accountable_ = Accountable_;
    p->BackDatedReason_ = BackDatedReason_;
    p->GoodBad_ = GoodBad_;
    p->CertRequired_ = CertRequired_;
    p->RecptIssued_ = RecptIssued_;
    p->WireOrdNum_ = WireOrdNum_;
    p->GICId_ = GICId_;
    p->Remarks1_ = Remarks1_;
    p->Remarks2_ = Remarks2_;
    p->Remarks3_ = Remarks3_;
    p->ProvSales_ = ProvSales_;
    p->SettleCurrency_ = SettleCurrency_;
    p->SettledBy_ = SettledBy_;
    p->SettleType_ = SettleType_;
    p->ExpGNSettle_ = ExpGNSettle_;
    p->SrcOfAccount_ = SrcOfAccount_;
    p->DepId_ = DepId_;
    p->SettleSource_ = SettleSource_;
    p->CashDate_ = CashDate_;
    p->BatchName_ = BatchName_;
    p->Trace_ = Trace_;
    p->SetAsDefault_ = SetAsDefault_;
    p->InterDetlRid_ = InterDetlRid_;
    p->InstCode_ = InstCode_;
    p->SwiftCode_ = SwiftCode_;
    p->RefNumber_ = RefNumber_;
    p->TransitNo_ = TransitNo_;
    p->BankAcctNum_ = BankAcctNum_;
    p->BankAcctName_ = BankAcctName_;
    p->BankAcctType_ = BankAcctType_;
    p->TransNum_ = TransNum_;
    p->CreateRep_ = CreateRep_;
    p->InstName_ = InstName_;
    p->EntityType_ = EntityType_;
    p->EntityTypeSeq_ = EntityTypeSeq_;
    p->TransId_ = TransId_;
    p->RoundFlag_ = RoundFlag_;
    p->SuppressCode_ = SuppressCode_;
    p->FeeCurrency_ = FeeCurrency_;
    p->AddrCode_ = AddrCode_;
    p->DeliveryMethod_ = DeliveryMethod_;
    p->Track_ = Track_;
    p->Activity_ = Activity_;
    p->ExternalId_ = ExternalId_;
    p->BankIdType_ = BankIdType_;
    p->BankIdTypeCB_ = BankIdTypeCB_;
    p->InstNameCB_ = InstNameCB_;
    p->TransitNoCB_ = TransitNoCB_;
    p->BankIdValueCB_ = BankIdValueCB_;
    p->FFC_ = FFC_;
    p->FFC1_ = FFC1_;
    p->ACHProcessor_ = ACHProcessor_;
    p->BankContactCB_ = BankContactCB_;
    p->BankCountryCB_ = BankCountryCB_;
    p->BankPostalCB_ = BankPostalCB_;
    p->BankAddrCB1_ = BankAddrCB1_;
    p->BankAddrCB2_ = BankAddrCB2_;
    p->BankAddrCB3_ = BankAddrCB3_;
    p->BankAddrCB4_ = BankAddrCB4_;
    p->BankAddrCB5_ = BankAddrCB5_;
    p->BankAddr1_ = BankAddr1_;
    p->BankAddr2_ = BankAddr2_;
    p->BankAddr3_ = BankAddr3_;
    p->BankAddr4_ = BankAddr4_;
    p->BankAddr5_ = BankAddr5_;
    p->BankContact_ = BankContact_;
    p->BankCountry_ = BankCountry_;
    p->BankPostal_ = BankPostal_;
    p->BankIdValue_ = BankIdValue_;
    p->BankId_ = BankId_;
    p->TransSeq_ = TransSeq_;
    p->VersionNum_ = VersionNum_;
    p->ClientTradeId_ = ClientTradeId_;
    p->DSCOverrideCode_ = DSCOverrideCode_;
    p->DSCOverrideAmt_ = DSCOverrideAmt_;
    p->CreateSplitCom_ = CreateSplitCom_;
    p->ExchInFee_ = ExchInFee_;
    p->ExchInFlatPercent_ = ExchInFlatPercent_;
    p->PayReason1_ = PayReason1_;
    p->PayReason2_ = PayReason2_;
    p->BankChrgs_ = BankChrgs_;
    p->ValueDate_ = ValueDate_;
    p->PayMethod_ = PayMethod_;
    p->NetworkID_ = NetworkID_;
    p->ExtTransNum_ = ExtTransNum_;
    p->SendRefNum_ = SendRefNum_;
    p->PartRefNum_ = PartRefNum_;
    p->MasterRefNum_ = MasterRefNum_;
    p->ExchOutFee_ = ExchOutFee_;
    p->ExchOutFlatPrcnt_ = ExchOutFlatPrcnt_;
    p->ChargeERSTTRFee_ = ChargeERSTTRFee_;
    p->ChargeWDFee_ = ChargeWDFee_;
    p->FedRate_ = FedRate_;
    p->TransRatePUDFed_ = TransRatePUDFed_;
    p->ProvRate_ = ProvRate_;
    p->TransRatePUDProv_ = TransRatePUDProv_;
    p->OverrideTax_ = OverrideTax_;
    p->SetFromAsDefault_ = SetFromAsDefault_;
    p->BorrowedFunds_ = BorrowedFunds_;
    p->FrSettlLocCode_ = FrSettlLocCode_;
    p->FrDeliveryTo_ = FrDeliveryTo_;
    p->FrSettlLocDescription_ = FrSettlLocDescription_;
    p->FrInFavourOf_ = FrInFavourOf_;
    p->FrForAccount_ = FrForAccount_;
    p->FrClearingMethod_ = FrClearingMethod_;
    p->ToSettlLocCode_ = ToSettlLocCode_;
    p->ToDeliveryTo_ = ToDeliveryTo_;
    p->ToSettlLocDescription_ = ToSettlLocDescription_;
    p->ToInFavourOf_ = ToInFavourOf_;
    p->ToForAccount_ = ToForAccount_;
    p->ToClearingMethod_ = ToClearingMethod_;
    p->FeeTo_ = FeeTo_;
    p->ADLFeeCharge_ = ADLFeeCharge_;
    p->LSIFCode_ = LSIFCode_;
    p->AcqFeeOption_ = AcqFeeOption_;
    p->DiscountRate_ = DiscountRate_;
    p->SettleDateOverriden_ = SettleDateOverriden_;
    p->ForceVerify_ = ForceVerify_;
    p->FrSettlInstrCode_ = FrSettlInstrCode_;
    p->ToSettlInstrCode_ = ToSettlInstrCode_;
    p->FundBrokerCode_ = FundBrokerCode_;
    p->AggregateOption_ = AggregateOption_;
    p->ConfirmRequired_ = ConfirmRequired_;
    p->AggOrdAdjustNum_ = AggOrdAdjustNum_;
    p->RqdRefresh_ = RqdRefresh_;
    p->OtherConfirmType_ = OtherConfirmType_;
    p->ExternalPrice_ = ExternalPrice_;
    p->ExternalSettleDate_ = ExternalSettleDate_;
    p->ExternalSettleAmt_ = ExternalSettleAmt_;
    p->ROAAmount_ = ROAAmount_;
    p->AdjTransNum_ = AdjTransNum_;
    p->Cost_ = Cost_;
    p->TIS_ = TIS_;
    p->OverrideCost_ = OverrideCost_;
    p->OverrideTIS_ = OverrideTIS_;
    p->MCHFileIndicator_ = MCHFileIndicator_;
    p->SecRecFileIndicator_ = SecRecFileIndicator_;
    p->ESGSettle_ = ESGSettle_;
    p->PayInstrOption_ = PayInstrOption_;
    p->SettleInDate_ = SettleInDate_;
    p->CloneAcctAMS_ = CloneAcctAMS_;
    p->MFPayment_ = MFPayment_;
    p->WorkType_ = WorkType_;
    p->AWDCrda_ = AWDCrda_;
    p->LinkedEntityId_ = LinkedEntityId_;
    p->BnkAcctIDLink_ = BnkAcctIDLink_;
    p->AssocTransId_ = AssocTransId_;
    p->GRRepayReason_ = GRRepayReason_;
    p->RESPReportHRDC_ = RESPReportHRDC_;
    p->CourseStart_ = CourseStart_;
    p->CourseLen_ = CourseLen_;
    p->PSEProgramLen_ = PSEProgramLen_;
    p->PSEProgramType_ = PSEProgramType_;
    p->PSEProgramYear_ = PSEProgramYear_;
    p->EduInstPstl_ = EduInstPstl_;
    p->Tainted_ = Tainted_;
    p->OCRdmYear_ = OCRdmYear_;
    p->RESPLetter_ = RESPLetter_;
    p->RESPTransStat_ = RESPTransStat_;
    p->FromPlanNum_ = FromPlanNum_;
    p->FromContractId_ = FromContractId_;
    p->ToPlanNum_ = ToPlanNum_;
    p->ToContractId_ = ToContractId_;
    p->InceptionDate_ = InceptionDate_;
    p->TerminationDate_ = TerminationDate_;
    p->NEQ1_ = NEQ1_;
    p->NEQ2_ = NEQ2_;
    p->RESPContrDetlTaxYear_ = RESPContrDetlTaxYear_;
    p->AcctLvlOverride_ = AcctLvlOverride_;
    p->AssistedContrAmt_ = AssistedContrAmt_;
    p->AcctOwnerID_ = AcctOwnerID_;
    p->ToFlatPercent_ = ToFlatPercent_;
    p->NetworkRespRequired_ = NetworkRespRequired_;
    p->EAPCESGPaid_ = EAPCESGPaid_;
    p->IntInvestType_ = IntInvestType_;
    p->IntCalcMthd_ = IntCalcMthd_;
    p->InvestTerm_ = InvestTerm_;
    p->GIMaturityDate_ = GIMaturityDate_;
    p->IntCredFreq_ = IntCredFreq_;
    p->NextIntCredDate_ = NextIntCredDate_;
    p->CommRedRate_ = CommRedRate_;
    p->AddlAmt_ = AddlAmt_;
    p->ForcedRate_ = ForcedRate_;
    p->IntRate_ = IntRate_;
    p->InvestStatus_ = InvestStatus_;
    p->IsGIFund_ = IsGIFund_;
    p->PendTrdContract_ = PendTrdContract_;
    p->PFCrystalisation_ = PFCrystalisation_;
    p->ValuationDt_ = ValuationDt_;
    p->PaymentInfo_ = PaymentInfo_;
    p->RedemOrder_ = RedemOrder_;
    p->GuaranteesOverride_ = GuaranteesOverride_;
    p->RightToCancel_ = RightToCancel_;
    p->RDRAdvice_ = RDRAdvice_;
    p->SDRTExemptCode_ = SDRTExemptCode_;
    p->PSDAdvice_ = PSDAdvice_;
    p->PymtRoutingMthd_ = PymtRoutingMthd_;
    p->EventReceiptDate_ = EventReceiptDate_;
    p->EventReceiptTime_ = EventReceiptTime_;
    p->SourceOfTrade_ = SourceOfTrade_;
    p->ChannelOfTrade_ = ChannelOfTrade_;
    p->Platform_ = Platform_;
    p->SettleNetwork_ = SettleNetwork_;
    p->NegMoneyMktInt_ = NegMoneyMktInt_;
    p->ReinvestmentRate_ = ReinvestmentRate_;
    p->NumUnitEligDividends_ = NumUnitEligDividends_;
    p->NumUnitDividends_ = NumUnitDividends_;
    p->DivUnitId_ = DivUnitId_;
    p->ReInvUnitId_ = ReInvUnitId_;
    p->DeliveryNetwork_ = DeliveryNetwork_;
    p->ToCashMsgType_ = ToCashMsgType_;
    p->ToIntermediaryBank_ = ToIntermediaryBank_;
    p->ToReceivingBank_ = ToReceivingBank_;
    p->ToBeneficiary_ = ToBeneficiary_;
    p->ToSpecialInstructions_ = ToSpecialInstructions_;
    p->FrCashMsgType_ = FrCashMsgType_;
    p->FrIntermediaryBank_ = FrIntermediaryBank_;
    p->FrReceivingBank_ = FrReceivingBank_;
    p->FrBeneficiary_ = FrBeneficiary_;
    p->FrSpecialInstructions_ = FrSpecialInstructions_;
    p->G1Impact_ = G1Impact_;
    p->G2Impact_ = G2Impact_;
    p->CrossSysAcctNum_ = CrossSysAcctNum_;
    p->AggregationType_ = AggregationType_;
    p->SourceofFundsChecked_ = SourceofFundsChecked_;
    p->ExternalInstitution_ = ExternalInstitution_;
    p->RefundAmtOpt_ = RefundAmtOpt_;
    p->Deconversion_ = Deconversion_;
    p->OrderRouting_ = OrderRouting_;
    p->TradeInDate_ = TradeInDate_;
    p->ValuationInDt_ = ValuationInDt_;
    p->FrCSDLocation_ = FrCSDLocation_;
    p->FrCSDAcctNum_ = FrCSDAcctNum_;
    p->ToCSDLocation_ = ToCSDLocation_;
    p->ToCSDAcctNum_ = ToCSDAcctNum_;
    p->PricingCode_ = PricingCode_;
    p->DilutionLinkNum_ = DilutionLinkNum_;
    p->PriceInCode_ = PriceInCode_;
    p->FullMoneyOutIndc_ = FullMoneyOutIndc_;
    p->ExtAccount_ = ExtAccount_;
    p->ExtSpecimenPlanNo_ = ExtSpecimenPlanNo_;
    p->NontaxContrib_ = NontaxContrib_;
    p->Rollovers_ = Rollovers_;
    p->CDSGrant_ = CDSGrant_;
    p->CDSBond_ = CDSBond_;
    p->CurrYrFMV_ = CurrYrFMV_;
    p->PrevYrGrantBond_ = PrevYrGrantBond_;
    p->PrevYrContrib_ = PrevYrContrib_;
    p->PrevYrNonTaxRedAmt_ = PrevYrNonTaxRedAmt_;
    p->PrevYrTaxRedAmt_ = PrevYrTaxRedAmt_;
    p->CurrYrNonTaxRedAmt_ = CurrYrNonTaxRedAmt_;
    p->CurrYrTaxRedAmt_ = CurrYrTaxRedAmt_;
    p->GateOverrideIndicator_ = GateOverrideIndicator_;
    p->RDSPPaymtDate_ = RDSPPaymtDate_;
    p->MatchingKey_ = MatchingKey_;
    p->RepeatCount_ = RepeatCount_;
    return(p);
}

BFDataField* dsi_DSTC0115_REQ::getElement( const BFFieldId& id )
{
    switch( id.getId() ) {
        case 40000005: return ( &SessionId_ ); break; // SessionId
        case 40000002: return ( &User_Id_ ); break; // User_Id
        case 40000030: return ( &LanguageCode_ ); break; // LanguageCode
        case 40000031: return ( &CompanyId_ ); break; // CompanyId
        case 40000990: return ( &RunMode_ ); break; // RunMode
        case 40000040: return ( &AccountNum_ ); break; // AccountNum
        case 40001378: return ( &TradesTransType_ ); break; // TradesTransType
        case 40000183: return ( &Broker_ ); break; // Broker
        case 40000184: return ( &Branch_ ); break; // Branch
        case 40000656: return ( &SlsrepCode_ ); break; // SlsrepCode
        case 40000231: return ( &Amount_ ); break; // Amount
        case 40000726: return ( &AmtType_ ); break; // AmtType
        case 40000234: return ( &GrossOrNet_ ); break; // GrossOrNet
        case 40000235: return ( &Fee_ ); break; // Fee
        case 40000658: return ( &FlatPercent_ ); break; // FlatPercent
        case 40001377: return ( &TradesPayType_ ); break; // TradesPayType
        case 40000255: return ( &SrcOfFund_ ); break; // SrcOfFund
        case 40000327: return ( &EffectiveDate_ ); break; // EffectiveDate
        case 40000348: return ( &SettleDate_ ); break; // SettleDate
        case 40000451: return ( &DealDate_ ); break; // DealDate
        case 40000452: return ( &DealTime_ ); break; // DealTime
        case 40000431: return ( &OrderType_ ); break; // OrderType
        case 40000461: return ( &OrderSource_ ); break; // OrderSource
        case 40000719: return ( &FromFund_ ); break; // FromFund
        case 40000720: return ( &FromClass_ ); break; // FromClass
        case 40000721: return ( &ToFund_ ); break; // ToFund
        case 40000722: return ( &ToClass_ ); break; // ToClass
        case 40000646: return ( &AccountTo_ ); break; // AccountTo
        case 40000435: return ( &RedCode_ ); break; // RedCode
        case 40000433: return ( &DepositType_ ); break; // DepositType
        case 40000449: return ( &DepositDate_ ); break; // DepositDate
        case 40000456: return ( &ExchRate_ ); break; // ExchRate
        case 40001351: return ( &UseEnteredFee_ ); break; // UseEnteredFee
        case 40000476: return ( &Accountable_ ); break; // Accountable
        case 40001353: return ( &BackDatedReason_ ); break; // BackDatedReason
        case 40000496: return ( &GoodBad_ ); break; // GoodBad
        case 40000675: return ( &CertRequired_ ); break; // CertRequired
        case 40000458: return ( &RecptIssued_ ); break; // RecptIssued
        case 40000432: return ( &WireOrdNum_ ); break; // WireOrdNum
        case 40001354: return ( &GICId_ ); break; // GICId
        case 40000478: return ( &Remarks1_ ); break; // Remarks1
        case 40000479: return ( &Remarks2_ ); break; // Remarks2
        case 40000480: return ( &Remarks3_ ); break; // Remarks3
        case 40000448: return ( &ProvSales_ ); break; // ProvSales
        case 40000455: return ( &SettleCurrency_ ); break; // SettleCurrency
        case 40000467: return ( &SettledBy_ ); break; // SettledBy
        case 40000465: return ( &SettleType_ ); break; // SettleType
        case 40000670: return ( &ExpGNSettle_ ); break; // ExpGNSettle
        case 40000460: return ( &SrcOfAccount_ ); break; // SrcOfAccount
        case 40000681: return ( &DepId_ ); break; // DepId
        case 40000463: return ( &SettleSource_ ); break; // SettleSource
        case 40000450: return ( &CashDate_ ); break; // CashDate
        case 40000653: return ( &BatchName_ ); break; // BatchName
        case 40001355: return ( &Trace_ ); break; // Trace
        case 40001036: return ( &SetAsDefault_ ); break; // SetAsDefault
        case 40001356: return ( &InterDetlRid_ ); break; // InterDetlRid
        case 40000244: return ( &InstCode_ ); break; // InstCode
        case 40000245: return ( &SwiftCode_ ); break; // SwiftCode
        case 40000246: return ( &RefNumber_ ); break; // RefNumber
        case 40000247: return ( &TransitNo_ ); break; // TransitNo
        case 40000248: return ( &BankAcctNum_ ); break; // BankAcctNum
        case 40000249: return ( &BankAcctName_ ); break; // BankAcctName
        case 40000253: return ( &BankAcctType_ ); break; // BankAcctType
        case 40000096: return ( &TransNum_ ); break; // TransNum
        case 40001006: return ( &CreateRep_ ); break; // CreateRep
        case 40000285: return ( &InstName_ ); break; // InstName
        case 40000604: return ( &EntityType_ ); break; // EntityType
        case 40001103: return ( &EntityTypeSeq_ ); break; // EntityTypeSeq
        case 40000063: return ( &TransId_ ); break; // TransId
        case 40000474: return ( &RoundFlag_ ); break; // RoundFlag
        case 40002015: return ( &SuppressCode_ ); break; // SuppressCode
        case 40000237: return ( &FeeCurrency_ ); break; // FeeCurrency
        case 40000277: return ( &AddrCode_ ); break; // AddrCode
        case 40002016: return ( &DeliveryMethod_ ); break; // DeliveryMethod
        case 40002065: return ( &Track_ ); break; // Track
        case 40002066: return ( &Activity_ ); break; // Activity
        case 40002077: return ( &ExternalId_ ); break; // ExternalId
        case 40002119: return ( &BankIdType_ ); break; // BankIdType
        case 40002121: return ( &BankIdTypeCB_ ); break; // BankIdTypeCB
        case 40002152: return ( &InstNameCB_ ); break; // InstNameCB
        case 40002125: return ( &TransitNoCB_ ); break; // TransitNoCB
        case 40002124: return ( &BankIdValueCB_ ); break; // BankIdValueCB
        case 40002148: return ( &FFC_ ); break; // FFC
        case 40002166: return ( &FFC1_ ); break; // FFC1
        case 40002150: return ( &ACHProcessor_ ); break; // ACHProcessor
        case 40002147: return ( &BankContactCB_ ); break; // BankContactCB
        case 40002145: return ( &BankCountryCB_ ); break; // BankCountryCB
        case 40002143: return ( &BankPostalCB_ ); break; // BankPostalCB
        case 40002172: return ( &BankAddrCB1_ ); break; // BankAddrCB1
        case 40002173: return ( &BankAddrCB2_ ); break; // BankAddrCB2
        case 40002174: return ( &BankAddrCB3_ ); break; // BankAddrCB3
        case 40002175: return ( &BankAddrCB4_ ); break; // BankAddrCB4
        case 40002176: return ( &BankAddrCB5_ ); break; // BankAddrCB5
        case 40002167: return ( &BankAddr1_ ); break; // BankAddr1
        case 40002168: return ( &BankAddr2_ ); break; // BankAddr2
        case 40002169: return ( &BankAddr3_ ); break; // BankAddr3
        case 40002170: return ( &BankAddr4_ ); break; // BankAddr4
        case 40002171: return ( &BankAddr5_ ); break; // BankAddr5
        case 40002146: return ( &BankContact_ ); break; // BankContact
        case 40002144: return ( &BankCountry_ ); break; // BankCountry
        case 40002142: return ( &BankPostal_ ); break; // BankPostal
        case 40002123: return ( &BankIdValue_ ); break; // BankIdValue
        case 40002283: return ( &BankId_ ); break; // BankId
        case 40002217: return ( &TransSeq_ ); break; // TransSeq
        case 40000228: return ( &VersionNum_ ); break; // VersionNum
        case 40002302: return ( &ClientTradeId_ ); break; // ClientTradeId
        case 40002278: return ( &DSCOverrideCode_ ); break; // DSCOverrideCode
        case 40002279: return ( &DSCOverrideAmt_ ); break; // DSCOverrideAmt
        case 40002495: return ( &CreateSplitCom_ ); break; // CreateSplitCom
        case 40002585: return ( &ExchInFee_ ); break; // ExchInFee
        case 40002586: return ( &ExchInFlatPercent_ ); break; // ExchInFlatPercent
        case 40000642: return ( &PayReason1_ ); break; // PayReason1
        case 40000643: return ( &PayReason2_ ); break; // PayReason2
        case 40003100: return ( &BankChrgs_ ); break; // BankChrgs
        case 40003139: return ( &ValueDate_ ); break; // ValueDate
        case 40003095: return ( &PayMethod_ ); break; // PayMethod
        case 40003522: return ( &NetworkID_ ); break; // NetworkID
        case 40003523: return ( &ExtTransNum_ ); break; // ExtTransNum
        case 40003524: return ( &SendRefNum_ ); break; // SendRefNum
        case 40003525: return ( &PartRefNum_ ); break; // PartRefNum
        case 40003526: return ( &MasterRefNum_ ); break; // MasterRefNum
        case 40003788: return ( &ExchOutFee_ ); break; // ExchOutFee
        case 40003789: return ( &ExchOutFlatPrcnt_ ); break; // ExchOutFlatPrcnt
        case 40003825: return ( &ChargeERSTTRFee_ ); break; // ChargeERSTTRFee
        case 40004022: return ( &ChargeWDFee_ ); break; // ChargeWDFee
        case 40000844: return ( &FedRate_ ); break; // FedRate
        case 40003390: return ( &TransRatePUDFed_ ); break; // TransRatePUDFed
        case 40000846: return ( &ProvRate_ ); break; // ProvRate
        case 40003391: return ( &TransRatePUDProv_ ); break; // TransRatePUDProv
        case 40000662: return ( &OverrideTax_ ); break; // OverrideTax
        case 40004124: return ( &SetFromAsDefault_ ); break; // SetFromAsDefault
        case 40004136: return ( &BorrowedFunds_ ); break; // BorrowedFunds
        case 40004275: return ( &FrSettlLocCode_ ); break; // FrSettlLocCode
        case 40004276: return ( &FrDeliveryTo_ ); break; // FrDeliveryTo
        case 40004277: return ( &FrSettlLocDescription_ ); break; // FrSettlLocDescription
        case 40004278: return ( &FrInFavourOf_ ); break; // FrInFavourOf
        case 40004279: return ( &FrForAccount_ ); break; // FrForAccount
        case 40004280: return ( &FrClearingMethod_ ); break; // FrClearingMethod
        case 40004281: return ( &ToSettlLocCode_ ); break; // ToSettlLocCode
        case 40004282: return ( &ToDeliveryTo_ ); break; // ToDeliveryTo
        case 40004283: return ( &ToSettlLocDescription_ ); break; // ToSettlLocDescription
        case 40004284: return ( &ToInFavourOf_ ); break; // ToInFavourOf
        case 40004285: return ( &ToForAccount_ ); break; // ToForAccount
        case 40004286: return ( &ToClearingMethod_ ); break; // ToClearingMethod
        case 40004311: return ( &FeeTo_ ); break; // FeeTo
        case 40004368: return ( &ADLFeeCharge_ ); break; // ADLFeeCharge
        case 40004484: return ( &LSIFCode_ ); break; // LSIFCode
        case 40004591: return ( &AcqFeeOption_ ); break; // AcqFeeOption
        case 40004607: return ( &DiscountRate_ ); break; // DiscountRate
        case 40004592: return ( &SettleDateOverriden_ ); break; // SettleDateOverriden
        case 40004597: return ( &ForceVerify_ ); break; // ForceVerify
        case 40004804: return ( &FrSettlInstrCode_ ); break; // FrSettlInstrCode
        case 40004807: return ( &ToSettlInstrCode_ ); break; // ToSettlInstrCode
        case 40004712: return ( &FundBrokerCode_ ); break; // FundBrokerCode
        case 40004789: return ( &AggregateOption_ ); break; // AggregateOption
        case 40004778: return ( &ConfirmRequired_ ); break; // ConfirmRequired
        case 40004779: return ( &AggOrdAdjustNum_ ); break; // AggOrdAdjustNum
        case 40004811: return ( &RqdRefresh_ ); break; // RqdRefresh
        case 40004972: return ( &OtherConfirmType_ ); break; // OtherConfirmType
        case 40004973: return ( &ExternalPrice_ ); break; // ExternalPrice
        case 40004974: return ( &ExternalSettleDate_ ); break; // ExternalSettleDate
        case 40004975: return ( &ExternalSettleAmt_ ); break; // ExternalSettleAmt
        case 40005128: return ( &ROAAmount_ ); break; // ROAAmount
        case 40005232: return ( &AdjTransNum_ ); break; // AdjTransNum
        case 40005235: return ( &Cost_ ); break; // Cost
        case 40005234: return ( &TIS_ ); break; // TIS
        case 40005362: return ( &OverrideCost_ ); break; // OverrideCost
        case 40005361: return ( &OverrideTIS_ ); break; // OverrideTIS
        case 40005380: return ( &MCHFileIndicator_ ); break; // MCHFileIndicator
        case 40005381: return ( &SecRecFileIndicator_ ); break; // SecRecFileIndicator
        case 40005415: return ( &ESGSettle_ ); break; // ESGSettle
        case 40005492: return ( &PayInstrOption_ ); break; // PayInstrOption
        case 40005571: return ( &SettleInDate_ ); break; // SettleInDate
        case 40005637: return ( &CloneAcctAMS_ ); break; // CloneAcctAMS
        case 40005669: return ( &MFPayment_ ); break; // MFPayment
        case 40001212: return ( &WorkType_ ); break; // WorkType
        case 40005718: return ( &AWDCrda_ ); break; // AWDCrda
        case 40005903: return ( &LinkedEntityId_ ); break; // LinkedEntityId
        case 40006058: return ( &BnkAcctIDLink_ ); break; // BnkAcctIDLink
        case 40006172: return ( &AssocTransId_ ); break; // AssocTransId
        case 40006143: return ( &GRRepayReason_ ); break; // GRRepayReason
        case 40006098: return ( &RESPReportHRDC_ ); break; // RESPReportHRDC
        case 40006162: return ( &CourseStart_ ); break; // CourseStart
        case 40006163: return ( &CourseLen_ ); break; // CourseLen
        case 40006164: return ( &PSEProgramLen_ ); break; // PSEProgramLen
        case 40006166: return ( &PSEProgramType_ ); break; // PSEProgramType
        case 40006168: return ( &PSEProgramYear_ ); break; // PSEProgramYear
        case 40006170: return ( &EduInstPstl_ ); break; // EduInstPstl
        case 40006085: return ( &Tainted_ ); break; // Tainted
        case 40006142: return ( &OCRdmYear_ ); break; // OCRdmYear
        case 40001519: return ( &RESPLetter_ ); break; // RESPLetter
        case 40001521: return ( &RESPTransStat_ ); break; // RESPTransStat
        case 40006181: return ( &FromPlanNum_ ); break; // FromPlanNum
        case 40006183: return ( &FromContractId_ ); break; // FromContractId
        case 40006182: return ( &ToPlanNum_ ); break; // ToPlanNum
        case 40006184: return ( &ToContractId_ ); break; // ToContractId
        case 40006185: return ( &InceptionDate_ ); break; // InceptionDate
        case 40006186: return ( &TerminationDate_ ); break; // TerminationDate
        case 40006187: return ( &NEQ1_ ); break; // NEQ1
        case 40006188: return ( &NEQ2_ ); break; // NEQ2
        case 40006254: return ( &RESPContrDetlTaxYear_ ); break; // RESPContrDetlTaxYear
        case 40006215: return ( &AcctLvlOverride_ ); break; // AcctLvlOverride
        case 40006268: return ( &AssistedContrAmt_ ); break; // AssistedContrAmt
        case 40006331: return ( &AcctOwnerID_ ); break; // AcctOwnerID
        case 40006366: return ( &ToFlatPercent_ ); break; // ToFlatPercent
        case 40006383: return ( &NetworkRespRequired_ ); break; // NetworkRespRequired
        case 40006422: return ( &EAPCESGPaid_ ); break; // EAPCESGPaid
        case 40006509: return ( &IntInvestType_ ); break; // IntInvestType
        case 40006504: return ( &IntCalcMthd_ ); break; // IntCalcMthd
        case 40006503: return ( &InvestTerm_ ); break; // InvestTerm
        case 40006600: return ( &GIMaturityDate_ ); break; // GIMaturityDate
        case 40006511: return ( &IntCredFreq_ ); break; // IntCredFreq
        case 40006506: return ( &NextIntCredDate_ ); break; // NextIntCredDate
        case 40006507: return ( &CommRedRate_ ); break; // CommRedRate
        case 40006512: return ( &AddlAmt_ ); break; // AddlAmt
        case 40006434: return ( &ForcedRate_ ); break; // ForcedRate
        case 40000741: return ( &IntRate_ ); break; // IntRate
        case 40006516: return ( &InvestStatus_ ); break; // InvestStatus
        case 40006517: return ( &IsGIFund_ ); break; // IsGIFund
        case 40006655: return ( &PendTrdContract_ ); break; // PendTrdContract
        case 40006654: return ( &PFCrystalisation_ ); break; // PFCrystalisation
        case 40006656: return ( &ValuationDt_ ); break; // ValuationDt
        case 40006601: return ( &PaymentInfo_ ); break; // PaymentInfo
        case 40006712: return ( &RedemOrder_ ); break; // RedemOrder
        case 40006813: return ( &GuaranteesOverride_ ); break; // GuaranteesOverride
        case 40006944: return ( &RightToCancel_ ); break; // RightToCancel
        case 40006963: return ( &RDRAdvice_ ); break; // RDRAdvice
        case 40006981: return ( &SDRTExemptCode_ ); break; // SDRTExemptCode
        case 40007020: return ( &PSDAdvice_ ); break; // PSDAdvice
        case 40007021: return ( &PymtRoutingMthd_ ); break; // PymtRoutingMthd
        case 40007029: return ( &EventReceiptDate_ ); break; // EventReceiptDate
        case 40007030: return ( &EventReceiptTime_ ); break; // EventReceiptTime
        case 40007194: return ( &SourceOfTrade_ ); break; // SourceOfTrade
        case 40007195: return ( &ChannelOfTrade_ ); break; // ChannelOfTrade
        case 40007196: return ( &Platform_ ); break; // Platform
        case 40007321: return ( &SettleNetwork_ ); break; // SettleNetwork
        case 40007313: return ( &NegMoneyMktInt_ ); break; // NegMoneyMktInt
        case 40007315: return ( &ReinvestmentRate_ ); break; // ReinvestmentRate
        case 40007310: return ( &NumUnitEligDividends_ ); break; // NumUnitEligDividends
        case 40007311: return ( &NumUnitDividends_ ); break; // NumUnitDividends
        case 40007340: return ( &DivUnitId_ ); break; // DivUnitId
        case 40007341: return ( &ReInvUnitId_ ); break; // ReInvUnitId
        case 40007348: return ( &DeliveryNetwork_ ); break; // DeliveryNetwork
        case 40007439: return ( &ToCashMsgType_ ); break; // ToCashMsgType
        case 40007441: return ( &ToIntermediaryBank_ ); break; // ToIntermediaryBank
        case 40007442: return ( &ToReceivingBank_ ); break; // ToReceivingBank
        case 40007443: return ( &ToBeneficiary_ ); break; // ToBeneficiary
        case 40007444: return ( &ToSpecialInstructions_ ); break; // ToSpecialInstructions
        case 40007440: return ( &FrCashMsgType_ ); break; // FrCashMsgType
        case 40007445: return ( &FrIntermediaryBank_ ); break; // FrIntermediaryBank
        case 40007446: return ( &FrReceivingBank_ ); break; // FrReceivingBank
        case 40007447: return ( &FrBeneficiary_ ); break; // FrBeneficiary
        case 40007448: return ( &FrSpecialInstructions_ ); break; // FrSpecialInstructions
        case 40007117: return ( &G1Impact_ ); break; // G1Impact
        case 40007118: return ( &G2Impact_ ); break; // G2Impact
        case 40007490: return ( &CrossSysAcctNum_ ); break; // CrossSysAcctNum
        case 40007493: return ( &AggregationType_ ); break; // AggregationType
        case 40007517: return ( &SourceofFundsChecked_ ); break; // SourceofFundsChecked
        case 40007614: return ( &ExternalInstitution_ ); break; // ExternalInstitution
        case 40007661: return ( &RefundAmtOpt_ ); break; // RefundAmtOpt
        case 40007705: return ( &Deconversion_ ); break; // Deconversion
        case 40007775: return ( &OrderRouting_ ); break; // OrderRouting
        case 40007782: return ( &TradeInDate_ ); break; // TradeInDate
        case 40007783: return ( &ValuationInDt_ ); break; // ValuationInDt
        case 40007789: return ( &FrCSDLocation_ ); break; // FrCSDLocation
        case 40007790: return ( &FrCSDAcctNum_ ); break; // FrCSDAcctNum
        case 40007791: return ( &ToCSDLocation_ ); break; // ToCSDLocation
        case 40007792: return ( &ToCSDAcctNum_ ); break; // ToCSDAcctNum
        case 40007796: return ( &PricingCode_ ); break; // PricingCode
        case 40007850: return ( &DilutionLinkNum_ ); break; // DilutionLinkNum
        case 40007875: return ( &PriceInCode_ ); break; // PriceInCode
        case 40007893: return ( &FullMoneyOutIndc_ ); break; // FullMoneyOutIndc
        case 40007900: return ( &ExtAccount_ ); break; // ExtAccount
        case 40007901: return ( &ExtSpecimenPlanNo_ ); break; // ExtSpecimenPlanNo
        case 40007902: return ( &NontaxContrib_ ); break; // NontaxContrib
        case 40007903: return ( &Rollovers_ ); break; // Rollovers
        case 40007904: return ( &CDSGrant_ ); break; // CDSGrant
        case 40007905: return ( &CDSBond_ ); break; // CDSBond
        case 40007906: return ( &CurrYrFMV_ ); break; // CurrYrFMV
        case 40007907: return ( &PrevYrGrantBond_ ); break; // PrevYrGrantBond
        case 40007908: return ( &PrevYrContrib_ ); break; // PrevYrContrib
        case 40007909: return ( &PrevYrNonTaxRedAmt_ ); break; // PrevYrNonTaxRedAmt
        case 40007910: return ( &PrevYrTaxRedAmt_ ); break; // PrevYrTaxRedAmt
        case 40007911: return ( &CurrYrNonTaxRedAmt_ ); break; // CurrYrNonTaxRedAmt
        case 40007912: return ( &CurrYrTaxRedAmt_ ); break; // CurrYrTaxRedAmt
        case 40007896: return ( &GateOverrideIndicator_ ); break; // GateOverrideIndicator
        case 40007917: return ( &RDSPPaymtDate_ ); break; // RDSPPaymtDate
        case 40007932: return ( &MatchingKey_ ); break; // MatchingKey
        case 40000120: return ( &RepeatCount_ ); break; // RepeatCount
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0115_REQ::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0115_REQ* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0115_REQ::getElementByIndex( unsigned int iField )
{
    if ( iField >=0 && iField < 289 )
    {
        BFDataField* pField = aFlds_[iField];
        if( NULL == pField )
        {
            switch(iField)
            {
                case 0: aFlds_[0] = &SessionId_; break;
                case 1: aFlds_[1] = &User_Id_; break;
                case 2: aFlds_[2] = &LanguageCode_; break;
                case 3: aFlds_[3] = &CompanyId_; break;
                case 4: aFlds_[4] = &RunMode_; break;
                case 5: aFlds_[5] = &AccountNum_; break;
                case 6: aFlds_[6] = &TradesTransType_; break;
                case 7: aFlds_[7] = &Broker_; break;
                case 8: aFlds_[8] = &Branch_; break;
                case 9: aFlds_[9] = &SlsrepCode_; break;
                case 10: aFlds_[10] = &Amount_; break;
                case 11: aFlds_[11] = &AmtType_; break;
                case 12: aFlds_[12] = &GrossOrNet_; break;
                case 13: aFlds_[13] = &Fee_; break;
                case 14: aFlds_[14] = &FlatPercent_; break;
                case 15: aFlds_[15] = &TradesPayType_; break;
                case 16: aFlds_[16] = &SrcOfFund_; break;
                case 17: aFlds_[17] = &EffectiveDate_; break;
                case 18: aFlds_[18] = &SettleDate_; break;
                case 19: aFlds_[19] = &DealDate_; break;
                case 20: aFlds_[20] = &DealTime_; break;
                case 21: aFlds_[21] = &OrderType_; break;
                case 22: aFlds_[22] = &OrderSource_; break;
                case 23: aFlds_[23] = &FromFund_; break;
                case 24: aFlds_[24] = &FromClass_; break;
                case 25: aFlds_[25] = &ToFund_; break;
                case 26: aFlds_[26] = &ToClass_; break;
                case 27: aFlds_[27] = &AccountTo_; break;
                case 28: aFlds_[28] = &RedCode_; break;
                case 29: aFlds_[29] = &DepositType_; break;
                case 30: aFlds_[30] = &DepositDate_; break;
                case 31: aFlds_[31] = &ExchRate_; break;
                case 32: aFlds_[32] = &UseEnteredFee_; break;
                case 33: aFlds_[33] = &Accountable_; break;
                case 34: aFlds_[34] = &BackDatedReason_; break;
                case 35: aFlds_[35] = &GoodBad_; break;
                case 36: aFlds_[36] = &CertRequired_; break;
                case 37: aFlds_[37] = &RecptIssued_; break;
                case 38: aFlds_[38] = &WireOrdNum_; break;
                case 39: aFlds_[39] = &GICId_; break;
                case 40: aFlds_[40] = &Remarks1_; break;
                case 41: aFlds_[41] = &Remarks2_; break;
                case 42: aFlds_[42] = &Remarks3_; break;
                case 43: aFlds_[43] = &ProvSales_; break;
                case 44: aFlds_[44] = &SettleCurrency_; break;
                case 45: aFlds_[45] = &SettledBy_; break;
                case 46: aFlds_[46] = &SettleType_; break;
                case 47: aFlds_[47] = &ExpGNSettle_; break;
                case 48: aFlds_[48] = &SrcOfAccount_; break;
                case 49: aFlds_[49] = &DepId_; break;
                case 50: aFlds_[50] = &SettleSource_; break;
                case 51: aFlds_[51] = &CashDate_; break;
                case 52: aFlds_[52] = &BatchName_; break;
                case 53: aFlds_[53] = &Trace_; break;
                case 54: aFlds_[54] = &SetAsDefault_; break;
                case 55: aFlds_[55] = &InterDetlRid_; break;
                case 56: aFlds_[56] = &InstCode_; break;
                case 57: aFlds_[57] = &SwiftCode_; break;
                case 58: aFlds_[58] = &RefNumber_; break;
                case 59: aFlds_[59] = &TransitNo_; break;
                case 60: aFlds_[60] = &BankAcctNum_; break;
                case 61: aFlds_[61] = &BankAcctName_; break;
                case 62: aFlds_[62] = &BankAcctType_; break;
                case 63: aFlds_[63] = &TransNum_; break;
                case 64: aFlds_[64] = &CreateRep_; break;
                case 65: aFlds_[65] = &InstName_; break;
                case 66: aFlds_[66] = &EntityType_; break;
                case 67: aFlds_[67] = &EntityTypeSeq_; break;
                case 68: aFlds_[68] = &TransId_; break;
                case 69: aFlds_[69] = &RoundFlag_; break;
                case 70: aFlds_[70] = &SuppressCode_; break;
                case 71: aFlds_[71] = &FeeCurrency_; break;
                case 72: aFlds_[72] = &AddrCode_; break;
                case 73: aFlds_[73] = &DeliveryMethod_; break;
                case 74: aFlds_[74] = &Track_; break;
                case 75: aFlds_[75] = &Activity_; break;
                case 76: aFlds_[76] = &ExternalId_; break;
                case 77: aFlds_[77] = &BankIdType_; break;
                case 78: aFlds_[78] = &BankIdTypeCB_; break;
                case 79: aFlds_[79] = &InstNameCB_; break;
                case 80: aFlds_[80] = &TransitNoCB_; break;
                case 81: aFlds_[81] = &BankIdValueCB_; break;
                case 82: aFlds_[82] = &FFC_; break;
                case 83: aFlds_[83] = &FFC1_; break;
                case 84: aFlds_[84] = &ACHProcessor_; break;
                case 85: aFlds_[85] = &BankContactCB_; break;
                case 86: aFlds_[86] = &BankCountryCB_; break;
                case 87: aFlds_[87] = &BankPostalCB_; break;
                case 88: aFlds_[88] = &BankAddrCB1_; break;
                case 89: aFlds_[89] = &BankAddrCB2_; break;
                case 90: aFlds_[90] = &BankAddrCB3_; break;
                case 91: aFlds_[91] = &BankAddrCB4_; break;
                case 92: aFlds_[92] = &BankAddrCB5_; break;
                case 93: aFlds_[93] = &BankAddr1_; break;
                case 94: aFlds_[94] = &BankAddr2_; break;
                case 95: aFlds_[95] = &BankAddr3_; break;
                case 96: aFlds_[96] = &BankAddr4_; break;
                case 97: aFlds_[97] = &BankAddr5_; break;
                case 98: aFlds_[98] = &BankContact_; break;
                case 99: aFlds_[99] = &BankCountry_; break;
                case 100: aFlds_[100] = &BankPostal_; break;
                case 101: aFlds_[101] = &BankIdValue_; break;
                case 102: aFlds_[102] = &BankId_; break;
                case 103: aFlds_[103] = &TransSeq_; break;
                case 104: aFlds_[104] = &VersionNum_; break;
                case 105: aFlds_[105] = &ClientTradeId_; break;
                case 106: aFlds_[106] = &DSCOverrideCode_; break;
                case 107: aFlds_[107] = &DSCOverrideAmt_; break;
                case 108: aFlds_[108] = &CreateSplitCom_; break;
                case 109: aFlds_[109] = &ExchInFee_; break;
                case 110: aFlds_[110] = &ExchInFlatPercent_; break;
                case 111: aFlds_[111] = &PayReason1_; break;
                case 112: aFlds_[112] = &PayReason2_; break;
                case 113: aFlds_[113] = &BankChrgs_; break;
                case 114: aFlds_[114] = &ValueDate_; break;
                case 115: aFlds_[115] = &PayMethod_; break;
                case 116: aFlds_[116] = &NetworkID_; break;
                case 117: aFlds_[117] = &ExtTransNum_; break;
                case 118: aFlds_[118] = &SendRefNum_; break;
                case 119: aFlds_[119] = &PartRefNum_; break;
                case 120: aFlds_[120] = &MasterRefNum_; break;
                case 121: aFlds_[121] = &ExchOutFee_; break;
                case 122: aFlds_[122] = &ExchOutFlatPrcnt_; break;
                case 123: aFlds_[123] = &ChargeERSTTRFee_; break;
                case 124: aFlds_[124] = &ChargeWDFee_; break;
                case 125: aFlds_[125] = &FedRate_; break;
                case 126: aFlds_[126] = &TransRatePUDFed_; break;
                case 127: aFlds_[127] = &ProvRate_; break;
                case 128: aFlds_[128] = &TransRatePUDProv_; break;
                case 129: aFlds_[129] = &OverrideTax_; break;
                case 130: aFlds_[130] = &SetFromAsDefault_; break;
                case 131: aFlds_[131] = &BorrowedFunds_; break;
                case 132: aFlds_[132] = &FrSettlLocCode_; break;
                case 133: aFlds_[133] = &FrDeliveryTo_; break;
                case 134: aFlds_[134] = &FrSettlLocDescription_; break;
                case 135: aFlds_[135] = &FrInFavourOf_; break;
                case 136: aFlds_[136] = &FrForAccount_; break;
                case 137: aFlds_[137] = &FrClearingMethod_; break;
                case 138: aFlds_[138] = &ToSettlLocCode_; break;
                case 139: aFlds_[139] = &ToDeliveryTo_; break;
                case 140: aFlds_[140] = &ToSettlLocDescription_; break;
                case 141: aFlds_[141] = &ToInFavourOf_; break;
                case 142: aFlds_[142] = &ToForAccount_; break;
                case 143: aFlds_[143] = &ToClearingMethod_; break;
                case 144: aFlds_[144] = &FeeTo_; break;
                case 145: aFlds_[145] = &ADLFeeCharge_; break;
                case 146: aFlds_[146] = &LSIFCode_; break;
                case 147: aFlds_[147] = &AcqFeeOption_; break;
                case 148: aFlds_[148] = &DiscountRate_; break;
                case 149: aFlds_[149] = &SettleDateOverriden_; break;
                case 150: aFlds_[150] = &ForceVerify_; break;
                case 151: aFlds_[151] = &FrSettlInstrCode_; break;
                case 152: aFlds_[152] = &ToSettlInstrCode_; break;
                case 153: aFlds_[153] = &FundBrokerCode_; break;
                case 154: aFlds_[154] = &AggregateOption_; break;
                case 155: aFlds_[155] = &ConfirmRequired_; break;
                case 156: aFlds_[156] = &AggOrdAdjustNum_; break;
                case 157: aFlds_[157] = &RqdRefresh_; break;
                case 158: aFlds_[158] = &OtherConfirmType_; break;
                case 159: aFlds_[159] = &ExternalPrice_; break;
                case 160: aFlds_[160] = &ExternalSettleDate_; break;
                case 161: aFlds_[161] = &ExternalSettleAmt_; break;
                case 162: aFlds_[162] = &ROAAmount_; break;
                case 163: aFlds_[163] = &AdjTransNum_; break;
                case 164: aFlds_[164] = &Cost_; break;
                case 165: aFlds_[165] = &TIS_; break;
                case 166: aFlds_[166] = &OverrideCost_; break;
                case 167: aFlds_[167] = &OverrideTIS_; break;
                case 168: aFlds_[168] = &MCHFileIndicator_; break;
                case 169: aFlds_[169] = &SecRecFileIndicator_; break;
                case 170: aFlds_[170] = &ESGSettle_; break;
                case 171: aFlds_[171] = &PayInstrOption_; break;
                case 172: aFlds_[172] = &SettleInDate_; break;
                case 173: aFlds_[173] = &CloneAcctAMS_; break;
                case 174: aFlds_[174] = &MFPayment_; break;
                case 175: aFlds_[175] = &WorkType_; break;
                case 176: aFlds_[176] = &AWDCrda_; break;
                case 177: aFlds_[177] = &LinkedEntityId_; break;
                case 178: aFlds_[178] = &BnkAcctIDLink_; break;
                case 179: aFlds_[179] = &AssocTransId_; break;
                case 180: aFlds_[180] = &GRRepayReason_; break;
                case 181: aFlds_[181] = &RESPReportHRDC_; break;
                case 182: aFlds_[182] = &CourseStart_; break;
                case 183: aFlds_[183] = &CourseLen_; break;
                case 184: aFlds_[184] = &PSEProgramLen_; break;
                case 185: aFlds_[185] = &PSEProgramType_; break;
                case 186: aFlds_[186] = &PSEProgramYear_; break;
                case 187: aFlds_[187] = &EduInstPstl_; break;
                case 188: aFlds_[188] = &Tainted_; break;
                case 189: aFlds_[189] = &OCRdmYear_; break;
                case 190: aFlds_[190] = &RESPLetter_; break;
                case 191: aFlds_[191] = &RESPTransStat_; break;
                case 192: aFlds_[192] = &FromPlanNum_; break;
                case 193: aFlds_[193] = &FromContractId_; break;
                case 194: aFlds_[194] = &ToPlanNum_; break;
                case 195: aFlds_[195] = &ToContractId_; break;
                case 196: aFlds_[196] = &InceptionDate_; break;
                case 197: aFlds_[197] = &TerminationDate_; break;
                case 198: aFlds_[198] = &NEQ1_; break;
                case 199: aFlds_[199] = &NEQ2_; break;
                case 200: aFlds_[200] = &RESPContrDetlTaxYear_; break;
                case 201: aFlds_[201] = &AcctLvlOverride_; break;
                case 202: aFlds_[202] = &AssistedContrAmt_; break;
                case 203: aFlds_[203] = &AcctOwnerID_; break;
                case 204: aFlds_[204] = &ToFlatPercent_; break;
                case 205: aFlds_[205] = &NetworkRespRequired_; break;
                case 206: aFlds_[206] = &EAPCESGPaid_; break;
                case 207: aFlds_[207] = &IntInvestType_; break;
                case 208: aFlds_[208] = &IntCalcMthd_; break;
                case 209: aFlds_[209] = &InvestTerm_; break;
                case 210: aFlds_[210] = &GIMaturityDate_; break;
                case 211: aFlds_[211] = &IntCredFreq_; break;
                case 212: aFlds_[212] = &NextIntCredDate_; break;
                case 213: aFlds_[213] = &CommRedRate_; break;
                case 214: aFlds_[214] = &AddlAmt_; break;
                case 215: aFlds_[215] = &ForcedRate_; break;
                case 216: aFlds_[216] = &IntRate_; break;
                case 217: aFlds_[217] = &InvestStatus_; break;
                case 218: aFlds_[218] = &IsGIFund_; break;
                case 219: aFlds_[219] = &PendTrdContract_; break;
                case 220: aFlds_[220] = &PFCrystalisation_; break;
                case 221: aFlds_[221] = &ValuationDt_; break;
                case 222: aFlds_[222] = &PaymentInfo_; break;
                case 223: aFlds_[223] = &RedemOrder_; break;
                case 224: aFlds_[224] = &GuaranteesOverride_; break;
                case 225: aFlds_[225] = &RightToCancel_; break;
                case 226: aFlds_[226] = &RDRAdvice_; break;
                case 227: aFlds_[227] = &SDRTExemptCode_; break;
                case 228: aFlds_[228] = &PSDAdvice_; break;
                case 229: aFlds_[229] = &PymtRoutingMthd_; break;
                case 230: aFlds_[230] = &EventReceiptDate_; break;
                case 231: aFlds_[231] = &EventReceiptTime_; break;
                case 232: aFlds_[232] = &SourceOfTrade_; break;
                case 233: aFlds_[233] = &ChannelOfTrade_; break;
                case 234: aFlds_[234] = &Platform_; break;
                case 235: aFlds_[235] = &SettleNetwork_; break;
                case 236: aFlds_[236] = &NegMoneyMktInt_; break;
                case 237: aFlds_[237] = &ReinvestmentRate_; break;
                case 238: aFlds_[238] = &NumUnitEligDividends_; break;
                case 239: aFlds_[239] = &NumUnitDividends_; break;
                case 240: aFlds_[240] = &DivUnitId_; break;
                case 241: aFlds_[241] = &ReInvUnitId_; break;
                case 242: aFlds_[242] = &DeliveryNetwork_; break;
                case 243: aFlds_[243] = &ToCashMsgType_; break;
                case 244: aFlds_[244] = &ToIntermediaryBank_; break;
                case 245: aFlds_[245] = &ToReceivingBank_; break;
                case 246: aFlds_[246] = &ToBeneficiary_; break;
                case 247: aFlds_[247] = &ToSpecialInstructions_; break;
                case 248: aFlds_[248] = &FrCashMsgType_; break;
                case 249: aFlds_[249] = &FrIntermediaryBank_; break;
                case 250: aFlds_[250] = &FrReceivingBank_; break;
                case 251: aFlds_[251] = &FrBeneficiary_; break;
                case 252: aFlds_[252] = &FrSpecialInstructions_; break;
                case 253: aFlds_[253] = &G1Impact_; break;
                case 254: aFlds_[254] = &G2Impact_; break;
                case 255: aFlds_[255] = &CrossSysAcctNum_; break;
                case 256: aFlds_[256] = &AggregationType_; break;
                case 257: aFlds_[257] = &SourceofFundsChecked_; break;
                case 258: aFlds_[258] = &ExternalInstitution_; break;
                case 259: aFlds_[259] = &RefundAmtOpt_; break;
                case 260: aFlds_[260] = &Deconversion_; break;
                case 261: aFlds_[261] = &OrderRouting_; break;
                case 262: aFlds_[262] = &TradeInDate_; break;
                case 263: aFlds_[263] = &ValuationInDt_; break;
                case 264: aFlds_[264] = &FrCSDLocation_; break;
                case 265: aFlds_[265] = &FrCSDAcctNum_; break;
                case 266: aFlds_[266] = &ToCSDLocation_; break;
                case 267: aFlds_[267] = &ToCSDAcctNum_; break;
                case 268: aFlds_[268] = &PricingCode_; break;
                case 269: aFlds_[269] = &DilutionLinkNum_; break;
                case 270: aFlds_[270] = &PriceInCode_; break;
                case 271: aFlds_[271] = &FullMoneyOutIndc_; break;
                case 272: aFlds_[272] = &ExtAccount_; break;
                case 273: aFlds_[273] = &ExtSpecimenPlanNo_; break;
                case 274: aFlds_[274] = &NontaxContrib_; break;
                case 275: aFlds_[275] = &Rollovers_; break;
                case 276: aFlds_[276] = &CDSGrant_; break;
                case 277: aFlds_[277] = &CDSBond_; break;
                case 278: aFlds_[278] = &CurrYrFMV_; break;
                case 279: aFlds_[279] = &PrevYrGrantBond_; break;
                case 280: aFlds_[280] = &PrevYrContrib_; break;
                case 281: aFlds_[281] = &PrevYrNonTaxRedAmt_; break;
                case 282: aFlds_[282] = &PrevYrTaxRedAmt_; break;
                case 283: aFlds_[283] = &CurrYrNonTaxRedAmt_; break;
                case 284: aFlds_[284] = &CurrYrTaxRedAmt_; break;
                case 285: aFlds_[285] = &GateOverrideIndicator_; break;
                case 286: aFlds_[286] = &RDSPPaymtDate_; break;
                case 287: aFlds_[287] = &RepeatCount_; break;
                case 288: aFlds_[288] = &RepeatCount_; break;
            }
            pField = aFlds_[iField];
            if( NULL == pField ) return( NULL );
        }
        return( pField );
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0115_REQ::getElementByIndex( unsigned int iField ) const
{
    return( ( const_cast< dsi_DSTC0115_REQ* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0115_REQ::getLargestDefinedField( void ) const
{
    return( 100 );
}

unsigned long dsi_DSTC0115_REQ::getDefinedByteLength( void ) const
{
    return( 10083 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0115_REQ::exists( const BFFieldId& id ) const
{
    return dsi_DSTC0115_REQ::fieldExists( id );
}

bool dsi_DSTC0115_REQ::fieldExists( const BFFieldId& id )
{
    switch( id.getId() )
    {
        case 40000005: return ( true );
        case 40000002: return ( true );
        case 40000030: return ( true );
        case 40000031: return ( true );
        case 40000990: return ( true );
        case 40000040: return ( true );
        case 40001378: return ( true );
        case 40000183: return ( true );
        case 40000184: return ( true );
        case 40000656: return ( true );
        case 40000231: return ( true );
        case 40000726: return ( true );
        case 40000234: return ( true );
        case 40000235: return ( true );
        case 40000658: return ( true );
        case 40001377: return ( true );
        case 40000255: return ( true );
        case 40000327: return ( true );
        case 40000348: return ( true );
        case 40000451: return ( true );
        case 40000452: return ( true );
        case 40000431: return ( true );
        case 40000461: return ( true );
        case 40000719: return ( true );
        case 40000720: return ( true );
        case 40000721: return ( true );
        case 40000722: return ( true );
        case 40000646: return ( true );
        case 40000435: return ( true );
        case 40000433: return ( true );
        case 40000449: return ( true );
        case 40000456: return ( true );
        case 40001351: return ( true );
        case 40000476: return ( true );
        case 40001353: return ( true );
        case 40000496: return ( true );
        case 40000675: return ( true );
        case 40000458: return ( true );
        case 40000432: return ( true );
        case 40001354: return ( true );
        case 40000478: return ( true );
        case 40000479: return ( true );
        case 40000480: return ( true );
        case 40000448: return ( true );
        case 40000455: return ( true );
        case 40000467: return ( true );
        case 40000465: return ( true );
        case 40000670: return ( true );
        case 40000460: return ( true );
        case 40000681: return ( true );
        case 40000463: return ( true );
        case 40000450: return ( true );
        case 40000653: return ( true );
        case 40001355: return ( true );
        case 40001036: return ( true );
        case 40001356: return ( true );
        case 40000244: return ( true );
        case 40000245: return ( true );
        case 40000246: return ( true );
        case 40000247: return ( true );
        case 40000248: return ( true );
        case 40000249: return ( true );
        case 40000253: return ( true );
        case 40000096: return ( true );
        case 40001006: return ( true );
        case 40000285: return ( true );
        case 40000604: return ( true );
        case 40001103: return ( true );
        case 40000063: return ( true );
        case 40000474: return ( true );
        case 40002015: return ( true );
        case 40000237: return ( true );
        case 40000277: return ( true );
        case 40002016: return ( true );
        case 40002065: return ( true );
        case 40002066: return ( true );
        case 40002077: return ( true );
        case 40002119: return ( true );
        case 40002121: return ( true );
        case 40002152: return ( true );
        case 40002125: return ( true );
        case 40002124: return ( true );
        case 40002148: return ( true );
        case 40002166: return ( true );
        case 40002150: return ( true );
        case 40002147: return ( true );
        case 40002145: return ( true );
        case 40002143: return ( true );
        case 40002172: return ( true );
        case 40002173: return ( true );
        case 40002174: return ( true );
        case 40002175: return ( true );
        case 40002176: return ( true );
        case 40002167: return ( true );
        case 40002168: return ( true );
        case 40002169: return ( true );
        case 40002170: return ( true );
        case 40002171: return ( true );
        case 40002146: return ( true );
        case 40002144: return ( true );
        case 40002142: return ( true );
        case 40002123: return ( true );
        case 40002283: return ( true );
        case 40002217: return ( true );
        case 40000228: return ( true );
        case 40002302: return ( true );
        case 40002278: return ( true );
        case 40002279: return ( true );
        case 40002495: return ( true );
        case 40002585: return ( true );
        case 40002586: return ( true );
        case 40000642: return ( true );
        case 40000643: return ( true );
        case 40003100: return ( true );
        case 40003139: return ( true );
        case 40003095: return ( true );
        case 40003522: return ( true );
        case 40003523: return ( true );
        case 40003524: return ( true );
        case 40003525: return ( true );
        case 40003526: return ( true );
        case 40003788: return ( true );
        case 40003789: return ( true );
        case 40003825: return ( true );
        case 40004022: return ( true );
        case 40000844: return ( true );
        case 40003390: return ( true );
        case 40000846: return ( true );
        case 40003391: return ( true );
        case 40000662: return ( true );
        case 40004124: return ( true );
        case 40004136: return ( true );
        case 40004275: return ( true );
        case 40004276: return ( true );
        case 40004277: return ( true );
        case 40004278: return ( true );
        case 40004279: return ( true );
        case 40004280: return ( true );
        case 40004281: return ( true );
        case 40004282: return ( true );
        case 40004283: return ( true );
        case 40004284: return ( true );
        case 40004285: return ( true );
        case 40004286: return ( true );
        case 40004311: return ( true );
        case 40004368: return ( true );
        case 40004484: return ( true );
        case 40004591: return ( true );
        case 40004607: return ( true );
        case 40004592: return ( true );
        case 40004597: return ( true );
        case 40004804: return ( true );
        case 40004807: return ( true );
        case 40004712: return ( true );
        case 40004789: return ( true );
        case 40004778: return ( true );
        case 40004779: return ( true );
        case 40004811: return ( true );
        case 40004972: return ( true );
        case 40004973: return ( true );
        case 40004974: return ( true );
        case 40004975: return ( true );
        case 40005128: return ( true );
        case 40005232: return ( true );
        case 40005235: return ( true );
        case 40005234: return ( true );
        case 40005362: return ( true );
        case 40005361: return ( true );
        case 40005380: return ( true );
        case 40005381: return ( true );
        case 40005415: return ( true );
        case 40005492: return ( true );
        case 40005571: return ( true );
        case 40005637: return ( true );
        case 40005669: return ( true );
        case 40001212: return ( true );
        case 40005718: return ( true );
        case 40005903: return ( true );
        case 40006058: return ( true );
        case 40006172: return ( true );
        case 40006143: return ( true );
        case 40006098: return ( true );
        case 40006162: return ( true );
        case 40006163: return ( true );
        case 40006164: return ( true );
        case 40006166: return ( true );
        case 40006168: return ( true );
        case 40006170: return ( true );
        case 40006085: return ( true );
        case 40006142: return ( true );
        case 40001519: return ( true );
        case 40001521: return ( true );
        case 40006181: return ( true );
        case 40006183: return ( true );
        case 40006182: return ( true );
        case 40006184: return ( true );
        case 40006185: return ( true );
        case 40006186: return ( true );
        case 40006187: return ( true );
        case 40006188: return ( true );
        case 40006254: return ( true );
        case 40006215: return ( true );
        case 40006268: return ( true );
        case 40006331: return ( true );
        case 40006366: return ( true );
        case 40006383: return ( true );
        case 40006422: return ( true );
        case 40006509: return ( true );
        case 40006504: return ( true );
        case 40006503: return ( true );
        case 40006600: return ( true );
        case 40006511: return ( true );
        case 40006506: return ( true );
        case 40006507: return ( true );
        case 40006512: return ( true );
        case 40006434: return ( true );
        case 40000741: return ( true );
        case 40006516: return ( true );
        case 40006517: return ( true );
        case 40006655: return ( true );
        case 40006654: return ( true );
        case 40006656: return ( true );
        case 40006601: return ( true );
        case 40006712: return ( true );
        case 40006813: return ( true );
        case 40006944: return ( true );
        case 40006963: return ( true );
        case 40006981: return ( true );
        case 40007020: return ( true );
        case 40007021: return ( true );
        case 40007029: return ( true );
        case 40007030: return ( true );
        case 40007194: return ( true );
        case 40007195: return ( true );
        case 40007196: return ( true );
        case 40007321: return ( true );
        case 40007313: return ( true );
        case 40007315: return ( true );
        case 40007310: return ( true );
        case 40007311: return ( true );
        case 40007340: return ( true );
        case 40007341: return ( true );
        case 40007348: return ( true );
        case 40007439: return ( true );
        case 40007441: return ( true );
        case 40007442: return ( true );
        case 40007443: return ( true );
        case 40007444: return ( true );
        case 40007440: return ( true );
        case 40007445: return ( true );
        case 40007446: return ( true );
        case 40007447: return ( true );
        case 40007448: return ( true );
        case 40007117: return ( true );
        case 40007118: return ( true );
        case 40007490: return ( true );
        case 40007493: return ( true );
        case 40007517: return ( true );
        case 40007614: return ( true );
        case 40007661: return ( true );
        case 40007705: return ( true );
        case 40007775: return ( true );
        case 40007782: return ( true );
        case 40007783: return ( true );
        case 40007789: return ( true );
        case 40007790: return ( true );
        case 40007791: return ( true );
        case 40007792: return ( true );
        case 40007796: return ( true );
        case 40007850: return ( true );
        case 40007875: return ( true );
        case 40007893: return ( true );
        case 40007900: return ( true );
        case 40007901: return ( true );
        case 40007902: return ( true );
        case 40007903: return ( true );
        case 40007904: return ( true );
        case 40007905: return ( true );
        case 40007906: return ( true );
        case 40007907: return ( true );
        case 40007908: return ( true );
        case 40007909: return ( true );
        case 40007910: return ( true );
        case 40007911: return ( true );
        case 40007912: return ( true );
        case 40007896: return ( true );
        case 40007917: return ( true );
        case 40007932: return ( true );
        case 40000120: return ( true );
    }
    return false;
}

