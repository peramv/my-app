// Data Field Properties
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015

#include "stdafx.h"




#include <bfdata/bfdataid.hpp>
#include "ifast_substitutions.h"
#include "ifast_masks.h"

namespace ifds
{
   extern const BFTextFieldId FeeWaived;
   extern const BFTextFieldId MarketMail;
   extern const BFTextFieldId Unseizable;
   extern const BFTextFieldId RegCompleted;
   extern const BFTextFieldId SupConf;
   extern const BFTextFieldId SupEmpConf;
   extern const BFTextFieldId InTrustFor;
   extern const BFTextFieldId Escrow;
   extern const BFTextFieldId AcctGroup;
   extern const BFTextFieldId AcctGroupName;
   extern const BFTextFieldId BrokerName;
   extern const BFTextFieldId BranchName;
   extern const BFTextFieldId SlsrepName;
   extern const BFTextFieldId SlsrepAltName;
   extern const BFDecimalFieldId AcctBalance;
   extern const BFDateFieldId Deff;
   extern const BFDateFieldId ProcessDate;
   extern const BFDateFieldId ModDate;
   extern const BFTextFieldId ModUser;
   extern const BFDataId DSTC0005_VW;
   extern const BFDataId DSTC0005_VWRepeat_Record;
   extern const BFTextFieldId TransNote;
   extern const BFTextFieldId Active;
   extern const BFDateFieldId EffectiveFrom;
   extern const BFDateFieldId CreatedOn;
   extern const BFTextFieldId CreatedBy;
   extern const BFDateFieldId ModifiedOn;
   extern const BFTextFieldId ModifiedBy;
   extern const BFNumericFieldId VersionNum;
   extern const BFDataId DSTC0006_VW;
   extern const BFDataId DSTC0006_VWRepeat_Record;
   extern const BFDecimalFieldId Amount;
   extern const BFTextFieldId AmountType;
   extern const BFTextFieldId AmountTypeDesc;
   extern const BFTextFieldId GrossOrNet;
   extern const BFDecimalFieldId Fee;
   extern const BFDecimalFieldId FeePercent;
   extern const BFTextFieldId FeeCurrency;
   extern const BFTextFieldId FeeCurrDesc;
   extern const BFDecimalFieldId AdminFeeAmt;
   extern const BFTextFieldId AdminFeeCurr;
   extern const BFTextFieldId AdminFeeCurrDesc;
   extern const BFTextFieldId PayType;
   extern const BFTextFieldId PayTypeDesc;
   extern const BFNumericFieldId InstCode;
   extern const BFDecimalFieldId SwiftCode;
   extern const BFDecimalFieldId RefNumber;
   extern const BFTextFieldId TransitNo;
   extern const BFTextFieldId BankAcctNum;
   extern const BFTextFieldId BankAcctName;
   extern const BFTextFieldId SourceOfBankAcct;
   extern const BFTextFieldId BankAcctCurrency;
   extern const BFTextFieldId BankCurrDesc;
   extern const BFTextFieldId BankAcctType;
   extern const BFTextFieldId BankAcctTypeDesc;
   extern const BFTextFieldId SrcOfFund;
   extern const BFTextFieldId SrcOFundDesc;
   extern const BFTextFieldId January;
   extern const BFTextFieldId February;
   extern const BFTextFieldId March;
   extern const BFTextFieldId April;
   extern const BFTextFieldId May;
   extern const BFTextFieldId June;
   extern const BFTextFieldId July;
   extern const BFTextFieldId August;
   extern const BFTextFieldId September;
   extern const BFTextFieldId October;
   extern const BFTextFieldId November;
   extern const BFTextFieldId December;
   extern const BFTextFieldId Quarterly;
   extern const BFTextFieldId Monthly;
   extern const BFTextFieldId BiMonthly;
   extern const BFTextFieldId EndOfMonth;
   extern const BFTextFieldId Weekly;
   extern const BFTextFieldId BiWeekly;
   extern const BFNumericFieldId DayOfWeek;
   extern const BFDateFieldId LastProcessDate;
   extern const BFTextFieldId AddrCode;
   extern const BFTextFieldId StatusCode;
   extern const BFDateFieldId StopDate;
   extern const BFTextFieldId AddrLine1;
   extern const BFTextFieldId AddrLine2;
   extern const BFTextFieldId AddrLine3;
   extern const BFTextFieldId AddrLine4;
   extern const BFTextFieldId AddrLine5;
   extern const BFTextFieldId InstName;
   extern const BFTextFieldId rxFundCode;
   extern const BFTextFieldId rxClassCode;
   extern const BFDataId DSTC0007_VW;
   extern const BFDataId DSTC0007_VWRepeat_Record;
   extern const BFNumericFieldId PACSWPId;
   extern const BFDecimalFieldId Percentage;
   extern const BFDecimalFieldId AllocAmount;
   extern const BFDataId DSTC0010_VW;
   extern const BFTextFieldId BrokerSalut;
   extern const BFTextFieldId SalesRepName;
   extern const BFTextFieldId SalesRepSalut;
   extern const BFTextFieldId PhoneNumber;
   extern const BFTextFieldId FaxNumber;
   extern const BFTextFieldId AddrCntryCode;
   extern const BFDataId DSTC0011_VW;
   extern const BFTextFieldId Gender;
   extern const BFTextFieldId MaritalCode;
   extern const BFTextFieldId MaritalDesc;
   extern const BFTextFieldId Employer;
   extern const BFDecimalFieldId EmployedYrs;
   extern const BFTextFieldId IndustryCode;
   extern const BFTextFieldId IndustryDesc;
   extern const BFTextFieldId OccupationCode;
   extern const BFTextFieldId OccupationDesc;
   extern const BFTextFieldId AnnualIncomeCode;
   extern const BFTextFieldId AnnualIncomeDesc;
   extern const BFTextFieldId NetWorthCode;
   extern const BFTextFieldId NetWorthDesc;
   extern const BFTextFieldId InvObjCode;
   extern const BFTextFieldId InvObjDesc;
   extern const BFTextFieldId InvKnowledgeCode;
   extern const BFTextFieldId InvKnowledgeDesc;
   extern const BFTextFieldId InvHorizonCode;
   extern const BFTextFieldId InvHorizonDesc;
   extern const BFTextFieldId RiskToleranceCode;
   extern const BFTextFieldId RiskToleranceDesc;
   extern const BFTextFieldId OtherInvestments;
   extern const BFTextFieldId AdvisorCode;
   extern const BFTextFieldId AdvisorDesc;
   extern const BFTextFieldId WitnessName;
   extern const BFTextFieldId WitnessAddr1;
   extern const BFDateFieldId EffectiveDate;
   extern const BFTextFieldId PersonalSecCode;
   extern const BFDataId DSTC0015_VW;
   extern const BFDataId DSTC0015_VWRepeat_Record;
   extern const BFDecimalFieldId TransAmount;
   extern const BFDecimalFieldId Units;
   extern const BFDecimalFieldId UnitsHeld;
   extern const BFDecimalFieldId AdjustedCost;
   extern const BFDecimalFieldId ACBPerUnit;
   extern const BFDecimalFieldId GainOrLossAmt;
   extern const BFTextFieldId TransTypeDesc;
   extern const BFDataId DSTC0016_VW;
   extern const BFDataId DSTC0016_VWRepeat_Record;
   extern const BFTextFieldId FundToCode;
   extern const BFTextFieldId ClassToCode;
   extern const BFDecimalFieldId AllocPercent;
   extern const BFTextFieldId PaymentReason;
   extern const BFTextFieldId CountryCode;
   extern const BFTextFieldId CountryCodeDesc;
   extern const BFDataId DSTC0017_VW;
   extern const BFDataId DSTC0017_VWRepeat_Record;
   extern const BFDateFieldId SettleDate;
   extern const BFTextFieldId Settled;
   extern const BFDecimalFieldId GrossAmt;
   extern const BFDecimalFieldId NetAmt;
   extern const BFDecimalFieldId UnitPrice;
   extern const BFDecimalFieldId UnitBalance;
   extern const BFTextFieldId Cancelled;
   extern const BFTextFieldId Reversal;
   extern const BFTextFieldId OrderBatch;
   extern const BFNumericFieldId OrderTrace;
   extern const BFTextFieldId OrderUser;
   extern const BFTextFieldId CancelBatch;
   extern const BFNumericFieldId CancelTrace;
   extern const BFTextFieldId CancelUser;
   extern const BFTextFieldId SettleBatch;
   extern const BFNumericFieldId SettleTrace;
   extern const BFTextFieldId SettleUser;
   extern const BFTextFieldId VerifiedBy;
   extern const BFNumericFieldId TfrAcct;
   extern const BFTextFieldId TfrFund;
   extern const BFTextFieldId TfrClass;
   extern const BFDataId DSTC0018_VW;
   extern const BFDataId DSTC0018_VWRepeat_Record;
   extern const BFNumericFieldId rxAcctNum;
   extern const BFTextFieldId CertNumber;
   extern const BFTextFieldId XrefNumber;
   extern const BFTextFieldId StatusDesc;
   extern const BFTextFieldId Issued;
   extern const BFDateFieldId IssueDate;
   extern const BFDecimalFieldId AcctUnits;
   extern const BFDecimalFieldId IssuedUnits;
   extern const BFDecimalFieldId UnIssuedUnits;
   extern const BFTextFieldId LastStatusCode;
   extern const BFTextFieldId LastStatusDesc;
   extern const BFTextFieldId Reported;
   extern const BFDateFieldId LastRptDate;
   extern const BFTextFieldId Comments;
   extern const BFDataId DSTC0019_VW;
   extern const BFDataId DSTC0019_VWRepeat_Record;
   extern const BFTextFieldId PShipCode;
   extern const BFNumericFieldId FreeYear;
   extern const BFDecimalFieldId EligibleAmt;
   extern const BFDecimalFieldId EligibleUnits;
   extern const BFDecimalFieldId UsedAmt;
   extern const BFDecimalFieldId UsedUnits;
   extern const BFDecimalFieldId LeftAmt;
   extern const BFDecimalFieldId LeftUnits;
   extern const BFDataId DSTC0020_VW;
   extern const BFDecimalFieldId AccountBalance;
   extern const BFDecimalFieldId FrgnBalance;
   extern const BFDecimalFieldId FrgnACB;
   extern const BFDecimalFieldId FrgnTopUpAmt;
   extern const BFDataId DSTC0020_VWRepeat_Record;

   //------------------------------------------------------------------
   // Field s_FldProp_FeeWaived (200)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeWaived_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_200_5( I_("N") );
      return( dstrDefValue_200_5 );
   }
   const DString& s_FldProp_FeeWaived_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_200_5( I_("FeeWaived") );
      return( dstrFldLabel_200_5 );
   }
   PBF_SSC subset_super_chooser_2_200( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeWaived(
       BFDataFieldProperties::Type::text // field is a text field
      ,FeeWaived // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeWaived_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FeeWaived_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_200 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MarketMail (201)
   //------------------------------------------------------------------
   const DString& s_FldProp_MarketMail_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_201_5( I_("Y") );
         return( dstrDefValue_201_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_201_4( I_("N") );
         return( dstrDefValue_201_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_201_8( I_("N") );
         return( dstrDefValue_201_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_201_7( I_("N") );
         return( dstrDefValue_201_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_201_1( I_("Y") );
         return( dstrDefValue_201_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_201_3( I_("N") );
         return( dstrDefValue_201_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_201_6( I_("N") );
         return( dstrDefValue_201_6 );
      }
      static const DString dstrDefValue_201_1( I_("Y") );
      return( dstrDefValue_201_1 );
   }
   const DString& s_FldProp_MarketMail_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_201_5( I_("MarketMail   ") );
         return( dstrFldLabel_201_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_201_4( I_("MarketMail   ") );
         return( dstrFldLabel_201_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_201_8( I_("MarketMail   ") );
         return( dstrFldLabel_201_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_201_7( I_("MarketMail   ") );
         return( dstrFldLabel_201_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_201_1( I_("MarketMail   ") );
         return( dstrFldLabel_201_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_201_3( I_("MarketMail   ") );
         return( dstrFldLabel_201_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_201_6( I_("MarketMail   ") );
         return( dstrFldLabel_201_6 );
      }
      static const DString dstrFldLabel_201_1( I_("MarketMail   ") );
      return( dstrFldLabel_201_1 );
   }
   PBF_SSC subset_super_chooser_2_201( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MarketMail(
       BFDataFieldProperties::Type::text // field is a text field
      ,MarketMail // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MarketMail_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MarketMail_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_201 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Unseizable (202)
   //------------------------------------------------------------------
   const DString& s_FldProp_Unseizable_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_202_4( I_("N") );
      return( dstrDefValue_202_4 );
   }
   const DString& s_FldProp_Unseizable_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_202_4( I_("Unseizable") );
      return( dstrFldLabel_202_4 );
   }
   PBF_SSC subset_super_chooser_2_202( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Unseizable(
       BFDataFieldProperties::Type::text // field is a text field
      ,Unseizable // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Unseizable_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Unseizable_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_202 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RegCompleted (203)
   //------------------------------------------------------------------
   const DString& s_FldProp_RegCompleted_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_203_5( I_("Y") );
      return( dstrDefValue_203_5 );
   }
   const DString& s_FldProp_RegCompleted_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_203_5( I_("RegCompleted") );
      return( dstrFldLabel_203_5 );
   }
   PBF_SSC subset_super_chooser_2_203( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RegCompleted(
       BFDataFieldProperties::Type::text // field is a text field
      ,RegCompleted // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RegCompleted_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RegCompleted_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_203 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SupConf (204)
   //------------------------------------------------------------------
   const DString& s_FldProp_SupConf_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_204_4( I_("N") );
      return( dstrDefValue_204_4 );
   }
   const DString& s_FldProp_SupConf_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_204_4( I_("SupConf") );
      return( dstrFldLabel_204_4 );
   }
   PBF_SSC subset_super_chooser_2_204( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SupConf(
       BFDataFieldProperties::Type::text // field is a text field
      ,SupConf // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SupConf_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SupConf_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_204 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SupEmpConf (205)
   //------------------------------------------------------------------
   const DString& s_FldProp_SupEmpConf_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_205_4( I_("Y") );
         return( dstrDefValue_205_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_205_7( I_("N") );
         return( dstrDefValue_205_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_205_5( I_("N") );
         return( dstrDefValue_205_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_205_8( I_("N") );
         return( dstrDefValue_205_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_205_3( I_("N") );
         return( dstrDefValue_205_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_205_1( I_("N") );
         return( dstrDefValue_205_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_205_6( I_("N") );
         return( dstrDefValue_205_6 );
      }
      static const DString dstrDefValue_205_1( I_("N") );
      return( dstrDefValue_205_1 );
   }
   const DString& s_FldProp_SupEmpConf_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_205_4( I_("SupEmpConf") );
         return( dstrFldLabel_205_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_205_7( I_("SupEmpConf") );
         return( dstrFldLabel_205_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_205_5( I_("SupEmpConf") );
         return( dstrFldLabel_205_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_205_8( I_("SupEmpConf") );
         return( dstrFldLabel_205_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_205_3( I_("SupEmpConf") );
         return( dstrFldLabel_205_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_205_1( I_("SupEmpConf") );
         return( dstrFldLabel_205_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_205_6( I_("SupEmpConf") );
         return( dstrFldLabel_205_6 );
      }
      static const DString dstrFldLabel_205_1( I_("SupEmpConf") );
      return( dstrFldLabel_205_1 );
   }
   PBF_SSC subset_super_chooser_2_205( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SupEmpConf(
       BFDataFieldProperties::Type::text // field is a text field
      ,SupEmpConf // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SupEmpConf_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SupEmpConf_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_205 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InTrustFor (206)
   //------------------------------------------------------------------
   const DString& s_FldProp_InTrustFor_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_206_5( I_("N") );
      return( dstrDefValue_206_5 );
   }
   const DString& s_FldProp_InTrustFor_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_206_5( I_("InTrustFor") );
      return( dstrFldLabel_206_5 );
   }
   PBF_SSC subset_super_chooser_2_206( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InTrustFor(
       BFDataFieldProperties::Type::text // field is a text field
      ,InTrustFor // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InTrustFor_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InTrustFor_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_206 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Escrow (207)
   //------------------------------------------------------------------
   const DString& s_FldProp_Escrow_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_207_5( I_("N") );
      return( dstrDefValue_207_5 );
   }
   const DString& s_FldProp_Escrow_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_207_5( I_("Escrow") );
      return( dstrFldLabel_207_5 );
   }
   PBF_SSC subset_super_chooser_2_207( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Escrow(
       BFDataFieldProperties::Type::text // field is a text field
      ,Escrow // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Escrow_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Escrow_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_207 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctGroup (208)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctGroup_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_208_4( I_("000001") );
      return( dstrDefValue_208_4 );
   }
   const DString& s_FldProp_AcctGroup_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_208_4( I_("AcctGroup  ") );
      return( dstrFldLabel_208_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctGroup(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctGroup // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctGroup_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctGroup_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctGroupName (209)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctGroupName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_209_5( I_("                                                  ") );
      return( dstrDefValue_209_5 );
   }
   const DString& s_FldProp_AcctGroupName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_209_5( I_("AcctGroupName ") );
      return( dstrFldLabel_209_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctGroupName(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctGroupName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctGroupName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctGroupName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BrokerName (210)
   //------------------------------------------------------------------
   const DString& s_FldProp_BrokerName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_210_4( I_("                                                  ") );
      return( dstrDefValue_210_4 );
   }
   const DString& s_FldProp_BrokerName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_210_4( I_("BrokerName ") );
      return( dstrFldLabel_210_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BrokerName(
       BFDataFieldProperties::Type::text // field is a text field
      ,BrokerName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BrokerName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BrokerName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BranchName (211)
   //------------------------------------------------------------------
   const DString& s_FldProp_BranchName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_211_4( I_("                                                  ") );
      return( dstrDefValue_211_4 );
   }
   const DString& s_FldProp_BranchName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_211_4( I_("BranchName ") );
      return( dstrFldLabel_211_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BranchName(
       BFDataFieldProperties::Type::text // field is a text field
      ,BranchName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BranchName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BranchName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsrepName (212)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsrepName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_212_5( I_("                                                  ") );
      return( dstrDefValue_212_5 );
   }
   const DString& s_FldProp_SlsrepName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_212_5( I_("SlsrepName ") );
      return( dstrFldLabel_212_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsrepName(
       BFDataFieldProperties::Type::text // field is a text field
      ,SlsrepName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsrepName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SlsrepName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsrepAltName (213)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsrepAltName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_213_5( I_("                                                  ") );
      return( dstrDefValue_213_5 );
   }
   const DString& s_FldProp_SlsrepAltName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_213_5( I_("SlsrepAltName ") );
      return( dstrFldLabel_213_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsrepAltName(
       BFDataFieldProperties::Type::text // field is a text field
      ,SlsrepAltName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsrepAltName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SlsrepAltName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctBalance (214)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctBalance_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_214_4( I_("0.0000000000") );
         return( dstrDefValue_214_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_214_7( I_("0") );
         return( dstrDefValue_214_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_214_5( I_("0") );
         return( dstrDefValue_214_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_214_8( I_("0") );
         return( dstrDefValue_214_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_214_3( I_("0") );
         return( dstrDefValue_214_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_214_1( I_("0") );
         return( dstrDefValue_214_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_214_6( I_("0") );
         return( dstrDefValue_214_6 );
      }
      static const DString dstrDefValue_214_1( I_("0") );
      return( dstrDefValue_214_1 );
   }
   double s_FldProp_AcctBalance_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_AcctBalance_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_214_4( I_("AcctBalance ") );
         return( dstrFldLabel_214_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_214_7( I_("AcctBalance ") );
         return( dstrFldLabel_214_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_214_5( I_("AcctBalance ") );
         return( dstrFldLabel_214_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_214_8( I_("AcctBalance ") );
         return( dstrFldLabel_214_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_214_3( I_("AcctBalance ") );
         return( dstrFldLabel_214_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_214_1( I_("AcctBalance ") );
         return( dstrFldLabel_214_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_214_6( I_("AcctBalance ") );
         return( dstrFldLabel_214_6 );
      }
      static const DString dstrFldLabel_214_1( I_("AcctBalance ") );
      return( dstrFldLabel_214_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctBalance(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctBalance // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_AcctBalance_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctBalance_d_DVF // default value
      ,s_FldProp_AcctBalance_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Deff (215)
   //------------------------------------------------------------------
   const DString& s_FldProp_Deff_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_215_5( I_("         ") );
      return( dstrDefValue_215_5 );
   }
   const DString& s_FldProp_Deff_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_215_5( I_("Deff ") );
      return( dstrFldLabel_215_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Deff(
       BFDataFieldProperties::Type::date // field is a date field
      ,Deff // fieldId
      ,10 // length
      ,0 // minimum length
      ,10 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Deff_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Deff_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProcessDate (216)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProcessDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_216_4( I_(" ") );
      return( dstrDefValue_216_4 );
   }
   const DString& s_FldProp_ProcessDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_216_4( I_("ProcessDate") );
      return( dstrFldLabel_216_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProcessDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,ProcessDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ProcessDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ProcessDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ModDate (217)
   //------------------------------------------------------------------
   const DString& s_FldProp_ModDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_217_4( I_("         ") );
      return( dstrDefValue_217_4 );
   }
   const DString& s_FldProp_ModDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_217_4( I_("ModDate ") );
      return( dstrFldLabel_217_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ModDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,ModDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ModDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ModDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ModUser (218)
   //------------------------------------------------------------------
   const DString& s_FldProp_ModUser_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_218_5( I_("                                                  ") );
      return( dstrDefValue_218_5 );
   }
   const DString& s_FldProp_ModUser_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_218_5( I_("ModUser ") );
      return( dstrFldLabel_218_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ModUser(
       BFDataFieldProperties::Type::text // field is a text field
      ,ModUser // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ModUser_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ModUser_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransNote (221)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransNote_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_221_5( I_("N") );
      return( dstrDefValue_221_5 );
   }
   const DString& s_FldProp_TransNote_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_221_5( I_("TransNote") );
      return( dstrFldLabel_221_5 );
   }
   PBF_SSC subset_super_chooser_2_221( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransNote(
       BFDataFieldProperties::Type::text // field is a text field
      ,TransNote // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransNote_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TransNote_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_221 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Active (222)
   //------------------------------------------------------------------
   const DString& s_FldProp_Active_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_222_3( I_("Y") );
      return( dstrDefValue_222_3 );
   }
   const DString& s_FldProp_Active_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_222_3( I_("Active") );
      return( dstrFldLabel_222_3 );
   }
   PBF_SSC subset_super_chooser_2_222( const ClientLocale& locale )
   {
      return chooser_ss_002_091; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Active(
       BFDataFieldProperties::Type::text // field is a text field
      ,Active // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Active_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Active_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_222 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EffectiveFrom (223)
   //------------------------------------------------------------------
   const DString& s_FldProp_EffectiveFrom_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_223_4( I_("         ") );
      return( dstrDefValue_223_4 );
   }
   const DString& s_FldProp_EffectiveFrom_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_223_4( I_("EffectiveFrom ") );
      return( dstrFldLabel_223_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EffectiveFrom(
       BFDataFieldProperties::Type::date // field is a date field
      ,EffectiveFrom // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EffectiveFrom_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EffectiveFrom_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CreatedOn (224)
   //------------------------------------------------------------------
   const DString& s_FldProp_CreatedOn_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_224_5( I_("         ") );
      return( dstrDefValue_224_5 );
   }
   const DString& s_FldProp_CreatedOn_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_224_5( I_("CreatedOn ") );
      return( dstrFldLabel_224_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CreatedOn(
       BFDataFieldProperties::Type::date // field is a date field
      ,CreatedOn // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CreatedOn_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CreatedOn_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CreatedBy (225)
   //------------------------------------------------------------------
   const DString& s_FldProp_CreatedBy_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_225_5( I_("                                                  ") );
      return( dstrDefValue_225_5 );
   }
   const DString& s_FldProp_CreatedBy_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_225_5( I_("CreatedBy ") );
      return( dstrFldLabel_225_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CreatedBy(
       BFDataFieldProperties::Type::text // field is a text field
      ,CreatedBy // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CreatedBy_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CreatedBy_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ModifiedOn (226)
   //------------------------------------------------------------------
   const DString& s_FldProp_ModifiedOn_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_226_4( I_("         ") );
      return( dstrDefValue_226_4 );
   }
   const DString& s_FldProp_ModifiedOn_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_226_4( I_("ModifiedOn ") );
      return( dstrFldLabel_226_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ModifiedOn(
       BFDataFieldProperties::Type::date // field is a date field
      ,ModifiedOn // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ModifiedOn_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ModifiedOn_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ModifiedBy (227)
   //------------------------------------------------------------------
   const DString& s_FldProp_ModifiedBy_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_227_5( I_("                                                  ") );
      return( dstrDefValue_227_5 );
   }
   const DString& s_FldProp_ModifiedBy_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_227_5( I_("ModifiedBy ") );
      return( dstrFldLabel_227_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ModifiedBy(
       BFDataFieldProperties::Type::text // field is a text field
      ,ModifiedBy // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ModifiedBy_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ModifiedBy_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_VersionNum (228)
   //------------------------------------------------------------------
   const DString& s_FldProp_VersionNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_228_4( I_("0000000000") );
      return( dstrDefValue_228_4 );
   }
   DIINT64 s_FldProp_VersionNum_i_DVF( const ClientLocale& locale )
   {
      return( 0000000000 );
   }
   const DString& s_FldProp_VersionNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_228_4( I_("VersionNum ") );
      return( dstrFldLabel_228_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_VersionNum(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,VersionNum // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_VersionNum_s_DVF // default value
      ,s_FldProp_VersionNum_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_VersionNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Amount (231)
   //------------------------------------------------------------------
   const DString& s_FldProp_Amount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_231_5( I_("0.00") );
      return( dstrDefValue_231_5 );
   }
   double s_FldProp_Amount_d_DVF( const ClientLocale& locale )
   {
      return( 0.00 );
   }
   const DString& s_FldProp_Amount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_231_5( I_("Amount") );
      return( dstrFldLabel_231_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Amount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Amount // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_Amount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Amount_d_DVF // default value
      ,s_FldProp_Amount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmountType (232)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmountType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_232_4( I_("  ") );
      return( dstrDefValue_232_4 );
   }
   const DString& s_FldProp_AmountType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_232_4( I_("AmountType  ") );
      return( dstrFldLabel_232_4 );
   }
   PBF_SSC subset_super_chooser_2_232( const ClientLocale& locale )
   {
      return chooser_ss_002_100; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmountType(
       BFDataFieldProperties::Type::text // field is a text field
      ,AmountType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AmountType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AmountType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_232 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmountTypeDesc (233)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmountTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_233_5( I_("                                                  ") );
      return( dstrDefValue_233_5 );
   }
   const DString& s_FldProp_AmountTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_233_5( I_("AmountTypeDesc ") );
      return( dstrFldLabel_233_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmountTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,AmountTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AmountTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AmountTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GrossOrNet (234)
   //------------------------------------------------------------------
   const DString& s_FldProp_GrossOrNet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_234_3( I_("Y") );
      return( dstrDefValue_234_3 );
   }
   const DString& s_FldProp_GrossOrNet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_234_3( I_("GrossOrNet") );
      return( dstrFldLabel_234_3 );
   }
   PBF_SSC subset_super_chooser_2_234( const ClientLocale& locale )
   {
      return chooser_ss_002_126; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GrossOrNet(
       BFDataFieldProperties::Type::text // field is a text field
      ,GrossOrNet // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GrossOrNet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GrossOrNet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_234 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Fee (235)
   //------------------------------------------------------------------
   const DString& s_FldProp_Fee_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_235_4( I_("0.0000000000") );
         return( dstrDefValue_235_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_235_7( I_("0") );
         return( dstrDefValue_235_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_235_5( I_("0") );
         return( dstrDefValue_235_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_235_8( I_("0") );
         return( dstrDefValue_235_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_235_3( I_("0") );
         return( dstrDefValue_235_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_235_1( I_("0") );
         return( dstrDefValue_235_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_235_6( I_("0") );
         return( dstrDefValue_235_6 );
      }
      static const DString dstrDefValue_235_1( I_("0") );
      return( dstrDefValue_235_1 );
   }
   double s_FldProp_Fee_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_Fee_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_235_4( I_("Fee ") );
         return( dstrFldLabel_235_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_235_7( I_("Fee ") );
         return( dstrFldLabel_235_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_235_5( I_("Fee ") );
         return( dstrFldLabel_235_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_235_8( I_("Fee ") );
         return( dstrFldLabel_235_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_235_3( I_("Fee ") );
         return( dstrFldLabel_235_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_235_1( I_("Fee ") );
         return( dstrFldLabel_235_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_235_6( I_("Fee ") );
         return( dstrFldLabel_235_6 );
      }
      static const DString dstrFldLabel_235_1( I_("Fee ") );
      return( dstrFldLabel_235_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Fee(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Fee // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_Fee_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Fee_d_DVF // default value
      ,s_FldProp_Fee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeePercent (236)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeePercent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_236_5( I_("0.0000000000") );
      return( dstrDefValue_236_5 );
   }
   double s_FldProp_FeePercent_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_FeePercent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_236_5( I_("FeePercent ") );
      return( dstrFldLabel_236_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeePercent(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FeePercent // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_FeePercent_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FeePercent_d_DVF // default value
      ,s_FldProp_FeePercent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeCurrency (237)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeCurrency_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_237_5( I_("   ") );
         return( dstrDefValue_237_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_237_8( I_("   ") );
         return( dstrDefValue_237_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_237_7( I_("   ") );
         return( dstrDefValue_237_7 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_237_4( I_("   ") );
         return( dstrDefValue_237_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_237_3( I_("   ") );
         return( dstrDefValue_237_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_237_1( I_("   ") );
         return( dstrDefValue_237_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_237_6( I_("   ") );
         return( dstrDefValue_237_6 );
      }
      static const DString dstrDefValue_237_1( I_("   ") );
      return( dstrDefValue_237_1 );
   }
   const DString& s_FldProp_FeeCurrency_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_237_5( I_("FeeCurrency  ") );
         return( dstrFldLabel_237_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_237_8( I_("FeeCurrency  ") );
         return( dstrFldLabel_237_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_237_7( I_("FeeCurrency  ") );
         return( dstrFldLabel_237_7 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_237_4( I_("FeeCurrency  ") );
         return( dstrFldLabel_237_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_237_3( I_("FeeCurrency  ") );
         return( dstrFldLabel_237_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_237_1( I_("FeeCurrency  ") );
         return( dstrFldLabel_237_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_237_6( I_("FeeCurrency  ") );
         return( dstrFldLabel_237_6 );
      }
      static const DString dstrFldLabel_237_1( I_("FeeCurrency  ") );
      return( dstrFldLabel_237_1 );
   }
   PBF_SSC subset_super_chooser_2_237( const ClientLocale& locale )
   {
      return chooser_ss_002_065; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeCurrency(
       BFDataFieldProperties::Type::text // field is a text field
      ,FeeCurrency // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeCurrency_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FeeCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_237 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeCurrDesc (238)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeCurrDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_238_4( I_("                                                  ") );
      return( dstrDefValue_238_4 );
   }
   const DString& s_FldProp_FeeCurrDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_238_4( I_("FeeCurrDesc ") );
      return( dstrFldLabel_238_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeCurrDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,FeeCurrDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeCurrDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FeeCurrDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdminFeeAmt (239)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdminFeeAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_239_5( I_("0") );
      return( dstrDefValue_239_5 );
   }
   double s_FldProp_AdminFeeAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AdminFeeAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_239_5( I_("AdminFeeAmt") );
      return( dstrFldLabel_239_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdminFeeAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AdminFeeAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_AdminFeeAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AdminFeeAmt_d_DVF // default value
      ,s_FldProp_AdminFeeAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdminFeeCurr (240)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdminFeeCurr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_240_3( I_("   ") );
      return( dstrDefValue_240_3 );
   }
   const DString& s_FldProp_AdminFeeCurr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_240_3( I_("AdminFeeCurr  ") );
      return( dstrFldLabel_240_3 );
   }
   PBF_SSC subset_super_chooser_2_240( const ClientLocale& locale )
   {
      return chooser_ss_002_065; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdminFeeCurr(
       BFDataFieldProperties::Type::text // field is a text field
      ,AdminFeeCurr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AdminFeeCurr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AdminFeeCurr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_240 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdminFeeCurrDesc (241)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdminFeeCurrDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_241_4( I_("                                                  ") );
      return( dstrDefValue_241_4 );
   }
   const DString& s_FldProp_AdminFeeCurrDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_241_4( I_("AdminFeeCurrDesc ") );
      return( dstrFldLabel_241_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdminFeeCurrDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,AdminFeeCurrDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AdminFeeCurrDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AdminFeeCurrDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayType (242)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayType_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_242_5( I_("P-E") );
         return( dstrDefValue_242_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_242_8( I_("P-E") );
         return( dstrDefValue_242_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_242_7( I_("P-E") );
         return( dstrDefValue_242_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_242_6( I_("P-E") );
         return( dstrDefValue_242_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_242_4( I_("E") );
         return( dstrDefValue_242_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_242_3( I_("P-E") );
         return( dstrDefValue_242_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_242_1( I_("P-E") );
         return( dstrDefValue_242_1 );
      }
      static const DString dstrDefValue_242_1( I_("P-E") );
      return( dstrDefValue_242_1 );
   }
   const DString& s_FldProp_PayType_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_242_5( I_("PayType") );
         return( dstrFldLabel_242_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_242_8( I_("PayType") );
         return( dstrFldLabel_242_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_242_7( I_("PayType") );
         return( dstrFldLabel_242_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_242_6( I_("PayType") );
         return( dstrFldLabel_242_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_242_4( I_("PayType") );
         return( dstrFldLabel_242_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_242_3( I_("PayType") );
         return( dstrFldLabel_242_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_242_1( I_("PayType") );
         return( dstrFldLabel_242_1 );
      }
      static const DString dstrFldLabel_242_1( I_("PayType") );
      return( dstrFldLabel_242_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayType(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayTypeDesc (243)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_243_3( I_("   ") );
      return( dstrDefValue_243_3 );
   }
   const DString& s_FldProp_PayTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_243_3( I_("PayTypeDesc  ") );
      return( dstrFldLabel_243_3 );
   }
   PBF_SSC subset_super_chooser_2_243( const ClientLocale& locale )
   {
      return chooser_ss_002_016; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_243 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InstCode (244)
   //------------------------------------------------------------------
   const DString& s_FldProp_InstCode_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_244_7( I_("0") );
         return( dstrDefValue_244_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_244_8( I_("") );
         return( dstrDefValue_244_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_244_6( I_("") );
         return( dstrDefValue_244_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_244_5( I_("") );
         return( dstrDefValue_244_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_244_4( I_("0") );
         return( dstrDefValue_244_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_244_3( I_("") );
         return( dstrDefValue_244_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_244_1( I_("") );
         return( dstrDefValue_244_1 );
      }
      static const DString dstrDefValue_244_1( I_("") );
      return( dstrDefValue_244_1 );
   }
   DIINT64 s_FldProp_InstCode_i_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_InstCode_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_244_7( I_("InstCode") );
         return( dstrFldLabel_244_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_244_8( I_("InstCode") );
         return( dstrFldLabel_244_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_244_6( I_("InstCode") );
         return( dstrFldLabel_244_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_244_5( I_("InstCode") );
         return( dstrFldLabel_244_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_244_4( I_("InstCode") );
         return( dstrFldLabel_244_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_244_3( I_("InstCode") );
         return( dstrFldLabel_244_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_244_1( I_("InstCode") );
         return( dstrFldLabel_244_1 );
      }
      static const DString dstrFldLabel_244_1( I_("InstCode") );
      return( dstrFldLabel_244_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InstCode(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,InstCode // fieldId
      ,17 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_27 // mask chooser function
      ,s_FldProp_InstCode_s_DVF // default value
      ,s_FldProp_InstCode_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_InstCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SwiftCode (245)
   //------------------------------------------------------------------
   const DString& s_FldProp_SwiftCode_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_245_3( I_("00000000") );
         return( dstrDefValue_245_3 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_245_4( I_("00000000") );
         return( dstrDefValue_245_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_245_5( I_("") );
         return( dstrDefValue_245_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_245_6( I_("00000000") );
         return( dstrDefValue_245_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_245_7( I_("00000000") );
         return( dstrDefValue_245_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_245_8( I_("00000000") );
         return( dstrDefValue_245_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_245_1( I_("") );
         return( dstrDefValue_245_1 );
      }
      static const DString dstrDefValue_245_1( I_("") );
      return( dstrDefValue_245_1 );
   }
   double s_FldProp_SwiftCode_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enCA") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_SwiftCode_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_245_3( I_("SwiftCode   ") );
         return( dstrFldLabel_245_3 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_245_4( I_("SwiftCode   ") );
         return( dstrFldLabel_245_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_245_5( I_("SwiftCode   ") );
         return( dstrFldLabel_245_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_245_6( I_("SwiftCode   ") );
         return( dstrFldLabel_245_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_245_7( I_("SwiftCode   ") );
         return( dstrFldLabel_245_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_245_8( I_("SwiftCode   ") );
         return( dstrFldLabel_245_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_245_1( I_("SwiftCode   ") );
         return( dstrFldLabel_245_1 );
      }
      static const DString dstrFldLabel_245_1( I_("SwiftCode   ") );
      return( dstrFldLabel_245_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SwiftCode(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,SwiftCode // fieldId
      ,8 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SwiftCode_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_SwiftCode_d_DVF // default value
      ,s_FldProp_SwiftCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RefNumber (246)
   //------------------------------------------------------------------
   const DString& s_FldProp_RefNumber_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_246_5( I_("") );
         return( dstrDefValue_246_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_246_7( I_("00000000") );
         return( dstrDefValue_246_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_246_6( I_("00000000") );
         return( dstrDefValue_246_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_246_3( I_("00000000") );
         return( dstrDefValue_246_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_246_1( I_("") );
         return( dstrDefValue_246_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_246_4( I_("00000000") );
         return( dstrDefValue_246_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_246_8( I_("00000000") );
         return( dstrDefValue_246_8 );
      }
      static const DString dstrDefValue_246_1( I_("") );
      return( dstrDefValue_246_1 );
   }
   double s_FldProp_RefNumber_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 00000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 00000000 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_RefNumber_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_246_5( I_("RefNumber") );
         return( dstrFldLabel_246_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_246_7( I_("RefNumber") );
         return( dstrFldLabel_246_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_246_6( I_("RefNumber") );
         return( dstrFldLabel_246_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_246_3( I_("RefNumber") );
         return( dstrFldLabel_246_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_246_1( I_("RefNumber") );
         return( dstrFldLabel_246_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_246_4( I_("RefNumber") );
         return( dstrFldLabel_246_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_246_8( I_("RefNumber") );
         return( dstrFldLabel_246_8 );
      }
      static const DString dstrFldLabel_246_1( I_("RefNumber") );
      return( dstrFldLabel_246_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RefNumber(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RefNumber // fieldId
      ,8 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RefNumber_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RefNumber_d_DVF // default value
      ,s_FldProp_RefNumber_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransitNo (247)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransitNo_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_247_3( I_("") );
         return( dstrDefValue_247_3 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_247_8( I_("") );
         return( dstrDefValue_247_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_247_7( I_("") );
         return( dstrDefValue_247_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_247_6( I_("") );
         return( dstrDefValue_247_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_247_4( I_("000") );
         return( dstrDefValue_247_4 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_247_1( I_("") );
         return( dstrDefValue_247_1 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_247_5( I_("") );
         return( dstrDefValue_247_5 );
      }
      static const DString dstrDefValue_247_1( I_("") );
      return( dstrDefValue_247_1 );
   }
   const DString& s_FldProp_TransitNo_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_247_3( I_("TransitNo") );
         return( dstrFldLabel_247_3 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_247_8( I_("TransitNo") );
         return( dstrFldLabel_247_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_247_7( I_("TransitNo") );
         return( dstrFldLabel_247_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_247_6( I_("TransitNo") );
         return( dstrFldLabel_247_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_247_4( I_("TransitNo") );
         return( dstrFldLabel_247_4 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_247_1( I_("TransitNo") );
         return( dstrFldLabel_247_1 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_247_5( I_("TransitNo") );
         return( dstrFldLabel_247_5 );
      }
      static const DString dstrFldLabel_247_1( I_("TransitNo") );
      return( dstrFldLabel_247_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransitNo(
       BFDataFieldProperties::Type::text // field is a text field
      ,TransitNo // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransitNo_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TransitNo_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankAcctNum (248)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankAcctNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_248_5( I_("                                                  ") );
      return( dstrDefValue_248_5 );
   }
   const DString& s_FldProp_BankAcctNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_248_5( I_("BankAcctNum ") );
      return( dstrFldLabel_248_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankAcctNum(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankAcctNum // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankAcctNum_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankAcctNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankAcctName (249)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankAcctName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_249_4( I_("                                                  ") );
      return( dstrDefValue_249_4 );
   }
   const DString& s_FldProp_BankAcctName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_249_4( I_("BankAcctName ") );
      return( dstrFldLabel_249_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankAcctName(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankAcctName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankAcctName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankAcctName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SourceOfBankAcct (250)
   //------------------------------------------------------------------
   const DString& s_FldProp_SourceOfBankAcct_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_250_5( I_("                                                  ") );
      return( dstrDefValue_250_5 );
   }
   const DString& s_FldProp_SourceOfBankAcct_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_250_5( I_("SourceOfBankAcct ") );
      return( dstrFldLabel_250_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SourceOfBankAcct(
       BFDataFieldProperties::Type::text // field is a text field
      ,SourceOfBankAcct // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SourceOfBankAcct_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SourceOfBankAcct_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankAcctCurrency (251)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankAcctCurrency_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_251_5( I_("   ") );
      return( dstrDefValue_251_5 );
   }
   const DString& s_FldProp_BankAcctCurrency_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_251_5( I_("BankAcctCurrency  ") );
      return( dstrFldLabel_251_5 );
   }
   PBF_SSC subset_super_chooser_2_251( const ClientLocale& locale )
   {
      return chooser_ss_002_065; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankAcctCurrency(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankAcctCurrency // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankAcctCurrency_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankAcctCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_251 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankCurrDesc (252)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankCurrDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_252_4( I_("                                                  ") );
      return( dstrDefValue_252_4 );
   }
   const DString& s_FldProp_BankCurrDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_252_4( I_("BankCurrDesc ") );
      return( dstrFldLabel_252_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankCurrDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankCurrDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankCurrDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankCurrDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankAcctType (253)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankAcctType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_253_5( I_("   ") );
      return( dstrDefValue_253_5 );
   }
   const DString& s_FldProp_BankAcctType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_253_5( I_("BankAcctType  ") );
      return( dstrFldLabel_253_5 );
   }
   PBF_SSC subset_super_chooser_2_253( const ClientLocale& locale )
   {
      return chooser_ss_002_015; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankAcctType(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankAcctType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankAcctType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankAcctType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_253 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankAcctTypeDesc (254)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankAcctTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_254_4( I_("                                                  ") );
      return( dstrDefValue_254_4 );
   }
   const DString& s_FldProp_BankAcctTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_254_4( I_("BankAcctTypeDesc ") );
      return( dstrFldLabel_254_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankAcctTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankAcctTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankAcctTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankAcctTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFund (255)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_255_4( I_("  ") );
      return( dstrDefValue_255_4 );
   }
   const DString& s_FldProp_SrcOfFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_255_4( I_("SrcOfFund  ") );
      return( dstrFldLabel_255_4 );
   }
   PBF_SSC subset_super_chooser_2_255( const ClientLocale& locale )
   {
      return chooser_ss_002_037; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_255 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOFundDesc (256)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOFundDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_256_5( I_("                                                  ") );
      return( dstrDefValue_256_5 );
   }
   const DString& s_FldProp_SrcOFundDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_256_5( I_("SrcOFundDesc ") );
      return( dstrFldLabel_256_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOFundDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOFundDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOFundDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOFundDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_January (257)
   //------------------------------------------------------------------
   const DString& s_FldProp_January_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_257_5( I_("Y") );
      return( dstrDefValue_257_5 );
   }
   const DString& s_FldProp_January_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_257_5( I_("January") );
      return( dstrFldLabel_257_5 );
   }
   PBF_SSC subset_super_chooser_2_257( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_January(
       BFDataFieldProperties::Type::text // field is a text field
      ,January // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_January_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_January_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_257 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_February (258)
   //------------------------------------------------------------------
   const DString& s_FldProp_February_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_258_4( I_("Y") );
      return( dstrDefValue_258_4 );
   }
   const DString& s_FldProp_February_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_258_4( I_("February") );
      return( dstrFldLabel_258_4 );
   }
   PBF_SSC subset_super_chooser_2_258( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_February(
       BFDataFieldProperties::Type::text // field is a text field
      ,February // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_February_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_February_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_258 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_March (259)
   //------------------------------------------------------------------
   const DString& s_FldProp_March_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_259_5( I_("Y") );
      return( dstrDefValue_259_5 );
   }
   const DString& s_FldProp_March_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_259_5( I_("March") );
      return( dstrFldLabel_259_5 );
   }
   PBF_SSC subset_super_chooser_2_259( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_March(
       BFDataFieldProperties::Type::text // field is a text field
      ,March // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_March_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_March_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_259 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_April (260)
   //------------------------------------------------------------------
   const DString& s_FldProp_April_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_260_5( I_("Y") );
      return( dstrDefValue_260_5 );
   }
   const DString& s_FldProp_April_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_260_5( I_("April") );
      return( dstrFldLabel_260_5 );
   }
   PBF_SSC subset_super_chooser_2_260( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_April(
       BFDataFieldProperties::Type::text // field is a text field
      ,April // fieldId
      ,1 // length
      ,0 // minimum length
      ,2 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_April_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_April_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_260 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_May (261)
   //------------------------------------------------------------------
   const DString& s_FldProp_May_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_261_4( I_("Y") );
      return( dstrDefValue_261_4 );
   }
   const DString& s_FldProp_May_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_261_4( I_("May") );
      return( dstrFldLabel_261_4 );
   }
   PBF_SSC subset_super_chooser_2_261( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_May(
       BFDataFieldProperties::Type::text // field is a text field
      ,May // fieldId
      ,1 // length
      ,0 // minimum length
      ,2 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_May_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_May_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_261 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_June (262)
   //------------------------------------------------------------------
   const DString& s_FldProp_June_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_262_5( I_("Y") );
      return( dstrDefValue_262_5 );
   }
   const DString& s_FldProp_June_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_262_5( I_("June") );
      return( dstrFldLabel_262_5 );
   }
   PBF_SSC subset_super_chooser_2_262( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_June(
       BFDataFieldProperties::Type::text // field is a text field
      ,June // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_June_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_June_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_262 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_July (263)
   //------------------------------------------------------------------
   const DString& s_FldProp_July_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_263_4( I_("Y") );
      return( dstrDefValue_263_4 );
   }
   const DString& s_FldProp_July_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_263_4( I_("July") );
      return( dstrFldLabel_263_4 );
   }
   PBF_SSC subset_super_chooser_2_263( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_July(
       BFDataFieldProperties::Type::text // field is a text field
      ,July // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_July_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_July_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_263 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_August (264)
   //------------------------------------------------------------------
   const DString& s_FldProp_August_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_264_4( I_("Y") );
      return( dstrDefValue_264_4 );
   }
   const DString& s_FldProp_August_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_264_4( I_("August") );
      return( dstrFldLabel_264_4 );
   }
   PBF_SSC subset_super_chooser_2_264( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_August(
       BFDataFieldProperties::Type::text // field is a text field
      ,August // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_August_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_August_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_264 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_September (265)
   //------------------------------------------------------------------
   const DString& s_FldProp_September_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_265_5( I_("Y") );
      return( dstrDefValue_265_5 );
   }
   const DString& s_FldProp_September_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_265_5( I_("September") );
      return( dstrFldLabel_265_5 );
   }
   PBF_SSC subset_super_chooser_2_265( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_September(
       BFDataFieldProperties::Type::text // field is a text field
      ,September // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_September_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_September_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_265 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_October (266)
   //------------------------------------------------------------------
   const DString& s_FldProp_October_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_266_4( I_("Y") );
      return( dstrDefValue_266_4 );
   }
   const DString& s_FldProp_October_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_266_4( I_("October") );
      return( dstrFldLabel_266_4 );
   }
   PBF_SSC subset_super_chooser_2_266( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_October(
       BFDataFieldProperties::Type::text // field is a text field
      ,October // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_October_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_October_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_266 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_November (267)
   //------------------------------------------------------------------
   const DString& s_FldProp_November_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_267_4( I_("Y") );
      return( dstrDefValue_267_4 );
   }
   const DString& s_FldProp_November_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_267_4( I_("November") );
      return( dstrFldLabel_267_4 );
   }
   PBF_SSC subset_super_chooser_2_267( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_November(
       BFDataFieldProperties::Type::text // field is a text field
      ,November // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_November_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_November_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_267 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_December (268)
   //------------------------------------------------------------------
   const DString& s_FldProp_December_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_268_5( I_("Y") );
      return( dstrDefValue_268_5 );
   }
   const DString& s_FldProp_December_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_268_5( I_("December") );
      return( dstrFldLabel_268_5 );
   }
   PBF_SSC subset_super_chooser_2_268( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_December(
       BFDataFieldProperties::Type::text // field is a text field
      ,December // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_December_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_December_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_268 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Quarterly (269)
   //------------------------------------------------------------------
   const DString& s_FldProp_Quarterly_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_269_5( I_(" ") );
      return( dstrDefValue_269_5 );
   }
   const DString& s_FldProp_Quarterly_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_269_5( I_("Quarterly ") );
      return( dstrFldLabel_269_5 );
   }
   PBF_SSC subset_super_chooser_2_269( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Quarterly(
       BFDataFieldProperties::Type::text // field is a text field
      ,Quarterly // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Quarterly_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Quarterly_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_269 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Monthly (270)
   //------------------------------------------------------------------
   const DString& s_FldProp_Monthly_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_270_4( I_(" ") );
      return( dstrDefValue_270_4 );
   }
   const DString& s_FldProp_Monthly_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_270_4( I_("Monthly ") );
      return( dstrFldLabel_270_4 );
   }
   PBF_SSC subset_super_chooser_2_270( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Monthly(
       BFDataFieldProperties::Type::text // field is a text field
      ,Monthly // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Monthly_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Monthly_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_270 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BiMonthly (271)
   //------------------------------------------------------------------
   const DString& s_FldProp_BiMonthly_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_271_5( I_(" ") );
      return( dstrDefValue_271_5 );
   }
   const DString& s_FldProp_BiMonthly_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_271_5( I_("BiMonthly ") );
      return( dstrFldLabel_271_5 );
   }
   PBF_SSC subset_super_chooser_2_271( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BiMonthly(
       BFDataFieldProperties::Type::text // field is a text field
      ,BiMonthly // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BiMonthly_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BiMonthly_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_271 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EndOfMonth (272)
   //------------------------------------------------------------------
   const DString& s_FldProp_EndOfMonth_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_272_5( I_("N") );
      return( dstrDefValue_272_5 );
   }
   const DString& s_FldProp_EndOfMonth_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_272_5( I_("EndOfMonth ") );
      return( dstrFldLabel_272_5 );
   }
   PBF_SSC subset_super_chooser_2_272( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EndOfMonth(
       BFDataFieldProperties::Type::text // field is a text field
      ,EndOfMonth // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EndOfMonth_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EndOfMonth_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_272 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Weekly (273)
   //------------------------------------------------------------------
   const DString& s_FldProp_Weekly_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_273_4( I_(" ") );
      return( dstrDefValue_273_4 );
   }
   const DString& s_FldProp_Weekly_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_273_4( I_("Weekly ") );
      return( dstrFldLabel_273_4 );
   }
   PBF_SSC subset_super_chooser_2_273( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Weekly(
       BFDataFieldProperties::Type::text // field is a text field
      ,Weekly // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Weekly_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Weekly_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_273 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BiWeekly (274)
   //------------------------------------------------------------------
   const DString& s_FldProp_BiWeekly_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_274_5( I_(" ") );
      return( dstrDefValue_274_5 );
   }
   const DString& s_FldProp_BiWeekly_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_274_5( I_("BiWeekly ") );
      return( dstrFldLabel_274_5 );
   }
   PBF_SSC subset_super_chooser_2_274( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BiWeekly(
       BFDataFieldProperties::Type::text // field is a text field
      ,BiWeekly // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BiWeekly_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BiWeekly_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_274 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DayOfWeek (275)
   //------------------------------------------------------------------
   const DString& s_FldProp_DayOfWeek_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_275_4( I_("") );
      return( dstrDefValue_275_4 );
   }
   DIINT64 s_FldProp_DayOfWeek_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_DayOfWeek_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_275_4( I_("DayOfWeek ") );
      return( dstrFldLabel_275_4 );
   }
   PBF_SSC subset_super_chooser_2_275( const ClientLocale& locale )
   {
      return chooser_ss_002_199; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DayOfWeek(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,DayOfWeek // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DayOfWeek_s_DVF // default value
      ,s_FldProp_DayOfWeek_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_DayOfWeek_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_275 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastProcessDate (276)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastProcessDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_276_4( I_("         ") );
      return( dstrDefValue_276_4 );
   }
   const DString& s_FldProp_LastProcessDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_276_4( I_("LastProcessDate ") );
      return( dstrFldLabel_276_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastProcessDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,LastProcessDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LastProcessDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LastProcessDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrCode (277)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrCode_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_277_5( I_("") );
         return( dstrDefValue_277_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_277_8( I_("") );
         return( dstrDefValue_277_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_277_7( I_("") );
         return( dstrDefValue_277_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_277_6( I_("") );
         return( dstrDefValue_277_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_277_4( I_("   ") );
         return( dstrDefValue_277_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_277_3( I_("") );
         return( dstrDefValue_277_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_277_1( I_("") );
         return( dstrDefValue_277_1 );
      }
      static const DString dstrDefValue_277_1( I_("") );
      return( dstrDefValue_277_1 );
   }
   const DString& s_FldProp_AddrCode_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_277_5( I_("AddrCode  ") );
         return( dstrFldLabel_277_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_277_8( I_("AddrCode  ") );
         return( dstrFldLabel_277_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_277_7( I_("AddrCode  ") );
         return( dstrFldLabel_277_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_277_6( I_("AddrCode  ") );
         return( dstrFldLabel_277_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_277_4( I_("AddrCode  ") );
         return( dstrFldLabel_277_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_277_3( I_("AddrCode  ") );
         return( dstrFldLabel_277_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_277_1( I_("AddrCode  ") );
         return( dstrFldLabel_277_1 );
      }
      static const DString dstrFldLabel_277_1( I_("AddrCode  ") );
      return( dstrFldLabel_277_1 );
   }
   PBF_SSC subset_super_chooser_2_277( const ClientLocale& locale )
   {
      return chooser_ss_002_062; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_277 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StatusCode (278)
   //------------------------------------------------------------------
   const DString& s_FldProp_StatusCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_278_5( I_("Y") );
      return( dstrDefValue_278_5 );
   }
   const DString& s_FldProp_StatusCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_278_5( I_("StatusCode") );
      return( dstrFldLabel_278_5 );
   }
   PBF_SSC subset_super_chooser_2_278( const ClientLocale& locale )
   {
      return chooser_ss_002_128; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StatusCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,StatusCode // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StatusCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StatusCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_278 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopDate (279)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_279_4( I_("") );
      return( dstrDefValue_279_4 );
   }
   const DString& s_FldProp_StopDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_279_4( I_("StopDate") );
      return( dstrFldLabel_279_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,StopDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrLine1 (280)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrLine1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_280_5( I_("                                                  ") );
      return( dstrDefValue_280_5 );
   }
   const DString& s_FldProp_AddrLine1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_280_5( I_("AddrLine1 ") );
      return( dstrFldLabel_280_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrLine1(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrLine1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrLine1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrLine1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrLine2 (281)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrLine2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_281_4( I_("                                                  ") );
      return( dstrDefValue_281_4 );
   }
   const DString& s_FldProp_AddrLine2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_281_4( I_("AddrLine2 ") );
      return( dstrFldLabel_281_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrLine2(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrLine2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrLine2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrLine2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrLine3 (282)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrLine3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_282_4( I_("                                                  ") );
      return( dstrDefValue_282_4 );
   }
   const DString& s_FldProp_AddrLine3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_282_4( I_("AddrLine3 ") );
      return( dstrFldLabel_282_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrLine3(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrLine3 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrLine3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrLine3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrLine4 (283)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrLine4_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_283_5( I_("                                                  ") );
      return( dstrDefValue_283_5 );
   }
   const DString& s_FldProp_AddrLine4_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_283_5( I_("AddrLine4 ") );
      return( dstrFldLabel_283_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrLine4(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrLine4 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrLine4_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrLine4_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrLine5 (284)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrLine5_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_284_5( I_("                                                  ") );
      return( dstrDefValue_284_5 );
   }
   const DString& s_FldProp_AddrLine5_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_284_5( I_("AddrLine5 ") );
      return( dstrFldLabel_284_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrLine5(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrLine5 // fieldId
      ,60 // length
      ,0 // minimum length
      ,2 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrLine5_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrLine5_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InstName (285)
   //------------------------------------------------------------------
   const DString& s_FldProp_InstName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_285_4( I_("                                                  ") );
      return( dstrDefValue_285_4 );
   }
   const DString& s_FldProp_InstName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_285_4( I_("InstName ") );
      return( dstrFldLabel_285_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InstName(
       BFDataFieldProperties::Type::text // field is a text field
      ,InstName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InstName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InstName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxFundCode (286)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxFundCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_286_5( I_("                                                  ") );
      return( dstrDefValue_286_5 );
   }
   const DString& s_FldProp_rxFundCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_286_5( I_("rxFundCode ") );
      return( dstrFldLabel_286_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxFundCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxFundCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxFundCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxFundCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxClassCode (287)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxClassCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_287_4( I_("                                                  ") );
      return( dstrDefValue_287_4 );
   }
   const DString& s_FldProp_rxClassCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_287_4( I_("rxClassCode ") );
      return( dstrFldLabel_287_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxClassCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxClassCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxClassCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxClassCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PACSWPId (290)
   //------------------------------------------------------------------
   const DString& s_FldProp_PACSWPId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_290_4( I_("000000000000") );
      return( dstrDefValue_290_4 );
   }
   DIINT64 s_FldProp_PACSWPId_i_DVF( const ClientLocale& locale )
   {
      return( 000000000000 );
   }
   const DString& s_FldProp_PACSWPId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_290_4( I_("PACSWPId ") );
      return( dstrFldLabel_290_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PACSWPId(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,PACSWPId // fieldId
      ,12 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PACSWPId_s_DVF // default value
      ,s_FldProp_PACSWPId_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_PACSWPId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Percentage (291)
   //------------------------------------------------------------------
   const DString& s_FldProp_Percentage_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_291_4( I_("0.0000 ") );
      return( dstrDefValue_291_4 );
   }
   double s_FldProp_Percentage_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000  );
   }
   const DString& s_FldProp_Percentage_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_291_4( I_("Percentage  ") );
      return( dstrFldLabel_291_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Percentage(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Percentage // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_Percentage_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Percentage_d_DVF // default value
      ,s_FldProp_Percentage_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocAmount (292)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_292_5( I_("0") );
      return( dstrDefValue_292_5 );
   }
   double s_FldProp_AllocAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AllocAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_292_5( I_("AllocAmount") );
      return( dstrFldLabel_292_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AllocAmount // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_AllocAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AllocAmount_d_DVF // default value
      ,s_FldProp_AllocAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BrokerSalut (294)
   //------------------------------------------------------------------
   const DString& s_FldProp_BrokerSalut_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_294_4( I_("                                                  ") );
      return( dstrDefValue_294_4 );
   }
   const DString& s_FldProp_BrokerSalut_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_294_4( I_("BrokerSalut ") );
      return( dstrFldLabel_294_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BrokerSalut(
       BFDataFieldProperties::Type::text // field is a text field
      ,BrokerSalut // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BrokerSalut_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BrokerSalut_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SalesRepName (295)
   //------------------------------------------------------------------
   const DString& s_FldProp_SalesRepName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_295_5( I_("                                                  ") );
      return( dstrDefValue_295_5 );
   }
   const DString& s_FldProp_SalesRepName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_295_5( I_("SalesRepName ") );
      return( dstrFldLabel_295_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SalesRepName(
       BFDataFieldProperties::Type::text // field is a text field
      ,SalesRepName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SalesRepName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SalesRepName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SalesRepSalut (296)
   //------------------------------------------------------------------
   const DString& s_FldProp_SalesRepSalut_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_296_5( I_("                                                  ") );
      return( dstrDefValue_296_5 );
   }
   const DString& s_FldProp_SalesRepSalut_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_296_5( I_("SalesRepSalut ") );
      return( dstrFldLabel_296_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SalesRepSalut(
       BFDataFieldProperties::Type::text // field is a text field
      ,SalesRepSalut // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SalesRepSalut_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SalesRepSalut_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PhoneNumber (297)
   //------------------------------------------------------------------
   const DString& s_FldProp_PhoneNumber_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_297_4( I_("                                                  ") );
      return( dstrDefValue_297_4 );
   }
   const DString& s_FldProp_PhoneNumber_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_297_4( I_("PhoneNumber ") );
      return( dstrFldLabel_297_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PhoneNumber(
       BFDataFieldProperties::Type::text // field is a text field
      ,PhoneNumber // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PhoneNumber_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PhoneNumber_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FaxNumber (298)
   //------------------------------------------------------------------
   const DString& s_FldProp_FaxNumber_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_298_5( I_("                                                  ") );
      return( dstrDefValue_298_5 );
   }
   const DString& s_FldProp_FaxNumber_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_298_5( I_("FaxNumber ") );
      return( dstrFldLabel_298_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FaxNumber(
       BFDataFieldProperties::Type::text // field is a text field
      ,FaxNumber // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FaxNumber_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FaxNumber_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrCntryCode (299)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrCntryCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_299_4( I_("                                                  ") );
      return( dstrDefValue_299_4 );
   }
   const DString& s_FldProp_AddrCntryCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_299_4( I_("AddrCntryCode ") );
      return( dstrFldLabel_299_4 );
   }
   PBF_SSC subset_super_chooser_2_299( const ClientLocale& locale )
   {
      return chooser_ss_002_013; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrCntryCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrCntryCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrCntryCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrCntryCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_299 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Gender (301)
   //------------------------------------------------------------------
   const DString& s_FldProp_Gender_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_301_5( I_("   ") );
      return( dstrDefValue_301_5 );
   }
   const DString& s_FldProp_Gender_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_301_5( I_("Gender  ") );
      return( dstrFldLabel_301_5 );
   }
   PBF_SSC subset_super_chooser_2_301( const ClientLocale& locale )
   {
      return chooser_ss_002_052; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Gender(
       BFDataFieldProperties::Type::text // field is a text field
      ,Gender // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Gender_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Gender_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_301 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaritalCode (302)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaritalCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_302_5( I_("   ") );
      return( dstrDefValue_302_5 );
   }
   const DString& s_FldProp_MaritalCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_302_5( I_("MaritalCode  ") );
      return( dstrFldLabel_302_5 );
   }
   PBF_SSC subset_super_chooser_2_302( const ClientLocale& locale )
   {
      return chooser_ss_002_031; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaritalCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaritalCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaritalCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaritalCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_302 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaritalDesc (303)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaritalDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_303_4( I_("                                                  ") );
      return( dstrDefValue_303_4 );
   }
   const DString& s_FldProp_MaritalDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_303_4( I_("MaritalDesc ") );
      return( dstrFldLabel_303_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaritalDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaritalDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaritalDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaritalDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Employer (304)
   //------------------------------------------------------------------
   const DString& s_FldProp_Employer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_304_5( I_("                                                  ") );
      return( dstrDefValue_304_5 );
   }
   const DString& s_FldProp_Employer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_304_5( I_("Employer ") );
      return( dstrFldLabel_304_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Employer(
       BFDataFieldProperties::Type::text // field is a text field
      ,Employer // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Employer_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Employer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EmployedYrs (305)
   //------------------------------------------------------------------
   const DString& s_FldProp_EmployedYrs_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_305_4( I_("0.0000000000") );
      return( dstrDefValue_305_4 );
   }
   double s_FldProp_EmployedYrs_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_EmployedYrs_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_305_4( I_("EmployedYrs ") );
      return( dstrFldLabel_305_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EmployedYrs(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EmployedYrs // fieldId
      ,23 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_EmployedYrs_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EmployedYrs_d_DVF // default value
      ,s_FldProp_EmployedYrs_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IndustryCode (306)
   //------------------------------------------------------------------
   const DString& s_FldProp_IndustryCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_306_4( I_("   ") );
      return( dstrDefValue_306_4 );
   }
   const DString& s_FldProp_IndustryCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_306_4( I_("IndustryCode  ") );
      return( dstrFldLabel_306_4 );
   }
   PBF_SSC subset_super_chooser_2_306( const ClientLocale& locale )
   {
      return chooser_ss_002_025; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IndustryCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,IndustryCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IndustryCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IndustryCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_306 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IndustryDesc (307)
   //------------------------------------------------------------------
   const DString& s_FldProp_IndustryDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_307_5( I_("                                                  ") );
      return( dstrDefValue_307_5 );
   }
   const DString& s_FldProp_IndustryDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_307_5( I_("IndustryDesc ") );
      return( dstrFldLabel_307_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IndustryDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,IndustryDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IndustryDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IndustryDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OccupationCode (308)
   //------------------------------------------------------------------
   const DString& s_FldProp_OccupationCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_308_5( I_("   ") );
      return( dstrDefValue_308_5 );
   }
   const DString& s_FldProp_OccupationCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_308_5( I_("OccupationCode   ") );
      return( dstrFldLabel_308_5 );
   }
   PBF_SSC subset_super_chooser_2_308( const ClientLocale& locale )
   {
      if ( locale.getMarketIndex() == 3 && locale.getClientIndex() == 15 )
      {
         return chooser_ss_002_446; // defined in ifast_substitutions_chooser_14.cpp
      }
      if ( locale.getMarketIndex() == 3 )
      {
         return chooser_ss_002_034; // defined in ifast_substitutions_chooser_1.cpp
      }
      return chooser_ss_002_034; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OccupationCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,OccupationCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OccupationCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OccupationCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_308 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OccupationDesc (309)
   //------------------------------------------------------------------
   const DString& s_FldProp_OccupationDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_309_4( I_("                                                  ") );
      return( dstrDefValue_309_4 );
   }
   const DString& s_FldProp_OccupationDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_309_4( I_("OccupationDesc ") );
      return( dstrFldLabel_309_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OccupationDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,OccupationDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OccupationDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OccupationDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AnnualIncomeCode (310)
   //------------------------------------------------------------------
   const DString& s_FldProp_AnnualIncomeCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_310_5( I_("  ") );
      return( dstrDefValue_310_5 );
   }
   const DString& s_FldProp_AnnualIncomeCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_310_5( I_("AnnualIncomeCode ") );
      return( dstrFldLabel_310_5 );
   }
   PBF_SSC subset_super_chooser_2_310( const ClientLocale& locale )
   {
      if ( locale.getMarketIndex() == 3 && locale.getClientIndex() == 15 )
      {
         return chooser_ss_002_447; // defined in ifast_substitutions_chooser_14.cpp
      }
      if ( locale.getMarketIndex() == 3 )
      {
         return chooser_ss_002_009; // defined in ifast_substitutions_chooser_0.cpp
      }
      return chooser_ss_002_009; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AnnualIncomeCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,AnnualIncomeCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AnnualIncomeCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AnnualIncomeCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_310 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AnnualIncomeDesc (311)
   //------------------------------------------------------------------
   const DString& s_FldProp_AnnualIncomeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_311_4( I_("Y") );
      return( dstrDefValue_311_4 );
   }
   const DString& s_FldProp_AnnualIncomeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_311_4( I_("AnnualIncomeDesc ") );
      return( dstrFldLabel_311_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AnnualIncomeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,AnnualIncomeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AnnualIncomeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AnnualIncomeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetWorthCode (312)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetWorthCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_312_4( I_("   ") );
      return( dstrDefValue_312_4 );
   }
   const DString& s_FldProp_NetWorthCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_312_4( I_("NetWorthCode  ") );
      return( dstrFldLabel_312_4 );
   }
   PBF_SSC subset_super_chooser_2_312( const ClientLocale& locale )
   {
      if ( locale.getMarketIndex() == 3 && locale.getClientIndex() == 15 )
      {
         return chooser_ss_002_448; // defined in ifast_substitutions_chooser_14.cpp
      }
      if ( locale.getMarketIndex() == 3 )
      {
         return chooser_ss_002_032; // defined in ifast_substitutions_chooser_1.cpp
      }
      return chooser_ss_002_032; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetWorthCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,NetWorthCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NetWorthCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NetWorthCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_312 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetWorthDesc (313)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetWorthDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_313_5( I_("                                                  ") );
      return( dstrDefValue_313_5 );
   }
   const DString& s_FldProp_NetWorthDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_313_5( I_("NetWorthDesc ") );
      return( dstrFldLabel_313_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetWorthDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,NetWorthDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NetWorthDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NetWorthDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvObjCode (314)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvObjCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_314_5( I_("   ") );
      return( dstrDefValue_314_5 );
   }
   const DString& s_FldProp_InvObjCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_314_5( I_("InvObjCode  ") );
      return( dstrFldLabel_314_5 );
   }
   PBF_SSC subset_super_chooser_2_314( const ClientLocale& locale )
   {
      if ( locale.getMarketIndex() == 3 && locale.getClientIndex() == 15 )
      {
         return chooser_ss_002_452; // defined in ifast_substitutions_chooser_15.cpp
      }
      if ( locale.getMarketIndex() == 3 )
      {
         return chooser_ss_002_033; // defined in ifast_substitutions_chooser_1.cpp
      }
      return chooser_ss_002_033; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvObjCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvObjCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvObjCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvObjCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_314 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvObjDesc (315)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvObjDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_315_4( I_("                                                  ") );
      return( dstrDefValue_315_4 );
   }
   const DString& s_FldProp_InvObjDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_315_4( I_("InvObjDesc ") );
      return( dstrFldLabel_315_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvObjDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvObjDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvObjDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvObjDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvKnowledgeCode (316)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvKnowledgeCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_316_5( I_("   ") );
      return( dstrDefValue_316_5 );
   }
   const DString& s_FldProp_InvKnowledgeCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_316_5( I_("InvKnowledgeCode  ") );
      return( dstrFldLabel_316_5 );
   }
   PBF_SSC subset_super_chooser_2_316( const ClientLocale& locale )
   {
      if ( locale.getMarketIndex() == 3 && locale.getClientIndex() == 15 )
      {
         return chooser_ss_002_449; // defined in ifast_substitutions_chooser_14.cpp
      }
      if ( locale.getMarketIndex() == 3 )
      {
         return chooser_ss_002_027; // defined in ifast_substitutions_chooser_0.cpp
      }
      return chooser_ss_002_027; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvKnowledgeCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvKnowledgeCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvKnowledgeCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvKnowledgeCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_316 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvKnowledgeDesc (317)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvKnowledgeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_317_4( I_("                                                  ") );
      return( dstrDefValue_317_4 );
   }
   const DString& s_FldProp_InvKnowledgeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_317_4( I_("InvKnowledgeDesc ") );
      return( dstrFldLabel_317_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvKnowledgeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvKnowledgeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvKnowledgeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvKnowledgeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvHorizonCode (318)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvHorizonCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_318_4( I_("   ") );
      return( dstrDefValue_318_4 );
   }
   const DString& s_FldProp_InvHorizonCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_318_4( I_("InvHorizonCode  ") );
      return( dstrFldLabel_318_4 );
   }
   PBF_SSC subset_super_chooser_2_318( const ClientLocale& locale )
   {
      if ( locale.getMarketIndex() == 3 && locale.getClientIndex() == 15 )
      {
         return chooser_ss_002_450; // defined in ifast_substitutions_chooser_15.cpp
      }
      if ( locale.getMarketIndex() == 3 )
      {
         return chooser_ss_002_024; // defined in ifast_substitutions_chooser_0.cpp
      }
      return chooser_ss_002_024; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvHorizonCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvHorizonCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvHorizonCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvHorizonCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_318 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvHorizonDesc (319)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvHorizonDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_319_5( I_("                                                  ") );
      return( dstrDefValue_319_5 );
   }
   const DString& s_FldProp_InvHorizonDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_319_5( I_("InvHorizonDesc ") );
      return( dstrFldLabel_319_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvHorizonDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvHorizonDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvHorizonDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvHorizonDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RiskToleranceCode (320)
   //------------------------------------------------------------------
   const DString& s_FldProp_RiskToleranceCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_320_5( I_("   ") );
      return( dstrDefValue_320_5 );
   }
   const DString& s_FldProp_RiskToleranceCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_320_5( I_("RiskToleranceCode  ") );
      return( dstrFldLabel_320_5 );
   }
   PBF_SSC subset_super_chooser_2_320( const ClientLocale& locale )
   {
      if ( locale.getMarketIndex() == 3 && locale.getClientIndex() == 15 )
      {
         return chooser_ss_002_451; // defined in ifast_substitutions_chooser_15.cpp
      }
      if ( locale.getMarketIndex() == 3 )
      {
         return chooser_ss_002_042; // defined in ifast_substitutions_chooser_1.cpp
      }
      return chooser_ss_002_042; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RiskToleranceCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,RiskToleranceCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RiskToleranceCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RiskToleranceCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_320 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RiskToleranceDesc (321)
   //------------------------------------------------------------------
   const DString& s_FldProp_RiskToleranceDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_321_4( I_("                                                  ") );
      return( dstrDefValue_321_4 );
   }
   const DString& s_FldProp_RiskToleranceDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_321_4( I_("RiskToleranceDesc ") );
      return( dstrFldLabel_321_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RiskToleranceDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,RiskToleranceDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RiskToleranceDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RiskToleranceDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OtherInvestments (322)
   //------------------------------------------------------------------
   const DString& s_FldProp_OtherInvestments_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_322_5( I_("N") );
      return( dstrDefValue_322_5 );
   }
   const DString& s_FldProp_OtherInvestments_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_322_5( I_("OtherInvestments") );
      return( dstrFldLabel_322_5 );
   }
   PBF_SSC subset_super_chooser_2_322( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OtherInvestments(
       BFDataFieldProperties::Type::text // field is a text field
      ,OtherInvestments // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OtherInvestments_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OtherInvestments_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_322 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdvisorCode (323)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdvisorCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_323_4( I_("   ") );
      return( dstrDefValue_323_4 );
   }
   const DString& s_FldProp_AdvisorCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_323_4( I_("AdvisorCode  ") );
      return( dstrFldLabel_323_4 );
   }
   PBF_SSC subset_super_chooser_2_323( const ClientLocale& locale )
   {
      return chooser_ss_002_011; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdvisorCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,AdvisorCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AdvisorCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AdvisorCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_323 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdvisorDesc (324)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdvisorDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_324_4( I_("                                                  ") );
      return( dstrDefValue_324_4 );
   }
   const DString& s_FldProp_AdvisorDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_324_4( I_("AdvisorDesc ") );
      return( dstrFldLabel_324_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdvisorDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,AdvisorDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AdvisorDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AdvisorDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WitnessName (325)
   //------------------------------------------------------------------
   const DString& s_FldProp_WitnessName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_325_5( I_("                                                  ") );
      return( dstrDefValue_325_5 );
   }
   const DString& s_FldProp_WitnessName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_325_5( I_("WitnessName ") );
      return( dstrFldLabel_325_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WitnessName(
       BFDataFieldProperties::Type::text // field is a text field
      ,WitnessName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WitnessName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WitnessName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WitnessAddr1 (326)
   //------------------------------------------------------------------
   const DString& s_FldProp_WitnessAddr1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_326_5( I_("                                                  ") );
      return( dstrDefValue_326_5 );
   }
   const DString& s_FldProp_WitnessAddr1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_326_5( I_("WitnessAddr1  ") );
      return( dstrFldLabel_326_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WitnessAddr1(
       BFDataFieldProperties::Type::text // field is a text field
      ,WitnessAddr1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WitnessAddr1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WitnessAddr1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EffectiveDate (327)
   //------------------------------------------------------------------
   const DString& s_FldProp_EffectiveDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_327_4( I_(" ") );
      return( dstrDefValue_327_4 );
   }
   const DString& s_FldProp_EffectiveDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_327_4( I_("EffectiveDate") );
      return( dstrFldLabel_327_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EffectiveDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,EffectiveDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EffectiveDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EffectiveDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PersonalSecCode (328)
   //------------------------------------------------------------------
   const DString& s_FldProp_PersonalSecCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_328_5( I_("                                                  ") );
      return( dstrDefValue_328_5 );
   }
   const DString& s_FldProp_PersonalSecCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_328_5( I_("PersonalSecCode ") );
      return( dstrFldLabel_328_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PersonalSecCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,PersonalSecCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PersonalSecCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PersonalSecCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransAmount (331)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransAmount_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_331_5( I_("0") );
         return( dstrDefValue_331_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_331_8( I_("0") );
         return( dstrDefValue_331_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_331_7( I_("0") );
         return( dstrDefValue_331_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_331_6( I_("0") );
         return( dstrDefValue_331_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_331_4( I_("0.0000000000") );
         return( dstrDefValue_331_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_331_3( I_("0") );
         return( dstrDefValue_331_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_331_1( I_("0") );
         return( dstrDefValue_331_1 );
      }
      static const DString dstrDefValue_331_1( I_("0") );
      return( dstrDefValue_331_1 );
   }
   double s_FldProp_TransAmount_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_TransAmount_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_331_5( I_("TransAmount ") );
         return( dstrFldLabel_331_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_331_8( I_("TransAmount ") );
         return( dstrFldLabel_331_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_331_7( I_("TransAmount ") );
         return( dstrFldLabel_331_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_331_6( I_("TransAmount ") );
         return( dstrFldLabel_331_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_331_4( I_("TransAmount ") );
         return( dstrFldLabel_331_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_331_3( I_("TransAmount ") );
         return( dstrFldLabel_331_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_331_1( I_("TransAmount ") );
         return( dstrFldLabel_331_1 );
      }
      static const DString dstrFldLabel_331_1( I_("TransAmount ") );
      return( dstrFldLabel_331_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TransAmount // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_TransAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TransAmount_d_DVF // default value
      ,s_FldProp_TransAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Units (332)
   //------------------------------------------------------------------
   const DString& s_FldProp_Units_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_332_5( I_("0.0000") );
         return( dstrDefValue_332_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_332_8( I_("0.0000") );
         return( dstrDefValue_332_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_332_7( I_("0.0000") );
         return( dstrDefValue_332_7 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_332_4( I_("0.0000000000") );
         return( dstrDefValue_332_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_332_3( I_("0.0000") );
         return( dstrDefValue_332_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_332_1( I_("0.0000") );
         return( dstrDefValue_332_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_332_6( I_("0.0000") );
         return( dstrDefValue_332_6 );
      }
      static const DString dstrDefValue_332_1( I_("0.0000") );
      return( dstrDefValue_332_1 );
   }
   double s_FldProp_Units_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0000 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0000 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0000 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0000 );
      }
      return( 0.0000 );
   }
   const DString& s_FldProp_Units_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_332_5( I_("Units ") );
         return( dstrFldLabel_332_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_332_8( I_("Units ") );
         return( dstrFldLabel_332_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_332_7( I_("Units ") );
         return( dstrFldLabel_332_7 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_332_4( I_("Units ") );
         return( dstrFldLabel_332_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_332_3( I_("Units ") );
         return( dstrFldLabel_332_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_332_1( I_("Units ") );
         return( dstrFldLabel_332_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_332_6( I_("Units ") );
         return( dstrFldLabel_332_6 );
      }
      static const DString dstrFldLabel_332_1( I_("Units ") );
      return( dstrFldLabel_332_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Units(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Units // fieldId
      ,23 // length
      ,0 // minimum length
      ,4 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_Units_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Units_d_DVF // default value
      ,s_FldProp_Units_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnitsHeld (333)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnitsHeld_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_333_4( I_("0.0000000000") );
         return( dstrDefValue_333_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_333_7( I_("0") );
         return( dstrDefValue_333_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_333_5( I_("0") );
         return( dstrDefValue_333_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_333_8( I_("0") );
         return( dstrDefValue_333_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_333_3( I_("0") );
         return( dstrDefValue_333_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_333_1( I_("0") );
         return( dstrDefValue_333_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_333_6( I_("0") );
         return( dstrDefValue_333_6 );
      }
      static const DString dstrDefValue_333_1( I_("0") );
      return( dstrDefValue_333_1 );
   }
   double s_FldProp_UnitsHeld_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_UnitsHeld_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_333_4( I_("UnitsHeld ") );
         return( dstrFldLabel_333_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_333_7( I_("UnitsHeld ") );
         return( dstrFldLabel_333_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_333_5( I_("UnitsHeld ") );
         return( dstrFldLabel_333_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_333_8( I_("UnitsHeld ") );
         return( dstrFldLabel_333_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_333_3( I_("UnitsHeld ") );
         return( dstrFldLabel_333_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_333_1( I_("UnitsHeld ") );
         return( dstrFldLabel_333_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_333_6( I_("UnitsHeld ") );
         return( dstrFldLabel_333_6 );
      }
      static const DString dstrFldLabel_333_1( I_("UnitsHeld ") );
      return( dstrFldLabel_333_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnitsHeld(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnitsHeld // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_UnitsHeld_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnitsHeld_d_DVF // default value
      ,s_FldProp_UnitsHeld_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdjustedCost (334)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdjustedCost_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_334_5( I_("0") );
         return( dstrDefValue_334_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_334_8( I_("0") );
         return( dstrDefValue_334_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_334_7( I_("0") );
         return( dstrDefValue_334_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_334_6( I_("0") );
         return( dstrDefValue_334_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_334_4( I_("0.0000000000") );
         return( dstrDefValue_334_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_334_3( I_("0") );
         return( dstrDefValue_334_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_334_1( I_("0") );
         return( dstrDefValue_334_1 );
      }
      static const DString dstrDefValue_334_1( I_("0") );
      return( dstrDefValue_334_1 );
   }
   double s_FldProp_AdjustedCost_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_AdjustedCost_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_334_5( I_("AdjustedCost ") );
         return( dstrFldLabel_334_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_334_8( I_("AdjustedCost ") );
         return( dstrFldLabel_334_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_334_7( I_("AdjustedCost ") );
         return( dstrFldLabel_334_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_334_6( I_("AdjustedCost ") );
         return( dstrFldLabel_334_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_334_4( I_("AdjustedCost ") );
         return( dstrFldLabel_334_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_334_3( I_("AdjustedCost ") );
         return( dstrFldLabel_334_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_334_1( I_("AdjustedCost ") );
         return( dstrFldLabel_334_1 );
      }
      static const DString dstrFldLabel_334_1( I_("AdjustedCost ") );
      return( dstrFldLabel_334_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdjustedCost(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AdjustedCost // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_AdjustedCost_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AdjustedCost_d_DVF // default value
      ,s_FldProp_AdjustedCost_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBPerUnit (335)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBPerUnit_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_335_4( I_("0.0000000000") );
         return( dstrDefValue_335_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_335_7( I_("0") );
         return( dstrDefValue_335_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_335_8( I_("0") );
         return( dstrDefValue_335_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_335_5( I_("0") );
         return( dstrDefValue_335_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_335_1( I_("0") );
         return( dstrDefValue_335_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_335_6( I_("0") );
         return( dstrDefValue_335_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_335_3( I_("0") );
         return( dstrDefValue_335_3 );
      }
      static const DString dstrDefValue_335_1( I_("0") );
      return( dstrDefValue_335_1 );
   }
   double s_FldProp_ACBPerUnit_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_ACBPerUnit_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_335_4( I_("ACBPerUnit ") );
         return( dstrFldLabel_335_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_335_7( I_("ACBPerUnit ") );
         return( dstrFldLabel_335_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_335_8( I_("ACBPerUnit ") );
         return( dstrFldLabel_335_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_335_5( I_("ACBPerUnit ") );
         return( dstrFldLabel_335_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_335_1( I_("ACBPerUnit ") );
         return( dstrFldLabel_335_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_335_6( I_("ACBPerUnit ") );
         return( dstrFldLabel_335_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_335_3( I_("ACBPerUnit ") );
         return( dstrFldLabel_335_3 );
      }
      static const DString dstrFldLabel_335_1( I_("ACBPerUnit ") );
      return( dstrFldLabel_335_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBPerUnit(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ACBPerUnit // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_ACBPerUnit_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ACBPerUnit_d_DVF // default value
      ,s_FldProp_ACBPerUnit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GainOrLossAmt (336)
   //------------------------------------------------------------------
   const DString& s_FldProp_GainOrLossAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_336_4( I_("0.0000000000") );
      return( dstrDefValue_336_4 );
   }
   double s_FldProp_GainOrLossAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_GainOrLossAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_336_4( I_("GainOrLossAmt ") );
      return( dstrFldLabel_336_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GainOrLossAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GainOrLossAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,4 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GainOrLossAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GainOrLossAmt_d_DVF // default value
      ,s_FldProp_GainOrLossAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransTypeDesc (337)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_337_5( I_("                                                  ") );
      return( dstrDefValue_337_5 );
   }
   const DString& s_FldProp_TransTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_337_5( I_("TransTypeDesc ") );
      return( dstrFldLabel_337_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,TransTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TransTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundToCode (340)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundToCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_340_5( I_("                                                  ") );
      return( dstrDefValue_340_5 );
   }
   const DString& s_FldProp_FundToCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_340_5( I_("FundToCode ") );
      return( dstrFldLabel_340_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundToCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundToCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundToCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundToCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ClassToCode (341)
   //------------------------------------------------------------------
   const DString& s_FldProp_ClassToCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_341_3( I_("                                                  ") );
      return( dstrDefValue_341_3 );
   }
   const DString& s_FldProp_ClassToCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_341_3( I_("ClassToCode ") );
      return( dstrFldLabel_341_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ClassToCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,ClassToCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ClassToCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ClassToCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocPercent (342)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocPercent_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_342_4( I_("0.0000000000") );
         return( dstrDefValue_342_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_342_7( I_("0") );
         return( dstrDefValue_342_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_342_5( I_("0") );
         return( dstrDefValue_342_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_342_8( I_("0") );
         return( dstrDefValue_342_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_342_3( I_("0") );
         return( dstrDefValue_342_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_342_1( I_("0") );
         return( dstrDefValue_342_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_342_6( I_("0") );
         return( dstrDefValue_342_6 );
      }
      static const DString dstrDefValue_342_1( I_("0") );
      return( dstrDefValue_342_1 );
   }
   double s_FldProp_AllocPercent_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_AllocPercent_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_342_4( I_("AllocPercent ") );
         return( dstrFldLabel_342_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_342_7( I_("AllocPercent ") );
         return( dstrFldLabel_342_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_342_5( I_("AllocPercent ") );
         return( dstrFldLabel_342_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_342_8( I_("AllocPercent ") );
         return( dstrFldLabel_342_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_342_3( I_("AllocPercent ") );
         return( dstrFldLabel_342_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_342_1( I_("AllocPercent ") );
         return( dstrFldLabel_342_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_342_6( I_("AllocPercent ") );
         return( dstrFldLabel_342_6 );
      }
      static const DString dstrFldLabel_342_1( I_("AllocPercent ") );
      return( dstrFldLabel_342_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocPercent(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AllocPercent // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_AllocPercent_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AllocPercent_d_DVF // default value
      ,s_FldProp_AllocPercent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PaymentReason (343)
   //------------------------------------------------------------------
   const DString& s_FldProp_PaymentReason_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_343_5( I_("                                                  ") );
      return( dstrDefValue_343_5 );
   }
   const DString& s_FldProp_PaymentReason_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_343_5( I_("PaymentReason ") );
      return( dstrFldLabel_343_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PaymentReason(
       BFDataFieldProperties::Type::text // field is a text field
      ,PaymentReason // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PaymentReason_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PaymentReason_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CountryCode (344)
   //------------------------------------------------------------------
   const DString& s_FldProp_CountryCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_344_5( I_("  ") );
      return( dstrDefValue_344_5 );
   }
   const DString& s_FldProp_CountryCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_344_5( I_("CountryCode ") );
      return( dstrFldLabel_344_5 );
   }
   PBF_SSC subset_super_chooser_2_344( const ClientLocale& locale )
   {
      return chooser_ss_002_013; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CountryCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,CountryCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CountryCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CountryCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_344 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CountryCodeDesc (345)
   //------------------------------------------------------------------
   const DString& s_FldProp_CountryCodeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_345_4( I_("                                                  ") );
      return( dstrDefValue_345_4 );
   }
   const DString& s_FldProp_CountryCodeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_345_4( I_("CountryCodeDesc ") );
      return( dstrFldLabel_345_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CountryCodeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,CountryCodeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CountryCodeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CountryCodeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleDate (348)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_348_4( I_("         ") );
      return( dstrDefValue_348_4 );
   }
   const DString& s_FldProp_SettleDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_348_4( I_("SettleDate ") );
      return( dstrFldLabel_348_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,SettleDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettleDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettleDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Settled (349)
   //------------------------------------------------------------------
   const DString& s_FldProp_Settled_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_349_5( I_(" ") );
      return( dstrDefValue_349_5 );
   }
   const DString& s_FldProp_Settled_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_349_5( I_("Settled ") );
      return( dstrFldLabel_349_5 );
   }
   PBF_SSC subset_super_chooser_2_349( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Settled(
       BFDataFieldProperties::Type::text // field is a text field
      ,Settled // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Settled_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Settled_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_349 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GrossAmt (350)
   //------------------------------------------------------------------
   const DString& s_FldProp_GrossAmt_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_350_5( I_("0") );
         return( dstrDefValue_350_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_350_8( I_("0") );
         return( dstrDefValue_350_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_350_7( I_("0") );
         return( dstrDefValue_350_7 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_350_4( I_("0000000000000000000000000000000000000000000000000") );
         return( dstrDefValue_350_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_350_3( I_("0") );
         return( dstrDefValue_350_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_350_1( I_("0") );
         return( dstrDefValue_350_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_350_6( I_("0") );
         return( dstrDefValue_350_6 );
      }
      static const DString dstrDefValue_350_1( I_("0") );
      return( dstrDefValue_350_1 );
   }
   double s_FldProp_GrossAmt_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0000000000000000000000000000000000000000000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_GrossAmt_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_350_5( I_("GrossAmt ") );
         return( dstrFldLabel_350_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_350_8( I_("GrossAmt ") );
         return( dstrFldLabel_350_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_350_7( I_("GrossAmt ") );
         return( dstrFldLabel_350_7 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_350_4( I_("GrossAmt ") );
         return( dstrFldLabel_350_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_350_3( I_("GrossAmt ") );
         return( dstrFldLabel_350_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_350_1( I_("GrossAmt ") );
         return( dstrFldLabel_350_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_350_6( I_("GrossAmt ") );
         return( dstrFldLabel_350_6 );
      }
      static const DString dstrFldLabel_350_1( I_("GrossAmt ") );
      return( dstrFldLabel_350_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GrossAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GrossAmt // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_GrossAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GrossAmt_d_DVF // default value
      ,s_FldProp_GrossAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetAmt (351)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetAmt_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_351_4( I_("0000000000000000000000000000000000000000000000000") );
         return( dstrDefValue_351_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_351_7( I_("0") );
         return( dstrDefValue_351_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_351_5( I_("0") );
         return( dstrDefValue_351_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_351_8( I_("0") );
         return( dstrDefValue_351_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_351_3( I_("0") );
         return( dstrDefValue_351_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_351_1( I_("0") );
         return( dstrDefValue_351_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_351_6( I_("0") );
         return( dstrDefValue_351_6 );
      }
      static const DString dstrDefValue_351_1( I_("0") );
      return( dstrDefValue_351_1 );
   }
   double s_FldProp_NetAmt_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0000000000000000000000000000000000000000000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_NetAmt_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_351_4( I_("NetAmt ") );
         return( dstrFldLabel_351_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_351_7( I_("NetAmt ") );
         return( dstrFldLabel_351_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_351_5( I_("NetAmt ") );
         return( dstrFldLabel_351_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_351_8( I_("NetAmt ") );
         return( dstrFldLabel_351_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_351_3( I_("NetAmt ") );
         return( dstrFldLabel_351_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_351_1( I_("NetAmt ") );
         return( dstrFldLabel_351_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_351_6( I_("NetAmt ") );
         return( dstrFldLabel_351_6 );
      }
      static const DString dstrFldLabel_351_1( I_("NetAmt ") );
      return( dstrFldLabel_351_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,NetAmt // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_NetAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_NetAmt_d_DVF // default value
      ,s_FldProp_NetAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnitPrice (352)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnitPrice_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_352_5( I_("0") );
         return( dstrDefValue_352_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_352_8( I_("0") );
         return( dstrDefValue_352_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_352_7( I_("0") );
         return( dstrDefValue_352_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_352_6( I_("0") );
         return( dstrDefValue_352_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_352_4( I_("0000000000000000000000000000000000000000000000000") );
         return( dstrDefValue_352_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_352_3( I_("0") );
         return( dstrDefValue_352_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_352_1( I_("0") );
         return( dstrDefValue_352_1 );
      }
      static const DString dstrDefValue_352_1( I_("0") );
      return( dstrDefValue_352_1 );
   }
   double s_FldProp_UnitPrice_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0000000000000000000000000000000000000000000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_UnitPrice_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_352_5( I_("UnitPrice ") );
         return( dstrFldLabel_352_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_352_8( I_("UnitPrice ") );
         return( dstrFldLabel_352_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_352_7( I_("UnitPrice ") );
         return( dstrFldLabel_352_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_352_6( I_("UnitPrice ") );
         return( dstrFldLabel_352_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_352_4( I_("UnitPrice ") );
         return( dstrFldLabel_352_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_352_3( I_("UnitPrice ") );
         return( dstrFldLabel_352_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_352_1( I_("UnitPrice ") );
         return( dstrFldLabel_352_1 );
      }
      static const DString dstrFldLabel_352_1( I_("UnitPrice ") );
      return( dstrFldLabel_352_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnitPrice(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnitPrice // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_UnitPrice_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnitPrice_d_DVF // default value
      ,s_FldProp_UnitPrice_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnitBalance (353)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnitBalance_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_353_4( I_("0") );
      return( dstrDefValue_353_4 );
   }
   double s_FldProp_UnitBalance_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_UnitBalance_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_353_4( I_("UnitBalance  ") );
      return( dstrFldLabel_353_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnitBalance(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnitBalance // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_UnitBalance_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnitBalance_d_DVF // default value
      ,s_FldProp_UnitBalance_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Cancelled (354)
   //------------------------------------------------------------------
   const DString& s_FldProp_Cancelled_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_354_4( I_(" ") );
      return( dstrDefValue_354_4 );
   }
   const DString& s_FldProp_Cancelled_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_354_4( I_("Cancelled ") );
      return( dstrFldLabel_354_4 );
   }
   PBF_SSC subset_super_chooser_2_354( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Cancelled(
       BFDataFieldProperties::Type::text // field is a text field
      ,Cancelled // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Cancelled_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Cancelled_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_354 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Reversal (355)
   //------------------------------------------------------------------
   const DString& s_FldProp_Reversal_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_355_5( I_(" N") );
         return( dstrDefValue_355_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_355_8( I_(" N") );
         return( dstrDefValue_355_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_355_7( I_(" ") );
         return( dstrDefValue_355_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_355_6( I_(" ") );
         return( dstrDefValue_355_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_355_4( I_(" ") );
         return( dstrDefValue_355_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_355_3( I_(" N") );
         return( dstrDefValue_355_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_355_1( I_(" N") );
         return( dstrDefValue_355_1 );
      }
      static const DString dstrDefValue_355_1( I_(" N") );
      return( dstrDefValue_355_1 );
   }
   const DString& s_FldProp_Reversal_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_355_5( I_("Reversal ") );
         return( dstrFldLabel_355_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_355_8( I_("Reversal ") );
         return( dstrFldLabel_355_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_355_7( I_("Reversal ") );
         return( dstrFldLabel_355_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_355_6( I_("Reversal ") );
         return( dstrFldLabel_355_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_355_4( I_("Reversal ") );
         return( dstrFldLabel_355_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_355_3( I_("Reversal ") );
         return( dstrFldLabel_355_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_355_1( I_("Reversal ") );
         return( dstrFldLabel_355_1 );
      }
      static const DString dstrFldLabel_355_1( I_("Reversal ") );
      return( dstrFldLabel_355_1 );
   }
   PBF_SSC subset_super_chooser_2_355( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Reversal(
       BFDataFieldProperties::Type::text // field is a text field
      ,Reversal // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Reversal_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Reversal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_355 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OrderBatch (356)
   //------------------------------------------------------------------
   const DString& s_FldProp_OrderBatch_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_356_5( I_("                                                  ") );
      return( dstrDefValue_356_5 );
   }
   const DString& s_FldProp_OrderBatch_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_356_5( I_("OrderBatch ") );
      return( dstrFldLabel_356_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OrderBatch(
       BFDataFieldProperties::Type::text // field is a text field
      ,OrderBatch // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OrderBatch_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OrderBatch_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OrderTrace (357)
   //------------------------------------------------------------------
   const DString& s_FldProp_OrderTrace_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_357_4( I_("0000000000") );
      return( dstrDefValue_357_4 );
   }
   DIINT64 s_FldProp_OrderTrace_i_DVF( const ClientLocale& locale )
   {
      return( 0000000000 );
   }
   const DString& s_FldProp_OrderTrace_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_357_4( I_("OrderTrace ") );
      return( dstrFldLabel_357_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OrderTrace(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,OrderTrace // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_OrderTrace_s_DVF // default value
      ,s_FldProp_OrderTrace_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_OrderTrace_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OrderUser (358)
   //------------------------------------------------------------------
   const DString& s_FldProp_OrderUser_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_358_5( I_("                                                  ") );
      return( dstrDefValue_358_5 );
   }
   const DString& s_FldProp_OrderUser_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_358_5( I_("OrderUser ") );
      return( dstrFldLabel_358_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OrderUser(
       BFDataFieldProperties::Type::text // field is a text field
      ,OrderUser // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OrderUser_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OrderUser_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CancelBatch (359)
   //------------------------------------------------------------------
   const DString& s_FldProp_CancelBatch_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_359_4( I_("                                                  ") );
      return( dstrDefValue_359_4 );
   }
   const DString& s_FldProp_CancelBatch_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_359_4( I_("CancelBatch ") );
      return( dstrFldLabel_359_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CancelBatch(
       BFDataFieldProperties::Type::text // field is a text field
      ,CancelBatch // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CancelBatch_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CancelBatch_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CancelTrace (360)
   //------------------------------------------------------------------
   const DString& s_FldProp_CancelTrace_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_360_4( I_("0000000000") );
      return( dstrDefValue_360_4 );
   }
   DIINT64 s_FldProp_CancelTrace_i_DVF( const ClientLocale& locale )
   {
      return( 0000000000 );
   }
   const DString& s_FldProp_CancelTrace_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_360_4( I_("CancelTrace ") );
      return( dstrFldLabel_360_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CancelTrace(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,CancelTrace // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_CancelTrace_s_DVF // default value
      ,s_FldProp_CancelTrace_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_CancelTrace_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CancelUser (361)
   //------------------------------------------------------------------
   const DString& s_FldProp_CancelUser_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_361_5( I_("                                                  ") );
      return( dstrDefValue_361_5 );
   }
   const DString& s_FldProp_CancelUser_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_361_5( I_("CancelUser ") );
      return( dstrFldLabel_361_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CancelUser(
       BFDataFieldProperties::Type::text // field is a text field
      ,CancelUser // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CancelUser_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CancelUser_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleBatch (362)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleBatch_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_362_5( I_("                                                  ") );
      return( dstrDefValue_362_5 );
   }
   const DString& s_FldProp_SettleBatch_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_362_5( I_("SettleBatch ") );
      return( dstrFldLabel_362_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleBatch(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettleBatch // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettleBatch_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettleBatch_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleTrace (363)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleTrace_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_363_8( I_("0000000000") );
      return( dstrDefValue_363_8 );
   }
   DIINT64 s_FldProp_SettleTrace_i_DVF( const ClientLocale& locale )
   {
      return( 0000000000 );
   }
   const DString& s_FldProp_SettleTrace_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_363_8( I_("SettleTrace ") );
      return( dstrFldLabel_363_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleTrace(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,SettleTrace // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_SettleTrace_s_DVF // default value
      ,s_FldProp_SettleTrace_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_SettleTrace_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleUser (364)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleUser_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_364_7( I_("                                                  ") );
      return( dstrDefValue_364_7 );
   }
   const DString& s_FldProp_SettleUser_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_364_7( I_("SettleUser ") );
      return( dstrFldLabel_364_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleUser(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettleUser // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettleUser_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettleUser_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_VerifiedBy (365)
   //------------------------------------------------------------------
   const DString& s_FldProp_VerifiedBy_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_365_5( I_("                                                  ") );
      return( dstrDefValue_365_5 );
   }
   const DString& s_FldProp_VerifiedBy_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_365_5( I_("VerifiedBy ") );
      return( dstrFldLabel_365_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_VerifiedBy(
       BFDataFieldProperties::Type::text // field is a text field
      ,VerifiedBy // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_VerifiedBy_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_VerifiedBy_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TfrAcct (366)
   //------------------------------------------------------------------
   const DString& s_FldProp_TfrAcct_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_366_4( I_("00000000000000000") );
      return( dstrDefValue_366_4 );
   }
   DIINT64 s_FldProp_TfrAcct_i_DVF( const ClientLocale& locale )
   {
      return( 00000000000000000 );
   }
   const DString& s_FldProp_TfrAcct_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_366_4( I_("TfrAcct ") );
      return( dstrFldLabel_366_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TfrAcct(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,TfrAcct // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_27 // mask chooser function
      ,s_FldProp_TfrAcct_s_DVF // default value
      ,s_FldProp_TfrAcct_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_TfrAcct_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TfrFund (367)
   //------------------------------------------------------------------
   const DString& s_FldProp_TfrFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_367_5( I_("                                                  ") );
      return( dstrDefValue_367_5 );
   }
   const DString& s_FldProp_TfrFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_367_5( I_("TfrFund ") );
      return( dstrFldLabel_367_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TfrFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,TfrFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TfrFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TfrFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TfrClass (368)
   //------------------------------------------------------------------
   const DString& s_FldProp_TfrClass_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_368_5( I_("                                                  ") );
      return( dstrDefValue_368_5 );
   }
   const DString& s_FldProp_TfrClass_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_368_5( I_("TfrClass ") );
      return( dstrFldLabel_368_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TfrClass(
       BFDataFieldProperties::Type::text // field is a text field
      ,TfrClass // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TfrClass_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TfrClass_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxAcctNum (371)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxAcctNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_371_4( I_("0") );
      return( dstrDefValue_371_4 );
   }
   DIINT64 s_FldProp_rxAcctNum_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_rxAcctNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_371_4( I_("rxAcctNum") );
      return( dstrFldLabel_371_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxAcctNum(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,rxAcctNum // fieldId
      ,17 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_27 // mask chooser function
      ,s_FldProp_rxAcctNum_s_DVF // default value
      ,s_FldProp_rxAcctNum_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_rxAcctNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CertNumber (372)
   //------------------------------------------------------------------
   const DString& s_FldProp_CertNumber_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_372_4( I_("                                                  ") );
      return( dstrDefValue_372_4 );
   }
   const DString& s_FldProp_CertNumber_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_372_4( I_("CertNumber ") );
      return( dstrFldLabel_372_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CertNumber(
       BFDataFieldProperties::Type::text // field is a text field
      ,CertNumber // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CertNumber_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CertNumber_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_XrefNumber (373)
   //------------------------------------------------------------------
   const DString& s_FldProp_XrefNumber_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_373_5( I_("                                                  ") );
      return( dstrDefValue_373_5 );
   }
   const DString& s_FldProp_XrefNumber_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_373_5( I_("XrefNumber ") );
      return( dstrFldLabel_373_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_XrefNumber(
       BFDataFieldProperties::Type::text // field is a text field
      ,XrefNumber // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_XrefNumber_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_XrefNumber_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StatusDesc (374)
   //------------------------------------------------------------------
   const DString& s_FldProp_StatusDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_374_5( I_("                                                  ") );
      return( dstrDefValue_374_5 );
   }
   const DString& s_FldProp_StatusDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_374_5( I_("StatusDesc ") );
      return( dstrFldLabel_374_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StatusDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,StatusDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StatusDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StatusDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Issued (375)
   //------------------------------------------------------------------
   const DString& s_FldProp_Issued_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_375_8( I_(" ") );
      return( dstrDefValue_375_8 );
   }
   const DString& s_FldProp_Issued_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_375_8( I_("Issued ") );
      return( dstrFldLabel_375_8 );
   }
   PBF_SSC subset_super_chooser_2_375( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Issued(
       BFDataFieldProperties::Type::text // field is a text field
      ,Issued // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Issued_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Issued_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_375 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IssueDate (376)
   //------------------------------------------------------------------
   const DString& s_FldProp_IssueDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_376_7( I_("") );
      return( dstrDefValue_376_7 );
   }
   const DString& s_FldProp_IssueDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_376_7( I_("IssueDate ") );
      return( dstrFldLabel_376_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IssueDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,IssueDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IssueDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IssueDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctUnits (377)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_377_5( I_("0.0000000000") );
      return( dstrDefValue_377_5 );
   }
   double s_FldProp_AcctUnits_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_AcctUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_377_5( I_("AcctUnits ") );
      return( dstrFldLabel_377_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_AcctUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctUnits_d_DVF // default value
      ,s_FldProp_AcctUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IssuedUnits (378)
   //------------------------------------------------------------------
   const DString& s_FldProp_IssuedUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_378_4( I_("0.0000000000") );
      return( dstrDefValue_378_4 );
   }
   double s_FldProp_IssuedUnits_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_IssuedUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_378_4( I_("IssuedUnits ") );
      return( dstrFldLabel_378_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IssuedUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,IssuedUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_IssuedUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_IssuedUnits_d_DVF // default value
      ,s_FldProp_IssuedUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnIssuedUnits (379)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnIssuedUnits_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_379_5( I_("0") );
         return( dstrDefValue_379_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_379_8( I_("0") );
         return( dstrDefValue_379_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_379_7( I_("0") );
         return( dstrDefValue_379_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_379_6( I_("0") );
         return( dstrDefValue_379_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_379_4( I_("0.0000000000") );
         return( dstrDefValue_379_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_379_3( I_("0") );
         return( dstrDefValue_379_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_379_1( I_("0") );
         return( dstrDefValue_379_1 );
      }
      static const DString dstrDefValue_379_1( I_("0") );
      return( dstrDefValue_379_1 );
   }
   double s_FldProp_UnIssuedUnits_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_UnIssuedUnits_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_379_5( I_("UnIssuedUnits ") );
         return( dstrFldLabel_379_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_379_8( I_("UnIssuedUnits ") );
         return( dstrFldLabel_379_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_379_7( I_("UnIssuedUnits ") );
         return( dstrFldLabel_379_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_379_6( I_("UnIssuedUnits ") );
         return( dstrFldLabel_379_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_379_4( I_("UnIssuedUnits ") );
         return( dstrFldLabel_379_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_379_3( I_("UnIssuedUnits ") );
         return( dstrFldLabel_379_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_379_1( I_("UnIssuedUnits ") );
         return( dstrFldLabel_379_1 );
      }
      static const DString dstrFldLabel_379_1( I_("UnIssuedUnits ") );
      return( dstrFldLabel_379_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnIssuedUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnIssuedUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_UnIssuedUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnIssuedUnits_d_DVF // default value
      ,s_FldProp_UnIssuedUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastStatusCode (380)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastStatusCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_380_5( I_("                                                  ") );
      return( dstrDefValue_380_5 );
   }
   const DString& s_FldProp_LastStatusCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_380_5( I_("LastStatusCode ") );
      return( dstrFldLabel_380_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastStatusCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,LastStatusCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LastStatusCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LastStatusCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastStatusDesc (381)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastStatusDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_381_8( I_("                                                  ") );
      return( dstrDefValue_381_8 );
   }
   const DString& s_FldProp_LastStatusDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_381_8( I_("LastStatusDesc ") );
      return( dstrFldLabel_381_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastStatusDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,LastStatusDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LastStatusDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LastStatusDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Reported (382)
   //------------------------------------------------------------------
   const DString& s_FldProp_Reported_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_382_7( I_(" ") );
      return( dstrDefValue_382_7 );
   }
   const DString& s_FldProp_Reported_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_382_7( I_("Reported ") );
      return( dstrFldLabel_382_7 );
   }
   PBF_SSC subset_super_chooser_2_382( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Reported(
       BFDataFieldProperties::Type::text // field is a text field
      ,Reported // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Reported_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Reported_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_382 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastRptDate (383)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastRptDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_383_5( I_("         ") );
      return( dstrDefValue_383_5 );
   }
   const DString& s_FldProp_LastRptDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_383_5( I_("LastRptDate ") );
      return( dstrFldLabel_383_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastRptDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,LastRptDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LastRptDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LastRptDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Comments (384)
   //------------------------------------------------------------------
   const DString& s_FldProp_Comments_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_384_8( I_("                                                  ") );
      return( dstrDefValue_384_8 );
   }
   const DString& s_FldProp_Comments_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_384_8( I_("Comments ") );
      return( dstrFldLabel_384_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Comments(
       BFDataFieldProperties::Type::text // field is a text field
      ,Comments // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Comments_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Comments_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PShipCode (387)
   //------------------------------------------------------------------
   const DString& s_FldProp_PShipCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_387_4( I_("                                                  ") );
      return( dstrDefValue_387_4 );
   }
   const DString& s_FldProp_PShipCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_387_4( I_("PShipCode ") );
      return( dstrFldLabel_387_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PShipCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,PShipCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PShipCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PShipCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FreeYear (388)
   //------------------------------------------------------------------
   const DString& s_FldProp_FreeYear_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_388_5( I_("0000000000") );
      return( dstrDefValue_388_5 );
   }
   DIINT64 s_FldProp_FreeYear_i_DVF( const ClientLocale& locale )
   {
      return( 0000000000 );
   }
   const DString& s_FldProp_FreeYear_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_388_5( I_("FreeYear ") );
      return( dstrFldLabel_388_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FreeYear(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,FreeYear // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_FreeYear_s_DVF // default value
      ,s_FldProp_FreeYear_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_FreeYear_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EligibleAmt (389)
   //------------------------------------------------------------------
   const DString& s_FldProp_EligibleAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_389_4( I_("00000000000000000000000") );
      return( dstrDefValue_389_4 );
   }
   double s_FldProp_EligibleAmt_d_DVF( const ClientLocale& locale )
   {
      return( 00000000000000000000000 );
   }
   const DString& s_FldProp_EligibleAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_389_4( I_("EligibleAmt    ") );
      return( dstrFldLabel_389_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EligibleAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EligibleAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_EligibleAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EligibleAmt_d_DVF // default value
      ,s_FldProp_EligibleAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EligibleUnits (390)
   //------------------------------------------------------------------
   const DString& s_FldProp_EligibleUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_390_5( I_("00000000000000000000000") );
      return( dstrDefValue_390_5 );
   }
   double s_FldProp_EligibleUnits_d_DVF( const ClientLocale& locale )
   {
      return( 00000000000000000000000 );
   }
   const DString& s_FldProp_EligibleUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_390_5( I_("EligibleUnits    ") );
      return( dstrFldLabel_390_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EligibleUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EligibleUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_EligibleUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EligibleUnits_d_DVF // default value
      ,s_FldProp_EligibleUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UsedAmt (391)
   //------------------------------------------------------------------
   const DString& s_FldProp_UsedAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_391_5( I_("00000000000000000000000") );
      return( dstrDefValue_391_5 );
   }
   double s_FldProp_UsedAmt_d_DVF( const ClientLocale& locale )
   {
      return( 00000000000000000000000 );
   }
   const DString& s_FldProp_UsedAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_391_5( I_("UsedAmt   ") );
      return( dstrFldLabel_391_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UsedAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UsedAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_UsedAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UsedAmt_d_DVF // default value
      ,s_FldProp_UsedAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UsedUnits (392)
   //------------------------------------------------------------------
   const DString& s_FldProp_UsedUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_392_4( I_("00000000000000000000000") );
      return( dstrDefValue_392_4 );
   }
   double s_FldProp_UsedUnits_d_DVF( const ClientLocale& locale )
   {
      return( 00000000000000000000000 );
   }
   const DString& s_FldProp_UsedUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_392_4( I_("UsedUnits   ") );
      return( dstrFldLabel_392_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UsedUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UsedUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_UsedUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UsedUnits_d_DVF // default value
      ,s_FldProp_UsedUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LeftAmt (393)
   //------------------------------------------------------------------
   const DString& s_FldProp_LeftAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_393_5( I_("00000000000000000000000") );
      return( dstrDefValue_393_5 );
   }
   double s_FldProp_LeftAmt_d_DVF( const ClientLocale& locale )
   {
      return( 00000000000000000000000 );
   }
   const DString& s_FldProp_LeftAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_393_5( I_("LeftAmt   ") );
      return( dstrFldLabel_393_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LeftAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,LeftAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_LeftAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_LeftAmt_d_DVF // default value
      ,s_FldProp_LeftAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LeftUnits (394)
   //------------------------------------------------------------------
   const DString& s_FldProp_LeftUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_394_4( I_("00000000000000000000000") );
      return( dstrDefValue_394_4 );
   }
   double s_FldProp_LeftUnits_d_DVF( const ClientLocale& locale )
   {
      return( 00000000000000000000000 );
   }
   const DString& s_FldProp_LeftUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_394_4( I_("LeftUnits   ") );
      return( dstrFldLabel_394_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LeftUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,LeftUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_LeftUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_LeftUnits_d_DVF // default value
      ,s_FldProp_LeftUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccountBalance (396)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccountBalance_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_396_5( I_("0") );
         return( dstrDefValue_396_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_396_8( I_("0") );
         return( dstrDefValue_396_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_396_7( I_("0") );
         return( dstrDefValue_396_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_396_6( I_("0") );
         return( dstrDefValue_396_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_396_4( I_("0.0000000000") );
         return( dstrDefValue_396_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_396_3( I_("0") );
         return( dstrDefValue_396_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_396_1( I_("0") );
         return( dstrDefValue_396_1 );
      }
      static const DString dstrDefValue_396_1( I_("0") );
      return( dstrDefValue_396_1 );
   }
   double s_FldProp_AccountBalance_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_AccountBalance_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_396_5( I_("AccountBalance ") );
         return( dstrFldLabel_396_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_396_8( I_("AccountBalance ") );
         return( dstrFldLabel_396_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_396_7( I_("AccountBalance ") );
         return( dstrFldLabel_396_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_396_6( I_("AccountBalance ") );
         return( dstrFldLabel_396_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_396_4( I_("AccountBalance ") );
         return( dstrFldLabel_396_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_396_3( I_("AccountBalance ") );
         return( dstrFldLabel_396_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_396_1( I_("AccountBalance ") );
         return( dstrFldLabel_396_1 );
      }
      static const DString dstrFldLabel_396_1( I_("AccountBalance ") );
      return( dstrFldLabel_396_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccountBalance(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AccountBalance // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_AccountBalance_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AccountBalance_d_DVF // default value
      ,s_FldProp_AccountBalance_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnBalance (397)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnBalance_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_397_5( I_("0.0000000000") );
      return( dstrDefValue_397_5 );
   }
   double s_FldProp_FrgnBalance_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_FrgnBalance_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_397_5( I_("FrgnBalance ") );
      return( dstrFldLabel_397_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnBalance(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnBalance // fieldId
      ,23 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_FrgnBalance_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnBalance_d_DVF // default value
      ,s_FldProp_FrgnBalance_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnACB (398)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnACB_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_398_4( I_("0.0000000000") );
      return( dstrDefValue_398_4 );
   }
   double s_FldProp_FrgnACB_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_FrgnACB_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_398_4( I_("FrgnACB ") );
      return( dstrFldLabel_398_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnACB(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnACB // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_FrgnACB_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnACB_d_DVF // default value
      ,s_FldProp_FrgnACB_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnTopUpAmt (399)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnTopUpAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_399_5( I_("0.0000000000") );
      return( dstrDefValue_399_5 );
   }
   double s_FldProp_FrgnTopUpAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_FrgnTopUpAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_399_5( I_("FrgnTopUpAmt ") );
      return( dstrFldLabel_399_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnTopUpAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnTopUpAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_FrgnTopUpAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnTopUpAmt_d_DVF // default value
      ,s_FldProp_FrgnTopUpAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );
}
