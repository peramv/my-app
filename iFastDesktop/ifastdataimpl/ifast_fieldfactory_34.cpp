// Data Field Factory Function
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdatafield.hpp>
#include <bfdata/bfdataid.hpp>

namespace ifds
{
   extern const BFDataId DSTC0436_REQ;
   extern const BFDataId DSTC0436_VW;
   extern const BFTextFieldId FromSegTradeEntryCheck;
   extern const BFTextFieldId IsCancelModSEGTradeAllowed;
   extern const BFTextFieldId ErrorValue1;
   extern const BFTextFieldId ErrorValue2;
   extern const BFTextFieldId ErrorValue3;
   extern const BFTextFieldId ErrorValue4;
   extern const BFTextFieldId WarnValue1;
   extern const BFTextFieldId WarnValue2;
   extern const BFTextFieldId WarnValue3;
   extern const BFTextFieldId WarnValue4;
   extern const BFTextFieldId RedCodesGuaranteeOverride;
   extern const BFTextFieldId GuaranteesOverride;
   extern const BFTextFieldId AcctFromToXEdit;
   extern const BFTextFieldId FromToSegTradeEntryCheck;
   extern const BFTextFieldId BankInstrComboContMatInstr;
   extern const BFTextFieldId PUD1;
   extern const BFTextFieldId GIRedemOrder;
   extern const BFTextFieldId GIRedemAmountType;
   extern const BFTextFieldId GIRedemInvSelectAmountType;
   extern const BFTextFieldId Insured;
   extern const BFTextFieldId InsuranceRefNum;
   extern const BFDecimalFieldId PaidPACSAmt;
   extern const BFDecimalFieldId ExpectedAmt;
   extern const BFDecimalFieldId BonusPercentage;
   extern const BFTextFieldId ContractMatBasedOnOrig;
   extern const BFTextFieldId WhereUseTaxType;
   extern const BFTextFieldId BankInstrComboRegAgent;
   extern const BFTextFieldId RegAgent;
   extern const BFTextFieldId CountryOfIssue;
   extern const BFTextFieldId CPFActiveFlag;
   extern const BFTextFieldId LanguageDefault;
   extern const BFTextFieldId XrefCountryOfIssue;
   extern const BFTextFieldId PrintAcctConf;
   extern const BFTextFieldId MatInstrFundClassXEdit;
   extern const BFTextFieldId TaxTypeList;
   extern const BFTextFieldId PensionJurisdictionList;
   extern const BFTextFieldId TaxTypeRuleCurrSet;
   extern const BFTextFieldId MaxFeeAppl;
   extern const BFTextFieldId NonFinConfirm;
   extern const BFTextFieldId RefCode;
   extern const BFTextFieldId RefType;
   extern const BFTextFieldId SrchRefCode;
   extern const BFTextFieldId SrchAcctRegKey;
   extern const BFTextFieldId EmpAgentAppl;
   extern const BFTextFieldId TransferOption;
   extern const BFTextFieldId FundEliPSG;
   extern const BFTextFieldId FundSERVValidation;
   extern const BFTextFieldId LTAIndicator;
   extern const BFTextFieldId ModifyCompAgent;
   extern const BFTextFieldId IsAllocationChanged;
   extern const BFTextFieldId PortfolioXEdit;
   extern const BFTextFieldId LinkedContract;
   extern const BFDataId DSTC0439_REQ;
   extern const BFDataId DSTC0439_VW;
   extern const BFTextFieldId BrokerCodeNew;
   extern const BFTextFieldId BranchCodeNew;
   extern const BFTextFieldId SlsRepCodeNew;
   extern const BFTextFieldId RefundCalc;
   extern const BFTextFieldId DilutionCalc;
   extern const BFTextFieldId SourceOfFundApp;
   extern const BFTextFieldId RefundPayType;
   extern const BFTextFieldId RefundOption;
   extern const BFDecimalFieldId DilutionAmount;
   extern const BFDecimalFieldId RefundAmount;
   extern const BFDecimalFieldId RefundFXRate;
   extern const BFTextFieldId RefundCurrency;
   extern const BFTextFieldId RegAgentCode;
   extern const BFTextFieldId MaxFeeRate;
   extern const BFTextFieldId RefundRVCD;
   extern const BFTextFieldId NFConfBnkDetl;
   extern const BFDateFieldId StopAdjDate;
   extern const BFTextFieldId RRIFSrcOfAcct;
   extern const BFTextFieldId RRIFSrcOfFund;
   extern const BFTextFieldId SrcOfFunds_DP_IA;
   extern const BFTextFieldId SrcOfFunds_PW_IA;
   extern const BFTextFieldId SrcOfFunds_SWP_IA;
   extern const BFTextFieldId SrcOfFunds_GIC_IA;
   extern const BFTextFieldId RefundOptionAvailable;
   extern const BFTextFieldId InvestStatus1;
   extern const BFTextFieldId DfCMDBaseOn;
   extern const BFTextFieldId TaxApl;
   extern const BFTextFieldId TopUpClass;
   extern const BFTextFieldId TopUpFund;
   extern const BFTextFieldId ValidRATaxType;
   extern const BFTextFieldId DilutionAvail;
   extern const BFTextFieldId SrcOfFunds_IA_Required;
   extern const BFTextFieldId SrcOfFunds_IA;
   extern const BFTextFieldId SrcOfFunds_IA_ED;
   extern const BFTextFieldId SrcOfFunds_IA_PW;
   extern const BFTextFieldId SrcOfFunds_IA_GIC;
   extern const BFTextFieldId SrcOfFunds_IA_SWP;
   extern const BFTextFieldId SrcOfFunds_IA_RIF;
   extern const BFDataId DSTC0437_REQ;
   extern const BFDataId DSTC0437_VW;
   extern const BFDecimalFieldId SWPCalculatedAmount;
   extern const BFTextFieldId GWLWAAvailOptions;
   extern const BFDataId DSTC0438_REQ;
   extern const BFDataId DSTC0438_VW;
   extern const BFTextFieldId SWPAmountType;
   extern const BFTextFieldId NonFinConfirms;
   extern const BFTextFieldId SWPGLOpt;
   extern const BFTextFieldId RRIFGLOpt;
   extern const BFDateFieldId T5AnniversaryDate;
   extern const BFTextFieldId TaxAnniversary;
   extern const BFDecimalFieldId TaxableAmount;
   extern const BFTextFieldId BrokerBranchRepXEdit;
   extern const BFTextFieldId UpdateSvcAgent;
   extern const BFTextFieldId ServiceAgentUpdated;
   extern const BFTextFieldId AutoUpdateSvcAgent;
   extern const BFTextFieldId StopReasonPAC;
   extern const BFTextFieldId ACBListHeading5;
   extern const BFTextFieldId ACBListHeading6;
   extern const BFTextFieldId ACBListHeading7;
   extern const BFTextFieldId ACBListHeading8;
   extern const BFTextFieldId CalcAmountXEdit;
   extern const BFTextFieldId LGFundClassXEdit;
   extern const BFDecimalFieldId BrkOverideAmt;
   extern const BFDateFieldId NextDrawDate;
   extern const BFDateFieldId PACDrawDeff;
   extern const BFDataId DSTC0440_REQ;
   extern const BFDataId DSTC0440_VW;
   extern const BFTextFieldId NetOfFeesFlag;
   extern const BFDecimalFieldId ScaleMaxRateChk;
   extern const BFDecimalFieldId ScaleMinRateChk;
   extern const BFTextFieldId CombinedLoadType;
   extern const BFDateFieldId TaxableTrustDate;
   extern const BFTextFieldId RightToCancelDefault;
   extern const BFTextFieldId RightToCancel;
   extern const BFDateFieldId IdExpireDate;
   extern const BFTextFieldId FATCAApplicable;
   extern const BFTextFieldId FATCAFFI;
   extern const BFTextFieldId FdBrokerDefaultlvl;
   extern const BFTextFieldId LV_EstateAllocation;
   extern const BFDataId DSTC0441_REQ;
   extern const BFDataId DSTC0441_VW;
   extern const BFDataId DSTC0441_VWRepeat_Record;
   extern const BFDecimalFieldId FundClassAmtFullPW;
   extern const BFNumericFieldId BenefEntityID;
   extern const BFTextFieldId BenefAddrCode;
   extern const BFTextFieldId BenefAddrLevel;
   extern const BFDecimalFieldId BenefPrcnt;
   extern const BFDecimalFieldId BenefAmount;
   extern const BFDecimalFieldId BenefUnits;
   extern const BFTextFieldId BenefName;
   extern const BFTextFieldId RDREnv;
   extern const BFTextFieldId RDRAdvice;
   extern const BFTextFieldId RDRApplic;
   extern const BFTextFieldId RDRDefault;
   extern const BFDataId DSTC0442_REQ;
   extern const BFDataId DSTC0442_VW;
   extern const BFDateFieldId ExpireDate;
   extern const BFDateFieldId RequestDate;
   extern const BFTextFieldId AcctDocListUUID;
   extern const BFDataId DSTC0443_REQ;
   extern const BFDataId DSTC0443_VW;
   extern const BFDataId DSTC0443_VWRepeat_Record;
   extern const BFTextFieldId BenefRunMode;
   extern const BFDecimalFieldId OwnershipPrcnt;
   extern const BFDecimalFieldId TaxablePrcnt;
   extern const BFDataId DSTC0444_REQ;
   extern const BFDataId DSTC0444_VW;
   extern const BFDataId DSTC0444_VWRepeat_Record;
   extern const BFTextFieldId GuaranteeFeeAppl;
   extern const BFTextFieldId SDRTExemptCode;
   extern const BFTextFieldId SDRTReportFlag;
   extern const BFTextFieldId BenefRecType;
   extern const BFDecimalFieldId InvHisCalculatedMVA;
   extern const BFTextFieldId InvHisMVAReason;
   extern const BFDecimalFieldId TaxCreditAmt;
   extern const BFTextFieldId DistributionType;
   extern const BFDataId DSTC0445_REQ;
   extern const BFDataId DSTC0445_VW;
   extern const BFTextFieldId EventComm;
   extern const BFTextFieldId RequireEventCommission;
   extern const BFDataId DSTC0446_REQ;
   extern const BFTextFieldId NationalID;
   extern const BFTextFieldId COINationalID;
   extern const BFTextFieldId Passport;
   extern const BFTextFieldId COIPassport;
   extern const BFDataId DSTC0446_VW;
   extern const BFTextFieldId IDExemptionReasonCode;
   extern const BFDataFieldProperties s_FldProp_DSTC0436_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0436_VW;
   extern const BFDataFieldProperties s_FldProp_FromSegTradeEntryCheck;
   extern const BFDataFieldProperties s_FldProp_IsCancelModSEGTradeAllowed;
   extern const BFDataFieldProperties s_FldProp_ErrorValue1;
   extern const BFDataFieldProperties s_FldProp_ErrorValue2;
   extern const BFDataFieldProperties s_FldProp_ErrorValue3;
   extern const BFDataFieldProperties s_FldProp_ErrorValue4;
   extern const BFDataFieldProperties s_FldProp_WarnValue1;
   extern const BFDataFieldProperties s_FldProp_WarnValue2;
   extern const BFDataFieldProperties s_FldProp_WarnValue3;
   extern const BFDataFieldProperties s_FldProp_WarnValue4;
   extern const BFDataFieldProperties s_FldProp_RedCodesGuaranteeOverride;
   extern const BFDataFieldProperties s_FldProp_GuaranteesOverride;
   extern const BFDataFieldProperties s_FldProp_AcctFromToXEdit;
   extern const BFDataFieldProperties s_FldProp_FromToSegTradeEntryCheck;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboContMatInstr;
   extern const BFDataFieldProperties s_FldProp_PUD1;
   extern const BFDataFieldProperties s_FldProp_GIRedemOrder;
   extern const BFDataFieldProperties s_FldProp_GIRedemAmountType;
   extern const BFDataFieldProperties s_FldProp_GIRedemInvSelectAmountType;
   extern const BFDataFieldProperties s_FldProp_Insured;
   extern const BFDataFieldProperties s_FldProp_InsuranceRefNum;
   extern const BFDataFieldProperties s_FldProp_PaidPACSAmt;
   extern const BFDataFieldProperties s_FldProp_ExpectedAmt;
   extern const BFDataFieldProperties s_FldProp_BonusPercentage;
   extern const BFDataFieldProperties s_FldProp_ContractMatBasedOnOrig;
   extern const BFDataFieldProperties s_FldProp_WhereUseTaxType;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboRegAgent;
   extern const BFDataFieldProperties s_FldProp_RegAgent;
   extern const BFDataFieldProperties s_FldProp_CountryOfIssue;
   extern const BFDataFieldProperties s_FldProp_CPFActiveFlag;
   extern const BFDataFieldProperties s_FldProp_LanguageDefault;
   extern const BFDataFieldProperties s_FldProp_XrefCountryOfIssue;
   extern const BFDataFieldProperties s_FldProp_PrintAcctConf;
   extern const BFDataFieldProperties s_FldProp_MatInstrFundClassXEdit;
   extern const BFDataFieldProperties s_FldProp_TaxTypeList;
   extern const BFDataFieldProperties s_FldProp_PensionJurisdictionList;
   extern const BFDataFieldProperties s_FldProp_TaxTypeRuleCurrSet;
   extern const BFDataFieldProperties s_FldProp_MaxFeeAppl;
   extern const BFDataFieldProperties s_FldProp_NonFinConfirm;
   extern const BFDataFieldProperties s_FldProp_RefCode;
   extern const BFDataFieldProperties s_FldProp_RefType;
   extern const BFDataFieldProperties s_FldProp_SrchRefCode;
   extern const BFDataFieldProperties s_FldProp_SrchAcctRegKey;
   extern const BFDataFieldProperties s_FldProp_EmpAgentAppl;
   extern const BFDataFieldProperties s_FldProp_TransferOption;
   extern const BFDataFieldProperties s_FldProp_FundEliPSG;
   extern const BFDataFieldProperties s_FldProp_FundSERVValidation;
   extern const BFDataFieldProperties s_FldProp_LTAIndicator;
   extern const BFDataFieldProperties s_FldProp_ModifyCompAgent;
   extern const BFDataFieldProperties s_FldProp_IsAllocationChanged;
   extern const BFDataFieldProperties s_FldProp_PortfolioXEdit;
   extern const BFDataFieldProperties s_FldProp_LinkedContract;
   extern const BFDataFieldProperties s_FldProp_DSTC0439_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0439_VW;
   extern const BFDataFieldProperties s_FldProp_BrokerCodeNew;
   extern const BFDataFieldProperties s_FldProp_BranchCodeNew;
   extern const BFDataFieldProperties s_FldProp_SlsRepCodeNew;
   extern const BFDataFieldProperties s_FldProp_RefundCalc;
   extern const BFDataFieldProperties s_FldProp_DilutionCalc;
   extern const BFDataFieldProperties s_FldProp_SourceOfFundApp;
   extern const BFDataFieldProperties s_FldProp_RefundPayType;
   extern const BFDataFieldProperties s_FldProp_RefundOption;
   extern const BFDataFieldProperties s_FldProp_DilutionAmount;
   extern const BFDataFieldProperties s_FldProp_RefundAmount;
   extern const BFDataFieldProperties s_FldProp_RefundFXRate;
   extern const BFDataFieldProperties s_FldProp_RefundCurrency;
   extern const BFDataFieldProperties s_FldProp_RegAgentCode;
   extern const BFDataFieldProperties s_FldProp_MaxFeeRate;
   extern const BFDataFieldProperties s_FldProp_RefundRVCD;
   extern const BFDataFieldProperties s_FldProp_NFConfBnkDetl;
   extern const BFDataFieldProperties s_FldProp_StopAdjDate;
   extern const BFDataFieldProperties s_FldProp_RRIFSrcOfAcct;
   extern const BFDataFieldProperties s_FldProp_RRIFSrcOfFund;
   extern const BFDataFieldProperties s_FldProp_SrcOfFunds_DP_IA;
   extern const BFDataFieldProperties s_FldProp_SrcOfFunds_PW_IA;
   extern const BFDataFieldProperties s_FldProp_SrcOfFunds_SWP_IA;
   extern const BFDataFieldProperties s_FldProp_SrcOfFunds_GIC_IA;
   extern const BFDataFieldProperties s_FldProp_RefundOptionAvailable;
   extern const BFDataFieldProperties s_FldProp_InvestStatus1;
   extern const BFDataFieldProperties s_FldProp_DfCMDBaseOn;
   extern const BFDataFieldProperties s_FldProp_TaxApl;
   extern const BFDataFieldProperties s_FldProp_TopUpClass;
   extern const BFDataFieldProperties s_FldProp_TopUpFund;
   extern const BFDataFieldProperties s_FldProp_ValidRATaxType;
   extern const BFDataFieldProperties s_FldProp_DilutionAvail;
   extern const BFDataFieldProperties s_FldProp_SrcOfFunds_IA_Required;
   extern const BFDataFieldProperties s_FldProp_SrcOfFunds_IA;
   extern const BFDataFieldProperties s_FldProp_SrcOfFunds_IA_ED;
   extern const BFDataFieldProperties s_FldProp_SrcOfFunds_IA_PW;
   extern const BFDataFieldProperties s_FldProp_SrcOfFunds_IA_GIC;
   extern const BFDataFieldProperties s_FldProp_SrcOfFunds_IA_SWP;
   extern const BFDataFieldProperties s_FldProp_SrcOfFunds_IA_RIF;
   extern const BFDataFieldProperties s_FldProp_DSTC0437_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0437_VW;
   extern const BFDataFieldProperties s_FldProp_SWPCalculatedAmount;
   extern const BFDataFieldProperties s_FldProp_GWLWAAvailOptions;
   extern const BFDataFieldProperties s_FldProp_DSTC0438_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0438_VW;
   extern const BFDataFieldProperties s_FldProp_SWPAmountType;
   extern const BFDataFieldProperties s_FldProp_NonFinConfirms;
   extern const BFDataFieldProperties s_FldProp_SWPGLOpt;
   extern const BFDataFieldProperties s_FldProp_RRIFGLOpt;
   extern const BFDataFieldProperties s_FldProp_T5AnniversaryDate;
   extern const BFDataFieldProperties s_FldProp_TaxAnniversary;
   extern const BFDataFieldProperties s_FldProp_TaxableAmount;
   extern const BFDataFieldProperties s_FldProp_BrokerBranchRepXEdit;
   extern const BFDataFieldProperties s_FldProp_UpdateSvcAgent;
   extern const BFDataFieldProperties s_FldProp_ServiceAgentUpdated;
   extern const BFDataFieldProperties s_FldProp_AutoUpdateSvcAgent;
   extern const BFDataFieldProperties s_FldProp_StopReasonPAC;
   extern const BFDataFieldProperties s_FldProp_ACBListHeading5;
   extern const BFDataFieldProperties s_FldProp_ACBListHeading6;
   extern const BFDataFieldProperties s_FldProp_ACBListHeading7;
   extern const BFDataFieldProperties s_FldProp_ACBListHeading8;
   extern const BFDataFieldProperties s_FldProp_CalcAmountXEdit;
   extern const BFDataFieldProperties s_FldProp_LGFundClassXEdit;
   extern const BFDataFieldProperties s_FldProp_BrkOverideAmt;
   extern const BFDataFieldProperties s_FldProp_NextDrawDate;
   extern const BFDataFieldProperties s_FldProp_PACDrawDeff;
   extern const BFDataFieldProperties s_FldProp_DSTC0440_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0440_VW;
   extern const BFDataFieldProperties s_FldProp_NetOfFeesFlag;
   extern const BFDataFieldProperties s_FldProp_ScaleMaxRateChk;
   extern const BFDataFieldProperties s_FldProp_ScaleMinRateChk;
   extern const BFDataFieldProperties s_FldProp_CombinedLoadType;
   extern const BFDataFieldProperties s_FldProp_TaxableTrustDate;
   extern const BFDataFieldProperties s_FldProp_RightToCancelDefault;
   extern const BFDataFieldProperties s_FldProp_RightToCancel;
   extern const BFDataFieldProperties s_FldProp_IdExpireDate;
   extern const BFDataFieldProperties s_FldProp_FATCAApplicable;
   extern const BFDataFieldProperties s_FldProp_FATCAFFI;
   extern const BFDataFieldProperties s_FldProp_FdBrokerDefaultlvl;
   extern const BFDataFieldProperties s_FldProp_LV_EstateAllocation;
   extern const BFDataFieldProperties s_FldProp_DSTC0441_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0441_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0441_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_FundClassAmtFullPW;
   extern const BFDataFieldProperties s_FldProp_BenefEntityID;
   extern const BFDataFieldProperties s_FldProp_BenefAddrCode;
   extern const BFDataFieldProperties s_FldProp_BenefAddrLevel;
   extern const BFDataFieldProperties s_FldProp_BenefPrcnt;
   extern const BFDataFieldProperties s_FldProp_BenefAmount;
   extern const BFDataFieldProperties s_FldProp_BenefUnits;
   extern const BFDataFieldProperties s_FldProp_BenefName;
   extern const BFDataFieldProperties s_FldProp_RDREnv;
   extern const BFDataFieldProperties s_FldProp_RDRAdvice;
   extern const BFDataFieldProperties s_FldProp_RDRApplic;
   extern const BFDataFieldProperties s_FldProp_RDRDefault;
   extern const BFDataFieldProperties s_FldProp_DSTC0442_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0442_VW;
   extern const BFDataFieldProperties s_FldProp_ExpireDate;
   extern const BFDataFieldProperties s_FldProp_RequestDate;
   extern const BFDataFieldProperties s_FldProp_AcctDocListUUID;
   extern const BFDataFieldProperties s_FldProp_DSTC0443_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0443_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0443_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_BenefRunMode;
   extern const BFDataFieldProperties s_FldProp_OwnershipPrcnt;
   extern const BFDataFieldProperties s_FldProp_TaxablePrcnt;
   extern const BFDataFieldProperties s_FldProp_DSTC0444_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0444_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0444_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_GuaranteeFeeAppl;
   extern const BFDataFieldProperties s_FldProp_SDRTExemptCode;
   extern const BFDataFieldProperties s_FldProp_SDRTReportFlag;
   extern const BFDataFieldProperties s_FldProp_BenefRecType;
   extern const BFDataFieldProperties s_FldProp_InvHisCalculatedMVA;
   extern const BFDataFieldProperties s_FldProp_InvHisMVAReason;
   extern const BFDataFieldProperties s_FldProp_TaxCreditAmt;
   extern const BFDataFieldProperties s_FldProp_DistributionType;
   extern const BFDataFieldProperties s_FldProp_DSTC0445_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0445_VW;
   extern const BFDataFieldProperties s_FldProp_EventComm;
   extern const BFDataFieldProperties s_FldProp_RequireEventCommission;
   extern const BFDataFieldProperties s_FldProp_DSTC0446_REQ;
   extern const BFDataFieldProperties s_FldProp_NationalID;
   extern const BFDataFieldProperties s_FldProp_COINationalID;
   extern const BFDataFieldProperties s_FldProp_Passport;
   extern const BFDataFieldProperties s_FldProp_COIPassport;
   extern const BFDataFieldProperties s_FldProp_DSTC0446_VW;
   extern const BFDataFieldProperties s_FldProp_IDExemptionReasonCode;
   BFDataField* createField_34( const BFFieldId id )
   {
      BFDataField* pField = NULL;
      switch( id.getId() )
      {
         case 40006802: pField = new BFTextField_60( FromSegTradeEntryCheck, &s_FldProp_FromSegTradeEntryCheck ); break; 
         case 40006803: pField = new BFTextField_60( IsCancelModSEGTradeAllowed, &s_FldProp_IsCancelModSEGTradeAllowed ); break; 
         case 40006804: pField = new BFTextField<20>( ErrorValue1, &s_FldProp_ErrorValue1 ); break; 
         case 40006805: pField = new BFTextField<200>( ErrorValue2, &s_FldProp_ErrorValue2 ); break; 
         case 40006806: pField = new BFTextField<20>( ErrorValue3, &s_FldProp_ErrorValue3 ); break; 
         case 40006807: pField = new BFTextField<20>( ErrorValue4, &s_FldProp_ErrorValue4 ); break; 
         case 40006808: pField = new BFTextField_60( WarnValue1, &s_FldProp_WarnValue1 ); break; 
         case 40006809: pField = new BFTextField_60( WarnValue2, &s_FldProp_WarnValue2 ); break; 
         case 40006810: pField = new BFTextField_60( WarnValue3, &s_FldProp_WarnValue3 ); break; 
         case 40006811: pField = new BFTextField_60( WarnValue4, &s_FldProp_WarnValue4 ); break; 
         case 40006812: pField = new BFTextField<200>( RedCodesGuaranteeOverride, &s_FldProp_RedCodesGuaranteeOverride ); break; 
         case 40006813: pField = new BFTextField_10( GuaranteesOverride, &s_FldProp_GuaranteesOverride ); break; 
         case 40006814: pField = new BFTextField_60( AcctFromToXEdit, &s_FldProp_AcctFromToXEdit ); break; 
         case 40006815: pField = new BFTextField_60( FromToSegTradeEntryCheck, &s_FldProp_FromToSegTradeEntryCheck ); break; 
         case 40006816: pField = new BFTextField<30>( BankInstrComboContMatInstr, &s_FldProp_BankInstrComboContMatInstr ); break; 
         case 40006817: pField = new BFTextField<30>( PUD1, &s_FldProp_PUD1 ); break; 
         case 40006818: pField = new BFTextField<30>( GIRedemOrder, &s_FldProp_GIRedemOrder ); break; 
         case 40006819: pField = new BFTextField<30>( GIRedemAmountType, &s_FldProp_GIRedemAmountType ); break; 
         case 40006820: pField = new BFTextField<30>( GIRedemInvSelectAmountType, &s_FldProp_GIRedemInvSelectAmountType ); break; 
         case 40006821: pField = new BFTextField<30>( Insured, &s_FldProp_Insured ); break; 
         case 40006822: pField = new BFTextField<30>( InsuranceRefNum, &s_FldProp_InsuranceRefNum ); break; 
         case 40006824: pField = new BFDecimalField( PaidPACSAmt, &s_FldProp_PaidPACSAmt ); break; 
         case 40006825: pField = new BFDecimalField( ExpectedAmt, &s_FldProp_ExpectedAmt ); break; 
         case 40006826: pField = new BFDecimalField( BonusPercentage, &s_FldProp_BonusPercentage ); break; 
         case 40006827: pField = new BFTextField_10( ContractMatBasedOnOrig, &s_FldProp_ContractMatBasedOnOrig ); break; 
         case 40006828: pField = new BFTextField_60( WhereUseTaxType, &s_FldProp_WhereUseTaxType ); break; 
         case 40006829: pField = new BFTextField_60( BankInstrComboRegAgent, &s_FldProp_BankInstrComboRegAgent ); break; 
         case 40006830: pField = new BFTextField_60( RegAgent, &s_FldProp_RegAgent ); break; 
         case 40006831: pField = new BFTextField_60( CountryOfIssue, &s_FldProp_CountryOfIssue ); break; 
         case 40006832: pField = new BFTextField_60( CPFActiveFlag, &s_FldProp_CPFActiveFlag ); break; 
         case 40006834: pField = new BFTextField_60( LanguageDefault, &s_FldProp_LanguageDefault ); break; 
         case 40006835: pField = new BFTextField_60( XrefCountryOfIssue, &s_FldProp_XrefCountryOfIssue ); break; 
         case 40006838: pField = new BFTextField_60( PrintAcctConf, &s_FldProp_PrintAcctConf ); break; 
         case 40006839: pField = new BFTextField_60( MatInstrFundClassXEdit, &s_FldProp_MatInstrFundClassXEdit ); break; 
         case 40006840: pField = new BFTextField<150>( TaxTypeList, &s_FldProp_TaxTypeList ); break; 
         case 40006841: pField = new BFTextField_60( PensionJurisdictionList, &s_FldProp_PensionJurisdictionList ); break; 
         case 40006842: pField = new BFTextField_60( TaxTypeRuleCurrSet, &s_FldProp_TaxTypeRuleCurrSet ); break; 
         case 40006843: pField = new BFTextField_10( MaxFeeAppl, &s_FldProp_MaxFeeAppl ); break; 
         case 40006844: pField = new BFTextField<3>( NonFinConfirm, &s_FldProp_NonFinConfirm ); break; 
         case 40006845: pField = new BFTextField<20>( RefCode, &s_FldProp_RefCode ); break; 
         case 40006846: pField = new BFTextField<20>( RefType, &s_FldProp_RefType ); break; 
         case 40006847: pField = new BFTextField<20>( SrchRefCode, &s_FldProp_SrchRefCode ); break; 
         case 40006848: pField = new BFTextField<20>( SrchAcctRegKey, &s_FldProp_SrchAcctRegKey ); break; 
         case 40006849: pField = new BFTextField_2( EmpAgentAppl, &s_FldProp_EmpAgentAppl ); break; 
         case 40006850: pField = new BFTextField_60( TransferOption, &s_FldProp_TransferOption ); break; 
         case 40006851: pField = new BFTextField_60( FundEliPSG, &s_FldProp_FundEliPSG ); break; 
         case 40006852: pField = new BFTextField_60( FundSERVValidation, &s_FldProp_FundSERVValidation ); break; 
         case 40006853: pField = new BFTextField_60( LTAIndicator, &s_FldProp_LTAIndicator ); break; 
         case 40006854: pField = new BFTextField_60( ModifyCompAgent, &s_FldProp_ModifyCompAgent ); break; 
         case 40006855: pField = new BFTextField_10( IsAllocationChanged, &s_FldProp_IsAllocationChanged ); break; 
         case 40006856: pField = new BFTextField_10( PortfolioXEdit, &s_FldProp_PortfolioXEdit ); break; 
         case 40006857: pField = new BFTextField_60( LinkedContract, &s_FldProp_LinkedContract ); break; 
         case 40006860: pField = new BFTextField_60( BrokerCodeNew, &s_FldProp_BrokerCodeNew ); break; 
         case 40006861: pField = new BFTextField_60( BranchCodeNew, &s_FldProp_BranchCodeNew ); break; 
         case 40006862: pField = new BFTextField_60( SlsRepCodeNew, &s_FldProp_SlsRepCodeNew ); break; 
         case 40006863: pField = new BFTextField_10( RefundCalc, &s_FldProp_RefundCalc ); break; 
         case 40006864: pField = new BFTextField_10( DilutionCalc, &s_FldProp_DilutionCalc ); break; 
         case 40006865: pField = new BFTextField_2( SourceOfFundApp, &s_FldProp_SourceOfFundApp ); break; 
         case 40006866: pField = new BFTextField_60( RefundPayType, &s_FldProp_RefundPayType ); break; 
         case 40006867: pField = new BFTextField_60( RefundOption, &s_FldProp_RefundOption ); break; 
         case 40006868: pField = new BFDecimalField( DilutionAmount, &s_FldProp_DilutionAmount ); break; 
         case 40006869: pField = new BFDecimalField( RefundAmount, &s_FldProp_RefundAmount ); break; 
         case 40006870: pField = new BFDecimalField( RefundFXRate, &s_FldProp_RefundFXRate ); break; 
         case 40006871: pField = new BFTextField_60( RefundCurrency, &s_FldProp_RefundCurrency ); break; 
         case 40006872: pField = new BFTextField_60( RegAgentCode, &s_FldProp_RegAgentCode ); break; 
         case 40006873: pField = new BFTextField_60( MaxFeeRate, &s_FldProp_MaxFeeRate ); break; 
         case 40006874: pField = new BFTextField_60( RefundRVCD, &s_FldProp_RefundRVCD ); break; 
         case 40006875: pField = new BFTextField_10( NFConfBnkDetl, &s_FldProp_NFConfBnkDetl ); break; 
         case 40006876: pField = new BFDateField( StopAdjDate, &s_FldProp_StopAdjDate ); break; 
         case 40006877: pField = new BFTextField<15>( RRIFSrcOfAcct, &s_FldProp_RRIFSrcOfAcct ); break; 
         case 40006878: pField = new BFTextField_60( RRIFSrcOfFund, &s_FldProp_RRIFSrcOfFund ); break; 
         case 40006879: pField = new BFTextField_60( SrcOfFunds_DP_IA, &s_FldProp_SrcOfFunds_DP_IA ); break; 
         case 40006880: pField = new BFTextField_60( SrcOfFunds_PW_IA, &s_FldProp_SrcOfFunds_PW_IA ); break; 
         case 40006881: pField = new BFTextField_60( SrcOfFunds_SWP_IA, &s_FldProp_SrcOfFunds_SWP_IA ); break; 
         case 40006882: pField = new BFTextField_60( SrcOfFunds_GIC_IA, &s_FldProp_SrcOfFunds_GIC_IA ); break; 
         case 40006884: pField = new BFTextField_10( RefundOptionAvailable, &s_FldProp_RefundOptionAvailable ); break; 
         case 40006885: pField = new BFTextField_60( InvestStatus1, &s_FldProp_InvestStatus1 ); break; 
         case 40006886: pField = new BFTextField<30>( DfCMDBaseOn, &s_FldProp_DfCMDBaseOn ); break; 
         case 40006888: pField = new BFTextField<30>( TaxApl, &s_FldProp_TaxApl ); break; 
         case 40006889: pField = new BFTextField<30>( TopUpClass, &s_FldProp_TopUpClass ); break; 
         case 40006890: pField = new BFTextField<30>( TopUpFund, &s_FldProp_TopUpFund ); break; 
         case 40006891: pField = new BFTextField<30>( ValidRATaxType, &s_FldProp_ValidRATaxType ); break; 
         case 40006892: pField = new BFTextField_60( DilutionAvail, &s_FldProp_DilutionAvail ); break; 
         case 40006893: pField = new BFTextField<300>( SrcOfFunds_IA_Required, &s_FldProp_SrcOfFunds_IA_Required ); break; 
         case 40006894: pField = new BFTextField<300>( SrcOfFunds_IA, &s_FldProp_SrcOfFunds_IA ); break; 
         case 40006895: pField = new BFTextField<300>( SrcOfFunds_IA_ED, &s_FldProp_SrcOfFunds_IA_ED ); break; 
         case 40006896: pField = new BFTextField<300>( SrcOfFunds_IA_PW, &s_FldProp_SrcOfFunds_IA_PW ); break; 
         case 40006897: pField = new BFTextField<300>( SrcOfFunds_IA_GIC, &s_FldProp_SrcOfFunds_IA_GIC ); break; 
         case 40006898: pField = new BFTextField<300>( SrcOfFunds_IA_SWP, &s_FldProp_SrcOfFunds_IA_SWP ); break; 
         case 40006899: pField = new BFTextField<300>( SrcOfFunds_IA_RIF, &s_FldProp_SrcOfFunds_IA_RIF ); break; 
         case 40006904: pField = new BFDecimalField( SWPCalculatedAmount, &s_FldProp_SWPCalculatedAmount ); break; 
         case 40006905: pField = new BFTextField_60( GWLWAAvailOptions, &s_FldProp_GWLWAAvailOptions ); break; 
         case 40006908: pField = new BFTextField_60( SWPAmountType, &s_FldProp_SWPAmountType ); break; 
         case 40006909: pField = new BFTextField_10( NonFinConfirms, &s_FldProp_NonFinConfirms ); break; 
         case 40006910: pField = new BFTextField<20>( SWPGLOpt, &s_FldProp_SWPGLOpt ); break; 
         case 40006911: pField = new BFTextField<20>( RRIFGLOpt, &s_FldProp_RRIFGLOpt ); break; 
         case 40006912: pField = new BFDateField( T5AnniversaryDate, &s_FldProp_T5AnniversaryDate ); break; 
         case 40006914: pField = new BFTextField_1( TaxAnniversary, &s_FldProp_TaxAnniversary ); break; 
         case 40006916: pField = new BFDecimalField( TaxableAmount, &s_FldProp_TaxableAmount ); break; 
         case 40006917: pField = new BFTextField_10( BrokerBranchRepXEdit, &s_FldProp_BrokerBranchRepXEdit ); break; 
         case 40006918: pField = new BFTextField_10( UpdateSvcAgent, &s_FldProp_UpdateSvcAgent ); break; 
         case 40006919: pField = new BFTextField_10( ServiceAgentUpdated, &s_FldProp_ServiceAgentUpdated ); break; 
         case 40006920: pField = new BFTextField_10( AutoUpdateSvcAgent, &s_FldProp_AutoUpdateSvcAgent ); break; 
         case 40006921: pField = new BFTextField_60( StopReasonPAC, &s_FldProp_StopReasonPAC ); break; 
         case 40006922: pField = new BFTextField_60( ACBListHeading5, &s_FldProp_ACBListHeading5 ); break; 
         case 40006923: pField = new BFTextField_60( ACBListHeading6, &s_FldProp_ACBListHeading6 ); break; 
         case 40006924: pField = new BFTextField_60( ACBListHeading7, &s_FldProp_ACBListHeading7 ); break; 
         case 40006925: pField = new BFTextField_60( ACBListHeading8, &s_FldProp_ACBListHeading8 ); break; 
         case 40006926: pField = new BFTextField_60( CalcAmountXEdit, &s_FldProp_CalcAmountXEdit ); break; 
         case 40006927: pField = new BFTextField_60( LGFundClassXEdit, &s_FldProp_LGFundClassXEdit ); break; 
         case 40006931: pField = new BFDecimalField( BrkOverideAmt, &s_FldProp_BrkOverideAmt ); break; 
         case 40006932: pField = new BFDateField( NextDrawDate, &s_FldProp_NextDrawDate ); break; 
         case 40006935: pField = new BFDateField( PACDrawDeff, &s_FldProp_PACDrawDeff ); break; 
         case 40006938: pField = new BFTextField_10( NetOfFeesFlag, &s_FldProp_NetOfFeesFlag ); break; 
         case 40006939: pField = new BFDecimalField( ScaleMaxRateChk, &s_FldProp_ScaleMaxRateChk ); break; 
         case 40006940: pField = new BFDecimalField( ScaleMinRateChk, &s_FldProp_ScaleMinRateChk ); break; 
         case 40006941: pField = new BFTextField_60( CombinedLoadType, &s_FldProp_CombinedLoadType ); break; 
         case 40006942: pField = new BFDateField( TaxableTrustDate, &s_FldProp_TaxableTrustDate ); break; 
         case 40006943: pField = new BFTextField_60( RightToCancelDefault, &s_FldProp_RightToCancelDefault ); break; 
         case 40006944: pField = new BFTextField_60( RightToCancel, &s_FldProp_RightToCancel ); break; 
         case 40006945: pField = new BFDateField( IdExpireDate, &s_FldProp_IdExpireDate ); break; 
         case 40006946: pField = new BFTextField_10( FATCAApplicable, &s_FldProp_FATCAApplicable ); break; 
         case 40006947: pField = new BFTextField_60( FATCAFFI, &s_FldProp_FATCAFFI ); break; 
         case 40006948: pField = new BFTextField_60( FdBrokerDefaultlvl, &s_FldProp_FdBrokerDefaultlvl ); break; 
         case 40006949: pField = new BFTextField<20>( LV_EstateAllocation, &s_FldProp_LV_EstateAllocation ); break; 
         case 40006953: pField = new BFDecimalField( FundClassAmtFullPW, &s_FldProp_FundClassAmtFullPW ); break; 
         case 40006955: pField = new BFNumericField( BenefEntityID, &s_FldProp_BenefEntityID ); break; 
         case 40006956: pField = new BFTextField_10( BenefAddrCode, &s_FldProp_BenefAddrCode ); break; 
         case 40006957: pField = new BFTextField_10( BenefAddrLevel, &s_FldProp_BenefAddrLevel ); break; 
         case 40006958: pField = new BFDecimalField( BenefPrcnt, &s_FldProp_BenefPrcnt ); break; 
         case 40006959: pField = new BFDecimalField( BenefAmount, &s_FldProp_BenefAmount ); break; 
         case 40006960: pField = new BFDecimalField( BenefUnits, &s_FldProp_BenefUnits ); break; 
         case 40006961: pField = new BFTextField<30>( BenefName, &s_FldProp_BenefName ); break; 
         case 40006962: pField = new BFTextField_60( RDREnv, &s_FldProp_RDREnv ); break; 
         case 40006963: pField = new BFTextField_60( RDRAdvice, &s_FldProp_RDRAdvice ); break; 
         case 40006964: pField = new BFTextField_60( RDRApplic, &s_FldProp_RDRApplic ); break; 
         case 40006965: pField = new BFTextField_60( RDRDefault, &s_FldProp_RDRDefault ); break; 
         case 40006968: pField = new BFDateField( ExpireDate, &s_FldProp_ExpireDate ); break; 
         case 40006969: pField = new BFDateField( RequestDate, &s_FldProp_RequestDate ); break; 
         case 40006970: pField = new BFTextField<30>( AcctDocListUUID, &s_FldProp_AcctDocListUUID ); break; 
         case 40006974: pField = new BFTextField<20>( BenefRunMode, &s_FldProp_BenefRunMode ); break; 
         case 40006975: pField = new BFDecimalField( OwnershipPrcnt, &s_FldProp_OwnershipPrcnt ); break; 
         case 40006976: pField = new BFDecimalField( TaxablePrcnt, &s_FldProp_TaxablePrcnt ); break; 
         case 40006980: pField = new BFTextField_10( GuaranteeFeeAppl, &s_FldProp_GuaranteeFeeAppl ); break; 
         case 40006981: pField = new BFTextField_1( SDRTExemptCode, &s_FldProp_SDRTExemptCode ); break; 
         case 40006982: pField = new BFTextField_60( SDRTReportFlag, &s_FldProp_SDRTReportFlag ); break; 
         case 40006984: pField = new BFTextField_10( BenefRecType, &s_FldProp_BenefRecType ); break; 
         case 40006985: pField = new BFDecimalField( InvHisCalculatedMVA, &s_FldProp_InvHisCalculatedMVA ); break; 
         case 40006986: pField = new BFTextField_2( InvHisMVAReason, &s_FldProp_InvHisMVAReason ); break; 
         case 40006988: pField = new BFDecimalField( TaxCreditAmt, &s_FldProp_TaxCreditAmt ); break; 
         case 40006989: pField = new BFTextField<30>( DistributionType, &s_FldProp_DistributionType ); break; 
         case 40006992: pField = new BFTextField_60( EventComm, &s_FldProp_EventComm ); break; 
         case 40006993: pField = new BFTextField_10( RequireEventCommission, &s_FldProp_RequireEventCommission ); break; 
         case 40006995: pField = new BFTextField_60( NationalID, &s_FldProp_NationalID ); break; 
         case 40006996: pField = new BFTextField_60( COINationalID, &s_FldProp_COINationalID ); break; 
         case 40006997: pField = new BFTextField_60( Passport, &s_FldProp_Passport ); break; 
         case 40006998: pField = new BFTextField_60( COIPassport, &s_FldProp_COIPassport ); break; 
      }
      return pField;
   }
}
