// Data Field Factory Function
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdatafield.hpp>
#include <bfdata/bfdataid.hpp>

namespace ifds
{
   extern const BFTextFieldId TerminationAgeAfterDeff;
   extern const BFDecimalFieldId RESPAgeLimitsDeff;
   extern const BFDecimalFieldId AdditionalGrant;
   extern const BFDecimalFieldId CLBAmount;
   extern const BFDecimalFieldId PGrantAmount;
   extern const BFDecimalFieldId TDRedContrib;
   extern const BFDecimalFieldId RedCESG;
   extern const BFDecimalFieldId RedCLB;
   extern const BFDecimalFieldId RedPGrant;
   extern const BFDecimalFieldId Pre98ContribAmt;
   extern const BFDecimalFieldId Pre98RedContribAmt;
   extern const BFDecimalFieldId TransferPercent;
   extern const BFTextFieldId AcctLvlOverride;
   extern const BFDecimalFieldId QESIUCAmount;
   extern const BFDecimalFieldId QESIACAmount;
   extern const BFDecimalFieldId QESIYTDContribution;
   extern const BFDecimalFieldId QESIBasicGrant;
   extern const BFDecimalFieldId QESIIncreaseAmt;
   extern const BFDecimalFieldId Pre98QESIContrib;
   extern const BFDecimalFieldId Pre2007QESIContrib;
   extern const BFTextFieldId RESPExtTrDetlUUID;
   extern const BFNumericFieldId RESPExtTrDetlVer;
   extern const BFTextFieldId RESPContrDetlUUID;
   extern const BFDataId DSTC0408_REQ;
   extern const BFDataId DSTC0408_VW;
   extern const BFTextFieldId NEQID;
   extern const BFDataId DSTC0406_REQ;
   extern const BFDataId DSTC0406_VW;
   extern const BFDataId DSTC0406_VWRepeat_Record;
   extern const BFDecimalFieldId RESPBenefIDFrom;
   extern const BFTextFieldId Relation;
   extern const BFDataId DSTC0407_REQ;
   extern const BFDataId DSTC0407_REQRepeat_Record;
   extern const BFDataId DSTC0407_VW;
   extern const BFIntegerFieldId WarnCode13;
   extern const BFIntegerFieldId WarnCode14;
   extern const BFIntegerFieldId WarnCode15;
   extern const BFIntegerFieldId WarnCode16;
   extern const BFTextFieldId EntityTypeTo;
   extern const BFDecimalFieldId EntityTypeSeqTo;
   extern const BFDateFieldId BenefEffectiveDate;
   extern const BFTextFieldId RESPTransferHeading;
   extern const BFTextFieldId GRRepayReasonCommon;
   extern const BFTextFieldId GRRepayReasonQESI;
   extern const BFDataId DSTC0409_REQ;
   extern const BFDataId DSTC0409_VW;
   extern const BFDataId DSTC0408_VWRepeat_Record;
   extern const BFIntegerFieldId RESPContrDetlTaxYear;
   extern const BFTextFieldId AmountRedCode;
   extern const BFTextFieldId RedCodeOCRdmYearXEdit;
   extern const BFTextFieldId RedCodeTaintedXEdit;
   extern const BFTextFieldId EligibleTransfer;
   extern const BFDecimalFieldId PurAdd;
   extern const BFDecimalFieldId PurCLB;
   extern const BFDecimalFieldId PurPGrant;
   extern const BFDecimalFieldId PurQESI;
   extern const BFDecimalFieldId RedIncome;
   extern const BFDecimalFieldId RedQESI;
   extern const BFDecimalFieldId AddtlQESI;
   extern const BFTextFieldId GratRepayReasonAll;
   extern const BFDecimalFieldId AssistedContrAmt;
   extern const BFTextFieldId TrfResubmit;
   extern const BFTextFieldId IsAGrantTrade;
   extern const BFDecimalFieldId GrantRepayablePurch;
   extern const BFTextFieldId BankInstrComboSettlementBroker;
   extern const BFTextFieldId BankInstrComboSettlementBranch;
   extern const BFTextFieldId BankInstrComboSettlementSlsrep;
   extern const BFDateFieldId OrigPlanDeff;
   extern const BFDataId DSTC0410_REQ;
   extern const BFDataId DSTC0410_VW;
   extern const BFDataId DSTC0410_VWRepeat_Record;
   extern const BFDataId DSTC0411_REQ;
   extern const BFDataId DSTC0411_VW;
   extern const BFDataId DSTC0411_VWRepeat_Record;
   extern const BFTextFieldId TfrStat;
   extern const BFTextFieldId RepHRDC;
   extern const BFNumericFieldId TransRecId;
   extern const BFTextFieldId IsGWOContractExist;
   extern const BFTextFieldId HasGWOContract;
   extern const BFTextFieldId GuaranteeGuardOn;
   extern const BFDataId DSTC0412_REQ;
   extern const BFDataId DSTC0412_VW;
   extern const BFDataId DSTC0412_VWRepeat_Record;
   extern const BFTextFieldId GuardOptCurrent;
   extern const BFTextFieldId GuardOptAfter;
   extern const BFDateFieldId DeffUntil;
   extern const BFDecimalFieldId SEGGuarGuardID;
   extern const BFTextFieldId IsTradePass;
   extern const BFDataId DSTC0413_REQ;
   extern const BFDataId DSTC0413_VW;
   extern const BFDataId DSTC0414_REQ;
   extern const BFDataId DSTC0414_REQRepeat_Record;
   extern const BFDataId DSTC0414_VW;
   extern const BFTextFieldId AcctGuaranteeGuardOptHeadingSet;
   extern const BFTextFieldId BrokGuardOptClt;
   extern const BFTextFieldId BrokGuardOptNom;
   extern const BFTextFieldId BrokGuardOptINT;
   extern const BFTextFieldId AcctGuarGuardExists;
   extern const BFTextFieldId RESPQCResidentFound;
   extern const BFDataId DSTC0414_VWRepeat_Record;
   extern const BFTextFieldId AIPAcctName;
   extern const BFTextFieldId TrailerFeeArch;
   extern const BFTextFieldId OrigPlanDeffApplied;
   extern const BFDataId DSTC0415_REQ;
   extern const BFDataId DSTC0415_REQRepeat_Record;
   extern const BFDataId DSTC0415_VW;
   extern const BFDataId DSTC0415_VWRepeat_Record;
   extern const BFDataId DSTC0416_REQ;
   extern const BFDataId DSTC0416_VW;
   extern const BFTextFieldId NewTaxJuris;
   extern const BFTextFieldId NewSibling;
   extern const BFDecimalFieldId AcAmt10Prcnt;
   extern const BFTextFieldId GovAmendmentExist;
   extern const BFDecimalFieldId AcctOwnerID;
   extern const BFTextFieldId AcctOwnerName;
   extern const BFTextFieldId EPABroker;
   extern const BFTextFieldId EftToChqAllowed;
   extern const BFTextFieldId AllowChqChange;
   extern const BFTextFieldId EPASettlementHeadingSet;
   extern const BFTextFieldId IsValid;
   extern const BFDataId DSTC0417_REQ;
   extern const BFDataId DSTC0417_VW;
   extern const BFTextFieldId TFSAAcctCatCodeList;
   extern const BFTextFieldId RRSPAcctCatCodeList;
   extern const BFTextFieldId GrantRepayReasonQESI2;
   extern const BFTextFieldId IsAcctRunCuratorFile;
   extern const BFTextFieldId HasAcctBeenUnFrozen;
   extern const BFTextFieldId StaleChqExists;
   extern const BFTextFieldId StaleChqStageList;
   extern const BFTextFieldId RemittedChqExists;
   extern const BFTextFieldId RemittedChqStage;
   extern const BFTextFieldId RemittedChqStageList;
   extern const BFTextFieldId RtnMailStage;
   extern const BFTextFieldId RtnMailStageList;
   extern const BFTextFieldId InquiryType;
   extern const BFTextFieldId DebitPaymentMethod;
   extern const BFTextFieldId ConsolTypeED;
   extern const BFTextFieldId EFTPurchaseXEdit;
   extern const BFDateFieldId NewDofBirth;
   extern const BFTextFieldId GroupFundXEdit;
   extern const BFTextFieldId TotalOnlySettled;
   extern const BFTextFieldId HasPendingTrades;
   extern const BFDateFieldId LatestPendingTradeDeff;
   extern const BFTextFieldId SplitCommissionFlatDetailsHeadingSet;
   extern const BFTextFieldId ToFlatPercent;
   extern const BFNumericFieldId HistNonTrustYear;
   extern const BFTextFieldId TotTransfINDC;
   extern const BFDateFieldId NonTrustStartDate;
   extern const BFDateFieldId NonTrustStopDate;
   extern const BFTextFieldId IsNonTrustee;
   extern const BFTextFieldId TFSALastAmendTaxYear;
   extern const BFTextFieldId IsInNonTrusteeTxfrPeriod;
   extern const BFTextFieldId IsTotTransfINDCApplicable;
   extern const BFTextFieldId IsNotionalTaxYearApplicable;
   extern const BFDateFieldId DeathSettlementDate;
   extern const BFTextFieldId FundAmtType;
   extern const BFTextFieldId BenefCurrTradeYearFound;
   extern const BFTextFieldId AnyBenefCurrTradeYear;
   extern const BFTextFieldId PortfolioCode;
   extern const BFTextFieldId NetworkRespRequired;
   extern const BFTextFieldId NetworkRespReqApplicable;
   extern const BFTextFieldId NetworkIDForAmountTrade;
   extern const BFNumericFieldId FundBrokerOffsetTime;
   extern const BFTextFieldId AllEFTConsolActive;
   extern const BFIntegerFieldId BulkBackDate;
   extern const BFTextFieldId AllEFTConsolShrLv;
   extern const BFTextFieldId ProdPortfolioUUID;
   extern const BFTextFieldId ProdPortfolioPlanUUID;
   extern const BFTextFieldId PortfolioPlanCode;
   extern const BFTextFieldId PortfolioPlanName;
   extern const BFTextFieldId DefaultPlan;
   extern const BFTextFieldId PortfolioName;
   extern const BFDataId DSTC0418_REQ;
   extern const BFDataId DSTC0418_VW;
   extern const BFDataId DSTC0418_VWRepeat_Record;
   extern const BFDataId DSTC0419_REQ;
   extern const BFDataFieldProperties s_FldProp_TerminationAgeAfterDeff;
   extern const BFDataFieldProperties s_FldProp_RESPAgeLimitsDeff;
   extern const BFDataFieldProperties s_FldProp_AdditionalGrant;
   extern const BFDataFieldProperties s_FldProp_CLBAmount;
   extern const BFDataFieldProperties s_FldProp_PGrantAmount;
   extern const BFDataFieldProperties s_FldProp_TDRedContrib;
   extern const BFDataFieldProperties s_FldProp_RedCESG;
   extern const BFDataFieldProperties s_FldProp_RedCLB;
   extern const BFDataFieldProperties s_FldProp_RedPGrant;
   extern const BFDataFieldProperties s_FldProp_Pre98ContribAmt;
   extern const BFDataFieldProperties s_FldProp_Pre98RedContribAmt;
   extern const BFDataFieldProperties s_FldProp_TransferPercent;
   extern const BFDataFieldProperties s_FldProp_AcctLvlOverride;
   extern const BFDataFieldProperties s_FldProp_QESIUCAmount;
   extern const BFDataFieldProperties s_FldProp_QESIACAmount;
   extern const BFDataFieldProperties s_FldProp_QESIYTDContribution;
   extern const BFDataFieldProperties s_FldProp_QESIBasicGrant;
   extern const BFDataFieldProperties s_FldProp_QESIIncreaseAmt;
   extern const BFDataFieldProperties s_FldProp_Pre98QESIContrib;
   extern const BFDataFieldProperties s_FldProp_Pre2007QESIContrib;
   extern const BFDataFieldProperties s_FldProp_RESPExtTrDetlUUID;
   extern const BFDataFieldProperties s_FldProp_RESPExtTrDetlVer;
   extern const BFDataFieldProperties s_FldProp_RESPContrDetlUUID;
   extern const BFDataFieldProperties s_FldProp_DSTC0408_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0408_VW;
   extern const BFDataFieldProperties s_FldProp_NEQID;
   extern const BFDataFieldProperties s_FldProp_DSTC0406_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0406_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0406_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_RESPBenefIDFrom;
   extern const BFDataFieldProperties s_FldProp_Relation;
   extern const BFDataFieldProperties s_FldProp_DSTC0407_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0407_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0407_VW;
   extern const BFDataFieldProperties s_FldProp_WarnCode13;
   extern const BFDataFieldProperties s_FldProp_WarnCode14;
   extern const BFDataFieldProperties s_FldProp_WarnCode15;
   extern const BFDataFieldProperties s_FldProp_WarnCode16;
   extern const BFDataFieldProperties s_FldProp_EntityTypeTo;
   extern const BFDataFieldProperties s_FldProp_EntityTypeSeqTo;
   extern const BFDataFieldProperties s_FldProp_BenefEffectiveDate;
   extern const BFDataFieldProperties s_FldProp_RESPTransferHeading;
   extern const BFDataFieldProperties s_FldProp_GRRepayReasonCommon;
   extern const BFDataFieldProperties s_FldProp_GRRepayReasonQESI;
   extern const BFDataFieldProperties s_FldProp_DSTC0409_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0409_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0408_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_RESPContrDetlTaxYear;
   extern const BFDataFieldProperties s_FldProp_AmountRedCode;
   extern const BFDataFieldProperties s_FldProp_RedCodeOCRdmYearXEdit;
   extern const BFDataFieldProperties s_FldProp_RedCodeTaintedXEdit;
   extern const BFDataFieldProperties s_FldProp_EligibleTransfer;
   extern const BFDataFieldProperties s_FldProp_PurAdd;
   extern const BFDataFieldProperties s_FldProp_PurCLB;
   extern const BFDataFieldProperties s_FldProp_PurPGrant;
   extern const BFDataFieldProperties s_FldProp_PurQESI;
   extern const BFDataFieldProperties s_FldProp_RedIncome;
   extern const BFDataFieldProperties s_FldProp_RedQESI;
   extern const BFDataFieldProperties s_FldProp_AddtlQESI;
   extern const BFDataFieldProperties s_FldProp_GratRepayReasonAll;
   extern const BFDataFieldProperties s_FldProp_AssistedContrAmt;
   extern const BFDataFieldProperties s_FldProp_TrfResubmit;
   extern const BFDataFieldProperties s_FldProp_IsAGrantTrade;
   extern const BFDataFieldProperties s_FldProp_GrantRepayablePurch;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboSettlementBroker;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboSettlementBranch;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboSettlementSlsrep;
   extern const BFDataFieldProperties s_FldProp_OrigPlanDeff;
   extern const BFDataFieldProperties s_FldProp_DSTC0410_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0410_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0410_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0411_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0411_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0411_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_TfrStat;
   extern const BFDataFieldProperties s_FldProp_RepHRDC;
   extern const BFDataFieldProperties s_FldProp_TransRecId;
   extern const BFDataFieldProperties s_FldProp_IsGWOContractExist;
   extern const BFDataFieldProperties s_FldProp_HasGWOContract;
   extern const BFDataFieldProperties s_FldProp_GuaranteeGuardOn;
   extern const BFDataFieldProperties s_FldProp_DSTC0412_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0412_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0412_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_GuardOptCurrent;
   extern const BFDataFieldProperties s_FldProp_GuardOptAfter;
   extern const BFDataFieldProperties s_FldProp_DeffUntil;
   extern const BFDataFieldProperties s_FldProp_SEGGuarGuardID;
   extern const BFDataFieldProperties s_FldProp_IsTradePass;
   extern const BFDataFieldProperties s_FldProp_DSTC0413_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0413_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0414_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0414_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0414_VW;
   extern const BFDataFieldProperties s_FldProp_AcctGuaranteeGuardOptHeadingSet;
   extern const BFDataFieldProperties s_FldProp_BrokGuardOptClt;
   extern const BFDataFieldProperties s_FldProp_BrokGuardOptNom;
   extern const BFDataFieldProperties s_FldProp_BrokGuardOptINT;
   extern const BFDataFieldProperties s_FldProp_AcctGuarGuardExists;
   extern const BFDataFieldProperties s_FldProp_RESPQCResidentFound;
   extern const BFDataFieldProperties s_FldProp_DSTC0414_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_AIPAcctName;
   extern const BFDataFieldProperties s_FldProp_TrailerFeeArch;
   extern const BFDataFieldProperties s_FldProp_OrigPlanDeffApplied;
   extern const BFDataFieldProperties s_FldProp_DSTC0415_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0415_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0415_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0415_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0416_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0416_VW;
   extern const BFDataFieldProperties s_FldProp_NewTaxJuris;
   extern const BFDataFieldProperties s_FldProp_NewSibling;
   extern const BFDataFieldProperties s_FldProp_AcAmt10Prcnt;
   extern const BFDataFieldProperties s_FldProp_GovAmendmentExist;
   extern const BFDataFieldProperties s_FldProp_AcctOwnerID;
   extern const BFDataFieldProperties s_FldProp_AcctOwnerName;
   extern const BFDataFieldProperties s_FldProp_EPABroker;
   extern const BFDataFieldProperties s_FldProp_EftToChqAllowed;
   extern const BFDataFieldProperties s_FldProp_AllowChqChange;
   extern const BFDataFieldProperties s_FldProp_EPASettlementHeadingSet;
   extern const BFDataFieldProperties s_FldProp_IsValid;
   extern const BFDataFieldProperties s_FldProp_DSTC0417_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0417_VW;
   extern const BFDataFieldProperties s_FldProp_TFSAAcctCatCodeList;
   extern const BFDataFieldProperties s_FldProp_RRSPAcctCatCodeList;
   extern const BFDataFieldProperties s_FldProp_GrantRepayReasonQESI2;
   extern const BFDataFieldProperties s_FldProp_IsAcctRunCuratorFile;
   extern const BFDataFieldProperties s_FldProp_HasAcctBeenUnFrozen;
   extern const BFDataFieldProperties s_FldProp_StaleChqExists;
   extern const BFDataFieldProperties s_FldProp_StaleChqStageList;
   extern const BFDataFieldProperties s_FldProp_RemittedChqExists;
   extern const BFDataFieldProperties s_FldProp_RemittedChqStage;
   extern const BFDataFieldProperties s_FldProp_RemittedChqStageList;
   extern const BFDataFieldProperties s_FldProp_RtnMailStage;
   extern const BFDataFieldProperties s_FldProp_RtnMailStageList;
   extern const BFDataFieldProperties s_FldProp_InquiryType;
   extern const BFDataFieldProperties s_FldProp_DebitPaymentMethod;
   extern const BFDataFieldProperties s_FldProp_ConsolTypeED;
   extern const BFDataFieldProperties s_FldProp_EFTPurchaseXEdit;
   extern const BFDataFieldProperties s_FldProp_NewDofBirth;
   extern const BFDataFieldProperties s_FldProp_GroupFundXEdit;
   extern const BFDataFieldProperties s_FldProp_TotalOnlySettled;
   extern const BFDataFieldProperties s_FldProp_HasPendingTrades;
   extern const BFDataFieldProperties s_FldProp_LatestPendingTradeDeff;
   extern const BFDataFieldProperties s_FldProp_SplitCommissionFlatDetailsHeadingSet;
   extern const BFDataFieldProperties s_FldProp_ToFlatPercent;
   extern const BFDataFieldProperties s_FldProp_HistNonTrustYear;
   extern const BFDataFieldProperties s_FldProp_TotTransfINDC;
   extern const BFDataFieldProperties s_FldProp_NonTrustStartDate;
   extern const BFDataFieldProperties s_FldProp_NonTrustStopDate;
   extern const BFDataFieldProperties s_FldProp_IsNonTrustee;
   extern const BFDataFieldProperties s_FldProp_TFSALastAmendTaxYear;
   extern const BFDataFieldProperties s_FldProp_IsInNonTrusteeTxfrPeriod;
   extern const BFDataFieldProperties s_FldProp_IsTotTransfINDCApplicable;
   extern const BFDataFieldProperties s_FldProp_IsNotionalTaxYearApplicable;
   extern const BFDataFieldProperties s_FldProp_DeathSettlementDate;
   extern const BFDataFieldProperties s_FldProp_FundAmtType;
   extern const BFDataFieldProperties s_FldProp_BenefCurrTradeYearFound;
   extern const BFDataFieldProperties s_FldProp_AnyBenefCurrTradeYear;
   extern const BFDataFieldProperties s_FldProp_PortfolioCode;
   extern const BFDataFieldProperties s_FldProp_NetworkRespRequired;
   extern const BFDataFieldProperties s_FldProp_NetworkRespReqApplicable;
   extern const BFDataFieldProperties s_FldProp_NetworkIDForAmountTrade;
   extern const BFDataFieldProperties s_FldProp_FundBrokerOffsetTime;
   extern const BFDataFieldProperties s_FldProp_AllEFTConsolActive;
   extern const BFDataFieldProperties s_FldProp_BulkBackDate;
   extern const BFDataFieldProperties s_FldProp_AllEFTConsolShrLv;
   extern const BFDataFieldProperties s_FldProp_ProdPortfolioUUID;
   extern const BFDataFieldProperties s_FldProp_ProdPortfolioPlanUUID;
   extern const BFDataFieldProperties s_FldProp_PortfolioPlanCode;
   extern const BFDataFieldProperties s_FldProp_PortfolioPlanName;
   extern const BFDataFieldProperties s_FldProp_DefaultPlan;
   extern const BFDataFieldProperties s_FldProp_PortfolioName;
   extern const BFDataFieldProperties s_FldProp_DSTC0418_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0418_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0418_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0419_REQ;
   BFDataField* createField_31( const BFFieldId id )
   {
      BFDataField* pField = NULL;
      switch( id.getId() )
      {
         case 40006200: pField = new BFTextField_60( TerminationAgeAfterDeff, &s_FldProp_TerminationAgeAfterDeff ); break; 
         case 40006201: pField = new BFDecimalField( RESPAgeLimitsDeff, &s_FldProp_RESPAgeLimitsDeff ); break; 
         case 40006202: pField = new BFDecimalField( AdditionalGrant, &s_FldProp_AdditionalGrant ); break; 
         case 40006203: pField = new BFDecimalField( CLBAmount, &s_FldProp_CLBAmount ); break; 
         case 40006204: pField = new BFDecimalField( PGrantAmount, &s_FldProp_PGrantAmount ); break; 
         case 40006205: pField = new BFDecimalField( TDRedContrib, &s_FldProp_TDRedContrib ); break; 
         case 40006207: pField = new BFDecimalField( RedCESG, &s_FldProp_RedCESG ); break; 
         case 40006208: pField = new BFDecimalField( RedCLB, &s_FldProp_RedCLB ); break; 
         case 40006209: pField = new BFDecimalField( RedPGrant, &s_FldProp_RedPGrant ); break; 
         case 40006210: pField = new BFDecimalField( Pre98ContribAmt, &s_FldProp_Pre98ContribAmt ); break; 
         case 40006212: pField = new BFDecimalField( Pre98RedContribAmt, &s_FldProp_Pre98RedContribAmt ); break; 
         case 40006213: pField = new BFDecimalField( TransferPercent, &s_FldProp_TransferPercent ); break; 
         case 40006215: pField = new BFTextField_1( AcctLvlOverride, &s_FldProp_AcctLvlOverride ); break; 
         case 40006216: pField = new BFDecimalField( QESIUCAmount, &s_FldProp_QESIUCAmount ); break; 
         case 40006217: pField = new BFDecimalField( QESIACAmount, &s_FldProp_QESIACAmount ); break; 
         case 40006218: pField = new BFDecimalField( QESIYTDContribution, &s_FldProp_QESIYTDContribution ); break; 
         case 40006219: pField = new BFDecimalField( QESIBasicGrant, &s_FldProp_QESIBasicGrant ); break; 
         case 40006220: pField = new BFDecimalField( QESIIncreaseAmt, &s_FldProp_QESIIncreaseAmt ); break; 
         case 40006221: pField = new BFDecimalField( Pre98QESIContrib, &s_FldProp_Pre98QESIContrib ); break; 
         case 40006222: pField = new BFDecimalField( Pre2007QESIContrib, &s_FldProp_Pre2007QESIContrib ); break; 
         case 40006223: pField = new BFTextField_60( RESPExtTrDetlUUID, &s_FldProp_RESPExtTrDetlUUID ); break; 
         case 40006224: pField = new BFNumericField( RESPExtTrDetlVer, &s_FldProp_RESPExtTrDetlVer ); break; 
         case 40006225: pField = new BFTextField<25>( RESPContrDetlUUID, &s_FldProp_RESPContrDetlUUID ); break; 
         case 40006229: pField = new BFTextField_60( NEQID, &s_FldProp_NEQID ); break; 
         case 40006233: pField = new BFDecimalField( RESPBenefIDFrom, &s_FldProp_RESPBenefIDFrom ); break; 
         case 40006234: pField = new BFTextField_60( Relation, &s_FldProp_Relation ); break; 
         case 40006238: pField = new BFIntegerField( WarnCode13, &s_FldProp_WarnCode13 ); break; 
         case 40006239: pField = new BFIntegerField( WarnCode14, &s_FldProp_WarnCode14 ); break; 
         case 40006240: pField = new BFIntegerField( WarnCode15, &s_FldProp_WarnCode15 ); break; 
         case 40006241: pField = new BFIntegerField( WarnCode16, &s_FldProp_WarnCode16 ); break; 
         case 40006243: pField = new BFTextField_60( EntityTypeTo, &s_FldProp_EntityTypeTo ); break; 
         case 40006244: pField = new BFDecimalField( EntityTypeSeqTo, &s_FldProp_EntityTypeSeqTo ); break; 
         case 40006245: pField = new BFDateField( BenefEffectiveDate, &s_FldProp_BenefEffectiveDate ); break; 
         case 40006246: pField = new BFTextField_60( RESPTransferHeading, &s_FldProp_RESPTransferHeading ); break; 
         case 40006247: pField = new BFTextField_60( GRRepayReasonCommon, &s_FldProp_GRRepayReasonCommon ); break; 
         case 40006248: pField = new BFTextField_60( GRRepayReasonQESI, &s_FldProp_GRRepayReasonQESI ); break; 
         case 40006254: pField = new BFIntegerField( RESPContrDetlTaxYear, &s_FldProp_RESPContrDetlTaxYear ); break; 
         case 40006255: pField = new BFTextField_60( AmountRedCode, &s_FldProp_AmountRedCode ); break; 
         case 40006256: pField = new BFTextField_60( RedCodeOCRdmYearXEdit, &s_FldProp_RedCodeOCRdmYearXEdit ); break; 
         case 40006257: pField = new BFTextField_60( RedCodeTaintedXEdit, &s_FldProp_RedCodeTaintedXEdit ); break; 
         case 40006258: pField = new BFTextField_10( EligibleTransfer, &s_FldProp_EligibleTransfer ); break; 
         case 40006260: pField = new BFDecimalField( PurAdd, &s_FldProp_PurAdd ); break; 
         case 40006261: pField = new BFDecimalField( PurCLB, &s_FldProp_PurCLB ); break; 
         case 40006262: pField = new BFDecimalField( PurPGrant, &s_FldProp_PurPGrant ); break; 
         case 40006263: pField = new BFDecimalField( PurQESI, &s_FldProp_PurQESI ); break; 
         case 40006264: pField = new BFDecimalField( RedIncome, &s_FldProp_RedIncome ); break; 
         case 40006265: pField = new BFDecimalField( RedQESI, &s_FldProp_RedQESI ); break; 
         case 40006266: pField = new BFDecimalField( AddtlQESI, &s_FldProp_AddtlQESI ); break; 
         case 40006267: pField = new BFTextField<20>( GratRepayReasonAll, &s_FldProp_GratRepayReasonAll ); break; 
         case 40006268: pField = new BFDecimalField( AssistedContrAmt, &s_FldProp_AssistedContrAmt ); break; 
         case 40006269: pField = new BFTextField_10( TrfResubmit, &s_FldProp_TrfResubmit ); break; 
         case 40006270: pField = new BFTextField_10( IsAGrantTrade, &s_FldProp_IsAGrantTrade ); break; 
         case 40006271: pField = new BFDecimalField( GrantRepayablePurch, &s_FldProp_GrantRepayablePurch ); break; 
         case 40006272: pField = new BFTextField_60( BankInstrComboSettlementBroker, &s_FldProp_BankInstrComboSettlementBroker ); break; 
         case 40006273: pField = new BFTextField_60( BankInstrComboSettlementBranch, &s_FldProp_BankInstrComboSettlementBranch ); break; 
         case 40006274: pField = new BFTextField_60( BankInstrComboSettlementSlsrep, &s_FldProp_BankInstrComboSettlementSlsrep ); break; 
         case 40006275: pField = new BFDateField( OrigPlanDeff, &s_FldProp_OrigPlanDeff ); break; 
         case 40006282: pField = new BFTextField_1( TfrStat, &s_FldProp_TfrStat ); break; 
         case 40006283: pField = new BFTextField_60( RepHRDC, &s_FldProp_RepHRDC ); break; 
         case 40006284: pField = new BFNumericField( TransRecId, &s_FldProp_TransRecId ); break; 
         case 40006287: pField = new BFTextField_10( IsGWOContractExist, &s_FldProp_IsGWOContractExist ); break; 
         case 40006288: pField = new BFTextField_10( HasGWOContract, &s_FldProp_HasGWOContract ); break; 
         case 40006289: pField = new BFTextField_10( GuaranteeGuardOn, &s_FldProp_GuaranteeGuardOn ); break; 
         case 40006293: pField = new BFTextField_60( GuardOptCurrent, &s_FldProp_GuardOptCurrent ); break; 
         case 40006294: pField = new BFTextField_60( GuardOptAfter, &s_FldProp_GuardOptAfter ); break; 
         case 40006295: pField = new BFDateField( DeffUntil, &s_FldProp_DeffUntil ); break; 
         case 40006296: pField = new BFDecimalField( SEGGuarGuardID, &s_FldProp_SEGGuarGuardID ); break; 
         case 40006297: pField = new BFTextField_10( IsTradePass, &s_FldProp_IsTradePass ); break; 
         case 40006303: pField = new BFTextField_60( AcctGuaranteeGuardOptHeadingSet, &s_FldProp_AcctGuaranteeGuardOptHeadingSet ); break; 
         case 40006304: pField = new BFTextField_60( BrokGuardOptClt, &s_FldProp_BrokGuardOptClt ); break; 
         case 40006305: pField = new BFTextField_60( BrokGuardOptNom, &s_FldProp_BrokGuardOptNom ); break; 
         case 40006306: pField = new BFTextField_60( BrokGuardOptINT, &s_FldProp_BrokGuardOptINT ); break; 
         case 40006311: pField = new BFTextField_1( AcctGuarGuardExists, &s_FldProp_AcctGuarGuardExists ); break; 
         case 40006312: pField = new BFTextField_1( RESPQCResidentFound, &s_FldProp_RESPQCResidentFound ); break; 
         case 40006314: pField = new BFTextField_60( AIPAcctName, &s_FldProp_AIPAcctName ); break; 
         case 40006315: pField = new BFTextField_10( TrailerFeeArch, &s_FldProp_TrailerFeeArch ); break; 
         case 40006319: pField = new BFTextField_10( OrigPlanDeffApplied, &s_FldProp_OrigPlanDeffApplied ); break; 
         case 40006326: pField = new BFTextField_60( NewTaxJuris, &s_FldProp_NewTaxJuris ); break; 
         case 40006327: pField = new BFTextField_10( NewSibling, &s_FldProp_NewSibling ); break; 
         case 40006329: pField = new BFDecimalField( AcAmt10Prcnt, &s_FldProp_AcAmt10Prcnt ); break; 
         case 40006330: pField = new BFTextField_10( GovAmendmentExist, &s_FldProp_GovAmendmentExist ); break; 
         case 40006331: pField = new BFDecimalField( AcctOwnerID, &s_FldProp_AcctOwnerID ); break; 
         case 40006332: pField = new BFTextField_60( AcctOwnerName, &s_FldProp_AcctOwnerName ); break; 
         case 40006333: pField = new BFTextField_10( EPABroker, &s_FldProp_EPABroker ); break; 
         case 40006334: pField = new BFTextField_10( EftToChqAllowed, &s_FldProp_EftToChqAllowed ); break; 
         case 40006335: pField = new BFTextField_10( AllowChqChange, &s_FldProp_AllowChqChange ); break; 
         case 40006336: pField = new BFTextField_60( EPASettlementHeadingSet, &s_FldProp_EPASettlementHeadingSet ); break; 
         case 40006338: pField = new BFTextField_1( IsValid, &s_FldProp_IsValid ); break; 
         case 40006341: pField = new BFTextField_60( TFSAAcctCatCodeList, &s_FldProp_TFSAAcctCatCodeList ); break; 
         case 40006342: pField = new BFTextField_60( RRSPAcctCatCodeList, &s_FldProp_RRSPAcctCatCodeList ); break; 
         case 40006343: pField = new BFTextField_60( GrantRepayReasonQESI2, &s_FldProp_GrantRepayReasonQESI2 ); break; 
         case 40006344: pField = new BFTextField_10( IsAcctRunCuratorFile, &s_FldProp_IsAcctRunCuratorFile ); break; 
         case 40006345: pField = new BFTextField_10( HasAcctBeenUnFrozen, &s_FldProp_HasAcctBeenUnFrozen ); break; 
         case 40006346: pField = new BFTextField_10( StaleChqExists, &s_FldProp_StaleChqExists ); break; 
         case 40006347: pField = new BFTextField<200>( StaleChqStageList, &s_FldProp_StaleChqStageList ); break; 
         case 40006348: pField = new BFTextField_10( RemittedChqExists, &s_FldProp_RemittedChqExists ); break; 
         case 40006349: pField = new BFTextField_60( RemittedChqStage, &s_FldProp_RemittedChqStage ); break; 
         case 40006350: pField = new BFTextField<200>( RemittedChqStageList, &s_FldProp_RemittedChqStageList ); break; 
         case 40006351: pField = new BFTextField_60( RtnMailStage, &s_FldProp_RtnMailStage ); break; 
         case 40006352: pField = new BFTextField<200>( RtnMailStageList, &s_FldProp_RtnMailStageList ); break; 
         case 40006353: pField = new BFTextField_60( InquiryType, &s_FldProp_InquiryType ); break; 
         case 40006354: pField = new BFTextField_60( DebitPaymentMethod, &s_FldProp_DebitPaymentMethod ); break; 
         case 40006355: pField = new BFTextField_60( ConsolTypeED, &s_FldProp_ConsolTypeED ); break; 
         case 40006356: pField = new BFTextField_60( EFTPurchaseXEdit, &s_FldProp_EFTPurchaseXEdit ); break; 
         case 40006358: pField = new BFDateField( NewDofBirth, &s_FldProp_NewDofBirth ); break; 
         case 40006359: pField = new BFTextField_60( GroupFundXEdit, &s_FldProp_GroupFundXEdit ); break; 
         case 40006360: pField = new BFTextField_10( TotalOnlySettled, &s_FldProp_TotalOnlySettled ); break; 
         case 40006361: pField = new BFTextField_1( HasPendingTrades, &s_FldProp_HasPendingTrades ); break; 
         case 40006362: pField = new BFDateField( LatestPendingTradeDeff, &s_FldProp_LatestPendingTradeDeff ); break; 
         case 40006363: pField = new BFTextField_60( SplitCommissionFlatDetailsHeadingSet, &s_FldProp_SplitCommissionFlatDetailsHeadingSet ); break; 
         case 40006366: pField = new BFTextField_1( ToFlatPercent, &s_FldProp_ToFlatPercent ); break; 
         case 40006368: pField = new BFNumericField( HistNonTrustYear, &s_FldProp_HistNonTrustYear ); break; 
         case 40006369: pField = new BFTextField<4>( TotTransfINDC, &s_FldProp_TotTransfINDC ); break; 
         case 40006370: pField = new BFDateField( NonTrustStartDate, &s_FldProp_NonTrustStartDate ); break; 
         case 40006372: pField = new BFDateField( NonTrustStopDate, &s_FldProp_NonTrustStopDate ); break; 
         case 40006373: pField = new BFTextField_1( IsNonTrustee, &s_FldProp_IsNonTrustee ); break; 
         case 40006374: pField = new BFTextField_10( TFSALastAmendTaxYear, &s_FldProp_TFSALastAmendTaxYear ); break; 
         case 40006375: pField = new BFTextField<3>( IsInNonTrusteeTxfrPeriod, &s_FldProp_IsInNonTrusteeTxfrPeriod ); break; 
         case 40006376: pField = new BFTextField<3>( IsTotTransfINDCApplicable, &s_FldProp_IsTotTransfINDCApplicable ); break; 
         case 40006377: pField = new BFTextField<3>( IsNotionalTaxYearApplicable, &s_FldProp_IsNotionalTaxYearApplicable ); break; 
         case 40006378: pField = new BFDateField( DeathSettlementDate, &s_FldProp_DeathSettlementDate ); break; 
         case 40006379: pField = new BFTextField_60( FundAmtType, &s_FldProp_FundAmtType ); break; 
         case 40006380: pField = new BFTextField<3>( BenefCurrTradeYearFound, &s_FldProp_BenefCurrTradeYearFound ); break; 
         case 40006381: pField = new BFTextField<3>( AnyBenefCurrTradeYear, &s_FldProp_AnyBenefCurrTradeYear ); break; 
         case 40006382: pField = new BFTextField_60( PortfolioCode, &s_FldProp_PortfolioCode ); break; 
         case 40006383: pField = new BFTextField_1( NetworkRespRequired, &s_FldProp_NetworkRespRequired ); break; 
         case 40006384: pField = new BFTextField_1( NetworkRespReqApplicable, &s_FldProp_NetworkRespReqApplicable ); break; 
         case 40006385: pField = new BFTextField_60( NetworkIDForAmountTrade, &s_FldProp_NetworkIDForAmountTrade ); break; 
         case 40006386: pField = new BFNumericField( FundBrokerOffsetTime, &s_FldProp_FundBrokerOffsetTime ); break; 
         case 40006387: pField = new BFTextField_1( AllEFTConsolActive, &s_FldProp_AllEFTConsolActive ); break; 
         case 40006388: pField = new BFIntegerField( BulkBackDate, &s_FldProp_BulkBackDate ); break; 
         case 40006389: pField = new BFTextField_1( AllEFTConsolShrLv, &s_FldProp_AllEFTConsolShrLv ); break; 
         case 40006390: pField = new BFTextField_60( ProdPortfolioUUID, &s_FldProp_ProdPortfolioUUID ); break; 
         case 40006391: pField = new BFTextField_60( ProdPortfolioPlanUUID, &s_FldProp_ProdPortfolioPlanUUID ); break; 
         case 40006392: pField = new BFTextField_60( PortfolioPlanCode, &s_FldProp_PortfolioPlanCode ); break; 
         case 40006393: pField = new BFTextField_60( PortfolioPlanName, &s_FldProp_PortfolioPlanName ); break; 
         case 40006394: pField = new BFTextField_10( DefaultPlan, &s_FldProp_DefaultPlan ); break; 
         case 40006395: pField = new BFTextField_60( PortfolioName, &s_FldProp_PortfolioName ); break; 
      }
      return pField;
   }
}
