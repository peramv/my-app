// BFDataImpl implementation file for DataSet DSTC0461.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0461_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0461_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0461_VWRepeat_Record() { return new dsi_DSTC0461_VWRepeat_Record; }

dsi_DSTC0461_VWRepeat_Record::dsi_DSTC0461_VWRepeat_Record()
: BFDataImpl( 40007372 )
, NetworkID_( ifds::NetworkID, &ifds::s_FldProp_NetworkID )
, NetworkConfigType_( ifds::NetworkConfigType, &ifds::s_FldProp_NetworkConfigType )
, NetworkConfigValue_( ifds::NetworkConfigValue, &ifds::s_FldProp_NetworkConfigValue )
{
   cFields_ = 3;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0461_VWRepeat_Record::~dsi_DSTC0461_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0461_VWRepeat_Record::clone()
{
   dsi_DSTC0461_VWRepeat_Record* p = new dsi_DSTC0461_VWRepeat_Record;
   p->NetworkID_ = NetworkID_;
   p->NetworkConfigType_ = NetworkConfigType_;
   p->NetworkConfigValue_ = NetworkConfigValue_;
   return(p);
}

BFDataField* dsi_DSTC0461_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40003522: return ( &NetworkID_ ); break; // NetworkID
      case 40007350: return ( &NetworkConfigType_ ); break; // NetworkConfigType
      case 40007351: return ( &NetworkConfigValue_ ); break; // NetworkConfigValue
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0461_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0461_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0461_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 3 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &NetworkID_; break;
            case 1: aFlds_[1] = &NetworkConfigType_; break;
            case 2: aFlds_[2] = &NetworkConfigValue_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0461_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0461_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0461_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 600 );
}

unsigned long dsi_DSTC0461_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 760 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0461_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0461_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0461_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40003522: return( true );
      case 40007350: return( true );
      case 40007351: return( true );
   }
   return false;
}

