// Data Field Properties
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdataid.hpp>
#include "ifast_substitutions.h"
#include "ifast_masks.h"

namespace ifds
{
   extern const BFTextFieldId LV_OneTimeRRIFAllocHeading;
   extern const BFTextFieldId LV_OneTimeRRIFFundHeading;
   extern const BFTextFieldId ChequeAddr;
   extern const BFDataId DSTC0093_REQ;
   extern const BFDataId DSTC0093_VW;
   extern const BFDataId DSTC0093_VWRepeat_Record;
   extern const BFDataId DSTC0094_REQ;
   extern const BFDataId DSTC0094_VW;
   extern const BFDataId DSTC0094_VWRepeat_Record;
   extern const BFNumericFieldId SlsRepTotal;
   extern const BFDecimalFieldId FundPercent;
   extern const BFDecimalFieldId FundUnits;
   extern const BFDecimalFieldId FundAmt;
   extern const BFDecimalFieldId FundProdPercent;
   extern const BFDecimalFieldId FundProdUnits;
   extern const BFDecimalFieldId FundProdAmt;
   extern const BFDataId DSTC0103_REQ;
   extern const BFDataId DSTC0103_VW;
   extern const BFDataId DSTC0103_VWRepeat_Record;
   extern const BFDecimalFieldId ProductPercent;
   extern const BFDecimalFieldId ProductAmount;
   extern const BFDecimalFieldId ShrBalance;
   extern const BFDataId DSTC0104_REQ;
   extern const BFDataId DSTC0104_VW;
   extern const BFDataId DSTC0104_VWRepeat_Record;
   extern const BFDecimalFieldId DividendRate;
   extern const BFDecimalFieldId ReinvestPrice;
   extern const BFDateFieldId PayDate;
   extern const BFIntegerFieldId RESPParentSeq;
   extern const BFIntegerFieldId RESPDesInstSeq;
   extern const BFIntegerFieldId EFTPurchaseLeadDays;
   extern const BFTextFieldId CharWireNum;
   extern const BFTextFieldId WireNumMandatory;
   extern const BFTextFieldId WireNumDefault;
   extern const BFTextFieldId SrcOfFundMandatory;
   extern const BFTextFieldId ChkDuplicationTrade;
   extern const BFTextFieldId InvAdvice;
   extern const BFDateFieldId LastCycleDate;
   extern const BFTextFieldId AcqFeeDefault;
   extern const BFTextFieldId TRExclRedCodes;
   extern const BFTextFieldId TIKRedCodes;
   extern const BFTextFieldId DealDateTime;
   extern const BFTextFieldId EFTPurchFuture;
   extern const BFTextFieldId AccountableMandatory;
   extern const BFTextFieldId SplitAcCode;
   extern const BFTextFieldId GrpContribution;
   extern const BFTextFieldId AllowFractions;
   extern const BFTextFieldId SplitCommTransTypes;
   extern const BFTextFieldId CashReceiptTrack;
   extern const BFTextFieldId DepositId2;
   extern const BFTextFieldId DepositIdMandatory;
   extern const BFTextFieldId DefaultPurchPayType;
   extern const BFTextFieldId EFTPurchase;
   extern const BFTextFieldId SegLicenseProvList;
   extern const BFTextFieldId DepositTypeList;
   extern const BFTextFieldId RedCodeList;
   extern const BFIntegerFieldId CriticalAge1;
   extern const BFIntegerFieldId CriticalAge2;
   extern const BFIntegerFieldId CriticalAge3;
   extern const BFIntegerFieldId BailOutAge1;
   extern const BFIntegerFieldId BailOutAge2;
   extern const BFIntegerFieldId BailOutAge3;
   extern const BFIntegerFieldId LegalAgeCalcType;
   extern const BFIntegerFieldId LegalMaxAge;
   extern const BFTextFieldId AcctableTradeDate;
   extern const BFTextFieldId NetAllocation;
   extern const BFTextFieldId NetOrdType;
   extern const BFTextFieldId NetMultiCurrency;
   extern const BFTextFieldId AmountPrecision;
   extern const BFDataId DSTC0121_REQ;
   extern const BFDataId DSTC0121_VW;
   extern const BFDecimalFieldId AcqFee;
   extern const BFTextFieldId AcqFeeType;
   extern const BFTextFieldId MaxFeeActive;
   extern const BFDecimalFieldId MaxFee;
   extern const BFTextFieldId MaxFeeType;
   extern const BFDecimalFieldId MaxPercent;
   extern const BFDecimalFieldId MaxFlatFundCurr;
   extern const BFTextFieldId AcctTradeType;
   extern const BFTextFieldId BankInstrCombo4;
   extern const BFDataId DSTC0099_VW;
   extern const BFDataId DSTC0099_VWRepeat_Record;
   extern const BFDataId DSTC0099_REQ;
   extern const BFNumericFieldId MaxRepeatCount;
   extern const BFDateFieldId BankAcctEffective;
   extern const BFTextFieldId ShouldAskForMail;
   extern const BFIntegerFieldId MinTerm;
   extern const BFIntegerFieldId MaxTerm;
   extern const BFTextFieldId AnnivDateType;
   extern const BFTextFieldId MaturityTypeMaster;
   extern const BFDateFieldId PrevEffectiveDate;
   extern const BFDataId DSTC0133_REQ;
   extern const BFDataId DSTC0133_VW;
   extern const BFDataId DSTC0133_VWRepeat_Record;
   extern const BFTextFieldId SystematicCrossField1;
   extern const BFTextFieldId SystematicCrossField2;
   extern const BFTextFieldId LV_OneTimeTradeAllocHeadingSet;
   extern const BFTextFieldId LV_OneTimeTradeHeadingSet;
   extern const BFTextFieldId ToFundClassAllowed;
   extern const BFTextFieldId ATAllocationListHeading;
   extern const BFDecimalFieldId RRIFBatchTrace;
   extern const BFTextFieldId RRIFModified;
   extern const BFDataId DSTC0129_REQ;
   extern const BFDataId DSTC0129_REQRepeat_Record;
   extern const BFDataId DSTC0129_VW;
   extern const BFDataId DSTC0130_REQ;
   extern const BFTextFieldId CallNum;
   extern const BFDataId DSTC0130_VW;
   extern const BFDecimalFieldId MandAmtYrSysCalc;
   extern const BFDecimalFieldId MaxAmtYrSysCalc;
   extern const BFDecimalFieldId MandAmtPaySysCalc;
   extern const BFDecimalFieldId AcctValue;
   extern const BFDecimalFieldId TotRedem;
   extern const BFDecimalFieldId AmountSysCalc;
   extern const BFDecimalFieldId ProvRateSysCalc;
   extern const BFDecimalFieldId FedRateSysCalc;
   extern const BFDecimalFieldId NetAmountSysCalc;
   extern const BFDecimalFieldId RRIFDetlVer;
   extern const BFTextFieldId MaxAcqFeePurchase;
   extern const BFTextFieldId MaxAcqFeeTransfer;
   extern const BFTextFieldId MaxFeePurchase;
   extern const BFTextFieldId MaxFeeTransfer;
   extern const BFDateFieldId DetlEffectiveDate;
   extern const BFTextFieldId LV_AtAcctAllocationHeading;
   extern const BFTextFieldId TradeSrcOfFund;
   extern const BFTextFieldId StatusDeath;
   extern const BFTextFieldId StatusActive;
   extern const BFTextFieldId StatusActiveDeath;
   extern const BFTextFieldId StatusBlank;
   extern const BFTextFieldId ProvinceCanada;
   extern const BFTextFieldId FullRedem;
   extern const BFDataId DSTC0137_REQ;
   extern const BFDataId DSTC0137_VW;
   extern const BFDecimalFieldId DSC;
   extern const BFDecimalFieldId FeeFreeAmt;
   extern const BFDecimalFieldId FeeFreeUnits;
   extern const BFDecimalFieldId FeeApplAmt;
   extern const BFDataId DSTC0138_REQ;
   extern const BFTextFieldId CodeType;
   extern const BFDataId DSTC0138_VW;
   extern const BFDataId DSTC0138_VWRepeat_Record;
   extern const BFTextFieldId LV_FundNumberCodeClassHeading;
   extern const BFDataId DSTC0134_REQ;
   extern const BFTextFieldId FromCurrency;
   extern const BFTextFieldId ToCurrency;
   extern const BFDataId DSTC0134_VW;
   extern const BFDataId DSTC0134_VWRepeat_Record;
   extern const BFDataId DSTC0135_REQ;
   extern const BFIntegerFieldId ValidationType;
   extern const BFTextFieldId TradeDateFailed;
   extern const BFTextFieldId SettleDateFailed;
   extern const BFTextFieldId EffectiveDateFailed;
   extern const BFDataId DSTC0135_VW;
   extern const BFTextFieldId MaxApplies;
   extern const BFTextFieldId RRIFQualified;
   extern const BFIntegerFieldId LegMinWithAge;
   extern const BFIntegerFieldId MinAge;
   extern const BFIntegerFieldId MaxAge;
   extern const BFTextFieldId TaxTypeRules;
   extern const BFTextFieldId DefTaxTypeRules;
   extern const BFTextFieldId AMSFund;
   extern const BFTextFieldId TradeAttributesExchange;
   extern const BFDecimalFieldId FeeApplUnits;
   extern const BFDecimalFieldId TotalRedAmt;
   extern const BFDecimalFieldId TotalDSC;
   extern const BFDecimalFieldId WithHoldTax;
   extern const BFTextFieldId AllocationFromFund;
   extern const BFTextFieldId AllocationToFund;
   extern const BFTextFieldId ShouldAskForDofBirth;
   extern const BFTextFieldId EntityKey;
   extern const BFTextFieldId UseDateFlag;
   extern const BFTextFieldId FCConfig;
   extern const BFTextFieldId StopFCrebal;
   extern const BFTextFieldId FCOverrides;
   extern const BFTextFieldId AllLocked;
   extern const BFTextFieldId AcctLocked;
   extern const BFTextFieldId FrngSweep;
   extern const BFTextFieldId CurrChkByTaxType;
   extern const BFTextFieldId EuroAddrFormat;
   extern const BFTextFieldId InvalidCurr;
   extern const BFTextFieldId TaxTypeByCurrChk;
   extern const BFTextFieldId RRIFPrevYear;
   extern const BFTextFieldId RRIFOrPayment;
   extern const BFTextFieldId RRIFValidation;
   extern const BFIntegerFieldId FundAllocLimit;
   extern const BFTextFieldId AMSOrder;
   extern const BFTextFieldId DefSetlCurrency;
   extern const BFDateFieldId PrevBusDate;
   extern const BFDecimalFieldId UnitsPrecision;
   extern const BFTextFieldId SegClient;
   extern const BFTextFieldId CotClient;
   extern const BFTextFieldId ResClient;
   extern const BFTextFieldId LipClient;
   extern const BFTextFieldId NewBusiness;
   extern const BFDataId DSTCFUNDCLASS_VW;
   extern const BFTextFieldId AmountTypeExchange;
   extern const BFTextFieldId Cautions;
   extern const BFTextFieldId CalcFedProvTax;
   extern const BFTextFieldId rxBatchName;

   //------------------------------------------------------------------
   // Field s_FldProp_LV_OneTimeRRIFAllocHeading (1600)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_OneTimeRRIFAllocHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1600_4( I_(" ") );
      return( dstrDefValue_1600_4 );
   }
   const DString& s_FldProp_LV_OneTimeRRIFAllocHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1600_4( I_("LV_OneTimeRRIFAllocHeading") );
      return( dstrFldLabel_1600_4 );
   }
   PBF_SSC subset_super_chooser_2_1600( const ClientLocale& locale )
   {
      return chooser_ss_002_178; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_OneTimeRRIFAllocHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_OneTimeRRIFAllocHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_OneTimeRRIFAllocHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_OneTimeRRIFAllocHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1600 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_OneTimeRRIFFundHeading (1601)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_OneTimeRRIFFundHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1601_4( I_(" ") );
      return( dstrDefValue_1601_4 );
   }
   const DString& s_FldProp_LV_OneTimeRRIFFundHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1601_4( I_("LV_OneTimeRRIFFundHeading") );
      return( dstrFldLabel_1601_4 );
   }
   PBF_SSC subset_super_chooser_2_1601( const ClientLocale& locale )
   {
      return chooser_ss_002_177; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_OneTimeRRIFFundHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_OneTimeRRIFFundHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_OneTimeRRIFFundHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_OneTimeRRIFFundHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1601 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChequeAddr (1602)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChequeAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1602_4( I_(" ") );
      return( dstrDefValue_1602_4 );
   }
   const DString& s_FldProp_ChequeAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1602_4( I_("ChequeAddr") );
      return( dstrFldLabel_1602_4 );
   }
   PBF_SSC subset_super_chooser_2_1602( const ClientLocale& locale )
   {
      return chooser_ss_002_179; // defined in ifast_substitutions_chooser_5.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChequeAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,ChequeAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ChequeAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ChequeAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1602 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsRepTotal (1609)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsRepTotal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1609_4( I_("0") );
      return( dstrDefValue_1609_4 );
   }
   DIINT64 s_FldProp_SlsRepTotal_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_SlsRepTotal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1609_4( I_("SlsRepTotal") );
      return( dstrFldLabel_1609_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsRepTotal(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,SlsRepTotal // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsRepTotal_s_DVF // default value
      ,s_FldProp_SlsRepTotal_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_SlsRepTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundPercent (1610)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundPercent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1610_5( I_("0") );
      return( dstrDefValue_1610_5 );
   }
   double s_FldProp_FundPercent_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FundPercent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1610_5( I_("FundPercent") );
      return( dstrFldLabel_1610_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundPercent(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FundPercent // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_22 // mask chooser function
      ,s_FldProp_FundPercent_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FundPercent_d_DVF // default value
      ,s_FldProp_FundPercent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundUnits (1611)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1611_4( I_("0") );
      return( dstrDefValue_1611_4 );
   }
   double s_FldProp_FundUnits_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FundUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1611_4( I_("FundUnits") );
      return( dstrFldLabel_1611_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FundUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_FundUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FundUnits_d_DVF // default value
      ,s_FldProp_FundUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundAmt (1612)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1612_4( I_("0") );
      return( dstrDefValue_1612_4 );
   }
   double s_FldProp_FundAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FundAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1612_4( I_("FundAmt") );
      return( dstrFldLabel_1612_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FundAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FundAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FundAmt_d_DVF // default value
      ,s_FldProp_FundAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundProdPercent (1613)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundProdPercent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1613_4( I_("0") );
      return( dstrDefValue_1613_4 );
   }
   double s_FldProp_FundProdPercent_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FundProdPercent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1613_4( I_("FundProdPercent") );
      return( dstrFldLabel_1613_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundProdPercent(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FundProdPercent // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_FundProdPercent_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FundProdPercent_d_DVF // default value
      ,s_FldProp_FundProdPercent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundProdUnits (1614)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundProdUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1614_4( I_("0") );
      return( dstrDefValue_1614_4 );
   }
   double s_FldProp_FundProdUnits_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FundProdUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1614_4( I_("FundProdUnits") );
      return( dstrFldLabel_1614_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundProdUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FundProdUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_FundProdUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FundProdUnits_d_DVF // default value
      ,s_FldProp_FundProdUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundProdAmt (1615)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundProdAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1615_4( I_("0") );
      return( dstrDefValue_1615_4 );
   }
   double s_FldProp_FundProdAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FundProdAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1615_4( I_("FundProdAmt") );
      return( dstrFldLabel_1615_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundProdAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FundProdAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FundProdAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FundProdAmt_d_DVF // default value
      ,s_FldProp_FundProdAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProductPercent (1619)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProductPercent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1619_5( I_("0") );
      return( dstrDefValue_1619_5 );
   }
   double s_FldProp_ProductPercent_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_ProductPercent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1619_5( I_("ProductPercent") );
      return( dstrFldLabel_1619_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProductPercent(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ProductPercent // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ProductPercent_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ProductPercent_d_DVF // default value
      ,s_FldProp_ProductPercent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProductAmount (1620)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProductAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1620_4( I_("0") );
      return( dstrDefValue_1620_4 );
   }
   double s_FldProp_ProductAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_ProductAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1620_4( I_("ProductAmount") );
      return( dstrFldLabel_1620_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProductAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ProductAmount // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ProductAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ProductAmount_d_DVF // default value
      ,s_FldProp_ProductAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShrBalance (1621)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShrBalance_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1621_4( I_("0") );
      return( dstrDefValue_1621_4 );
   }
   double s_FldProp_ShrBalance_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_ShrBalance_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1621_4( I_("ShrBalance") );
      return( dstrFldLabel_1621_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShrBalance(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ShrBalance // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ShrBalance_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ShrBalance_d_DVF // default value
      ,s_FldProp_ShrBalance_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DividendRate (1625)
   //------------------------------------------------------------------
   const DString& s_FldProp_DividendRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1625_5( I_("0") );
      return( dstrDefValue_1625_5 );
   }
   double s_FldProp_DividendRate_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_DividendRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1625_5( I_("DividendRate") );
      return( dstrFldLabel_1625_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DividendRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DividendRate // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_DividendRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DividendRate_d_DVF // default value
      ,s_FldProp_DividendRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ReinvestPrice (1626)
   //------------------------------------------------------------------
   const DString& s_FldProp_ReinvestPrice_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1626_7( I_("0") );
      return( dstrDefValue_1626_7 );
   }
   double s_FldProp_ReinvestPrice_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_ReinvestPrice_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1626_7( I_("ReinvestPrice") );
      return( dstrFldLabel_1626_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ReinvestPrice(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ReinvestPrice // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_ReinvestPrice_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ReinvestPrice_d_DVF // default value
      ,s_FldProp_ReinvestPrice_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayDate (1627)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayDate_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1627_4( I_("0") );
         return( dstrDefValue_1627_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1627_8( I_("") );
         return( dstrDefValue_1627_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1627_7( I_("") );
         return( dstrDefValue_1627_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1627_5( I_("") );
         return( dstrDefValue_1627_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1627_3( I_("") );
         return( dstrDefValue_1627_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1627_1( I_("") );
         return( dstrDefValue_1627_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1627_6( I_("") );
         return( dstrDefValue_1627_6 );
      }
      static const DString dstrDefValue_1627_1( I_("") );
      return( dstrDefValue_1627_1 );
   }
   const DString& s_FldProp_PayDate_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1627_4( I_("PayDate") );
         return( dstrFldLabel_1627_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1627_8( I_("PayDate") );
         return( dstrFldLabel_1627_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1627_7( I_("PayDate") );
         return( dstrFldLabel_1627_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1627_5( I_("PayDate") );
         return( dstrFldLabel_1627_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1627_3( I_("PayDate") );
         return( dstrFldLabel_1627_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1627_1( I_("PayDate") );
         return( dstrFldLabel_1627_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1627_6( I_("PayDate") );
         return( dstrFldLabel_1627_6 );
      }
      static const DString dstrFldLabel_1627_1( I_("PayDate") );
      return( dstrFldLabel_1627_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,PayDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RESPParentSeq (1628)
   //------------------------------------------------------------------
   const DString& s_FldProp_RESPParentSeq_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1628_4( I_("0") );
      return( dstrDefValue_1628_4 );
   }
   DIINT64 s_FldProp_RESPParentSeq_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_RESPParentSeq_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1628_4( I_("RESPParentSeq") );
      return( dstrFldLabel_1628_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RESPParentSeq(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,RESPParentSeq // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_RESPParentSeq_s_DVF // default value
      ,s_FldProp_RESPParentSeq_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_RESPParentSeq_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RESPDesInstSeq (1629)
   //------------------------------------------------------------------
   const DString& s_FldProp_RESPDesInstSeq_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1629_4( I_("0") );
      return( dstrDefValue_1629_4 );
   }
   DIINT64 s_FldProp_RESPDesInstSeq_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_RESPDesInstSeq_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1629_4( I_("RESPDesInstSeq") );
      return( dstrFldLabel_1629_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RESPDesInstSeq(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,RESPDesInstSeq // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_RESPDesInstSeq_s_DVF // default value
      ,s_FldProp_RESPDesInstSeq_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_RESPDesInstSeq_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EFTPurchaseLeadDays (1630)
   //------------------------------------------------------------------
   const DString& s_FldProp_EFTPurchaseLeadDays_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1630_4( I_("0") );
      return( dstrDefValue_1630_4 );
   }
   DIINT64 s_FldProp_EFTPurchaseLeadDays_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_EFTPurchaseLeadDays_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1630_4( I_("EFTPurchaseLeadDays") );
      return( dstrFldLabel_1630_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EFTPurchaseLeadDays(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,EFTPurchaseLeadDays // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_EFTPurchaseLeadDays_s_DVF // default value
      ,s_FldProp_EFTPurchaseLeadDays_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_EFTPurchaseLeadDays_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CharWireNum (1631)
   //------------------------------------------------------------------
   const DString& s_FldProp_CharWireNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1631_4( I_("N") );
      return( dstrDefValue_1631_4 );
   }
   const DString& s_FldProp_CharWireNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1631_4( I_("CharWireNum") );
      return( dstrFldLabel_1631_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CharWireNum(
       BFDataFieldProperties::Type::text // field is a text field
      ,CharWireNum // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CharWireNum_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CharWireNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WireNumMandatory (1632)
   //------------------------------------------------------------------
   const DString& s_FldProp_WireNumMandatory_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1632_4( I_("N") );
      return( dstrDefValue_1632_4 );
   }
   const DString& s_FldProp_WireNumMandatory_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1632_4( I_("WireNumMandatory") );
      return( dstrFldLabel_1632_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WireNumMandatory(
       BFDataFieldProperties::Type::text // field is a text field
      ,WireNumMandatory // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WireNumMandatory_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WireNumMandatory_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WireNumDefault (1633)
   //------------------------------------------------------------------
   const DString& s_FldProp_WireNumDefault_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1633_4( I_("N") );
      return( dstrDefValue_1633_4 );
   }
   const DString& s_FldProp_WireNumDefault_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1633_4( I_("WireNumDefault") );
      return( dstrFldLabel_1633_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WireNumDefault(
       BFDataFieldProperties::Type::text // field is a text field
      ,WireNumDefault // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WireNumDefault_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WireNumDefault_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFundMandatory (1634)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFundMandatory_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1634_5( I_("N") );
      return( dstrDefValue_1634_5 );
   }
   const DString& s_FldProp_SrcOfFundMandatory_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1634_5( I_("SrcOfFundMandatory") );
      return( dstrFldLabel_1634_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFundMandatory(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFundMandatory // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFundMandatory_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFundMandatory_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChkDuplicationTrade (1635)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChkDuplicationTrade_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1635_4( I_("N") );
      return( dstrDefValue_1635_4 );
   }
   const DString& s_FldProp_ChkDuplicationTrade_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1635_4( I_("ChkDuplicationTrade") );
      return( dstrFldLabel_1635_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChkDuplicationTrade(
       BFDataFieldProperties::Type::text // field is a text field
      ,ChkDuplicationTrade // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ChkDuplicationTrade_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ChkDuplicationTrade_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvAdvice (1636)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvAdvice_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1636_4( I_("N") );
      return( dstrDefValue_1636_4 );
   }
   const DString& s_FldProp_InvAdvice_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1636_4( I_("InvAdvice") );
      return( dstrFldLabel_1636_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvAdvice(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvAdvice // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvAdvice_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvAdvice_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastCycleDate (1637)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastCycleDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1637_4( I_(" ") );
      return( dstrDefValue_1637_4 );
   }
   const DString& s_FldProp_LastCycleDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1637_4( I_("LastCycleDate") );
      return( dstrFldLabel_1637_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastCycleDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,LastCycleDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LastCycleDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LastCycleDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcqFeeDefault (1638)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcqFeeDefault_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1638_5( I_("N") );
      return( dstrDefValue_1638_5 );
   }
   const DString& s_FldProp_AcqFeeDefault_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1638_5( I_("AcqFeeDefault") );
      return( dstrFldLabel_1638_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcqFeeDefault(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcqFeeDefault // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcqFeeDefault_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcqFeeDefault_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TRExclRedCodes (1639)
   //------------------------------------------------------------------
   const DString& s_FldProp_TRExclRedCodes_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1639_4( I_(" ") );
      return( dstrDefValue_1639_4 );
   }
   const DString& s_FldProp_TRExclRedCodes_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1639_4( I_("TRExclRedCodes") );
      return( dstrFldLabel_1639_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TRExclRedCodes(
       BFDataFieldProperties::Type::text // field is a text field
      ,TRExclRedCodes // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TRExclRedCodes_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TRExclRedCodes_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TIKRedCodes (1640)
   //------------------------------------------------------------------
   const DString& s_FldProp_TIKRedCodes_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1640_5( I_(" ") );
      return( dstrDefValue_1640_5 );
   }
   const DString& s_FldProp_TIKRedCodes_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1640_5( I_("TIKRedCodes") );
      return( dstrFldLabel_1640_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TIKRedCodes(
       BFDataFieldProperties::Type::text // field is a text field
      ,TIKRedCodes // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TIKRedCodes_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TIKRedCodes_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DealDateTime (1641)
   //------------------------------------------------------------------
   const DString& s_FldProp_DealDateTime_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1641_5( I_("N") );
      return( dstrDefValue_1641_5 );
   }
   const DString& s_FldProp_DealDateTime_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1641_5( I_("DealDateTime") );
      return( dstrFldLabel_1641_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DealDateTime(
       BFDataFieldProperties::Type::text // field is a text field
      ,DealDateTime // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DealDateTime_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DealDateTime_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EFTPurchFuture (1642)
   //------------------------------------------------------------------
   const DString& s_FldProp_EFTPurchFuture_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1642_4( I_("N") );
      return( dstrDefValue_1642_4 );
   }
   const DString& s_FldProp_EFTPurchFuture_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1642_4( I_("EFTPurchFuture") );
      return( dstrFldLabel_1642_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EFTPurchFuture(
       BFDataFieldProperties::Type::text // field is a text field
      ,EFTPurchFuture // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EFTPurchFuture_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EFTPurchFuture_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccountableMandatory (1643)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccountableMandatory_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1643_4( I_("N") );
      return( dstrDefValue_1643_4 );
   }
   const DString& s_FldProp_AccountableMandatory_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1643_4( I_("AccountableMandatory") );
      return( dstrFldLabel_1643_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccountableMandatory(
       BFDataFieldProperties::Type::text // field is a text field
      ,AccountableMandatory // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AccountableMandatory_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccountableMandatory_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SplitAcCode (1644)
   //------------------------------------------------------------------
   const DString& s_FldProp_SplitAcCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1644_4( I_("N") );
      return( dstrDefValue_1644_4 );
   }
   const DString& s_FldProp_SplitAcCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1644_4( I_("SplitAcCode") );
      return( dstrFldLabel_1644_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SplitAcCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,SplitAcCode // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SplitAcCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SplitAcCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GrpContribution (1645)
   //------------------------------------------------------------------
   const DString& s_FldProp_GrpContribution_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1645_8( I_("N") );
      return( dstrDefValue_1645_8 );
   }
   const DString& s_FldProp_GrpContribution_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1645_8( I_("GrpContribution") );
      return( dstrFldLabel_1645_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GrpContribution(
       BFDataFieldProperties::Type::text // field is a text field
      ,GrpContribution // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GrpContribution_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GrpContribution_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllowFractions (1646)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllowFractions_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1646_4( I_("N") );
      return( dstrDefValue_1646_4 );
   }
   const DString& s_FldProp_AllowFractions_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1646_4( I_("AllowFractions") );
      return( dstrFldLabel_1646_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllowFractions(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllowFractions // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllowFractions_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllowFractions_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SplitCommTransTypes (1647)
   //------------------------------------------------------------------
   const DString& s_FldProp_SplitCommTransTypes_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1647_5( I_(" ") );
      return( dstrDefValue_1647_5 );
   }
   const DString& s_FldProp_SplitCommTransTypes_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1647_5( I_("SplitCommTransTypes") );
      return( dstrFldLabel_1647_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SplitCommTransTypes(
       BFDataFieldProperties::Type::text // field is a text field
      ,SplitCommTransTypes // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SplitCommTransTypes_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SplitCommTransTypes_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CashReceiptTrack (1648)
   //------------------------------------------------------------------
   const DString& s_FldProp_CashReceiptTrack_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1648_4( I_("N") );
      return( dstrDefValue_1648_4 );
   }
   const DString& s_FldProp_CashReceiptTrack_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1648_4( I_("CashReceiptTrack") );
      return( dstrFldLabel_1648_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CashReceiptTrack(
       BFDataFieldProperties::Type::text // field is a text field
      ,CashReceiptTrack // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CashReceiptTrack_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CashReceiptTrack_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DepositId2 (1649)
   //------------------------------------------------------------------
   const DString& s_FldProp_DepositId2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1649_4( I_("N") );
      return( dstrDefValue_1649_4 );
   }
   const DString& s_FldProp_DepositId2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1649_4( I_("DepositId2") );
      return( dstrFldLabel_1649_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DepositId2(
       BFDataFieldProperties::Type::text // field is a text field
      ,DepositId2 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DepositId2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DepositId2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DepositIdMandatory (1650)
   //------------------------------------------------------------------
   const DString& s_FldProp_DepositIdMandatory_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1650_4( I_("N") );
      return( dstrDefValue_1650_4 );
   }
   const DString& s_FldProp_DepositIdMandatory_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1650_4( I_("DepositIdMandatory") );
      return( dstrFldLabel_1650_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DepositIdMandatory(
       BFDataFieldProperties::Type::text // field is a text field
      ,DepositIdMandatory // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DepositIdMandatory_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DepositIdMandatory_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DefaultPurchPayType (1651)
   //------------------------------------------------------------------
   const DString& s_FldProp_DefaultPurchPayType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1651_4( I_("N") );
      return( dstrDefValue_1651_4 );
   }
   const DString& s_FldProp_DefaultPurchPayType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1651_4( I_("DefaultPurchPayType") );
      return( dstrFldLabel_1651_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DefaultPurchPayType(
       BFDataFieldProperties::Type::text // field is a text field
      ,DefaultPurchPayType // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DefaultPurchPayType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DefaultPurchPayType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EFTPurchase (1652)
   //------------------------------------------------------------------
   const DString& s_FldProp_EFTPurchase_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1652_5( I_("N") );
      return( dstrDefValue_1652_5 );
   }
   const DString& s_FldProp_EFTPurchase_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1652_5( I_("EFTPurchase") );
      return( dstrFldLabel_1652_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EFTPurchase(
       BFDataFieldProperties::Type::text // field is a text field
      ,EFTPurchase // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EFTPurchase_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EFTPurchase_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SegLicenseProvList (1653)
   //------------------------------------------------------------------
   const DString& s_FldProp_SegLicenseProvList_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1653_4( I_(" ") );
      return( dstrDefValue_1653_4 );
   }
   const DString& s_FldProp_SegLicenseProvList_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1653_4( I_("SegLicenseProvList") );
      return( dstrFldLabel_1653_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SegLicenseProvList(
       BFDataFieldProperties::Type::text // field is a text field
      ,SegLicenseProvList // fieldId
      ,100 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SegLicenseProvList_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SegLicenseProvList_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DepositTypeList (1654)
   //------------------------------------------------------------------
   const DString& s_FldProp_DepositTypeList_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1654_5( I_(" ") );
      return( dstrDefValue_1654_5 );
   }
   const DString& s_FldProp_DepositTypeList_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1654_5( I_("DepositTypeList") );
      return( dstrFldLabel_1654_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DepositTypeList(
       BFDataFieldProperties::Type::text // field is a text field
      ,DepositTypeList // fieldId
      ,300 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DepositTypeList_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DepositTypeList_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RedCodeList (1655)
   //------------------------------------------------------------------
   const DString& s_FldProp_RedCodeList_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1655_5( I_(" ") );
      return( dstrDefValue_1655_5 );
   }
   const DString& s_FldProp_RedCodeList_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1655_5( I_("RedCodeList") );
      return( dstrFldLabel_1655_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RedCodeList(
       BFDataFieldProperties::Type::text // field is a text field
      ,RedCodeList // fieldId
      ,300 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RedCodeList_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RedCodeList_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CriticalAge1 (1656)
   //------------------------------------------------------------------
   const DString& s_FldProp_CriticalAge1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1656_4( I_("0") );
      return( dstrDefValue_1656_4 );
   }
   DIINT64 s_FldProp_CriticalAge1_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_CriticalAge1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1656_4( I_("CriticalAge1") );
      return( dstrFldLabel_1656_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CriticalAge1(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,CriticalAge1 // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CriticalAge1_s_DVF // default value
      ,s_FldProp_CriticalAge1_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_CriticalAge1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CriticalAge2 (1657)
   //------------------------------------------------------------------
   const DString& s_FldProp_CriticalAge2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1657_5( I_("0") );
      return( dstrDefValue_1657_5 );
   }
   DIINT64 s_FldProp_CriticalAge2_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_CriticalAge2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1657_5( I_("CriticalAge2") );
      return( dstrFldLabel_1657_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CriticalAge2(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,CriticalAge2 // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CriticalAge2_s_DVF // default value
      ,s_FldProp_CriticalAge2_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_CriticalAge2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CriticalAge3 (1658)
   //------------------------------------------------------------------
   const DString& s_FldProp_CriticalAge3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1658_4( I_("0") );
      return( dstrDefValue_1658_4 );
   }
   DIINT64 s_FldProp_CriticalAge3_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_CriticalAge3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1658_4( I_("CriticalAge2") );
      return( dstrFldLabel_1658_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CriticalAge3(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,CriticalAge3 // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CriticalAge3_s_DVF // default value
      ,s_FldProp_CriticalAge3_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_CriticalAge3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BailOutAge1 (1659)
   //------------------------------------------------------------------
   const DString& s_FldProp_BailOutAge1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1659_4( I_("0") );
      return( dstrDefValue_1659_4 );
   }
   DIINT64 s_FldProp_BailOutAge1_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_BailOutAge1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1659_4( I_("BailOutAge1") );
      return( dstrFldLabel_1659_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BailOutAge1(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,BailOutAge1 // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BailOutAge1_s_DVF // default value
      ,s_FldProp_BailOutAge1_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_BailOutAge1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BailOutAge2 (1660)
   //------------------------------------------------------------------
   const DString& s_FldProp_BailOutAge2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1660_4( I_("0") );
      return( dstrDefValue_1660_4 );
   }
   DIINT64 s_FldProp_BailOutAge2_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_BailOutAge2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1660_4( I_("BailOutAge2") );
      return( dstrFldLabel_1660_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BailOutAge2(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,BailOutAge2 // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BailOutAge2_s_DVF // default value
      ,s_FldProp_BailOutAge2_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_BailOutAge2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BailOutAge3 (1661)
   //------------------------------------------------------------------
   const DString& s_FldProp_BailOutAge3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1661_4( I_("0") );
      return( dstrDefValue_1661_4 );
   }
   DIINT64 s_FldProp_BailOutAge3_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_BailOutAge3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1661_4( I_("BailOutAge3") );
      return( dstrFldLabel_1661_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BailOutAge3(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,BailOutAge3 // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BailOutAge3_s_DVF // default value
      ,s_FldProp_BailOutAge3_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_BailOutAge3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LegalAgeCalcType (1662)
   //------------------------------------------------------------------
   const DString& s_FldProp_LegalAgeCalcType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1662_4( I_("0") );
      return( dstrDefValue_1662_4 );
   }
   DIINT64 s_FldProp_LegalAgeCalcType_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_LegalAgeCalcType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1662_4( I_("LegalAgeCalcType") );
      return( dstrFldLabel_1662_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LegalAgeCalcType(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,LegalAgeCalcType // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LegalAgeCalcType_s_DVF // default value
      ,s_FldProp_LegalAgeCalcType_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_LegalAgeCalcType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LegalMaxAge (1663)
   //------------------------------------------------------------------
   const DString& s_FldProp_LegalMaxAge_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1663_8( I_("0") );
      return( dstrDefValue_1663_8 );
   }
   DIINT64 s_FldProp_LegalMaxAge_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_LegalMaxAge_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1663_8( I_("LegalMaxAge") );
      return( dstrFldLabel_1663_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LegalMaxAge(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,LegalMaxAge // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LegalMaxAge_s_DVF // default value
      ,s_FldProp_LegalMaxAge_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_LegalMaxAge_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctableTradeDate (1664)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctableTradeDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1664_4( I_(" ") );
      return( dstrDefValue_1664_4 );
   }
   const DString& s_FldProp_AcctableTradeDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1664_4( I_("AcctableTradeDate") );
      return( dstrFldLabel_1664_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctableTradeDate(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctableTradeDate // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctableTradeDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctableTradeDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetAllocation (1665)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetAllocation_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1665_4( I_(" ") );
      return( dstrDefValue_1665_4 );
   }
   const DString& s_FldProp_NetAllocation_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1665_4( I_("NetAllocation") );
      return( dstrFldLabel_1665_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetAllocation(
       BFDataFieldProperties::Type::text // field is a text field
      ,NetAllocation // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NetAllocation_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NetAllocation_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetOrdType (1666)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetOrdType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1666_4( I_(" ") );
      return( dstrDefValue_1666_4 );
   }
   const DString& s_FldProp_NetOrdType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1666_4( I_("NetOrdType") );
      return( dstrFldLabel_1666_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetOrdType(
       BFDataFieldProperties::Type::text // field is a text field
      ,NetOrdType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NetOrdType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NetOrdType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetMultiCurrency (1667)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetMultiCurrency_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1667_5( I_(" ") );
      return( dstrDefValue_1667_5 );
   }
   const DString& s_FldProp_NetMultiCurrency_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1667_5( I_("NetMultiCurrency") );
      return( dstrFldLabel_1667_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetMultiCurrency(
       BFDataFieldProperties::Type::text // field is a text field
      ,NetMultiCurrency // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NetMultiCurrency_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NetMultiCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmountPrecision (1668)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmountPrecision_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1668_4( I_(" ") );
      return( dstrDefValue_1668_4 );
   }
   const DString& s_FldProp_AmountPrecision_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1668_4( I_("AmountPrecision") );
      return( dstrFldLabel_1668_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmountPrecision(
       BFDataFieldProperties::Type::text // field is a text field
      ,AmountPrecision // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AmountPrecision_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AmountPrecision_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcqFee (1671)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcqFee_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1671_4( I_("0") );
      return( dstrDefValue_1671_4 );
   }
   double s_FldProp_AcqFee_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcqFee_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1671_4( I_("AcqFee") );
      return( dstrFldLabel_1671_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcqFee(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcqFee // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_AcqFee_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcqFee_d_DVF // default value
      ,s_FldProp_AcqFee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcqFeeType (1672)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcqFeeType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1672_4( I_(" ") );
      return( dstrDefValue_1672_4 );
   }
   const DString& s_FldProp_AcqFeeType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1672_4( I_("AcqFeeType") );
      return( dstrFldLabel_1672_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcqFeeType(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcqFeeType // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcqFeeType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcqFeeType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxFeeActive (1673)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxFeeActive_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1673_4( I_("N") );
      return( dstrDefValue_1673_4 );
   }
   const DString& s_FldProp_MaxFeeActive_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1673_4( I_("MaxFeeActive") );
      return( dstrFldLabel_1673_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxFeeActive(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaxFeeActive // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaxFeeActive_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaxFeeActive_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxFee (1674)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxFee_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1674_5( I_("0") );
      return( dstrDefValue_1674_5 );
   }
   double s_FldProp_MaxFee_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MaxFee_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1674_5( I_("MaxFee") );
      return( dstrFldLabel_1674_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxFee(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MaxFee // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MaxFee_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MaxFee_d_DVF // default value
      ,s_FldProp_MaxFee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxFeeType (1675)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxFeeType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1675_4( I_(" ") );
      return( dstrDefValue_1675_4 );
   }
   const DString& s_FldProp_MaxFeeType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1675_4( I_("MaxFeeType") );
      return( dstrFldLabel_1675_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxFeeType(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaxFeeType // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaxFeeType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaxFeeType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxPercent (1676)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxPercent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1676_5( I_("0") );
      return( dstrDefValue_1676_5 );
   }
   double s_FldProp_MaxPercent_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MaxPercent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1676_5( I_("MaxPercent") );
      return( dstrFldLabel_1676_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxPercent(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MaxPercent // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MaxPercent_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MaxPercent_d_DVF // default value
      ,s_FldProp_MaxPercent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxFlatFundCurr (1677)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxFlatFundCurr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1677_5( I_("0") );
      return( dstrDefValue_1677_5 );
   }
   double s_FldProp_MaxFlatFundCurr_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MaxFlatFundCurr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1677_5( I_("MaxFlatFundCurr") );
      return( dstrFldLabel_1677_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxFlatFundCurr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MaxFlatFundCurr // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MaxFlatFundCurr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MaxFlatFundCurr_d_DVF // default value
      ,s_FldProp_MaxFlatFundCurr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctTradeType (1678)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctTradeType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1678_4( I_(" ") );
      return( dstrDefValue_1678_4 );
   }
   const DString& s_FldProp_AcctTradeType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1678_4( I_("AcctTradeType") );
      return( dstrFldLabel_1678_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctTradeType(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctTradeType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctTradeType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctTradeType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankInstrCombo4 (1679)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankInstrCombo4_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1679_5( I_(" ") );
      return( dstrDefValue_1679_5 );
   }
   const DString& s_FldProp_BankInstrCombo4_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1679_5( I_("BankInstrCombo4") );
      return( dstrFldLabel_1679_5 );
   }
   PBF_SSC subset_super_chooser_2_1679( const ClientLocale& locale )
   {
      return chooser_ss_002_180; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankInstrCombo4(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankInstrCombo4 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankInstrCombo4_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankInstrCombo4_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1679 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxRepeatCount (1683)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxRepeatCount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1683_3( I_("0") );
      return( dstrDefValue_1683_3 );
   }
   DIINT64 s_FldProp_MaxRepeatCount_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MaxRepeatCount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1683_3( I_("MaxRepeatCount") );
      return( dstrFldLabel_1683_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxRepeatCount(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,MaxRepeatCount // fieldId
      ,25 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaxRepeatCount_s_DVF // default value
      ,s_FldProp_MaxRepeatCount_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_MaxRepeatCount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankAcctEffective (1684)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankAcctEffective_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1684_1( I_(" ") );
      return( dstrDefValue_1684_1 );
   }
   const DString& s_FldProp_BankAcctEffective_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1684_1( I_("BankAcctEffective") );
      return( dstrFldLabel_1684_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankAcctEffective(
       BFDataFieldProperties::Type::date // field is a date field
      ,BankAcctEffective // fieldId
      ,8 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankAcctEffective_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankAcctEffective_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShouldAskForMail (1685)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShouldAskForMail_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1685_5( I_("N") );
      return( dstrDefValue_1685_5 );
   }
   const DString& s_FldProp_ShouldAskForMail_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1685_5( I_("ShouldAskForMail") );
      return( dstrFldLabel_1685_5 );
   }
   PBF_SSC subset_super_chooser_2_1685( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShouldAskForMail(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShouldAskForMail // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShouldAskForMail_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShouldAskForMail_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1685 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinTerm (1686)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinTerm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1686_7( I_("0") );
      return( dstrDefValue_1686_7 );
   }
   DIINT64 s_FldProp_MinTerm_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MinTerm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1686_7( I_("MinTerm") );
      return( dstrFldLabel_1686_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinTerm(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,MinTerm // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_26 // mask chooser function
      ,s_FldProp_MinTerm_s_DVF // default value
      ,s_FldProp_MinTerm_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_MinTerm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxTerm (1687)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxTerm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1687_4( I_("0") );
      return( dstrDefValue_1687_4 );
   }
   DIINT64 s_FldProp_MaxTerm_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MaxTerm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1687_4( I_("MaxTerm") );
      return( dstrFldLabel_1687_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxTerm(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,MaxTerm // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_MaxTerm_s_DVF // default value
      ,s_FldProp_MaxTerm_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_MaxTerm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AnnivDateType (1688)
   //------------------------------------------------------------------
   const DString& s_FldProp_AnnivDateType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1688_5( I_(" ") );
      return( dstrDefValue_1688_5 );
   }
   const DString& s_FldProp_AnnivDateType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1688_5( I_("AnnivDateType") );
      return( dstrFldLabel_1688_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AnnivDateType(
       BFDataFieldProperties::Type::text // field is a text field
      ,AnnivDateType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AnnivDateType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AnnivDateType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaturityTypeMaster (1689)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaturityTypeMaster_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1689_4( I_("0") );
      return( dstrDefValue_1689_4 );
   }
   const DString& s_FldProp_MaturityTypeMaster_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1689_4( I_("MaturityTypeMaster") );
      return( dstrFldLabel_1689_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaturityTypeMaster(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaturityTypeMaster // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaturityTypeMaster_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaturityTypeMaster_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PrevEffectiveDate (1690)
   //------------------------------------------------------------------
   const DString& s_FldProp_PrevEffectiveDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1690_3( I_("") );
      return( dstrDefValue_1690_3 );
   }
   const DString& s_FldProp_PrevEffectiveDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1690_3( I_("PrevEffectiveDate") );
      return( dstrFldLabel_1690_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PrevEffectiveDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,PrevEffectiveDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PrevEffectiveDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PrevEffectiveDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SystematicCrossField1 (1696)
   //------------------------------------------------------------------
   const DString& s_FldProp_SystematicCrossField1_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1694_3( I_("0") );
         return( dstrDefValue_1694_3 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1694_8( I_("0") );
         return( dstrDefValue_1694_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1694_7( I_("0") );
         return( dstrDefValue_1694_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1694_6( I_("0") );
         return( dstrDefValue_1694_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1694_4( I_("0") );
         return( dstrDefValue_1694_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1694_5( I_("0") );
         return( dstrDefValue_1694_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1695_3( I_("0") );
         return( dstrDefValue_1695_3 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1695_4( I_("0") );
         return( dstrDefValue_1695_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1695_5( I_("0") );
         return( dstrDefValue_1695_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1695_6( I_("0") );
         return( dstrDefValue_1695_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1695_7( I_("0") );
         return( dstrDefValue_1695_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1695_8( I_("0") );
         return( dstrDefValue_1695_8 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1696_4( I_(" ") );
         return( dstrDefValue_1696_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1696_7( I_(" ") );
         return( dstrDefValue_1696_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1696_8( I_(" ") );
         return( dstrDefValue_1696_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1696_5( I_(" ") );
         return( dstrDefValue_1696_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1696_1( I_(" ") );
         return( dstrDefValue_1696_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1696_6( I_(" ") );
         return( dstrDefValue_1696_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1696_3( I_(" ") );
         return( dstrDefValue_1696_3 );
      }
      static const DString dstrDefValue_1696_1( I_(" ") );
      return( dstrDefValue_1696_1 );
   }
   const DString& s_FldProp_SystematicCrossField1_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1694_3( I_("DSTC0131.VW") );
         return( dstrFldLabel_1694_3 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1694_8( I_("DSTC0131.VW") );
         return( dstrFldLabel_1694_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1694_7( I_("DSTC0131.VW") );
         return( dstrFldLabel_1694_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1694_6( I_("DSTC0131.VW") );
         return( dstrFldLabel_1694_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1694_4( I_("DSTC0131.VW") );
         return( dstrFldLabel_1694_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1694_5( I_("DSTC0131.VW") );
         return( dstrFldLabel_1694_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1695_3( I_("DSTC0131.REQ") );
         return( dstrFldLabel_1695_3 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1695_4( I_("DSTC0131.REQ") );
         return( dstrFldLabel_1695_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1695_5( I_("DSTC0131.REQ") );
         return( dstrFldLabel_1695_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1695_6( I_("DSTC0131.REQ") );
         return( dstrFldLabel_1695_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1695_7( I_("DSTC0131.REQ") );
         return( dstrFldLabel_1695_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1695_8( I_("DSTC0131.REQ") );
         return( dstrFldLabel_1695_8 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1696_4( I_("SystematicCrossField1") );
         return( dstrFldLabel_1696_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1696_7( I_("SystematicCrossField1") );
         return( dstrFldLabel_1696_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1696_8( I_("SystematicCrossField1") );
         return( dstrFldLabel_1696_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1696_5( I_("SystematicCrossField1") );
         return( dstrFldLabel_1696_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1696_1( I_("SystematicCrossField1") );
         return( dstrFldLabel_1696_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1696_6( I_("SystematicCrossField1") );
         return( dstrFldLabel_1696_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1696_3( I_("SystematicCrossField1") );
         return( dstrFldLabel_1696_3 );
      }
      static const DString dstrFldLabel_1696_1( I_("SystematicCrossField1") );
      return( dstrFldLabel_1696_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SystematicCrossField1(
       BFDataFieldProperties::Type::text // field is a text field
      ,SystematicCrossField1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SystematicCrossField1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SystematicCrossField1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SystematicCrossField2 (1697)
   //------------------------------------------------------------------
   const DString& s_FldProp_SystematicCrossField2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1697_4( I_(" ") );
      return( dstrDefValue_1697_4 );
   }
   const DString& s_FldProp_SystematicCrossField2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1697_4( I_("SystematicCrossField2") );
      return( dstrFldLabel_1697_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SystematicCrossField2(
       BFDataFieldProperties::Type::text // field is a text field
      ,SystematicCrossField2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SystematicCrossField2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SystematicCrossField2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_OneTimeTradeAllocHeadingSet (1698)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_OneTimeTradeAllocHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1698_4( I_("0") );
         return( dstrDefValue_1698_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1698_7( I_("") );
         return( dstrDefValue_1698_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1698_8( I_("") );
         return( dstrDefValue_1698_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1698_5( I_("") );
         return( dstrDefValue_1698_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1698_1( I_("") );
         return( dstrDefValue_1698_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1698_6( I_("0") );
         return( dstrDefValue_1698_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1698_3( I_("") );
         return( dstrDefValue_1698_3 );
      }
      static const DString dstrDefValue_1698_1( I_("") );
      return( dstrDefValue_1698_1 );
   }
   const DString& s_FldProp_LV_OneTimeTradeAllocHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1698_4( I_("LV_OneTimeTradeAllocHeadingSet") );
         return( dstrFldLabel_1698_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1698_7( I_("LV_OneTimeTradeAllocHeadingSet") );
         return( dstrFldLabel_1698_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1698_8( I_("LV_OneTimeTradeAllocHeadingSet") );
         return( dstrFldLabel_1698_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1698_5( I_("LV_OneTimeTradeAllocHeadingSet") );
         return( dstrFldLabel_1698_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1698_1( I_("LV_OneTimeTradeAllocHeadingSet") );
         return( dstrFldLabel_1698_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1698_6( I_("LV_OneTimeTradeAllocHeadingSet") );
         return( dstrFldLabel_1698_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1698_3( I_("LV_OneTimeTradeAllocHeadingSet") );
         return( dstrFldLabel_1698_3 );
      }
      static const DString dstrFldLabel_1698_1( I_("LV_OneTimeTradeAllocHeadingSet") );
      return( dstrFldLabel_1698_1 );
   }
   PBF_SSC subset_super_chooser_2_1698( const ClientLocale& locale )
   {
      return chooser_ss_002_182; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_OneTimeTradeAllocHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_OneTimeTradeAllocHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_OneTimeTradeAllocHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_OneTimeTradeAllocHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1698 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_OneTimeTradeHeadingSet (1699)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_OneTimeTradeHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1699_4( I_("0") );
         return( dstrDefValue_1699_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1699_8( I_("") );
         return( dstrDefValue_1699_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1699_7( I_("") );
         return( dstrDefValue_1699_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1699_5( I_("") );
         return( dstrDefValue_1699_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1699_3( I_("") );
         return( dstrDefValue_1699_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1699_1( I_("") );
         return( dstrDefValue_1699_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1699_6( I_("0") );
         return( dstrDefValue_1699_6 );
      }
      static const DString dstrDefValue_1699_1( I_("") );
      return( dstrDefValue_1699_1 );
   }
   const DString& s_FldProp_LV_OneTimeTradeHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1699_4( I_("LV_OneTimeTradeHeadingSet") );
         return( dstrFldLabel_1699_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1699_8( I_("LV_OneTimeTradeHeadingSet") );
         return( dstrFldLabel_1699_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1699_7( I_("LV_OneTimeTradeHeadingSet") );
         return( dstrFldLabel_1699_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1699_5( I_("LV_OneTimeTradeHeadingSet") );
         return( dstrFldLabel_1699_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1699_3( I_("LV_OneTimeTradeHeadingSet") );
         return( dstrFldLabel_1699_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1699_1( I_("LV_OneTimeTradeHeadingSet") );
         return( dstrFldLabel_1699_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1699_6( I_("LV_OneTimeTradeHeadingSet") );
         return( dstrFldLabel_1699_6 );
      }
      static const DString dstrFldLabel_1699_1( I_("LV_OneTimeTradeHeadingSet") );
      return( dstrFldLabel_1699_1 );
   }
   PBF_SSC subset_super_chooser_2_1699( const ClientLocale& locale )
   {
      return chooser_ss_002_181; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_OneTimeTradeHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_OneTimeTradeHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_OneTimeTradeHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_OneTimeTradeHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1699 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ToFundClassAllowed (1700)
   //------------------------------------------------------------------
   const DString& s_FldProp_ToFundClassAllowed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1700_5( I_(" ") );
      return( dstrDefValue_1700_5 );
   }
   const DString& s_FldProp_ToFundClassAllowed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1700_5( I_("ToFundClassAllowed") );
      return( dstrFldLabel_1700_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ToFundClassAllowed(
       BFDataFieldProperties::Type::text // field is a text field
      ,ToFundClassAllowed // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ToFundClassAllowed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ToFundClassAllowed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ATAllocationListHeading (1701)
   //------------------------------------------------------------------
   const DString& s_FldProp_ATAllocationListHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1701_4( I_(" ") );
      return( dstrDefValue_1701_4 );
   }
   const DString& s_FldProp_ATAllocationListHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1701_4( I_("ATAllocationListHeading") );
      return( dstrFldLabel_1701_4 );
   }
   PBF_SSC subset_super_chooser_2_1701( const ClientLocale& locale )
   {
      return chooser_ss_002_186; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ATAllocationListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,ATAllocationListHeading // fieldId
      ,0 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ATAllocationListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ATAllocationListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1701 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RRIFBatchTrace (1702)
   //------------------------------------------------------------------
   const DString& s_FldProp_RRIFBatchTrace_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1702_4( I_(" ") );
      return( dstrDefValue_1702_4 );
   }
   double s_FldProp_RRIFBatchTrace_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_RRIFBatchTrace_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1702_4( I_("RRIFBatchTrace") );
      return( dstrFldLabel_1702_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RRIFBatchTrace(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RRIFBatchTrace // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_RRIFBatchTrace_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RRIFBatchTrace_d_DVF // default value
      ,s_FldProp_RRIFBatchTrace_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RRIFModified (1703)
   //------------------------------------------------------------------
   const DString& s_FldProp_RRIFModified_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1703_4( I_("N") );
      return( dstrDefValue_1703_4 );
   }
   const DString& s_FldProp_RRIFModified_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1703_4( I_("RRIFModified") );
      return( dstrFldLabel_1703_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RRIFModified(
       BFDataFieldProperties::Type::text // field is a text field
      ,RRIFModified // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RRIFModified_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RRIFModified_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CallNum (1708)
   //------------------------------------------------------------------
   const DString& s_FldProp_CallNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1708_8( I_(" ") );
      return( dstrDefValue_1708_8 );
   }
   const DString& s_FldProp_CallNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1708_8( I_("CallNum") );
      return( dstrFldLabel_1708_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CallNum(
       BFDataFieldProperties::Type::text // field is a text field
      ,CallNum // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CallNum_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CallNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MandAmtYrSysCalc (1710)
   //------------------------------------------------------------------
   const DString& s_FldProp_MandAmtYrSysCalc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1710_4( I_(" ") );
      return( dstrDefValue_1710_4 );
   }
   double s_FldProp_MandAmtYrSysCalc_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_MandAmtYrSysCalc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1710_4( I_("MandAmtYrSysCalc") );
      return( dstrFldLabel_1710_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MandAmtYrSysCalc(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MandAmtYrSysCalc // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_MandAmtYrSysCalc_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MandAmtYrSysCalc_d_DVF // default value
      ,s_FldProp_MandAmtYrSysCalc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxAmtYrSysCalc (1711)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxAmtYrSysCalc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1711_4( I_(" ") );
      return( dstrDefValue_1711_4 );
   }
   double s_FldProp_MaxAmtYrSysCalc_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_MaxAmtYrSysCalc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1711_4( I_("MaxAmtYrSysCalc") );
      return( dstrFldLabel_1711_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxAmtYrSysCalc(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MaxAmtYrSysCalc // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_MaxAmtYrSysCalc_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MaxAmtYrSysCalc_d_DVF // default value
      ,s_FldProp_MaxAmtYrSysCalc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MandAmtPaySysCalc (1712)
   //------------------------------------------------------------------
   const DString& s_FldProp_MandAmtPaySysCalc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1712_5( I_(" ") );
      return( dstrDefValue_1712_5 );
   }
   double s_FldProp_MandAmtPaySysCalc_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_MandAmtPaySysCalc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1712_5( I_("MandAmtPaySysCalc") );
      return( dstrFldLabel_1712_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MandAmtPaySysCalc(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MandAmtPaySysCalc // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MandAmtPaySysCalc_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MandAmtPaySysCalc_d_DVF // default value
      ,s_FldProp_MandAmtPaySysCalc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctValue (1713)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctValue_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1713_4( I_(" ") );
      return( dstrDefValue_1713_4 );
   }
   double s_FldProp_AcctValue_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_AcctValue_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1713_4( I_("AcctValue") );
      return( dstrFldLabel_1713_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctValue(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctValue // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_AcctValue_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctValue_d_DVF // default value
      ,s_FldProp_AcctValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TotRedem (1714)
   //------------------------------------------------------------------
   const DString& s_FldProp_TotRedem_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1714_5( I_(" ") );
      return( dstrDefValue_1714_5 );
   }
   double s_FldProp_TotRedem_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_TotRedem_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1714_5( I_("TotRedem") );
      return( dstrFldLabel_1714_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TotRedem(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TotRedem // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_TotRedem_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TotRedem_d_DVF // default value
      ,s_FldProp_TotRedem_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmountSysCalc (1715)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmountSysCalc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1715_3( I_(" ") );
      return( dstrDefValue_1715_3 );
   }
   double s_FldProp_AmountSysCalc_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_AmountSysCalc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1715_3( I_("AmountSysCalc") );
      return( dstrFldLabel_1715_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmountSysCalc(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AmountSysCalc // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_AmountSysCalc_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AmountSysCalc_d_DVF // default value
      ,s_FldProp_AmountSysCalc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvRateSysCalc (1716)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvRateSysCalc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1716_4( I_(" ") );
      return( dstrDefValue_1716_4 );
   }
   double s_FldProp_ProvRateSysCalc_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ProvRateSysCalc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1716_4( I_("ProvRateSysCalc") );
      return( dstrFldLabel_1716_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvRateSysCalc(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ProvRateSysCalc // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_ProvRateSysCalc_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ProvRateSysCalc_d_DVF // default value
      ,s_FldProp_ProvRateSysCalc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FedRateSysCalc (1717)
   //------------------------------------------------------------------
   const DString& s_FldProp_FedRateSysCalc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1717_4( I_(" ") );
      return( dstrDefValue_1717_4 );
   }
   double s_FldProp_FedRateSysCalc_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FedRateSysCalc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1717_4( I_("FedRateSysCalc") );
      return( dstrFldLabel_1717_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FedRateSysCalc(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FedRateSysCalc // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_FedRateSysCalc_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FedRateSysCalc_d_DVF // default value
      ,s_FldProp_FedRateSysCalc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetAmountSysCalc (1718)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetAmountSysCalc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1718_4( I_(" ") );
      return( dstrDefValue_1718_4 );
   }
   double s_FldProp_NetAmountSysCalc_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_NetAmountSysCalc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1718_4( I_("NetAmountSysCalc") );
      return( dstrFldLabel_1718_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetAmountSysCalc(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,NetAmountSysCalc // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_NetAmountSysCalc_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_NetAmountSysCalc_d_DVF // default value
      ,s_FldProp_NetAmountSysCalc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RRIFDetlVer (1719)
   //------------------------------------------------------------------
   const DString& s_FldProp_RRIFDetlVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1719_4( I_(" ") );
      return( dstrDefValue_1719_4 );
   }
   double s_FldProp_RRIFDetlVer_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_RRIFDetlVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1719_4( I_("RRIFDetlVer") );
      return( dstrFldLabel_1719_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RRIFDetlVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RRIFDetlVer // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_RRIFDetlVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RRIFDetlVer_d_DVF // default value
      ,s_FldProp_RRIFDetlVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxAcqFeePurchase (1720)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxAcqFeePurchase_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1720_4( I_(" ") );
      return( dstrDefValue_1720_4 );
   }
   const DString& s_FldProp_MaxAcqFeePurchase_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1720_4( I_("MaxAcqFeePurchase") );
      return( dstrFldLabel_1720_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxAcqFeePurchase(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaxAcqFeePurchase // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaxAcqFeePurchase_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaxAcqFeePurchase_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxAcqFeeTransfer (1721)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxAcqFeeTransfer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1721_4( I_(" ") );
      return( dstrDefValue_1721_4 );
   }
   const DString& s_FldProp_MaxAcqFeeTransfer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1721_4( I_("MaxAcqFeeTransfer") );
      return( dstrFldLabel_1721_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxAcqFeeTransfer(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaxAcqFeeTransfer // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaxAcqFeeTransfer_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaxAcqFeeTransfer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxFeePurchase (1722)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxFeePurchase_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1722_4( I_(" ") );
      return( dstrDefValue_1722_4 );
   }
   const DString& s_FldProp_MaxFeePurchase_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1722_4( I_("MaxFeePurchase") );
      return( dstrFldLabel_1722_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxFeePurchase(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaxFeePurchase // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaxFeePurchase_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaxFeePurchase_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxFeeTransfer (1723)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxFeeTransfer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1723_8( I_(" ") );
      return( dstrDefValue_1723_8 );
   }
   const DString& s_FldProp_MaxFeeTransfer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1723_8( I_("MaxFeeTransfer") );
      return( dstrFldLabel_1723_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxFeeTransfer(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaxFeeTransfer // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaxFeeTransfer_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaxFeeTransfer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DetlEffectiveDate (1724)
   //------------------------------------------------------------------
   const DString& s_FldProp_DetlEffectiveDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1724_4( I_(" ") );
      return( dstrDefValue_1724_4 );
   }
   const DString& s_FldProp_DetlEffectiveDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1724_4( I_("Fund Detail EffectiveDate") );
      return( dstrFldLabel_1724_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DetlEffectiveDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,DetlEffectiveDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DetlEffectiveDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DetlEffectiveDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_AtAcctAllocationHeading (1725)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_AtAcctAllocationHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1725_4( I_("") );
      return( dstrDefValue_1725_4 );
   }
   const DString& s_FldProp_LV_AtAcctAllocationHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1725_4( I_("LV_AtAcctAllocationHeading") );
      return( dstrFldLabel_1725_4 );
   }
   PBF_SSC subset_super_chooser_2_1725( const ClientLocale& locale )
   {
      return chooser_ss_002_187; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_AtAcctAllocationHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_AtAcctAllocationHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_AtAcctAllocationHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_AtAcctAllocationHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1725 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradeSrcOfFund (1726)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeSrcOfFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1726_4( I_("CL") );
      return( dstrDefValue_1726_4 );
   }
   const DString& s_FldProp_TradeSrcOfFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1726_4( I_("TradeSrcOfFund") );
      return( dstrFldLabel_1726_4 );
   }
   PBF_SSC subset_super_chooser_2_1726( const ClientLocale& locale )
   {
      return chooser_ss_002_188; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeSrcOfFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeSrcOfFund // fieldId
      ,2 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeSrcOfFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeSrcOfFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1726 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StatusDeath (1727)
   //------------------------------------------------------------------
   const DString& s_FldProp_StatusDeath_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1727_5( I_("03") );
      return( dstrDefValue_1727_5 );
   }
   const DString& s_FldProp_StatusDeath_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1727_5( I_("StatusDeath") );
      return( dstrFldLabel_1727_5 );
   }
   PBF_SSC subset_super_chooser_2_1727( const ClientLocale& locale )
   {
      return chooser_ss_002_191; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StatusDeath(
       BFDataFieldProperties::Type::text // field is a text field
      ,StatusDeath // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StatusDeath_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StatusDeath_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1727 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StatusActive (1728)
   //------------------------------------------------------------------
   const DString& s_FldProp_StatusActive_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1728_4( I_("01") );
      return( dstrDefValue_1728_4 );
   }
   const DString& s_FldProp_StatusActive_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1728_4( I_("StatusActive") );
      return( dstrFldLabel_1728_4 );
   }
   PBF_SSC subset_super_chooser_2_1728( const ClientLocale& locale )
   {
      return chooser_ss_002_192; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StatusActive(
       BFDataFieldProperties::Type::text // field is a text field
      ,StatusActive // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StatusActive_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StatusActive_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1728 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StatusActiveDeath (1729)
   //------------------------------------------------------------------
   const DString& s_FldProp_StatusActiveDeath_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1729_5( I_("01") );
      return( dstrDefValue_1729_5 );
   }
   const DString& s_FldProp_StatusActiveDeath_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1729_5( I_("StatusActiveDeath") );
      return( dstrFldLabel_1729_5 );
   }
   PBF_SSC subset_super_chooser_2_1729( const ClientLocale& locale )
   {
      return chooser_ss_002_193; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StatusActiveDeath(
       BFDataFieldProperties::Type::text // field is a text field
      ,StatusActiveDeath // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StatusActiveDeath_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StatusActiveDeath_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1729 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StatusBlank (1730)
   //------------------------------------------------------------------
   const DString& s_FldProp_StatusBlank_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1730_7( I_("") );
      return( dstrDefValue_1730_7 );
   }
   const DString& s_FldProp_StatusBlank_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1730_7( I_("StatusBlank") );
      return( dstrFldLabel_1730_7 );
   }
   PBF_SSC subset_super_chooser_2_1730( const ClientLocale& locale )
   {
      return chooser_ss_002_194; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StatusBlank(
       BFDataFieldProperties::Type::text // field is a text field
      ,StatusBlank // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StatusBlank_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StatusBlank_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1730 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvinceCanada (1731)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvinceCanada_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1731_4( I_("0001") );
      return( dstrDefValue_1731_4 );
   }
   const DString& s_FldProp_ProvinceCanada_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1731_4( I_("ProvinceCanada") );
      return( dstrFldLabel_1731_4 );
   }
   PBF_SSC subset_super_chooser_2_1731( const ClientLocale& locale )
   {
      return chooser_ss_002_190; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvinceCanada(
       BFDataFieldProperties::Type::text // field is a text field
      ,ProvinceCanada // fieldId
      ,200 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ProvinceCanada_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ProvinceCanada_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1731 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FullRedem (1732)
   //------------------------------------------------------------------
   const DString& s_FldProp_FullRedem_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1732_5( I_("Y") );
      return( dstrDefValue_1732_5 );
   }
   const DString& s_FldProp_FullRedem_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1732_5( I_("FullRedem") );
      return( dstrFldLabel_1732_5 );
   }
   PBF_SSC subset_super_chooser_2_1732( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FullRedem(
       BFDataFieldProperties::Type::text // field is a text field
      ,FullRedem // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FullRedem_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FullRedem_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1732 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DSC (1735)
   //------------------------------------------------------------------
   const DString& s_FldProp_DSC_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1735_3( I_("0") );
      return( dstrDefValue_1735_3 );
   }
   double s_FldProp_DSC_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_DSC_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1735_3( I_("DSC") );
      return( dstrFldLabel_1735_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DSC(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DSC // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_DSC_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DSC_d_DVF // default value
      ,s_FldProp_DSC_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeFreeAmt (1736)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeFreeAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1736_1( I_("0") );
      return( dstrDefValue_1736_1 );
   }
   double s_FldProp_FeeFreeAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FeeFreeAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1736_1( I_("FeeFreeAmt") );
      return( dstrFldLabel_1736_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeFreeAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FeeFreeAmt // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FeeFreeAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FeeFreeAmt_d_DVF // default value
      ,s_FldProp_FeeFreeAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeFreeUnits (1737)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeFreeUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1737_5( I_("0") );
      return( dstrDefValue_1737_5 );
   }
   double s_FldProp_FeeFreeUnits_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FeeFreeUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1737_5( I_("FeeFreeUnits") );
      return( dstrFldLabel_1737_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeFreeUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FeeFreeUnits // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeFreeUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FeeFreeUnits_d_DVF // default value
      ,s_FldProp_FeeFreeUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeApplAmt (1738)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeApplAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1738_3( I_("0") );
      return( dstrDefValue_1738_3 );
   }
   double s_FldProp_FeeApplAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FeeApplAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1738_3( I_("FeeApplAmt") );
      return( dstrFldLabel_1738_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeApplAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FeeApplAmt // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FeeApplAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FeeApplAmt_d_DVF // default value
      ,s_FldProp_FeeApplAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CodeType (1740)
   //------------------------------------------------------------------
   const DString& s_FldProp_CodeType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1740_4( I_("0") );
      return( dstrDefValue_1740_4 );
   }
   const DString& s_FldProp_CodeType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1740_4( I_("CodeType") );
      return( dstrFldLabel_1740_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CodeType(
       BFDataFieldProperties::Type::text // field is a text field
      ,CodeType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CodeType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CodeType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_FundNumberCodeClassHeading (1743)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_FundNumberCodeClassHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1743_7( I_("") );
      return( dstrDefValue_1743_7 );
   }
   const DString& s_FldProp_LV_FundNumberCodeClassHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1743_7( I_("LV_FundNumberCodeClassHeading") );
      return( dstrFldLabel_1743_7 );
   }
   PBF_SSC subset_super_chooser_2_1743( const ClientLocale& locale )
   {
      return chooser_ss_002_195; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_FundNumberCodeClassHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_FundNumberCodeClassHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_FundNumberCodeClassHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_FundNumberCodeClassHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1743 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FromCurrency (1745)
   //------------------------------------------------------------------
   const DString& s_FldProp_FromCurrency_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1745_3( I_("") );
      return( dstrDefValue_1745_3 );
   }
   const DString& s_FldProp_FromCurrency_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1745_3( I_("FromCurrency") );
      return( dstrFldLabel_1745_3 );
   }
   PBF_SSC subset_super_chooser_2_1745( const ClientLocale& locale )
   {
      return chooser_ss_002_065; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FromCurrency(
       BFDataFieldProperties::Type::text // field is a text field
      ,FromCurrency // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FromCurrency_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FromCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1745 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ToCurrency (1746)
   //------------------------------------------------------------------
   const DString& s_FldProp_ToCurrency_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1746_6( I_("") );
      return( dstrDefValue_1746_6 );
   }
   const DString& s_FldProp_ToCurrency_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1746_6( I_("ToCurrency") );
      return( dstrFldLabel_1746_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ToCurrency(
       BFDataFieldProperties::Type::text // field is a text field
      ,ToCurrency // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ToCurrency_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ToCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ValidationType (1750)
   //------------------------------------------------------------------
   const DString& s_FldProp_ValidationType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1750_3( I_("") );
      return( dstrDefValue_1750_3 );
   }
   DIINT64 s_FldProp_ValidationType_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_ValidationType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1750_3( I_("ValidationType") );
      return( dstrFldLabel_1750_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ValidationType(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,ValidationType // fieldId
      ,2 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ValidationType_s_DVF // default value
      ,s_FldProp_ValidationType_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_ValidationType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradeDateFailed (1751)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeDateFailed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1751_4( I_("") );
      return( dstrDefValue_1751_4 );
   }
   const DString& s_FldProp_TradeDateFailed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1751_4( I_("TradeDateFailed") );
      return( dstrFldLabel_1751_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeDateFailed(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeDateFailed // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeDateFailed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeDateFailed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleDateFailed (1752)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleDateFailed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1752_6( I_("") );
      return( dstrDefValue_1752_6 );
   }
   const DString& s_FldProp_SettleDateFailed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1752_6( I_("SettleDateFailed") );
      return( dstrFldLabel_1752_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleDateFailed(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettleDateFailed // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettleDateFailed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettleDateFailed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EffectiveDateFailed (1753)
   //------------------------------------------------------------------
   const DString& s_FldProp_EffectiveDateFailed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1753_4( I_("") );
      return( dstrDefValue_1753_4 );
   }
   const DString& s_FldProp_EffectiveDateFailed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1753_4( I_("EffectiveDateFailed") );
      return( dstrFldLabel_1753_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EffectiveDateFailed(
       BFDataFieldProperties::Type::text // field is a text field
      ,EffectiveDateFailed // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EffectiveDateFailed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EffectiveDateFailed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxApplies (1755)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxApplies_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1755_5( I_("Y") );
      return( dstrDefValue_1755_5 );
   }
   const DString& s_FldProp_MaxApplies_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1755_5( I_("MaxApplies") );
      return( dstrFldLabel_1755_5 );
   }
   PBF_SSC subset_super_chooser_2_1755( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxApplies(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaxApplies // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaxApplies_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaxApplies_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1755 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RRIFQualified (1756)
   //------------------------------------------------------------------
   const DString& s_FldProp_RRIFQualified_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1756_4( I_("Y") );
      return( dstrDefValue_1756_4 );
   }
   const DString& s_FldProp_RRIFQualified_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1756_4( I_("RRIFQualified") );
      return( dstrFldLabel_1756_4 );
   }
   PBF_SSC subset_super_chooser_2_1756( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RRIFQualified(
       BFDataFieldProperties::Type::text // field is a text field
      ,RRIFQualified // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RRIFQualified_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RRIFQualified_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1756 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LegMinWithAge (1757)
   //------------------------------------------------------------------
   const DString& s_FldProp_LegMinWithAge_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1757_3( I_("0") );
      return( dstrDefValue_1757_3 );
   }
   DIINT64 s_FldProp_LegMinWithAge_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_LegMinWithAge_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1757_3( I_("LegMinWithAge") );
      return( dstrFldLabel_1757_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LegMinWithAge(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,LegMinWithAge // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LegMinWithAge_s_DVF // default value
      ,s_FldProp_LegMinWithAge_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_LegMinWithAge_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinAge (1758)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinAge_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1758_1( I_("0") );
      return( dstrDefValue_1758_1 );
   }
   DIINT64 s_FldProp_MinAge_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MinAge_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1758_1( I_("MinAge") );
      return( dstrFldLabel_1758_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinAge(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,MinAge // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_MinAge_s_DVF // default value
      ,s_FldProp_MinAge_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_MinAge_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxAge (1759)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxAge_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1759_6( I_("0") );
      return( dstrDefValue_1759_6 );
   }
   DIINT64 s_FldProp_MaxAge_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_MaxAge_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1759_6( I_("MaxAge") );
      return( dstrFldLabel_1759_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxAge(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,MaxAge // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_MaxAge_s_DVF // default value
      ,s_FldProp_MaxAge_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_MaxAge_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxTypeRules (1760)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxTypeRules_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1760_7( I_("Y") );
      return( dstrDefValue_1760_7 );
   }
   const DString& s_FldProp_TaxTypeRules_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1760_7( I_("TaxTypeRules") );
      return( dstrFldLabel_1760_7 );
   }
   PBF_SSC subset_super_chooser_2_1760( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxTypeRules(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxTypeRules // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxTypeRules_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxTypeRules_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1760 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DefTaxTypeRules (1761)
   //------------------------------------------------------------------
   const DString& s_FldProp_DefTaxTypeRules_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1761_4( I_("Y") );
      return( dstrDefValue_1761_4 );
   }
   const DString& s_FldProp_DefTaxTypeRules_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1761_4( I_("DefTaxTypeRules") );
      return( dstrFldLabel_1761_4 );
   }
   PBF_SSC subset_super_chooser_2_1761( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DefTaxTypeRules(
       BFDataFieldProperties::Type::text // field is a text field
      ,DefTaxTypeRules // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DefTaxTypeRules_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DefTaxTypeRules_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1761 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AMSFund (1762)
   //------------------------------------------------------------------
   const DString& s_FldProp_AMSFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1762_5( I_("Y") );
      return( dstrDefValue_1762_5 );
   }
   const DString& s_FldProp_AMSFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1762_5( I_("AMSFund") );
      return( dstrFldLabel_1762_5 );
   }
   PBF_SSC subset_super_chooser_2_1762( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AMSFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,AMSFund // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AMSFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AMSFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1762 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradeAttributesExchange (1763)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeAttributesExchange_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1763_4( I_("") );
      return( dstrDefValue_1763_4 );
   }
   const DString& s_FldProp_TradeAttributesExchange_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1763_4( I_("TradeAttributesExchange") );
      return( dstrFldLabel_1763_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeAttributesExchange(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeAttributesExchange // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeAttributesExchange_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeAttributesExchange_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeApplUnits (1764)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeApplUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1764_4( I_("0") );
      return( dstrDefValue_1764_4 );
   }
   double s_FldProp_FeeApplUnits_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FeeApplUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1764_4( I_("FeeApplUnits") );
      return( dstrFldLabel_1764_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeApplUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FeeApplUnits // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_FeeApplUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FeeApplUnits_d_DVF // default value
      ,s_FldProp_FeeApplUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TotalRedAmt (1765)
   //------------------------------------------------------------------
   const DString& s_FldProp_TotalRedAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1765_4( I_("0") );
      return( dstrDefValue_1765_4 );
   }
   double s_FldProp_TotalRedAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_TotalRedAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1765_4( I_("TotalRedAmt") );
      return( dstrFldLabel_1765_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TotalRedAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TotalRedAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_TotalRedAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TotalRedAmt_d_DVF // default value
      ,s_FldProp_TotalRedAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TotalDSC (1766)
   //------------------------------------------------------------------
   const DString& s_FldProp_TotalDSC_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1766_5( I_("0") );
      return( dstrDefValue_1766_5 );
   }
   double s_FldProp_TotalDSC_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_TotalDSC_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1766_5( I_("TotalDSC") );
      return( dstrFldLabel_1766_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TotalDSC(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TotalDSC // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_TotalDSC_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TotalDSC_d_DVF // default value
      ,s_FldProp_TotalDSC_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WithHoldTax (1767)
   //------------------------------------------------------------------
   const DString& s_FldProp_WithHoldTax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1767_4( I_("0") );
      return( dstrDefValue_1767_4 );
   }
   double s_FldProp_WithHoldTax_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_WithHoldTax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1767_4( I_("WithHoldTax") );
      return( dstrFldLabel_1767_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WithHoldTax(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,WithHoldTax // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_WithHoldTax_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_WithHoldTax_d_DVF // default value
      ,s_FldProp_WithHoldTax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocationFromFund (1768)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocationFromFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1768_5( I_("") );
      return( dstrDefValue_1768_5 );
   }
   const DString& s_FldProp_AllocationFromFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1768_5( I_("AllocationFromFund") );
      return( dstrFldLabel_1768_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocationFromFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllocationFromFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllocationFromFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllocationFromFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocationToFund (1769)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocationToFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1769_4( I_("") );
      return( dstrDefValue_1769_4 );
   }
   const DString& s_FldProp_AllocationToFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1769_4( I_("AllocationToFund") );
      return( dstrFldLabel_1769_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocationToFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllocationToFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllocationToFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllocationToFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShouldAskForDofBirth (1770)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShouldAskForDofBirth_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1770_3( I_("N") );
      return( dstrDefValue_1770_3 );
   }
   const DString& s_FldProp_ShouldAskForDofBirth_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1770_3( I_("ShouldAskForDofBirth") );
      return( dstrFldLabel_1770_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShouldAskForDofBirth(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShouldAskForDofBirth // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShouldAskForDofBirth_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShouldAskForDofBirth_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityKey (1771)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityKey_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1771_4( I_("") );
      return( dstrDefValue_1771_4 );
   }
   const DString& s_FldProp_EntityKey_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1771_4( I_("EntityKey") );
      return( dstrFldLabel_1771_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityKey(
       BFDataFieldProperties::Type::text // field is a text field
      ,EntityKey // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EntityKey_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EntityKey_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UseDateFlag (1772)
   //------------------------------------------------------------------
   const DString& s_FldProp_UseDateFlag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1772_3( I_("N") );
      return( dstrDefValue_1772_3 );
   }
   const DString& s_FldProp_UseDateFlag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1772_3( I_("UseDateFlag") );
      return( dstrFldLabel_1772_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UseDateFlag(
       BFDataFieldProperties::Type::text // field is a text field
      ,UseDateFlag // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_UseDateFlag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_UseDateFlag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FCConfig (1773)
   //------------------------------------------------------------------
   const DString& s_FldProp_FCConfig_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1773_1( I_("") );
      return( dstrDefValue_1773_1 );
   }
   const DString& s_FldProp_FCConfig_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1773_1( I_("FCConfig") );
      return( dstrFldLabel_1773_1 );
   }
   PBF_SSC subset_super_chooser_2_1773( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FCConfig(
       BFDataFieldProperties::Type::text // field is a text field
      ,FCConfig // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FCConfig_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FCConfig_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1773 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopFCrebal (1774)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopFCrebal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1774_5( I_("") );
      return( dstrDefValue_1774_5 );
   }
   const DString& s_FldProp_StopFCrebal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1774_5( I_("StopFCrebal") );
      return( dstrFldLabel_1774_5 );
   }
   PBF_SSC subset_super_chooser_2_1774( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopFCrebal(
       BFDataFieldProperties::Type::text // field is a text field
      ,StopFCrebal // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopFCrebal_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopFCrebal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1774 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FCOverrides (1775)
   //------------------------------------------------------------------
   const DString& s_FldProp_FCOverrides_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1775_7( I_("") );
      return( dstrDefValue_1775_7 );
   }
   const DString& s_FldProp_FCOverrides_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1775_7( I_("FCOverrides") );
      return( dstrFldLabel_1775_7 );
   }
   PBF_SSC subset_super_chooser_2_1775( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FCOverrides(
       BFDataFieldProperties::Type::text // field is a text field
      ,FCOverrides // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FCOverrides_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FCOverrides_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1775 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllLocked (1776)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllLocked_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1776_4( I_("") );
      return( dstrDefValue_1776_4 );
   }
   const DString& s_FldProp_AllLocked_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1776_4( I_("AllLocked") );
      return( dstrFldLabel_1776_4 );
   }
   PBF_SSC subset_super_chooser_2_1776( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllLocked(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllLocked // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllLocked_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllLocked_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1776 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctLocked (1777)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctLocked_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1777_5( I_("") );
      return( dstrDefValue_1777_5 );
   }
   const DString& s_FldProp_AcctLocked_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1777_5( I_("AcctLocked") );
      return( dstrFldLabel_1777_5 );
   }
   PBF_SSC subset_super_chooser_2_1777( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctLocked(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctLocked // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctLocked_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctLocked_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1777 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrngSweep (1778)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrngSweep_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1778_4( I_("") );
      return( dstrDefValue_1778_4 );
   }
   const DString& s_FldProp_FrngSweep_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1778_4( I_("FrngSweep") );
      return( dstrFldLabel_1778_4 );
   }
   PBF_SSC subset_super_chooser_2_1778( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrngSweep(
       BFDataFieldProperties::Type::text // field is a text field
      ,FrngSweep // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FrngSweep_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FrngSweep_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1778 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CurrChkByTaxType (1779)
   //------------------------------------------------------------------
   const DString& s_FldProp_CurrChkByTaxType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1779_4( I_("") );
      return( dstrDefValue_1779_4 );
   }
   const DString& s_FldProp_CurrChkByTaxType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1779_4( I_("CurrChkByTaxType") );
      return( dstrFldLabel_1779_4 );
   }
   PBF_SSC subset_super_chooser_2_1779( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CurrChkByTaxType(
       BFDataFieldProperties::Type::text // field is a text field
      ,CurrChkByTaxType // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CurrChkByTaxType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CurrChkByTaxType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1779 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EuroAddrFormat (1780)
   //------------------------------------------------------------------
   const DString& s_FldProp_EuroAddrFormat_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1780_4( I_("") );
      return( dstrDefValue_1780_4 );
   }
   const DString& s_FldProp_EuroAddrFormat_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1780_4( I_("EuroAddrFormat") );
      return( dstrFldLabel_1780_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EuroAddrFormat(
       BFDataFieldProperties::Type::text // field is a text field
      ,EuroAddrFormat // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EuroAddrFormat_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EuroAddrFormat_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvalidCurr (1781)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvalidCurr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1781_5( I_("") );
      return( dstrDefValue_1781_5 );
   }
   const DString& s_FldProp_InvalidCurr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1781_5( I_("InvalidCurr") );
      return( dstrFldLabel_1781_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvalidCurr(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvalidCurr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvalidCurr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvalidCurr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxTypeByCurrChk (1782)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxTypeByCurrChk_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1782_4( I_("") );
      return( dstrDefValue_1782_4 );
   }
   const DString& s_FldProp_TaxTypeByCurrChk_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1782_4( I_("TaxTypeByCurrChk") );
      return( dstrFldLabel_1782_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxTypeByCurrChk(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxTypeByCurrChk // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxTypeByCurrChk_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxTypeByCurrChk_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RRIFPrevYear (1783)
   //------------------------------------------------------------------
   const DString& s_FldProp_RRIFPrevYear_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1783_4( I_("") );
      return( dstrDefValue_1783_4 );
   }
   const DString& s_FldProp_RRIFPrevYear_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1783_4( I_("RRIFPrevYear") );
      return( dstrFldLabel_1783_4 );
   }
   PBF_SSC subset_super_chooser_2_1783( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RRIFPrevYear(
       BFDataFieldProperties::Type::text // field is a text field
      ,RRIFPrevYear // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RRIFPrevYear_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RRIFPrevYear_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1783 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RRIFOrPayment (1784)
   //------------------------------------------------------------------
   const DString& s_FldProp_RRIFOrPayment_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1784_4( I_("") );
      return( dstrDefValue_1784_4 );
   }
   const DString& s_FldProp_RRIFOrPayment_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1784_4( I_("RRIFOrPayment") );
      return( dstrFldLabel_1784_4 );
   }
   PBF_SSC subset_super_chooser_2_1784( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RRIFOrPayment(
       BFDataFieldProperties::Type::text // field is a text field
      ,RRIFOrPayment // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RRIFOrPayment_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RRIFOrPayment_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1784 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RRIFValidation (1785)
   //------------------------------------------------------------------
   const DString& s_FldProp_RRIFValidation_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1785_4( I_("") );
      return( dstrDefValue_1785_4 );
   }
   const DString& s_FldProp_RRIFValidation_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1785_4( I_("RRIFValidation") );
      return( dstrFldLabel_1785_4 );
   }
   PBF_SSC subset_super_chooser_2_1785( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RRIFValidation(
       BFDataFieldProperties::Type::text // field is a text field
      ,RRIFValidation // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RRIFValidation_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RRIFValidation_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1785 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundAllocLimit (1786)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundAllocLimit_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1786_4( I_("") );
      return( dstrDefValue_1786_4 );
   }
   DIINT64 s_FldProp_FundAllocLimit_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FundAllocLimit_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1786_4( I_("FundAllocLimit") );
      return( dstrFldLabel_1786_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundAllocLimit(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,FundAllocLimit // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_FundAllocLimit_s_DVF // default value
      ,s_FldProp_FundAllocLimit_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_FundAllocLimit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AMSOrder (1787)
   //------------------------------------------------------------------
   const DString& s_FldProp_AMSOrder_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1787_4( I_("") );
      return( dstrDefValue_1787_4 );
   }
   const DString& s_FldProp_AMSOrder_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1787_4( I_("AMSOrder") );
      return( dstrFldLabel_1787_4 );
   }
   PBF_SSC subset_super_chooser_2_1787( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AMSOrder(
       BFDataFieldProperties::Type::text // field is a text field
      ,AMSOrder // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AMSOrder_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AMSOrder_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1787 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DefSetlCurrency (1788)
   //------------------------------------------------------------------
   const DString& s_FldProp_DefSetlCurrency_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1788_4( I_("") );
      return( dstrDefValue_1788_4 );
   }
   const DString& s_FldProp_DefSetlCurrency_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1788_4( I_("DefSetlCurrency") );
      return( dstrFldLabel_1788_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DefSetlCurrency(
       BFDataFieldProperties::Type::text // field is a text field
      ,DefSetlCurrency // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DefSetlCurrency_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DefSetlCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PrevBusDate (1789)
   //------------------------------------------------------------------
   const DString& s_FldProp_PrevBusDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1789_3( I_("") );
      return( dstrDefValue_1789_3 );
   }
   const DString& s_FldProp_PrevBusDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1789_3( I_("PrevBusDate") );
      return( dstrFldLabel_1789_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PrevBusDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,PrevBusDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PrevBusDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PrevBusDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnitsPrecision (1790)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnitsPrecision_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1790_4( I_("") );
      return( dstrDefValue_1790_4 );
   }
   double s_FldProp_UnitsPrecision_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_UnitsPrecision_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1790_4( I_("UnitsPrecision") );
      return( dstrFldLabel_1790_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnitsPrecision(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnitsPrecision // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_26 // mask chooser function
      ,s_FldProp_UnitsPrecision_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnitsPrecision_d_DVF // default value
      ,s_FldProp_UnitsPrecision_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SegClient (1791)
   //------------------------------------------------------------------
   const DString& s_FldProp_SegClient_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1791_4( I_("") );
      return( dstrDefValue_1791_4 );
   }
   const DString& s_FldProp_SegClient_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1791_4( I_("SegClient") );
      return( dstrFldLabel_1791_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SegClient(
       BFDataFieldProperties::Type::text // field is a text field
      ,SegClient // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SegClient_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SegClient_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CotClient (1792)
   //------------------------------------------------------------------
   const DString& s_FldProp_CotClient_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1792_4( I_("") );
      return( dstrDefValue_1792_4 );
   }
   const DString& s_FldProp_CotClient_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1792_4( I_("CotClient") );
      return( dstrFldLabel_1792_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CotClient(
       BFDataFieldProperties::Type::text // field is a text field
      ,CotClient // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CotClient_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CotClient_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ResClient (1793)
   //------------------------------------------------------------------
   const DString& s_FldProp_ResClient_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1793_4( I_("") );
      return( dstrDefValue_1793_4 );
   }
   const DString& s_FldProp_ResClient_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1793_4( I_("ResClient") );
      return( dstrFldLabel_1793_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ResClient(
       BFDataFieldProperties::Type::text // field is a text field
      ,ResClient // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ResClient_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ResClient_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LipClient (1794)
   //------------------------------------------------------------------
   const DString& s_FldProp_LipClient_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1794_4( I_("") );
      return( dstrDefValue_1794_4 );
   }
   const DString& s_FldProp_LipClient_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1794_4( I_("LipClient ") );
      return( dstrFldLabel_1794_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LipClient(
       BFDataFieldProperties::Type::text // field is a text field
      ,LipClient // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LipClient_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LipClient_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NewBusiness (1795)
   //------------------------------------------------------------------
   const DString& s_FldProp_NewBusiness_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1795_4( I_("") );
      return( dstrDefValue_1795_4 );
   }
   const DString& s_FldProp_NewBusiness_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1795_4( I_("NewBusiness ") );
      return( dstrFldLabel_1795_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NewBusiness(
       BFDataFieldProperties::Type::text // field is a text field
      ,NewBusiness // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NewBusiness_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NewBusiness_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmountTypeExchange (1797)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmountTypeExchange_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1797_5( I_("D") );
      return( dstrDefValue_1797_5 );
   }
   const DString& s_FldProp_AmountTypeExchange_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1797_5( I_("AmountTypeExchange") );
      return( dstrFldLabel_1797_5 );
   }
   PBF_SSC subset_super_chooser_2_1797( const ClientLocale& locale )
   {
      return chooser_ss_002_197; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmountTypeExchange(
       BFDataFieldProperties::Type::text // field is a text field
      ,AmountTypeExchange // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AmountTypeExchange_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AmountTypeExchange_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1797 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Cautions (1798)
   //------------------------------------------------------------------
   const DString& s_FldProp_Cautions_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1798_4( I_("") );
      return( dstrDefValue_1798_4 );
   }
   const DString& s_FldProp_Cautions_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1798_4( I_("Cautions") );
      return( dstrFldLabel_1798_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Cautions(
       BFDataFieldProperties::Type::text // field is a text field
      ,Cautions // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Cautions_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Cautions_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CalcFedProvTax (1799)
   //------------------------------------------------------------------
   const DString& s_FldProp_CalcFedProvTax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1799_4( I_("N") );
      return( dstrDefValue_1799_4 );
   }
   const DString& s_FldProp_CalcFedProvTax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1799_4( I_("CalcFedProvTax") );
      return( dstrFldLabel_1799_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CalcFedProvTax(
       BFDataFieldProperties::Type::text // field is a text field
      ,CalcFedProvTax // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CalcFedProvTax_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CalcFedProvTax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );
}
