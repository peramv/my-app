// BFDataImpl implementation file for DataSet DSTC0412.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0412_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0412_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0412_VWRepeat_Record() { return new dsi_DSTC0412_VWRepeat_Record; }

dsi_DSTC0412_VWRepeat_Record::dsi_DSTC0412_VWRepeat_Record()
: BFDataImpl( 40006292 )
, GuardOptCurrent_( ifds::GuardOptCurrent, &ifds::s_FldProp_GuardOptCurrent )
, GuardOptAfter_( ifds::GuardOptAfter, &ifds::s_FldProp_GuardOptAfter )
, DeffUntil_( ifds::DeffUntil, &ifds::s_FldProp_DeffUntil )
, GBCD_( ifds::GBCD, &ifds::s_FldProp_GBCD )
, SEGGuarGuardID_( ifds::SEGGuarGuardID, &ifds::s_FldProp_SEGGuarGuardID )
, CreatedBy_( ifds::CreatedBy, &ifds::s_FldProp_CreatedBy )
, CreatedOn_( ifds::CreatedOn, &ifds::s_FldProp_CreatedOn )
, ModDate_( ifds::ModDate, &ifds::s_FldProp_ModDate )
, ModUser_( ifds::ModUser, &ifds::s_FldProp_ModUser )
{
   cFields_ = 9;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0412_VWRepeat_Record::~dsi_DSTC0412_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0412_VWRepeat_Record::clone()
{
   dsi_DSTC0412_VWRepeat_Record* p = new dsi_DSTC0412_VWRepeat_Record;
   p->GuardOptCurrent_ = GuardOptCurrent_;
   p->GuardOptAfter_ = GuardOptAfter_;
   p->DeffUntil_ = DeffUntil_;
   p->GBCD_ = GBCD_;
   p->SEGGuarGuardID_ = SEGGuarGuardID_;
   p->CreatedBy_ = CreatedBy_;
   p->CreatedOn_ = CreatedOn_;
   p->ModDate_ = ModDate_;
   p->ModUser_ = ModUser_;
   return(p);
}

BFDataField* dsi_DSTC0412_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40006293: return ( &GuardOptCurrent_ ); break; // GuardOptCurrent
      case 40006294: return ( &GuardOptAfter_ ); break; // GuardOptAfter
      case 40006295: return ( &DeffUntil_ ); break; // DeffUntil
      case 40001901: return ( &GBCD_ ); break; // GBCD
      case 40006296: return ( &SEGGuarGuardID_ ); break; // SEGGuarGuardID
      case 40000225: return ( &CreatedBy_ ); break; // CreatedBy
      case 40000224: return ( &CreatedOn_ ); break; // CreatedOn
      case 40000217: return ( &ModDate_ ); break; // ModDate
      case 40000218: return ( &ModUser_ ); break; // ModUser
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0412_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0412_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0412_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 9 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &GuardOptCurrent_; break;
            case 1: aFlds_[1] = &GuardOptAfter_; break;
            case 2: aFlds_[2] = &DeffUntil_; break;
            case 3: aFlds_[3] = &GBCD_; break;
            case 4: aFlds_[4] = &SEGGuarGuardID_; break;
            case 5: aFlds_[5] = &CreatedBy_; break;
            case 6: aFlds_[6] = &CreatedOn_; break;
            case 7: aFlds_[7] = &ModDate_; break;
            case 8: aFlds_[8] = &ModUser_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0412_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0412_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0412_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 60 );
}

unsigned long dsi_DSTC0412_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 286 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0412_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0412_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0412_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40006293: return( true );
      case 40006294: return( true );
      case 40006295: return( true );
      case 40001901: return( true );
      case 40006296: return( true );
      case 40000225: return( true );
      case 40000224: return( true );
      case 40000217: return( true );
      case 40000218: return( true );
   }
   return false;
}

