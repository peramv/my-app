// BFDataImpl implementation file for DataSet DSTC0402.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0402_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0402_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0402_VWRepeat_Record() { return new dsi_DSTC0402_VWRepeat_Record; }

dsi_DSTC0402_VWRepeat_Record::dsi_DSTC0402_VWRepeat_Record()
: BFDataImpl( 40006104 )
, RESPBenefId_( ifds::RESPBenefId, &ifds::s_FldProp_RESPBenefId )
, RESPAllocAmt_( ifds::RESPAllocAmt, &ifds::s_FldProp_RESPAllocAmt )
, RESPAllocPrcnt_( ifds::RESPAllocPrcnt, &ifds::s_FldProp_RESPAllocPrcnt )
, BenefDofB_( ifds::BenefDofB, &ifds::s_FldProp_BenefDofB )
, HRDCRelateCode_( ifds::HRDCRelateCode, &ifds::s_FldProp_HRDCRelateCode )
, EffectiveDate_( ifds::EffectiveDate, &ifds::s_FldProp_EffectiveDate )
, TaxJuris_( ifds::TaxJuris, &ifds::s_FldProp_TaxJuris )
, RESPContrDetlVer_( ifds::RESPContrDetlVer, &ifds::s_FldProp_RESPContrDetlVer )
, PendGrantExists_( ifds::PendGrantExists, &ifds::s_FldProp_PendGrantExists )
, ProcGrantExists_( ifds::ProcGrantExists, &ifds::s_FldProp_ProcGrantExists )
, GrantTransNumList_( ifds::GrantTransNumList, &ifds::s_FldProp_GrantTransNumList )
, ReAllocated_( ifds::ReAllocated, &ifds::s_FldProp_ReAllocated )
, HRDCReported_( ifds::HRDCReported, &ifds::s_FldProp_HRDCReported )
{
   cFields_ = 13;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0402_VWRepeat_Record::~dsi_DSTC0402_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0402_VWRepeat_Record::clone()
{
   dsi_DSTC0402_VWRepeat_Record* p = new dsi_DSTC0402_VWRepeat_Record;
   p->RESPBenefId_ = RESPBenefId_;
   p->RESPAllocAmt_ = RESPAllocAmt_;
   p->RESPAllocPrcnt_ = RESPAllocPrcnt_;
   p->BenefDofB_ = BenefDofB_;
   p->HRDCRelateCode_ = HRDCRelateCode_;
   p->EffectiveDate_ = EffectiveDate_;
   p->TaxJuris_ = TaxJuris_;
   p->RESPContrDetlVer_ = RESPContrDetlVer_;
   p->PendGrantExists_ = PendGrantExists_;
   p->ProcGrantExists_ = ProcGrantExists_;
   p->GrantTransNumList_ = GrantTransNumList_;
   p->ReAllocated_ = ReAllocated_;
   p->HRDCReported_ = HRDCReported_;
   return(p);
}

BFDataField* dsi_DSTC0402_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40006114: return ( &RESPBenefId_ ); break; // RESPBenefId
      case 40006115: return ( &RESPAllocAmt_ ); break; // RESPAllocAmt
      case 40006116: return ( &RESPAllocPrcnt_ ); break; // RESPAllocPrcnt
      case 40006120: return ( &BenefDofB_ ); break; // BenefDofB
      case 40001057: return ( &HRDCRelateCode_ ); break; // HRDCRelateCode
      case 40000327: return ( &EffectiveDate_ ); break; // EffectiveDate
      case 40004447: return ( &TaxJuris_ ); break; // TaxJuris
      case 40006117: return ( &RESPContrDetlVer_ ); break; // RESPContrDetlVer
      case 40006121: return ( &PendGrantExists_ ); break; // PendGrantExists
      case 40006122: return ( &ProcGrantExists_ ); break; // ProcGrantExists
      case 40006146: return ( &GrantTransNumList_ ); break; // GrantTransNumList
      case 40006151: return ( &ReAllocated_ ); break; // ReAllocated
      case 40001520: return ( &HRDCReported_ ); break; // HRDCReported
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0402_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0402_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0402_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 13 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &RESPBenefId_; break;
            case 1: aFlds_[1] = &RESPAllocAmt_; break;
            case 2: aFlds_[2] = &RESPAllocPrcnt_; break;
            case 3: aFlds_[3] = &BenefDofB_; break;
            case 4: aFlds_[4] = &HRDCRelateCode_; break;
            case 5: aFlds_[5] = &EffectiveDate_; break;
            case 6: aFlds_[6] = &TaxJuris_; break;
            case 7: aFlds_[7] = &RESPContrDetlVer_; break;
            case 8: aFlds_[8] = &PendGrantExists_; break;
            case 9: aFlds_[9] = &ProcGrantExists_; break;
            case 10: aFlds_[10] = &GrantTransNumList_; break;
            case 11: aFlds_[11] = &ReAllocated_; break;
            case 12: aFlds_[12] = &HRDCReported_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0402_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0402_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0402_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 60 );
}

unsigned long dsi_DSTC0402_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 306 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0402_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0402_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0402_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40006114: return( true );
      case 40006115: return( true );
      case 40006116: return( true );
      case 40006120: return( true );
      case 40001057: return( true );
      case 40000327: return( true );
      case 40004447: return( true );
      case 40006117: return( true );
      case 40006121: return( true );
      case 40006122: return( true );
      case 40006146: return( true );
      case 40006151: return( true );
      case 40001520: return( true );
   }
   return false;
}

