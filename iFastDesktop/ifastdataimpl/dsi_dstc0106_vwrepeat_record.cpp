// BFDataImpl implementation file for DataSet DSTC0106.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0106_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0106_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0106_VWRepeat_Record() { return new dsi_DSTC0106_VWRepeat_Record; }

dsi_DSTC0106_VWRepeat_Record::dsi_DSTC0106_VWRepeat_Record()
: BFDataImpl( 40001437 )
, TransactionId_( ifds::TransactionId, &ifds::s_FldProp_TransactionId )
, TransType_( ifds::TransType, &ifds::s_FldProp_TransType )
, TransTypeDesc_( ifds::TransTypeDesc, &ifds::s_FldProp_TransTypeDesc )
, TradeDate_( ifds::TradeDate, &ifds::s_FldProp_TradeDate )
, FundCode_( ifds::FundCode, &ifds::s_FldProp_FundCode )
, ClassCode_( ifds::ClassCode, &ifds::s_FldProp_ClassCode )
, AmountInUnit_( ifds::AmountInUnit, &ifds::s_FldProp_AmountInUnit )
, GuarAmount_( ifds::GuarAmount, &ifds::s_FldProp_GuarAmount )
, MaturityDate_( ifds::MaturityDate, &ifds::s_FldProp_MaturityDate )
, GuarAmtAtMatur_( ifds::GuarAmtAtMatur, &ifds::s_FldProp_GuarAmtAtMatur )
, Baycom_( ifds::Baycom, &ifds::s_FldProp_Baycom )
, GuarRecId_( ifds::GuarRecId, &ifds::s_FldProp_GuarRecId )
, SegGuarMatRecId_( ifds::SegGuarMatRecId, &ifds::s_FldProp_SegGuarMatRecId )
{
   cFields_ = 13;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0106_VWRepeat_Record::~dsi_DSTC0106_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0106_VWRepeat_Record::clone()
{
   dsi_DSTC0106_VWRepeat_Record* p = new dsi_DSTC0106_VWRepeat_Record;
   p->TransactionId_ = TransactionId_;
   p->TransType_ = TransType_;
   p->TransTypeDesc_ = TransTypeDesc_;
   p->TradeDate_ = TradeDate_;
   p->FundCode_ = FundCode_;
   p->ClassCode_ = ClassCode_;
   p->AmountInUnit_ = AmountInUnit_;
   p->GuarAmount_ = GuarAmount_;
   p->MaturityDate_ = MaturityDate_;
   p->GuarAmtAtMatur_ = GuarAmtAtMatur_;
   p->Baycom_ = Baycom_;
   p->GuarRecId_ = GuarRecId_;
   p->SegGuarMatRecId_ = SegGuarMatRecId_;
   return(p);
}

BFDataField* dsi_DSTC0106_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40001446: return ( &TransactionId_ ); break; // TransactionId
      case 40000095: return ( &TransType_ ); break; // TransType
      case 40000337: return ( &TransTypeDesc_ ); break; // TransTypeDesc
      case 40000097: return ( &TradeDate_ ); break; // TradeDate
      case 40000049: return ( &FundCode_ ); break; // FundCode
      case 40000050: return ( &ClassCode_ ); break; // ClassCode
      case 40001445: return ( &AmountInUnit_ ); break; // AmountInUnit
      case 40001421: return ( &GuarAmount_ ); break; // GuarAmount
      case 40000679: return ( &MaturityDate_ ); break; // MaturityDate
      case 40001422: return ( &GuarAmtAtMatur_ ); break; // GuarAmtAtMatur
      case 40000958: return ( &Baycom_ ); break; // Baycom
      case 40005253: return ( &GuarRecId_ ); break; // GuarRecId
      case 40005252: return ( &SegGuarMatRecId_ ); break; // SegGuarMatRecId
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0106_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0106_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0106_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 13 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &TransactionId_; break;
            case 1: aFlds_[1] = &TransType_; break;
            case 2: aFlds_[2] = &TransTypeDesc_; break;
            case 3: aFlds_[3] = &TradeDate_; break;
            case 4: aFlds_[4] = &FundCode_; break;
            case 5: aFlds_[5] = &ClassCode_; break;
            case 6: aFlds_[6] = &AmountInUnit_; break;
            case 7: aFlds_[7] = &GuarAmount_; break;
            case 8: aFlds_[8] = &MaturityDate_; break;
            case 9: aFlds_[9] = &GuarAmtAtMatur_; break;
            case 10: aFlds_[10] = &Baycom_; break;
            case 11: aFlds_[11] = &GuarRecId_; break;
            case 12: aFlds_[12] = &SegGuarMatRecId_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0106_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0106_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0106_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 200 );
}

unsigned long dsi_DSTC0106_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 673 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0106_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0106_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0106_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40001446: return( true );
      case 40000095: return( true );
      case 40000337: return( true );
      case 40000097: return( true );
      case 40000049: return( true );
      case 40000050: return( true );
      case 40001445: return( true );
      case 40001421: return( true );
      case 40000679: return( true );
      case 40001422: return( true );
      case 40000958: return( true );
      case 40005253: return( true );
      case 40005252: return( true );
   }
   return false;
}

