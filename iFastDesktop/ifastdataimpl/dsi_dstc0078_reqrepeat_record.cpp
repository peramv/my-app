// BFDataImpl implementation file for DataSet DSTC0078.REQRepeat_Record
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Thursday, October 01, 2015 12:20:28


#include "stdafx.h"
#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0078_reqrepeat_record.h"


// This function creates an instance of dsi_DSTC0078_REQRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0078_REQRepeat_Record() { return new dsi_DSTC0078_REQRepeat_Record; }

dsi_DSTC0078_REQRepeat_Record::dsi_DSTC0078_REQRepeat_Record()
: BFDataImpl( 40001018 )
, RunMode_( ifds::RunMode, &ifds::s_FldProp_RunMode )
, EntityId_( ifds::EntityId, &ifds::s_FldProp_EntityId )
, EffectiveDate_( ifds::EffectiveDate, &ifds::s_FldProp_EffectiveDate )
, Salutation_( ifds::Salutation, &ifds::s_FldProp_Salutation )
, LastName_( ifds::LastName, &ifds::s_FldProp_LastName )
, FirstName_( ifds::FirstName, &ifds::s_FldProp_FirstName )
, BirthLastName_( ifds::BirthLastName, &ifds::s_FldProp_BirthLastName )
, BirthFirstName_( ifds::BirthFirstName, &ifds::s_FldProp_BirthFirstName )
, Gender_( ifds::Gender, &ifds::s_FldProp_Gender )
, DofBirth_( ifds::DofBirth, &ifds::s_FldProp_DofBirth )
, SIN_( ifds::SIN, &ifds::s_FldProp_SIN )
, OccupationCode_( ifds::OccupationCode, &ifds::s_FldProp_OccupationCode )
, LanguageCode_( ifds::LanguageCode, &ifds::s_FldProp_LanguageCode )
, HomePhone_( ifds::HomePhone, &ifds::s_FldProp_HomePhone )
, HomeFax_( ifds::HomeFax, &ifds::s_FldProp_HomeFax )
, BusinessPhone_( ifds::BusinessPhone, &ifds::s_FldProp_BusinessPhone )
, BusinessExt_( ifds::BusinessExt, &ifds::s_FldProp_BusinessExt )
, BusinessFax_( ifds::BusinessFax, &ifds::s_FldProp_BusinessFax )
, Telex_( ifds::Telex, &ifds::s_FldProp_Telex )
, Email_( ifds::Email, &ifds::s_FldProp_Email )
, DofDeath_( ifds::DofDeath, &ifds::s_FldProp_DofDeath )
, DofDeathNotice_( ifds::DofDeathNotice, &ifds::s_FldProp_DofDeathNotice )
, EntityIdentityVer_( ifds::EntityIdentityVer, &ifds::s_FldProp_EntityIdentityVer )
, EntityIdentityRid_( ifds::EntityIdentityRid, &ifds::s_FldProp_EntityIdentityRid )
, HomePhoneCntry_( ifds::HomePhoneCntry, &ifds::s_FldProp_HomePhoneCntry )
, HomePhoneArea_( ifds::HomePhoneArea, &ifds::s_FldProp_HomePhoneArea )
, BusinessPhoneCntry_( ifds::BusinessPhoneCntry, &ifds::s_FldProp_BusinessPhoneCntry )
, BusinessPhoneArea_( ifds::BusinessPhoneArea, &ifds::s_FldProp_BusinessPhoneArea )
, HomeFaxCntry_( ifds::HomeFaxCntry, &ifds::s_FldProp_HomeFaxCntry )
, HomeFaxArea_( ifds::HomeFaxArea, &ifds::s_FldProp_HomeFaxArea )
, BusFaxCntry_( ifds::BusFaxCntry, &ifds::s_FldProp_BusFaxCntry )
, BusFaxArea_( ifds::BusFaxArea, &ifds::s_FldProp_BusFaxArea )
, EmployeeClass_( ifds::EmployeeClass, &ifds::s_FldProp_EmployeeClass )
, Nationality_( ifds::Nationality, &ifds::s_FldProp_Nationality )
, OtherOccupation_( ifds::OtherOccupation, &ifds::s_FldProp_OtherOccupation )
, SpouseEntityID_( ifds::SpouseEntityID, &ifds::s_FldProp_SpouseEntityID )
, BirthPlace_( ifds::BirthPlace, &ifds::s_FldProp_BirthPlace )
, RiskLevel_( ifds::RiskLevel, &ifds::s_FldProp_RiskLevel )
, TaxJurisDeff_( ifds::TaxJurisDeff, &ifds::s_FldProp_TaxJurisDeff )
, TaxJuris_( ifds::TaxJuris, &ifds::s_FldProp_TaxJuris )
, EUSDTaxOption_( ifds::EUSDTaxOption, &ifds::s_FldProp_EUSDTaxOption )
, UpdShrTaxJuris_( ifds::UpdShrTaxJuris, &ifds::s_FldProp_UpdShrTaxJuris )
, CountryOfBirth_( ifds::CountryOfBirth, &ifds::s_FldProp_CountryOfBirth )
, ContactName_( ifds::ContactName, &ifds::s_FldProp_ContactName )
, Email2_( ifds::Email2, &ifds::s_FldProp_Email2 )
, SecondPhoneNum_( ifds::SecondPhoneNum, &ifds::s_FldProp_SecondPhoneNum )
, SecondPhoneNumExt_( ifds::SecondPhoneNumExt, &ifds::s_FldProp_SecondPhoneNumExt )
, FATCAFFI_( ifds::FATCAFFI, &ifds::s_FldProp_FATCAFFI )
, CountryOfExposure_( ifds::CountryOfExposure, &ifds::s_FldProp_CountryOfExposure )
{
    cFields_ = 49;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0078_REQRepeat_Record::~dsi_DSTC0078_REQRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0078_REQRepeat_Record::clone()
{
   dsi_DSTC0078_REQRepeat_Record* p = new dsi_DSTC0078_REQRepeat_Record;
   p->RunMode_ = RunMode_;
   p->EntityId_ = EntityId_;
   p->EffectiveDate_ = EffectiveDate_;
   p->Salutation_ = Salutation_;
   p->LastName_ = LastName_;
   p->FirstName_ = FirstName_;
   p->BirthLastName_ = BirthLastName_;
   p->BirthFirstName_ = BirthFirstName_;
   p->Gender_ = Gender_;
   p->DofBirth_ = DofBirth_;
   p->SIN_ = SIN_;
   p->OccupationCode_ = OccupationCode_;
   p->LanguageCode_ = LanguageCode_;
   p->HomePhone_ = HomePhone_;
   p->HomeFax_ = HomeFax_;
   p->BusinessPhone_ = BusinessPhone_;
   p->BusinessExt_ = BusinessExt_;
   p->BusinessFax_ = BusinessFax_;
   p->Telex_ = Telex_;
   p->Email_ = Email_;
   p->DofDeath_ = DofDeath_;
   p->DofDeathNotice_ = DofDeathNotice_;
   p->EntityIdentityVer_ = EntityIdentityVer_;
   p->EntityIdentityRid_ = EntityIdentityRid_;
   p->HomePhoneCntry_ = HomePhoneCntry_;
   p->HomePhoneArea_ = HomePhoneArea_;
   p->BusinessPhoneCntry_ = BusinessPhoneCntry_;
   p->BusinessPhoneArea_ = BusinessPhoneArea_;
   p->HomeFaxCntry_ = HomeFaxCntry_;
   p->HomeFaxArea_ = HomeFaxArea_;
   p->BusFaxCntry_ = BusFaxCntry_;
   p->BusFaxArea_ = BusFaxArea_;
   p->EmployeeClass_ = EmployeeClass_;
   p->Nationality_ = Nationality_;
   p->OtherOccupation_ = OtherOccupation_;
   p->SpouseEntityID_ = SpouseEntityID_;
   p->BirthPlace_ = BirthPlace_;
   p->RiskLevel_ = RiskLevel_;
   p->TaxJurisDeff_ = TaxJurisDeff_;
   p->TaxJuris_ = TaxJuris_;
   p->EUSDTaxOption_ = EUSDTaxOption_;
   p->UpdShrTaxJuris_ = UpdShrTaxJuris_;
   p->CountryOfBirth_ = CountryOfBirth_;
   p->ContactName_ = ContactName_;
   p->Email2_ = Email2_;
   p->SecondPhoneNum_ = SecondPhoneNum_;
   p->SecondPhoneNumExt_ = SecondPhoneNumExt_;
   p->FATCAFFI_ = FATCAFFI_;
    p->CountryOfExposure_ = CountryOfExposure_;
   return(p);
}

BFDataField* dsi_DSTC0078_REQRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40000990: return ( &RunMode_ ); break; // RunMode
      case 40000033: return ( &EntityId_ ); break; // EntityId
      case 40000327: return ( &EffectiveDate_ ); break; // EffectiveDate
      case 40000416: return ( &Salutation_ ); break; // Salutation
      case 40000128: return ( &LastName_ ); break; // LastName
      case 40000129: return ( &FirstName_ ); break; // FirstName
      case 40000130: return ( &BirthLastName_ ); break; // BirthLastName
      case 40000131: return ( &BirthFirstName_ ); break; // BirthFirstName
      case 40000301: return ( &Gender_ ); break; // Gender
      case 40000623: return ( &DofBirth_ ); break; // DofBirth
      case 40000132: return ( &SIN_ ); break; // SIN
      case 40000308: return ( &OccupationCode_ ); break; // OccupationCode
      case 40000030: return ( &LanguageCode_ ); break; // LanguageCode
      case 40000136: return ( &HomePhone_ ); break; // HomePhone
      case 40000873: return ( &HomeFax_ ); break; // HomeFax
      case 40000625: return ( &BusinessPhone_ ); break; // BusinessPhone
      case 40000626: return ( &BusinessExt_ ); break; // BusinessExt
      case 40000627: return ( &BusinessFax_ ); break; // BusinessFax
      case 40000628: return ( &Telex_ ); break; // Telex
      case 40000629: return ( &Email_ ); break; // Email
      case 40000630: return ( &DofDeath_ ); break; // DofDeath
      case 40000631: return ( &DofDeathNotice_ ); break; // DofDeathNotice
      case 40001019: return ( &EntityIdentityVer_ ); break; // EntityIdentityVer
      case 40001020: return ( &EntityIdentityRid_ ); break; // EntityIdentityRid
      case 40002014: return ( &HomePhoneCntry_ ); break; // HomePhoneCntry
      case 40002017: return ( &HomePhoneArea_ ); break; // HomePhoneArea
      case 40002018: return ( &BusinessPhoneCntry_ ); break; // BusinessPhoneCntry
      case 40002019: return ( &BusinessPhoneArea_ ); break; // BusinessPhoneArea
      case 40002020: return ( &HomeFaxCntry_ ); break; // HomeFaxCntry
      case 40002021: return ( &HomeFaxArea_ ); break; // HomeFaxArea
      case 40002022: return ( &BusFaxCntry_ ); break; // BusFaxCntry
      case 40002023: return ( &BusFaxArea_ ); break; // BusFaxArea
      case 40003040: return ( &EmployeeClass_ ); break; // EmployeeClass
      case 40003800: return ( &Nationality_ ); break; // Nationality
      case 40004106: return ( &OtherOccupation_ ); break; // OtherOccupation
      case 40004139: return ( &SpouseEntityID_ ); break; // SpouseEntityID
      case 40004304: return ( &BirthPlace_ ); break; // BirthPlace
      case 40004435: return ( &RiskLevel_ ); break; // RiskLevel
      case 40004986: return ( &TaxJurisDeff_ ); break; // TaxJurisDeff
      case 40004447: return ( &TaxJuris_ ); break; // TaxJuris
      case 40004987: return ( &EUSDTaxOption_ ); break; // EUSDTaxOption
      case 40004988: return ( &UpdShrTaxJuris_ ); break; // UpdShrTaxJuris
      case 40005348: return ( &CountryOfBirth_ ); break; // CountryOfBirth
      case 40005349: return ( &ContactName_ ); break; // ContactName
      case 40005650: return ( &Email2_ ); break; // Email2
      case 40005651: return ( &SecondPhoneNum_ ); break; // SecondPhoneNum
      case 40005652: return ( &SecondPhoneNumExt_ ); break; // SecondPhoneNumExt
      case 40006947: return ( &FATCAFFI_ ); break; // FATCAFFI
        case 40007577: return ( &CountryOfExposure_ ); break; // CountryOfExposure
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0078_REQRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0078_REQRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0078_REQRepeat_Record::getElementByIndex( unsigned int iField )
{
    if ( iField >=0 && iField < 49 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &RunMode_; break;
            case 1: aFlds_[1] = &EntityId_; break;
            case 2: aFlds_[2] = &EffectiveDate_; break;
            case 3: aFlds_[3] = &Salutation_; break;
            case 4: aFlds_[4] = &LastName_; break;
            case 5: aFlds_[5] = &FirstName_; break;
            case 6: aFlds_[6] = &BirthLastName_; break;
            case 7: aFlds_[7] = &BirthFirstName_; break;
            case 8: aFlds_[8] = &Gender_; break;
            case 9: aFlds_[9] = &DofBirth_; break;
            case 10: aFlds_[10] = &SIN_; break;
            case 11: aFlds_[11] = &OccupationCode_; break;
            case 12: aFlds_[12] = &LanguageCode_; break;
            case 13: aFlds_[13] = &HomePhone_; break;
            case 14: aFlds_[14] = &HomeFax_; break;
            case 15: aFlds_[15] = &BusinessPhone_; break;
            case 16: aFlds_[16] = &BusinessExt_; break;
            case 17: aFlds_[17] = &BusinessFax_; break;
            case 18: aFlds_[18] = &Telex_; break;
            case 19: aFlds_[19] = &Email_; break;
            case 20: aFlds_[20] = &DofDeath_; break;
            case 21: aFlds_[21] = &DofDeathNotice_; break;
            case 22: aFlds_[22] = &EntityIdentityVer_; break;
            case 23: aFlds_[23] = &EntityIdentityRid_; break;
            case 24: aFlds_[24] = &HomePhoneCntry_; break;
            case 25: aFlds_[25] = &HomePhoneArea_; break;
            case 26: aFlds_[26] = &BusinessPhoneCntry_; break;
            case 27: aFlds_[27] = &BusinessPhoneArea_; break;
            case 28: aFlds_[28] = &HomeFaxCntry_; break;
            case 29: aFlds_[29] = &HomeFaxArea_; break;
            case 30: aFlds_[30] = &BusFaxCntry_; break;
            case 31: aFlds_[31] = &BusFaxArea_; break;
            case 32: aFlds_[32] = &EmployeeClass_; break;
            case 33: aFlds_[33] = &Nationality_; break;
            case 34: aFlds_[34] = &OtherOccupation_; break;
            case 35: aFlds_[35] = &SpouseEntityID_; break;
            case 36: aFlds_[36] = &BirthPlace_; break;
            case 37: aFlds_[37] = &RiskLevel_; break;
            case 38: aFlds_[38] = &TaxJurisDeff_; break;
            case 39: aFlds_[39] = &TaxJuris_; break;
            case 40: aFlds_[40] = &EUSDTaxOption_; break;
            case 41: aFlds_[41] = &UpdShrTaxJuris_; break;
            case 42: aFlds_[42] = &CountryOfBirth_; break;
            case 43: aFlds_[43] = &ContactName_; break;
            case 44: aFlds_[44] = &Email2_; break;
            case 45: aFlds_[45] = &SecondPhoneNum_; break;
            case 46: aFlds_[46] = &SecondPhoneNumExt_; break;
            case 47: aFlds_[47] = &FATCAFFI_; break;
                case 48: aFlds_[48] = &CountryOfExposure_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0078_REQRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0078_REQRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0078_REQRepeat_Record::getLargestDefinedField( void ) const
{
   return( 80 );
}

unsigned long dsi_DSTC0078_REQRepeat_Record::getDefinedByteLength( void ) const
{
   return( 2298 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0078_REQRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0078_REQRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0078_REQRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40000990: return( true );
      case 40000033: return( true );
      case 40000327: return( true );
      case 40000416: return( true );
      case 40000128: return( true );
      case 40000129: return( true );
      case 40000130: return( true );
      case 40000131: return( true );
      case 40000301: return( true );
      case 40000623: return( true );
      case 40000132: return( true );
      case 40000308: return( true );
      case 40000030: return( true );
      case 40000136: return( true );
      case 40000873: return( true );
      case 40000625: return( true );
      case 40000626: return( true );
      case 40000627: return( true );
      case 40000628: return( true );
      case 40000629: return( true );
      case 40000630: return( true );
      case 40000631: return( true );
      case 40001019: return( true );
      case 40001020: return( true );
      case 40002014: return( true );
      case 40002017: return( true );
      case 40002018: return( true );
      case 40002019: return( true );
      case 40002020: return( true );
      case 40002021: return( true );
      case 40002022: return( true );
      case 40002023: return( true );
      case 40003040: return( true );
      case 40003800: return( true );
      case 40004106: return( true );
      case 40004139: return( true );
      case 40004304: return( true );
      case 40004435: return( true );
      case 40004986: return( true );
      case 40004447: return( true );
      case 40004987: return( true );
      case 40004988: return( true );
      case 40005348: return( true );
      case 40005349: return( true );
      case 40005650: return( true );
      case 40005651: return( true );
      case 40005652: return( true );
      case 40006947: return( true );
      case 40007577: return ( true );
   }
   return false;
}

