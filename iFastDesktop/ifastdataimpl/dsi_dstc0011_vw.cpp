// BFDataImpl implementation file for DataSet DSTC0011.VW
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Thursday, February 25, 2016 15:49:26


#include "stdafx.h"
#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0011_vw.h"


// This function creates an instance of dsi_DSTC0011_VW
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0011_VW() { return new dsi_DSTC0011_VW; }

dsi_DSTC0011_VW::dsi_DSTC0011_VW()
: BFDataImpl( 40000300 )
, BirthDate_( ifds::BirthDate, &ifds::s_FldProp_BirthDate )
, Gender_( ifds::Gender, &ifds::s_FldProp_Gender )
, MaritalCode_( ifds::MaritalCode, &ifds::s_FldProp_MaritalCode )
, MaritalDesc_( ifds::MaritalDesc, &ifds::s_FldProp_MaritalDesc )
, Employer_( ifds::Employer, &ifds::s_FldProp_Employer )
, EmployedYrs_( ifds::EmployedYrs, &ifds::s_FldProp_EmployedYrs )
, IndustryCode_( ifds::IndustryCode, &ifds::s_FldProp_IndustryCode )
, IndustryDesc_( ifds::IndustryDesc, &ifds::s_FldProp_IndustryDesc )
, OccupationCode_( ifds::OccupationCode, &ifds::s_FldProp_OccupationCode )
, OccupationDesc_( ifds::OccupationDesc, &ifds::s_FldProp_OccupationDesc )
, AnnualIncomeCode_( ifds::AnnualIncomeCode, &ifds::s_FldProp_AnnualIncomeCode )
, AnnualIncomeDesc_( ifds::AnnualIncomeDesc, &ifds::s_FldProp_AnnualIncomeDesc )
, NetWorthCode_( ifds::NetWorthCode, &ifds::s_FldProp_NetWorthCode )
, NetWorthDesc_( ifds::NetWorthDesc, &ifds::s_FldProp_NetWorthDesc )
, InvObjCode_( ifds::InvObjCode, &ifds::s_FldProp_InvObjCode )
, InvObjDesc_( ifds::InvObjDesc, &ifds::s_FldProp_InvObjDesc )
, InvKnowledgeCode_( ifds::InvKnowledgeCode, &ifds::s_FldProp_InvKnowledgeCode )
, InvKnowledgeDesc_( ifds::InvKnowledgeDesc, &ifds::s_FldProp_InvKnowledgeDesc )
, InvHorizonCode_( ifds::InvHorizonCode, &ifds::s_FldProp_InvHorizonCode )
, InvHorizonDesc_( ifds::InvHorizonDesc, &ifds::s_FldProp_InvHorizonDesc )
, RiskToleranceCode_( ifds::RiskToleranceCode, &ifds::s_FldProp_RiskToleranceCode )
, RiskToleranceDesc_( ifds::RiskToleranceDesc, &ifds::s_FldProp_RiskToleranceDesc )
, OtherInvestments_( ifds::OtherInvestments, &ifds::s_FldProp_OtherInvestments )
, AdvisorCode_( ifds::AdvisorCode, &ifds::s_FldProp_AdvisorCode )
, AdvisorDesc_( ifds::AdvisorDesc, &ifds::s_FldProp_AdvisorDesc )
, WitnessName_( ifds::WitnessName, &ifds::s_FldProp_WitnessName )
, WitnessAddr1_( ifds::WitnessAddr1, &ifds::s_FldProp_WitnessAddr1 )
, WitnessAddr2_( ifds::WitnessAddr2, &ifds::s_FldProp_WitnessAddr2 )
, EffectiveDate_( ifds::EffectiveDate, &ifds::s_FldProp_EffectiveDate )
, ProcessDate_( ifds::ProcessDate, &ifds::s_FldProp_ProcessDate )
, PersonalSecCode_( ifds::PersonalSecCode, &ifds::s_FldProp_PersonalSecCode )
, PrimMstrVer_( ifds::PrimMstrVer, &ifds::s_FldProp_PrimMstrVer )
, PrimMstrRid_( ifds::PrimMstrRid, &ifds::s_FldProp_PrimMstrRid )
, InvestPhilosophyCode_( ifds::InvestPhilosophyCode, &ifds::s_FldProp_InvestPhilosophyCode )
, OccupationFreeFormat_( ifds::OccupationFreeFormat, &ifds::s_FldProp_OccupationFreeFormat )
, GrowthPercent_( ifds::GrowthPercent, &ifds::s_FldProp_GrowthPercent )
, IncomePercent_( ifds::IncomePercent, &ifds::s_FldProp_IncomePercent )
, SafetyPercent_( ifds::SafetyPercent, &ifds::s_FldProp_SafetyPercent )
, RepByBranch_( ifds::RepByBranch, &ifds::s_FldProp_RepByBranch )
, RepNo_( ifds::RepNo, &ifds::s_FldProp_RepNo )
, SAMFinHealthCode_( ifds::SAMFinHealthCode, &ifds::s_FldProp_SAMFinHealthCode )
, TypeOfBusFreeFormat_( ifds::TypeOfBusFreeFormat, &ifds::s_FldProp_TypeOfBusFreeFormat )
, AcctModDate_( ifds::AcctModDate, &ifds::s_FldProp_AcctModDate )
, AcctModUser_( ifds::AcctModUser, &ifds::s_FldProp_AcctModUser )
, AcctProcessDate_( ifds::AcctProcessDate, &ifds::s_FldProp_AcctProcessDate )
, AcctRepBranch_( ifds::AcctRepBranch, &ifds::s_FldProp_AcctRepBranch )
, AcctRepNo_( ifds::AcctRepNo, &ifds::s_FldProp_AcctRepNo )
, AcctUserName_( ifds::AcctUserName, &ifds::s_FldProp_AcctUserName )
, AcctKYCVer_( ifds::AcctKYCVer, &ifds::s_FldProp_AcctKYCVer )
, Username_( ifds::Username, &ifds::s_FldProp_Username )
, ModUser_( ifds::ModUser, &ifds::s_FldProp_ModUser )
, ModDate_( ifds::ModDate, &ifds::s_FldProp_ModDate )
, MemorablePlace_( ifds::MemorablePlace, &ifds::s_FldProp_MemorablePlace )
, MemorableWord_( ifds::MemorableWord, &ifds::s_FldProp_MemorableWord )
, MemorableDate_( ifds::MemorableDate, &ifds::s_FldProp_MemorableDate )
, KYCComment_( ifds::KYCComment, &ifds::s_FldProp_KYCComment )
, EmploymentType_( ifds::EmploymentType, &ifds::s_FldProp_EmploymentType )
, ResidenceType_( ifds::ResidenceType, &ifds::s_FldProp_ResidenceType )
, ResAmount_( ifds::ResAmount, &ifds::s_FldProp_ResAmount )
, KYCMailedDate_( ifds::KYCMailedDate, &ifds::s_FldProp_KYCMailedDate )
, AnnualIncomeAmount_( ifds::AnnualIncomeAmount, &ifds::s_FldProp_AnnualIncomeAmount )
, IncomeLevelDate_( ifds::IncomeLevelDate, &ifds::s_FldProp_IncomeLevelDate )
, NetWorthAmount_( ifds::NetWorthAmount, &ifds::s_FldProp_NetWorthAmount )
, NetWorthDate_( ifds::NetWorthDate, &ifds::s_FldProp_NetWorthDate )
, RefferalCode_( ifds::RefferalCode, &ifds::s_FldProp_RefferalCode )
, ReferenceName_( ifds::ReferenceName, &ifds::s_FldProp_ReferenceName )
, SpecialtyCode_( ifds::SpecialtyCode, &ifds::s_FldProp_SpecialtyCode )
, TolerancePrcnt_( ifds::TolerancePrcnt, &ifds::s_FldProp_TolerancePrcnt )
, ShortTermPrcnt_( ifds::ShortTermPrcnt, &ifds::s_FldProp_ShortTermPrcnt )
, AggressivePrcnt_( ifds::AggressivePrcnt, &ifds::s_FldProp_AggressivePrcnt )
, PrcntDate_( ifds::PrcntDate, &ifds::s_FldProp_PrcntDate )
, ShrKYCVer_( ifds::ShrKYCVer, &ifds::s_FldProp_ShrKYCVer )
, KYCRID_( ifds::KYCRID, &ifds::s_FldProp_KYCRID )
, TypeOfInvestor_( ifds::TypeOfInvestor, &ifds::s_FldProp_TypeOfInvestor )
, InvestingOnBehalf_( ifds::InvestingOnBehalf, &ifds::s_FldProp_InvestingOnBehalf )
, CountryCode_( ifds::CountryCode, &ifds::s_FldProp_CountryCode )
, InitialPayment_( ifds::InitialPayment, &ifds::s_FldProp_InitialPayment )
, SourceOfIncome_( ifds::SourceOfIncome, &ifds::s_FldProp_SourceOfIncome )
, PowerOfAttorney_( ifds::PowerOfAttorney, &ifds::s_FldProp_PowerOfAttorney )
, ComplianceCode_( ifds::ComplianceCode, &ifds::s_FldProp_ComplianceCode )
, RegulatoryStandard_( ifds::RegulatoryStandard, &ifds::s_FldProp_RegulatoryStandard )
, RegulatoryCountryCode_( ifds::RegulatoryCountryCode, &ifds::s_FldProp_RegulatoryCountryCode )
, NumOfDependents_( ifds::NumOfDependents, &ifds::s_FldProp_NumOfDependents )
, AssociateCorpName1_( ifds::AssociateCorpName1, &ifds::s_FldProp_AssociateCorpName1 )
, AssociateCorpName2_( ifds::AssociateCorpName2, &ifds::s_FldProp_AssociateCorpName2 )
, AssociateCorpName3_( ifds::AssociateCorpName3, &ifds::s_FldProp_AssociateCorpName3 )
, AssociateCorpName4_( ifds::AssociateCorpName4, &ifds::s_FldProp_AssociateCorpName4 )
, AssociateCorpName5_( ifds::AssociateCorpName5, &ifds::s_FldProp_AssociateCorpName5 )
, AssociateCorpName6_( ifds::AssociateCorpName6, &ifds::s_FldProp_AssociateCorpName6 )
, AssociateCorpName7_( ifds::AssociateCorpName7, &ifds::s_FldProp_AssociateCorpName7 )
, AssociateCorpName8_( ifds::AssociateCorpName8, &ifds::s_FldProp_AssociateCorpName8 )
, AssociateCorpName9_( ifds::AssociateCorpName9, &ifds::s_FldProp_AssociateCorpName9 )
, AssociateCorpName10_( ifds::AssociateCorpName10, &ifds::s_FldProp_AssociateCorpName10 )
, RoleInCorp1_( ifds::RoleInCorp1, &ifds::s_FldProp_RoleInCorp1 )
, RoleInCorp2_( ifds::RoleInCorp2, &ifds::s_FldProp_RoleInCorp2 )
, RoleInCorp3_( ifds::RoleInCorp3, &ifds::s_FldProp_RoleInCorp3 )
, RoleInCorp4_( ifds::RoleInCorp4, &ifds::s_FldProp_RoleInCorp4 )
, RoleInCorp5_( ifds::RoleInCorp5, &ifds::s_FldProp_RoleInCorp5 )
, RoleInCorp6_( ifds::RoleInCorp6, &ifds::s_FldProp_RoleInCorp6 )
, RoleInCorp7_( ifds::RoleInCorp7, &ifds::s_FldProp_RoleInCorp7 )
, RoleInCorp8_( ifds::RoleInCorp8, &ifds::s_FldProp_RoleInCorp8 )
, RoleInCorp9_( ifds::RoleInCorp9, &ifds::s_FldProp_RoleInCorp9 )
, RoleInCorp10_( ifds::RoleInCorp10, &ifds::s_FldProp_RoleInCorp10 )
, SuppressKYCLetter_( ifds::SuppressKYCLetter, &ifds::s_FldProp_SuppressKYCLetter )
, ComplyCode_( ifds::ComplyCode, &ifds::s_FldProp_ComplyCode )
, KYCInfoFormat_( ifds::KYCInfoFormat, &ifds::s_FldProp_KYCInfoFormat )
, KYCInfoFormatDesc_( ifds::KYCInfoFormatDesc, &ifds::s_FldProp_KYCInfoFormatDesc )
, ProfileNum_( ifds::ProfileNum, &ifds::s_FldProp_ProfileNum )
, RefNum_( ifds::RefNum, &ifds::s_FldProp_RefNum )
, ProfileValue_( ifds::ProfileValue, &ifds::s_FldProp_ProfileValue )
, LastReviewDate_( ifds::LastReviewDate, &ifds::s_FldProp_LastReviewDate )
, SolicitPublicContrib_( ifds::SolicitPublicContrib, &ifds::s_FldProp_SolicitPublicContrib )
, InvReason_( ifds::InvReason, &ifds::s_FldProp_InvReason )
, KYCBusinessType_( ifds::KYCBusinessType, &ifds::s_FldProp_KYCBusinessType )
, KYCLegalForm_( ifds::KYCLegalForm, &ifds::s_FldProp_KYCLegalForm )
, RegStandardName_( ifds::RegStandardName, &ifds::s_FldProp_RegStandardName )
{
    cFields_ = 116;
    memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0011_VW::~dsi_DSTC0011_VW()
{
}

BFDataImpl* dsi_DSTC0011_VW::clone()
{
    dsi_DSTC0011_VW* p = new dsi_DSTC0011_VW;
    p->BirthDate_ = BirthDate_;
    p->Gender_ = Gender_;
    p->MaritalCode_ = MaritalCode_;
    p->MaritalDesc_ = MaritalDesc_;
    p->Employer_ = Employer_;
    p->EmployedYrs_ = EmployedYrs_;
    p->IndustryCode_ = IndustryCode_;
    p->IndustryDesc_ = IndustryDesc_;
    p->OccupationCode_ = OccupationCode_;
    p->OccupationDesc_ = OccupationDesc_;
    p->AnnualIncomeCode_ = AnnualIncomeCode_;
    p->AnnualIncomeDesc_ = AnnualIncomeDesc_;
    p->NetWorthCode_ = NetWorthCode_;
    p->NetWorthDesc_ = NetWorthDesc_;
    p->InvObjCode_ = InvObjCode_;
    p->InvObjDesc_ = InvObjDesc_;
    p->InvKnowledgeCode_ = InvKnowledgeCode_;
    p->InvKnowledgeDesc_ = InvKnowledgeDesc_;
    p->InvHorizonCode_ = InvHorizonCode_;
    p->InvHorizonDesc_ = InvHorizonDesc_;
    p->RiskToleranceCode_ = RiskToleranceCode_;
    p->RiskToleranceDesc_ = RiskToleranceDesc_;
    p->OtherInvestments_ = OtherInvestments_;
    p->AdvisorCode_ = AdvisorCode_;
    p->AdvisorDesc_ = AdvisorDesc_;
    p->WitnessName_ = WitnessName_;
    p->WitnessAddr1_ = WitnessAddr1_;
    p->WitnessAddr2_ = WitnessAddr2_;
    p->EffectiveDate_ = EffectiveDate_;
    p->ProcessDate_ = ProcessDate_;
    p->PersonalSecCode_ = PersonalSecCode_;
    p->PrimMstrVer_ = PrimMstrVer_;
    p->PrimMstrRid_ = PrimMstrRid_;
    p->InvestPhilosophyCode_ = InvestPhilosophyCode_;
    p->OccupationFreeFormat_ = OccupationFreeFormat_;
    p->GrowthPercent_ = GrowthPercent_;
    p->IncomePercent_ = IncomePercent_;
    p->SafetyPercent_ = SafetyPercent_;
    p->RepByBranch_ = RepByBranch_;
    p->RepNo_ = RepNo_;
    p->SAMFinHealthCode_ = SAMFinHealthCode_;
    p->TypeOfBusFreeFormat_ = TypeOfBusFreeFormat_;
    p->AcctModDate_ = AcctModDate_;
    p->AcctModUser_ = AcctModUser_;
    p->AcctProcessDate_ = AcctProcessDate_;
    p->AcctRepBranch_ = AcctRepBranch_;
    p->AcctRepNo_ = AcctRepNo_;
    p->AcctUserName_ = AcctUserName_;
    p->AcctKYCVer_ = AcctKYCVer_;
    p->Username_ = Username_;
    p->ModUser_ = ModUser_;
    p->ModDate_ = ModDate_;
    p->MemorablePlace_ = MemorablePlace_;
    p->MemorableWord_ = MemorableWord_;
    p->MemorableDate_ = MemorableDate_;
    p->KYCComment_ = KYCComment_;
    p->EmploymentType_ = EmploymentType_;
    p->ResidenceType_ = ResidenceType_;
    p->ResAmount_ = ResAmount_;
    p->KYCMailedDate_ = KYCMailedDate_;
    p->AnnualIncomeAmount_ = AnnualIncomeAmount_;
    p->IncomeLevelDate_ = IncomeLevelDate_;
    p->NetWorthAmount_ = NetWorthAmount_;
    p->NetWorthDate_ = NetWorthDate_;
    p->RefferalCode_ = RefferalCode_;
    p->ReferenceName_ = ReferenceName_;
    p->SpecialtyCode_ = SpecialtyCode_;
    p->TolerancePrcnt_ = TolerancePrcnt_;
    p->ShortTermPrcnt_ = ShortTermPrcnt_;
    p->AggressivePrcnt_ = AggressivePrcnt_;
    p->PrcntDate_ = PrcntDate_;
    p->ShrKYCVer_ = ShrKYCVer_;
    p->KYCRID_ = KYCRID_;
    p->TypeOfInvestor_ = TypeOfInvestor_;
    p->InvestingOnBehalf_ = InvestingOnBehalf_;
    p->CountryCode_ = CountryCode_;
    p->InitialPayment_ = InitialPayment_;
    p->SourceOfIncome_ = SourceOfIncome_;
    p->PowerOfAttorney_ = PowerOfAttorney_;
    p->ComplianceCode_ = ComplianceCode_;
    p->RegulatoryStandard_ = RegulatoryStandard_;
    p->RegulatoryCountryCode_ = RegulatoryCountryCode_;
    p->NumOfDependents_ = NumOfDependents_;
    p->AssociateCorpName1_ = AssociateCorpName1_;
    p->AssociateCorpName2_ = AssociateCorpName2_;
    p->AssociateCorpName3_ = AssociateCorpName3_;
    p->AssociateCorpName4_ = AssociateCorpName4_;
    p->AssociateCorpName5_ = AssociateCorpName5_;
    p->AssociateCorpName6_ = AssociateCorpName6_;
    p->AssociateCorpName7_ = AssociateCorpName7_;
    p->AssociateCorpName8_ = AssociateCorpName8_;
    p->AssociateCorpName9_ = AssociateCorpName9_;
    p->AssociateCorpName10_ = AssociateCorpName10_;
    p->RoleInCorp1_ = RoleInCorp1_;
    p->RoleInCorp2_ = RoleInCorp2_;
    p->RoleInCorp3_ = RoleInCorp3_;
    p->RoleInCorp4_ = RoleInCorp4_;
    p->RoleInCorp5_ = RoleInCorp5_;
    p->RoleInCorp6_ = RoleInCorp6_;
    p->RoleInCorp7_ = RoleInCorp7_;
    p->RoleInCorp8_ = RoleInCorp8_;
    p->RoleInCorp9_ = RoleInCorp9_;
    p->RoleInCorp10_ = RoleInCorp10_;
    p->SuppressKYCLetter_ = SuppressKYCLetter_;
    p->ComplyCode_ = ComplyCode_;
    p->KYCInfoFormat_ = KYCInfoFormat_;
    p->KYCInfoFormatDesc_ = KYCInfoFormatDesc_;
    p->ProfileNum_ = ProfileNum_;
    p->RefNum_ = RefNum_;
    p->ProfileValue_ = ProfileValue_;
    p->LastReviewDate_ = LastReviewDate_;
    p->SolicitPublicContrib_ = SolicitPublicContrib_;
    p->InvReason_ = InvReason_;
    p->KYCBusinessType_ = KYCBusinessType_;
    p->KYCLegalForm_ = KYCLegalForm_;
    p->RegStandardName_ = RegStandardName_;
    return(p);
}

BFDataField* dsi_DSTC0011_VW::getElement( const BFFieldId& id )
{
    switch( id.getId() ) {
        case 40000133: return ( &BirthDate_ ); break; // BirthDate
        case 40000301: return ( &Gender_ ); break; // Gender
        case 40000302: return ( &MaritalCode_ ); break; // MaritalCode
        case 40000303: return ( &MaritalDesc_ ); break; // MaritalDesc
        case 40000304: return ( &Employer_ ); break; // Employer
        case 40000305: return ( &EmployedYrs_ ); break; // EmployedYrs
        case 40000306: return ( &IndustryCode_ ); break; // IndustryCode
        case 40000307: return ( &IndustryDesc_ ); break; // IndustryDesc
        case 40000308: return ( &OccupationCode_ ); break; // OccupationCode
        case 40000309: return ( &OccupationDesc_ ); break; // OccupationDesc
        case 40000310: return ( &AnnualIncomeCode_ ); break; // AnnualIncomeCode
        case 40000311: return ( &AnnualIncomeDesc_ ); break; // AnnualIncomeDesc
        case 40000312: return ( &NetWorthCode_ ); break; // NetWorthCode
        case 40000313: return ( &NetWorthDesc_ ); break; // NetWorthDesc
        case 40000314: return ( &InvObjCode_ ); break; // InvObjCode
        case 40000315: return ( &InvObjDesc_ ); break; // InvObjDesc
        case 40000316: return ( &InvKnowledgeCode_ ); break; // InvKnowledgeCode
        case 40000317: return ( &InvKnowledgeDesc_ ); break; // InvKnowledgeDesc
        case 40000318: return ( &InvHorizonCode_ ); break; // InvHorizonCode
        case 40000319: return ( &InvHorizonDesc_ ); break; // InvHorizonDesc
        case 40000320: return ( &RiskToleranceCode_ ); break; // RiskToleranceCode
        case 40000321: return ( &RiskToleranceDesc_ ); break; // RiskToleranceDesc
        case 40000322: return ( &OtherInvestments_ ); break; // OtherInvestments
        case 40000323: return ( &AdvisorCode_ ); break; // AdvisorCode
        case 40000324: return ( &AdvisorDesc_ ); break; // AdvisorDesc
        case 40000325: return ( &WitnessName_ ); break; // WitnessName
        case 40000326: return ( &WitnessAddr1_ ); break; // WitnessAddr1
        case 40000943: return ( &WitnessAddr2_ ); break; // WitnessAddr2
        case 40000327: return ( &EffectiveDate_ ); break; // EffectiveDate
        case 40000216: return ( &ProcessDate_ ); break; // ProcessDate
        case 40000328: return ( &PersonalSecCode_ ); break; // PersonalSecCode
        case 40000914: return ( &PrimMstrVer_ ); break; // PrimMstrVer
        case 40000915: return ( &PrimMstrRid_ ); break; // PrimMstrRid
        case 40003915: return ( &InvestPhilosophyCode_ ); break; // InvestPhilosophyCode
        case 40000924: return ( &OccupationFreeFormat_ ); break; // OccupationFreeFormat
        case 40003993: return ( &GrowthPercent_ ); break; // GrowthPercent
        case 40003994: return ( &IncomePercent_ ); break; // IncomePercent
        case 40003995: return ( &SafetyPercent_ ); break; // SafetyPercent
        case 40001131: return ( &RepByBranch_ ); break; // RepByBranch
        case 40003996: return ( &RepNo_ ); break; // RepNo
        case 40003916: return ( &SAMFinHealthCode_ ); break; // SAMFinHealthCode
        case 40000922: return ( &TypeOfBusFreeFormat_ ); break; // TypeOfBusFreeFormat
        case 40004000: return ( &AcctModDate_ ); break; // AcctModDate
        case 40004001: return ( &AcctModUser_ ); break; // AcctModUser
        case 40004002: return ( &AcctProcessDate_ ); break; // AcctProcessDate
        case 40004003: return ( &AcctRepBranch_ ); break; // AcctRepBranch
        case 40004004: return ( &AcctRepNo_ ); break; // AcctRepNo
        case 40004005: return ( &AcctUserName_ ); break; // AcctUserName
        case 40004006: return ( &AcctKYCVer_ ); break; // AcctKYCVer
        case 40000117: return ( &Username_ ); break; // Username
        case 40000218: return ( &ModUser_ ); break; // ModUser
        case 40000217: return ( &ModDate_ ); break; // ModDate
        case 40004019: return ( &MemorablePlace_ ); break; // MemorablePlace
        case 40004020: return ( &MemorableWord_ ); break; // MemorableWord
        case 40004021: return ( &MemorableDate_ ); break; // MemorableDate
        case 40005631: return ( &KYCComment_ ); break; // KYCComment
        case 40005632: return ( &EmploymentType_ ); break; // EmploymentType
        case 40005633: return ( &ResidenceType_ ); break; // ResidenceType
        case 40005634: return ( &ResAmount_ ); break; // ResAmount
        case 40005635: return ( &KYCMailedDate_ ); break; // KYCMailedDate
        case 40005638: return ( &AnnualIncomeAmount_ ); break; // AnnualIncomeAmount
        case 40005639: return ( &IncomeLevelDate_ ); break; // IncomeLevelDate
        case 40005640: return ( &NetWorthAmount_ ); break; // NetWorthAmount
        case 40005641: return ( &NetWorthDate_ ); break; // NetWorthDate
        case 40005642: return ( &RefferalCode_ ); break; // RefferalCode
        case 40005643: return ( &ReferenceName_ ); break; // ReferenceName
        case 40005644: return ( &SpecialtyCode_ ); break; // SpecialtyCode
        case 40005645: return ( &TolerancePrcnt_ ); break; // TolerancePrcnt
        case 40005646: return ( &ShortTermPrcnt_ ); break; // ShortTermPrcnt
        case 40005647: return ( &AggressivePrcnt_ ); break; // AggressivePrcnt
        case 40005648: return ( &PrcntDate_ ); break; // PrcntDate
        case 40005663: return ( &ShrKYCVer_ ); break; // ShrKYCVer
        case 40005667: return ( &KYCRID_ ); break; // KYCRID
        case 40005792: return ( &TypeOfInvestor_ ); break; // TypeOfInvestor
        case 40005793: return ( &InvestingOnBehalf_ ); break; // InvestingOnBehalf
        case 40000344: return ( &CountryCode_ ); break; // CountryCode
        case 40005796: return ( &InitialPayment_ ); break; // InitialPayment
        case 40005795: return ( &SourceOfIncome_ ); break; // SourceOfIncome
        case 40005794: return ( &PowerOfAttorney_ ); break; // PowerOfAttorney
        case 40005797: return ( &ComplianceCode_ ); break; // ComplianceCode
        case 40005798: return ( &RegulatoryStandard_ ); break; // RegulatoryStandard
        case 40005845: return ( &RegulatoryCountryCode_ ); break; // RegulatoryCountryCode
        case 40005869: return ( &NumOfDependents_ ); break; // NumOfDependents
        case 40005870: return ( &AssociateCorpName1_ ); break; // AssociateCorpName1
        case 40005871: return ( &AssociateCorpName2_ ); break; // AssociateCorpName2
        case 40005872: return ( &AssociateCorpName3_ ); break; // AssociateCorpName3
        case 40005873: return ( &AssociateCorpName4_ ); break; // AssociateCorpName4
        case 40005874: return ( &AssociateCorpName5_ ); break; // AssociateCorpName5
        case 40005875: return ( &AssociateCorpName6_ ); break; // AssociateCorpName6
        case 40005876: return ( &AssociateCorpName7_ ); break; // AssociateCorpName7
        case 40005877: return ( &AssociateCorpName8_ ); break; // AssociateCorpName8
        case 40005878: return ( &AssociateCorpName9_ ); break; // AssociateCorpName9
        case 40005879: return ( &AssociateCorpName10_ ); break; // AssociateCorpName10
        case 40005880: return ( &RoleInCorp1_ ); break; // RoleInCorp1
        case 40005881: return ( &RoleInCorp2_ ); break; // RoleInCorp2
        case 40005882: return ( &RoleInCorp3_ ); break; // RoleInCorp3
        case 40005883: return ( &RoleInCorp4_ ); break; // RoleInCorp4
        case 40005884: return ( &RoleInCorp5_ ); break; // RoleInCorp5
        case 40005885: return ( &RoleInCorp6_ ); break; // RoleInCorp6
        case 40005886: return ( &RoleInCorp7_ ); break; // RoleInCorp7
        case 40005887: return ( &RoleInCorp8_ ); break; // RoleInCorp8
        case 40005888: return ( &RoleInCorp9_ ); break; // RoleInCorp9
        case 40005889: return ( &RoleInCorp10_ ); break; // RoleInCorp10
        case 40005868: return ( &SuppressKYCLetter_ ); break; // SuppressKYCLetter
        case 40005989: return ( &ComplyCode_ ); break; // ComplyCode
        case 40006412: return ( &KYCInfoFormat_ ); break; // KYCInfoFormat
        case 40006413: return ( &KYCInfoFormatDesc_ ); break; // KYCInfoFormatDesc
        case 40006414: return ( &ProfileNum_ ); break; // ProfileNum
        case 40004585: return ( &RefNum_ ); break; // RefNum
        case 40006415: return ( &ProfileValue_ ); break; // ProfileValue
        case 40006416: return ( &LastReviewDate_ ); break; // LastReviewDate
        case 40007473: return ( &SolicitPublicContrib_ ); break; // SolicitPublicContrib
        case 40007474: return ( &InvReason_ ); break; // InvReason
        case 40007593: return ( &KYCBusinessType_ ); break; // KYCBusinessType
        case 40007594: return ( &KYCLegalForm_ ); break; // KYCLegalForm
        case 40005799: return ( &RegStandardName_ ); break; // RegStandardName
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0011_VW::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0011_VW* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0011_VW::getElementByIndex( unsigned int iField )
{
    if ( iField >=0 && iField < 116 )
    {
        BFDataField* pField = aFlds_[iField];
        if( NULL == pField )
        {
            switch(iField)
            {
                case 0: aFlds_[0] = &BirthDate_; break;
                case 1: aFlds_[1] = &Gender_; break;
                case 2: aFlds_[2] = &MaritalCode_; break;
                case 3: aFlds_[3] = &MaritalDesc_; break;
                case 4: aFlds_[4] = &Employer_; break;
                case 5: aFlds_[5] = &EmployedYrs_; break;
                case 6: aFlds_[6] = &IndustryCode_; break;
                case 7: aFlds_[7] = &IndustryDesc_; break;
                case 8: aFlds_[8] = &OccupationCode_; break;
                case 9: aFlds_[9] = &OccupationDesc_; break;
                case 10: aFlds_[10] = &AnnualIncomeCode_; break;
                case 11: aFlds_[11] = &AnnualIncomeDesc_; break;
                case 12: aFlds_[12] = &NetWorthCode_; break;
                case 13: aFlds_[13] = &NetWorthDesc_; break;
                case 14: aFlds_[14] = &InvObjCode_; break;
                case 15: aFlds_[15] = &InvObjDesc_; break;
                case 16: aFlds_[16] = &InvKnowledgeCode_; break;
                case 17: aFlds_[17] = &InvKnowledgeDesc_; break;
                case 18: aFlds_[18] = &InvHorizonCode_; break;
                case 19: aFlds_[19] = &InvHorizonDesc_; break;
                case 20: aFlds_[20] = &RiskToleranceCode_; break;
                case 21: aFlds_[21] = &RiskToleranceDesc_; break;
                case 22: aFlds_[22] = &OtherInvestments_; break;
                case 23: aFlds_[23] = &AdvisorCode_; break;
                case 24: aFlds_[24] = &AdvisorDesc_; break;
                case 25: aFlds_[25] = &WitnessName_; break;
                case 26: aFlds_[26] = &WitnessAddr1_; break;
                case 27: aFlds_[27] = &WitnessAddr2_; break;
                case 28: aFlds_[28] = &EffectiveDate_; break;
                case 29: aFlds_[29] = &ProcessDate_; break;
                case 30: aFlds_[30] = &PersonalSecCode_; break;
                case 31: aFlds_[31] = &PrimMstrVer_; break;
                case 32: aFlds_[32] = &PrimMstrRid_; break;
                case 33: aFlds_[33] = &InvestPhilosophyCode_; break;
                case 34: aFlds_[34] = &OccupationFreeFormat_; break;
                case 35: aFlds_[35] = &GrowthPercent_; break;
                case 36: aFlds_[36] = &IncomePercent_; break;
                case 37: aFlds_[37] = &SafetyPercent_; break;
                case 38: aFlds_[38] = &RepByBranch_; break;
                case 39: aFlds_[39] = &RepNo_; break;
                case 40: aFlds_[40] = &SAMFinHealthCode_; break;
                case 41: aFlds_[41] = &TypeOfBusFreeFormat_; break;
                case 42: aFlds_[42] = &AcctModDate_; break;
                case 43: aFlds_[43] = &AcctModUser_; break;
                case 44: aFlds_[44] = &AcctProcessDate_; break;
                case 45: aFlds_[45] = &AcctRepBranch_; break;
                case 46: aFlds_[46] = &AcctRepNo_; break;
                case 47: aFlds_[47] = &AcctUserName_; break;
                case 48: aFlds_[48] = &AcctKYCVer_; break;
                case 49: aFlds_[49] = &Username_; break;
                case 50: aFlds_[50] = &ModUser_; break;
                case 51: aFlds_[51] = &ModDate_; break;
                case 52: aFlds_[52] = &MemorablePlace_; break;
                case 53: aFlds_[53] = &MemorableWord_; break;
                case 54: aFlds_[54] = &MemorableDate_; break;
                case 55: aFlds_[55] = &KYCComment_; break;
                case 56: aFlds_[56] = &EmploymentType_; break;
                case 57: aFlds_[57] = &ResidenceType_; break;
                case 58: aFlds_[58] = &ResAmount_; break;
                case 59: aFlds_[59] = &KYCMailedDate_; break;
                case 60: aFlds_[60] = &AnnualIncomeAmount_; break;
                case 61: aFlds_[61] = &IncomeLevelDate_; break;
                case 62: aFlds_[62] = &NetWorthAmount_; break;
                case 63: aFlds_[63] = &NetWorthDate_; break;
                case 64: aFlds_[64] = &RefferalCode_; break;
                case 65: aFlds_[65] = &ReferenceName_; break;
                case 66: aFlds_[66] = &SpecialtyCode_; break;
                case 67: aFlds_[67] = &TolerancePrcnt_; break;
                case 68: aFlds_[68] = &ShortTermPrcnt_; break;
                case 69: aFlds_[69] = &AggressivePrcnt_; break;
                case 70: aFlds_[70] = &PrcntDate_; break;
                case 71: aFlds_[71] = &ShrKYCVer_; break;
                case 72: aFlds_[72] = &KYCRID_; break;
                case 73: aFlds_[73] = &TypeOfInvestor_; break;
                case 74: aFlds_[74] = &InvestingOnBehalf_; break;
                case 75: aFlds_[75] = &CountryCode_; break;
                case 76: aFlds_[76] = &InitialPayment_; break;
                case 77: aFlds_[77] = &SourceOfIncome_; break;
                case 78: aFlds_[78] = &PowerOfAttorney_; break;
                case 79: aFlds_[79] = &ComplianceCode_; break;
                case 80: aFlds_[80] = &RegulatoryStandard_; break;
                case 81: aFlds_[81] = &RegulatoryCountryCode_; break;
                case 82: aFlds_[82] = &NumOfDependents_; break;
                case 83: aFlds_[83] = &AssociateCorpName1_; break;
                case 84: aFlds_[84] = &AssociateCorpName2_; break;
                case 85: aFlds_[85] = &AssociateCorpName3_; break;
                case 86: aFlds_[86] = &AssociateCorpName4_; break;
                case 87: aFlds_[87] = &AssociateCorpName5_; break;
                case 88: aFlds_[88] = &AssociateCorpName6_; break;
                case 89: aFlds_[89] = &AssociateCorpName7_; break;
                case 90: aFlds_[90] = &AssociateCorpName8_; break;
                case 91: aFlds_[91] = &AssociateCorpName9_; break;
                case 92: aFlds_[92] = &AssociateCorpName10_; break;
                case 93: aFlds_[93] = &RoleInCorp1_; break;
                case 94: aFlds_[94] = &RoleInCorp2_; break;
                case 95: aFlds_[95] = &RoleInCorp3_; break;
                case 96: aFlds_[96] = &RoleInCorp4_; break;
                case 97: aFlds_[97] = &RoleInCorp5_; break;
                case 98: aFlds_[98] = &RoleInCorp6_; break;
                case 99: aFlds_[99] = &RoleInCorp7_; break;
                case 100: aFlds_[100] = &RoleInCorp8_; break;
                case 101: aFlds_[101] = &RoleInCorp9_; break;
                case 102: aFlds_[102] = &RoleInCorp10_; break;
                case 103: aFlds_[103] = &SuppressKYCLetter_; break;
                case 104: aFlds_[104] = &ComplyCode_; break;
                case 105: aFlds_[105] = &KYCInfoFormat_; break;
                case 106: aFlds_[106] = &KYCInfoFormatDesc_; break;
                case 107: aFlds_[107] = &ProfileNum_; break;
                case 108: aFlds_[108] = &RefNum_; break;
                case 109: aFlds_[109] = &ProfileValue_; break;
                case 110: aFlds_[110] = &LastReviewDate_; break;
                case 111: aFlds_[111] = &SolicitPublicContrib_; break;
                case 112: aFlds_[112] = &InvReason_; break;
                case 113: aFlds_[113] = &KYCBusinessType_; break;
                case 114: aFlds_[114] = &KYCLegalForm_; break;
                case 115: aFlds_[115] = &RegStandardName_; break;
            }
            pField = aFlds_[iField];
            if( NULL == pField ) return( NULL );
        }
        return( pField );
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0011_VW::getElementByIndex( unsigned int iField ) const
{
    return( ( const_cast< dsi_DSTC0011_VW* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0011_VW::getLargestDefinedField( void ) const
{
    return( 200 );
}

unsigned long dsi_DSTC0011_VW::getDefinedByteLength( void ) const
{
    return( 5857 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0011_VW::exists( const BFFieldId& id ) const
{
    return dsi_DSTC0011_VW::fieldExists( id );
}

bool dsi_DSTC0011_VW::fieldExists( const BFFieldId& id )
{
    switch( id.getId() )
    {
        case 40000133: return ( true );
        case 40000301: return ( true );
        case 40000302: return ( true );
        case 40000303: return ( true );
        case 40000304: return ( true );
        case 40000305: return ( true );
        case 40000306: return ( true );
        case 40000307: return ( true );
        case 40000308: return ( true );
        case 40000309: return ( true );
        case 40000310: return ( true );
        case 40000311: return ( true );
        case 40000312: return ( true );
        case 40000313: return ( true );
        case 40000314: return ( true );
        case 40000315: return ( true );
        case 40000316: return ( true );
        case 40000317: return ( true );
        case 40000318: return ( true );
        case 40000319: return ( true );
        case 40000320: return ( true );
        case 40000321: return ( true );
        case 40000322: return ( true );
        case 40000323: return ( true );
        case 40000324: return ( true );
        case 40000325: return ( true );
        case 40000326: return ( true );
        case 40000943: return ( true );
        case 40000327: return ( true );
        case 40000216: return ( true );
        case 40000328: return ( true );
        case 40000914: return ( true );
        case 40000915: return ( true );
        case 40003915: return ( true );
        case 40000924: return ( true );
        case 40003993: return ( true );
        case 40003994: return ( true );
        case 40003995: return ( true );
        case 40001131: return ( true );
        case 40003996: return ( true );
        case 40003916: return ( true );
        case 40000922: return ( true );
        case 40004000: return ( true );
        case 40004001: return ( true );
        case 40004002: return ( true );
        case 40004003: return ( true );
        case 40004004: return ( true );
        case 40004005: return ( true );
        case 40004006: return ( true );
        case 40000117: return ( true );
        case 40000218: return ( true );
        case 40000217: return ( true );
        case 40004019: return ( true );
        case 40004020: return ( true );
        case 40004021: return ( true );
        case 40005631: return ( true );
        case 40005632: return ( true );
        case 40005633: return ( true );
        case 40005634: return ( true );
        case 40005635: return ( true );
        case 40005638: return ( true );
        case 40005639: return ( true );
        case 40005640: return ( true );
        case 40005641: return ( true );
        case 40005642: return ( true );
        case 40005643: return ( true );
        case 40005644: return ( true );
        case 40005645: return ( true );
        case 40005646: return ( true );
        case 40005647: return ( true );
        case 40005648: return ( true );
        case 40005663: return ( true );
        case 40005667: return ( true );
        case 40005792: return ( true );
        case 40005793: return ( true );
        case 40000344: return ( true );
        case 40005796: return ( true );
        case 40005795: return ( true );
        case 40005794: return ( true );
        case 40005797: return ( true );
        case 40005798: return ( true );
        case 40005845: return ( true );
        case 40005869: return ( true );
        case 40005870: return ( true );
        case 40005871: return ( true );
        case 40005872: return ( true );
        case 40005873: return ( true );
        case 40005874: return ( true );
        case 40005875: return ( true );
        case 40005876: return ( true );
        case 40005877: return ( true );
        case 40005878: return ( true );
        case 40005879: return ( true );
        case 40005880: return ( true );
        case 40005881: return ( true );
        case 40005882: return ( true );
        case 40005883: return ( true );
        case 40005884: return ( true );
        case 40005885: return ( true );
        case 40005886: return ( true );
        case 40005887: return ( true );
        case 40005888: return ( true );
        case 40005889: return ( true );
        case 40005868: return ( true );
        case 40005989: return ( true );
        case 40006412: return ( true );
        case 40006413: return ( true );
        case 40006414: return ( true );
        case 40004585: return ( true );
        case 40006415: return ( true );
        case 40006416: return ( true );
        case 40007473: return ( true );
        case 40007474: return ( true );
        case 40007593: return ( true );
        case 40007594: return ( true );
        case 40005799: return ( true );
    }
    return false;
}

