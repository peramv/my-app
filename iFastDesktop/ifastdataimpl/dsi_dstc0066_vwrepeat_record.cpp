// BFDataImpl implementation file for DataSet DSTC0066.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0066_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0066_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0066_VWRepeat_Record() { return new dsi_DSTC0066_VWRepeat_Record; }

dsi_DSTC0066_VWRepeat_Record::dsi_DSTC0066_VWRepeat_Record()
: BFDataImpl( 40000785 )
, BeneName_( ifds::BeneName, &ifds::s_FldProp_BeneName )
, YTDContr_( ifds::YTDContr, &ifds::s_FldProp_YTDContr )
, LifeContr_( ifds::LifeContr, &ifds::s_FldProp_LifeContr )
, UnAssisted_( ifds::UnAssisted, &ifds::s_FldProp_UnAssisted )
, Assisted_( ifds::Assisted, &ifds::s_FldProp_Assisted )
, NetGrant_( ifds::NetGrant, &ifds::s_FldProp_NetGrant )
, EAPayment_( ifds::EAPayment, &ifds::s_FldProp_EAPayment )
{
   cFields_ = 7;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0066_VWRepeat_Record::~dsi_DSTC0066_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0066_VWRepeat_Record::clone()
{
   dsi_DSTC0066_VWRepeat_Record* p = new dsi_DSTC0066_VWRepeat_Record;
   p->BeneName_ = BeneName_;
   p->YTDContr_ = YTDContr_;
   p->LifeContr_ = LifeContr_;
   p->UnAssisted_ = UnAssisted_;
   p->Assisted_ = Assisted_;
   p->NetGrant_ = NetGrant_;
   p->EAPayment_ = EAPayment_;
   return(p);
}

BFDataField* dsi_DSTC0066_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40000786: return ( &BeneName_ ); break; // BeneName
      case 40000787: return ( &YTDContr_ ); break; // YTDContr
      case 40000788: return ( &LifeContr_ ); break; // LifeContr
      case 40000789: return ( &UnAssisted_ ); break; // UnAssisted
      case 40000790: return ( &Assisted_ ); break; // Assisted
      case 40000791: return ( &NetGrant_ ); break; // NetGrant
      case 40000792: return ( &EAPayment_ ); break; // EAPayment
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0066_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0066_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0066_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 7 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &BeneName_; break;
            case 1: aFlds_[1] = &YTDContr_; break;
            case 2: aFlds_[2] = &LifeContr_; break;
            case 3: aFlds_[3] = &UnAssisted_; break;
            case 4: aFlds_[4] = &Assisted_; break;
            case 5: aFlds_[5] = &NetGrant_; break;
            case 6: aFlds_[6] = &EAPayment_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0066_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0066_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0066_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 60 );
}

unsigned long dsi_DSTC0066_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 199 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0066_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0066_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0066_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40000786: return( true );
      case 40000787: return( true );
      case 40000788: return( true );
      case 40000789: return( true );
      case 40000790: return( true );
      case 40000791: return( true );
      case 40000792: return( true );
   }
   return false;
}

