// BFDataImpl implementation file for DataSet DSTC0404.VW
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0404_vw.h"


// This function creates an instance of dsi_DSTC0404_VW
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0404_VW() { return new dsi_DSTC0404_VW; }

dsi_DSTC0404_VW::dsi_DSTC0404_VW()
: BFDataImpl( 40006155 )
, RESPBenefId_( ifds::RESPBenefId, &ifds::s_FldProp_RESPBenefId )
, RESPBenefName_( ifds::RESPBenefName, &ifds::s_FldProp_RESPBenefName )
, RESPBenefLastName_( ifds::RESPBenefLastName, &ifds::s_FldProp_RESPBenefLastName )
, CourseStart_( ifds::CourseStart, &ifds::s_FldProp_CourseStart )
, CourseLen_( ifds::CourseLen, &ifds::s_FldProp_CourseLen )
, PSEProgramLen_( ifds::PSEProgramLen, &ifds::s_FldProp_PSEProgramLen )
, PSEProgramType_( ifds::PSEProgramType, &ifds::s_FldProp_PSEProgramType )
, PSEProgramYear_( ifds::PSEProgramYear, &ifds::s_FldProp_PSEProgramYear )
, EduInstPstl_( ifds::EduInstPstl, &ifds::s_FldProp_EduInstPstl )
{
   cFields_ = 9;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0404_VW::~dsi_DSTC0404_VW()
{
}

BFDataImpl* dsi_DSTC0404_VW::clone()
{
   dsi_DSTC0404_VW* p = new dsi_DSTC0404_VW;
   p->RESPBenefId_ = RESPBenefId_;
   p->RESPBenefName_ = RESPBenefName_;
   p->RESPBenefLastName_ = RESPBenefLastName_;
   p->CourseStart_ = CourseStart_;
   p->CourseLen_ = CourseLen_;
   p->PSEProgramLen_ = PSEProgramLen_;
   p->PSEProgramType_ = PSEProgramType_;
   p->PSEProgramYear_ = PSEProgramYear_;
   p->EduInstPstl_ = EduInstPstl_;
   return(p);
}

BFDataField* dsi_DSTC0404_VW::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40006114: return ( &RESPBenefId_ ); break; // RESPBenefId
      case 40006159: return ( &RESPBenefName_ ); break; // RESPBenefName
      case 40006160: return ( &RESPBenefLastName_ ); break; // RESPBenefLastName
      case 40006162: return ( &CourseStart_ ); break; // CourseStart
      case 40006163: return ( &CourseLen_ ); break; // CourseLen
      case 40006164: return ( &PSEProgramLen_ ); break; // PSEProgramLen
      case 40006166: return ( &PSEProgramType_ ); break; // PSEProgramType
      case 40006168: return ( &PSEProgramYear_ ); break; // PSEProgramYear
      case 40006170: return ( &EduInstPstl_ ); break; // EduInstPstl
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0404_VW::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0404_VW* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0404_VW::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 9 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &RESPBenefId_; break;
            case 1: aFlds_[1] = &RESPBenefName_; break;
            case 2: aFlds_[2] = &RESPBenefLastName_; break;
            case 3: aFlds_[3] = &CourseStart_; break;
            case 4: aFlds_[4] = &CourseLen_; break;
            case 5: aFlds_[5] = &PSEProgramLen_; break;
            case 6: aFlds_[6] = &PSEProgramType_; break;
            case 7: aFlds_[7] = &PSEProgramYear_; break;
            case 8: aFlds_[8] = &EduInstPstl_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0404_VW::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0404_VW* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0404_VW::getLargestDefinedField( void ) const
{
   return( 60 );
}

unsigned long dsi_DSTC0404_VW::getDefinedByteLength( void ) const
{
   return( 257 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0404_VW::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0404_VW::fieldExists( id );
}

bool dsi_DSTC0404_VW::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40006114: return( true );
      case 40006159: return( true );
      case 40006160: return( true );
      case 40006162: return( true );
      case 40006163: return( true );
      case 40006164: return( true );
      case 40006166: return( true );
      case 40006168: return( true );
      case 40006170: return( true );
   }
   return false;
}

