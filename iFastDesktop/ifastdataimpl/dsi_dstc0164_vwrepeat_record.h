// BFDataImpl header file for DataSet DSTC0164.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId FundCode;
   extern const BFTextFieldId FundType;
   extern const BFTextFieldId PriceAtClass;
   extern const BFDateFieldId EffectiveDate;
   extern const BFDateFieldId StopDate;
   extern const BFNumericFieldId ClassStartIdx;
   extern const BFNumericFieldId ClassEndIdx;
   extern const BFTextFieldId EShortName;
   extern const BFTextFieldId OthShortName;
   extern const BFNumericFieldId RepeatCount;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_FundCode;
   extern const BFDataFieldProperties s_FldProp_FundType;
   extern const BFDataFieldProperties s_FldProp_PriceAtClass;
   extern const BFDataFieldProperties s_FldProp_EffectiveDate;
   extern const BFDataFieldProperties s_FldProp_StopDate;
   extern const BFDataFieldProperties s_FldProp_ClassStartIdx;
   extern const BFDataFieldProperties s_FldProp_ClassEndIdx;
   extern const BFDataFieldProperties s_FldProp_EShortName;
   extern const BFDataFieldProperties s_FldProp_OthShortName;
   extern const BFDataFieldProperties s_FldProp_RepeatCount;
}


class dsi_DSTC0164_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0164_VWRepeat_Record();
   virtual ~dsi_DSTC0164_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[10];
   // Field Declarations
   BFTextField<200> FundCode_;
   BFTextField_60 FundType_;
   BFTextField_1 PriceAtClass_;
   BFDateField EffectiveDate_;
   BFDateField StopDate_;
   BFNumericField ClassStartIdx_;
   BFNumericField ClassEndIdx_;
   BFTextField_60 EShortName_;
   BFTextField<100> OthShortName_;
   BFNumericField RepeatCount_;

};
