// Data Field Properties
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdataid.hpp>
#include "ifast_substitutions.h"
#include "ifast_masks.h"

namespace ifds
{
   extern const BFTextFieldId Commissionable;
   extern const BFDecimalFieldId UnitsTotal;
   extern const BFTextFieldId GuarActive;
   extern const BFTextFieldId HistoricalType;
   extern const BFDataId DSTC0289_REQ;
   extern const BFTextFieldId InventorySummHeading;
   extern const BFDateFieldId LastIntAccDate;
   extern const BFTextFieldId IntAccrualMthd;
   extern const BFNumericFieldId DailyFeeRid;
   extern const BFTextFieldId GuarStatus;
   extern const BFTextFieldId FndMrgRedCod;
   extern const BFTextFieldId ExclFeeCode;
   extern const BFTextFieldId AllocAtCost;
   extern const BFTextFieldId Networkcontrolind;
   extern const BFTextFieldId NSCCCompliant;
   extern const BFTextFieldId ClearingFirm;
   extern const BFTextFieldId NSCCCurrencyList;
   extern const BFTextFieldId NSCCPaymentFor;
   extern const BFTextFieldId FileTypeD;
   extern const BFTextFieldId PaymentInstructionsPaymentFor;
   extern const BFTextFieldId FileTypeJ;
   extern const BFTextFieldId NSCCDummyDistributionPayType;
   extern const BFTextFieldId NSCCMFRDistributionPay;
   extern const BFDateFieldId LiveRunDate;
   extern const BFTextFieldId UnsettleWithAMSFund;
   extern const BFTextFieldId PendingWithAMSFund;
   extern const BFTextFieldId CashDateXEdit;
   extern const BFTextFieldId AMSEligible;
   extern const BFTextFieldId RiskLevel;
   extern const BFTextFieldId HighestEntityRisk;
   extern const BFTextFieldId EntityRiskLevel;
   extern const BFTextFieldId LSIFPAC;
   extern const BFTextFieldId STTRFeeExclRedCodeList;
   extern const BFDecimalFieldId FedClawback;
   extern const BFDecimalFieldId ProvClawback;
   extern const BFTextFieldId TraceNo;
   extern const BFDateFieldId MatureDate;
   extern const BFTextFieldId ReceiptStatus;
   extern const BFTextFieldId TaxJuris;
   extern const BFDecimalFieldId TotalCBFFreeUnits;
   extern const BFIntegerFieldId ReceiptNumber;
   extern const BFTextFieldId ShortTermFee;
   extern const BFTextFieldId ActiveOnly;
   extern const BFTextFieldId AWD_OBJECT_ID;
   extern const BFTextFieldId isLSIF;
   extern const BFTextFieldId HypoRedSummaryAmountHeadingSetWithLSIF;
   extern const BFTextFieldId HypoRedSummaryUnitsHeadingSetWithLSIF;
   extern const BFTextFieldId HypoRedTotalHeadingSetWithLSIF;
   extern const BFDecimalFieldId AdditionalProvClawback;
   extern const BFTextFieldId ProductCtrlCode;
   extern const BFTextFieldId ActiveCode;
   extern const BFDataId DSTC0291_REQ;
   extern const BFDataId DSTC0291_VW;
   extern const BFDataId DSTC0291_VWRepeat_Record;
   extern const BFDataId DSTC0292_REQ;
   extern const BFDataId DSTC0292_VW;
   extern const BFDataId DSTC0292_VWRepeat_Record;
   extern const BFTextFieldId AWDRemark;
   extern const BFTextFieldId HypoRedDetailAmountHeadingSetWithLSIF;
   extern const BFTextFieldId HypoRedDetailUnitsHeadingSetWithLSIF;
   extern const BFTextFieldId LSIFCode;
   extern const BFDataId DSTC0295_REQ;
   extern const BFDataId DSTC0295_VW;
   extern const BFDataId DSTC0295_VWRepeat_Record;
   extern const BFIntegerFieldId AvailOnInput;
   extern const BFTextFieldId LSIFDSCOverrideCode;
   extern const BFDataId DSTC0296_REQ;
   extern const BFDataId DSTC0296_VW;
   extern const BFDataId DSTC0296_VWRepeat_Record;
   extern const BFTextFieldId TradeRolloverAttribute;
   extern const BFTextFieldId AmountTypeRollover;
   extern const BFDecimalFieldId OriginalTotalUnits;
   extern const BFTextFieldId InventoryDetailsHeading;
   extern const BFTextFieldId RedCodeChrERSTTRFeeXEdit;
   extern const BFTextFieldId FromToFundClassChrERSTTRFeeXEdit;
   extern const BFTextFieldId StopCommissionRebate;
   extern const BFDecimalFieldId ClawBackTotal;
   extern const BFDataId DSTC0294_REQ;
   extern const BFDataId DSTC0294_VW;
   extern const BFDecimalFieldId DomesticACBAmtBefore;
   extern const BFDecimalFieldId DomesticPrcntBefore;
   extern const BFDecimalFieldId DomesticACBCAmtAfter;
   extern const BFDecimalFieldId DomesticPrcntAfter;
   extern const BFDecimalFieldId FrgnACBAmtBefore;
   extern const BFDecimalFieldId FrgnPrcntBefore;
   extern const BFDecimalFieldId FrgnACBAmtAfter;
   extern const BFDecimalFieldId FrgnPrcntAfter;
   extern const BFDecimalFieldId FrgnAllowedPrcntBefore;
   extern const BFDecimalFieldId FrgnAllowedAmtBefore;
   extern const BFTextFieldId HypoTransType;
   extern const BFDecimalFieldId FrgnAllowedAmtAfter;
   extern const BFDecimalFieldId FrgnAllowedPrcntAfter;
   extern const BFDecimalFieldId ACBTotalPrcntAfter;
   extern const BFDecimalFieldId ACBTotalPrcntBefore;
   extern const BFDecimalFieldId ACBTotalAmtBefore;
   extern const BFDecimalFieldId ACBTotalAmtAfter;
   extern const BFDecimalFieldId LSIFUnitsAvail;
   extern const BFTextFieldId EqualizationActive;
   extern const BFTextFieldId FromFundName;
   extern const BFTextFieldId ToFundName;
   extern const BFTextFieldId IDAccess;
   extern const BFDataId DSTC0297_REQ;
   extern const BFDataId DSTC0297_VW;
   extern const BFTextFieldId DistribCoopAgrmnt;
   extern const BFDataId DSTC0299_REQ;
   extern const BFDataId DSTC0299_VW;
   extern const BFDataId DSTC0299_VWRepeat_Record;
   extern const BFDataId DSTC0300_REQ;
   extern const BFDataId DSTC0300_REQRepeat_Record;
   extern const BFDataId DSTC0300_VW;
   extern const BFTextFieldId ShrFundSpAgrmntHeading;
   extern const BFTextFieldId FundSponsorFeeModelUsing;
   extern const BFTextFieldId FundSponsorFeeModelLabel;
   extern const BFTextFieldId FundSponsorFeeModelSearchCriteria;
   extern const BFTextFieldId FundSponsorFeeModelSearchCriteriaNo;
   extern const BFDecimalFieldId DeregAmtYrToDate;
   extern const BFIntegerFieldId TaxExemptId;
   extern const BFTextFieldId TaxExType;
   extern const BFDecimalFieldId ExemptAmtOrig;
   extern const BFDecimalFieldId ExemptAmountUsed;
   extern const BFDecimalFieldId ExemptAmtRemain;
   extern const BFDataId DSTC0301_REQ;
   extern const BFDataId DSTC0301_VW;
   extern const BFDataId DSTC0301_VWRepeat_Record;
   extern const BFDataId DSTC0302_VW;
   extern const BFDataId DSTC0302_REQ;
   extern const BFDataId DSTC0302_REQRepeat_Record;
   extern const BFTextFieldId StopRedSettle;
   extern const BFTextFieldId RegistrationInfo;
   extern const BFTextFieldId ShrFndSpAgrExists;
   extern const BFDecimalFieldId EligibleRedempTotal;
   extern const BFDecimalFieldId EligibleNetTotal;
   extern const BFIntegerFieldId EligibleCount;
   extern const BFTextFieldId RegisteredTaxTypes;
   extern const BFDecimalFieldId TaxExemptAmt;
   extern const BFTextFieldId TaxExemptAuthorizationHeading;
   extern const BFTextFieldId TradeFeeTypeList;
   extern const BFTextFieldId FeeModelCode;
   extern const BFTextFieldId RefNum;
   extern const BFTextFieldId FundWKN;
   extern const BFTextFieldId FundISIN;
   extern const BFTextFieldId FundToWKN;
   extern const BFTextFieldId FundToISIN;
   extern const BFTextFieldId AcqFeeOption;
   extern const BFTextFieldId SettleDateOverriden;
   extern const BFTextFieldId ValidSettleCurr;
   extern const BFTextFieldId UnitsCal;
   extern const BFTextFieldId PUEVCapable;
   extern const BFTextFieldId ForceVerify;
   extern const BFTextFieldId FndSpFeeModelID;
   extern const BFDataId DSTC0298_REQ;
   extern const BFDataId DSTC0298_VW;

   //------------------------------------------------------------------
   // Field s_FldProp_Commissionable (4400)
   //------------------------------------------------------------------
   const DString& s_FldProp_Commissionable_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4400_1( I_("N") );
      return( dstrDefValue_4400_1 );
   }
   const DString& s_FldProp_Commissionable_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4400_1( I_("Commissionable") );
      return( dstrFldLabel_4400_1 );
   }
   PBF_SSC subset_super_chooser_2_4400( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Commissionable(
       BFDataFieldProperties::Type::text // field is a text field
      ,Commissionable // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Commissionable_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Commissionable_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4400 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnitsTotal (4401)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnitsTotal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4401_1( I_("0.0000") );
      return( dstrDefValue_4401_1 );
   }
   double s_FldProp_UnitsTotal_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000 );
   }
   const DString& s_FldProp_UnitsTotal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4401_1( I_("UnitsTotal") );
      return( dstrFldLabel_4401_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnitsTotal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnitsTotal // fieldId
      ,24 // length
      ,0 // minimum length
      ,4 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_UnitsTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnitsTotal_d_DVF // default value
      ,s_FldProp_UnitsTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarActive (4406)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarActive_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4406_1( I_("") );
      return( dstrDefValue_4406_1 );
   }
   const DString& s_FldProp_GuarActive_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4406_1( I_("GuarActive") );
      return( dstrFldLabel_4406_1 );
   }
   PBF_SSC subset_super_chooser_2_4406( const ClientLocale& locale )
   {
      return chooser_ss_002_553; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarActive(
       BFDataFieldProperties::Type::text // field is a text field
      ,GuarActive // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GuarActive_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GuarActive_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4406 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HistoricalType (4407)
   //------------------------------------------------------------------
   const DString& s_FldProp_HistoricalType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4407_1( I_("") );
      return( dstrDefValue_4407_1 );
   }
   const DString& s_FldProp_HistoricalType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4407_1( I_("HistoricalType") );
      return( dstrFldLabel_4407_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HistoricalType(
       BFDataFieldProperties::Type::text // field is a text field
      ,HistoricalType // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HistoricalType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HistoricalType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InventorySummHeading (4409)
   //------------------------------------------------------------------
   const DString& s_FldProp_InventorySummHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4409_1( I_("") );
      return( dstrDefValue_4409_1 );
   }
   const DString& s_FldProp_InventorySummHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4409_1( I_("InventorySummHeading") );
      return( dstrFldLabel_4409_1 );
   }
   PBF_SSC subset_super_chooser_2_4409( const ClientLocale& locale )
   {
      return chooser_ss_002_552; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InventorySummHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,InventorySummHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InventorySummHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InventorySummHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4409 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastIntAccDate (4410)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastIntAccDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4410_7( I_("") );
      return( dstrDefValue_4410_7 );
   }
   const DString& s_FldProp_LastIntAccDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4410_7( I_("LastIntAccDate") );
      return( dstrFldLabel_4410_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastIntAccDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,LastIntAccDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LastIntAccDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LastIntAccDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IntAccrualMthd (4411)
   //------------------------------------------------------------------
   const DString& s_FldProp_IntAccrualMthd_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4411_1( I_("0") );
      return( dstrDefValue_4411_1 );
   }
   const DString& s_FldProp_IntAccrualMthd_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4411_1( I_("IntAccrualMthd") );
      return( dstrFldLabel_4411_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IntAccrualMthd(
       BFDataFieldProperties::Type::text // field is a text field
      ,IntAccrualMthd // fieldId
      ,6 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IntAccrualMthd_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IntAccrualMthd_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DailyFeeRid (4412)
   //------------------------------------------------------------------
   const DString& s_FldProp_DailyFeeRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4412_1( I_("") );
      return( dstrDefValue_4412_1 );
   }
   DIINT64 s_FldProp_DailyFeeRid_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_DailyFeeRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4412_1( I_("DailyFeeRid") );
      return( dstrFldLabel_4412_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DailyFeeRid(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,DailyFeeRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DailyFeeRid_s_DVF // default value
      ,s_FldProp_DailyFeeRid_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_DailyFeeRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GuarStatus (4413)
   //------------------------------------------------------------------
   const DString& s_FldProp_GuarStatus_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4413_1( I_("") );
      return( dstrDefValue_4413_1 );
   }
   const DString& s_FldProp_GuarStatus_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4413_1( I_("GuarStatus") );
      return( dstrFldLabel_4413_1 );
   }
   PBF_SSC subset_super_chooser_2_4413( const ClientLocale& locale )
   {
      return chooser_ss_002_556; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GuarStatus(
       BFDataFieldProperties::Type::text // field is a text field
      ,GuarStatus // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GuarStatus_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GuarStatus_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4413 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FndMrgRedCod (4414)
   //------------------------------------------------------------------
   const DString& s_FldProp_FndMrgRedCod_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4414_1( I_("") );
      return( dstrDefValue_4414_1 );
   }
   const DString& s_FldProp_FndMrgRedCod_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4414_1( I_("FndMrgRedCod") );
      return( dstrFldLabel_4414_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FndMrgRedCod(
       BFDataFieldProperties::Type::text // field is a text field
      ,FndMrgRedCod // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FndMrgRedCod_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FndMrgRedCod_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExclFeeCode (4415)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExclFeeCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4415_1( I_("") );
      return( dstrDefValue_4415_1 );
   }
   const DString& s_FldProp_ExclFeeCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4415_1( I_("ExclFeeCode") );
      return( dstrFldLabel_4415_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExclFeeCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,ExclFeeCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ExclFeeCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ExclFeeCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocAtCost (4416)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocAtCost_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4416_1( I_("") );
      return( dstrDefValue_4416_1 );
   }
   const DString& s_FldProp_AllocAtCost_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4416_1( I_("AllocAtCost") );
      return( dstrFldLabel_4416_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocAtCost(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllocAtCost // fieldId
      ,2 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllocAtCost_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllocAtCost_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Networkcontrolind (4418)
   //------------------------------------------------------------------
   const DString& s_FldProp_Networkcontrolind_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4418_1( I_("0") );
      return( dstrDefValue_4418_1 );
   }
   const DString& s_FldProp_Networkcontrolind_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4418_1( I_("Networkcontrolind") );
      return( dstrFldLabel_4418_1 );
   }
   PBF_SSC subset_super_chooser_2_4418( const ClientLocale& locale )
   {
      return chooser_ss_002_557; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Networkcontrolind(
       BFDataFieldProperties::Type::text // field is a text field
      ,Networkcontrolind // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Networkcontrolind_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Networkcontrolind_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4418 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NSCCCompliant (4419)
   //------------------------------------------------------------------
   const DString& s_FldProp_NSCCCompliant_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4419_1( I_("N") );
      return( dstrDefValue_4419_1 );
   }
   const DString& s_FldProp_NSCCCompliant_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4419_1( I_("NSCCCompliant") );
      return( dstrFldLabel_4419_1 );
   }
   PBF_SSC subset_super_chooser_2_4419( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NSCCCompliant(
       BFDataFieldProperties::Type::text // field is a text field
      ,NSCCCompliant // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NSCCCompliant_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NSCCCompliant_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4419 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ClearingFirm (4420)
   //------------------------------------------------------------------
   const DString& s_FldProp_ClearingFirm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4420_1( I_("") );
      return( dstrDefValue_4420_1 );
   }
   const DString& s_FldProp_ClearingFirm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4420_1( I_("ClearingFirm") );
      return( dstrFldLabel_4420_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ClearingFirm(
       BFDataFieldProperties::Type::text // field is a text field
      ,ClearingFirm // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ClearingFirm_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ClearingFirm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NSCCCurrencyList (4421)
   //------------------------------------------------------------------
   const DString& s_FldProp_NSCCCurrencyList_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4421_1( I_("") );
      return( dstrDefValue_4421_1 );
   }
   const DString& s_FldProp_NSCCCurrencyList_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4421_1( I_("NSCCCurrencyList") );
      return( dstrFldLabel_4421_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NSCCCurrencyList(
       BFDataFieldProperties::Type::text // field is a text field
      ,NSCCCurrencyList // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NSCCCurrencyList_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NSCCCurrencyList_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NSCCPaymentFor (4422)
   //------------------------------------------------------------------
   const DString& s_FldProp_NSCCPaymentFor_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4422_1( I_("") );
      return( dstrDefValue_4422_1 );
   }
   const DString& s_FldProp_NSCCPaymentFor_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4422_1( I_("NSCCPaymentFor") );
      return( dstrFldLabel_4422_1 );
   }
   PBF_SSC subset_super_chooser_2_4422( const ClientLocale& locale )
   {
      return chooser_ss_002_558; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NSCCPaymentFor(
       BFDataFieldProperties::Type::text // field is a text field
      ,NSCCPaymentFor // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NSCCPaymentFor_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NSCCPaymentFor_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4422 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FileTypeD (4424)
   //------------------------------------------------------------------
   const DString& s_FldProp_FileTypeD_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4424_1( I_("") );
      return( dstrDefValue_4424_1 );
   }
   const DString& s_FldProp_FileTypeD_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4424_1( I_("FileTypeD") );
      return( dstrFldLabel_4424_1 );
   }
   PBF_SSC subset_super_chooser_2_4424( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FileTypeD(
       BFDataFieldProperties::Type::text // field is a text field
      ,FileTypeD // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FileTypeD_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FileTypeD_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4424 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PaymentInstructionsPaymentFor (4425)
   //------------------------------------------------------------------
   const DString& s_FldProp_PaymentInstructionsPaymentFor_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4425_1( I_("") );
      return( dstrDefValue_4425_1 );
   }
   const DString& s_FldProp_PaymentInstructionsPaymentFor_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4425_1( I_("PaymentInstructionsPaymentFor") );
      return( dstrFldLabel_4425_1 );
   }
   PBF_SSC subset_super_chooser_2_4425( const ClientLocale& locale )
   {
      return chooser_ss_002_471; // defined in ifast_substitutions_chooser_15.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PaymentInstructionsPaymentFor(
       BFDataFieldProperties::Type::text // field is a text field
      ,PaymentInstructionsPaymentFor // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PaymentInstructionsPaymentFor_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PaymentInstructionsPaymentFor_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4425 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FileTypeJ (4426)
   //------------------------------------------------------------------
   const DString& s_FldProp_FileTypeJ_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4426_7( I_("") );
      return( dstrDefValue_4426_7 );
   }
   const DString& s_FldProp_FileTypeJ_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4426_7( I_("FileTypeJ") );
      return( dstrFldLabel_4426_7 );
   }
   PBF_SSC subset_super_chooser_2_4426( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FileTypeJ(
       BFDataFieldProperties::Type::text // field is a text field
      ,FileTypeJ // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FileTypeJ_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FileTypeJ_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4426 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NSCCDummyDistributionPayType (4427)
   //------------------------------------------------------------------
   const DString& s_FldProp_NSCCDummyDistributionPayType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4427_1( I_("") );
      return( dstrDefValue_4427_1 );
   }
   const DString& s_FldProp_NSCCDummyDistributionPayType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4427_1( I_("NSCCDummyDistributionPayType") );
      return( dstrFldLabel_4427_1 );
   }
   PBF_SSC subset_super_chooser_2_4427( const ClientLocale& locale )
   {
      return chooser_ss_002_560; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NSCCDummyDistributionPayType(
       BFDataFieldProperties::Type::text // field is a text field
      ,NSCCDummyDistributionPayType // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NSCCDummyDistributionPayType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NSCCDummyDistributionPayType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4427 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NSCCMFRDistributionPay (4428)
   //------------------------------------------------------------------
   const DString& s_FldProp_NSCCMFRDistributionPay_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4428_1( I_("") );
      return( dstrDefValue_4428_1 );
   }
   const DString& s_FldProp_NSCCMFRDistributionPay_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4428_1( I_("NSCCMFRDistributionPay") );
      return( dstrFldLabel_4428_1 );
   }
   PBF_SSC subset_super_chooser_2_4428( const ClientLocale& locale )
   {
      return chooser_ss_002_561; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NSCCMFRDistributionPay(
       BFDataFieldProperties::Type::text // field is a text field
      ,NSCCMFRDistributionPay // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NSCCMFRDistributionPay_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NSCCMFRDistributionPay_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4428 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LiveRunDate (4429)
   //------------------------------------------------------------------
   const DString& s_FldProp_LiveRunDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4429_1( I_("") );
      return( dstrDefValue_4429_1 );
   }
   const DString& s_FldProp_LiveRunDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4429_1( I_("LiveRunDate") );
      return( dstrFldLabel_4429_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LiveRunDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,LiveRunDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LiveRunDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LiveRunDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnsettleWithAMSFund (4431)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnsettleWithAMSFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4431_1( I_("Y") );
      return( dstrDefValue_4431_1 );
   }
   const DString& s_FldProp_UnsettleWithAMSFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4431_1( I_("UnsettleWithAMSFund") );
      return( dstrFldLabel_4431_1 );
   }
   PBF_SSC subset_super_chooser_2_4431( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnsettleWithAMSFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,UnsettleWithAMSFund // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_UnsettleWithAMSFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_UnsettleWithAMSFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4431 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PendingWithAMSFund (4432)
   //------------------------------------------------------------------
   const DString& s_FldProp_PendingWithAMSFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4432_1( I_("Y") );
      return( dstrDefValue_4432_1 );
   }
   const DString& s_FldProp_PendingWithAMSFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4432_1( I_("PendingWithAMSFund") );
      return( dstrFldLabel_4432_1 );
   }
   PBF_SSC subset_super_chooser_2_4432( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PendingWithAMSFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,PendingWithAMSFund // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PendingWithAMSFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PendingWithAMSFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4432 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CashDateXEdit (4433)
   //------------------------------------------------------------------
   const DString& s_FldProp_CashDateXEdit_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4433_1( I_("") );
      return( dstrDefValue_4433_1 );
   }
   const DString& s_FldProp_CashDateXEdit_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4433_1( I_("CashDateXEdit") );
      return( dstrFldLabel_4433_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CashDateXEdit(
       BFDataFieldProperties::Type::text // field is a text field
      ,CashDateXEdit // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CashDateXEdit_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CashDateXEdit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AMSEligible (4434)
   //------------------------------------------------------------------
   const DString& s_FldProp_AMSEligible_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4434_1( I_("") );
      return( dstrDefValue_4434_1 );
   }
   const DString& s_FldProp_AMSEligible_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4434_1( I_("AMSEligible") );
      return( dstrFldLabel_4434_1 );
   }
   PBF_SSC subset_super_chooser_2_4434( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AMSEligible(
       BFDataFieldProperties::Type::text // field is a text field
      ,AMSEligible // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AMSEligible_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AMSEligible_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4434 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RiskLevel (4435)
   //------------------------------------------------------------------
   const DString& s_FldProp_RiskLevel_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4435_1( I_("") );
      return( dstrDefValue_4435_1 );
   }
   const DString& s_FldProp_RiskLevel_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4435_1( I_("RiskLevel") );
      return( dstrFldLabel_4435_1 );
   }
   PBF_SSC subset_super_chooser_2_4435( const ClientLocale& locale )
   {
      return chooser_ss_002_562; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RiskLevel(
       BFDataFieldProperties::Type::text // field is a text field
      ,RiskLevel // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RiskLevel_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RiskLevel_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4435 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HighestEntityRisk (4436)
   //------------------------------------------------------------------
   const DString& s_FldProp_HighestEntityRisk_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4436_1( I_("") );
      return( dstrDefValue_4436_1 );
   }
   const DString& s_FldProp_HighestEntityRisk_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4436_1( I_("HighestEntityRisk") );
      return( dstrFldLabel_4436_1 );
   }
   PBF_SSC subset_super_chooser_2_4436( const ClientLocale& locale )
   {
      return chooser_ss_002_562; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HighestEntityRisk(
       BFDataFieldProperties::Type::text // field is a text field
      ,HighestEntityRisk // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HighestEntityRisk_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HighestEntityRisk_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4436 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityRiskLevel (4437)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityRiskLevel_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4437_1( I_("") );
      return( dstrDefValue_4437_1 );
   }
   const DString& s_FldProp_EntityRiskLevel_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4437_1( I_("EntityRiskLevel") );
      return( dstrFldLabel_4437_1 );
   }
   PBF_SSC subset_super_chooser_2_4437( const ClientLocale& locale )
   {
      return chooser_ss_002_562; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityRiskLevel(
       BFDataFieldProperties::Type::text // field is a text field
      ,EntityRiskLevel // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EntityRiskLevel_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EntityRiskLevel_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4437 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LSIFPAC (4439)
   //------------------------------------------------------------------
   const DString& s_FldProp_LSIFPAC_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4439_1( I_("N") );
      return( dstrDefValue_4439_1 );
   }
   const DString& s_FldProp_LSIFPAC_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4439_1( I_("LSIFPAC") );
      return( dstrFldLabel_4439_1 );
   }
   PBF_SSC subset_super_chooser_2_4439( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LSIFPAC(
       BFDataFieldProperties::Type::text // field is a text field
      ,LSIFPAC // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LSIFPAC_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LSIFPAC_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4439 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_STTRFeeExclRedCodeList (4440)
   //------------------------------------------------------------------
   const DString& s_FldProp_STTRFeeExclRedCodeList_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4440_1( I_("") );
      return( dstrDefValue_4440_1 );
   }
   const DString& s_FldProp_STTRFeeExclRedCodeList_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4440_1( I_("ExclRedCodes") );
      return( dstrFldLabel_4440_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_STTRFeeExclRedCodeList(
       BFDataFieldProperties::Type::text // field is a text field
      ,STTRFeeExclRedCodeList // fieldId
      ,100 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_STTRFeeExclRedCodeList_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_STTRFeeExclRedCodeList_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FedClawback (4441)
   //------------------------------------------------------------------
   const DString& s_FldProp_FedClawback_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4441_1( I_("") );
      return( dstrDefValue_4441_1 );
   }
   double s_FldProp_FedClawback_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FedClawback_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4441_1( I_("FedClawback") );
      return( dstrFldLabel_4441_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FedClawback(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FedClawback // fieldId
      ,23 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FedClawback_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FedClawback_d_DVF // default value
      ,s_FldProp_FedClawback_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvClawback (4442)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvClawback_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4442_7( I_("") );
      return( dstrDefValue_4442_7 );
   }
   double s_FldProp_ProvClawback_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ProvClawback_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4442_7( I_("ProvClawback") );
      return( dstrFldLabel_4442_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvClawback(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ProvClawback // fieldId
      ,23 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ProvClawback_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ProvClawback_d_DVF // default value
      ,s_FldProp_ProvClawback_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TraceNo (4444)
   //------------------------------------------------------------------
   const DString& s_FldProp_TraceNo_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4444_1( I_("") );
      return( dstrDefValue_4444_1 );
   }
   const DString& s_FldProp_TraceNo_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4444_1( I_("TraceNo") );
      return( dstrFldLabel_4444_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TraceNo(
       BFDataFieldProperties::Type::text // field is a text field
      ,TraceNo // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TraceNo_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TraceNo_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MatureDate (4445)
   //------------------------------------------------------------------
   const DString& s_FldProp_MatureDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4445_1( I_("") );
      return( dstrDefValue_4445_1 );
   }
   const DString& s_FldProp_MatureDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4445_1( I_("MatureDate") );
      return( dstrFldLabel_4445_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MatureDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,MatureDate // fieldId
      ,8 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MatureDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MatureDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ReceiptStatus (4446)
   //------------------------------------------------------------------
   const DString& s_FldProp_ReceiptStatus_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4446_1( I_("") );
      return( dstrDefValue_4446_1 );
   }
   const DString& s_FldProp_ReceiptStatus_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4446_1( I_("ReceiptStatus") );
      return( dstrFldLabel_4446_1 );
   }
   PBF_SSC subset_super_chooser_2_4446( const ClientLocale& locale )
   {
      return chooser_ss_002_567; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ReceiptStatus(
       BFDataFieldProperties::Type::text // field is a text field
      ,ReceiptStatus // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ReceiptStatus_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ReceiptStatus_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4446 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxJuris (4447)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxJuris_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4447_1( I_("") );
      return( dstrDefValue_4447_1 );
   }
   const DString& s_FldProp_TaxJuris_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4447_1( I_("TaxJuris") );
      return( dstrFldLabel_4447_1 );
   }
   PBF_SSC subset_super_chooser_2_4447( const ClientLocale& locale )
   {
      return chooser_ss_002_013; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxJuris(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxJuris // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxJuris_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxJuris_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4447 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TotalCBFFreeUnits (4448)
   //------------------------------------------------------------------
   const DString& s_FldProp_TotalCBFFreeUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4448_1( I_("0.0000") );
      return( dstrDefValue_4448_1 );
   }
   double s_FldProp_TotalCBFFreeUnits_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000 );
   }
   const DString& s_FldProp_TotalCBFFreeUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4448_1( I_("TotalCBFFreeUnits") );
      return( dstrFldLabel_4448_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TotalCBFFreeUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TotalCBFFreeUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,4 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_TotalCBFFreeUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TotalCBFFreeUnits_d_DVF // default value
      ,s_FldProp_TotalCBFFreeUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ReceiptNumber (4449)
   //------------------------------------------------------------------
   const DString& s_FldProp_ReceiptNumber_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4449_1( I_("") );
      return( dstrDefValue_4449_1 );
   }
   DIINT64 s_FldProp_ReceiptNumber_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_ReceiptNumber_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4449_1( I_("ReceiptNumber") );
      return( dstrFldLabel_4449_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ReceiptNumber(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,ReceiptNumber // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ReceiptNumber_s_DVF // default value
      ,s_FldProp_ReceiptNumber_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_ReceiptNumber_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShortTermFee (4450)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShortTermFee_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4450_1( I_("") );
      return( dstrDefValue_4450_1 );
   }
   const DString& s_FldProp_ShortTermFee_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4450_1( I_("ShortTermFee") );
      return( dstrFldLabel_4450_1 );
   }
   PBF_SSC subset_super_chooser_2_4450( const ClientLocale& locale )
   {
      return chooser_ss_002_524; // defined in ifast_substitutions_chooser_17.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShortTermFee(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShortTermFee // fieldId
      ,3 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShortTermFee_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShortTermFee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4450 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ActiveOnly (4452)
   //------------------------------------------------------------------
   const DString& s_FldProp_ActiveOnly_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4452_1( I_("N") );
      return( dstrDefValue_4452_1 );
   }
   const DString& s_FldProp_ActiveOnly_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4452_1( I_("ActiveOnly") );
      return( dstrFldLabel_4452_1 );
   }
   PBF_SSC subset_super_chooser_2_4452( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ActiveOnly(
       BFDataFieldProperties::Type::text // field is a text field
      ,ActiveOnly // fieldId
      ,3 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ActiveOnly_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ActiveOnly_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4452 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AWD_OBJECT_ID (4453)
   //------------------------------------------------------------------
   const DString& s_FldProp_AWD_OBJECT_ID_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4453_1( I_("") );
      return( dstrDefValue_4453_1 );
   }
   const DString& s_FldProp_AWD_OBJECT_ID_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4453_1( I_("AWD_OBJECT_ID") );
      return( dstrFldLabel_4453_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AWD_OBJECT_ID(
       BFDataFieldProperties::Type::text // field is a text field
      ,AWD_OBJECT_ID // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AWD_OBJECT_ID_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AWD_OBJECT_ID_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_isLSIF (4454)
   //------------------------------------------------------------------
   const DString& s_FldProp_isLSIF_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4454_1( I_("") );
      return( dstrDefValue_4454_1 );
   }
   const DString& s_FldProp_isLSIF_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4454_1( I_("") );
      return( dstrFldLabel_4454_1 );
   }
   PBF_SSC subset_super_chooser_2_4454( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_isLSIF(
       BFDataFieldProperties::Type::text // field is a text field
      ,isLSIF // fieldId
      ,3 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_isLSIF_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_isLSIF_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4454 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HypoRedSummaryAmountHeadingSetWithLSIF (4455)
   //------------------------------------------------------------------
   const DString& s_FldProp_HypoRedSummaryAmountHeadingSetWithLSIF_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4455_1( I_("") );
      return( dstrDefValue_4455_1 );
   }
   const DString& s_FldProp_HypoRedSummaryAmountHeadingSetWithLSIF_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4455_1( I_("HypoRedSummaryAmountHeadingSetWithLSIF") );
      return( dstrFldLabel_4455_1 );
   }
   PBF_SSC subset_super_chooser_2_4455( const ClientLocale& locale )
   {
      return chooser_ss_002_563; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HypoRedSummaryAmountHeadingSetWithLSIF(
       BFDataFieldProperties::Type::text // field is a text field
      ,HypoRedSummaryAmountHeadingSetWithLSIF // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HypoRedSummaryAmountHeadingSetWithLSIF_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HypoRedSummaryAmountHeadingSetWithLSIF_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4455 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HypoRedSummaryUnitsHeadingSetWithLSIF (4456)
   //------------------------------------------------------------------
   const DString& s_FldProp_HypoRedSummaryUnitsHeadingSetWithLSIF_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4456_1( I_("") );
      return( dstrDefValue_4456_1 );
   }
   const DString& s_FldProp_HypoRedSummaryUnitsHeadingSetWithLSIF_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4456_1( I_("HypoRedSummaryUnitsHeadingSetWithLSIF") );
      return( dstrFldLabel_4456_1 );
   }
   PBF_SSC subset_super_chooser_2_4456( const ClientLocale& locale )
   {
      return chooser_ss_002_564; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HypoRedSummaryUnitsHeadingSetWithLSIF(
       BFDataFieldProperties::Type::text // field is a text field
      ,HypoRedSummaryUnitsHeadingSetWithLSIF // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HypoRedSummaryUnitsHeadingSetWithLSIF_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HypoRedSummaryUnitsHeadingSetWithLSIF_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4456 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HypoRedTotalHeadingSetWithLSIF (4457)
   //------------------------------------------------------------------
   const DString& s_FldProp_HypoRedTotalHeadingSetWithLSIF_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4457_1( I_("") );
      return( dstrDefValue_4457_1 );
   }
   const DString& s_FldProp_HypoRedTotalHeadingSetWithLSIF_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4457_1( I_("HypoRedTotalHeadingSetWithLSIF") );
      return( dstrFldLabel_4457_1 );
   }
   PBF_SSC subset_super_chooser_2_4457( const ClientLocale& locale )
   {
      return chooser_ss_002_565; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HypoRedTotalHeadingSetWithLSIF(
       BFDataFieldProperties::Type::text // field is a text field
      ,HypoRedTotalHeadingSetWithLSIF // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HypoRedTotalHeadingSetWithLSIF_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HypoRedTotalHeadingSetWithLSIF_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4457 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdditionalProvClawback (4462)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdditionalProvClawback_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4462_7( I_("") );
      return( dstrDefValue_4462_7 );
   }
   double s_FldProp_AdditionalProvClawback_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_AdditionalProvClawback_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4462_7( I_("AdditionalProvClawback") );
      return( dstrFldLabel_4462_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdditionalProvClawback(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AdditionalProvClawback // fieldId
      ,23 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_AdditionalProvClawback_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AdditionalProvClawback_d_DVF // default value
      ,s_FldProp_AdditionalProvClawback_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProductCtrlCode (4467)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProductCtrlCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4467_1( I_("") );
      return( dstrDefValue_4467_1 );
   }
   const DString& s_FldProp_ProductCtrlCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4467_1( I_("ProductCtrlCode") );
      return( dstrFldLabel_4467_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProductCtrlCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,ProductCtrlCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ProductCtrlCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ProductCtrlCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ActiveCode (4469)
   //------------------------------------------------------------------
   const DString& s_FldProp_ActiveCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4469_1( I_("") );
      return( dstrDefValue_4469_1 );
   }
   const DString& s_FldProp_ActiveCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4469_1( I_("ActiveCode") );
      return( dstrFldLabel_4469_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ActiveCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,ActiveCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ActiveCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ActiveCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AWDRemark (4478)
   //------------------------------------------------------------------
   const DString& s_FldProp_AWDRemark_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4478_1( I_("") );
      return( dstrDefValue_4478_1 );
   }
   const DString& s_FldProp_AWDRemark_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4478_1( I_("AWDRemark") );
      return( dstrFldLabel_4478_1 );
   }
   PBF_SSC subset_super_chooser_2_4478( const ClientLocale& locale )
   {
      return chooser_ss_002_572; // defined in ifast_substitutions_chooser_19.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AWDRemark(
       BFDataFieldProperties::Type::text // field is a text field
      ,AWDRemark // fieldId
      ,100 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AWDRemark_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AWDRemark_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4478 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HypoRedDetailAmountHeadingSetWithLSIF (4479)
   //------------------------------------------------------------------
   const DString& s_FldProp_HypoRedDetailAmountHeadingSetWithLSIF_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4479_1( I_("") );
      return( dstrDefValue_4479_1 );
   }
   const DString& s_FldProp_HypoRedDetailAmountHeadingSetWithLSIF_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4479_1( I_("HypoRedDetailAmountHeadingSetWithLSIF") );
      return( dstrFldLabel_4479_1 );
   }
   PBF_SSC subset_super_chooser_2_4479( const ClientLocale& locale )
   {
      return chooser_ss_002_568; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HypoRedDetailAmountHeadingSetWithLSIF(
       BFDataFieldProperties::Type::text // field is a text field
      ,HypoRedDetailAmountHeadingSetWithLSIF // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HypoRedDetailAmountHeadingSetWithLSIF_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HypoRedDetailAmountHeadingSetWithLSIF_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4479 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HypoRedDetailUnitsHeadingSetWithLSIF (4480)
   //------------------------------------------------------------------
   const DString& s_FldProp_HypoRedDetailUnitsHeadingSetWithLSIF_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4480_1( I_("") );
      return( dstrDefValue_4480_1 );
   }
   const DString& s_FldProp_HypoRedDetailUnitsHeadingSetWithLSIF_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4480_1( I_("HypoRedDetailUnitsHeadingSetWithLSIF") );
      return( dstrFldLabel_4480_1 );
   }
   PBF_SSC subset_super_chooser_2_4480( const ClientLocale& locale )
   {
      return chooser_ss_002_569; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HypoRedDetailUnitsHeadingSetWithLSIF(
       BFDataFieldProperties::Type::text // field is a text field
      ,HypoRedDetailUnitsHeadingSetWithLSIF // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HypoRedDetailUnitsHeadingSetWithLSIF_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HypoRedDetailUnitsHeadingSetWithLSIF_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4480 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LSIFCode (4484)
   //------------------------------------------------------------------
   const DString& s_FldProp_LSIFCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4484_1( I_("") );
      return( dstrDefValue_4484_1 );
   }
   const DString& s_FldProp_LSIFCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4484_1( I_("LSIFCode") );
      return( dstrFldLabel_4484_1 );
   }
   PBF_SSC subset_super_chooser_2_4484( const ClientLocale& locale )
   {
      return chooser_ss_002_570; // defined in ifast_substitutions_chooser_19.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LSIFCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,LSIFCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LSIFCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LSIFCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4484 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AvailOnInput (4488)
   //------------------------------------------------------------------
   const DString& s_FldProp_AvailOnInput_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4488_1( I_("") );
      return( dstrDefValue_4488_1 );
   }
   DIINT64 s_FldProp_AvailOnInput_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AvailOnInput_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4488_1( I_("LSIFCodeAvailOnInput") );
      return( dstrFldLabel_4488_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AvailOnInput(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,AvailOnInput // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AvailOnInput_s_DVF // default value
      ,s_FldProp_AvailOnInput_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AvailOnInput_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LSIFDSCOverrideCode (4489)
   //------------------------------------------------------------------
   const DString& s_FldProp_LSIFDSCOverrideCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4489_1( I_("") );
      return( dstrDefValue_4489_1 );
   }
   const DString& s_FldProp_LSIFDSCOverrideCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4489_1( I_("LSIFDSCOverrideCode") );
      return( dstrFldLabel_4489_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LSIFDSCOverrideCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,LSIFDSCOverrideCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LSIFDSCOverrideCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LSIFDSCOverrideCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradeRolloverAttribute (4493)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeRolloverAttribute_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4493_7( I_("") );
      return( dstrDefValue_4493_7 );
   }
   const DString& s_FldProp_TradeRolloverAttribute_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4493_7( I_("TradeRolloverAttribute") );
      return( dstrFldLabel_4493_7 );
   }
   PBF_SSC subset_super_chooser_2_4493( const ClientLocale& locale )
   {
      return chooser_ss_002_219; // defined in ifast_substitutions_chooser_7.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeRolloverAttribute(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeRolloverAttribute // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeRolloverAttribute_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeRolloverAttribute_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4493 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmountTypeRollover (4495)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmountTypeRollover_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4495_1( I_("") );
      return( dstrDefValue_4495_1 );
   }
   const DString& s_FldProp_AmountTypeRollover_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4495_1( I_("AmountTypeRollover") );
      return( dstrFldLabel_4495_1 );
   }
   PBF_SSC subset_super_chooser_2_4495( const ClientLocale& locale )
   {
      return chooser_ss_002_571; // defined in ifast_substitutions_chooser_19.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmountTypeRollover(
       BFDataFieldProperties::Type::text // field is a text field
      ,AmountTypeRollover // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AmountTypeRollover_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AmountTypeRollover_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4495 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OriginalTotalUnits (4498)
   //------------------------------------------------------------------
   const DString& s_FldProp_OriginalTotalUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4498_1( I_("0.0000") );
      return( dstrDefValue_4498_1 );
   }
   double s_FldProp_OriginalTotalUnits_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000 );
   }
   const DString& s_FldProp_OriginalTotalUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4498_1( I_("OriginalTotalUnits") );
      return( dstrFldLabel_4498_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OriginalTotalUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,OriginalTotalUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,4 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_OriginalTotalUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_OriginalTotalUnits_d_DVF // default value
      ,s_FldProp_OriginalTotalUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InventoryDetailsHeading (4499)
   //------------------------------------------------------------------
   const DString& s_FldProp_InventoryDetailsHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4499_1( I_("") );
      return( dstrDefValue_4499_1 );
   }
   const DString& s_FldProp_InventoryDetailsHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4499_1( I_("InventoryDetailsHeading") );
      return( dstrFldLabel_4499_1 );
   }
   PBF_SSC subset_super_chooser_2_4499( const ClientLocale& locale )
   {
      return chooser_ss_002_566; // defined in ifast_substitutions_chooser_18.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InventoryDetailsHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,InventoryDetailsHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InventoryDetailsHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InventoryDetailsHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4499 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RedCodeChrERSTTRFeeXEdit (4500)
   //------------------------------------------------------------------
   const DString& s_FldProp_RedCodeChrERSTTRFeeXEdit_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4500_1( I_("") );
      return( dstrDefValue_4500_1 );
   }
   const DString& s_FldProp_RedCodeChrERSTTRFeeXEdit_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4500_1( I_("RedChrERSTTRFeeXEdit") );
      return( dstrFldLabel_4500_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RedCodeChrERSTTRFeeXEdit(
       BFDataFieldProperties::Type::text // field is a text field
      ,RedCodeChrERSTTRFeeXEdit // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RedCodeChrERSTTRFeeXEdit_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RedCodeChrERSTTRFeeXEdit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FromToFundClassChrERSTTRFeeXEdit (4501)
   //------------------------------------------------------------------
   const DString& s_FldProp_FromToFundClassChrERSTTRFeeXEdit_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4501_1( I_("") );
      return( dstrDefValue_4501_1 );
   }
   const DString& s_FldProp_FromToFundClassChrERSTTRFeeXEdit_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4501_1( I_("FromToFundClassChrERSTTRFeeXEdit") );
      return( dstrFldLabel_4501_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FromToFundClassChrERSTTRFeeXEdit(
       BFDataFieldProperties::Type::text // field is a text field
      ,FromToFundClassChrERSTTRFeeXEdit // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FromToFundClassChrERSTTRFeeXEdit_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FromToFundClassChrERSTTRFeeXEdit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopCommissionRebate (4503)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopCommissionRebate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4503_7( I_("") );
      return( dstrDefValue_4503_7 );
   }
   const DString& s_FldProp_StopCommissionRebate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4503_7( I_("StopCommissionRebate") );
      return( dstrFldLabel_4503_7 );
   }
   PBF_SSC subset_super_chooser_2_4503( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopCommissionRebate(
       BFDataFieldProperties::Type::text // field is a text field
      ,StopCommissionRebate // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopCommissionRebate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopCommissionRebate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4503 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ClawBackTotal (4505)
   //------------------------------------------------------------------
   const DString& s_FldProp_ClawBackTotal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4505_1( I_("") );
      return( dstrDefValue_4505_1 );
   }
   double s_FldProp_ClawBackTotal_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ClawBackTotal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4505_1( I_("ClawBackTotal") );
      return( dstrFldLabel_4505_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ClawBackTotal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ClawBackTotal // fieldId
      ,23 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ClawBackTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ClawBackTotal_d_DVF // default value
      ,s_FldProp_ClawBackTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DomesticACBAmtBefore (4509)
   //------------------------------------------------------------------
   const DString& s_FldProp_DomesticACBAmtBefore_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4509_1( I_("") );
      return( dstrDefValue_4509_1 );
   }
   double s_FldProp_DomesticACBAmtBefore_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_DomesticACBAmtBefore_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4509_1( I_("DomesticACBAmtBefore") );
      return( dstrFldLabel_4509_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DomesticACBAmtBefore(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DomesticACBAmtBefore // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_DomesticACBAmtBefore_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DomesticACBAmtBefore_d_DVF // default value
      ,s_FldProp_DomesticACBAmtBefore_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DomesticPrcntBefore (4510)
   //------------------------------------------------------------------
   const DString& s_FldProp_DomesticPrcntBefore_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4510_1( I_("") );
      return( dstrDefValue_4510_1 );
   }
   double s_FldProp_DomesticPrcntBefore_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_DomesticPrcntBefore_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4510_1( I_("DomesticPrcntBefore") );
      return( dstrFldLabel_4510_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DomesticPrcntBefore(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DomesticPrcntBefore // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_DomesticPrcntBefore_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DomesticPrcntBefore_d_DVF // default value
      ,s_FldProp_DomesticPrcntBefore_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DomesticACBCAmtAfter (4511)
   //------------------------------------------------------------------
   const DString& s_FldProp_DomesticACBCAmtAfter_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4511_1( I_("") );
      return( dstrDefValue_4511_1 );
   }
   double s_FldProp_DomesticACBCAmtAfter_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_DomesticACBCAmtAfter_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4511_1( I_("DomesticACBCAmtAfter") );
      return( dstrFldLabel_4511_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DomesticACBCAmtAfter(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DomesticACBCAmtAfter // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_DomesticACBCAmtAfter_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DomesticACBCAmtAfter_d_DVF // default value
      ,s_FldProp_DomesticACBCAmtAfter_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DomesticPrcntAfter (4512)
   //------------------------------------------------------------------
   const DString& s_FldProp_DomesticPrcntAfter_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4512_7( I_("") );
      return( dstrDefValue_4512_7 );
   }
   double s_FldProp_DomesticPrcntAfter_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_DomesticPrcntAfter_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4512_7( I_("DomesticPrcntAfter") );
      return( dstrFldLabel_4512_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DomesticPrcntAfter(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DomesticPrcntAfter // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_DomesticPrcntAfter_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DomesticPrcntAfter_d_DVF // default value
      ,s_FldProp_DomesticPrcntAfter_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnACBAmtBefore (4513)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnACBAmtBefore_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4513_7( I_("") );
      return( dstrDefValue_4513_7 );
   }
   double s_FldProp_FrgnACBAmtBefore_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnACBAmtBefore_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4513_7( I_("FrgnACBAmtBefore") );
      return( dstrFldLabel_4513_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnACBAmtBefore(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnACBAmtBefore // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnACBAmtBefore_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnACBAmtBefore_d_DVF // default value
      ,s_FldProp_FrgnACBAmtBefore_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnPrcntBefore (4514)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnPrcntBefore_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4514_1( I_("") );
      return( dstrDefValue_4514_1 );
   }
   double s_FldProp_FrgnPrcntBefore_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnPrcntBefore_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4514_1( I_("FrgnPrcntBefore") );
      return( dstrFldLabel_4514_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnPrcntBefore(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnPrcntBefore // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnPrcntBefore_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnPrcntBefore_d_DVF // default value
      ,s_FldProp_FrgnPrcntBefore_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnACBAmtAfter (4515)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnACBAmtAfter_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4515_1( I_("") );
      return( dstrDefValue_4515_1 );
   }
   double s_FldProp_FrgnACBAmtAfter_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnACBAmtAfter_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4515_1( I_("FrgnACBAmtAfter") );
      return( dstrFldLabel_4515_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnACBAmtAfter(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnACBAmtAfter // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnACBAmtAfter_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnACBAmtAfter_d_DVF // default value
      ,s_FldProp_FrgnACBAmtAfter_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnPrcntAfter (4517)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnPrcntAfter_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4517_1( I_("") );
      return( dstrDefValue_4517_1 );
   }
   double s_FldProp_FrgnPrcntAfter_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnPrcntAfter_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4517_1( I_("FrgnPrcntAfter") );
      return( dstrFldLabel_4517_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnPrcntAfter(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnPrcntAfter // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnPrcntAfter_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnPrcntAfter_d_DVF // default value
      ,s_FldProp_FrgnPrcntAfter_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnAllowedPrcntBefore (4518)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnAllowedPrcntBefore_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4518_1( I_("") );
      return( dstrDefValue_4518_1 );
   }
   double s_FldProp_FrgnAllowedPrcntBefore_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnAllowedPrcntBefore_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4518_1( I_("FrgnAllowedPrcntBefore") );
      return( dstrFldLabel_4518_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnAllowedPrcntBefore(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnAllowedPrcntBefore // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_29 // mask chooser function
      ,s_FldProp_FrgnAllowedPrcntBefore_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnAllowedPrcntBefore_d_DVF // default value
      ,s_FldProp_FrgnAllowedPrcntBefore_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnAllowedAmtBefore (4519)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnAllowedAmtBefore_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4519_1( I_("") );
      return( dstrDefValue_4519_1 );
   }
   double s_FldProp_FrgnAllowedAmtBefore_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnAllowedAmtBefore_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4519_1( I_("FrgnAllowedAmtBefore") );
      return( dstrFldLabel_4519_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnAllowedAmtBefore(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnAllowedAmtBefore // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnAllowedAmtBefore_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnAllowedAmtBefore_d_DVF // default value
      ,s_FldProp_FrgnAllowedAmtBefore_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HypoTransType (4520)
   //------------------------------------------------------------------
   const DString& s_FldProp_HypoTransType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4520_7( I_("") );
      return( dstrDefValue_4520_7 );
   }
   const DString& s_FldProp_HypoTransType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4520_7( I_("HypoTransType") );
      return( dstrFldLabel_4520_7 );
   }
   PBF_SSC subset_super_chooser_2_4520( const ClientLocale& locale )
   {
      return chooser_ss_002_573; // defined in ifast_substitutions_chooser_19.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HypoTransType(
       BFDataFieldProperties::Type::text // field is a text field
      ,HypoTransType // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HypoTransType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HypoTransType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4520 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnAllowedAmtAfter (4521)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnAllowedAmtAfter_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4521_1( I_("") );
      return( dstrDefValue_4521_1 );
   }
   double s_FldProp_FrgnAllowedAmtAfter_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnAllowedAmtAfter_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4521_1( I_("FrgnAllowedAmtAfter") );
      return( dstrFldLabel_4521_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnAllowedAmtAfter(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnAllowedAmtAfter // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnAllowedAmtAfter_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnAllowedAmtAfter_d_DVF // default value
      ,s_FldProp_FrgnAllowedAmtAfter_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnAllowedPrcntAfter (4522)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnAllowedPrcntAfter_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4522_1( I_("") );
      return( dstrDefValue_4522_1 );
   }
   double s_FldProp_FrgnAllowedPrcntAfter_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnAllowedPrcntAfter_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4522_1( I_("FrgnAllowedPrcntAfter") );
      return( dstrFldLabel_4522_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnAllowedPrcntAfter(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnAllowedPrcntAfter // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FrgnAllowedPrcntAfter_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnAllowedPrcntAfter_d_DVF // default value
      ,s_FldProp_FrgnAllowedPrcntAfter_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBTotalPrcntAfter (4523)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBTotalPrcntAfter_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4523_1( I_("") );
      return( dstrDefValue_4523_1 );
   }
   double s_FldProp_ACBTotalPrcntAfter_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ACBTotalPrcntAfter_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4523_1( I_("ACBTotalPrcntAfter") );
      return( dstrFldLabel_4523_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBTotalPrcntAfter(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ACBTotalPrcntAfter // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ACBTotalPrcntAfter_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ACBTotalPrcntAfter_d_DVF // default value
      ,s_FldProp_ACBTotalPrcntAfter_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBTotalPrcntBefore (4524)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBTotalPrcntBefore_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4524_1( I_("") );
      return( dstrDefValue_4524_1 );
   }
   double s_FldProp_ACBTotalPrcntBefore_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ACBTotalPrcntBefore_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4524_1( I_("ACBTotalPrcntBefore") );
      return( dstrFldLabel_4524_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBTotalPrcntBefore(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ACBTotalPrcntBefore // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ACBTotalPrcntBefore_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ACBTotalPrcntBefore_d_DVF // default value
      ,s_FldProp_ACBTotalPrcntBefore_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBTotalAmtBefore (4525)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBTotalAmtBefore_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4525_1( I_("") );
      return( dstrDefValue_4525_1 );
   }
   double s_FldProp_ACBTotalAmtBefore_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ACBTotalAmtBefore_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4525_1( I_("ACBTotalAmtBefore") );
      return( dstrFldLabel_4525_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBTotalAmtBefore(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ACBTotalAmtBefore // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ACBTotalAmtBefore_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ACBTotalAmtBefore_d_DVF // default value
      ,s_FldProp_ACBTotalAmtBefore_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBTotalAmtAfter (4526)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBTotalAmtAfter_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4526_1( I_("") );
      return( dstrDefValue_4526_1 );
   }
   double s_FldProp_ACBTotalAmtAfter_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ACBTotalAmtAfter_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4526_1( I_("ACBTotalAmtAfter") );
      return( dstrFldLabel_4526_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBTotalAmtAfter(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ACBTotalAmtAfter // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ACBTotalAmtAfter_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ACBTotalAmtAfter_d_DVF // default value
      ,s_FldProp_ACBTotalAmtAfter_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LSIFUnitsAvail (4529)
   //------------------------------------------------------------------
   const DString& s_FldProp_LSIFUnitsAvail_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4529_7( I_("") );
      return( dstrDefValue_4529_7 );
   }
   double s_FldProp_LSIFUnitsAvail_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_LSIFUnitsAvail_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4529_7( I_("UnitsAvail") );
      return( dstrFldLabel_4529_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LSIFUnitsAvail(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,LSIFUnitsAvail // fieldId
      ,23 // length
      ,0 // minimum length
      ,4 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LSIFUnitsAvail_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_LSIFUnitsAvail_d_DVF // default value
      ,s_FldProp_LSIFUnitsAvail_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EqualizationActive (4532)
   //------------------------------------------------------------------
   const DString& s_FldProp_EqualizationActive_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4532_7( I_("") );
      return( dstrDefValue_4532_7 );
   }
   const DString& s_FldProp_EqualizationActive_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4532_7( I_("EqualizationActive") );
      return( dstrFldLabel_4532_7 );
   }
   PBF_SSC subset_super_chooser_2_4532( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EqualizationActive(
       BFDataFieldProperties::Type::text // field is a text field
      ,EqualizationActive // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EqualizationActive_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EqualizationActive_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4532 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FromFundName (4533)
   //------------------------------------------------------------------
   const DString& s_FldProp_FromFundName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4533_1( I_("") );
      return( dstrDefValue_4533_1 );
   }
   const DString& s_FldProp_FromFundName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4533_1( I_("FromFundName") );
      return( dstrFldLabel_4533_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FromFundName(
       BFDataFieldProperties::Type::text // field is a text field
      ,FromFundName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FromFundName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FromFundName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ToFundName (4534)
   //------------------------------------------------------------------
   const DString& s_FldProp_ToFundName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4534_1( I_("") );
      return( dstrDefValue_4534_1 );
   }
   const DString& s_FldProp_ToFundName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4534_1( I_("ToFundName") );
      return( dstrFldLabel_4534_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ToFundName(
       BFDataFieldProperties::Type::text // field is a text field
      ,ToFundName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ToFundName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ToFundName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IDAccess (4535)
   //------------------------------------------------------------------
   const DString& s_FldProp_IDAccess_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4535_1( I_("") );
      return( dstrDefValue_4535_1 );
   }
   const DString& s_FldProp_IDAccess_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4535_1( I_("IDAccess") );
      return( dstrFldLabel_4535_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IDAccess(
       BFDataFieldProperties::Type::text // field is a text field
      ,IDAccess // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IDAccess_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IDAccess_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DistribCoopAgrmnt (4540)
   //------------------------------------------------------------------
   const DString& s_FldProp_DistribCoopAgrmnt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4540_7( I_("") );
      return( dstrDefValue_4540_7 );
   }
   const DString& s_FldProp_DistribCoopAgrmnt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4540_7( I_("DistribCoopAgrmnt") );
      return( dstrFldLabel_4540_7 );
   }
   PBF_SSC subset_super_chooser_2_4540( const ClientLocale& locale )
   {
      return chooser_ss_002_574; // defined in ifast_substitutions_chooser_19.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DistribCoopAgrmnt(
       BFDataFieldProperties::Type::text // field is a text field
      ,DistribCoopAgrmnt // fieldId
      ,3 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DistribCoopAgrmnt_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DistribCoopAgrmnt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4540 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShrFundSpAgrmntHeading (4549)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShrFundSpAgrmntHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4549_7( I_("") );
      return( dstrDefValue_4549_7 );
   }
   const DString& s_FldProp_ShrFundSpAgrmntHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4549_7( I_("ShrFundSpAgrmntHeading") );
      return( dstrFldLabel_4549_7 );
   }
   PBF_SSC subset_super_chooser_2_4549( const ClientLocale& locale )
   {
      return chooser_ss_002_575; // defined in ifast_substitutions_chooser_19.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShrFundSpAgrmntHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShrFundSpAgrmntHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShrFundSpAgrmntHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShrFundSpAgrmntHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4549 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundSponsorFeeModelUsing (4550)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundSponsorFeeModelUsing_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4550_7( I_("") );
      return( dstrDefValue_4550_7 );
   }
   const DString& s_FldProp_FundSponsorFeeModelUsing_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4550_7( I_("FundSponsorFeeModelUsing") );
      return( dstrFldLabel_4550_7 );
   }
   PBF_SSC subset_super_chooser_2_4550( const ClientLocale& locale )
   {
      return chooser_ss_002_576; // defined in ifast_substitutions_chooser_19.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundSponsorFeeModelUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundSponsorFeeModelUsing // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundSponsorFeeModelUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundSponsorFeeModelUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4550 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundSponsorFeeModelLabel (4551)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundSponsorFeeModelLabel_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4551_1( I_("") );
      return( dstrDefValue_4551_1 );
   }
   const DString& s_FldProp_FundSponsorFeeModelLabel_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4551_1( I_("FundSponsorFeeModelLabel") );
      return( dstrFldLabel_4551_1 );
   }
   PBF_SSC subset_super_chooser_2_4551( const ClientLocale& locale )
   {
      return chooser_ss_002_577; // defined in ifast_substitutions_chooser_19.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundSponsorFeeModelLabel(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundSponsorFeeModelLabel // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundSponsorFeeModelLabel_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundSponsorFeeModelLabel_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4551 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundSponsorFeeModelSearchCriteria (4552)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundSponsorFeeModelSearchCriteria_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4552_1( I_("") );
      return( dstrDefValue_4552_1 );
   }
   const DString& s_FldProp_FundSponsorFeeModelSearchCriteria_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4552_1( I_("FundSponsorFeeModelSearchCriteria") );
      return( dstrFldLabel_4552_1 );
   }
   PBF_SSC subset_super_chooser_2_4552( const ClientLocale& locale )
   {
      return chooser_ss_002_580; // defined in ifast_substitutions_chooser_19.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundSponsorFeeModelSearchCriteria(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundSponsorFeeModelSearchCriteria // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundSponsorFeeModelSearchCriteria_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundSponsorFeeModelSearchCriteria_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4552 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundSponsorFeeModelSearchCriteriaNo (4553)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundSponsorFeeModelSearchCriteriaNo_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4553_1( I_("") );
      return( dstrDefValue_4553_1 );
   }
   const DString& s_FldProp_FundSponsorFeeModelSearchCriteriaNo_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4553_1( I_("FundSponsorFeeModelSearchCriteriaNo") );
      return( dstrFldLabel_4553_1 );
   }
   PBF_SSC subset_super_chooser_2_4553( const ClientLocale& locale )
   {
      return chooser_ss_002_579; // defined in ifast_substitutions_chooser_19.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundSponsorFeeModelSearchCriteriaNo(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundSponsorFeeModelSearchCriteriaNo // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundSponsorFeeModelSearchCriteriaNo_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundSponsorFeeModelSearchCriteriaNo_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4553 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DeregAmtYrToDate (4556)
   //------------------------------------------------------------------
   const DString& s_FldProp_DeregAmtYrToDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4556_1( I_("0") );
      return( dstrDefValue_4556_1 );
   }
   double s_FldProp_DeregAmtYrToDate_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_DeregAmtYrToDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4556_1( I_("DeregAmtYrToDate") );
      return( dstrFldLabel_4556_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DeregAmtYrToDate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DeregAmtYrToDate // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_DeregAmtYrToDate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DeregAmtYrToDate_d_DVF // default value
      ,s_FldProp_DeregAmtYrToDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxExemptId (4557)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxExemptId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4557_1( I_("") );
      return( dstrDefValue_4557_1 );
   }
   DIINT64 s_FldProp_TaxExemptId_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_TaxExemptId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4557_1( I_("TaxExemptId") );
      return( dstrFldLabel_4557_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxExemptId(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,TaxExemptId // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_TaxExemptId_s_DVF // default value
      ,s_FldProp_TaxExemptId_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_TaxExemptId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxExType (4558)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxExType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4558_7( I_("") );
      return( dstrDefValue_4558_7 );
   }
   const DString& s_FldProp_TaxExType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4558_7( I_("TaxExType") );
      return( dstrFldLabel_4558_7 );
   }
   PBF_SSC subset_super_chooser_2_4558( const ClientLocale& locale )
   {
      return chooser_ss_002_582; // defined in ifast_substitutions_chooser_19.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxExType(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxExType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxExType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxExType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4558 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExemptAmtOrig (4559)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExemptAmtOrig_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4559_1( I_("0") );
      return( dstrDefValue_4559_1 );
   }
   double s_FldProp_ExemptAmtOrig_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_ExemptAmtOrig_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4559_1( I_("ExemptAmtOrig") );
      return( dstrFldLabel_4559_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExemptAmtOrig(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ExemptAmtOrig // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ExemptAmtOrig_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ExemptAmtOrig_d_DVF // default value
      ,s_FldProp_ExemptAmtOrig_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExemptAmountUsed (4560)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExemptAmountUsed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4560_1( I_("0") );
      return( dstrDefValue_4560_1 );
   }
   double s_FldProp_ExemptAmountUsed_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_ExemptAmountUsed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4560_1( I_("ExemptAmountUsed") );
      return( dstrFldLabel_4560_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExemptAmountUsed(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ExemptAmountUsed // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ExemptAmountUsed_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ExemptAmountUsed_d_DVF // default value
      ,s_FldProp_ExemptAmountUsed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExemptAmtRemain (4562)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExemptAmtRemain_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4562_1( I_("0") );
      return( dstrDefValue_4562_1 );
   }
   double s_FldProp_ExemptAmtRemain_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_ExemptAmtRemain_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4562_1( I_("ExemptAmtRemain") );
      return( dstrFldLabel_4562_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExemptAmtRemain(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ExemptAmtRemain // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ExemptAmtRemain_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ExemptAmtRemain_d_DVF // default value
      ,s_FldProp_ExemptAmtRemain_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopRedSettle (4571)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopRedSettle_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4571_1( I_("N") );
      return( dstrDefValue_4571_1 );
   }
   const DString& s_FldProp_StopRedSettle_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4571_1( I_("StopRedSettle") );
      return( dstrFldLabel_4571_1 );
   }
   PBF_SSC subset_super_chooser_2_4571( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopRedSettle(
       BFDataFieldProperties::Type::text // field is a text field
      ,StopRedSettle // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopRedSettle_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopRedSettle_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4571 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RegistrationInfo (4572)
   //------------------------------------------------------------------
   const DString& s_FldProp_RegistrationInfo_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4572_1( I_("") );
      return( dstrDefValue_4572_1 );
   }
   const DString& s_FldProp_RegistrationInfo_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4572_1( I_("RegistrationInfo") );
      return( dstrFldLabel_4572_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RegistrationInfo(
       BFDataFieldProperties::Type::text // field is a text field
      ,RegistrationInfo // fieldId
      ,80 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RegistrationInfo_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RegistrationInfo_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShrFndSpAgrExists (4574)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShrFndSpAgrExists_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4574_1( I_("N") );
      return( dstrDefValue_4574_1 );
   }
   const DString& s_FldProp_ShrFndSpAgrExists_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4574_1( I_("ShrFndSpAgrExists") );
      return( dstrFldLabel_4574_1 );
   }
   PBF_SSC subset_super_chooser_2_4574( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShrFndSpAgrExists(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShrFndSpAgrExists // fieldId
      ,3 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShrFndSpAgrExists_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShrFndSpAgrExists_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4574 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EligibleRedempTotal (4576)
   //------------------------------------------------------------------
   const DString& s_FldProp_EligibleRedempTotal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4576_1( I_("") );
      return( dstrDefValue_4576_1 );
   }
   double s_FldProp_EligibleRedempTotal_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_EligibleRedempTotal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4576_1( I_("EligibleRedempTotal") );
      return( dstrFldLabel_4576_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EligibleRedempTotal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EligibleRedempTotal // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_EligibleRedempTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EligibleRedempTotal_d_DVF // default value
      ,s_FldProp_EligibleRedempTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EligibleNetTotal (4577)
   //------------------------------------------------------------------
   const DString& s_FldProp_EligibleNetTotal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4577_7( I_("") );
      return( dstrDefValue_4577_7 );
   }
   double s_FldProp_EligibleNetTotal_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_EligibleNetTotal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4577_7( I_("EligibleNetTotal") );
      return( dstrFldLabel_4577_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EligibleNetTotal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EligibleNetTotal // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_EligibleNetTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EligibleNetTotal_d_DVF // default value
      ,s_FldProp_EligibleNetTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EligibleCount (4578)
   //------------------------------------------------------------------
   const DString& s_FldProp_EligibleCount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4578_1( I_("") );
      return( dstrDefValue_4578_1 );
   }
   DIINT64 s_FldProp_EligibleCount_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_EligibleCount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4578_1( I_("EligibleCount") );
      return( dstrFldLabel_4578_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EligibleCount(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,EligibleCount // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_EligibleCount_s_DVF // default value
      ,s_FldProp_EligibleCount_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_EligibleCount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RegisteredTaxTypes (4579)
   //------------------------------------------------------------------
   const DString& s_FldProp_RegisteredTaxTypes_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4579_1( I_("") );
      return( dstrDefValue_4579_1 );
   }
   const DString& s_FldProp_RegisteredTaxTypes_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4579_1( I_("RegisteredTaxTypes") );
      return( dstrFldLabel_4579_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RegisteredTaxTypes(
       BFDataFieldProperties::Type::text // field is a text field
      ,RegisteredTaxTypes // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RegisteredTaxTypes_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RegisteredTaxTypes_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxExemptAmt (4581)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxExemptAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4581_1( I_("0") );
      return( dstrDefValue_4581_1 );
   }
   double s_FldProp_TaxExemptAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_TaxExemptAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4581_1( I_("TaxExemptAmt") );
      return( dstrFldLabel_4581_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxExemptAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TaxExemptAmt // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_TaxExemptAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TaxExemptAmt_d_DVF // default value
      ,s_FldProp_TaxExemptAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxExemptAuthorizationHeading (4582)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxExemptAuthorizationHeading_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4582_1( I_("") );
      return( dstrDefValue_4582_1 );
   }
   const DString& s_FldProp_TaxExemptAuthorizationHeading_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4582_1( I_("TaxExemptAuthorizationHeading") );
      return( dstrFldLabel_4582_1 );
   }
   PBF_SSC subset_super_chooser_2_4582( const ClientLocale& locale )
   {
      return chooser_ss_002_583; // defined in ifast_substitutions_chooser_19.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxExemptAuthorizationHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxExemptAuthorizationHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxExemptAuthorizationHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxExemptAuthorizationHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4582 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradeFeeTypeList (4583)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeFeeTypeList_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4583_1( I_("") );
      return( dstrDefValue_4583_1 );
   }
   const DString& s_FldProp_TradeFeeTypeList_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4583_1( I_("TradeFeeTypeList") );
      return( dstrFldLabel_4583_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeFeeTypeList(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeFeeTypeList // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeFeeTypeList_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeFeeTypeList_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeModelCode (4584)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeModelCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4584_1( I_("") );
      return( dstrDefValue_4584_1 );
   }
   const DString& s_FldProp_FeeModelCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4584_1( I_("FeeModelCode") );
      return( dstrFldLabel_4584_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeModelCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,FeeModelCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeModelCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FeeModelCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RefNum (4585)
   //------------------------------------------------------------------
   const DString& s_FldProp_RefNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4585_7( I_("") );
      return( dstrDefValue_4585_7 );
   }
   const DString& s_FldProp_RefNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4585_7( I_("RefNum") );
      return( dstrFldLabel_4585_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RefNum(
       BFDataFieldProperties::Type::text // field is a text field
      ,RefNum // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RefNum_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RefNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundWKN (4586)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundWKN_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4586_7( I_("") );
      return( dstrDefValue_4586_7 );
   }
   const DString& s_FldProp_FundWKN_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4586_7( I_("FundWKN") );
      return( dstrFldLabel_4586_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundWKN(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundWKN // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundWKN_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundWKN_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundISIN (4587)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundISIN_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4587_1( I_("") );
      return( dstrDefValue_4587_1 );
   }
   const DString& s_FldProp_FundISIN_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4587_1( I_("FundISIN") );
      return( dstrFldLabel_4587_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundISIN(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundISIN // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundISIN_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundISIN_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundToWKN (4588)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundToWKN_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4588_1( I_("") );
      return( dstrDefValue_4588_1 );
   }
   const DString& s_FldProp_FundToWKN_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4588_1( I_("FundToWKN") );
      return( dstrFldLabel_4588_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundToWKN(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundToWKN // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundToWKN_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundToWKN_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundToISIN (4590)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundToISIN_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4590_1( I_("") );
      return( dstrDefValue_4590_1 );
   }
   const DString& s_FldProp_FundToISIN_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4590_1( I_("FundToISIN") );
      return( dstrFldLabel_4590_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundToISIN(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundToISIN // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundToISIN_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundToISIN_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcqFeeOption (4591)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcqFeeOption_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4591_1( I_("") );
      return( dstrDefValue_4591_1 );
   }
   const DString& s_FldProp_AcqFeeOption_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4591_1( I_("AcqFeeOption") );
      return( dstrFldLabel_4591_1 );
   }
   PBF_SSC subset_super_chooser_2_4591( const ClientLocale& locale )
   {
      return chooser_ss_002_615; // defined in ifast_substitutions_chooser_20.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcqFeeOption(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcqFeeOption // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcqFeeOption_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcqFeeOption_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4591 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleDateOverriden (4592)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleDateOverriden_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4592_1( I_("N") );
      return( dstrDefValue_4592_1 );
   }
   const DString& s_FldProp_SettleDateOverriden_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4592_1( I_("SettleDateOverriden") );
      return( dstrFldLabel_4592_1 );
   }
   PBF_SSC subset_super_chooser_2_4592( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleDateOverriden(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettleDateOverriden // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettleDateOverriden_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettleDateOverriden_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4592 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ValidSettleCurr (4593)
   //------------------------------------------------------------------
   const DString& s_FldProp_ValidSettleCurr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4593_7( I_("") );
      return( dstrDefValue_4593_7 );
   }
   const DString& s_FldProp_ValidSettleCurr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4593_7( I_("ValidSettleCurr") );
      return( dstrFldLabel_4593_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ValidSettleCurr(
       BFDataFieldProperties::Type::text // field is a text field
      ,ValidSettleCurr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ValidSettleCurr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ValidSettleCurr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnitsCal (4594)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnitsCal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4594_1( I_("") );
      return( dstrDefValue_4594_1 );
   }
   const DString& s_FldProp_UnitsCal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4594_1( I_("UnitsCal") );
      return( dstrFldLabel_4594_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnitsCal(
       BFDataFieldProperties::Type::text // field is a text field
      ,UnitsCal // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_UnitsCal_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_UnitsCal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PUEVCapable (4595)
   //------------------------------------------------------------------
   const DString& s_FldProp_PUEVCapable_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4595_1( I_("N") );
      return( dstrDefValue_4595_1 );
   }
   const DString& s_FldProp_PUEVCapable_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4595_1( I_("PUEVCapable") );
      return( dstrFldLabel_4595_1 );
   }
   PBF_SSC subset_super_chooser_2_4595( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PUEVCapable(
       BFDataFieldProperties::Type::text // field is a text field
      ,PUEVCapable // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PUEVCapable_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PUEVCapable_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4595 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ForceVerify (4597)
   //------------------------------------------------------------------
   const DString& s_FldProp_ForceVerify_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4597_1( I_("N") );
      return( dstrDefValue_4597_1 );
   }
   const DString& s_FldProp_ForceVerify_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4597_1( I_("ForceVerify") );
      return( dstrFldLabel_4597_1 );
   }
   PBF_SSC subset_super_chooser_2_4597( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ForceVerify(
       BFDataFieldProperties::Type::text // field is a text field
      ,ForceVerify // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ForceVerify_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ForceVerify_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_4597 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FndSpFeeModelID (4598)
   //------------------------------------------------------------------
   const DString& s_FldProp_FndSpFeeModelID_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_4598_1( I_("") );
      return( dstrDefValue_4598_1 );
   }
   const DString& s_FldProp_FndSpFeeModelID_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_4598_1( I_("FndSpFeeModelID") );
      return( dstrFldLabel_4598_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FndSpFeeModelID(
       BFDataFieldProperties::Type::text // field is a text field
      ,FndSpFeeModelID // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FndSpFeeModelID_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FndSpFeeModelID_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );
}
