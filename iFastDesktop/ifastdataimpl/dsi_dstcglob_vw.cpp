// BFDataImpl implementation file for DataSet DSTCGLOB.VW
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstcglob_vw.h"


// This function creates an instance of dsi_DSTCGLOB_VW
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTCGLOB_VW() { return new dsi_DSTCGLOB_VW; }

dsi_DSTCGLOB_VW::dsi_DSTCGLOB_VW()
: BFDataImpl( 40000815 )
, Operator_Extension_( ifds::Operator_Extension, &ifds::s_FldProp_Operator_Extension )
, Profile_( ifds::Profile, &ifds::s_FldProp_Profile )
, Registry_Directory_( ifds::Registry_Directory, &ifds::s_FldProp_Registry_Directory )
, Using_AWD_( ifds::Using_AWD, &ifds::s_FldProp_Using_AWD )
, LastActiveAccountNum_( ifds::LastActiveAccountNum, &ifds::s_FldProp_LastActiveAccountNum )
, LastActiveShrNum_( ifds::LastActiveShrNum, &ifds::s_FldProp_LastActiveShrNum )
, Management_Co_( ifds::Management_Co, &ifds::s_FldProp_Management_Co )
, Search_Type_( ifds::Search_Type, &ifds::s_FldProp_Search_Type )
, System_( ifds::System, &ifds::s_FldProp_System )
, CallerName_( ifds::CallerName, &ifds::s_FldProp_CallerName )
, CallerPhoneNumber_( ifds::CallerPhoneNumber, &ifds::s_FldProp_CallerPhoneNumber )
, LastActiveEntityId_( ifds::LastActiveEntityId, &ifds::s_FldProp_LastActiveEntityId )
{
   cFields_ = 12;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTCGLOB_VW::~dsi_DSTCGLOB_VW()
{
}

BFDataImpl* dsi_DSTCGLOB_VW::clone()
{
   dsi_DSTCGLOB_VW* p = new dsi_DSTCGLOB_VW;
   p->Operator_Extension_ = Operator_Extension_;
   p->Profile_ = Profile_;
   p->Registry_Directory_ = Registry_Directory_;
   p->Using_AWD_ = Using_AWD_;
   p->LastActiveAccountNum_ = LastActiveAccountNum_;
   p->LastActiveShrNum_ = LastActiveShrNum_;
   p->Management_Co_ = Management_Co_;
   p->Search_Type_ = Search_Type_;
   p->System_ = System_;
   p->CallerName_ = CallerName_;
   p->CallerPhoneNumber_ = CallerPhoneNumber_;
   p->LastActiveEntityId_ = LastActiveEntityId_;
   return(p);
}

BFDataField* dsi_DSTCGLOB_VW::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40000816: return ( &Operator_Extension_ ); break; // Operator_Extension
      case 40000817: return ( &Profile_ ); break; // Profile
      case 40000818: return ( &Registry_Directory_ ); break; // Registry_Directory
      case 40000819: return ( &Using_AWD_ ); break; // Using_AWD
      case 40000820: return ( &LastActiveAccountNum_ ); break; // LastActiveAccountNum
      case 40001330: return ( &LastActiveShrNum_ ); break; // LastActiveShrNum
      case 40000821: return ( &Management_Co_ ); break; // Management_Co
      case 40000822: return ( &Search_Type_ ); break; // Search_Type
      case 40000823: return ( &System_ ); break; // System
      case 40000871: return ( &CallerName_ ); break; // CallerName
      case 40000872: return ( &CallerPhoneNumber_ ); break; // CallerPhoneNumber
      case 40003214: return ( &LastActiveEntityId_ ); break; // LastActiveEntityId
   }
   return( NULL );
}

const BFDataField* dsi_DSTCGLOB_VW::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTCGLOB_VW* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTCGLOB_VW::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 12 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &Operator_Extension_; break;
            case 1: aFlds_[1] = &Profile_; break;
            case 2: aFlds_[2] = &Registry_Directory_; break;
            case 3: aFlds_[3] = &Using_AWD_; break;
            case 4: aFlds_[4] = &LastActiveAccountNum_; break;
            case 5: aFlds_[5] = &LastActiveShrNum_; break;
            case 6: aFlds_[6] = &Management_Co_; break;
            case 7: aFlds_[7] = &Search_Type_; break;
            case 8: aFlds_[8] = &System_; break;
            case 9: aFlds_[9] = &CallerName_; break;
            case 10: aFlds_[10] = &CallerPhoneNumber_; break;
            case 11: aFlds_[11] = &LastActiveEntityId_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTCGLOB_VW::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTCGLOB_VW* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTCGLOB_VW::getLargestDefinedField( void ) const
{
   return( 100 );
}

unsigned long dsi_DSTCGLOB_VW::getDefinedByteLength( void ) const
{
   return( 418 * sizeof( I_CHAR ) );
}

bool dsi_DSTCGLOB_VW::exists( const BFFieldId& id ) const
{
   return dsi_DSTCGLOB_VW::fieldExists( id );
}

bool dsi_DSTCGLOB_VW::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40000816: return( true );
      case 40000817: return( true );
      case 40000818: return( true );
      case 40000819: return( true );
      case 40000820: return( true );
      case 40001330: return( true );
      case 40000821: return( true );
      case 40000822: return( true );
      case 40000823: return( true );
      case 40000871: return( true );
      case 40000872: return( true );
      case 40003214: return( true );
   }
   return false;
}

