// BFDataImpl implementation file for DataSet DSTC0087.VWRepeat_Record
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Wednesday, September 07, 2016 00:25:49


#include "stdafx.h"
#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0087_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0087_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0087_VWRepeat_Record() { return new dsi_DSTC0087_VWRepeat_Record; }

dsi_DSTC0087_VWRepeat_Record::dsi_DSTC0087_VWRepeat_Record()
: BFDataImpl( 40001298 )
, TaxType_( ifds::TaxType, &ifds::s_FldProp_TaxType )
, TaxTypeDesc_( ifds::TaxTypeDesc, &ifds::s_FldProp_TaxTypeDesc )
, PlanType_( ifds::PlanType, &ifds::s_FldProp_PlanType )
, PlanTypeDesc_( ifds::PlanTypeDesc, &ifds::s_FldProp_PlanTypeDesc )
, AccountTypes_( ifds::AccountTypes, &ifds::s_FldProp_AccountTypes )
, SelfDirected_( ifds::SelfDirected, &ifds::s_FldProp_SelfDirected )
, TransferType_( ifds::TransferType, &ifds::s_FldProp_TransferType )
, LockedIn_( ifds::LockedIn, &ifds::s_FldProp_LockedIn )
, TaxByJuris_( ifds::TaxByJuris, &ifds::s_FldProp_TaxByJuris )
, FedJurisAllowed_( ifds::FedJurisAllowed, &ifds::s_FldProp_FedJurisAllowed )
, Certificate_( ifds::Certificate, &ifds::s_FldProp_Certificate )
, NomTaxRcpt_( ifds::NomTaxRcpt, &ifds::s_FldProp_NomTaxRcpt )
, Unseizable_( ifds::Unseizable, &ifds::s_FldProp_Unseizable )
, AvailNonRes_( ifds::AvailNonRes, &ifds::s_FldProp_AvailNonRes )
, ReinDistOnly_( ifds::ReinDistOnly, &ifds::s_FldProp_ReinDistOnly )
, MinimumApplies_( ifds::MinimumApplies, &ifds::s_FldProp_MinimumApplies )
, MaximumApplies_( ifds::MaximumApplies, &ifds::s_FldProp_MaximumApplies )
, GICallowed_( ifds::GICallowed, &ifds::s_FldProp_GICallowed )
, PACallowed_( ifds::PACallowed, &ifds::s_FldProp_PACallowed )
, SWPallowed_( ifds::SWPallowed, &ifds::s_FldProp_SWPallowed )
, AdminFeeDefn_( ifds::AdminFeeDefn, &ifds::s_FldProp_AdminFeeDefn )
, MailList1_( ifds::MailList1, &ifds::s_FldProp_MailList1 )
, MailList2_( ifds::MailList2, &ifds::s_FldProp_MailList2 )
, MailList3_( ifds::MailList3, &ifds::s_FldProp_MailList3 )
, MailList4_( ifds::MailList4, &ifds::s_FldProp_MailList4 )
, MailList5_( ifds::MailList5, &ifds::s_FldProp_MailList5 )
, MailList6_( ifds::MailList6, &ifds::s_FldProp_MailList6 )
, MailList7_( ifds::MailList7, &ifds::s_FldProp_MailList7 )
, MailList8_( ifds::MailList8, &ifds::s_FldProp_MailList8 )
, MailList9_( ifds::MailList9, &ifds::s_FldProp_MailList9 )
, MailList10_( ifds::MailList10, &ifds::s_FldProp_MailList10 )
, MailList11_( ifds::MailList11, &ifds::s_FldProp_MailList11 )
, MailList12_( ifds::MailList12, &ifds::s_FldProp_MailList12 )
, TaxCashDist1_( ifds::TaxCashDist1, &ifds::s_FldProp_TaxCashDist1 )
, TaxCashDist2_( ifds::TaxCashDist2, &ifds::s_FldProp_TaxCashDist2 )
, TaxCashDist3_( ifds::TaxCashDist3, &ifds::s_FldProp_TaxCashDist3 )
, TaxEarlyClose1_( ifds::TaxEarlyClose1, &ifds::s_FldProp_TaxEarlyClose1 )
, TaxEarlyClose2_( ifds::TaxEarlyClose2, &ifds::s_FldProp_TaxEarlyClose2 )
, TaxEarlyClose3_( ifds::TaxEarlyClose3, &ifds::s_FldProp_TaxEarlyClose3 )
, TaxFullRdmp1_( ifds::TaxFullRdmp1, &ifds::s_FldProp_TaxFullRdmp1 )
, TaxFullRdmp2_( ifds::TaxFullRdmp2, &ifds::s_FldProp_TaxFullRdmp2 )
, TaxFullRdmp3_( ifds::TaxFullRdmp3, &ifds::s_FldProp_TaxFullRdmp3 )
, TaxNotional1_( ifds::TaxNotional1, &ifds::s_FldProp_TaxNotional1 )
, TaxNotional2_( ifds::TaxNotional2, &ifds::s_FldProp_TaxNotional2 )
, TaxNotional3_( ifds::TaxNotional3, &ifds::s_FldProp_TaxNotional3 )
, TaxPartRdmp1_( ifds::TaxPartRdmp1, &ifds::s_FldProp_TaxPartRdmp1 )
, TaxPartRdmp2_( ifds::TaxPartRdmp2, &ifds::s_FldProp_TaxPartRdmp2 )
, TaxPartRdmp3_( ifds::TaxPartRdmp3, &ifds::s_FldProp_TaxPartRdmp3 )
, TaxPurchase1_( ifds::TaxPurchase1, &ifds::s_FldProp_TaxPurchase1 )
, TaxPurchase2_( ifds::TaxPurchase2, &ifds::s_FldProp_TaxPurchase2 )
, TaxPurchase3_( ifds::TaxPurchase3, &ifds::s_FldProp_TaxPurchase3 )
, TaxReinvDist1_( ifds::TaxReinvDist1, &ifds::s_FldProp_TaxReinvDist1 )
, TaxReinvDist2_( ifds::TaxReinvDist2, &ifds::s_FldProp_TaxReinvDist2 )
, TaxReinvDist3_( ifds::TaxReinvDist3, &ifds::s_FldProp_TaxReinvDist3 )
, TaxSwitches1_( ifds::TaxSwitches1, &ifds::s_FldProp_TaxSwitches1 )
, TaxSwitches2_( ifds::TaxSwitches2, &ifds::s_FldProp_TaxSwitches2 )
, TaxSwitches3_( ifds::TaxSwitches3, &ifds::s_FldProp_TaxSwitches3 )
, TaxTransfers1_( ifds::TaxTransfers1, &ifds::s_FldProp_TaxTransfers1 )
, TaxTransfers2_( ifds::TaxTransfers2, &ifds::s_FldProp_TaxTransfers2 )
, TaxTransfers3_( ifds::TaxTransfers3, &ifds::s_FldProp_TaxTransfers3 )
, ClientEquiv_( ifds::ClientEquiv, &ifds::s_FldProp_ClientEquiv )
, DepositTypeList_( ifds::DepositTypeList, &ifds::s_FldProp_DepositTypeList )
, RedCodeList_( ifds::RedCodeList, &ifds::s_FldProp_RedCodeList )
, AcctDesignation_( ifds::AcctDesignation, &ifds::s_FldProp_AcctDesignation )
, ExclDTAAccountType_( ifds::ExclDTAAccountType, &ifds::s_FldProp_ExclDTAAccountType )
, TaxTypeSchedule_( ifds::TaxTypeSchedule, &ifds::s_FldProp_TaxTypeSchedule )
, SINRequired_( ifds::SINRequired, &ifds::s_FldProp_SINRequired )
, MinAge_( ifds::MinAge, &ifds::s_FldProp_MinAge )
, MaxAge_( ifds::MaxAge, &ifds::s_FldProp_MaxAge )
, TradeStartDate_( ifds::TradeStartDate, &ifds::s_FldProp_TradeStartDate )
, TradeStopDate_( ifds::TradeStopDate, &ifds::s_FldProp_TradeStopDate )
, TaxTypeRuleCurrSet_( ifds::TaxTypeRuleCurrSet, &ifds::s_FldProp_TaxTypeRuleCurrSet )
, MaxFeeAppl_( ifds::MaxFeeAppl, &ifds::s_FldProp_MaxFeeAppl )
, MaxFee_( ifds::MaxFee, &ifds::s_FldProp_MaxFee )
, ChkAgeOfMajority_( ifds::ChkAgeOfMajority, &ifds::s_FldProp_ChkAgeOfMajority )
{
    cFields_ = 75;
    memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0087_VWRepeat_Record::~dsi_DSTC0087_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0087_VWRepeat_Record::clone()
{
    dsi_DSTC0087_VWRepeat_Record* p = new dsi_DSTC0087_VWRepeat_Record;
    p->TaxType_ = TaxType_;
    p->TaxTypeDesc_ = TaxTypeDesc_;
    p->PlanType_ = PlanType_;
    p->PlanTypeDesc_ = PlanTypeDesc_;
    p->AccountTypes_ = AccountTypes_;
    p->SelfDirected_ = SelfDirected_;
    p->TransferType_ = TransferType_;
    p->LockedIn_ = LockedIn_;
    p->TaxByJuris_ = TaxByJuris_;
    p->FedJurisAllowed_ = FedJurisAllowed_;
    p->Certificate_ = Certificate_;
    p->NomTaxRcpt_ = NomTaxRcpt_;
    p->Unseizable_ = Unseizable_;
    p->AvailNonRes_ = AvailNonRes_;
    p->ReinDistOnly_ = ReinDistOnly_;
    p->MinimumApplies_ = MinimumApplies_;
    p->MaximumApplies_ = MaximumApplies_;
    p->GICallowed_ = GICallowed_;
    p->PACallowed_ = PACallowed_;
    p->SWPallowed_ = SWPallowed_;
    p->AdminFeeDefn_ = AdminFeeDefn_;
    p->MailList1_ = MailList1_;
    p->MailList2_ = MailList2_;
    p->MailList3_ = MailList3_;
    p->MailList4_ = MailList4_;
    p->MailList5_ = MailList5_;
    p->MailList6_ = MailList6_;
    p->MailList7_ = MailList7_;
    p->MailList8_ = MailList8_;
    p->MailList9_ = MailList9_;
    p->MailList10_ = MailList10_;
    p->MailList11_ = MailList11_;
    p->MailList12_ = MailList12_;
    p->TaxCashDist1_ = TaxCashDist1_;
    p->TaxCashDist2_ = TaxCashDist2_;
    p->TaxCashDist3_ = TaxCashDist3_;
    p->TaxEarlyClose1_ = TaxEarlyClose1_;
    p->TaxEarlyClose2_ = TaxEarlyClose2_;
    p->TaxEarlyClose3_ = TaxEarlyClose3_;
    p->TaxFullRdmp1_ = TaxFullRdmp1_;
    p->TaxFullRdmp2_ = TaxFullRdmp2_;
    p->TaxFullRdmp3_ = TaxFullRdmp3_;
    p->TaxNotional1_ = TaxNotional1_;
    p->TaxNotional2_ = TaxNotional2_;
    p->TaxNotional3_ = TaxNotional3_;
    p->TaxPartRdmp1_ = TaxPartRdmp1_;
    p->TaxPartRdmp2_ = TaxPartRdmp2_;
    p->TaxPartRdmp3_ = TaxPartRdmp3_;
    p->TaxPurchase1_ = TaxPurchase1_;
    p->TaxPurchase2_ = TaxPurchase2_;
    p->TaxPurchase3_ = TaxPurchase3_;
    p->TaxReinvDist1_ = TaxReinvDist1_;
    p->TaxReinvDist2_ = TaxReinvDist2_;
    p->TaxReinvDist3_ = TaxReinvDist3_;
    p->TaxSwitches1_ = TaxSwitches1_;
    p->TaxSwitches2_ = TaxSwitches2_;
    p->TaxSwitches3_ = TaxSwitches3_;
    p->TaxTransfers1_ = TaxTransfers1_;
    p->TaxTransfers2_ = TaxTransfers2_;
    p->TaxTransfers3_ = TaxTransfers3_;
    p->ClientEquiv_ = ClientEquiv_;
    p->DepositTypeList_ = DepositTypeList_;
    p->RedCodeList_ = RedCodeList_;
    p->AcctDesignation_ = AcctDesignation_;
    p->ExclDTAAccountType_ = ExclDTAAccountType_;
    p->TaxTypeSchedule_ = TaxTypeSchedule_;
    p->SINRequired_ = SINRequired_;
    p->MinAge_ = MinAge_;
    p->MaxAge_ = MaxAge_;
    p->TradeStartDate_ = TradeStartDate_;
    p->TradeStopDate_ = TradeStopDate_;
    p->TaxTypeRuleCurrSet_ = TaxTypeRuleCurrSet_;
    p->MaxFeeAppl_ = MaxFeeAppl_;
    p->MaxFee_ = MaxFee_;
    p->ChkAgeOfMajority_ = ChkAgeOfMajority_;
    return(p);
}

BFDataField* dsi_DSTC0087_VWRepeat_Record::getElement( const BFFieldId& id )
{
    switch( id.getId() ) {
        case 40000134: return ( &TaxType_ ); break; // TaxType
        case 40000135: return ( &TaxTypeDesc_ ); break; // TaxTypeDesc
        case 40000839: return ( &PlanType_ ); break; // PlanType
        case 40001240: return ( &PlanTypeDesc_ ); break; // PlanTypeDesc
        case 40001241: return ( &AccountTypes_ ); break; // AccountTypes
        case 40001243: return ( &SelfDirected_ ); break; // SelfDirected
        case 40000832: return ( &TransferType_ ); break; // TransferType
        case 40001244: return ( &LockedIn_ ); break; // LockedIn
        case 40001245: return ( &TaxByJuris_ ); break; // TaxByJuris
        case 40001246: return ( &FedJurisAllowed_ ); break; // FedJurisAllowed
        case 40001242: return ( &Certificate_ ); break; // Certificate
        case 40001247: return ( &NomTaxRcpt_ ); break; // NomTaxRcpt
        case 40000202: return ( &Unseizable_ ); break; // Unseizable
        case 40001248: return ( &AvailNonRes_ ); break; // AvailNonRes
        case 40001249: return ( &ReinDistOnly_ ); break; // ReinDistOnly
        case 40001250: return ( &MinimumApplies_ ); break; // MinimumApplies
        case 40001251: return ( &MaximumApplies_ ); break; // MaximumApplies
        case 40001252: return ( &GICallowed_ ); break; // GICallowed
        case 40001253: return ( &PACallowed_ ); break; // PACallowed
        case 40001254: return ( &SWPallowed_ ); break; // SWPallowed
        case 40001255: return ( &AdminFeeDefn_ ); break; // AdminFeeDefn
        case 40001256: return ( &MailList1_ ); break; // MailList1
        case 40001257: return ( &MailList2_ ); break; // MailList2
        case 40001258: return ( &MailList3_ ); break; // MailList3
        case 40001259: return ( &MailList4_ ); break; // MailList4
        case 40001260: return ( &MailList5_ ); break; // MailList5
        case 40001261: return ( &MailList6_ ); break; // MailList6
        case 40001262: return ( &MailList7_ ); break; // MailList7
        case 40001263: return ( &MailList8_ ); break; // MailList8
        case 40001264: return ( &MailList9_ ); break; // MailList9
        case 40001265: return ( &MailList10_ ); break; // MailList10
        case 40001266: return ( &MailList11_ ); break; // MailList11
        case 40001267: return ( &MailList12_ ); break; // MailList12
        case 40001268: return ( &TaxCashDist1_ ); break; // TaxCashDist1
        case 40001269: return ( &TaxCashDist2_ ); break; // TaxCashDist2
        case 40001270: return ( &TaxCashDist3_ ); break; // TaxCashDist3
        case 40001271: return ( &TaxEarlyClose1_ ); break; // TaxEarlyClose1
        case 40001272: return ( &TaxEarlyClose2_ ); break; // TaxEarlyClose2
        case 40001273: return ( &TaxEarlyClose3_ ); break; // TaxEarlyClose3
        case 40001274: return ( &TaxFullRdmp1_ ); break; // TaxFullRdmp1
        case 40001275: return ( &TaxFullRdmp2_ ); break; // TaxFullRdmp2
        case 40001276: return ( &TaxFullRdmp3_ ); break; // TaxFullRdmp3
        case 40001277: return ( &TaxNotional1_ ); break; // TaxNotional1
        case 40001278: return ( &TaxNotional2_ ); break; // TaxNotional2
        case 40001279: return ( &TaxNotional3_ ); break; // TaxNotional3
        case 40001280: return ( &TaxPartRdmp1_ ); break; // TaxPartRdmp1
        case 40001281: return ( &TaxPartRdmp2_ ); break; // TaxPartRdmp2
        case 40001282: return ( &TaxPartRdmp3_ ); break; // TaxPartRdmp3
        case 40001283: return ( &TaxPurchase1_ ); break; // TaxPurchase1
        case 40001284: return ( &TaxPurchase2_ ); break; // TaxPurchase2
        case 40001285: return ( &TaxPurchase3_ ); break; // TaxPurchase3
        case 40001286: return ( &TaxReinvDist1_ ); break; // TaxReinvDist1
        case 40001287: return ( &TaxReinvDist2_ ); break; // TaxReinvDist2
        case 40001288: return ( &TaxReinvDist3_ ); break; // TaxReinvDist3
        case 40001289: return ( &TaxSwitches1_ ); break; // TaxSwitches1
        case 40001290: return ( &TaxSwitches2_ ); break; // TaxSwitches2
        case 40001291: return ( &TaxSwitches3_ ); break; // TaxSwitches3
        case 40001292: return ( &TaxTransfers1_ ); break; // TaxTransfers1
        case 40001293: return ( &TaxTransfers2_ ); break; // TaxTransfers2
        case 40001294: return ( &TaxTransfers3_ ); break; // TaxTransfers3
        case 40001295: return ( &ClientEquiv_ ); break; // ClientEquiv
        case 40001654: return ( &DepositTypeList_ ); break; // DepositTypeList
        case 40001655: return ( &RedCodeList_ ); break; // RedCodeList
        case 40000178: return ( &AcctDesignation_ ); break; // AcctDesignation
        case 40004169: return ( &ExclDTAAccountType_ ); break; // ExclDTAAccountType
        case 40005778: return ( &TaxTypeSchedule_ ); break; // TaxTypeSchedule
        case 40005900: return ( &SINRequired_ ); break; // SINRequired
        case 40001758: return ( &MinAge_ ); break; // MinAge
        case 40001759: return ( &MaxAge_ ); break; // MaxAge
        case 40005901: return ( &TradeStartDate_ ); break; // TradeStartDate
        case 40005902: return ( &TradeStopDate_ ); break; // TradeStopDate
        case 40006842: return ( &TaxTypeRuleCurrSet_ ); break; // TaxTypeRuleCurrSet
        case 40006843: return ( &MaxFeeAppl_ ); break; // MaxFeeAppl
        case 40001674: return ( &MaxFee_ ); break; // MaxFee
        case 40007653: return ( &ChkAgeOfMajority_ ); break; // ChkAgeOfMajority
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0087_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0087_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0087_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
    if ( iField >=0 && iField < 75 )
    {
        BFDataField* pField = aFlds_[iField];
        if( NULL == pField )
        {
            switch(iField)
            {
                case 0: aFlds_[0] = &TaxType_; break;
                case 1: aFlds_[1] = &TaxTypeDesc_; break;
                case 2: aFlds_[2] = &PlanType_; break;
                case 3: aFlds_[3] = &PlanTypeDesc_; break;
                case 4: aFlds_[4] = &AccountTypes_; break;
                case 5: aFlds_[5] = &SelfDirected_; break;
                case 6: aFlds_[6] = &TransferType_; break;
                case 7: aFlds_[7] = &LockedIn_; break;
                case 8: aFlds_[8] = &TaxByJuris_; break;
                case 9: aFlds_[9] = &FedJurisAllowed_; break;
                case 10: aFlds_[10] = &Certificate_; break;
                case 11: aFlds_[11] = &NomTaxRcpt_; break;
                case 12: aFlds_[12] = &Unseizable_; break;
                case 13: aFlds_[13] = &AvailNonRes_; break;
                case 14: aFlds_[14] = &ReinDistOnly_; break;
                case 15: aFlds_[15] = &MinimumApplies_; break;
                case 16: aFlds_[16] = &MaximumApplies_; break;
                case 17: aFlds_[17] = &GICallowed_; break;
                case 18: aFlds_[18] = &PACallowed_; break;
                case 19: aFlds_[19] = &SWPallowed_; break;
                case 20: aFlds_[20] = &AdminFeeDefn_; break;
                case 21: aFlds_[21] = &MailList1_; break;
                case 22: aFlds_[22] = &MailList2_; break;
                case 23: aFlds_[23] = &MailList3_; break;
                case 24: aFlds_[24] = &MailList4_; break;
                case 25: aFlds_[25] = &MailList5_; break;
                case 26: aFlds_[26] = &MailList6_; break;
                case 27: aFlds_[27] = &MailList7_; break;
                case 28: aFlds_[28] = &MailList8_; break;
                case 29: aFlds_[29] = &MailList9_; break;
                case 30: aFlds_[30] = &MailList10_; break;
                case 31: aFlds_[31] = &MailList11_; break;
                case 32: aFlds_[32] = &MailList12_; break;
                case 33: aFlds_[33] = &TaxCashDist1_; break;
                case 34: aFlds_[34] = &TaxCashDist2_; break;
                case 35: aFlds_[35] = &TaxCashDist3_; break;
                case 36: aFlds_[36] = &TaxEarlyClose1_; break;
                case 37: aFlds_[37] = &TaxEarlyClose2_; break;
                case 38: aFlds_[38] = &TaxEarlyClose3_; break;
                case 39: aFlds_[39] = &TaxFullRdmp1_; break;
                case 40: aFlds_[40] = &TaxFullRdmp2_; break;
                case 41: aFlds_[41] = &TaxFullRdmp3_; break;
                case 42: aFlds_[42] = &TaxNotional1_; break;
                case 43: aFlds_[43] = &TaxNotional2_; break;
                case 44: aFlds_[44] = &TaxNotional3_; break;
                case 45: aFlds_[45] = &TaxPartRdmp1_; break;
                case 46: aFlds_[46] = &TaxPartRdmp2_; break;
                case 47: aFlds_[47] = &TaxPartRdmp3_; break;
                case 48: aFlds_[48] = &TaxPurchase1_; break;
                case 49: aFlds_[49] = &TaxPurchase2_; break;
                case 50: aFlds_[50] = &TaxPurchase3_; break;
                case 51: aFlds_[51] = &TaxReinvDist1_; break;
                case 52: aFlds_[52] = &TaxReinvDist2_; break;
                case 53: aFlds_[53] = &TaxReinvDist3_; break;
                case 54: aFlds_[54] = &TaxSwitches1_; break;
                case 55: aFlds_[55] = &TaxSwitches2_; break;
                case 56: aFlds_[56] = &TaxSwitches3_; break;
                case 57: aFlds_[57] = &TaxTransfers1_; break;
                case 58: aFlds_[58] = &TaxTransfers2_; break;
                case 59: aFlds_[59] = &TaxTransfers3_; break;
                case 60: aFlds_[60] = &ClientEquiv_; break;
                case 61: aFlds_[61] = &DepositTypeList_; break;
                case 62: aFlds_[62] = &RedCodeList_; break;
                case 63: aFlds_[63] = &AcctDesignation_; break;
                case 64: aFlds_[64] = &ExclDTAAccountType_; break;
                case 65: aFlds_[65] = &TaxTypeSchedule_; break;
                case 66: aFlds_[66] = &SINRequired_; break;
                case 67: aFlds_[67] = &MinAge_; break;
                case 68: aFlds_[68] = &MaxAge_; break;
                case 69: aFlds_[69] = &TradeStartDate_; break;
                case 70: aFlds_[70] = &TradeStopDate_; break;
                case 71: aFlds_[71] = &TaxTypeRuleCurrSet_; break;
                case 72: aFlds_[72] = &MaxFeeAppl_; break;
                case 73: aFlds_[73] = &MaxFee_; break;
                case 74: aFlds_[74] = &ChkAgeOfMajority_; break;
            }
            pField = aFlds_[iField];
            if( NULL == pField ) return( NULL );
        }
        return( pField );
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0087_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
    return( ( const_cast< dsi_DSTC0087_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0087_VWRepeat_Record::getLargestDefinedField( void ) const
{
    return( 300 );
}

unsigned long dsi_DSTC0087_VWRepeat_Record::getDefinedByteLength( void ) const
{
    return( 2183 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0087_VWRepeat_Record::exists( const BFFieldId& id ) const
{
    return dsi_DSTC0087_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0087_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
    switch( id.getId() )
    {
        case 40000134: return ( true );
        case 40000135: return ( true );
        case 40000839: return ( true );
        case 40001240: return ( true );
        case 40001241: return ( true );
        case 40001243: return ( true );
        case 40000832: return ( true );
        case 40001244: return ( true );
        case 40001245: return ( true );
        case 40001246: return ( true );
        case 40001242: return ( true );
        case 40001247: return ( true );
        case 40000202: return ( true );
        case 40001248: return ( true );
        case 40001249: return ( true );
        case 40001250: return ( true );
        case 40001251: return ( true );
        case 40001252: return ( true );
        case 40001253: return ( true );
        case 40001254: return ( true );
        case 40001255: return ( true );
        case 40001256: return ( true );
        case 40001257: return ( true );
        case 40001258: return ( true );
        case 40001259: return ( true );
        case 40001260: return ( true );
        case 40001261: return ( true );
        case 40001262: return ( true );
        case 40001263: return ( true );
        case 40001264: return ( true );
        case 40001265: return ( true );
        case 40001266: return ( true );
        case 40001267: return ( true );
        case 40001268: return ( true );
        case 40001269: return ( true );
        case 40001270: return ( true );
        case 40001271: return ( true );
        case 40001272: return ( true );
        case 40001273: return ( true );
        case 40001274: return ( true );
        case 40001275: return ( true );
        case 40001276: return ( true );
        case 40001277: return ( true );
        case 40001278: return ( true );
        case 40001279: return ( true );
        case 40001280: return ( true );
        case 40001281: return ( true );
        case 40001282: return ( true );
        case 40001283: return ( true );
        case 40001284: return ( true );
        case 40001285: return ( true );
        case 40001286: return ( true );
        case 40001287: return ( true );
        case 40001288: return ( true );
        case 40001289: return ( true );
        case 40001290: return ( true );
        case 40001291: return ( true );
        case 40001292: return ( true );
        case 40001293: return ( true );
        case 40001294: return ( true );
        case 40001295: return ( true );
        case 40001654: return ( true );
        case 40001655: return ( true );
        case 40000178: return ( true );
        case 40004169: return ( true );
        case 40005778: return ( true );
        case 40005900: return ( true );
        case 40001758: return ( true );
        case 40001759: return ( true );
        case 40005901: return ( true );
        case 40005902: return ( true );
        case 40006842: return ( true );
        case 40006843: return ( true );
        case 40001674: return ( true );
        case 40007653: return ( true );
    }
    return false;
}

