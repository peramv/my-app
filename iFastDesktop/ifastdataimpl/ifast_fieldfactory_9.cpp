// Data Field Factory Function
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Tuesday, March 27, 2018 02:52:47

#include "stdafx.h"
#include <bfdata/bfdatafield.hpp>
#include <bfdata/bfdataid.hpp>

namespace ifds
{
   extern const BFTextFieldId rxBatchName;
   extern const BFTextFieldId SameBatchName;
   extern const BFTextFieldId EWI;
   extern const BFTextFieldId ErrMsg;
   extern const BFDecimalFieldId ErrNum;
   extern const BFDataId DSTC0142_VW;
   extern const BFDataId DSTC0142_VWRepeat_Record;
   extern const BFDataId DSTC0142_REQ;
   extern const BFDataId DSTC0095_VW;
   extern const BFTextFieldId AtFundtoClasstoCrossEdit;
   extern const BFTextFieldId AmountTypeCrossEdit;
   extern const BFTextFieldId FundToClassToAccountTo;
   extern const BFTextFieldId AcctNumSet;
   extern const BFTextFieldId MonthIndicator;
   extern const BFTextFieldId AtFrequency;
   extern const BFDecimalFieldId CurrTotal;
   extern const BFTextFieldId CheckUserAccess;
   extern const BFTextFieldId FrFundNumber;
   extern const BFTextFieldId ToFundNumber;
   extern const BFTextFieldId T550ReportMethod;
   extern const BFTextFieldId RRIFEnableCalcButton;
   extern const BFTextFieldId FromFundNumber;
   extern const BFTextFieldId FieldAssignment;
   extern const BFDateFieldId BODate;
   extern const BFTextFieldId BOTime;
   extern const BFTextFieldId BOZone;
   extern const BFDateFieldId FIDate;
   extern const BFTextFieldId FITime;
   extern const BFTextFieldId FIZone;
   extern const BFDecimalFieldId ConfNum;
   extern const BFTextFieldId LV_RESPBenRelJoinHeading;
   extern const BFDataId DSTC0145_REQ;
   extern const BFDataId DSTC0145_VW;
   extern const BFTextFieldId AmtTypeE;
   extern const BFTextFieldId AccessAllSlsRep;
   extern const BFTextFieldId SearchFund;
   extern const BFTextFieldId SearchFundUsing;
   extern const BFTextFieldId rxTransTypeJapanese;
   extern const BFTextFieldId rxTransTypeRIF;
   extern const BFTextFieldId rxTransTypeRESP;
   extern const BFTextFieldId rxTransTypeCanadian;
   extern const BFTextFieldId FundName;
   extern const BFTextFieldId UpdType;
   extern const BFTextFieldId TableTag;
   extern const BFTextFieldId Repeating1;
   extern const BFTextFieldId Repeating2;
   extern const BFTextFieldId Repeating3;
   extern const BFTextFieldId Repeating4;
   extern const BFTextFieldId Repeating5;
   extern const BFTextFieldId Repeating6;
   extern const BFTextFieldId Repeating7;
   extern const BFTextFieldId Repeating8;
   extern const BFTextFieldId Repeating9;
   extern const BFTextFieldId Repeating10;
   extern const BFTextFieldId Repeating11;
   extern const BFTextFieldId Repeating12;
   extern const BFTextFieldId Repeating13;
   extern const BFTextFieldId Repeating14;
   extern const BFTextFieldId Repeating15;
   extern const BFTextFieldId Repeating16;
   extern const BFTextFieldId Repeating17;
   extern const BFTextFieldId Repeating18;
   extern const BFTextFieldId Repeating19;
   extern const BFTextFieldId Repeating20;
   extern const BFTextFieldId Repeating21;
   extern const BFTextFieldId Repeating22;
   extern const BFTextFieldId Repeating23;
   extern const BFTextFieldId Repeating24;
   extern const BFTextFieldId Repeating25;
   extern const BFTextFieldId Repeating26;
   extern const BFTextFieldId Repeating27;
   extern const BFTextFieldId Repeating28;
   extern const BFTextFieldId Repeating29;
   extern const BFTextFieldId Repeating30;
   extern const BFTextFieldId Repeating31;
   extern const BFTextFieldId Repeating32;
   extern const BFTextFieldId Repeating33;
   extern const BFTextFieldId Repeating34;
   extern const BFTextFieldId Repeating35;
   extern const BFDataId DSTC0136_VW;
   extern const BFDataId DSTC0136_REQ;
   extern const BFDataId DSTC0136_VWRepeat_Record;
   extern const BFDataId DSTC0145_REQRepeat_Record;
   extern const BFTextFieldId FundAllow;
   extern const BFTextFieldId ShrEFTConsol;
   extern const BFTextFieldId PACSWPEFTConsol;
   extern const BFDecimalFieldId ContributionLimit;
   extern const BFDataId DSTC0116_REQ;
   extern const BFDataId DSTC0116_VW;
   extern const BFDataId DSTC0116_VWRepeat_Record;
   extern const BFTextFieldId HRRelation;
   extern const BFTextFieldId Default;
   extern const BFDataId DSTC0140_REQ;
   extern const BFDataId DSTC0140_VW;
   extern const BFTextFieldId FutureContract;
   extern const BFTextFieldId CreateContract;
   extern const BFTextFieldId DepAllowed;
   extern const BFTextFieldId ResetExist;
   extern const BFTextFieldId SearchTradeUsing;
   extern const BFTextFieldId ValidSpSIN;
   extern const BFTextFieldId RIFExist;
   extern const BFTextFieldId GBCD;
   extern const BFTextFieldId TaxNominee;
   extern const BFTextFieldId DeathStat;
   extern const BFDataId DSTC0143_REQ;
   extern const BFDataId DSTC0143_VW;
   extern const BFTextFieldId ProductCode;
   extern const BFTextFieldId LIPRateExist;
   extern const BFDecimalFieldId MaxPensionEarning;
   extern const BFTextFieldId CurrLIPSetup;
   extern const BFTextFieldId AmountOver;
   extern const BFTextFieldId RdLckdE;
   extern const BFTextFieldId RdLckdW;
   extern const BFTextFieldId TitleRestrict;
   extern const BFTextFieldId EditDeffs;
   extern const BFTextFieldId RedAccruedInt;
   extern const BFTextFieldId PQLIFLIRARedCodes;
   extern const BFTextFieldId PQLIFLIRAJuris;
   extern const BFIntegerFieldId PQLIFLIRAAage;
   extern const BFIntegerFieldId PQLIFLIRAMaxPrct;
   extern const BFTextFieldId PQLIFLIRATaxType;
   extern const BFDecimalFieldId PurchaseTotal;
   extern const BFTextFieldId RRIFcrossEffectiveDate;
   extern const BFTextFieldId RRIFcrossStopDate;
   extern const BFTextFieldId RRIFcrossEndOfMonth;
   extern const BFTextFieldId RRIFcrossFedRate;
   extern const BFTextFieldId RRIFcrossRate;
   extern const BFTextFieldId RRIFcrossIndexRate;
   extern const BFTextFieldId RRIFcrossGrossOrNet;
   extern const BFTextFieldId RRIFcrossAddrCode;
   extern const BFTextFieldId BankInformation;
   extern const BFTextFieldId MonthlyIndicator;
   extern const BFTextFieldId RRIFcrossProvRate;
   extern const BFTextFieldId DuplicateTrade;
   extern const BFTextFieldId InitPurch;
   extern const BFTextFieldId MinRedMsg;
   extern const BFTextFieldId AcctBalMsg;
   extern const BFTextFieldId FundLocked;
   extern const BFTextFieldId FundExist;
   extern const BFDecimalFieldId IssuedFundUnits;
   extern const BFTextFieldId UnitHeld;
   extern const BFTextFieldId AllAccounts;
   extern const BFTextFieldId TaxTransTypes;
   extern const BFTextFieldId AmountReason;
   extern const BFTextFieldId FundCurrency;
   extern const BFDecimalFieldId SpecAcctNum;
   extern const BFTextFieldId TradeCutOff;
   extern const BFTextFieldId Residency;
   extern const BFTextFieldId BankInstrCombo5;
   extern const BFDataId DSTC0147_REQ;
   extern const BFDataId DSTC0147_VW;
   extern const BFDataId DSTC0147_VWRepeat_Record;
   extern const BFDateFieldId SuggestDealDate;
   extern const BFTextFieldId FeeDfnExist;
   extern const BFTextFieldId MinMaxApplies;
   extern const BFDecimalFieldId MaxRedFee;
   extern const BFTextFieldId LLPValMsg;
   extern const BFTextFieldId TransExist;
   extern const BFTextFieldId MinWithAgeErr1;
   extern const BFTextFieldId MinWithAgeErr2;
   extern const BFTextFieldId PenInfoErr;
   extern const BFTextFieldId TaxTypeRulErr;
   extern const BFDecimalFieldId AmtSysCalc;
   extern const BFTextFieldId RedCodesErr;
   extern const BFTextFieldId RRIFDetlErr;
   extern const BFTextFieldId LowRemainBal;
   extern const BFDecimalFieldId RemAmtPayFirst;
   extern const BFTextFieldId AmntOverMax;
   extern const BFTextFieldId AutoBanking;
   extern const BFTextFieldId RdAcctCurrency;
   extern const BFTextFieldId BankSrcAcct;
   extern const BFTextFieldId SourceOffFund;
   extern const BFTextFieldId ModRecipType;
   extern const BFTextFieldId AllowWire;
   extern const BFTextFieldId MMWire;
   extern const BFTextFieldId VolSettleType;
   extern const BFTextFieldId DepValid;
   extern const BFTextFieldId DepClosed;
   extern const BFTextFieldId ACBExist;
   extern const BFTextFieldId DistributionExist;
   extern const BFTextFieldId ChequeExist;
   extern const BFTextFieldId InterestAccrExist;
   extern const BFTextFieldId PartTransAsFull;
   extern const BFTextFieldId CheqDeliveryDefault;
   extern const BFTextFieldId CashDistribRule;
   extern const BFDataFieldProperties s_FldProp_rxBatchName;
   extern const BFDataFieldProperties s_FldProp_SameBatchName;
   extern const BFDataFieldProperties s_FldProp_EWI;
   extern const BFDataFieldProperties s_FldProp_ErrMsg;
   extern const BFDataFieldProperties s_FldProp_ErrNum;
   extern const BFDataFieldProperties s_FldProp_DSTC0142_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0142_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0142_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0095_VW;
   extern const BFDataFieldProperties s_FldProp_AtFundtoClasstoCrossEdit;
   extern const BFDataFieldProperties s_FldProp_AmountTypeCrossEdit;
   extern const BFDataFieldProperties s_FldProp_FundToClassToAccountTo;
   extern const BFDataFieldProperties s_FldProp_AcctNumSet;
   extern const BFDataFieldProperties s_FldProp_MonthIndicator;
   extern const BFDataFieldProperties s_FldProp_AtFrequency;
   extern const BFDataFieldProperties s_FldProp_CurrTotal;
   extern const BFDataFieldProperties s_FldProp_CheckUserAccess;
   extern const BFDataFieldProperties s_FldProp_FrFundNumber;
   extern const BFDataFieldProperties s_FldProp_ToFundNumber;
   extern const BFDataFieldProperties s_FldProp_T550ReportMethod;
   extern const BFDataFieldProperties s_FldProp_RRIFEnableCalcButton;
   extern const BFDataFieldProperties s_FldProp_FromFundNumber;
   extern const BFDataFieldProperties s_FldProp_FieldAssignment;
   extern const BFDataFieldProperties s_FldProp_BODate;
   extern const BFDataFieldProperties s_FldProp_BOTime;
   extern const BFDataFieldProperties s_FldProp_BOZone;
   extern const BFDataFieldProperties s_FldProp_FIDate;
   extern const BFDataFieldProperties s_FldProp_FITime;
   extern const BFDataFieldProperties s_FldProp_FIZone;
   extern const BFDataFieldProperties s_FldProp_ConfNum;
   extern const BFDataFieldProperties s_FldProp_LV_RESPBenRelJoinHeading;
   extern const BFDataFieldProperties s_FldProp_DSTC0145_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0145_VW;
   extern const BFDataFieldProperties s_FldProp_AmtTypeE;
   extern const BFDataFieldProperties s_FldProp_AccessAllSlsRep;
   extern const BFDataFieldProperties s_FldProp_SearchFund;
   extern const BFDataFieldProperties s_FldProp_SearchFundUsing;
   extern const BFDataFieldProperties s_FldProp_rxTransTypeJapanese;
   extern const BFDataFieldProperties s_FldProp_rxTransTypeRIF;
   extern const BFDataFieldProperties s_FldProp_rxTransTypeRESP;
   extern const BFDataFieldProperties s_FldProp_rxTransTypeCanadian;
   extern const BFDataFieldProperties s_FldProp_FundName;
   extern const BFDataFieldProperties s_FldProp_UpdType;
   extern const BFDataFieldProperties s_FldProp_TableTag;
   extern const BFDataFieldProperties s_FldProp_Repeating1;
   extern const BFDataFieldProperties s_FldProp_Repeating2;
   extern const BFDataFieldProperties s_FldProp_Repeating3;
   extern const BFDataFieldProperties s_FldProp_Repeating4;
   extern const BFDataFieldProperties s_FldProp_Repeating5;
   extern const BFDataFieldProperties s_FldProp_Repeating6;
   extern const BFDataFieldProperties s_FldProp_Repeating7;
   extern const BFDataFieldProperties s_FldProp_Repeating8;
   extern const BFDataFieldProperties s_FldProp_Repeating9;
   extern const BFDataFieldProperties s_FldProp_Repeating10;
   extern const BFDataFieldProperties s_FldProp_Repeating11;
   extern const BFDataFieldProperties s_FldProp_Repeating12;
   extern const BFDataFieldProperties s_FldProp_Repeating13;
   extern const BFDataFieldProperties s_FldProp_Repeating14;
   extern const BFDataFieldProperties s_FldProp_Repeating15;
   extern const BFDataFieldProperties s_FldProp_Repeating16;
   extern const BFDataFieldProperties s_FldProp_Repeating17;
   extern const BFDataFieldProperties s_FldProp_Repeating18;
   extern const BFDataFieldProperties s_FldProp_Repeating19;
   extern const BFDataFieldProperties s_FldProp_Repeating20;
   extern const BFDataFieldProperties s_FldProp_Repeating21;
   extern const BFDataFieldProperties s_FldProp_Repeating22;
   extern const BFDataFieldProperties s_FldProp_Repeating23;
   extern const BFDataFieldProperties s_FldProp_Repeating24;
   extern const BFDataFieldProperties s_FldProp_Repeating25;
   extern const BFDataFieldProperties s_FldProp_Repeating26;
   extern const BFDataFieldProperties s_FldProp_Repeating27;
   extern const BFDataFieldProperties s_FldProp_Repeating28;
   extern const BFDataFieldProperties s_FldProp_Repeating29;
   extern const BFDataFieldProperties s_FldProp_Repeating30;
   extern const BFDataFieldProperties s_FldProp_Repeating31;
   extern const BFDataFieldProperties s_FldProp_Repeating32;
   extern const BFDataFieldProperties s_FldProp_Repeating33;
   extern const BFDataFieldProperties s_FldProp_Repeating34;
   extern const BFDataFieldProperties s_FldProp_Repeating35;
   extern const BFDataFieldProperties s_FldProp_DSTC0136_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0136_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0136_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0145_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_FundAllow;
   extern const BFDataFieldProperties s_FldProp_ShrEFTConsol;
   extern const BFDataFieldProperties s_FldProp_PACSWPEFTConsol;
   extern const BFDataFieldProperties s_FldProp_ContributionLimit;
   extern const BFDataFieldProperties s_FldProp_DSTC0116_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0116_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0116_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_HRRelation;
   extern const BFDataFieldProperties s_FldProp_Default;
   extern const BFDataFieldProperties s_FldProp_DSTC0140_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0140_VW;
   extern const BFDataFieldProperties s_FldProp_FutureContract;
   extern const BFDataFieldProperties s_FldProp_CreateContract;
   extern const BFDataFieldProperties s_FldProp_DepAllowed;
   extern const BFDataFieldProperties s_FldProp_ResetExist;
   extern const BFDataFieldProperties s_FldProp_SearchTradeUsing;
   extern const BFDataFieldProperties s_FldProp_ValidSpSIN;
   extern const BFDataFieldProperties s_FldProp_RIFExist;
   extern const BFDataFieldProperties s_FldProp_GBCD;
   extern const BFDataFieldProperties s_FldProp_TaxNominee;
   extern const BFDataFieldProperties s_FldProp_DeathStat;
   extern const BFDataFieldProperties s_FldProp_DSTC0143_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0143_VW;
   extern const BFDataFieldProperties s_FldProp_ProductCode;
   extern const BFDataFieldProperties s_FldProp_LIPRateExist;
   extern const BFDataFieldProperties s_FldProp_MaxPensionEarning;
   extern const BFDataFieldProperties s_FldProp_CurrLIPSetup;
   extern const BFDataFieldProperties s_FldProp_AmountOver;
   extern const BFDataFieldProperties s_FldProp_RdLckdE;
   extern const BFDataFieldProperties s_FldProp_RdLckdW;
   extern const BFDataFieldProperties s_FldProp_TitleRestrict;
   extern const BFDataFieldProperties s_FldProp_EditDeffs;
   extern const BFDataFieldProperties s_FldProp_RedAccruedInt;
   extern const BFDataFieldProperties s_FldProp_PQLIFLIRARedCodes;
   extern const BFDataFieldProperties s_FldProp_PQLIFLIRAJuris;
   extern const BFDataFieldProperties s_FldProp_PQLIFLIRAAage;
   extern const BFDataFieldProperties s_FldProp_PQLIFLIRAMaxPrct;
   extern const BFDataFieldProperties s_FldProp_PQLIFLIRATaxType;
   extern const BFDataFieldProperties s_FldProp_PurchaseTotal;
   extern const BFDataFieldProperties s_FldProp_RRIFcrossEffectiveDate;
   extern const BFDataFieldProperties s_FldProp_RRIFcrossStopDate;
   extern const BFDataFieldProperties s_FldProp_RRIFcrossEndOfMonth;
   extern const BFDataFieldProperties s_FldProp_RRIFcrossFedRate;
   extern const BFDataFieldProperties s_FldProp_RRIFcrossRate;
   extern const BFDataFieldProperties s_FldProp_RRIFcrossIndexRate;
   extern const BFDataFieldProperties s_FldProp_RRIFcrossGrossOrNet;
   extern const BFDataFieldProperties s_FldProp_RRIFcrossAddrCode;
   extern const BFDataFieldProperties s_FldProp_BankInformation;
   extern const BFDataFieldProperties s_FldProp_MonthlyIndicator;
   extern const BFDataFieldProperties s_FldProp_RRIFcrossProvRate;
   extern const BFDataFieldProperties s_FldProp_DuplicateTrade;
   extern const BFDataFieldProperties s_FldProp_InitPurch;
   extern const BFDataFieldProperties s_FldProp_MinRedMsg;
   extern const BFDataFieldProperties s_FldProp_AcctBalMsg;
   extern const BFDataFieldProperties s_FldProp_FundLocked;
   extern const BFDataFieldProperties s_FldProp_FundExist;
   extern const BFDataFieldProperties s_FldProp_IssuedFundUnits;
   extern const BFDataFieldProperties s_FldProp_UnitHeld;
   extern const BFDataFieldProperties s_FldProp_AllAccounts;
   extern const BFDataFieldProperties s_FldProp_TaxTransTypes;
   extern const BFDataFieldProperties s_FldProp_AmountReason;
   extern const BFDataFieldProperties s_FldProp_FundCurrency;
   extern const BFDataFieldProperties s_FldProp_SpecAcctNum;
   extern const BFDataFieldProperties s_FldProp_TradeCutOff;
   extern const BFDataFieldProperties s_FldProp_Residency;
   extern const BFDataFieldProperties s_FldProp_BankInstrCombo5;
   extern const BFDataFieldProperties s_FldProp_DSTC0147_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0147_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0147_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_SuggestDealDate;
   extern const BFDataFieldProperties s_FldProp_FeeDfnExist;
   extern const BFDataFieldProperties s_FldProp_MinMaxApplies;
   extern const BFDataFieldProperties s_FldProp_MaxRedFee;
   extern const BFDataFieldProperties s_FldProp_LLPValMsg;
   extern const BFDataFieldProperties s_FldProp_TransExist;
   extern const BFDataFieldProperties s_FldProp_MinWithAgeErr1;
   extern const BFDataFieldProperties s_FldProp_MinWithAgeErr2;
   extern const BFDataFieldProperties s_FldProp_PenInfoErr;
   extern const BFDataFieldProperties s_FldProp_TaxTypeRulErr;
   extern const BFDataFieldProperties s_FldProp_AmtSysCalc;
   extern const BFDataFieldProperties s_FldProp_RedCodesErr;
   extern const BFDataFieldProperties s_FldProp_RRIFDetlErr;
   extern const BFDataFieldProperties s_FldProp_LowRemainBal;
   extern const BFDataFieldProperties s_FldProp_RemAmtPayFirst;
   extern const BFDataFieldProperties s_FldProp_AmntOverMax;
   extern const BFDataFieldProperties s_FldProp_AutoBanking;
   extern const BFDataFieldProperties s_FldProp_RdAcctCurrency;
   extern const BFDataFieldProperties s_FldProp_BankSrcAcct;
   extern const BFDataFieldProperties s_FldProp_SourceOffFund;
   extern const BFDataFieldProperties s_FldProp_ModRecipType;
   extern const BFDataFieldProperties s_FldProp_AllowWire;
   extern const BFDataFieldProperties s_FldProp_MMWire;
   extern const BFDataFieldProperties s_FldProp_VolSettleType;
   extern const BFDataFieldProperties s_FldProp_DepValid;
   extern const BFDataFieldProperties s_FldProp_DepClosed;
   extern const BFDataFieldProperties s_FldProp_ACBExist;
   extern const BFDataFieldProperties s_FldProp_DistributionExist;
   extern const BFDataFieldProperties s_FldProp_ChequeExist;
   extern const BFDataFieldProperties s_FldProp_InterestAccrExist;
   extern const BFDataFieldProperties s_FldProp_PartTransAsFull;
   extern const BFDataFieldProperties s_FldProp_CheqDeliveryDefault;
   extern const BFDataFieldProperties s_FldProp_CashDistribRule;
   BFDataField* createField_9( const BFFieldId id )
   {
      BFDataField* pField = NULL;
      switch( id.getId() )
      {
         case 40001800: pField = new BFTextField_60( rxBatchName, &s_FldProp_rxBatchName ); break;
         case 40001801: pField = new BFTextField_10( SameBatchName, &s_FldProp_SameBatchName ); break;
         case 40001802: pField = new BFTextField_60( EWI, &s_FldProp_EWI ); break;
         case 40001803: pField = new BFTextField<200>( ErrMsg, &s_FldProp_ErrMsg ); break;
         case 40001804: pField = new BFDecimalField( ErrNum, &s_FldProp_ErrNum ); break;
         case 40001809: pField = new BFTextField_2( AtFundtoClasstoCrossEdit, &s_FldProp_AtFundtoClasstoCrossEdit ); break;
         case 40001810: pField = new BFTextField_2( AmountTypeCrossEdit, &s_FldProp_AmountTypeCrossEdit ); break;
         case 40001811: pField = new BFTextField_2( FundToClassToAccountTo, &s_FldProp_FundToClassToAccountTo ); break;
         case 40001812: pField = new BFTextField_1( AcctNumSet, &s_FldProp_AcctNumSet ); break;
         case 40001813: pField = new BFTextField<12>( MonthIndicator, &s_FldProp_MonthIndicator ); break;
         case 40001814: pField = new BFTextField_10( AtFrequency, &s_FldProp_AtFrequency ); break;
         case 40001815: pField = new BFDecimalField( CurrTotal, &s_FldProp_CurrTotal ); break;
         case 40001816: pField = new BFTextField_1( CheckUserAccess, &s_FldProp_CheckUserAccess ); break;
         case 40001817: pField = new BFTextField_60( FrFundNumber, &s_FldProp_FrFundNumber ); break;
         case 40001818: pField = new BFTextField_60( ToFundNumber, &s_FldProp_ToFundNumber ); break;
         case 40001819: pField = new BFTextField_1( T550ReportMethod, &s_FldProp_T550ReportMethod ); break;
         case 40001820: pField = new BFTextField_10( RRIFEnableCalcButton, &s_FldProp_RRIFEnableCalcButton ); break;
         case 40001821: pField = new BFTextField<5>( FromFundNumber, &s_FldProp_FromFundNumber ); break;
         case 40001822: pField = new BFTextField_10( FieldAssignment, &s_FldProp_FieldAssignment ); break;
         case 40001823: pField = new BFDateField( BODate, &s_FldProp_BODate ); break;
         case 40001824: pField = new BFTextField<15>( BOTime, &s_FldProp_BOTime ); break;
         case 40001825: pField = new BFTextField<15>( BOZone, &s_FldProp_BOZone ); break;
         case 40001826: pField = new BFDateField( FIDate, &s_FldProp_FIDate ); break;
         case 40001827: pField = new BFTextField_10( FITime, &s_FldProp_FITime ); break;
         case 40001828: pField = new BFTextField_10( FIZone, &s_FldProp_FIZone ); break;
         case 40001829: pField = new BFDecimalField( ConfNum, &s_FldProp_ConfNum ); break;
         case 40001830: pField = new BFTextField_60( LV_RESPBenRelJoinHeading, &s_FldProp_LV_RESPBenRelJoinHeading ); break;
         case 40001833: pField = new BFTextField_10( AmtTypeE, &s_FldProp_AmtTypeE ); break;
         case 40001834: pField = new BFTextField_1( AccessAllSlsRep, &s_FldProp_AccessAllSlsRep ); break;
         case 40001835: pField = new BFTextField_60( SearchFund, &s_FldProp_SearchFund ); break;
         case 40001836: pField = new BFTextField_60( SearchFundUsing, &s_FldProp_SearchFundUsing ); break;
         case 40001837: pField = new BFTextField_60( rxTransTypeJapanese, &s_FldProp_rxTransTypeJapanese ); break;
         case 40001838: pField = new BFTextField_60( rxTransTypeRIF, &s_FldProp_rxTransTypeRIF ); break;
         case 40001839: pField = new BFTextField_60( rxTransTypeRESP, &s_FldProp_rxTransTypeRESP ); break;
         case 40001840: pField = new BFTextField_60( rxTransTypeCanadian, &s_FldProp_rxTransTypeCanadian ); break;
         case 40001841: pField = new BFTextField_60( FundName, &s_FldProp_FundName ); break;
         case 40001842: pField = new BFTextField_60( UpdType, &s_FldProp_UpdType ); break;
         case 40001843: pField = new BFTextField_60( TableTag, &s_FldProp_TableTag ); break;
         case 40001844: pField = new BFTextField_60( Repeating1, &s_FldProp_Repeating1 ); break;
         case 40001845: pField = new BFTextField_60( Repeating2, &s_FldProp_Repeating2 ); break;
         case 40001846: pField = new BFTextField_60( Repeating3, &s_FldProp_Repeating3 ); break;
         case 40001847: pField = new BFTextField_60( Repeating4, &s_FldProp_Repeating4 ); break;
         case 40001848: pField = new BFTextField_60( Repeating5, &s_FldProp_Repeating5 ); break;
         case 40001849: pField = new BFTextField_60( Repeating6, &s_FldProp_Repeating6 ); break;
         case 40001850: pField = new BFTextField_60( Repeating7, &s_FldProp_Repeating7 ); break;
         case 40001851: pField = new BFTextField_60( Repeating8, &s_FldProp_Repeating8 ); break;
         case 40001852: pField = new BFTextField_60( Repeating9, &s_FldProp_Repeating9 ); break;
         case 40001853: pField = new BFTextField_60( Repeating10, &s_FldProp_Repeating10 ); break;
         case 40001854: pField = new BFTextField<90>( Repeating11, &s_FldProp_Repeating11 ); break;
         case 40001855: pField = new BFTextField_60( Repeating12, &s_FldProp_Repeating12 ); break;
         case 40001856: pField = new BFTextField_60( Repeating13, &s_FldProp_Repeating13 ); break;
         case 40001857: pField = new BFTextField_60( Repeating14, &s_FldProp_Repeating14 ); break;
         case 40001858: pField = new BFTextField_60( Repeating15, &s_FldProp_Repeating15 ); break;
         case 40001859: pField = new BFTextField_60( Repeating16, &s_FldProp_Repeating16 ); break;
         case 40001860: pField = new BFTextField_60( Repeating17, &s_FldProp_Repeating17 ); break;
         case 40001861: pField = new BFTextField_60( Repeating18, &s_FldProp_Repeating18 ); break;
         case 40001862: pField = new BFTextField_60( Repeating19, &s_FldProp_Repeating19 ); break;
         case 40001863: pField = new BFTextField_60( Repeating20, &s_FldProp_Repeating20 ); break;
         case 40001864: pField = new BFTextField_60( Repeating21, &s_FldProp_Repeating21 ); break;
         case 40001865: pField = new BFTextField_60( Repeating22, &s_FldProp_Repeating22 ); break;
         case 40001866: pField = new BFTextField_60( Repeating23, &s_FldProp_Repeating23 ); break;
         case 40001867: pField = new BFTextField_60( Repeating24, &s_FldProp_Repeating24 ); break;
         case 40001868: pField = new BFTextField_60( Repeating25, &s_FldProp_Repeating25 ); break;
         case 40001869: pField = new BFTextField_60( Repeating26, &s_FldProp_Repeating26 ); break;
         case 40001870: pField = new BFTextField_60( Repeating27, &s_FldProp_Repeating27 ); break;
         case 40001871: pField = new BFTextField_60( Repeating28, &s_FldProp_Repeating28 ); break;
         case 40001872: pField = new BFTextField_60( Repeating29, &s_FldProp_Repeating29 ); break;
         case 40001873: pField = new BFTextField_60( Repeating30, &s_FldProp_Repeating30 ); break;
         case 40001874: pField = new BFTextField_60( Repeating31, &s_FldProp_Repeating31 ); break;
         case 40001875: pField = new BFTextField_60( Repeating32, &s_FldProp_Repeating32 ); break;
         case 40001876: pField = new BFTextField_60( Repeating33, &s_FldProp_Repeating33 ); break;
         case 40001877: pField = new BFTextField_60( Repeating34, &s_FldProp_Repeating34 ); break;
         case 40001878: pField = new BFTextField_60( Repeating35, &s_FldProp_Repeating35 ); break;
         case 40001883: pField = new BFTextField_1( FundAllow, &s_FldProp_FundAllow ); break;
         case 40001884: pField = new BFTextField_1( ShrEFTConsol, &s_FldProp_ShrEFTConsol ); break;
         case 40001885: pField = new BFTextField_1( PACSWPEFTConsol, &s_FldProp_PACSWPEFTConsol ); break;
         case 40001886: pField = new BFDecimalField( ContributionLimit, &s_FldProp_ContributionLimit ); break;
         case 40001890: pField = new BFTextField<20>( HRRelation, &s_FldProp_HRRelation ); break;
         case 40001891: pField = new BFTextField_1( Default, &s_FldProp_Default ); break;
         case 40001894: pField = new BFTextField_1( FutureContract, &s_FldProp_FutureContract ); break;
         case 40001895: pField = new BFTextField_1( CreateContract, &s_FldProp_CreateContract ); break;
         case 40001896: pField = new BFTextField_1( DepAllowed, &s_FldProp_DepAllowed ); break;
         case 40001897: pField = new BFTextField_1( ResetExist, &s_FldProp_ResetExist ); break;
         case 40001898: pField = new BFTextField_60( SearchTradeUsing, &s_FldProp_SearchTradeUsing ); break;
         case 40001899: pField = new BFTextField_1( ValidSpSIN, &s_FldProp_ValidSpSIN ); break;
         case 40001900: pField = new BFTextField_1( RIFExist, &s_FldProp_RIFExist ); break;
         case 40001901: pField = new BFTextField_1( GBCD, &s_FldProp_GBCD ); break;
         case 40001902: pField = new BFTextField_1( TaxNominee, &s_FldProp_TaxNominee ); break;
         case 40001903: pField = new BFTextField_1( DeathStat, &s_FldProp_DeathStat ); break;
         case 40001906: pField = new BFTextField_10( ProductCode, &s_FldProp_ProductCode ); break;
         case 40001907: pField = new BFTextField_1( LIPRateExist, &s_FldProp_LIPRateExist ); break;
         case 40001908: pField = new BFDecimalField( MaxPensionEarning, &s_FldProp_MaxPensionEarning ); break;
         case 40001909: pField = new BFTextField_1( CurrLIPSetup, &s_FldProp_CurrLIPSetup ); break;
         case 40001910: pField = new BFTextField_1( AmountOver, &s_FldProp_AmountOver ); break;
         case 40001911: pField = new BFTextField_1( RdLckdE, &s_FldProp_RdLckdE ); break;
         case 40001912: pField = new BFTextField_1( RdLckdW, &s_FldProp_RdLckdW ); break;
         case 40001913: pField = new BFTextField_1( TitleRestrict, &s_FldProp_TitleRestrict ); break;
         case 40001914: pField = new BFTextField_1( EditDeffs, &s_FldProp_EditDeffs ); break;
         case 40001915: pField = new BFTextField_1( RedAccruedInt, &s_FldProp_RedAccruedInt ); break;
         case 40001916: pField = new BFTextField_60( PQLIFLIRARedCodes, &s_FldProp_PQLIFLIRARedCodes ); break;
         case 40001917: pField = new BFTextField_60( PQLIFLIRAJuris, &s_FldProp_PQLIFLIRAJuris ); break;
         case 40001918: pField = new BFIntegerField( PQLIFLIRAAage, &s_FldProp_PQLIFLIRAAage ); break;
         case 40001919: pField = new BFIntegerField( PQLIFLIRAMaxPrct, &s_FldProp_PQLIFLIRAMaxPrct ); break;
         case 40001920: pField = new BFTextField_60( PQLIFLIRATaxType, &s_FldProp_PQLIFLIRATaxType ); break;
         case 40001921: pField = new BFDecimalField( PurchaseTotal, &s_FldProp_PurchaseTotal ); break;
         case 40001922: pField = new BFTextField_60( RRIFcrossEffectiveDate, &s_FldProp_RRIFcrossEffectiveDate ); break;
         case 40001923: pField = new BFTextField_60( RRIFcrossStopDate, &s_FldProp_RRIFcrossStopDate ); break;
         case 40001924: pField = new BFTextField_60( RRIFcrossEndOfMonth, &s_FldProp_RRIFcrossEndOfMonth ); break;
         case 40001925: pField = new BFTextField_60( RRIFcrossFedRate, &s_FldProp_RRIFcrossFedRate ); break;
         case 40001926: pField = new BFTextField_60( RRIFcrossRate, &s_FldProp_RRIFcrossRate ); break;
         case 40001927: pField = new BFTextField_60( RRIFcrossIndexRate, &s_FldProp_RRIFcrossIndexRate ); break;
         case 40001928: pField = new BFTextField_60( RRIFcrossGrossOrNet, &s_FldProp_RRIFcrossGrossOrNet ); break;
         case 40001929: pField = new BFTextField_60( RRIFcrossAddrCode, &s_FldProp_RRIFcrossAddrCode ); break;
         case 40001930: pField = new BFTextField_60( BankInformation, &s_FldProp_BankInformation ); break;
         case 40001931: pField = new BFTextField_60( MonthlyIndicator, &s_FldProp_MonthlyIndicator ); break;
         case 40001932: pField = new BFTextField_10( RRIFcrossProvRate, &s_FldProp_RRIFcrossProvRate ); break;
         case 40001933: pField = new BFTextField_60( DuplicateTrade, &s_FldProp_DuplicateTrade ); break;
         case 40001934: pField = new BFTextField_1( InitPurch, &s_FldProp_InitPurch ); break;
         case 40001935: pField = new BFTextField_60( MinRedMsg, &s_FldProp_MinRedMsg ); break;
         case 40001936: pField = new BFTextField_60( AcctBalMsg, &s_FldProp_AcctBalMsg ); break;
         case 40001937: pField = new BFTextField_1( FundLocked, &s_FldProp_FundLocked ); break;
         case 40001938: pField = new BFTextField_1( FundExist, &s_FldProp_FundExist ); break;
         case 40001940: pField = new BFDecimalField( IssuedFundUnits, &s_FldProp_IssuedFundUnits ); break;
         case 40001941: pField = new BFTextField_1( UnitHeld, &s_FldProp_UnitHeld ); break;
         case 40001942: pField = new BFTextField_1( AllAccounts, &s_FldProp_AllAccounts ); break;
         case 40001943: pField = new BFTextField_60( TaxTransTypes, &s_FldProp_TaxTransTypes ); break;
         case 40001947: pField = new BFTextField_60( AmountReason, &s_FldProp_AmountReason ); break;
         case 40001948: pField = new BFTextField_60( FundCurrency, &s_FldProp_FundCurrency ); break;
         case 40001951: pField = new BFDecimalField( SpecAcctNum, &s_FldProp_SpecAcctNum ); break;
         case 40001953: pField = new BFTextField_1( TradeCutOff, &s_FldProp_TradeCutOff ); break;
         case 40001954: pField = new BFTextField_1( Residency, &s_FldProp_Residency ); break;
         case 40001956: pField = new BFTextField_60( BankInstrCombo5, &s_FldProp_BankInstrCombo5 ); break;
         case 40001961: pField = new BFDateField( SuggestDealDate, &s_FldProp_SuggestDealDate ); break;
         case 40001962: pField = new BFTextField_1( FeeDfnExist, &s_FldProp_FeeDfnExist ); break;
         case 40001963: pField = new BFTextField_1( MinMaxApplies, &s_FldProp_MinMaxApplies ); break;
         case 40001964: pField = new BFDecimalField( MaxRedFee, &s_FldProp_MaxRedFee ); break;
         case 40001966: pField = new BFTextField_60( LLPValMsg, &s_FldProp_LLPValMsg ); break;
         case 40001967: pField = new BFTextField_1( TransExist, &s_FldProp_TransExist ); break;
         case 40001968: pField = new BFTextField_1( MinWithAgeErr1, &s_FldProp_MinWithAgeErr1 ); break;
         case 40001969: pField = new BFTextField_1( MinWithAgeErr2, &s_FldProp_MinWithAgeErr2 ); break;
         case 40001970: pField = new BFTextField_1( PenInfoErr, &s_FldProp_PenInfoErr ); break;
         case 40001971: pField = new BFTextField_1( TaxTypeRulErr, &s_FldProp_TaxTypeRulErr ); break;
         case 40001972: pField = new BFDecimalField( AmtSysCalc, &s_FldProp_AmtSysCalc ); break;
         case 40001973: pField = new BFTextField_1( RedCodesErr, &s_FldProp_RedCodesErr ); break;
         case 40001974: pField = new BFTextField_1( RRIFDetlErr, &s_FldProp_RRIFDetlErr ); break;
         case 40001975: pField = new BFTextField_1( LowRemainBal, &s_FldProp_LowRemainBal ); break;
         case 40001976: pField = new BFDecimalField( RemAmtPayFirst, &s_FldProp_RemAmtPayFirst ); break;
         case 40001977: pField = new BFTextField_1( AmntOverMax, &s_FldProp_AmntOverMax ); break;
         case 40001978: pField = new BFTextField_1( AutoBanking, &s_FldProp_AutoBanking ); break;
         case 40001979: pField = new BFTextField_1( RdAcctCurrency, &s_FldProp_RdAcctCurrency ); break;
         case 40001980: pField = new BFTextField_1( BankSrcAcct, &s_FldProp_BankSrcAcct ); break;
         case 40001981: pField = new BFTextField_1( SourceOffFund, &s_FldProp_SourceOffFund ); break;
         case 40001982: pField = new BFTextField_1( ModRecipType, &s_FldProp_ModRecipType ); break;
         case 40001984: pField = new BFTextField_1( AllowWire, &s_FldProp_AllowWire ); break;
         case 40001985: pField = new BFTextField_1( MMWire, &s_FldProp_MMWire ); break;
         case 40001986: pField = new BFTextField_60( VolSettleType, &s_FldProp_VolSettleType ); break;
         case 40001987: pField = new BFTextField_1( DepValid, &s_FldProp_DepValid ); break;
         case 40001988: pField = new BFTextField_1( DepClosed, &s_FldProp_DepClosed ); break;
         case 40001992: pField = new BFTextField_1( ACBExist, &s_FldProp_ACBExist ); break;
         case 40001993: pField = new BFTextField_1( DistributionExist, &s_FldProp_DistributionExist ); break;
         case 40001994: pField = new BFTextField_1( ChequeExist, &s_FldProp_ChequeExist ); break;
         case 40001995: pField = new BFTextField_1( InterestAccrExist, &s_FldProp_InterestAccrExist ); break;
         case 40001997: pField = new BFTextField_1( PartTransAsFull, &s_FldProp_PartTransAsFull ); break;
         case 40001998: pField = new BFTextField_10( CheqDeliveryDefault, &s_FldProp_CheqDeliveryDefault ); break;
      }
      return pField;
   }
}



