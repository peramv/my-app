// BFDataImpl header file for DataSet DSTC0121.VW
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFDecimalFieldId AcqFee;
   extern const BFTextFieldId AcqFeeType;
   extern const BFTextFieldId MaxFeeActive;
   extern const BFDecimalFieldId MaxFee;
   extern const BFTextFieldId MaxFeeType;
   extern const BFDecimalFieldId MaxPercent;
   extern const BFDecimalFieldId MaxFlatFundCurr;
   extern const BFDecimalFieldId MinFee;
   extern const BFDecimalFieldId MinPercent;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_AcqFee;
   extern const BFDataFieldProperties s_FldProp_AcqFeeType;
   extern const BFDataFieldProperties s_FldProp_MaxFeeActive;
   extern const BFDataFieldProperties s_FldProp_MaxFee;
   extern const BFDataFieldProperties s_FldProp_MaxFeeType;
   extern const BFDataFieldProperties s_FldProp_MaxPercent;
   extern const BFDataFieldProperties s_FldProp_MaxFlatFundCurr;
   extern const BFDataFieldProperties s_FldProp_MinFee;
   extern const BFDataFieldProperties s_FldProp_MinPercent;
}


class dsi_DSTC0121_VW : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0121_VW();
   virtual ~dsi_DSTC0121_VW();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[9];
   // Field Declarations
   BFDecimalField AcqFee_;
   BFTextField_1 AcqFeeType_;
   BFTextField_1 MaxFeeActive_;
   BFDecimalField MaxFee_;
   BFTextField_1 MaxFeeType_;
   BFDecimalField MaxPercent_;
   BFDecimalField MaxFlatFundCurr_;
   BFDecimalField MinFee_;
   BFDecimalField MinPercent_;

};
