// BFDataImpl header file for DataSet DSTC0018.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:58 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFNumericFieldId rxAcctNum;
   extern const BFTextFieldId rxFundCode;
   extern const BFTextFieldId rxClassCode;
   extern const BFTextFieldId CertNumber;
   extern const BFTextFieldId XrefNumber;
   extern const BFTextFieldId StatusCode;
   extern const BFTextFieldId StatusDesc;
   extern const BFDecimalFieldId Units;
   extern const BFTextFieldId Issued;
   extern const BFDateFieldId IssueDate;
   extern const BFDecimalFieldId AcctUnits;
   extern const BFDecimalFieldId IssuedUnits;
   extern const BFDecimalFieldId UnIssuedUnits;
   extern const BFTextFieldId LastStatusCode;
   extern const BFTextFieldId LastStatusDesc;
   extern const BFTextFieldId Reported;
   extern const BFDateFieldId LastRptDate;
   extern const BFTextFieldId AddrCode;
   extern const BFTextFieldId AddrLine1;
   extern const BFTextFieldId AddrLine2;
   extern const BFTextFieldId AddrLine3;
   extern const BFTextFieldId AddrLine4;
   extern const BFTextFieldId AddrLine5;
   extern const BFTextFieldId PostalCode;
   extern const BFTextFieldId Comments;
   extern const BFTextFieldId Username;
   extern const BFDateFieldId ProcessDate;
   extern const BFTextFieldId ModUser;
   extern const BFDateFieldId ModDate;
   extern const BFTextFieldId CountryCode;
   extern const BFTextFieldId CountryName;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_rxAcctNum;
   extern const BFDataFieldProperties s_FldProp_rxFundCode;
   extern const BFDataFieldProperties s_FldProp_rxClassCode;
   extern const BFDataFieldProperties s_FldProp_CertNumber;
   extern const BFDataFieldProperties s_FldProp_XrefNumber;
   extern const BFDataFieldProperties s_FldProp_StatusCode;
   extern const BFDataFieldProperties s_FldProp_StatusDesc;
   extern const BFDataFieldProperties s_FldProp_Units;
   extern const BFDataFieldProperties s_FldProp_Issued;
   extern const BFDataFieldProperties s_FldProp_IssueDate;
   extern const BFDataFieldProperties s_FldProp_AcctUnits;
   extern const BFDataFieldProperties s_FldProp_IssuedUnits;
   extern const BFDataFieldProperties s_FldProp_UnIssuedUnits;
   extern const BFDataFieldProperties s_FldProp_LastStatusCode;
   extern const BFDataFieldProperties s_FldProp_LastStatusDesc;
   extern const BFDataFieldProperties s_FldProp_Reported;
   extern const BFDataFieldProperties s_FldProp_LastRptDate;
   extern const BFDataFieldProperties s_FldProp_AddrCode;
   extern const BFDataFieldProperties s_FldProp_AddrLine1;
   extern const BFDataFieldProperties s_FldProp_AddrLine2;
   extern const BFDataFieldProperties s_FldProp_AddrLine3;
   extern const BFDataFieldProperties s_FldProp_AddrLine4;
   extern const BFDataFieldProperties s_FldProp_AddrLine5;
   extern const BFDataFieldProperties s_FldProp_PostalCode;
   extern const BFDataFieldProperties s_FldProp_Comments;
   extern const BFDataFieldProperties s_FldProp_Username;
   extern const BFDataFieldProperties s_FldProp_ProcessDate;
   extern const BFDataFieldProperties s_FldProp_ModUser;
   extern const BFDataFieldProperties s_FldProp_ModDate;
   extern const BFDataFieldProperties s_FldProp_CountryCode;
   extern const BFDataFieldProperties s_FldProp_CountryName;
}


class dsi_DSTC0018_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0018_VWRepeat_Record();
   virtual ~dsi_DSTC0018_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[31];
   // Field Declarations
   BFNumericField rxAcctNum_;
   BFTextField_60 rxFundCode_;
   BFTextField_60 rxClassCode_;
   BFTextField_60 CertNumber_;
   BFTextField_60 XrefNumber_;
   BFTextField_1 StatusCode_;
   BFTextField_60 StatusDesc_;
   BFDecimalField Units_;
   BFTextField_1 Issued_;
   BFDateField IssueDate_;
   BFDecimalField AcctUnits_;
   BFDecimalField IssuedUnits_;
   BFDecimalField UnIssuedUnits_;
   BFTextField_60 LastStatusCode_;
   BFTextField_60 LastStatusDesc_;
   BFTextField_1 Reported_;
   BFDateField LastRptDate_;
   BFTextField_60 AddrCode_;
   BFTextField_60 AddrLine1_;
   BFTextField_60 AddrLine2_;
   BFTextField_60 AddrLine3_;
   BFTextField_60 AddrLine4_;
   BFTextField_60 AddrLine5_;
   BFTextField<9> PostalCode_;
   BFTextField_60 Comments_;
   BFTextField_60 Username_;
   BFDateField ProcessDate_;
   BFTextField_60 ModUser_;
   BFDateField ModDate_;
   BFTextField_60 CountryCode_;
   BFTextField_60 CountryName_;

};
