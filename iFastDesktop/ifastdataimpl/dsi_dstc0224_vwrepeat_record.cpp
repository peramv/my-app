// BFDataImpl implementation file for DataSet DSTC0224.VWRepeat_Record
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Wednesday, September 20, 2017 03:21:14


#include "stdafx.h"
#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0224_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0224_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0224_VWRepeat_Record() { return new dsi_DSTC0224_VWRepeat_Record; }

dsi_DSTC0224_VWRepeat_Record::dsi_DSTC0224_VWRepeat_Record()
: BFDataImpl( 40003490 )
, CriteriaType_( ifds::CriteriaType, &ifds::s_FldProp_CriteriaType )
, CriteriaValue_( ifds::CriteriaValue, &ifds::s_FldProp_CriteriaValue )
, IncludeExclude_( ifds::IncludeExclude, &ifds::s_FldProp_IncludeExclude )
{
    cFields_ = 3;
    memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0224_VWRepeat_Record::~dsi_DSTC0224_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0224_VWRepeat_Record::clone()
{
    dsi_DSTC0224_VWRepeat_Record* p = new dsi_DSTC0224_VWRepeat_Record;
    p->CriteriaType_ = CriteriaType_;
    p->CriteriaValue_ = CriteriaValue_;
    p->IncludeExclude_ = IncludeExclude_;
    return(p);
}

BFDataField* dsi_DSTC0224_VWRepeat_Record::getElement( const BFFieldId& id )
{
    switch( id.getId() ) {
        case 40003468: return ( &CriteriaType_ ); break; // CriteriaType
        case 40003482: return ( &CriteriaValue_ ); break; // CriteriaValue
        case 40003476: return ( &IncludeExclude_ ); break; // IncludeExclude
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0224_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0224_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0224_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
    if ( iField >=0 && iField < 3 )
    {
        BFDataField* pField = aFlds_[iField];
        if( NULL == pField )
        {
            switch(iField)
            {
                case 0: aFlds_[0] = &CriteriaType_; break;
                case 1: aFlds_[1] = &CriteriaValue_; break;
                case 2: aFlds_[2] = &IncludeExclude_; break;
            }
            pField = aFlds_[iField];
            if( NULL == pField ) return( NULL );
        }
        return( pField );
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0224_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
    return( ( const_cast< dsi_DSTC0224_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0224_VWRepeat_Record::getLargestDefinedField( void ) const
{
    return( 256 );
}

unsigned long dsi_DSTC0224_VWRepeat_Record::getDefinedByteLength( void ) const
{
    return( 297 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0224_VWRepeat_Record::exists( const BFFieldId& id ) const
{
    return dsi_DSTC0224_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0224_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
    switch( id.getId() )
    {
        case 40003468: return ( true );
        case 40003482: return ( true );
        case 40003476: return ( true );
    }
    return false;
}

