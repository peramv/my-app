// BFDataImpl implementation file for DataSet DSTC0126.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0126_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0126_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0126_VWRepeat_Record() { return new dsi_DSTC0126_VWRepeat_Record; }

dsi_DSTC0126_VWRepeat_Record::dsi_DSTC0126_VWRepeat_Record()
: BFDataImpl( 40001478 )
, FundGroupType_( ifds::FundGroupType, &ifds::s_FldProp_FundGroupType )
, FundGroupCode_( ifds::FundGroupCode, &ifds::s_FldProp_FundGroupCode )
, FundCode_( ifds::FundCode, &ifds::s_FldProp_FundCode )
, ClassCode_( ifds::ClassCode, &ifds::s_FldProp_ClassCode )
, ClassReq_( ifds::ClassReq, &ifds::s_FldProp_ClassReq )
, FundList_( ifds::FundList, &ifds::s_FldProp_FundList )
, BankAcctExist_( ifds::BankAcctExist, &ifds::s_FldProp_BankAcctExist )
, BankAcctCurrency_( ifds::BankAcctCurrency, &ifds::s_FldProp_BankAcctCurrency )
{
   cFields_ = 8;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0126_VWRepeat_Record::~dsi_DSTC0126_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0126_VWRepeat_Record::clone()
{
   dsi_DSTC0126_VWRepeat_Record* p = new dsi_DSTC0126_VWRepeat_Record;
   p->FundGroupType_ = FundGroupType_;
   p->FundGroupCode_ = FundGroupCode_;
   p->FundCode_ = FundCode_;
   p->ClassCode_ = ClassCode_;
   p->ClassReq_ = ClassReq_;
   p->FundList_ = FundList_;
   p->BankAcctExist_ = BankAcctExist_;
   p->BankAcctCurrency_ = BankAcctCurrency_;
   return(p);
}

BFDataField* dsi_DSTC0126_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40001477: return ( &FundGroupType_ ); break; // FundGroupType
      case 40001479: return ( &FundGroupCode_ ); break; // FundGroupCode
      case 40000049: return ( &FundCode_ ); break; // FundCode
      case 40000050: return ( &ClassCode_ ); break; // ClassCode
      case 40001480: return ( &ClassReq_ ); break; // ClassReq
      case 40002134: return ( &FundList_ ); break; // FundList
      case 40002136: return ( &BankAcctExist_ ); break; // BankAcctExist
      case 40000251: return ( &BankAcctCurrency_ ); break; // BankAcctCurrency
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0126_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0126_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0126_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 8 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &FundGroupType_; break;
            case 1: aFlds_[1] = &FundGroupCode_; break;
            case 2: aFlds_[2] = &FundCode_; break;
            case 3: aFlds_[3] = &ClassCode_; break;
            case 4: aFlds_[4] = &ClassReq_; break;
            case 5: aFlds_[5] = &FundList_; break;
            case 6: aFlds_[6] = &BankAcctExist_; break;
            case 7: aFlds_[7] = &BankAcctCurrency_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0126_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0126_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0126_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 1000 );
}

unsigned long dsi_DSTC0126_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 1502 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0126_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0126_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0126_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40001477: return( true );
      case 40001479: return( true );
      case 40000049: return( true );
      case 40000050: return( true );
      case 40001480: return( true );
      case 40002134: return( true );
      case 40002136: return( true );
      case 40000251: return( true );
   }
   return false;
}

