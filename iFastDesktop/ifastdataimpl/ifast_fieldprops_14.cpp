// Data Field Properties
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdataid.hpp>
#include "ifast_substitutions.h"
#include "ifast_masks.h"

namespace ifds
{
   extern const BFTextFieldId TradeDateLag;
   extern const BFTextFieldId ProductGroupCode;
   extern const BFTextFieldId TradeDateLagExch;
   extern const BFTextFieldId SettledFieldsInitialized;
   extern const BFTextFieldId SystematicPayPAC;
   extern const BFTextFieldId SystematicPaySWP;
   extern const BFDecimalFieldId RRIFAmount;
   extern const BFIntegerFieldId PrevRcptNo;
   extern const BFTextFieldId CName1;
   extern const BFTextFieldId Csin;
   extern const BFTextFieldId rxAMSCode;
   extern const BFDataId DSTC0179_REQ;
   extern const BFDataId DSTC0179_VW;
   extern const BFDataId DSTC0179_VWRepeat_Record;
   extern const BFDecimalFieldId Grp1Shares;
   extern const BFDecimalFieldId Grp2Shares;
   extern const BFDecimalFieldId EqualFactor;
   extern const BFDecimalFieldId EqualAmount;
   extern const BFTextFieldId EqualAmtCurrency;
   extern const BFDataId DSTC0064_REQRepeat_Record;
   extern const BFTextFieldId EsopHistoricalHeadingSet;
   extern const BFDataId DSTC0188_VW;
   extern const BFDataId DSTC0188_REQ;
   extern const BFDataId DSTC0181_REQ;
   extern const BFDataId DSTC0181_VW;
   extern const BFTextFieldId AnswerCorrect;
   extern const BFTimeFieldId TimeOfReg;
   extern const BFDataId DSTC0189_VW;
   extern const BFDataId DSTC0189_REQ;
   extern const BFTextFieldId SecurityQuestion;
   extern const BFTextFieldId SecurityAnswer;
   extern const BFDataId DSTC0193_REQ;
   extern const BFDataId DSTC0193_VW;
   extern const BFTextFieldId LegMatDateValid;
   extern const BFTextFieldId ValidDateLag;
   extern const BFTextFieldId Mode;
   extern const BFTextFieldId CalculateACB;
   extern const BFTextFieldId Allocations;
   extern const BFTextFieldId SlsRepEmail;
   extern const BFTextFieldId SlsRepPhone;
   extern const BFDataId DSTC0191_REQ;
   extern const BFDataId DSTC0191_VW;
   extern const BFTextFieldId GoodBadDesc;
   extern const BFTextFieldId OrderTypeDesc;
   extern const BFTextFieldId InitPurchDesc;
   extern const BFTextFieldId ConfirmReqDesc;
   extern const BFTextFieldId RecptIssuedDesc;
   extern const BFTextFieldId SettledDesc;
   extern const BFTextFieldId IgnoreBrokerBranch;
   extern const BFDecimalFieldId AcctACBSettl;
   extern const BFDecimalFieldId AcctACBTotal;
   extern const BFDecimalFieldId FrgnACBSettl;
   extern const BFDecimalFieldId FrgnACBTotal;
   extern const BFDecimalFieldId DomesticACBSettl;
   extern const BFDecimalFieldId DomesticACBTotal;
   extern const BFDecimalFieldId FCAllowed;
   extern const BFDecimalFieldId FCExcsSettl;
   extern const BFDecimalFieldId FCExcsTotal;
   extern const BFDecimalFieldId FCAllowACB;
   extern const BFDecimalFieldId FCExcsACBSettl;
   extern const BFDecimalFieldId FCExcsACBTotal;
   extern const BFDecimalFieldId SettleValueAcctCurr;
   extern const BFDecimalFieldId ACBSettl;
   extern const BFDecimalFieldId ACBTotal;
   extern const BFDecimalFieldId ACBSettlPrcnt;
   extern const BFDecimalFieldId ACBTotalPrcnt;
   extern const BFDecimalFieldId MktValSettl;
   extern const BFDecimalFieldId MktValTotal;
   extern const BFDecimalFieldId MktValSettlPrcnt;
   extern const BFDecimalFieldId MktValTotalPrcnt;
   extern const BFDecimalFieldId SettlValueAcctCurr;
   extern const BFTextFieldId AccrualSummary;
   extern const BFTextFieldId AccrualType;
   extern const BFTextFieldId FundNumber;
   extern const BFTextFieldId MFAccrualHeadingSet;
   extern const BFTextFieldId MFRAccrualHeadingSet;
   extern const BFTextFieldId InterestAccrualHeadingSet;
   extern const BFDecimalFieldId FCRebalancing;
   extern const BFTextFieldId rxCompanyCode;
   extern const BFDecimalFieldId MinFee;
   extern const BFDecimalFieldId MinPercent;
   extern const BFTextFieldId GSTExempt;
   extern const BFTextFieldId MgtFeeElig;
   extern const BFTextFieldId MgtFeeRbtElig;
   extern const BFTextFieldId Description;
   extern const BFDecimalFieldId Accum;
   extern const BFDecimalFieldId Paid;
   extern const BFDecimalFieldId GSTAmount;
   extern const BFDecimalFieldId DailyAmount;
   extern const BFDataId DSTC0194_REQ;
   extern const BFDataId DSTC0194_VW;
   extern const BFDataId DSTC0194_VWRepeat_Record;
   extern const BFNumericFieldId AcctFeeParamId;
   extern const BFTextFieldId FundFromCode;
   extern const BFTextFieldId ClassFromCode;
   extern const BFTextFieldId FeeCode;
   extern const BFDecimalFieldId Rate;
   extern const BFTextFieldId FreqMinMaxApp;
   extern const BFTextFieldId ChrgOnPrtlRed;
   extern const BFTextFieldId ChrgOnFullRed;
   extern const BFDataId DSTC0195_REQ;
   extern const BFDataId DSTC0195_VW;
   extern const BFDataId DSTC0195_VWRepeat_Record;
   extern const BFDecimalFieldId ScaleRate;
   extern const BFDataId DSTC0196_REQ;
   extern const BFDataId DSTC0196_REQRepeat_Record;
   extern const BFTextFieldId ScaleRunMode;
   extern const BFDataId DSTC0196_VW;
   extern const BFDataId DSTC0197_REQ;
   extern const BFDataId DSTC0197_VW;
   extern const BFDataId DSTC0197_VWRepeat_Record;
   extern const BFTextFieldId AllowOverwrite;
   extern const BFTextFieldId OneAcctOnly;
   extern const BFTextFieldId AddrCntry;
   extern const BFDataId DSTC0198_REQ;
   extern const BFDataId DSTC0198_VW;
   extern const BFDataId DSTC0198_VWRepeat_Record;
   extern const BFTextFieldId FeeParamListSet;
   extern const BFTextFieldId FeeScaleListSet;
   extern const BFTextFieldId ParamFeeType;
   extern const BFNumericFieldId FeeParamRid;
   extern const BFDecimalFieldId TotalACBSettl;
   extern const BFDecimalFieldId FrgnExcsACBUnsettl;
   extern const BFDecimalFieldId TotalACBUnSettl;
   extern const BFDecimalFieldId DomesticACBUnSettl;
   extern const BFDecimalFieldId FrgnAllowPrcnt;
   extern const BFDecimalFieldId FrgnAllowACBSettl;
   extern const BFDecimalFieldId FrgnAllowACBUnSettl;
   extern const BFDecimalFieldId FrgnExcsPrcntUnSettl;
   extern const BFDecimalFieldId FrgnExcsPrcntSettl;
   extern const BFDecimalFieldId FrgnExcsACBSettl;
   extern const BFTextFieldId FeeFundClassCross;
   extern const BFDecimalFieldId FrgnACBUnsettl;
   extern const BFDecimalFieldId SplitCommRid;
   extern const BFDataId DSTC0137_VWRepeat_Record;
   extern const BFTextFieldId rxBaycom;
   extern const BFTextFieldId CommFeeCodes;
   extern const BFTextFieldId CalcSwitch;
   extern const BFTextFieldId MiscFeeDefn;
   extern const BFTextFieldId DBState;
   extern const BFDecimalFieldId ScaleDetlRid;
   extern const BFTextFieldId SlsRepCntry;
   extern const BFTextFieldId SlsRepArea;
   extern const BFTextFieldId FCAmountType;
   extern const BFTextFieldId AcctLvlFIFO;
   extern const BFTextFieldId CompCodeFlag;
   extern const BFDecimalFieldId FreeAmount;
   extern const BFDataId DSTC0199_REQ;
   extern const BFDataId DSTC0199_VW;
   extern const BFDataId DSTC0199_VWRepeat_Record;
   extern const BFDecimalFieldId AmtPaid;
   extern const BFDecimalFieldId GSTAmt;
   extern const BFDecimalFieldId NRTaxAmt;
   extern const BFTextFieldId VerifySearchSNAPHeadingSet;
   extern const BFTextFieldId FaxCntryCode;
   extern const BFTextFieldId FaxAreaCode;
   extern const BFTextFieldId FeeCodeFundClassDateCross;
   extern const BFTextFieldId FieldCrossEdit1;
   extern const BFTextFieldId CreateAllocations;
   extern const BFTextFieldId AllocationsAllowed;
   extern const BFTextFieldId PurchaseSourceOfFund;
   extern const BFTextFieldId RedempSourceOfFund;
   extern const BFTextFieldId TransferSourceOfFund;
   extern const BFTextFieldId PriceProcAtFndGrp;
   extern const BFDecimalFieldId OtherTaxAmt;
   extern const BFTextFieldId BayComTo;
   extern const BFTextFieldId FundLoadGrp;

   //------------------------------------------------------------------
   // Field s_FldProp_TradeDateLag (2800)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeDateLag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2800_6( I_("N") );
      return( dstrDefValue_2800_6 );
   }
   const DString& s_FldProp_TradeDateLag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2800_6( I_("TradeDateLag") );
      return( dstrFldLabel_2800_6 );
   }
   PBF_SSC subset_super_chooser_2_2800( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeDateLag(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeDateLag // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeDateLag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeDateLag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2800 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProductGroupCode (2801)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProductGroupCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2801_6( I_("N") );
      return( dstrDefValue_2801_6 );
   }
   const DString& s_FldProp_ProductGroupCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2801_6( I_("ProductGroupCode") );
      return( dstrFldLabel_2801_6 );
   }
   PBF_SSC subset_super_chooser_2_2801( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProductGroupCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,ProductGroupCode // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ProductGroupCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ProductGroupCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2801 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TradeDateLagExch (2803)
   //------------------------------------------------------------------
   const DString& s_FldProp_TradeDateLagExch_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2802_1( I_("N") );
         return( dstrDefValue_2802_1 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2802_5( I_("N") );
         return( dstrDefValue_2802_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2803_6( I_("N") );
         return( dstrDefValue_2803_6 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2803_1( I_("N") );
         return( dstrDefValue_2803_1 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2803_8( I_("N") );
         return( dstrDefValue_2803_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2803_7( I_("N") );
         return( dstrDefValue_2803_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2803_5( I_("N") );
         return( dstrDefValue_2803_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2803_3( I_("N") );
         return( dstrDefValue_2803_3 );
      }
      static const DString dstrDefValue_2803_1( I_("N") );
      return( dstrDefValue_2803_1 );
   }
   const DString& s_FldProp_TradeDateLagExch_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2802_1( I_("TradeDateLagMod") );
         return( dstrFldLabel_2802_1 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2802_5( I_("TradeDateLagMod") );
         return( dstrFldLabel_2802_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2803_6( I_("TradeDateLagExch") );
         return( dstrFldLabel_2803_6 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2803_1( I_("TradeDateLagExch") );
         return( dstrFldLabel_2803_1 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2803_8( I_("TradeDateLagExch") );
         return( dstrFldLabel_2803_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2803_7( I_("TradeDateLagExch") );
         return( dstrFldLabel_2803_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2803_5( I_("TradeDateLagExch") );
         return( dstrFldLabel_2803_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2803_3( I_("TradeDateLagExch") );
         return( dstrFldLabel_2803_3 );
      }
      static const DString dstrFldLabel_2803_1( I_("TradeDateLagExch") );
      return( dstrFldLabel_2803_1 );
   }
   PBF_SSC subset_super_chooser_2_2803( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TradeDateLagExch(
       BFDataFieldProperties::Type::text // field is a text field
      ,TradeDateLagExch // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TradeDateLagExch_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TradeDateLagExch_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2803 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettledFieldsInitialized (2804)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettledFieldsInitialized_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2804_1( I_("N") );
      return( dstrDefValue_2804_1 );
   }
   const DString& s_FldProp_SettledFieldsInitialized_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2804_1( I_("SettledFieldsInitialized") );
      return( dstrFldLabel_2804_1 );
   }
   PBF_SSC subset_super_chooser_2_2804( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettledFieldsInitialized(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettledFieldsInitialized // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettledFieldsInitialized_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettledFieldsInitialized_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2804 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SystematicPayPAC (2805)
   //------------------------------------------------------------------
   const DString& s_FldProp_SystematicPayPAC_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2805_3( I_("") );
      return( dstrDefValue_2805_3 );
   }
   const DString& s_FldProp_SystematicPayPAC_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2805_3( I_("SystematicPayPAC") );
      return( dstrFldLabel_2805_3 );
   }
   PBF_SSC subset_super_chooser_2_2805( const ClientLocale& locale )
   {
      return chooser_ss_002_309; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SystematicPayPAC(
       BFDataFieldProperties::Type::text // field is a text field
      ,SystematicPayPAC // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SystematicPayPAC_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SystematicPayPAC_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2805 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SystematicPaySWP (2806)
   //------------------------------------------------------------------
   const DString& s_FldProp_SystematicPaySWP_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2806_1( I_("") );
      return( dstrDefValue_2806_1 );
   }
   const DString& s_FldProp_SystematicPaySWP_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2806_1( I_("SystematicPaySWP") );
      return( dstrFldLabel_2806_1 );
   }
   PBF_SSC subset_super_chooser_2_2806( const ClientLocale& locale )
   {
      return chooser_ss_002_310; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SystematicPaySWP(
       BFDataFieldProperties::Type::text // field is a text field
      ,SystematicPaySWP // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SystematicPaySWP_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SystematicPaySWP_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2806 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RRIFAmount (2807)
   //------------------------------------------------------------------
   const DString& s_FldProp_RRIFAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2807_6( I_("0") );
      return( dstrDefValue_2807_6 );
   }
   double s_FldProp_RRIFAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_RRIFAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2807_6( I_("RRIFAmount") );
      return( dstrFldLabel_2807_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RRIFAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RRIFAmount // fieldId
      ,25 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_RRIFAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RRIFAmount_d_DVF // default value
      ,s_FldProp_RRIFAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PrevRcptNo (2812)
   //------------------------------------------------------------------
   const DString& s_FldProp_PrevRcptNo_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2812_8( I_("") );
      return( dstrDefValue_2812_8 );
   }
   DIINT64 s_FldProp_PrevRcptNo_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_PrevRcptNo_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2812_8( I_("PrevRcptNo") );
      return( dstrFldLabel_2812_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PrevRcptNo(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,PrevRcptNo // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_PrevRcptNo_s_DVF // default value
      ,s_FldProp_PrevRcptNo_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_PrevRcptNo_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CName1 (2813)
   //------------------------------------------------------------------
   const DString& s_FldProp_CName1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2813_7( I_("") );
      return( dstrDefValue_2813_7 );
   }
   const DString& s_FldProp_CName1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2813_7( I_("CName1") );
      return( dstrFldLabel_2813_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CName1(
       BFDataFieldProperties::Type::text // field is a text field
      ,CName1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CName1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CName1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Csin (2814)
   //------------------------------------------------------------------
   const DString& s_FldProp_Csin_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2814_6( I_("") );
      return( dstrDefValue_2814_6 );
   }
   const DString& s_FldProp_Csin_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2814_6( I_("Csin") );
      return( dstrFldLabel_2814_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Csin(
       BFDataFieldProperties::Type::text // field is a text field
      ,Csin // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Csin_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Csin_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxAMSCode (2815)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxAMSCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2815_1( I_("") );
      return( dstrDefValue_2815_1 );
   }
   const DString& s_FldProp_rxAMSCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2815_1( I_("rxAMSCode") );
      return( dstrFldLabel_2815_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxAMSCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxAMSCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxAMSCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxAMSCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Grp1Shares (2821)
   //------------------------------------------------------------------
   const DString& s_FldProp_Grp1Shares_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2821_6( I_("0.0000") );
      return( dstrDefValue_2821_6 );
   }
   double s_FldProp_Grp1Shares_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000 );
   }
   const DString& s_FldProp_Grp1Shares_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2821_6( I_("Grp1Shares") );
      return( dstrFldLabel_2821_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Grp1Shares(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Grp1Shares // fieldId
      ,22 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_Grp1Shares_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Grp1Shares_d_DVF // default value
      ,s_FldProp_Grp1Shares_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Grp2Shares (2825)
   //------------------------------------------------------------------
   const DString& s_FldProp_Grp2Shares_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2825_1( I_("0.0000") );
      return( dstrDefValue_2825_1 );
   }
   double s_FldProp_Grp2Shares_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000 );
   }
   const DString& s_FldProp_Grp2Shares_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2825_1( I_("Grp2Shares") );
      return( dstrFldLabel_2825_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Grp2Shares(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Grp2Shares // fieldId
      ,22 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_Grp2Shares_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Grp2Shares_d_DVF // default value
      ,s_FldProp_Grp2Shares_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EqualFactor (2826)
   //------------------------------------------------------------------
   const DString& s_FldProp_EqualFactor_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2826_6( I_("0.0000000000") );
      return( dstrDefValue_2826_6 );
   }
   double s_FldProp_EqualFactor_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_EqualFactor_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2826_6( I_("EqualFactor") );
      return( dstrFldLabel_2826_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EqualFactor(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EqualFactor // fieldId
      ,28 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_EqualFactor_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EqualFactor_d_DVF // default value
      ,s_FldProp_EqualFactor_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EqualAmount (2827)
   //------------------------------------------------------------------
   const DString& s_FldProp_EqualAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2827_8( I_("0.00") );
      return( dstrDefValue_2827_8 );
   }
   double s_FldProp_EqualAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0.00 );
   }
   const DString& s_FldProp_EqualAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2827_8( I_("EqualAmount") );
      return( dstrFldLabel_2827_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EqualAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EqualAmount // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_EqualAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EqualAmount_d_DVF // default value
      ,s_FldProp_EqualAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EqualAmtCurrency (2828)
   //------------------------------------------------------------------
   const DString& s_FldProp_EqualAmtCurrency_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2828_7( I_("") );
      return( dstrDefValue_2828_7 );
   }
   const DString& s_FldProp_EqualAmtCurrency_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2828_7( I_("EqualAmount") );
      return( dstrFldLabel_2828_7 );
   }
   PBF_SSC subset_super_chooser_2_2828( const ClientLocale& locale )
   {
      return chooser_ss_002_065; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EqualAmtCurrency(
       BFDataFieldProperties::Type::text // field is a text field
      ,EqualAmtCurrency // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EqualAmtCurrency_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EqualAmtCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2828 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EsopHistoricalHeadingSet (2830)
   //------------------------------------------------------------------
   const DString& s_FldProp_EsopHistoricalHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2830_1( I_("") );
      return( dstrDefValue_2830_1 );
   }
   const DString& s_FldProp_EsopHistoricalHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2830_1( I_("EsopHistoricalHeadingSet") );
      return( dstrFldLabel_2830_1 );
   }
   PBF_SSC subset_super_chooser_2_2830( const ClientLocale& locale )
   {
      return chooser_ss_002_311; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EsopHistoricalHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,EsopHistoricalHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EsopHistoricalHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EsopHistoricalHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2830 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AnswerCorrect (2835)
   //------------------------------------------------------------------
   const DString& s_FldProp_AnswerCorrect_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2835_1( I_("") );
      return( dstrDefValue_2835_1 );
   }
   const DString& s_FldProp_AnswerCorrect_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2835_1( I_("AnswerCorrect") );
      return( dstrFldLabel_2835_1 );
   }
   PBF_SSC subset_super_chooser_2_2835( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AnswerCorrect(
       BFDataFieldProperties::Type::text // field is a text field
      ,AnswerCorrect // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AnswerCorrect_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AnswerCorrect_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2835 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TimeOfReg (2836)
   //------------------------------------------------------------------
   const DString& s_FldProp_TimeOfReg_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2836_5( I_("") );
      return( dstrDefValue_2836_5 );
   }
   const DString& s_FldProp_TimeOfReg_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2836_5( I_("TimeOfReg") );
      return( dstrFldLabel_2836_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TimeOfReg(
       BFDataFieldProperties::Type::time // field is a time field
      ,TimeOfReg // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TimeOfReg_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TimeOfReg_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SecurityQuestion (2839)
   //------------------------------------------------------------------
   const DString& s_FldProp_SecurityQuestion_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2839_6( I_("") );
      return( dstrDefValue_2839_6 );
   }
   const DString& s_FldProp_SecurityQuestion_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2839_6( I_("SecurityQuestion") );
      return( dstrFldLabel_2839_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SecurityQuestion(
       BFDataFieldProperties::Type::text // field is a text field
      ,SecurityQuestion // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SecurityQuestion_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SecurityQuestion_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SecurityAnswer (2840)
   //------------------------------------------------------------------
   const DString& s_FldProp_SecurityAnswer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2840_1( I_("") );
      return( dstrDefValue_2840_1 );
   }
   const DString& s_FldProp_SecurityAnswer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2840_1( I_("SecurityAnswer") );
      return( dstrFldLabel_2840_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SecurityAnswer(
       BFDataFieldProperties::Type::text // field is a text field
      ,SecurityAnswer // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SecurityAnswer_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SecurityAnswer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LegMatDateValid (2843)
   //------------------------------------------------------------------
   const DString& s_FldProp_LegMatDateValid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2843_7( I_("") );
      return( dstrDefValue_2843_7 );
   }
   const DString& s_FldProp_LegMatDateValid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2843_7( I_("LegMatDateValid") );
      return( dstrFldLabel_2843_7 );
   }
   PBF_SSC subset_super_chooser_2_2843( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LegMatDateValid(
       BFDataFieldProperties::Type::text // field is a text field
      ,LegMatDateValid // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LegMatDateValid_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LegMatDateValid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2843 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ValidDateLag (2844)
   //------------------------------------------------------------------
   const DString& s_FldProp_ValidDateLag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2844_6( I_("N") );
      return( dstrDefValue_2844_6 );
   }
   const DString& s_FldProp_ValidDateLag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2844_6( I_("ValidDateLag") );
      return( dstrFldLabel_2844_6 );
   }
   PBF_SSC subset_super_chooser_2_2844( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ValidDateLag(
       BFDataFieldProperties::Type::text // field is a text field
      ,ValidDateLag // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ValidDateLag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ValidDateLag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2844 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Mode (2845)
   //------------------------------------------------------------------
   const DString& s_FldProp_Mode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2845_1( I_("") );
      return( dstrDefValue_2845_1 );
   }
   const DString& s_FldProp_Mode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2845_1( I_("Mode") );
      return( dstrFldLabel_2845_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Mode(
       BFDataFieldProperties::Type::text // field is a text field
      ,Mode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Mode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Mode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CalculateACB (2848)
   //------------------------------------------------------------------
   const DString& s_FldProp_CalculateACB_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2848_3( I_("") );
      return( dstrDefValue_2848_3 );
   }
   const DString& s_FldProp_CalculateACB_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2848_3( I_("CalculateACB") );
      return( dstrFldLabel_2848_3 );
   }
   PBF_SSC subset_super_chooser_2_2848( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CalculateACB(
       BFDataFieldProperties::Type::text // field is a text field
      ,CalculateACB // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CalculateACB_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CalculateACB_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2848 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Allocations (2849)
   //------------------------------------------------------------------
   const DString& s_FldProp_Allocations_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2849_8( I_("N") );
      return( dstrDefValue_2849_8 );
   }
   const DString& s_FldProp_Allocations_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2849_8( I_("") );
      return( dstrFldLabel_2849_8 );
   }
   PBF_SSC subset_super_chooser_2_2849( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Allocations(
       BFDataFieldProperties::Type::text // field is a text field
      ,Allocations // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Allocations_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Allocations_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2849 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsRepEmail (2850)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsRepEmail_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2850_7( I_("") );
      return( dstrDefValue_2850_7 );
   }
   const DString& s_FldProp_SlsRepEmail_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2850_7( I_("SlsRepEmail") );
      return( dstrFldLabel_2850_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsRepEmail(
       BFDataFieldProperties::Type::text // field is a text field
      ,SlsRepEmail // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsRepEmail_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SlsRepEmail_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsRepPhone (2851)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsRepPhone_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2851_6( I_("") );
      return( dstrDefValue_2851_6 );
   }
   const DString& s_FldProp_SlsRepPhone_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2851_6( I_("SlsRepPhone") );
      return( dstrFldLabel_2851_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsRepPhone(
       BFDataFieldProperties::Type::text // field is a text field
      ,SlsRepPhone // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsRepPhone_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SlsRepPhone_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GoodBadDesc (2854)
   //------------------------------------------------------------------
   const DString& s_FldProp_GoodBadDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2854_8( I_("") );
      return( dstrDefValue_2854_8 );
   }
   const DString& s_FldProp_GoodBadDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2854_8( I_("GoodBadDesc") );
      return( dstrFldLabel_2854_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GoodBadDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,GoodBadDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GoodBadDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GoodBadDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OrderTypeDesc (2855)
   //------------------------------------------------------------------
   const DString& s_FldProp_OrderTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2855_7( I_("") );
      return( dstrDefValue_2855_7 );
   }
   const DString& s_FldProp_OrderTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2855_7( I_("OrderTypeDesc") );
      return( dstrFldLabel_2855_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OrderTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,OrderTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OrderTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OrderTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InitPurchDesc (2856)
   //------------------------------------------------------------------
   const DString& s_FldProp_InitPurchDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2856_6( I_("") );
      return( dstrDefValue_2856_6 );
   }
   const DString& s_FldProp_InitPurchDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2856_6( I_("InitPurchDesc") );
      return( dstrFldLabel_2856_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InitPurchDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,InitPurchDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InitPurchDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InitPurchDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ConfirmReqDesc (2857)
   //------------------------------------------------------------------
   const DString& s_FldProp_ConfirmReqDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2857_1( I_("") );
      return( dstrDefValue_2857_1 );
   }
   const DString& s_FldProp_ConfirmReqDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2857_1( I_("ConfirmReqDesc") );
      return( dstrFldLabel_2857_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ConfirmReqDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,ConfirmReqDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ConfirmReqDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ConfirmReqDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RecptIssuedDesc (2858)
   //------------------------------------------------------------------
   const DString& s_FldProp_RecptIssuedDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2858_3( I_("") );
      return( dstrDefValue_2858_3 );
   }
   const DString& s_FldProp_RecptIssuedDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2858_3( I_("RecptIssuedDesc") );
      return( dstrFldLabel_2858_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RecptIssuedDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,RecptIssuedDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RecptIssuedDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RecptIssuedDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettledDesc (2859)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettledDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2859_8( I_("") );
      return( dstrDefValue_2859_8 );
   }
   const DString& s_FldProp_SettledDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2859_8( I_("SettledDesc") );
      return( dstrFldLabel_2859_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettledDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettledDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettledDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettledDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IgnoreBrokerBranch (2861)
   //------------------------------------------------------------------
   const DString& s_FldProp_IgnoreBrokerBranch_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2861_7( I_("N") );
      return( dstrDefValue_2861_7 );
   }
   const DString& s_FldProp_IgnoreBrokerBranch_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2861_7( I_("IgnoreBrokerBranch") );
      return( dstrFldLabel_2861_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IgnoreBrokerBranch(
       BFDataFieldProperties::Type::text // field is a text field
      ,IgnoreBrokerBranch // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IgnoreBrokerBranch_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IgnoreBrokerBranch_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctACBSettl (2865)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctACBSettl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2865_6( I_("") );
      return( dstrDefValue_2865_6 );
   }
   double s_FldProp_AcctACBSettl_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_AcctACBSettl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2865_6( I_("AcctACBSettl") );
      return( dstrFldLabel_2865_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctACBSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctACBSettl // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_AcctACBSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctACBSettl_d_DVF // default value
      ,s_FldProp_AcctACBSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctACBTotal (2866)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctACBTotal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2866_1( I_("") );
      return( dstrDefValue_2866_1 );
   }
   double s_FldProp_AcctACBTotal_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_AcctACBTotal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2866_1( I_("AcctACBTotal") );
      return( dstrFldLabel_2866_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctACBTotal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctACBTotal // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_AcctACBTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctACBTotal_d_DVF // default value
      ,s_FldProp_AcctACBTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnACBSettl (2867)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnACBSettl_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2867_5( I_("") );
         return( dstrDefValue_2867_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2867_8( I_("") );
         return( dstrDefValue_2867_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2867_6( I_("") );
         return( dstrDefValue_2867_6 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2867_1( I_("") );
         return( dstrDefValue_2867_1 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2867_7( I_("") );
         return( dstrDefValue_2867_7 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2867_3( I_("") );
         return( dstrDefValue_2867_3 );
      }
      static const DString dstrDefValue_2867_1( I_("") );
      return( dstrDefValue_2867_1 );
   }
   double s_FldProp_FrgnACBSettl_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnACBSettl_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2867_5( I_("FrgnACBSettl") );
         return( dstrFldLabel_2867_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2867_8( I_("FrgnACBSettl") );
         return( dstrFldLabel_2867_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2867_6( I_("FrgnACBSettl") );
         return( dstrFldLabel_2867_6 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2867_1( I_("FrgnACBSettl") );
         return( dstrFldLabel_2867_1 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2867_7( I_("FrgnACBSettl") );
         return( dstrFldLabel_2867_7 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2867_3( I_("FrgnACBSettl") );
         return( dstrFldLabel_2867_3 );
      }
      static const DString dstrFldLabel_2867_1( I_("FrgnACBSettl") );
      return( dstrFldLabel_2867_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnACBSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnACBSettl // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnACBSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnACBSettl_d_DVF // default value
      ,s_FldProp_FrgnACBSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnACBTotal (2870)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnACBTotal_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2870_8( I_("") );
         return( dstrDefValue_2870_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2870_1( I_("") );
         return( dstrDefValue_2870_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2870_3( I_("") );
         return( dstrDefValue_2870_3 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2870_5( I_("") );
         return( dstrDefValue_2870_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2870_6( I_("") );
         return( dstrDefValue_2870_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2870_7( I_("") );
         return( dstrDefValue_2870_7 );
      }
      static const DString dstrDefValue_2870_1( I_("") );
      return( dstrDefValue_2870_1 );
   }
   double s_FldProp_FrgnACBTotal_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnACBTotal_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2870_8( I_("FrgnACBSettl") );
         return( dstrFldLabel_2870_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2870_1( I_("FrgnACBSettl") );
         return( dstrFldLabel_2870_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2870_3( I_("FrgnACBSettl") );
         return( dstrFldLabel_2870_3 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2870_5( I_("FrgnACBSettl") );
         return( dstrFldLabel_2870_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2870_6( I_("FrgnACBSettl") );
         return( dstrFldLabel_2870_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2870_7( I_("FrgnACBSettl") );
         return( dstrFldLabel_2870_7 );
      }
      static const DString dstrFldLabel_2870_1( I_("FrgnACBSettl") );
      return( dstrFldLabel_2870_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnACBTotal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnACBTotal // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnACBTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnACBTotal_d_DVF // default value
      ,s_FldProp_FrgnACBTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DomesticACBSettl (2871)
   //------------------------------------------------------------------
   const DString& s_FldProp_DomesticACBSettl_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2871_7( I_("") );
         return( dstrDefValue_2871_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2871_6( I_("") );
         return( dstrDefValue_2871_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2871_5( I_("") );
         return( dstrDefValue_2871_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2871_1( I_("") );
         return( dstrDefValue_2871_1 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2871_8( I_("") );
         return( dstrDefValue_2871_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2871_3( I_("") );
         return( dstrDefValue_2871_3 );
      }
      static const DString dstrDefValue_2871_1( I_("") );
      return( dstrDefValue_2871_1 );
   }
   double s_FldProp_DomesticACBSettl_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_DomesticACBSettl_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2871_7( I_("DomesticACBSettl") );
         return( dstrFldLabel_2871_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2871_6( I_("DomesticACBSettl") );
         return( dstrFldLabel_2871_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2871_5( I_("DomesticACBSettl") );
         return( dstrFldLabel_2871_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2871_1( I_("DomesticACBSettl") );
         return( dstrFldLabel_2871_1 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2871_8( I_("DomesticACBSettl") );
         return( dstrFldLabel_2871_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2871_3( I_("DomesticACBSettl") );
         return( dstrFldLabel_2871_3 );
      }
      static const DString dstrFldLabel_2871_1( I_("DomesticACBSettl") );
      return( dstrFldLabel_2871_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DomesticACBSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DomesticACBSettl // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_DomesticACBSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DomesticACBSettl_d_DVF // default value
      ,s_FldProp_DomesticACBSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DomesticACBTotal (2872)
   //------------------------------------------------------------------
   const DString& s_FldProp_DomesticACBTotal_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2872_6( I_("") );
         return( dstrDefValue_2872_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2872_7( I_("") );
         return( dstrDefValue_2872_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2872_8( I_("") );
         return( dstrDefValue_2872_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2872_5( I_("") );
         return( dstrDefValue_2872_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2872_1( I_("") );
         return( dstrDefValue_2872_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2872_3( I_("") );
         return( dstrDefValue_2872_3 );
      }
      static const DString dstrDefValue_2872_1( I_("") );
      return( dstrDefValue_2872_1 );
   }
   double s_FldProp_DomesticACBTotal_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_DomesticACBTotal_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2872_6( I_("DomesticACBTotal") );
         return( dstrFldLabel_2872_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2872_7( I_("DomesticACBTotal") );
         return( dstrFldLabel_2872_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2872_8( I_("DomesticACBTotal") );
         return( dstrFldLabel_2872_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2872_5( I_("DomesticACBTotal") );
         return( dstrFldLabel_2872_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2872_1( I_("DomesticACBTotal") );
         return( dstrFldLabel_2872_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2872_3( I_("DomesticACBTotal") );
         return( dstrFldLabel_2872_3 );
      }
      static const DString dstrFldLabel_2872_1( I_("DomesticACBTotal") );
      return( dstrFldLabel_2872_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DomesticACBTotal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DomesticACBTotal // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_DomesticACBTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DomesticACBTotal_d_DVF // default value
      ,s_FldProp_DomesticACBTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FCAllowed (2873)
   //------------------------------------------------------------------
   const DString& s_FldProp_FCAllowed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2873_1( I_("") );
      return( dstrDefValue_2873_1 );
   }
   double s_FldProp_FCAllowed_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FCAllowed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2873_1( I_("FCAllowed") );
      return( dstrFldLabel_2873_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FCAllowed(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FCAllowed // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_FCAllowed_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FCAllowed_d_DVF // default value
      ,s_FldProp_FCAllowed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FCExcsSettl (2874)
   //------------------------------------------------------------------
   const DString& s_FldProp_FCExcsSettl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2874_5( I_("") );
      return( dstrDefValue_2874_5 );
   }
   double s_FldProp_FCExcsSettl_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FCExcsSettl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2874_5( I_("FCExcsSettl") );
      return( dstrFldLabel_2874_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FCExcsSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FCExcsSettl // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_FCExcsSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FCExcsSettl_d_DVF // default value
      ,s_FldProp_FCExcsSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FCExcsTotal (2875)
   //------------------------------------------------------------------
   const DString& s_FldProp_FCExcsTotal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2875_8( I_("") );
      return( dstrDefValue_2875_8 );
   }
   double s_FldProp_FCExcsTotal_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FCExcsTotal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2875_8( I_("FCExcsTotal") );
      return( dstrFldLabel_2875_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FCExcsTotal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FCExcsTotal // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_FCExcsTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FCExcsTotal_d_DVF // default value
      ,s_FldProp_FCExcsTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FCAllowACB (2876)
   //------------------------------------------------------------------
   const DString& s_FldProp_FCAllowACB_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2876_7( I_("") );
      return( dstrDefValue_2876_7 );
   }
   double s_FldProp_FCAllowACB_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FCAllowACB_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2876_7( I_("FCAllowACB") );
      return( dstrFldLabel_2876_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FCAllowACB(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FCAllowACB // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_FCAllowACB_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FCAllowACB_d_DVF // default value
      ,s_FldProp_FCAllowACB_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FCExcsACBSettl (2877)
   //------------------------------------------------------------------
   const DString& s_FldProp_FCExcsACBSettl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2877_6( I_("") );
      return( dstrDefValue_2877_6 );
   }
   double s_FldProp_FCExcsACBSettl_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FCExcsACBSettl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2877_6( I_("FCExcsACBSettl") );
      return( dstrFldLabel_2877_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FCExcsACBSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FCExcsACBSettl // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_FCExcsACBSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FCExcsACBSettl_d_DVF // default value
      ,s_FldProp_FCExcsACBSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FCExcsACBTotal (2878)
   //------------------------------------------------------------------
   const DString& s_FldProp_FCExcsACBTotal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2878_1( I_("") );
      return( dstrDefValue_2878_1 );
   }
   double s_FldProp_FCExcsACBTotal_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FCExcsACBTotal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2878_1( I_("FCExcsACBTotal") );
      return( dstrFldLabel_2878_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FCExcsACBTotal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FCExcsACBTotal // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_FCExcsACBTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FCExcsACBTotal_d_DVF // default value
      ,s_FldProp_FCExcsACBTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleValueAcctCurr (2879)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleValueAcctCurr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2879_6( I_("") );
      return( dstrDefValue_2879_6 );
   }
   double s_FldProp_SettleValueAcctCurr_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_SettleValueAcctCurr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2879_6( I_("SettleValueAcctCurr") );
      return( dstrFldLabel_2879_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleValueAcctCurr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,SettleValueAcctCurr // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_SettleValueAcctCurr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_SettleValueAcctCurr_d_DVF // default value
      ,s_FldProp_SettleValueAcctCurr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBSettl (2880)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBSettl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2880_8( I_("") );
      return( dstrDefValue_2880_8 );
   }
   double s_FldProp_ACBSettl_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ACBSettl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2880_8( I_("ACBSettl") );
      return( dstrFldLabel_2880_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ACBSettl // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ACBSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ACBSettl_d_DVF // default value
      ,s_FldProp_ACBSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBTotal (2881)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBTotal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2881_7( I_("") );
      return( dstrDefValue_2881_7 );
   }
   double s_FldProp_ACBTotal_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ACBTotal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2881_7( I_("ACBTotal") );
      return( dstrFldLabel_2881_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBTotal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ACBTotal // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ACBTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ACBTotal_d_DVF // default value
      ,s_FldProp_ACBTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBSettlPrcnt (2883)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBSettlPrcnt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2883_6( I_("") );
      return( dstrDefValue_2883_6 );
   }
   double s_FldProp_ACBSettlPrcnt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ACBSettlPrcnt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2883_6( I_("ACBSettlPrcnt") );
      return( dstrFldLabel_2883_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBSettlPrcnt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ACBSettlPrcnt // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ACBSettlPrcnt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ACBSettlPrcnt_d_DVF // default value
      ,s_FldProp_ACBSettlPrcnt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBTotalPrcnt (2884)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBTotalPrcnt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2884_1( I_("") );
      return( dstrDefValue_2884_1 );
   }
   double s_FldProp_ACBTotalPrcnt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ACBTotalPrcnt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2884_1( I_("ACBTotalPrcnt") );
      return( dstrFldLabel_2884_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBTotalPrcnt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ACBTotalPrcnt // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ACBTotalPrcnt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ACBTotalPrcnt_d_DVF // default value
      ,s_FldProp_ACBTotalPrcnt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MktValSettl (2886)
   //------------------------------------------------------------------
   const DString& s_FldProp_MktValSettl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2886_5( I_("") );
      return( dstrDefValue_2886_5 );
   }
   double s_FldProp_MktValSettl_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_MktValSettl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2886_5( I_("MktValSettl") );
      return( dstrFldLabel_2886_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MktValSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MktValSettl // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MktValSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MktValSettl_d_DVF // default value
      ,s_FldProp_MktValSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MktValTotal (2887)
   //------------------------------------------------------------------
   const DString& s_FldProp_MktValTotal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2887_8( I_("") );
      return( dstrDefValue_2887_8 );
   }
   double s_FldProp_MktValTotal_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_MktValTotal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2887_8( I_("MktValTotal") );
      return( dstrFldLabel_2887_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MktValTotal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MktValTotal // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MktValTotal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MktValTotal_d_DVF // default value
      ,s_FldProp_MktValTotal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MktValSettlPrcnt (2888)
   //------------------------------------------------------------------
   const DString& s_FldProp_MktValSettlPrcnt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2888_7( I_("") );
      return( dstrDefValue_2888_7 );
   }
   double s_FldProp_MktValSettlPrcnt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_MktValSettlPrcnt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2888_7( I_("MktValSettlPrcnt") );
      return( dstrFldLabel_2888_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MktValSettlPrcnt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MktValSettlPrcnt // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MktValSettlPrcnt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MktValSettlPrcnt_d_DVF // default value
      ,s_FldProp_MktValSettlPrcnt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MktValTotalPrcnt (2889)
   //------------------------------------------------------------------
   const DString& s_FldProp_MktValTotalPrcnt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2889_6( I_("") );
      return( dstrDefValue_2889_6 );
   }
   double s_FldProp_MktValTotalPrcnt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_MktValTotalPrcnt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2889_6( I_("MktValTotalPrcnt") );
      return( dstrFldLabel_2889_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MktValTotalPrcnt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MktValTotalPrcnt // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MktValTotalPrcnt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MktValTotalPrcnt_d_DVF // default value
      ,s_FldProp_MktValTotalPrcnt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettlValueAcctCurr (2890)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettlValueAcctCurr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2890_1( I_("") );
      return( dstrDefValue_2890_1 );
   }
   double s_FldProp_SettlValueAcctCurr_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_SettlValueAcctCurr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2890_1( I_("SettlValueAcctCurr") );
      return( dstrFldLabel_2890_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettlValueAcctCurr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,SettlValueAcctCurr // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_SettlValueAcctCurr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_SettlValueAcctCurr_d_DVF // default value
      ,s_FldProp_SettlValueAcctCurr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccrualSummary (2891)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccrualSummary_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2891_6( I_("") );
      return( dstrDefValue_2891_6 );
   }
   const DString& s_FldProp_AccrualSummary_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2891_6( I_("AccrualSummary") );
      return( dstrFldLabel_2891_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccrualSummary(
       BFDataFieldProperties::Type::text // field is a text field
      ,AccrualSummary // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AccrualSummary_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccrualSummary_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccrualType (2892)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccrualType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2892_8( I_("") );
      return( dstrDefValue_2892_8 );
   }
   const DString& s_FldProp_AccrualType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2892_8( I_("AccrualType") );
      return( dstrFldLabel_2892_8 );
   }
   PBF_SSC subset_super_chooser_2_2892( const ClientLocale& locale )
   {
      return chooser_ss_002_312; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccrualType(
       BFDataFieldProperties::Type::text // field is a text field
      ,AccrualType // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AccrualType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccrualType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2892 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundNumber (2893)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundNumber_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2893_7( I_("") );
      return( dstrDefValue_2893_7 );
   }
   const DString& s_FldProp_FundNumber_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2893_7( I_("FundNumber") );
      return( dstrFldLabel_2893_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundNumber(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundNumber // fieldId
      ,5 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundNumber_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundNumber_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MFAccrualHeadingSet (2894)
   //------------------------------------------------------------------
   const DString& s_FldProp_MFAccrualHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2894_6( I_("") );
      return( dstrDefValue_2894_6 );
   }
   const DString& s_FldProp_MFAccrualHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2894_6( I_("MFAccrualHeadingSet") );
      return( dstrFldLabel_2894_6 );
   }
   PBF_SSC subset_super_chooser_2_2894( const ClientLocale& locale )
   {
      return chooser_ss_002_314; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MFAccrualHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,MFAccrualHeadingSet // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MFAccrualHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MFAccrualHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2894 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MFRAccrualHeadingSet (2895)
   //------------------------------------------------------------------
   const DString& s_FldProp_MFRAccrualHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2895_1( I_("") );
      return( dstrDefValue_2895_1 );
   }
   const DString& s_FldProp_MFRAccrualHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2895_1( I_("MFRAccrualHeadingSet") );
      return( dstrFldLabel_2895_1 );
   }
   PBF_SSC subset_super_chooser_2_2895( const ClientLocale& locale )
   {
      return chooser_ss_002_315; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MFRAccrualHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,MFRAccrualHeadingSet // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MFRAccrualHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MFRAccrualHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2895 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InterestAccrualHeadingSet (2896)
   //------------------------------------------------------------------
   const DString& s_FldProp_InterestAccrualHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2896_5( I_("") );
      return( dstrDefValue_2896_5 );
   }
   const DString& s_FldProp_InterestAccrualHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2896_5( I_("InterestAccrualHeadingSet") );
      return( dstrFldLabel_2896_5 );
   }
   PBF_SSC subset_super_chooser_2_2896( const ClientLocale& locale )
   {
      return chooser_ss_002_313; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InterestAccrualHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,InterestAccrualHeadingSet // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InterestAccrualHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InterestAccrualHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2896 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FCRebalancing (2897)
   //------------------------------------------------------------------
   const DString& s_FldProp_FCRebalancing_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2897_8( I_("") );
      return( dstrDefValue_2897_8 );
   }
   double s_FldProp_FCRebalancing_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FCRebalancing_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2897_8( I_("FCRebalancing") );
      return( dstrFldLabel_2897_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FCRebalancing(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FCRebalancing // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FCRebalancing_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FCRebalancing_d_DVF // default value
      ,s_FldProp_FCRebalancing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxCompanyCode (2898)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxCompanyCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2898_7( I_("") );
      return( dstrDefValue_2898_7 );
   }
   const DString& s_FldProp_rxCompanyCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2898_7( I_("rxCompanyCode") );
      return( dstrFldLabel_2898_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxCompanyCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxCompanyCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxCompanyCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxCompanyCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinFee (2899)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinFee_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2899_6( I_("") );
         return( dstrDefValue_2899_6 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2899_8( I_("0") );
         return( dstrDefValue_2899_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2899_7( I_("0") );
         return( dstrDefValue_2899_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2899_5( I_("0") );
         return( dstrDefValue_2899_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2899_1( I_("0") );
         return( dstrDefValue_2899_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2899_3( I_("0") );
         return( dstrDefValue_2899_3 );
      }
      static const DString dstrDefValue_2899_1( I_("0") );
      return( dstrDefValue_2899_1 );
   }
   double s_FldProp_MinFee_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_MinFee_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2899_6( I_("MinFee") );
         return( dstrFldLabel_2899_6 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2899_8( I_("MinFee") );
         return( dstrFldLabel_2899_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2899_7( I_("MinFee") );
         return( dstrFldLabel_2899_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2899_5( I_("MinFee") );
         return( dstrFldLabel_2899_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2899_1( I_("MinFee") );
         return( dstrFldLabel_2899_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2899_3( I_("MinFee") );
         return( dstrFldLabel_2899_3 );
      }
      static const DString dstrFldLabel_2899_1( I_("MinFee") );
      return( dstrFldLabel_2899_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinFee(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinFee // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_MinFee_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinFee_d_DVF // default value
      ,s_FldProp_MinFee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MinPercent (2900)
   //------------------------------------------------------------------
   const DString& s_FldProp_MinPercent_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2900_1( I_("") );
      return( dstrDefValue_2900_1 );
   }
   double s_FldProp_MinPercent_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_MinPercent_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2900_1( I_("MinPercent") );
      return( dstrFldLabel_2900_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MinPercent(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MinPercent // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MinPercent_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MinPercent_d_DVF // default value
      ,s_FldProp_MinPercent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GSTExempt (2901)
   //------------------------------------------------------------------
   const DString& s_FldProp_GSTExempt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2901_6( I_("Y") );
      return( dstrDefValue_2901_6 );
   }
   const DString& s_FldProp_GSTExempt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2901_6( I_("GSTExempt") );
      return( dstrFldLabel_2901_6 );
   }
   PBF_SSC subset_super_chooser_2_2901( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GSTExempt(
       BFDataFieldProperties::Type::text // field is a text field
      ,GSTExempt // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GSTExempt_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GSTExempt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2901 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MgtFeeElig (2903)
   //------------------------------------------------------------------
   const DString& s_FldProp_MgtFeeElig_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2903_8( I_("") );
      return( dstrDefValue_2903_8 );
   }
   const DString& s_FldProp_MgtFeeElig_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2903_8( I_("MgtFeeElig") );
      return( dstrFldLabel_2903_8 );
   }
   PBF_SSC subset_super_chooser_2_2903( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MgtFeeElig(
       BFDataFieldProperties::Type::text // field is a text field
      ,MgtFeeElig // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MgtFeeElig_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MgtFeeElig_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2903 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MgtFeeRbtElig (2904)
   //------------------------------------------------------------------
   const DString& s_FldProp_MgtFeeRbtElig_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2904_7( I_("") );
      return( dstrDefValue_2904_7 );
   }
   const DString& s_FldProp_MgtFeeRbtElig_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2904_7( I_("MgtFeeRbtElig") );
      return( dstrFldLabel_2904_7 );
   }
   PBF_SSC subset_super_chooser_2_2904( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MgtFeeRbtElig(
       BFDataFieldProperties::Type::text // field is a text field
      ,MgtFeeRbtElig // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MgtFeeRbtElig_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MgtFeeRbtElig_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2904 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Description (2905)
   //------------------------------------------------------------------
   const DString& s_FldProp_Description_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2905_6( I_("") );
      return( dstrDefValue_2905_6 );
   }
   const DString& s_FldProp_Description_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2905_6( I_("Description") );
      return( dstrFldLabel_2905_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Description(
       BFDataFieldProperties::Type::text // field is a text field
      ,Description // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Description_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Description_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Accum (2907)
   //------------------------------------------------------------------
   const DString& s_FldProp_Accum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2907_1( I_("") );
      return( dstrDefValue_2907_1 );
   }
   double s_FldProp_Accum_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_Accum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2907_1( I_("Accum") );
      return( dstrFldLabel_2907_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Accum(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Accum // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Accum_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Accum_d_DVF // default value
      ,s_FldProp_Accum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Paid (2908)
   //------------------------------------------------------------------
   const DString& s_FldProp_Paid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2908_5( I_("") );
      return( dstrDefValue_2908_5 );
   }
   double s_FldProp_Paid_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_Paid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2908_5( I_("Paid") );
      return( dstrFldLabel_2908_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Paid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Paid // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Paid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Paid_d_DVF // default value
      ,s_FldProp_Paid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GSTAmount (2909)
   //------------------------------------------------------------------
   const DString& s_FldProp_GSTAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2909_8( I_("") );
      return( dstrDefValue_2909_8 );
   }
   double s_FldProp_GSTAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_GSTAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2909_8( I_("GSTAmount") );
      return( dstrFldLabel_2909_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GSTAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GSTAmount // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GSTAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GSTAmount_d_DVF // default value
      ,s_FldProp_GSTAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DailyAmount (2910)
   //------------------------------------------------------------------
   const DString& s_FldProp_DailyAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2910_7( I_("") );
      return( dstrDefValue_2910_7 );
   }
   double s_FldProp_DailyAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_DailyAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2910_7( I_("DailyAmount") );
      return( dstrFldLabel_2910_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DailyAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DailyAmount // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DailyAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DailyAmount_d_DVF // default value
      ,s_FldProp_DailyAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctFeeParamId (2914)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctFeeParamId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2914_8( I_("") );
      return( dstrDefValue_2914_8 );
   }
   DIINT64 s_FldProp_AcctFeeParamId_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctFeeParamId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2914_8( I_("AcctFeeParamId") );
      return( dstrFldLabel_2914_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctFeeParamId(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AcctFeeParamId // fieldId
      ,12 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctFeeParamId_s_DVF // default value
      ,s_FldProp_AcctFeeParamId_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AcctFeeParamId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundFromCode (2915)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundFromCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2915_7( I_("") );
      return( dstrDefValue_2915_7 );
   }
   const DString& s_FldProp_FundFromCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2915_7( I_("FundFromCode") );
      return( dstrFldLabel_2915_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundFromCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundFromCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundFromCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundFromCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ClassFromCode (2916)
   //------------------------------------------------------------------
   const DString& s_FldProp_ClassFromCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2916_6( I_("") );
      return( dstrDefValue_2916_6 );
   }
   const DString& s_FldProp_ClassFromCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2916_6( I_("ClassFromCode") );
      return( dstrFldLabel_2916_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ClassFromCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,ClassFromCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ClassFromCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ClassFromCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeCode (2917)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2917_1( I_("") );
      return( dstrDefValue_2917_1 );
   }
   const DString& s_FldProp_FeeCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2917_1( I_("FeeCode") );
      return( dstrFldLabel_2917_1 );
   }
   PBF_SSC subset_super_chooser_2_2917( const ClientLocale& locale )
   {
      return chooser_ss_002_320; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,FeeCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FeeCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2917 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Rate (2919)
   //------------------------------------------------------------------
   const DString& s_FldProp_Rate_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2919_6( I_("") );
         return( dstrDefValue_2919_6 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2919_8( I_("0") );
         return( dstrDefValue_2919_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2919_7( I_("0.0000") );
         return( dstrDefValue_2919_7 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2919_3( I_("0") );
         return( dstrDefValue_2919_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2919_1( I_("0.00000000") );
         return( dstrDefValue_2919_1 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2919_5( I_("0.00000000") );
         return( dstrDefValue_2919_5 );
      }
      static const DString dstrDefValue_2919_1( I_("0.00000000") );
      return( dstrDefValue_2919_1 );
   }
   double s_FldProp_Rate_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.00000000 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.00000000 );
      }
      return( 0.00000000 );
   }
   const DString& s_FldProp_Rate_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2919_6( I_("Rate") );
         return( dstrFldLabel_2919_6 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2919_8( I_("Rate") );
         return( dstrFldLabel_2919_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2919_7( I_("Rate") );
         return( dstrFldLabel_2919_7 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2919_3( I_("Rate") );
         return( dstrFldLabel_2919_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2919_1( I_("Rate") );
         return( dstrFldLabel_2919_1 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2919_5( I_("Rate") );
         return( dstrFldLabel_2919_5 );
      }
      static const DString dstrFldLabel_2919_1( I_("Rate") );
      return( dstrFldLabel_2919_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Rate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Rate // fieldId
      ,20 // length
      ,0 // minimum length
      ,8 // decmials
      ,mask_chooser_2_22 // mask chooser function
      ,s_FldProp_Rate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Rate_d_DVF // default value
      ,s_FldProp_Rate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FreqMinMaxApp (2921)
   //------------------------------------------------------------------
   const DString& s_FldProp_FreqMinMaxApp_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2921_8( I_("") );
      return( dstrDefValue_2921_8 );
   }
   const DString& s_FldProp_FreqMinMaxApp_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2921_8( I_("FreqMinMaxApp") );
      return( dstrFldLabel_2921_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FreqMinMaxApp(
       BFDataFieldProperties::Type::text // field is a text field
      ,FreqMinMaxApp // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FreqMinMaxApp_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FreqMinMaxApp_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChrgOnPrtlRed (2922)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChrgOnPrtlRed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2922_7( I_("") );
      return( dstrDefValue_2922_7 );
   }
   const DString& s_FldProp_ChrgOnPrtlRed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2922_7( I_("ChrgOnPrtlRed") );
      return( dstrFldLabel_2922_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChrgOnPrtlRed(
       BFDataFieldProperties::Type::text // field is a text field
      ,ChrgOnPrtlRed // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ChrgOnPrtlRed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ChrgOnPrtlRed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChrgOnFullRed (2923)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChrgOnFullRed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2923_6( I_("") );
      return( dstrDefValue_2923_6 );
   }
   const DString& s_FldProp_ChrgOnFullRed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2923_6( I_("ChrgOnFullRed") );
      return( dstrFldLabel_2923_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChrgOnFullRed(
       BFDataFieldProperties::Type::text // field is a text field
      ,ChrgOnFullRed // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ChrgOnFullRed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ChrgOnFullRed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ScaleRate (2927)
   //------------------------------------------------------------------
   const DString& s_FldProp_ScaleRate_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2927_7( I_("0") );
         return( dstrDefValue_2927_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2927_6( I_("") );
         return( dstrDefValue_2927_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2927_5( I_("0.00000000") );
         return( dstrDefValue_2927_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2927_1( I_("0.00000000") );
         return( dstrDefValue_2927_1 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2927_8( I_("0") );
         return( dstrDefValue_2927_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2927_3( I_("0") );
         return( dstrDefValue_2927_3 );
      }
      static const DString dstrDefValue_2927_1( I_("0.00000000") );
      return( dstrDefValue_2927_1 );
   }
   double s_FldProp_ScaleRate_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.00000000 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.00000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      return( 0.00000000 );
   }
   const DString& s_FldProp_ScaleRate_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2927_7( I_("ScaleRate") );
         return( dstrFldLabel_2927_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2927_6( I_("ScaleRate") );
         return( dstrFldLabel_2927_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2927_5( I_("ScaleRate") );
         return( dstrFldLabel_2927_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2927_1( I_("ScaleRate") );
         return( dstrFldLabel_2927_1 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2927_8( I_("ScaleRate") );
         return( dstrFldLabel_2927_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2927_3( I_("ScaleRate") );
         return( dstrFldLabel_2927_3 );
      }
      static const DString dstrFldLabel_2927_1( I_("ScaleRate") );
      return( dstrFldLabel_2927_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ScaleRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ScaleRate // fieldId
      ,20 // length
      ,0 // minimum length
      ,8 // decmials
      ,mask_chooser_2_22 // mask chooser function
      ,s_FldProp_ScaleRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ScaleRate_d_DVF // default value
      ,s_FldProp_ScaleRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ScaleRunMode (2930)
   //------------------------------------------------------------------
   const DString& s_FldProp_ScaleRunMode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2930_5( I_("") );
      return( dstrDefValue_2930_5 );
   }
   const DString& s_FldProp_ScaleRunMode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2930_5( I_("ScaleRunMode") );
      return( dstrFldLabel_2930_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ScaleRunMode(
       BFDataFieldProperties::Type::text // field is a text field
      ,ScaleRunMode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ScaleRunMode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ScaleRunMode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllowOverwrite (2935)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllowOverwrite_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2935_6( I_("") );
      return( dstrDefValue_2935_6 );
   }
   const DString& s_FldProp_AllowOverwrite_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2935_6( I_("AllowOverwrite") );
      return( dstrFldLabel_2935_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllowOverwrite(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllowOverwrite // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllowOverwrite_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllowOverwrite_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OneAcctOnly (2937)
   //------------------------------------------------------------------
   const DString& s_FldProp_OneAcctOnly_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2937_8( I_("N") );
      return( dstrDefValue_2937_8 );
   }
   const DString& s_FldProp_OneAcctOnly_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2937_8( I_("OneAcctOnly") );
      return( dstrFldLabel_2937_8 );
   }
   PBF_SSC subset_super_chooser_2_2937( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OneAcctOnly(
       BFDataFieldProperties::Type::text // field is a text field
      ,OneAcctOnly // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OneAcctOnly_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OneAcctOnly_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2937 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrCntry (2938)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrCntry_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2938_7( I_("") );
      return( dstrDefValue_2938_7 );
   }
   const DString& s_FldProp_AddrCntry_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2938_7( I_("AddrCntry") );
      return( dstrFldLabel_2938_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrCntry(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrCntry // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrCntry_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrCntry_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeParamListSet (2943)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeParamListSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2943_8( I_("") );
      return( dstrDefValue_2943_8 );
   }
   const DString& s_FldProp_FeeParamListSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2943_8( I_("FeeParamListSet") );
      return( dstrFldLabel_2943_8 );
   }
   PBF_SSC subset_super_chooser_2_2943( const ClientLocale& locale )
   {
      return chooser_ss_002_316; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeParamListSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,FeeParamListSet // fieldId
      ,120 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeParamListSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FeeParamListSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2943 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeScaleListSet (2944)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeScaleListSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2944_7( I_("") );
      return( dstrDefValue_2944_7 );
   }
   const DString& s_FldProp_FeeScaleListSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2944_7( I_("FeeScaleListSet") );
      return( dstrFldLabel_2944_7 );
   }
   PBF_SSC subset_super_chooser_2_2944( const ClientLocale& locale )
   {
      return chooser_ss_002_317; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeScaleListSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,FeeScaleListSet // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeScaleListSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FeeScaleListSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2944 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ParamFeeType (2945)
   //------------------------------------------------------------------
   const DString& s_FldProp_ParamFeeType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2945_6( I_("") );
      return( dstrDefValue_2945_6 );
   }
   const DString& s_FldProp_ParamFeeType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2945_6( I_("ParamFeeType") );
      return( dstrFldLabel_2945_6 );
   }
   PBF_SSC subset_super_chooser_2_2945( const ClientLocale& locale )
   {
      return chooser_ss_002_318; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ParamFeeType(
       BFDataFieldProperties::Type::text // field is a text field
      ,ParamFeeType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ParamFeeType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ParamFeeType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2945 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeParamRid (2946)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeParamRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2946_1( I_("") );
      return( dstrDefValue_2946_1 );
   }
   DIINT64 s_FldProp_FeeParamRid_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FeeParamRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2946_1( I_("FeeParamRid") );
      return( dstrFldLabel_2946_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeParamRid(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,FeeParamRid // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeParamRid_s_DVF // default value
      ,s_FldProp_FeeParamRid_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_FeeParamRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TotalACBSettl (2947)
   //------------------------------------------------------------------
   const DString& s_FldProp_TotalACBSettl_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2947_6( I_("") );
         return( dstrDefValue_2947_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2947_5( I_("") );
         return( dstrDefValue_2947_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2947_8( I_("") );
         return( dstrDefValue_2947_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2947_1( I_("") );
         return( dstrDefValue_2947_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2947_3( I_("") );
         return( dstrDefValue_2947_3 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2947_7( I_("") );
         return( dstrDefValue_2947_7 );
      }
      static const DString dstrDefValue_2947_1( I_("") );
      return( dstrDefValue_2947_1 );
   }
   double s_FldProp_TotalACBSettl_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_TotalACBSettl_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2947_6( I_("TotalACBSettl") );
         return( dstrFldLabel_2947_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2947_5( I_("TotalACBSettl") );
         return( dstrFldLabel_2947_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2947_8( I_("TotalACBSettl") );
         return( dstrFldLabel_2947_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2947_1( I_("TotalACBSettl") );
         return( dstrFldLabel_2947_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2947_3( I_("TotalACBSettl") );
         return( dstrFldLabel_2947_3 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2947_7( I_("TotalACBSettl") );
         return( dstrFldLabel_2947_7 );
      }
      static const DString dstrFldLabel_2947_1( I_("TotalACBSettl") );
      return( dstrFldLabel_2947_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TotalACBSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TotalACBSettl // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_TotalACBSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TotalACBSettl_d_DVF // default value
      ,s_FldProp_TotalACBSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnExcsACBUnsettl (2948)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnExcsACBUnsettl_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2948_8( I_("") );
         return( dstrDefValue_2948_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2948_1( I_("") );
         return( dstrDefValue_2948_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2948_3( I_("") );
         return( dstrDefValue_2948_3 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2948_5( I_("") );
         return( dstrDefValue_2948_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2948_6( I_("") );
         return( dstrDefValue_2948_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2948_7( I_("") );
         return( dstrDefValue_2948_7 );
      }
      static const DString dstrDefValue_2948_1( I_("") );
      return( dstrDefValue_2948_1 );
   }
   double s_FldProp_FrgnExcsACBUnsettl_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnExcsACBUnsettl_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2948_8( I_("FrgnExcsACBUnsettl") );
         return( dstrFldLabel_2948_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2948_1( I_("FrgnExcsACBUnsettl") );
         return( dstrFldLabel_2948_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2948_3( I_("FrgnExcsACBUnsettl") );
         return( dstrFldLabel_2948_3 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2948_5( I_("FrgnExcsACBUnsettl") );
         return( dstrFldLabel_2948_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2948_6( I_("FrgnExcsACBUnsettl") );
         return( dstrFldLabel_2948_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2948_7( I_("FrgnExcsACBUnsettl") );
         return( dstrFldLabel_2948_7 );
      }
      static const DString dstrFldLabel_2948_1( I_("FrgnExcsACBUnsettl") );
      return( dstrFldLabel_2948_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnExcsACBUnsettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnExcsACBUnsettl // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnExcsACBUnsettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnExcsACBUnsettl_d_DVF // default value
      ,s_FldProp_FrgnExcsACBUnsettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TotalACBUnSettl (2950)
   //------------------------------------------------------------------
   const DString& s_FldProp_TotalACBUnSettl_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2950_7( I_("") );
         return( dstrDefValue_2950_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2950_6( I_("") );
         return( dstrDefValue_2950_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2950_5( I_("") );
         return( dstrDefValue_2950_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2950_1( I_("") );
         return( dstrDefValue_2950_1 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2950_8( I_("") );
         return( dstrDefValue_2950_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2950_3( I_("") );
         return( dstrDefValue_2950_3 );
      }
      static const DString dstrDefValue_2950_1( I_("") );
      return( dstrDefValue_2950_1 );
   }
   double s_FldProp_TotalACBUnSettl_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_TotalACBUnSettl_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2950_7( I_("TotalACBUnSettl") );
         return( dstrFldLabel_2950_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2950_6( I_("TotalACBUnSettl") );
         return( dstrFldLabel_2950_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2950_5( I_("TotalACBUnSettl") );
         return( dstrFldLabel_2950_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2950_1( I_("TotalACBUnSettl") );
         return( dstrFldLabel_2950_1 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2950_8( I_("TotalACBUnSettl") );
         return( dstrFldLabel_2950_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2950_3( I_("TotalACBUnSettl") );
         return( dstrFldLabel_2950_3 );
      }
      static const DString dstrFldLabel_2950_1( I_("TotalACBUnSettl") );
      return( dstrFldLabel_2950_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TotalACBUnSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TotalACBUnSettl // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_TotalACBUnSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TotalACBUnSettl_d_DVF // default value
      ,s_FldProp_TotalACBUnSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DomesticACBUnSettl (2954)
   //------------------------------------------------------------------
   const DString& s_FldProp_DomesticACBUnSettl_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2954_6( I_("") );
         return( dstrDefValue_2954_6 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2954_8( I_("") );
         return( dstrDefValue_2954_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2954_7( I_("") );
         return( dstrDefValue_2954_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2954_5( I_("") );
         return( dstrDefValue_2954_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2954_1( I_("") );
         return( dstrDefValue_2954_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2954_3( I_("") );
         return( dstrDefValue_2954_3 );
      }
      static const DString dstrDefValue_2954_1( I_("") );
      return( dstrDefValue_2954_1 );
   }
   double s_FldProp_DomesticACBUnSettl_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_DomesticACBUnSettl_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2954_6( I_("DomesticACBUnSettl") );
         return( dstrFldLabel_2954_6 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2954_8( I_("DomesticACBUnSettl") );
         return( dstrFldLabel_2954_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2954_7( I_("DomesticACBUnSettl") );
         return( dstrFldLabel_2954_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2954_5( I_("DomesticACBUnSettl") );
         return( dstrFldLabel_2954_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2954_1( I_("DomesticACBUnSettl") );
         return( dstrFldLabel_2954_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2954_3( I_("DomesticACBUnSettl") );
         return( dstrFldLabel_2954_3 );
      }
      static const DString dstrFldLabel_2954_1( I_("DomesticACBUnSettl") );
      return( dstrFldLabel_2954_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DomesticACBUnSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DomesticACBUnSettl // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_DomesticACBUnSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DomesticACBUnSettl_d_DVF // default value
      ,s_FldProp_DomesticACBUnSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnAllowPrcnt (2955)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnAllowPrcnt_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2955_1( I_("") );
         return( dstrDefValue_2955_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2955_3( I_("") );
         return( dstrDefValue_2955_3 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2955_5( I_("") );
         return( dstrDefValue_2955_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2955_6( I_("") );
         return( dstrDefValue_2955_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2955_7( I_("") );
         return( dstrDefValue_2955_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2955_8( I_("") );
         return( dstrDefValue_2955_8 );
      }
      static const DString dstrDefValue_2955_1( I_("") );
      return( dstrDefValue_2955_1 );
   }
   double s_FldProp_FrgnAllowPrcnt_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnAllowPrcnt_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2955_1( I_("FrgnAllowPrcnt") );
         return( dstrFldLabel_2955_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2955_3( I_("FrgnAllowPrcnt") );
         return( dstrFldLabel_2955_3 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2955_5( I_("FrgnAllowPrcnt") );
         return( dstrFldLabel_2955_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2955_6( I_("FrgnAllowPrcnt") );
         return( dstrFldLabel_2955_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2955_7( I_("FrgnAllowPrcnt") );
         return( dstrFldLabel_2955_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2955_8( I_("FrgnAllowPrcnt") );
         return( dstrFldLabel_2955_8 );
      }
      static const DString dstrFldLabel_2955_1( I_("FrgnAllowPrcnt") );
      return( dstrFldLabel_2955_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnAllowPrcnt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnAllowPrcnt // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnAllowPrcnt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnAllowPrcnt_d_DVF // default value
      ,s_FldProp_FrgnAllowPrcnt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnAllowACBSettl (2956)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnAllowACBSettl_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2956_5( I_("") );
         return( dstrDefValue_2956_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2956_8( I_("") );
         return( dstrDefValue_2956_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2956_6( I_("") );
         return( dstrDefValue_2956_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2956_3( I_("") );
         return( dstrDefValue_2956_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2956_1( I_("") );
         return( dstrDefValue_2956_1 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2956_7( I_("") );
         return( dstrDefValue_2956_7 );
      }
      static const DString dstrDefValue_2956_1( I_("") );
      return( dstrDefValue_2956_1 );
   }
   double s_FldProp_FrgnAllowACBSettl_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnAllowACBSettl_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2956_5( I_("FrgnAllowACBSettl") );
         return( dstrFldLabel_2956_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2956_8( I_("FrgnAllowACBSettl") );
         return( dstrFldLabel_2956_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2956_6( I_("FrgnAllowACBSettl") );
         return( dstrFldLabel_2956_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2956_3( I_("FrgnAllowACBSettl") );
         return( dstrFldLabel_2956_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2956_1( I_("FrgnAllowACBSettl") );
         return( dstrFldLabel_2956_1 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2956_7( I_("FrgnAllowACBSettl") );
         return( dstrFldLabel_2956_7 );
      }
      static const DString dstrFldLabel_2956_1( I_("FrgnAllowACBSettl") );
      return( dstrFldLabel_2956_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnAllowACBSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnAllowACBSettl // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnAllowACBSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnAllowACBSettl_d_DVF // default value
      ,s_FldProp_FrgnAllowACBSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnAllowACBUnSettl (2957)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnAllowACBUnSettl_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2957_8( I_("") );
         return( dstrDefValue_2957_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2957_1( I_("") );
         return( dstrDefValue_2957_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2957_3( I_("") );
         return( dstrDefValue_2957_3 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2957_5( I_("") );
         return( dstrDefValue_2957_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2957_6( I_("") );
         return( dstrDefValue_2957_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2957_7( I_("") );
         return( dstrDefValue_2957_7 );
      }
      static const DString dstrDefValue_2957_1( I_("") );
      return( dstrDefValue_2957_1 );
   }
   double s_FldProp_FrgnAllowACBUnSettl_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnAllowACBUnSettl_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2957_8( I_("FrgnAllowACBUnSettl") );
         return( dstrFldLabel_2957_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2957_1( I_("FrgnAllowACBUnSettl") );
         return( dstrFldLabel_2957_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2957_3( I_("FrgnAllowACBUnSettl") );
         return( dstrFldLabel_2957_3 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2957_5( I_("FrgnAllowACBUnSettl") );
         return( dstrFldLabel_2957_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2957_6( I_("FrgnAllowACBUnSettl") );
         return( dstrFldLabel_2957_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2957_7( I_("FrgnAllowACBUnSettl") );
         return( dstrFldLabel_2957_7 );
      }
      static const DString dstrFldLabel_2957_1( I_("FrgnAllowACBUnSettl") );
      return( dstrFldLabel_2957_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnAllowACBUnSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnAllowACBUnSettl // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnAllowACBUnSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnAllowACBUnSettl_d_DVF // default value
      ,s_FldProp_FrgnAllowACBUnSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnExcsPrcntUnSettl (2958)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnExcsPrcntUnSettl_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2958_7( I_("") );
         return( dstrDefValue_2958_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2958_6( I_("") );
         return( dstrDefValue_2958_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2958_5( I_("") );
         return( dstrDefValue_2958_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2958_1( I_("") );
         return( dstrDefValue_2958_1 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2958_8( I_("") );
         return( dstrDefValue_2958_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2958_3( I_("") );
         return( dstrDefValue_2958_3 );
      }
      static const DString dstrDefValue_2958_1( I_("") );
      return( dstrDefValue_2958_1 );
   }
   double s_FldProp_FrgnExcsPrcntUnSettl_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnExcsPrcntUnSettl_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2958_7( I_("FrgnExcsPrcntUnSettl") );
         return( dstrFldLabel_2958_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2958_6( I_("FrgnExcsPrcntUnSettl") );
         return( dstrFldLabel_2958_6 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2958_5( I_("FrgnExcsPrcntUnSettl") );
         return( dstrFldLabel_2958_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2958_1( I_("FrgnExcsPrcntUnSettl") );
         return( dstrFldLabel_2958_1 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2958_8( I_("FrgnExcsPrcntUnSettl") );
         return( dstrFldLabel_2958_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2958_3( I_("FrgnExcsPrcntUnSettl") );
         return( dstrFldLabel_2958_3 );
      }
      static const DString dstrFldLabel_2958_1( I_("FrgnExcsPrcntUnSettl") );
      return( dstrFldLabel_2958_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnExcsPrcntUnSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnExcsPrcntUnSettl // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnExcsPrcntUnSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnExcsPrcntUnSettl_d_DVF // default value
      ,s_FldProp_FrgnExcsPrcntUnSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnExcsPrcntSettl (2959)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnExcsPrcntSettl_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2959_6( I_("") );
         return( dstrDefValue_2959_6 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2959_8( I_("") );
         return( dstrDefValue_2959_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2959_7( I_("") );
         return( dstrDefValue_2959_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2959_5( I_("") );
         return( dstrDefValue_2959_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2959_1( I_("") );
         return( dstrDefValue_2959_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2959_3( I_("") );
         return( dstrDefValue_2959_3 );
      }
      static const DString dstrDefValue_2959_1( I_("") );
      return( dstrDefValue_2959_1 );
   }
   double s_FldProp_FrgnExcsPrcntSettl_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnExcsPrcntSettl_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2959_6( I_("FrgnExcsPrcntSettl") );
         return( dstrFldLabel_2959_6 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2959_8( I_("FrgnExcsPrcntSettl") );
         return( dstrFldLabel_2959_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2959_7( I_("FrgnExcsPrcntSettl") );
         return( dstrFldLabel_2959_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2959_5( I_("FrgnExcsPrcntSettl") );
         return( dstrFldLabel_2959_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2959_1( I_("FrgnExcsPrcntSettl") );
         return( dstrFldLabel_2959_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2959_3( I_("FrgnExcsPrcntSettl") );
         return( dstrFldLabel_2959_3 );
      }
      static const DString dstrFldLabel_2959_1( I_("FrgnExcsPrcntSettl") );
      return( dstrFldLabel_2959_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnExcsPrcntSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnExcsPrcntSettl // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnExcsPrcntSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnExcsPrcntSettl_d_DVF // default value
      ,s_FldProp_FrgnExcsPrcntSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnExcsACBSettl (2960)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnExcsACBSettl_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2960_1( I_("") );
         return( dstrDefValue_2960_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2960_3( I_("") );
         return( dstrDefValue_2960_3 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2960_5( I_("") );
         return( dstrDefValue_2960_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2960_6( I_("") );
         return( dstrDefValue_2960_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2960_7( I_("") );
         return( dstrDefValue_2960_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2960_8( I_("") );
         return( dstrDefValue_2960_8 );
      }
      static const DString dstrDefValue_2960_1( I_("") );
      return( dstrDefValue_2960_1 );
   }
   double s_FldProp_FrgnExcsACBSettl_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnExcsACBSettl_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2960_1( I_("FrgnExcsACBSettl") );
         return( dstrFldLabel_2960_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2960_3( I_("FrgnExcsACBSettl") );
         return( dstrFldLabel_2960_3 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2960_5( I_("FrgnExcsACBSettl") );
         return( dstrFldLabel_2960_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2960_6( I_("FrgnExcsACBSettl") );
         return( dstrFldLabel_2960_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2960_7( I_("FrgnExcsACBSettl") );
         return( dstrFldLabel_2960_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2960_8( I_("FrgnExcsACBSettl") );
         return( dstrFldLabel_2960_8 );
      }
      static const DString dstrFldLabel_2960_1( I_("FrgnExcsACBSettl") );
      return( dstrFldLabel_2960_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnExcsACBSettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnExcsACBSettl // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnExcsACBSettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnExcsACBSettl_d_DVF // default value
      ,s_FldProp_FrgnExcsACBSettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeFundClassCross (2961)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeFundClassCross_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2961_6( I_("") );
      return( dstrDefValue_2961_6 );
   }
   const DString& s_FldProp_FeeFundClassCross_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2961_6( I_("FeeFundClassCross") );
      return( dstrFldLabel_2961_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeFundClassCross(
       BFDataFieldProperties::Type::text // field is a text field
      ,FeeFundClassCross // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeFundClassCross_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FeeFundClassCross_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrgnACBUnsettl (2962)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrgnACBUnsettl_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_2962_8( I_("") );
         return( dstrDefValue_2962_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_2962_1( I_("") );
         return( dstrDefValue_2962_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_2962_3( I_("") );
         return( dstrDefValue_2962_3 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_2962_5( I_("") );
         return( dstrDefValue_2962_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_2962_6( I_("") );
         return( dstrDefValue_2962_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_2962_7( I_("") );
         return( dstrDefValue_2962_7 );
      }
      static const DString dstrDefValue_2962_1( I_("") );
      return( dstrDefValue_2962_1 );
   }
   double s_FldProp_FrgnACBUnsettl_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_FrgnACBUnsettl_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_2962_8( I_("FrgnACBUnsettl") );
         return( dstrFldLabel_2962_8 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_2962_1( I_("FrgnACBUnsettl") );
         return( dstrFldLabel_2962_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_2962_3( I_("FrgnACBUnsettl") );
         return( dstrFldLabel_2962_3 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_2962_5( I_("FrgnACBUnsettl") );
         return( dstrFldLabel_2962_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_2962_6( I_("FrgnACBUnsettl") );
         return( dstrFldLabel_2962_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_2962_7( I_("FrgnACBUnsettl") );
         return( dstrFldLabel_2962_7 );
      }
      static const DString dstrFldLabel_2962_1( I_("FrgnACBUnsettl") );
      return( dstrFldLabel_2962_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrgnACBUnsettl(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FrgnACBUnsettl // fieldId
      ,20 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FrgnACBUnsettl_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FrgnACBUnsettl_d_DVF // default value
      ,s_FldProp_FrgnACBUnsettl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SplitCommRid (2963)
   //------------------------------------------------------------------
   const DString& s_FldProp_SplitCommRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2963_7( I_("") );
      return( dstrDefValue_2963_7 );
   }
   double s_FldProp_SplitCommRid_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_SplitCommRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2963_7( I_("SplitCommRid") );
      return( dstrFldLabel_2963_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SplitCommRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,SplitCommRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_SplitCommRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_SplitCommRid_d_DVF // default value
      ,s_FldProp_SplitCommRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxBaycom (2965)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxBaycom_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2965_1( I_("") );
      return( dstrDefValue_2965_1 );
   }
   const DString& s_FldProp_rxBaycom_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2965_1( I_("rxBaycom") );
      return( dstrFldLabel_2965_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxBaycom(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxBaycom // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxBaycom_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxBaycom_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CommFeeCodes (2966)
   //------------------------------------------------------------------
   const DString& s_FldProp_CommFeeCodes_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2966_5( I_("") );
      return( dstrDefValue_2966_5 );
   }
   const DString& s_FldProp_CommFeeCodes_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2966_5( I_("CommFeeCodes") );
      return( dstrFldLabel_2966_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CommFeeCodes(
       BFDataFieldProperties::Type::text // field is a text field
      ,CommFeeCodes // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CommFeeCodes_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CommFeeCodes_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CalcSwitch (2967)
   //------------------------------------------------------------------
   const DString& s_FldProp_CalcSwitch_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2967_8( I_("") );
      return( dstrDefValue_2967_8 );
   }
   const DString& s_FldProp_CalcSwitch_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2967_8( I_("CalcSwitch") );
      return( dstrFldLabel_2967_8 );
   }
   PBF_SSC subset_super_chooser_2_2967( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CalcSwitch(
       BFDataFieldProperties::Type::text // field is a text field
      ,CalcSwitch // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CalcSwitch_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CalcSwitch_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2967 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MiscFeeDefn (2968)
   //------------------------------------------------------------------
   const DString& s_FldProp_MiscFeeDefn_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2968_7( I_("") );
      return( dstrDefValue_2968_7 );
   }
   const DString& s_FldProp_MiscFeeDefn_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2968_7( I_("MiscFeeDefn") );
      return( dstrFldLabel_2968_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MiscFeeDefn(
       BFDataFieldProperties::Type::text // field is a text field
      ,MiscFeeDefn // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MiscFeeDefn_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MiscFeeDefn_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DBState (2969)
   //------------------------------------------------------------------
   const DString& s_FldProp_DBState_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2969_6( I_("") );
      return( dstrDefValue_2969_6 );
   }
   const DString& s_FldProp_DBState_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2969_6( I_("DBState") );
      return( dstrFldLabel_2969_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DBState(
       BFDataFieldProperties::Type::text // field is a text field
      ,DBState // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DBState_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DBState_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ScaleDetlRid (2970)
   //------------------------------------------------------------------
   const DString& s_FldProp_ScaleDetlRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2970_1( I_("") );
      return( dstrDefValue_2970_1 );
   }
   double s_FldProp_ScaleDetlRid_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_ScaleDetlRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2970_1( I_("ScaleDetlRid") );
      return( dstrFldLabel_2970_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ScaleDetlRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ScaleDetlRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_ScaleDetlRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ScaleDetlRid_d_DVF // default value
      ,s_FldProp_ScaleDetlRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsRepCntry (2971)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsRepCntry_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2971_6( I_("") );
      return( dstrDefValue_2971_6 );
   }
   const DString& s_FldProp_SlsRepCntry_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2971_6( I_("SlsRepCntry") );
      return( dstrFldLabel_2971_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsRepCntry(
       BFDataFieldProperties::Type::text // field is a text field
      ,SlsRepCntry // fieldId
      ,100 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsRepCntry_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SlsRepCntry_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsRepArea (2972)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsRepArea_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2972_8( I_("") );
      return( dstrDefValue_2972_8 );
   }
   const DString& s_FldProp_SlsRepArea_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2972_8( I_("SlsRepArea") );
      return( dstrFldLabel_2972_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsRepArea(
       BFDataFieldProperties::Type::text // field is a text field
      ,SlsRepArea // fieldId
      ,100 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsRepArea_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SlsRepArea_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FCAmountType (2973)
   //------------------------------------------------------------------
   const DString& s_FldProp_FCAmountType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2973_7( I_("") );
      return( dstrDefValue_2973_7 );
   }
   const DString& s_FldProp_FCAmountType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2973_7( I_("FCAmountType") );
      return( dstrFldLabel_2973_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FCAmountType(
       BFDataFieldProperties::Type::text // field is a text field
      ,FCAmountType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FCAmountType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FCAmountType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctLvlFIFO (2975)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctLvlFIFO_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2975_6( I_("") );
      return( dstrDefValue_2975_6 );
   }
   const DString& s_FldProp_AcctLvlFIFO_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2975_6( I_("AcctLvlFIFO") );
      return( dstrFldLabel_2975_6 );
   }
   PBF_SSC subset_super_chooser_2_2975( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctLvlFIFO(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctLvlFIFO // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctLvlFIFO_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctLvlFIFO_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2975 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CompCodeFlag (2976)
   //------------------------------------------------------------------
   const DString& s_FldProp_CompCodeFlag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2976_1( I_("") );
      return( dstrDefValue_2976_1 );
   }
   const DString& s_FldProp_CompCodeFlag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2976_1( I_("CompCodeFlag") );
      return( dstrFldLabel_2976_1 );
   }
   PBF_SSC subset_super_chooser_2_2976( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CompCodeFlag(
       BFDataFieldProperties::Type::text // field is a text field
      ,CompCodeFlag // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CompCodeFlag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CompCodeFlag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2976 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FreeAmount (2977)
   //------------------------------------------------------------------
   const DString& s_FldProp_FreeAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2977_5( I_("") );
      return( dstrDefValue_2977_5 );
   }
   double s_FldProp_FreeAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_FreeAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2977_5( I_("FreeAmount") );
      return( dstrFldLabel_2977_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FreeAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FreeAmount // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_FreeAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FreeAmount_d_DVF // default value
      ,s_FldProp_FreeAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmtPaid (2981)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmtPaid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2981_1( I_("") );
      return( dstrDefValue_2981_1 );
   }
   double s_FldProp_AmtPaid_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_AmtPaid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2981_1( I_("AmtPaid") );
      return( dstrFldLabel_2981_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmtPaid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AmtPaid // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_AmtPaid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AmtPaid_d_DVF // default value
      ,s_FldProp_AmtPaid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GSTAmt (2983)
   //------------------------------------------------------------------
   const DString& s_FldProp_GSTAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2983_6( I_("") );
      return( dstrDefValue_2983_6 );
   }
   double s_FldProp_GSTAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_GSTAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2983_6( I_("GSTAmt") );
      return( dstrFldLabel_2983_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GSTAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,GSTAmt // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_GSTAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_GSTAmt_d_DVF // default value
      ,s_FldProp_GSTAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NRTaxAmt (2984)
   //------------------------------------------------------------------
   const DString& s_FldProp_NRTaxAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2984_8( I_("") );
      return( dstrDefValue_2984_8 );
   }
   double s_FldProp_NRTaxAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_NRTaxAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2984_8( I_("NRTaxAmt") );
      return( dstrFldLabel_2984_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NRTaxAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,NRTaxAmt // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_NRTaxAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_NRTaxAmt_d_DVF // default value
      ,s_FldProp_NRTaxAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_VerifySearchSNAPHeadingSet (2985)
   //------------------------------------------------------------------
   const DString& s_FldProp_VerifySearchSNAPHeadingSet_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2985_7( I_("") );
      return( dstrDefValue_2985_7 );
   }
   const DString& s_FldProp_VerifySearchSNAPHeadingSet_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2985_7( I_("VerifySearchSNAPHeadingSet") );
      return( dstrFldLabel_2985_7 );
   }
   PBF_SSC subset_super_chooser_2_2985( const ClientLocale& locale )
   {
      return chooser_ss_002_328; // defined in ifast_substitutions_chooser_10.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_VerifySearchSNAPHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,VerifySearchSNAPHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_VerifySearchSNAPHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_VerifySearchSNAPHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2985 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FaxCntryCode (2986)
   //------------------------------------------------------------------
   const DString& s_FldProp_FaxCntryCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2986_6( I_("") );
      return( dstrDefValue_2986_6 );
   }
   const DString& s_FldProp_FaxCntryCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2986_6( I_("FaxCntryCode") );
      return( dstrFldLabel_2986_6 );
   }
   PBF_SSC subset_super_chooser_2_2986( const ClientLocale& locale )
   {
      return chooser_ss_002_013; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FaxCntryCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,FaxCntryCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FaxCntryCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FaxCntryCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2986 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FaxAreaCode (2987)
   //------------------------------------------------------------------
   const DString& s_FldProp_FaxAreaCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2987_1( I_("") );
      return( dstrDefValue_2987_1 );
   }
   const DString& s_FldProp_FaxAreaCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2987_1( I_("FaxAreaCode") );
      return( dstrFldLabel_2987_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FaxAreaCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,FaxAreaCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FaxAreaCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FaxAreaCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeCodeFundClassDateCross (2988)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeCodeFundClassDateCross_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2988_5( I_("") );
      return( dstrDefValue_2988_5 );
   }
   const DString& s_FldProp_FeeCodeFundClassDateCross_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2988_5( I_("FeeCodeFundClassDateCross") );
      return( dstrFldLabel_2988_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeCodeFundClassDateCross(
       BFDataFieldProperties::Type::text // field is a text field
      ,FeeCodeFundClassDateCross // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeCodeFundClassDateCross_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FeeCodeFundClassDateCross_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FieldCrossEdit1 (2989)
   //------------------------------------------------------------------
   const DString& s_FldProp_FieldCrossEdit1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2989_8( I_("") );
      return( dstrDefValue_2989_8 );
   }
   const DString& s_FldProp_FieldCrossEdit1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2989_8( I_("FieldCrossEdit1") );
      return( dstrFldLabel_2989_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FieldCrossEdit1(
       BFDataFieldProperties::Type::text // field is a text field
      ,FieldCrossEdit1 // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FieldCrossEdit1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FieldCrossEdit1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CreateAllocations (2991)
   //------------------------------------------------------------------
   const DString& s_FldProp_CreateAllocations_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2991_7( I_("N") );
      return( dstrDefValue_2991_7 );
   }
   const DString& s_FldProp_CreateAllocations_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2991_7( I_("") );
      return( dstrFldLabel_2991_7 );
   }
   PBF_SSC subset_super_chooser_2_2991( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CreateAllocations(
       BFDataFieldProperties::Type::text // field is a text field
      ,CreateAllocations // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CreateAllocations_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CreateAllocations_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2991 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocationsAllowed (2992)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocationsAllowed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2992_6( I_("N") );
      return( dstrDefValue_2992_6 );
   }
   const DString& s_FldProp_AllocationsAllowed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2992_6( I_("") );
      return( dstrFldLabel_2992_6 );
   }
   PBF_SSC subset_super_chooser_2_2992( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocationsAllowed(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllocationsAllowed // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllocationsAllowed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllocationsAllowed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2992 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PurchaseSourceOfFund (2994)
   //------------------------------------------------------------------
   const DString& s_FldProp_PurchaseSourceOfFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2994_1( I_("") );
      return( dstrDefValue_2994_1 );
   }
   const DString& s_FldProp_PurchaseSourceOfFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2994_1( I_("PurchaseSourceOfFund") );
      return( dstrFldLabel_2994_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PurchaseSourceOfFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,PurchaseSourceOfFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PurchaseSourceOfFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PurchaseSourceOfFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RedempSourceOfFund (2995)
   //------------------------------------------------------------------
   const DString& s_FldProp_RedempSourceOfFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2995_6( I_("") );
      return( dstrDefValue_2995_6 );
   }
   const DString& s_FldProp_RedempSourceOfFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2995_6( I_("RedempSourceOfFund") );
      return( dstrFldLabel_2995_6 );
   }
   PBF_SSC subset_super_chooser_2_2995( const ClientLocale& locale )
   {
      return chooser_ss_002_220; // defined in ifast_substitutions_chooser_7.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RedempSourceOfFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,RedempSourceOfFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RedempSourceOfFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RedempSourceOfFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_2995 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransferSourceOfFund (2996)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransferSourceOfFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2996_8( I_("") );
      return( dstrDefValue_2996_8 );
   }
   const DString& s_FldProp_TransferSourceOfFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2996_8( I_("TransferSourceOfFund") );
      return( dstrFldLabel_2996_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransferSourceOfFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,TransferSourceOfFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransferSourceOfFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TransferSourceOfFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PriceProcAtFndGrp (2997)
   //------------------------------------------------------------------
   const DString& s_FldProp_PriceProcAtFndGrp_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2997_7( I_("") );
      return( dstrDefValue_2997_7 );
   }
   const DString& s_FldProp_PriceProcAtFndGrp_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2997_7( I_("PriceProcAtFndGrp") );
      return( dstrFldLabel_2997_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PriceProcAtFndGrp(
       BFDataFieldProperties::Type::text // field is a text field
      ,PriceProcAtFndGrp // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PriceProcAtFndGrp_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PriceProcAtFndGrp_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OtherTaxAmt (2998)
   //------------------------------------------------------------------
   const DString& s_FldProp_OtherTaxAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2998_6( I_("") );
      return( dstrDefValue_2998_6 );
   }
   double s_FldProp_OtherTaxAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_OtherTaxAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2998_6( I_("OtherTaxAmt") );
      return( dstrFldLabel_2998_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OtherTaxAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,OtherTaxAmt // fieldId
      ,60 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_OtherTaxAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_OtherTaxAmt_d_DVF // default value
      ,s_FldProp_OtherTaxAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BayComTo (2999)
   //------------------------------------------------------------------
   const DString& s_FldProp_BayComTo_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_2999_1( I_("") );
      return( dstrDefValue_2999_1 );
   }
   const DString& s_FldProp_BayComTo_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_2999_1( I_("BayComTo") );
      return( dstrFldLabel_2999_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BayComTo(
       BFDataFieldProperties::Type::text // field is a text field
      ,BayComTo // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BayComTo_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BayComTo_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );
}
