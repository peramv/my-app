// BFDataImpl implementation file for DataSet DSTC0336.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0336_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0336_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0336_VWRepeat_Record() { return new dsi_DSTC0336_VWRepeat_Record; }

dsi_DSTC0336_VWRepeat_Record::dsi_DSTC0336_VWRepeat_Record()
: BFDataImpl( 40005017 )
, ProcessID_( ifds::ProcessID, &ifds::s_FldProp_ProcessID )
, ActivityID_( ifds::ActivityID, &ifds::s_FldProp_ActivityID )
, ActivityType_( ifds::ActivityType, &ifds::s_FldProp_ActivityType )
, SendRefNum_( ifds::SendRefNum, &ifds::s_FldProp_SendRefNum )
, MsgDate_( ifds::MsgDate, &ifds::s_FldProp_MsgDate )
, MsgTime_( ifds::MsgTime, &ifds::s_FldProp_MsgTime )
, ProcessDate_( ifds::ProcessDate, &ifds::s_FldProp_ProcessDate )
, ProcessTime_( ifds::ProcessTime, &ifds::s_FldProp_ProcessTime )
, FundBrokerCode_( ifds::FundBrokerCode, &ifds::s_FldProp_FundBrokerCode )
, OmnibusID_( ifds::OmnibusID, &ifds::s_FldProp_OmnibusID )
, AccountNum_( ifds::AccountNum, &ifds::s_FldProp_AccountNum )
, TransNum_( ifds::TransNum, &ifds::s_FldProp_TransNum )
{
   cFields_ = 12;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0336_VWRepeat_Record::~dsi_DSTC0336_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0336_VWRepeat_Record::clone()
{
   dsi_DSTC0336_VWRepeat_Record* p = new dsi_DSTC0336_VWRepeat_Record;
   p->ProcessID_ = ProcessID_;
   p->ActivityID_ = ActivityID_;
   p->ActivityType_ = ActivityType_;
   p->SendRefNum_ = SendRefNum_;
   p->MsgDate_ = MsgDate_;
   p->MsgTime_ = MsgTime_;
   p->ProcessDate_ = ProcessDate_;
   p->ProcessTime_ = ProcessTime_;
   p->FundBrokerCode_ = FundBrokerCode_;
   p->OmnibusID_ = OmnibusID_;
   p->AccountNum_ = AccountNum_;
   p->TransNum_ = TransNum_;
   return(p);
}

BFDataField* dsi_DSTC0336_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40005013: return ( &ProcessID_ ); break; // ProcessID
      case 40005010: return ( &ActivityID_ ); break; // ActivityID
      case 40005018: return ( &ActivityType_ ); break; // ActivityType
      case 40003524: return ( &SendRefNum_ ); break; // SendRefNum
      case 40005019: return ( &MsgDate_ ); break; // MsgDate
      case 40005020: return ( &MsgTime_ ); break; // MsgTime
      case 40000216: return ( &ProcessDate_ ); break; // ProcessDate
      case 40000491: return ( &ProcessTime_ ); break; // ProcessTime
      case 40004712: return ( &FundBrokerCode_ ); break; // FundBrokerCode
      case 40004780: return ( &OmnibusID_ ); break; // OmnibusID
      case 40000040: return ( &AccountNum_ ); break; // AccountNum
      case 40000096: return ( &TransNum_ ); break; // TransNum
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0336_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0336_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0336_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 12 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &ProcessID_; break;
            case 1: aFlds_[1] = &ActivityID_; break;
            case 2: aFlds_[2] = &ActivityType_; break;
            case 3: aFlds_[3] = &SendRefNum_; break;
            case 4: aFlds_[4] = &MsgDate_; break;
            case 5: aFlds_[5] = &MsgTime_; break;
            case 6: aFlds_[6] = &ProcessDate_; break;
            case 7: aFlds_[7] = &ProcessTime_; break;
            case 8: aFlds_[8] = &FundBrokerCode_; break;
            case 9: aFlds_[9] = &OmnibusID_; break;
            case 10: aFlds_[10] = &AccountNum_; break;
            case 11: aFlds_[11] = &TransNum_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0336_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0336_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0336_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 60 );
}

unsigned long dsi_DSTC0336_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 454 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0336_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0336_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0336_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40005013: return( true );
      case 40005010: return( true );
      case 40005018: return( true );
      case 40003524: return( true );
      case 40005019: return( true );
      case 40005020: return( true );
      case 40000216: return( true );
      case 40000491: return( true );
      case 40004712: return( true );
      case 40004780: return( true );
      case 40000040: return( true );
      case 40000096: return( true );
   }
   return false;
}

