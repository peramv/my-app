// Data Field Properties
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdataid.hpp>
#include "ifast_substitutions.h"
#include "ifast_masks.h"

namespace ifds
{
   extern const BFTextFieldId PermValue;
   extern const BFDataId DSTC0075_REQ;
   extern const BFTextFieldId ShrNumManual;
   extern const BFDataId DSTC0076_REQ;
   extern const BFTextFieldId AccountNumManual;
   extern const BFTextFieldId MarketMailChgSh;
   extern const BFTextFieldId CreateRep;
   extern const BFDataId DSTC0077_REQ;
   extern const BFDataId DSTC0077_REQRepeat_Record;
   extern const BFNumericFieldId AcctEntVer;
   extern const BFDecimalFieldId BenPercentage;
   extern const BFTextFieldId DispositionCode;
   extern const BFNumericFieldId AcctEntJointVer;
   extern const BFDecimalFieldId AmtAssigned;
   extern const BFNumericFieldId AcctEntRid;
   extern const BFNumericFieldId AcctEntBenefRid;
   extern const BFNumericFieldId AcctEntJointRid;
   extern const BFDataId DSTC0078_REQ;
   extern const BFDataId DSTC0078_REQRepeat_Record;
   extern const BFNumericFieldId EntityIdentityVer;
   extern const BFNumericFieldId EntityIdentityRid;
   extern const BFDataId DSTC0079_REQ;
   extern const BFNumericFieldId SearchIdVer;
   extern const BFNumericFieldId SearchIdRid;
   extern const BFDataId DSTC0080_REQ;
   extern const BFDataId DSTC0080_REQRepeat_Record;
   extern const BFNumericFieldId XrefRid;
   extern const BFNumericFieldId XrefVer;
   extern const BFNumericFieldId AddrVer;
   extern const BFDataId DSTC0081_REQ;
   extern const BFDataId DSTC0084_REQ;
   extern const BFDataId DSTC0084_REQRepeat_Record;
   extern const BFTextFieldId AllocRunMode;
   extern const BFTextFieldId AllocFundToCode;
   extern const BFTextFieldId AllocClassToCode;
   extern const BFDecimalFieldId AllocPercentage;
   extern const BFTextFieldId SetAsDefault;
   extern const BFDecimalFieldId InitFactor;
   extern const BFNumericFieldId PlanTerm;
   extern const BFDecimalFieldId PaymentAmt;
   extern const BFNumericFieldId LastPayment;
   extern const BFDecimalFieldId AdminFeeAmtClan;
   extern const BFDataId DSTC0085_REQ;
   extern const BFDataId DSTC0085_REQRepeat_Record;
   extern const BFDecimalFieldId RemarkRid;
   extern const BFDataId DSTC0089_REQ;
   extern const BFDataId DSTC0089_REQRepeat_Record;
   extern const BFDataId DSTC0095_REQ;
   extern const BFDataId DSTC0095_REQRepeat_Record;
   extern const BFNumericFieldId AllocAccountNum;
   extern const BFDataId DSTC0096_REQ;
   extern const BFDataId DSTC0096_REQRepeat_Record;
   extern const BFDataId DSTC0097_REQ;
   extern const BFDataId DSTC0097_REQRepeat_Record;
   extern const BFTextFieldId NFCAddr;
   extern const BFTextFieldId NFConHold;
   extern const BFTextFieldId AddrStatus;
   extern const BFTextFieldId HRDCRelateCode;
   extern const BFTextFieldId HRDCRelateDesc;
   extern const BFTextFieldId RESPReasonCode;
   extern const BFTextFieldId RESPReasonDesc;
   extern const BFTextFieldId SearchSystematicsUsing;
   extern const BFTextFieldId SearchBankingUsing;
   extern const BFTextFieldId SearchEntityUsing;
   extern const BFTextFieldId SearchAddressUsing;
   extern const BFTextFieldId SearchCOAUsing;
   extern const BFTextFieldId SearchDistributionsUsing;
   extern const BFTextFieldId SearchAllocationsUsing;
   extern const BFTextFieldId SearchShareholderUsing;
   extern const BFTextFieldId SearchAccountInfoUsing;
   extern const BFTextFieldId AddrFlag;
   extern const BFDataId DSTC0088_REQ;
   extern const BFDataId DSTC0088_VW;
   extern const BFDataId DSTC0088_VWRepeat_Record;
   extern const BFTextFieldId rxGroupCode;
   extern const BFTextFieldId GroupName;
   extern const BFTextFieldId GroupType;
   extern const BFTextFieldId AccConfOverride;
   extern const BFTextFieldId AMS;
   extern const BFDataId DSTC0076_VW;
   extern const BFDataId DSTC0075_VW;
   extern const BFDataId DSTC0077_VW;
   extern const BFDataId DSTC0081_VW;
   extern const BFDataId DSTC0084_VW;
   extern const BFDataId DSTC0085_VW;
   extern const BFTextFieldId AccDetailsEntityListHeading;
   extern const BFTextFieldId AccDetailsFundsListHeading;
   extern const BFTextFieldId AccDetailsTransHeadingSet;
   extern const BFTextFieldId AccDetailsPendingHeadingSet;
   extern const BFTextFieldId AccDetailsEntitiesIdsListHeading;
   extern const BFTextFieldId Name;
   extern const BFDataId DSTC0100_VW;
   extern const BFDataId DSTC0100_REQ;
   extern const BFDataId DSTC0100_VWRepeat_Record;
   extern const BFTextFieldId HistoricalAccountHeadingSet;
   extern const BFTextFieldId RemarksHeadingSet;
   extern const BFTextFieldId FieldLabel;
   extern const BFTextFieldId PreviousDisp;
   extern const BFDataId DSTC0110_VW;
   extern const BFDataId DSTC0110_REQ;
   extern const BFDataId DSTC0110_VWRepeat_Record;
   extern const BFTextFieldId BankInstructionHeading;
   extern const BFTextFieldId FeeChrLevel;
   extern const BFDecimalFieldId EntityTypeSeq;
   extern const BFDataId DSTC0073_VW;
   extern const BFTextFieldId kAddrLine1;
   extern const BFTextFieldId kAddrLine2;
   extern const BFTextFieldId kAddrLine3;
   extern const BFTextFieldId kAddrLine4;
   extern const BFTextFieldId kAddrLine5;
   extern const BFDataId DSTC0078_VW;
   extern const BFDataId DSTC0079_VW;
   extern const BFTextFieldId BankInstrCombo1;
   extern const BFTextFieldId BankInstrCombo2;
   extern const BFDecimalFieldId IntAccrEffectiveDate;
   extern const BFDecimalFieldId IntAccrLastDivDate;
   extern const BFTextFieldId AllocTaxType;
   extern const BFTextFieldId Employee;
   extern const BFTextFieldId AddAcctFlag;
   extern const BFDataId DSTC0042_VW;
   extern const BFDataId DSTC0083_REQ;
   extern const BFDataId DSTC0083_VW;
   extern const BFTextFieldId SysCurrency;
   extern const BFTextFieldId ShrNumCtrl;
   extern const BFTextFieldId ShrNumVal;
   extern const BFTextFieldId AcctNumCtrl;
   extern const BFTextFieldId AcctNumVal;
   extern const BFTextFieldId DefaultGrp;
   extern const BFTextFieldId GrpCodeLevel;
   extern const BFTextFieldId TaxTypeUpd;
   extern const BFTextFieldId MktMailDef;
   extern const BFTextFieldId RepByBranch;
   extern const BFTextFieldId BrokerBranch;
   extern const BFTextFieldId CapAddress;
   extern const BFTextFieldId CountryVal;
   extern const BFTextFieldId MandatoryId;
   extern const BFTextFieldId BirthNameMand;
   extern const BFTextFieldId ValidSIN;
   extern const BFTextFieldId ShadowNominee;
   extern const BFDecimalFieldId BankValid1;
   extern const BFTextFieldId BankValid2;
   extern const BFDecimalFieldId BankLayout;
   extern const BFTextFieldId SYMBrkUpd;
   extern const BFTextFieldId BrokerFund;
   extern const BFDecimalFieldId PACMinAmt;
   extern const BFDecimalFieldId PACAmtEdit;
   extern const BFTextFieldId GICAllocOnly;
   extern const BFTextFieldId DisableFee4Alloc;
   extern const BFTextFieldId BusRounding;
   extern const BFTextFieldId MultiCurrency;
   extern const BFTextFieldId SplitComm;
   extern const BFTextFieldId AcctFeeParm;
   extern const BFTextFieldId CappedFund;
   extern const BFTextFieldId BankingFormat;
   extern const BFIntegerFieldId TransitNoMax;
   extern const BFDecimalFieldId BankAcctNumMax;
   extern const BFDecimalFieldId InstCodeMax;
   extern const BFDecimalFieldId Sequence;
   extern const BFTextFieldId IntrCode;
   extern const BFTextFieldId IntermName;
   extern const BFTextFieldId IntermCode;
   extern const BFDataId DSTC0086_REQ;
   extern const BFTextFieldId SrchBrokerName;
   extern const BFTextFieldId RequestType;
   extern const BFTextFieldId rxBrokerCode;
   extern const BFTextFieldId BrokerType;
   extern const BFTextFieldId BrokerTypeDesc;
   extern const BFDataId DSTC0091_VWRepeat_Record;
   extern const BFDataId DSTC0090_VWRepeat_Record;
   extern const BFDataId DSTC0092_VWRepeat_Record;
   extern const BFDataId DSTC0091_VW;
   extern const BFDataId DSTC0090_VW;
   extern const BFDataId DSTC0092_VW;
   extern const BFDataId DSTC0090_REQ;
   extern const BFDataId DSTC0091_REQ;
   extern const BFDataId DSTC0092_REQ;
   extern const BFTextFieldId rxBranchCode;
   extern const BFTextFieldId rxSlsrep;
   extern const BFTextFieldId TrailEligible;
   extern const BFTextFieldId PayFreq;
   extern const BFTextFieldId PayFreqDesc;
   extern const BFTextFieldId SlsrepType;
   extern const BFTextFieldId SlsrepTypeDesc;
   extern const BFDataId DSTC0086_VW;
   extern const BFDataId DSTC0086_VWRepeat_Record;
   extern const BFTextFieldId LV_DefaultAllocFundHeading;
   extern const BFTextFieldId LV_OneTimeAllocSystematicHeading;
   extern const BFTextFieldId LV_OneTimeAllocFundHeading;
   extern const BFTextFieldId SystematicListHeading;
   extern const BFTextFieldId SysAllocListHeading;
   extern const BFDataId DSTC0079_REQRepeat_Record;
   extern const BFTextFieldId AllocationType;
   extern const BFDataId DSTC0097_VW;
   extern const BFDataId DSTC0096_VW;
   extern const BFTextFieldId DistributionPayType;
   extern const BFDataId DSTC0074_VWRepeat_Record;
   extern const BFDataId DSTC0113_REQ;
   extern const BFDataId DSTC0113_VW;
   extern const BFDataId DSTC0113_VWRepeat_Record;
   extern const BFTextFieldId WhereUsedListHeading;
   extern const BFTextFieldId ConfirmAwdHeading;

   //------------------------------------------------------------------
   // Field s_FldProp_PermValue (1000)
   //------------------------------------------------------------------
   const DString& s_FldProp_PermValue_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1000_4( I_("0") );
      return( dstrDefValue_1000_4 );
   }
   const DString& s_FldProp_PermValue_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1000_4( I_("PermValue  ") );
      return( dstrFldLabel_1000_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PermValue(
       BFDataFieldProperties::Type::text // field is a text field
      ,PermValue // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PermValue_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PermValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShrNumManual (1002)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShrNumManual_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1002_4( I_("N") );
      return( dstrDefValue_1002_4 );
   }
   const DString& s_FldProp_ShrNumManual_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1002_4( I_("ShrNumManual") );
      return( dstrFldLabel_1002_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShrNumManual(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShrNumManual // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShrNumManual_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShrNumManual_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccountNumManual (1004)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccountNumManual_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1004_8( I_("N") );
      return( dstrDefValue_1004_8 );
   }
   const DString& s_FldProp_AccountNumManual_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1004_8( I_("AccountNumManual       ") );
      return( dstrFldLabel_1004_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccountNumManual(
       BFDataFieldProperties::Type::text // field is a text field
      ,AccountNumManual // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AccountNumManual_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccountNumManual_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MarketMailChgSh (1005)
   //------------------------------------------------------------------
   const DString& s_FldProp_MarketMailChgSh_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1005_4( I_("N") );
      return( dstrDefValue_1005_4 );
   }
   const DString& s_FldProp_MarketMailChgSh_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1005_4( I_("MarketMailChgSh   ") );
      return( dstrFldLabel_1005_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MarketMailChgSh(
       BFDataFieldProperties::Type::text // field is a text field
      ,MarketMailChgSh // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MarketMailChgSh_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MarketMailChgSh_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CreateRep (1006)
   //------------------------------------------------------------------
   const DString& s_FldProp_CreateRep_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1006_5( I_("N") );
      return( dstrDefValue_1006_5 );
   }
   const DString& s_FldProp_CreateRep_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1006_5( I_("CreateRep") );
      return( dstrFldLabel_1006_5 );
   }
   PBF_SSC subset_super_chooser_2_1006( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CreateRep(
       BFDataFieldProperties::Type::text // field is a text field
      ,CreateRep // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CreateRep_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CreateRep_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1006 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctEntVer (1009)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctEntVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1009_5( I_("0") );
      return( dstrDefValue_1009_5 );
   }
   DIINT64 s_FldProp_AcctEntVer_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctEntVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1009_5( I_("AcctEntVer    ") );
      return( dstrFldLabel_1009_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctEntVer(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AcctEntVer // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctEntVer_s_DVF // default value
      ,s_FldProp_AcctEntVer_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AcctEntVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenPercentage (1010)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenPercentage_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1010_4( I_("00000") );
      return( dstrDefValue_1010_4 );
   }
   double s_FldProp_BenPercentage_d_DVF( const ClientLocale& locale )
   {
      return( 00000 );
   }
   const DString& s_FldProp_BenPercentage_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1010_4( I_("BenPercentage   ") );
      return( dstrFldLabel_1010_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenPercentage(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BenPercentage // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_BenPercentage_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BenPercentage_d_DVF // default value
      ,s_FldProp_BenPercentage_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DispositionCode (1011)
   //------------------------------------------------------------------
   const DString& s_FldProp_DispositionCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1011_4( I_("0") );
      return( dstrDefValue_1011_4 );
   }
   const DString& s_FldProp_DispositionCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1011_4( I_("DispositionCode  ") );
      return( dstrFldLabel_1011_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DispositionCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,DispositionCode // fieldId
      ,64 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DispositionCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DispositionCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctEntJointVer (1012)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctEntJointVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1012_4( I_("0") );
      return( dstrDefValue_1012_4 );
   }
   DIINT64 s_FldProp_AcctEntJointVer_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctEntJointVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1012_4( I_("AcctEntJointVer     ") );
      return( dstrFldLabel_1012_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctEntJointVer(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AcctEntJointVer // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctEntJointVer_s_DVF // default value
      ,s_FldProp_AcctEntJointVer_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AcctEntJointVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AmtAssigned (1013)
   //------------------------------------------------------------------
   const DString& s_FldProp_AmtAssigned_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1013_4( I_("0") );
      return( dstrDefValue_1013_4 );
   }
   double s_FldProp_AmtAssigned_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AmtAssigned_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1013_4( I_("AmtAssigned   ") );
      return( dstrFldLabel_1013_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AmtAssigned(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AmtAssigned // fieldId
      ,32 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_AmtAssigned_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AmtAssigned_d_DVF // default value
      ,s_FldProp_AmtAssigned_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctEntRid (1014)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctEntRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1014_5( I_("0") );
      return( dstrDefValue_1014_5 );
   }
   DIINT64 s_FldProp_AcctEntRid_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctEntRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1014_5( I_("AcctEntRid    ") );
      return( dstrFldLabel_1014_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctEntRid(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AcctEntRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctEntRid_s_DVF // default value
      ,s_FldProp_AcctEntRid_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AcctEntRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctEntBenefRid (1015)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctEntBenefRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1015_4( I_("0") );
      return( dstrDefValue_1015_4 );
   }
   DIINT64 s_FldProp_AcctEntBenefRid_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctEntBenefRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1015_4( I_("AcctEntBenefRid    ") );
      return( dstrFldLabel_1015_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctEntBenefRid(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AcctEntBenefRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctEntBenefRid_s_DVF // default value
      ,s_FldProp_AcctEntBenefRid_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AcctEntBenefRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctEntJointRid (1016)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctEntJointRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1016_5( I_("0") );
      return( dstrDefValue_1016_5 );
   }
   DIINT64 s_FldProp_AcctEntJointRid_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctEntJointRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1016_5( I_("AcctEntJointRid    ") );
      return( dstrFldLabel_1016_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctEntJointRid(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AcctEntJointRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctEntJointRid_s_DVF // default value
      ,s_FldProp_AcctEntJointRid_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AcctEntJointRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityIdentityVer (1019)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityIdentityVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1019_5( I_("000000000000000") );
      return( dstrDefValue_1019_5 );
   }
   DIINT64 s_FldProp_EntityIdentityVer_i_DVF( const ClientLocale& locale )
   {
      return( 000000000000000 );
   }
   const DString& s_FldProp_EntityIdentityVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1019_5( I_("EntityIdentityVer   ") );
      return( dstrFldLabel_1019_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityIdentityVer(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,EntityIdentityVer // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_EntityIdentityVer_s_DVF // default value
      ,s_FldProp_EntityIdentityVer_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_EntityIdentityVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityIdentityRid (1020)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityIdentityRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1020_4( I_("000000000000000") );
      return( dstrDefValue_1020_4 );
   }
   DIINT64 s_FldProp_EntityIdentityRid_i_DVF( const ClientLocale& locale )
   {
      return( 000000000000000 );
   }
   const DString& s_FldProp_EntityIdentityRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1020_4( I_("EntityIdentityRid   ") );
      return( dstrFldLabel_1020_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityIdentityRid(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,EntityIdentityRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_EntityIdentityRid_s_DVF // default value
      ,s_FldProp_EntityIdentityRid_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_EntityIdentityRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchIdVer (1022)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchIdVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1022_5( I_("000000000000000") );
      return( dstrDefValue_1022_5 );
   }
   DIINT64 s_FldProp_SearchIdVer_i_DVF( const ClientLocale& locale )
   {
      return( 000000000000000 );
   }
   const DString& s_FldProp_SearchIdVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1022_5( I_("SearchIdVer   ") );
      return( dstrFldLabel_1022_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchIdVer(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,SearchIdVer // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_SearchIdVer_s_DVF // default value
      ,s_FldProp_SearchIdVer_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_SearchIdVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchIdRid (1023)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchIdRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1023_5( I_("000000000000000") );
      return( dstrDefValue_1023_5 );
   }
   DIINT64 s_FldProp_SearchIdRid_i_DVF( const ClientLocale& locale )
   {
      return( 000000000000000 );
   }
   const DString& s_FldProp_SearchIdRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1023_5( I_("SearchIdRid    ") );
      return( dstrFldLabel_1023_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchIdRid(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,SearchIdRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_SearchIdRid_s_DVF // default value
      ,s_FldProp_SearchIdRid_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_SearchIdRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_XrefRid (1026)
   //------------------------------------------------------------------
   const DString& s_FldProp_XrefRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1026_4( I_("000000000000000") );
      return( dstrDefValue_1026_4 );
   }
   DIINT64 s_FldProp_XrefRid_i_DVF( const ClientLocale& locale )
   {
      return( 000000000000000 );
   }
   const DString& s_FldProp_XrefRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1026_4( I_("XrefRid   ") );
      return( dstrFldLabel_1026_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_XrefRid(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,XrefRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_XrefRid_s_DVF // default value
      ,s_FldProp_XrefRid_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_XrefRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_XrefVer (1027)
   //------------------------------------------------------------------
   const DString& s_FldProp_XrefVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1027_5( I_("000000000000000") );
      return( dstrDefValue_1027_5 );
   }
   DIINT64 s_FldProp_XrefVer_i_DVF( const ClientLocale& locale )
   {
      return( 000000000000000 );
   }
   const DString& s_FldProp_XrefVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1027_5( I_("XrefVer   ") );
      return( dstrFldLabel_1027_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_XrefVer(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,XrefVer // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_XrefVer_s_DVF // default value
      ,s_FldProp_XrefVer_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_XrefVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrVer (1028)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1028_4( I_("000000000000000") );
      return( dstrDefValue_1028_4 );
   }
   DIINT64 s_FldProp_AddrVer_i_DVF( const ClientLocale& locale )
   {
      return( 000000000000000 );
   }
   const DString& s_FldProp_AddrVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1028_4( I_("AddrVer   ") );
      return( dstrFldLabel_1028_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrVer(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AddrVer // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_AddrVer_s_DVF // default value
      ,s_FldProp_AddrVer_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AddrVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocRunMode (1032)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocRunMode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1032_5( I_("0") );
      return( dstrDefValue_1032_5 );
   }
   const DString& s_FldProp_AllocRunMode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1032_5( I_("AllocRunMode  ") );
      return( dstrFldLabel_1032_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocRunMode(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllocRunMode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllocRunMode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllocRunMode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocFundToCode (1033)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocFundToCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1033_4( I_(" ") );
      return( dstrDefValue_1033_4 );
   }
   const DString& s_FldProp_AllocFundToCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1033_4( I_("AllocFundToCode  ") );
      return( dstrFldLabel_1033_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocFundToCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllocFundToCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllocFundToCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllocFundToCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocClassToCode (1034)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocClassToCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1034_4( I_(" ") );
      return( dstrDefValue_1034_4 );
   }
   const DString& s_FldProp_AllocClassToCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1034_4( I_("AllocClassToCode") );
      return( dstrFldLabel_1034_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocClassToCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllocClassToCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllocClassToCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllocClassToCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocPercentage (1035)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocPercentage_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1035_5( I_("0.0000") );
      return( dstrDefValue_1035_5 );
   }
   double s_FldProp_AllocPercentage_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000 );
   }
   const DString& s_FldProp_AllocPercentage_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1035_5( I_("AllocPercentage") );
      return( dstrFldLabel_1035_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocPercentage(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AllocPercentage // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_AllocPercentage_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AllocPercentage_d_DVF // default value
      ,s_FldProp_AllocPercentage_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SetAsDefault (1036)
   //------------------------------------------------------------------
   const DString& s_FldProp_SetAsDefault_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1036_4( I_("N") );
      return( dstrDefValue_1036_4 );
   }
   const DString& s_FldProp_SetAsDefault_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1036_4( I_("SetAsDefault") );
      return( dstrFldLabel_1036_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SetAsDefault(
       BFDataFieldProperties::Type::text // field is a text field
      ,SetAsDefault // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SetAsDefault_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SetAsDefault_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InitFactor (1037)
   //------------------------------------------------------------------
   const DString& s_FldProp_InitFactor_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1037_4( I_("0") );
      return( dstrDefValue_1037_4 );
   }
   double s_FldProp_InitFactor_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_InitFactor_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1037_4( I_("InitFactor  ") );
      return( dstrFldLabel_1037_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InitFactor(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,InitFactor // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InitFactor_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_InitFactor_d_DVF // default value
      ,s_FldProp_InitFactor_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PlanTerm (1038)
   //------------------------------------------------------------------
   const DString& s_FldProp_PlanTerm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1038_4( I_("000000000000000") );
      return( dstrDefValue_1038_4 );
   }
   DIINT64 s_FldProp_PlanTerm_i_DVF( const ClientLocale& locale )
   {
      return( 000000000000000 );
   }
   const DString& s_FldProp_PlanTerm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1038_4( I_("PlanTerm   ") );
      return( dstrFldLabel_1038_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PlanTerm(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,PlanTerm // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_PlanTerm_s_DVF // default value
      ,s_FldProp_PlanTerm_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_PlanTerm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PaymentAmt (1039)
   //------------------------------------------------------------------
   const DString& s_FldProp_PaymentAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1039_4( I_("0") );
      return( dstrDefValue_1039_4 );
   }
   double s_FldProp_PaymentAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_PaymentAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1039_4( I_("PaymentAmt  ") );
      return( dstrFldLabel_1039_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PaymentAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PaymentAmt // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PaymentAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PaymentAmt_d_DVF // default value
      ,s_FldProp_PaymentAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastPayment (1040)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastPayment_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1040_5( I_("000000000000000") );
      return( dstrDefValue_1040_5 );
   }
   DIINT64 s_FldProp_LastPayment_i_DVF( const ClientLocale& locale )
   {
      return( 000000000000000 );
   }
   const DString& s_FldProp_LastPayment_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1040_5( I_("LastPayment   ") );
      return( dstrFldLabel_1040_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastPayment(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,LastPayment // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_LastPayment_s_DVF // default value
      ,s_FldProp_LastPayment_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_LastPayment_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdminFeeAmtClan (1041)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdminFeeAmtClan_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1041_4( I_("0") );
      return( dstrDefValue_1041_4 );
   }
   double s_FldProp_AdminFeeAmtClan_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AdminFeeAmtClan_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1041_4( I_("AdminFeeAmtClan  ") );
      return( dstrFldLabel_1041_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdminFeeAmtClan(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AdminFeeAmtClan // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AdminFeeAmtClan_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AdminFeeAmtClan_d_DVF // default value
      ,s_FldProp_AdminFeeAmtClan_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RemarkRid (1044)
   //------------------------------------------------------------------
   const DString& s_FldProp_RemarkRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1044_4( I_("0") );
      return( dstrDefValue_1044_4 );
   }
   double s_FldProp_RemarkRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_RemarkRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1044_4( I_("RemarkRid   ") );
      return( dstrFldLabel_1044_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RemarkRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RemarkRid // fieldId
      ,32 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_RemarkRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RemarkRid_d_DVF // default value
      ,s_FldProp_RemarkRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocAccountNum (1049)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocAccountNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1049_4( I_("0") );
      return( dstrDefValue_1049_4 );
   }
   DIINT64 s_FldProp_AllocAccountNum_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AllocAccountNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1049_4( I_("AllocAccountNum  ") );
      return( dstrFldLabel_1049_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocAccountNum(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AllocAccountNum // fieldId
      ,17 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_27 // mask chooser function
      ,s_FldProp_AllocAccountNum_s_DVF // default value
      ,s_FldProp_AllocAccountNum_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AllocAccountNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NFCAddr (1054)
   //------------------------------------------------------------------
   const DString& s_FldProp_NFCAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1054_4( I_("01") );
      return( dstrDefValue_1054_4 );
   }
   const DString& s_FldProp_NFCAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1054_4( I_("NFCAddr") );
      return( dstrFldLabel_1054_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NFCAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,NFCAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NFCAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NFCAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NFConHold (1055)
   //------------------------------------------------------------------
   const DString& s_FldProp_NFConHold_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1055_5( I_("N") );
      return( dstrDefValue_1055_5 );
   }
   const DString& s_FldProp_NFConHold_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1055_5( I_("NFConHold") );
      return( dstrFldLabel_1055_5 );
   }
   PBF_SSC subset_super_chooser_2_1055( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NFConHold(
       BFDataFieldProperties::Type::text // field is a text field
      ,NFConHold // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NFConHold_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NFConHold_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1055 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrStatus (1056)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrStatus_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1056_5( I_("0") );
      return( dstrDefValue_1056_5 );
   }
   const DString& s_FldProp_AddrStatus_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1056_5( I_("AddrStatus  ") );
      return( dstrFldLabel_1056_5 );
   }
   PBF_SSC subset_super_chooser_2_1056( const ClientLocale& locale )
   {
      return chooser_ss_002_473; // defined in ifast_substitutions_chooser_15.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrStatus(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrStatus // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrStatus_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrStatus_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1056 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HRDCRelateCode (1057)
   //------------------------------------------------------------------
   const DString& s_FldProp_HRDCRelateCode_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1057_4( I_("0") );
         return( dstrDefValue_1057_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1057_7( I_("") );
         return( dstrDefValue_1057_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1057_5( I_("") );
         return( dstrDefValue_1057_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1057_8( I_("") );
         return( dstrDefValue_1057_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1057_3( I_("") );
         return( dstrDefValue_1057_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1057_1( I_("") );
         return( dstrDefValue_1057_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1057_6( I_("0") );
         return( dstrDefValue_1057_6 );
      }
      static const DString dstrDefValue_1057_1( I_("") );
      return( dstrDefValue_1057_1 );
   }
   const DString& s_FldProp_HRDCRelateCode_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1057_4( I_("HRDCRelateCode  ") );
         return( dstrFldLabel_1057_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1057_7( I_("HRDCRelateCode  ") );
         return( dstrFldLabel_1057_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1057_5( I_("HRDCRelateCode  ") );
         return( dstrFldLabel_1057_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1057_8( I_("HRDCRelateCode  ") );
         return( dstrFldLabel_1057_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1057_3( I_("HRDCRelateCode  ") );
         return( dstrFldLabel_1057_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1057_1( I_("HRDCRelateCode  ") );
         return( dstrFldLabel_1057_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1057_6( I_("HRDCRelateCode  ") );
         return( dstrFldLabel_1057_6 );
      }
      static const DString dstrFldLabel_1057_1( I_("HRDCRelateCode  ") );
      return( dstrFldLabel_1057_1 );
   }
   PBF_SSC subset_super_chooser_2_1057( const ClientLocale& locale )
   {
      return chooser_ss_002_209; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HRDCRelateCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,HRDCRelateCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HRDCRelateCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HRDCRelateCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1057 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HRDCRelateDesc (1058)
   //------------------------------------------------------------------
   const DString& s_FldProp_HRDCRelateDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1058_5( I_("0") );
      return( dstrDefValue_1058_5 );
   }
   const DString& s_FldProp_HRDCRelateDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1058_5( I_("HRDCRelateDesc  ") );
      return( dstrFldLabel_1058_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HRDCRelateDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,HRDCRelateDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HRDCRelateDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HRDCRelateDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RESPReasonCode (1059)
   //------------------------------------------------------------------
   const DString& s_FldProp_RESPReasonCode_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1059_4( I_("0") );
         return( dstrDefValue_1059_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1059_7( I_("00") );
         return( dstrDefValue_1059_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1059_8( I_("00") );
         return( dstrDefValue_1059_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1059_5( I_("00") );
         return( dstrDefValue_1059_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1059_1( I_("00") );
         return( dstrDefValue_1059_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1059_6( I_("00") );
         return( dstrDefValue_1059_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1059_3( I_("00") );
         return( dstrDefValue_1059_3 );
      }
      static const DString dstrDefValue_1059_1( I_("00") );
      return( dstrDefValue_1059_1 );
   }
   const DString& s_FldProp_RESPReasonCode_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1059_4( I_("RESPReasonCode  ") );
         return( dstrFldLabel_1059_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1059_7( I_("RESPReasonCode  ") );
         return( dstrFldLabel_1059_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1059_8( I_("RESPReasonCode  ") );
         return( dstrFldLabel_1059_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1059_5( I_("RESPReasonCode  ") );
         return( dstrFldLabel_1059_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1059_1( I_("RESPReasonCode  ") );
         return( dstrFldLabel_1059_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1059_6( I_("RESPReasonCode  ") );
         return( dstrFldLabel_1059_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1059_3( I_("RESPReasonCode  ") );
         return( dstrFldLabel_1059_3 );
      }
      static const DString dstrFldLabel_1059_1( I_("RESPReasonCode  ") );
      return( dstrFldLabel_1059_1 );
   }
   PBF_SSC subset_super_chooser_2_1059( const ClientLocale& locale )
   {
      return chooser_ss_002_201; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RESPReasonCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,RESPReasonCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RESPReasonCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RESPReasonCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1059 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RESPReasonDesc (1060)
   //------------------------------------------------------------------
   const DString& s_FldProp_RESPReasonDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1060_4( I_("0") );
      return( dstrDefValue_1060_4 );
   }
   const DString& s_FldProp_RESPReasonDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1060_4( I_("RESPReasonDesc  ") );
      return( dstrFldLabel_1060_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RESPReasonDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,RESPReasonDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RESPReasonDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RESPReasonDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchSystematicsUsing (1061)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchSystematicsUsing_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1061_5( I_("") );
         return( dstrDefValue_1061_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1061_7( I_("") );
         return( dstrDefValue_1061_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1061_8( I_("") );
         return( dstrDefValue_1061_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1061_6( I_("0") );
         return( dstrDefValue_1061_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1061_4( I_("0") );
         return( dstrDefValue_1061_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1061_3( I_("") );
         return( dstrDefValue_1061_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1061_1( I_("") );
         return( dstrDefValue_1061_1 );
      }
      static const DString dstrDefValue_1061_1( I_("") );
      return( dstrDefValue_1061_1 );
   }
   const DString& s_FldProp_SearchSystematicsUsing_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1061_5( I_("SearchSystematicsUsing  ") );
         return( dstrFldLabel_1061_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1061_7( I_("SearchSystematicsUsing  ") );
         return( dstrFldLabel_1061_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1061_8( I_("SearchSystematicsUsing  ") );
         return( dstrFldLabel_1061_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1061_6( I_("SearchSystematicsUsing  ") );
         return( dstrFldLabel_1061_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1061_4( I_("SearchSystematicsUsing  ") );
         return( dstrFldLabel_1061_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1061_3( I_("SearchSystematicsUsing  ") );
         return( dstrFldLabel_1061_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1061_1( I_("SearchSystematicsUsing  ") );
         return( dstrFldLabel_1061_1 );
      }
      static const DString dstrFldLabel_1061_1( I_("SearchSystematicsUsing  ") );
      return( dstrFldLabel_1061_1 );
   }
   PBF_SSC subset_super_chooser_2_1061( const ClientLocale& locale )
   {
      return chooser_ss_002_077; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchSystematicsUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchSystematicsUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchSystematicsUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchSystematicsUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1061 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchBankingUsing (1062)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchBankingUsing_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1062_7( I_("") );
         return( dstrDefValue_1062_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1062_8( I_("") );
         return( dstrDefValue_1062_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1062_6( I_("0") );
         return( dstrDefValue_1062_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1062_3( I_("") );
         return( dstrDefValue_1062_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1062_1( I_("") );
         return( dstrDefValue_1062_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1062_4( I_("0") );
         return( dstrDefValue_1062_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1062_5( I_("") );
         return( dstrDefValue_1062_5 );
      }
      static const DString dstrDefValue_1062_1( I_("") );
      return( dstrDefValue_1062_1 );
   }
   const DString& s_FldProp_SearchBankingUsing_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1062_7( I_("SearchBankingUsing ") );
         return( dstrFldLabel_1062_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1062_8( I_("SearchBankingUsing ") );
         return( dstrFldLabel_1062_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1062_6( I_("SearchBankingUsing ") );
         return( dstrFldLabel_1062_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1062_3( I_("SearchBankingUsing ") );
         return( dstrFldLabel_1062_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1062_1( I_("SearchBankingUsing ") );
         return( dstrFldLabel_1062_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1062_4( I_("SearchBankingUsing ") );
         return( dstrFldLabel_1062_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1062_5( I_("SearchBankingUsing ") );
         return( dstrFldLabel_1062_5 );
      }
      static const DString dstrFldLabel_1062_1( I_("SearchBankingUsing ") );
      return( dstrFldLabel_1062_1 );
   }
   PBF_SSC subset_super_chooser_2_1062( const ClientLocale& locale )
   {
      return chooser_ss_002_078; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchBankingUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchBankingUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchBankingUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchBankingUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1062 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchEntityUsing (1063)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchEntityUsing_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1063_4( I_("0") );
         return( dstrDefValue_1063_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1063_8( I_("") );
         return( dstrDefValue_1063_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1063_7( I_("") );
         return( dstrDefValue_1063_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1063_5( I_("") );
         return( dstrDefValue_1063_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1063_3( I_("") );
         return( dstrDefValue_1063_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1063_1( I_("") );
         return( dstrDefValue_1063_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1063_6( I_("0") );
         return( dstrDefValue_1063_6 );
      }
      static const DString dstrDefValue_1063_1( I_("") );
      return( dstrDefValue_1063_1 );
   }
   const DString& s_FldProp_SearchEntityUsing_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1063_4( I_("SearchEntityUsing ") );
         return( dstrFldLabel_1063_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1063_8( I_("SearchEntityUsing ") );
         return( dstrFldLabel_1063_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1063_7( I_("SearchEntityUsing ") );
         return( dstrFldLabel_1063_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1063_5( I_("SearchEntityUsing ") );
         return( dstrFldLabel_1063_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1063_3( I_("SearchEntityUsing ") );
         return( dstrFldLabel_1063_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1063_1( I_("SearchEntityUsing ") );
         return( dstrFldLabel_1063_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1063_6( I_("SearchEntityUsing ") );
         return( dstrFldLabel_1063_6 );
      }
      static const DString dstrFldLabel_1063_1( I_("SearchEntityUsing ") );
      return( dstrFldLabel_1063_1 );
   }
   PBF_SSC subset_super_chooser_2_1063( const ClientLocale& locale )
   {
      return chooser_ss_002_079; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchEntityUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchEntityUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchEntityUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchEntityUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1063 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchAddressUsing (1064)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchAddressUsing_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1064_4( I_("0") );
         return( dstrDefValue_1064_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1064_5( I_("") );
         return( dstrDefValue_1064_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1064_8( I_("") );
         return( dstrDefValue_1064_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1064_7( I_("") );
         return( dstrDefValue_1064_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1064_1( I_("") );
         return( dstrDefValue_1064_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1064_3( I_("") );
         return( dstrDefValue_1064_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1064_6( I_("0") );
         return( dstrDefValue_1064_6 );
      }
      static const DString dstrDefValue_1064_1( I_("") );
      return( dstrDefValue_1064_1 );
   }
   const DString& s_FldProp_SearchAddressUsing_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1064_4( I_("SearchAddressUsing ") );
         return( dstrFldLabel_1064_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1064_5( I_("SearchAddressUsing ") );
         return( dstrFldLabel_1064_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1064_8( I_("SearchAddressUsing ") );
         return( dstrFldLabel_1064_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1064_7( I_("SearchAddressUsing ") );
         return( dstrFldLabel_1064_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1064_1( I_("SearchAddressUsing ") );
         return( dstrFldLabel_1064_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1064_3( I_("SearchAddressUsing ") );
         return( dstrFldLabel_1064_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1064_6( I_("SearchAddressUsing ") );
         return( dstrFldLabel_1064_6 );
      }
      static const DString dstrFldLabel_1064_1( I_("SearchAddressUsing ") );
      return( dstrFldLabel_1064_1 );
   }
   PBF_SSC subset_super_chooser_2_1064( const ClientLocale& locale )
   {
      return chooser_ss_002_072; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchAddressUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchAddressUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchAddressUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchAddressUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1064 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchCOAUsing (1065)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchCOAUsing_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1065_4( I_("0") );
         return( dstrDefValue_1065_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1065_7( I_("") );
         return( dstrDefValue_1065_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1065_5( I_("") );
         return( dstrDefValue_1065_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1065_8( I_("") );
         return( dstrDefValue_1065_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1065_3( I_("") );
         return( dstrDefValue_1065_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1065_1( I_("") );
         return( dstrDefValue_1065_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1065_6( I_("0") );
         return( dstrDefValue_1065_6 );
      }
      static const DString dstrDefValue_1065_1( I_("") );
      return( dstrDefValue_1065_1 );
   }
   const DString& s_FldProp_SearchCOAUsing_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1065_4( I_("SearchCOAUsing ") );
         return( dstrFldLabel_1065_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1065_7( I_("SearchCOAUsing ") );
         return( dstrFldLabel_1065_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1065_5( I_("SearchCOAUsing ") );
         return( dstrFldLabel_1065_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1065_8( I_("SearchCOAUsing ") );
         return( dstrFldLabel_1065_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1065_3( I_("SearchCOAUsing ") );
         return( dstrFldLabel_1065_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1065_1( I_("SearchCOAUsing ") );
         return( dstrFldLabel_1065_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1065_6( I_("SearchCOAUsing ") );
         return( dstrFldLabel_1065_6 );
      }
      static const DString dstrFldLabel_1065_1( I_("SearchCOAUsing ") );
      return( dstrFldLabel_1065_1 );
   }
   PBF_SSC subset_super_chooser_2_1065( const ClientLocale& locale )
   {
      return chooser_ss_002_080; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchCOAUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchCOAUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchCOAUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchCOAUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1065 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchDistributionsUsing (1066)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchDistributionsUsing_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1066_5( I_("") );
         return( dstrDefValue_1066_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1066_8( I_("") );
         return( dstrDefValue_1066_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1066_7( I_("") );
         return( dstrDefValue_1066_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1066_6( I_("0") );
         return( dstrDefValue_1066_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1066_3( I_("") );
         return( dstrDefValue_1066_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1066_1( I_("") );
         return( dstrDefValue_1066_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1066_4( I_("0") );
         return( dstrDefValue_1066_4 );
      }
      static const DString dstrDefValue_1066_1( I_("") );
      return( dstrDefValue_1066_1 );
   }
   const DString& s_FldProp_SearchDistributionsUsing_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1066_5( I_("SearchDistributionsUsing  ") );
         return( dstrFldLabel_1066_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1066_8( I_("SearchDistributionsUsing  ") );
         return( dstrFldLabel_1066_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1066_7( I_("SearchDistributionsUsing  ") );
         return( dstrFldLabel_1066_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1066_6( I_("SearchDistributionsUsing  ") );
         return( dstrFldLabel_1066_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1066_3( I_("SearchDistributionsUsing  ") );
         return( dstrFldLabel_1066_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1066_1( I_("SearchDistributionsUsing  ") );
         return( dstrFldLabel_1066_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1066_4( I_("SearchDistributionsUsing  ") );
         return( dstrFldLabel_1066_4 );
      }
      static const DString dstrFldLabel_1066_1( I_("SearchDistributionsUsing  ") );
      return( dstrFldLabel_1066_1 );
   }
   PBF_SSC subset_super_chooser_2_1066( const ClientLocale& locale )
   {
      return chooser_ss_002_081; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchDistributionsUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchDistributionsUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchDistributionsUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchDistributionsUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1066 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchAllocationsUsing (1067)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchAllocationsUsing_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1067_4( I_("0") );
         return( dstrDefValue_1067_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1067_7( I_("") );
         return( dstrDefValue_1067_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1067_5( I_("") );
         return( dstrDefValue_1067_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1067_8( I_("") );
         return( dstrDefValue_1067_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1067_3( I_("") );
         return( dstrDefValue_1067_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1067_1( I_("") );
         return( dstrDefValue_1067_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1067_6( I_("0") );
         return( dstrDefValue_1067_6 );
      }
      static const DString dstrDefValue_1067_1( I_("") );
      return( dstrDefValue_1067_1 );
   }
   const DString& s_FldProp_SearchAllocationsUsing_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1067_4( I_("SearchAllocationsUsing ") );
         return( dstrFldLabel_1067_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1067_7( I_("SearchAllocationsUsing ") );
         return( dstrFldLabel_1067_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1067_5( I_("SearchAllocationsUsing ") );
         return( dstrFldLabel_1067_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1067_8( I_("SearchAllocationsUsing ") );
         return( dstrFldLabel_1067_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1067_3( I_("SearchAllocationsUsing ") );
         return( dstrFldLabel_1067_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1067_1( I_("SearchAllocationsUsing ") );
         return( dstrFldLabel_1067_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1067_6( I_("SearchAllocationsUsing ") );
         return( dstrFldLabel_1067_6 );
      }
      static const DString dstrFldLabel_1067_1( I_("SearchAllocationsUsing ") );
      return( dstrFldLabel_1067_1 );
   }
   PBF_SSC subset_super_chooser_2_1067( const ClientLocale& locale )
   {
      return chooser_ss_002_082; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchAllocationsUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchAllocationsUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchAllocationsUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchAllocationsUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1067 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchShareholderUsing (1068)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchShareholderUsing_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1068_5( I_("") );
         return( dstrDefValue_1068_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1068_7( I_("") );
         return( dstrDefValue_1068_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1068_8( I_("") );
         return( dstrDefValue_1068_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1068_6( I_("0") );
         return( dstrDefValue_1068_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1068_4( I_("0") );
         return( dstrDefValue_1068_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1068_3( I_("") );
         return( dstrDefValue_1068_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1068_1( I_("") );
         return( dstrDefValue_1068_1 );
      }
      static const DString dstrDefValue_1068_1( I_("") );
      return( dstrDefValue_1068_1 );
   }
   const DString& s_FldProp_SearchShareholderUsing_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1068_5( I_("SearchShareholderUsing ") );
         return( dstrFldLabel_1068_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1068_7( I_("SearchShareholderUsing ") );
         return( dstrFldLabel_1068_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1068_8( I_("SearchShareholderUsing ") );
         return( dstrFldLabel_1068_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1068_6( I_("SearchShareholderUsing ") );
         return( dstrFldLabel_1068_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1068_4( I_("SearchShareholderUsing ") );
         return( dstrFldLabel_1068_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1068_3( I_("SearchShareholderUsing ") );
         return( dstrFldLabel_1068_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1068_1( I_("SearchShareholderUsing ") );
         return( dstrFldLabel_1068_1 );
      }
      static const DString dstrFldLabel_1068_1( I_("SearchShareholderUsing ") );
      return( dstrFldLabel_1068_1 );
   }
   PBF_SSC subset_super_chooser_2_1068( const ClientLocale& locale )
   {
      return chooser_ss_002_060; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchShareholderUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchShareholderUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchShareholderUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchShareholderUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1068 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchAccountInfoUsing (1069)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchAccountInfoUsing_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1069_5( I_("") );
         return( dstrDefValue_1069_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1069_8( I_("") );
         return( dstrDefValue_1069_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1069_7( I_("") );
         return( dstrDefValue_1069_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1069_6( I_("0") );
         return( dstrDefValue_1069_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1069_3( I_("") );
         return( dstrDefValue_1069_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1069_1( I_("") );
         return( dstrDefValue_1069_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1069_4( I_("0") );
         return( dstrDefValue_1069_4 );
      }
      static const DString dstrDefValue_1069_1( I_("") );
      return( dstrDefValue_1069_1 );
   }
   const DString& s_FldProp_SearchAccountInfoUsing_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1069_5( I_("SearchAccountInfoUsing ") );
         return( dstrFldLabel_1069_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1069_8( I_("SearchAccountInfoUsing ") );
         return( dstrFldLabel_1069_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1069_7( I_("SearchAccountInfoUsing ") );
         return( dstrFldLabel_1069_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1069_6( I_("SearchAccountInfoUsing ") );
         return( dstrFldLabel_1069_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1069_3( I_("SearchAccountInfoUsing ") );
         return( dstrFldLabel_1069_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1069_1( I_("SearchAccountInfoUsing ") );
         return( dstrFldLabel_1069_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1069_4( I_("SearchAccountInfoUsing ") );
         return( dstrFldLabel_1069_4 );
      }
      static const DString dstrFldLabel_1069_1( I_("SearchAccountInfoUsing ") );
      return( dstrFldLabel_1069_1 );
   }
   PBF_SSC subset_super_chooser_2_1069( const ClientLocale& locale )
   {
      return chooser_ss_002_061; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchAccountInfoUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchAccountInfoUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchAccountInfoUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchAccountInfoUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1069 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrFlag (1070)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrFlag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1070_4( I_("0") );
      return( dstrDefValue_1070_4 );
   }
   const DString& s_FldProp_AddrFlag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1070_4( I_("AddrFlag ") );
      return( dstrFldLabel_1070_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrFlag(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrFlag // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrFlag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrFlag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxGroupCode (1074)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxGroupCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1074_5( I_("0") );
      return( dstrDefValue_1074_5 );
   }
   const DString& s_FldProp_rxGroupCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1074_5( I_("rxGroupCode  ") );
      return( dstrFldLabel_1074_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxGroupCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxGroupCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxGroupCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxGroupCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GroupName (1075)
   //------------------------------------------------------------------
   const DString& s_FldProp_GroupName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1075_5( I_("0") );
      return( dstrDefValue_1075_5 );
   }
   const DString& s_FldProp_GroupName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1075_5( I_("GroupName ") );
      return( dstrFldLabel_1075_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GroupName(
       BFDataFieldProperties::Type::text // field is a text field
      ,GroupName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GroupName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GroupName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GroupType (1076)
   //------------------------------------------------------------------
   const DString& s_FldProp_GroupType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1076_4( I_("0") );
      return( dstrDefValue_1076_4 );
   }
   const DString& s_FldProp_GroupType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1076_4( I_("GroupType ") );
      return( dstrFldLabel_1076_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GroupType(
       BFDataFieldProperties::Type::text // field is a text field
      ,GroupType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GroupType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GroupType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccConfOverride (1077)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccConfOverride_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1077_4( I_(" ") );
      return( dstrDefValue_1077_4 );
   }
   const DString& s_FldProp_AccConfOverride_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1077_4( I_("AccConfOverride   ") );
      return( dstrFldLabel_1077_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccConfOverride(
       BFDataFieldProperties::Type::text // field is a text field
      ,AccConfOverride // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AccConfOverride_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccConfOverride_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AMS (1078)
   //------------------------------------------------------------------
   const DString& s_FldProp_AMS_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1078_4( I_(" ") );
      return( dstrDefValue_1078_4 );
   }
   const DString& s_FldProp_AMS_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1078_4( I_("AMS  ") );
      return( dstrFldLabel_1078_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AMS(
       BFDataFieldProperties::Type::text // field is a text field
      ,AMS // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AMS_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AMS_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccDetailsEntityListHeading (1085)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccDetailsEntityListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1085_4( I_("0") );
         return( dstrDefValue_1085_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1085_7( I_("") );
         return( dstrDefValue_1085_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1085_8( I_("") );
         return( dstrDefValue_1085_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1085_5( I_("") );
         return( dstrDefValue_1085_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1085_1( I_("") );
         return( dstrDefValue_1085_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1085_6( I_("0") );
         return( dstrDefValue_1085_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1085_3( I_("") );
         return( dstrDefValue_1085_3 );
      }
      static const DString dstrDefValue_1085_1( I_("") );
      return( dstrDefValue_1085_1 );
   }
   const DString& s_FldProp_AccDetailsEntityListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1085_4( I_("AccDetailsEntityListHeading ") );
         return( dstrFldLabel_1085_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1085_7( I_("AccDetailsEntityListHeading ") );
         return( dstrFldLabel_1085_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1085_8( I_("AccDetailsEntityListHeading ") );
         return( dstrFldLabel_1085_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1085_5( I_("AccDetailsEntityListHeading ") );
         return( dstrFldLabel_1085_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1085_1( I_("AccDetailsEntityListHeading ") );
         return( dstrFldLabel_1085_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1085_6( I_("AccDetailsEntityListHeading ") );
         return( dstrFldLabel_1085_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1085_3( I_("AccDetailsEntityListHeading ") );
         return( dstrFldLabel_1085_3 );
      }
      static const DString dstrFldLabel_1085_1( I_("AccDetailsEntityListHeading ") );
      return( dstrFldLabel_1085_1 );
   }
   PBF_SSC subset_super_chooser_2_1085( const ClientLocale& locale )
   {
      return chooser_ss_002_083; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccDetailsEntityListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,AccDetailsEntityListHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AccDetailsEntityListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccDetailsEntityListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1085 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccDetailsFundsListHeading (1086)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccDetailsFundsListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1086_4( I_("0") );
         return( dstrDefValue_1086_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1086_7( I_("") );
         return( dstrDefValue_1086_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1086_5( I_("") );
         return( dstrDefValue_1086_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1086_8( I_("") );
         return( dstrDefValue_1086_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1086_3( I_("") );
         return( dstrDefValue_1086_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1086_1( I_("") );
         return( dstrDefValue_1086_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1086_6( I_("0") );
         return( dstrDefValue_1086_6 );
      }
      static const DString dstrDefValue_1086_1( I_("") );
      return( dstrDefValue_1086_1 );
   }
   const DString& s_FldProp_AccDetailsFundsListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1086_4( I_("AccDetailsFundsListHeading ") );
         return( dstrFldLabel_1086_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1086_7( I_("AccDetailsFundsListHeading ") );
         return( dstrFldLabel_1086_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1086_5( I_("AccDetailsFundsListHeading ") );
         return( dstrFldLabel_1086_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1086_8( I_("AccDetailsFundsListHeading ") );
         return( dstrFldLabel_1086_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1086_3( I_("AccDetailsFundsListHeading ") );
         return( dstrFldLabel_1086_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1086_1( I_("AccDetailsFundsListHeading ") );
         return( dstrFldLabel_1086_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1086_6( I_("AccDetailsFundsListHeading ") );
         return( dstrFldLabel_1086_6 );
      }
      static const DString dstrFldLabel_1086_1( I_("AccDetailsFundsListHeading ") );
      return( dstrFldLabel_1086_1 );
   }
   PBF_SSC subset_super_chooser_2_1086( const ClientLocale& locale )
   {
      return chooser_ss_002_084; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccDetailsFundsListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,AccDetailsFundsListHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AccDetailsFundsListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccDetailsFundsListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1086 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccDetailsTransHeadingSet (1087)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccDetailsTransHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1087_5( I_("") );
         return( dstrDefValue_1087_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1087_7( I_("") );
         return( dstrDefValue_1087_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1087_8( I_("") );
         return( dstrDefValue_1087_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1087_6( I_("0") );
         return( dstrDefValue_1087_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1087_4( I_("0") );
         return( dstrDefValue_1087_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1087_3( I_("") );
         return( dstrDefValue_1087_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1087_1( I_("") );
         return( dstrDefValue_1087_1 );
      }
      static const DString dstrDefValue_1087_1( I_("") );
      return( dstrDefValue_1087_1 );
   }
   const DString& s_FldProp_AccDetailsTransHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1087_5( I_("AccDetailsTransHeadingSet ") );
         return( dstrFldLabel_1087_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1087_7( I_("AccDetailsTransHeadingSet ") );
         return( dstrFldLabel_1087_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1087_8( I_("AccDetailsTransHeadingSet ") );
         return( dstrFldLabel_1087_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1087_6( I_("AccDetailsTransHeadingSet ") );
         return( dstrFldLabel_1087_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1087_4( I_("AccDetailsTransHeadingSet ") );
         return( dstrFldLabel_1087_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1087_3( I_("AccDetailsTransHeadingSet ") );
         return( dstrFldLabel_1087_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1087_1( I_("AccDetailsTransHeadingSet ") );
         return( dstrFldLabel_1087_1 );
      }
      static const DString dstrFldLabel_1087_1( I_("AccDetailsTransHeadingSet ") );
      return( dstrFldLabel_1087_1 );
   }
   PBF_SSC subset_super_chooser_2_1087( const ClientLocale& locale )
   {
      return chooser_ss_002_085; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccDetailsTransHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,AccDetailsTransHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AccDetailsTransHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccDetailsTransHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1087 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccDetailsPendingHeadingSet (1088)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccDetailsPendingHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1088_4( I_("0") );
         return( dstrDefValue_1088_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1088_5( I_("") );
         return( dstrDefValue_1088_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1088_8( I_("") );
         return( dstrDefValue_1088_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1088_7( I_("") );
         return( dstrDefValue_1088_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1088_1( I_("") );
         return( dstrDefValue_1088_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1088_3( I_("") );
         return( dstrDefValue_1088_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1088_6( I_("0") );
         return( dstrDefValue_1088_6 );
      }
      static const DString dstrDefValue_1088_1( I_("") );
      return( dstrDefValue_1088_1 );
   }
   const DString& s_FldProp_AccDetailsPendingHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1088_4( I_("AccDetailsPendingHeadingSet ") );
         return( dstrFldLabel_1088_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1088_5( I_("AccDetailsPendingHeadingSet ") );
         return( dstrFldLabel_1088_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1088_8( I_("AccDetailsPendingHeadingSet ") );
         return( dstrFldLabel_1088_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1088_7( I_("AccDetailsPendingHeadingSet ") );
         return( dstrFldLabel_1088_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1088_1( I_("AccDetailsPendingHeadingSet ") );
         return( dstrFldLabel_1088_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1088_3( I_("AccDetailsPendingHeadingSet ") );
         return( dstrFldLabel_1088_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1088_6( I_("AccDetailsPendingHeadingSet ") );
         return( dstrFldLabel_1088_6 );
      }
      static const DString dstrFldLabel_1088_1( I_("AccDetailsPendingHeadingSet ") );
      return( dstrFldLabel_1088_1 );
   }
   PBF_SSC subset_super_chooser_2_1088( const ClientLocale& locale )
   {
      return chooser_ss_002_086; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccDetailsPendingHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,AccDetailsPendingHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AccDetailsPendingHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccDetailsPendingHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1088 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccDetailsEntitiesIdsListHeading (1089)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccDetailsEntitiesIdsListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1089_4( I_("0") );
         return( dstrDefValue_1089_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1089_8( I_("") );
         return( dstrDefValue_1089_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1089_7( I_("") );
         return( dstrDefValue_1089_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1089_5( I_("") );
         return( dstrDefValue_1089_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1089_3( I_("") );
         return( dstrDefValue_1089_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1089_1( I_("") );
         return( dstrDefValue_1089_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1089_6( I_("0") );
         return( dstrDefValue_1089_6 );
      }
      static const DString dstrDefValue_1089_1( I_("") );
      return( dstrDefValue_1089_1 );
   }
   const DString& s_FldProp_AccDetailsEntitiesIdsListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1089_4( I_("AccDetailsEntitiesIdsListHeading ") );
         return( dstrFldLabel_1089_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1089_8( I_("AccDetailsEntitiesIdsListHeading ") );
         return( dstrFldLabel_1089_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1089_7( I_("AccDetailsEntitiesIdsListHeading ") );
         return( dstrFldLabel_1089_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1089_5( I_("AccDetailsEntitiesIdsListHeading ") );
         return( dstrFldLabel_1089_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1089_3( I_("AccDetailsEntitiesIdsListHeading ") );
         return( dstrFldLabel_1089_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1089_1( I_("AccDetailsEntitiesIdsListHeading ") );
         return( dstrFldLabel_1089_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1089_6( I_("AccDetailsEntitiesIdsListHeading ") );
         return( dstrFldLabel_1089_6 );
      }
      static const DString dstrFldLabel_1089_1( I_("AccDetailsEntitiesIdsListHeading ") );
      return( dstrFldLabel_1089_1 );
   }
   PBF_SSC subset_super_chooser_2_1089( const ClientLocale& locale )
   {
      return chooser_ss_002_087; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccDetailsEntitiesIdsListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,AccDetailsEntitiesIdsListHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AccDetailsEntitiesIdsListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccDetailsEntitiesIdsListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1089 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Name (1090)
   //------------------------------------------------------------------
   const DString& s_FldProp_Name_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1090_4( I_("0") );
         return( dstrDefValue_1090_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1090_5( I_("") );
         return( dstrDefValue_1090_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1090_8( I_("0") );
         return( dstrDefValue_1090_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1090_7( I_("0") );
         return( dstrDefValue_1090_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1090_1( I_("") );
         return( dstrDefValue_1090_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1090_3( I_("0") );
         return( dstrDefValue_1090_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1090_6( I_("0") );
         return( dstrDefValue_1090_6 );
      }
      static const DString dstrDefValue_1090_1( I_("") );
      return( dstrDefValue_1090_1 );
   }
   const DString& s_FldProp_Name_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1090_4( I_("Name ") );
         return( dstrFldLabel_1090_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1090_5( I_("Name ") );
         return( dstrFldLabel_1090_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1090_8( I_("Name ") );
         return( dstrFldLabel_1090_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1090_7( I_("Name ") );
         return( dstrFldLabel_1090_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1090_1( I_("Name ") );
         return( dstrFldLabel_1090_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1090_3( I_("Name ") );
         return( dstrFldLabel_1090_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1090_6( I_("Name ") );
         return( dstrFldLabel_1090_6 );
      }
      static const DString dstrFldLabel_1090_1( I_("Name ") );
      return( dstrFldLabel_1090_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Name(
       BFDataFieldProperties::Type::text // field is a text field
      ,Name // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Name_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Name_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HistoricalAccountHeadingSet (1094)
   //------------------------------------------------------------------
   const DString& s_FldProp_HistoricalAccountHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1094_5( I_("") );
         return( dstrDefValue_1094_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1094_7( I_("") );
         return( dstrDefValue_1094_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1094_8( I_("") );
         return( dstrDefValue_1094_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1094_6( I_("0") );
         return( dstrDefValue_1094_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1094_4( I_("0") );
         return( dstrDefValue_1094_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1094_3( I_("") );
         return( dstrDefValue_1094_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1094_1( I_("") );
         return( dstrDefValue_1094_1 );
      }
      static const DString dstrDefValue_1094_1( I_("") );
      return( dstrDefValue_1094_1 );
   }
   const DString& s_FldProp_HistoricalAccountHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1094_5( I_("HistoricalAccountHeadingSet ") );
         return( dstrFldLabel_1094_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1094_7( I_("HistoricalAccountHeadingSet ") );
         return( dstrFldLabel_1094_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1094_8( I_("HistoricalAccountHeadingSet ") );
         return( dstrFldLabel_1094_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1094_6( I_("HistoricalAccountHeadingSet ") );
         return( dstrFldLabel_1094_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1094_4( I_("HistoricalAccountHeadingSet ") );
         return( dstrFldLabel_1094_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1094_3( I_("HistoricalAccountHeadingSet ") );
         return( dstrFldLabel_1094_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1094_1( I_("HistoricalAccountHeadingSet ") );
         return( dstrFldLabel_1094_1 );
      }
      static const DString dstrFldLabel_1094_1( I_("HistoricalAccountHeadingSet ") );
      return( dstrFldLabel_1094_1 );
   }
   PBF_SSC subset_super_chooser_2_1094( const ClientLocale& locale )
   {
      return chooser_ss_002_088; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HistoricalAccountHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,HistoricalAccountHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HistoricalAccountHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HistoricalAccountHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1094 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RemarksHeadingSet (1095)
   //------------------------------------------------------------------
   const DString& s_FldProp_RemarksHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1095_5( I_("") );
         return( dstrDefValue_1095_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1095_8( I_("") );
         return( dstrDefValue_1095_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1095_7( I_("") );
         return( dstrDefValue_1095_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1095_6( I_("0") );
         return( dstrDefValue_1095_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1095_3( I_("") );
         return( dstrDefValue_1095_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1095_1( I_("") );
         return( dstrDefValue_1095_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1095_4( I_("0") );
         return( dstrDefValue_1095_4 );
      }
      static const DString dstrDefValue_1095_1( I_("") );
      return( dstrDefValue_1095_1 );
   }
   const DString& s_FldProp_RemarksHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1095_5( I_("RemarksHeadingSet ") );
         return( dstrFldLabel_1095_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1095_8( I_("RemarksHeadingSet ") );
         return( dstrFldLabel_1095_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1095_7( I_("RemarksHeadingSet ") );
         return( dstrFldLabel_1095_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1095_6( I_("RemarksHeadingSet ") );
         return( dstrFldLabel_1095_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1095_3( I_("RemarksHeadingSet ") );
         return( dstrFldLabel_1095_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1095_1( I_("RemarksHeadingSet ") );
         return( dstrFldLabel_1095_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1095_4( I_("RemarksHeadingSet ") );
         return( dstrFldLabel_1095_4 );
      }
      static const DString dstrFldLabel_1095_1( I_("RemarksHeadingSet ") );
      return( dstrFldLabel_1095_1 );
   }
   PBF_SSC subset_super_chooser_2_1095( const ClientLocale& locale )
   {
      return chooser_ss_002_089; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RemarksHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,RemarksHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RemarksHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RemarksHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1095 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FieldLabel (1096)
   //------------------------------------------------------------------
   const DString& s_FldProp_FieldLabel_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1096_4( I_("0") );
         return( dstrDefValue_1096_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1096_7( I_("") );
         return( dstrDefValue_1096_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1096_5( I_("") );
         return( dstrDefValue_1096_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1096_8( I_("") );
         return( dstrDefValue_1096_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1096_3( I_("") );
         return( dstrDefValue_1096_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1096_1( I_("") );
         return( dstrDefValue_1096_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1096_6( I_("0") );
         return( dstrDefValue_1096_6 );
      }
      static const DString dstrDefValue_1096_1( I_("") );
      return( dstrDefValue_1096_1 );
   }
   const DString& s_FldProp_FieldLabel_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1096_4( I_("FieldLabel  ") );
         return( dstrFldLabel_1096_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1096_7( I_("FieldLabel  ") );
         return( dstrFldLabel_1096_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1096_5( I_("FieldLabel  ") );
         return( dstrFldLabel_1096_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1096_8( I_("FieldLabel  ") );
         return( dstrFldLabel_1096_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1096_3( I_("FieldLabel  ") );
         return( dstrFldLabel_1096_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1096_1( I_("FieldLabel  ") );
         return( dstrFldLabel_1096_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1096_6( I_("FieldLabel  ") );
         return( dstrFldLabel_1096_6 );
      }
      static const DString dstrFldLabel_1096_1( I_("FieldLabel  ") );
      return( dstrFldLabel_1096_1 );
   }
   PBF_SSC subset_super_chooser_2_1096( const ClientLocale& locale )
   {
      return chooser_ss_002_094; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FieldLabel(
       BFDataFieldProperties::Type::text // field is a text field
      ,FieldLabel // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FieldLabel_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FieldLabel_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1096 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PreviousDisp (1097)
   //------------------------------------------------------------------
   const DString& s_FldProp_PreviousDisp_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1097_5( I_("") );
         return( dstrDefValue_1097_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1097_8( I_("") );
         return( dstrDefValue_1097_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1097_7( I_("") );
         return( dstrDefValue_1097_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1097_6( I_("") );
         return( dstrDefValue_1097_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1097_4( I_("0") );
         return( dstrDefValue_1097_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1097_3( I_("") );
         return( dstrDefValue_1097_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1097_1( I_("") );
         return( dstrDefValue_1097_1 );
      }
      static const DString dstrDefValue_1097_1( I_("") );
      return( dstrDefValue_1097_1 );
   }
   const DString& s_FldProp_PreviousDisp_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1097_5( I_("PreviousDisp ") );
         return( dstrFldLabel_1097_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1097_8( I_("PreviousDisp ") );
         return( dstrFldLabel_1097_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1097_7( I_("PreviousDisp ") );
         return( dstrFldLabel_1097_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1097_6( I_("PreviousDisp ") );
         return( dstrFldLabel_1097_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1097_4( I_("PreviousDisp ") );
         return( dstrFldLabel_1097_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1097_3( I_("PreviousDisp ") );
         return( dstrFldLabel_1097_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1097_1( I_("PreviousDisp ") );
         return( dstrFldLabel_1097_1 );
      }
      static const DString dstrFldLabel_1097_1( I_("PreviousDisp ") );
      return( dstrFldLabel_1097_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PreviousDisp(
       BFDataFieldProperties::Type::text // field is a text field
      ,PreviousDisp // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PreviousDisp_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PreviousDisp_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankInstructionHeading (1101)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankInstructionHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1101_5( I_("") );
         return( dstrDefValue_1101_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1101_8( I_("") );
         return( dstrDefValue_1101_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1101_7( I_("") );
         return( dstrDefValue_1101_7 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1101_4( I_("0") );
         return( dstrDefValue_1101_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1101_3( I_("") );
         return( dstrDefValue_1101_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1101_1( I_("") );
         return( dstrDefValue_1101_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1101_6( I_("0") );
         return( dstrDefValue_1101_6 );
      }
      static const DString dstrDefValue_1101_1( I_("") );
      return( dstrDefValue_1101_1 );
   }
   const DString& s_FldProp_BankInstructionHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1101_5( I_("BankInstructionHeading") );
         return( dstrFldLabel_1101_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1101_8( I_("BankInstructionHeading") );
         return( dstrFldLabel_1101_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1101_7( I_("BankInstructionHeading") );
         return( dstrFldLabel_1101_7 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1101_4( I_("BankInstructionHeading") );
         return( dstrFldLabel_1101_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1101_3( I_("BankInstructionHeading") );
         return( dstrFldLabel_1101_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1101_1( I_("BankInstructionHeading") );
         return( dstrFldLabel_1101_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1101_6( I_("BankInstructionHeading") );
         return( dstrFldLabel_1101_6 );
      }
      static const DString dstrFldLabel_1101_1( I_("BankInstructionHeading") );
      return( dstrFldLabel_1101_1 );
   }
   PBF_SSC subset_super_chooser_2_1101( const ClientLocale& locale )
   {
      return chooser_ss_002_090; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankInstructionHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankInstructionHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankInstructionHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankInstructionHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1101 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeChrLevel (1102)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeChrLevel_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1102_4( I_("0") );
      return( dstrDefValue_1102_4 );
   }
   const DString& s_FldProp_FeeChrLevel_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1102_4( I_("FeeChrLevel ") );
      return( dstrFldLabel_1102_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeChrLevel(
       BFDataFieldProperties::Type::text // field is a text field
      ,FeeChrLevel // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeChrLevel_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FeeChrLevel_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityTypeSeq (1103)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityTypeSeq_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1103_4( I_("0") );
      return( dstrDefValue_1103_4 );
   }
   double s_FldProp_EntityTypeSeq_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_EntityTypeSeq_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1103_4( I_("EntityTypeSeq ") );
      return( dstrFldLabel_1103_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityTypeSeq(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EntityTypeSeq // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_EntityTypeSeq_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EntityTypeSeq_d_DVF // default value
      ,s_FldProp_EntityTypeSeq_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_kAddrLine1 (1105)
   //------------------------------------------------------------------
   const DString& s_FldProp_kAddrLine1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1105_5( I_(" ") );
      return( dstrDefValue_1105_5 );
   }
   const DString& s_FldProp_kAddrLine1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1105_5( I_("kAddrLine1") );
      return( dstrFldLabel_1105_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_kAddrLine1(
       BFDataFieldProperties::Type::text // field is a text field
      ,kAddrLine1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_kAddrLine1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_kAddrLine1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_kAddrLine2 (1106)
   //------------------------------------------------------------------
   const DString& s_FldProp_kAddrLine2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1106_4( I_(" ") );
      return( dstrDefValue_1106_4 );
   }
   const DString& s_FldProp_kAddrLine2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1106_4( I_("kAddrLine2") );
      return( dstrFldLabel_1106_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_kAddrLine2(
       BFDataFieldProperties::Type::text // field is a text field
      ,kAddrLine2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_kAddrLine2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_kAddrLine2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_kAddrLine3 (1107)
   //------------------------------------------------------------------
   const DString& s_FldProp_kAddrLine3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1107_5( I_(" ") );
      return( dstrDefValue_1107_5 );
   }
   const DString& s_FldProp_kAddrLine3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1107_5( I_("kAddrLine3") );
      return( dstrFldLabel_1107_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_kAddrLine3(
       BFDataFieldProperties::Type::text // field is a text field
      ,kAddrLine3 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_kAddrLine3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_kAddrLine3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_kAddrLine4 (1108)
   //------------------------------------------------------------------
   const DString& s_FldProp_kAddrLine4_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1108_8( I_(" ") );
      return( dstrDefValue_1108_8 );
   }
   const DString& s_FldProp_kAddrLine4_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1108_8( I_("kAddrLine4") );
      return( dstrFldLabel_1108_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_kAddrLine4(
       BFDataFieldProperties::Type::text // field is a text field
      ,kAddrLine4 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_kAddrLine4_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_kAddrLine4_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_kAddrLine5 (1109)
   //------------------------------------------------------------------
   const DString& s_FldProp_kAddrLine5_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1109_4( I_(" ") );
      return( dstrDefValue_1109_4 );
   }
   const DString& s_FldProp_kAddrLine5_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1109_4( I_("kAddrLine5") );
      return( dstrFldLabel_1109_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_kAddrLine5(
       BFDataFieldProperties::Type::text // field is a text field
      ,kAddrLine5 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_kAddrLine5_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_kAddrLine5_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankInstrCombo1 (1112)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankInstrCombo1_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1112_4( I_("0") );
         return( dstrDefValue_1112_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1112_7( I_("") );
         return( dstrDefValue_1112_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1112_5( I_("") );
         return( dstrDefValue_1112_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1112_8( I_("") );
         return( dstrDefValue_1112_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1112_3( I_("") );
         return( dstrDefValue_1112_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1112_1( I_("") );
         return( dstrDefValue_1112_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1112_6( I_("0") );
         return( dstrDefValue_1112_6 );
      }
      static const DString dstrDefValue_1112_1( I_("") );
      return( dstrDefValue_1112_1 );
   }
   const DString& s_FldProp_BankInstrCombo1_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1112_4( I_("BankInstrCombo1 ") );
         return( dstrFldLabel_1112_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1112_7( I_("BankInstrCombo1 ") );
         return( dstrFldLabel_1112_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1112_5( I_("BankInstrCombo1 ") );
         return( dstrFldLabel_1112_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1112_8( I_("BankInstrCombo1 ") );
         return( dstrFldLabel_1112_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1112_3( I_("BankInstrCombo1 ") );
         return( dstrFldLabel_1112_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1112_1( I_("BankInstrCombo1 ") );
         return( dstrFldLabel_1112_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1112_6( I_("BankInstrCombo1 ") );
         return( dstrFldLabel_1112_6 );
      }
      static const DString dstrFldLabel_1112_1( I_("BankInstrCombo1 ") );
      return( dstrFldLabel_1112_1 );
   }
   PBF_SSC subset_super_chooser_2_1112( const ClientLocale& locale )
   {
      return chooser_ss_002_092; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankInstrCombo1(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankInstrCombo1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankInstrCombo1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankInstrCombo1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1112 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankInstrCombo2 (1113)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankInstrCombo2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1113_5( I_("") );
         return( dstrDefValue_1113_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1113_7( I_("") );
         return( dstrDefValue_1113_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1113_8( I_("") );
         return( dstrDefValue_1113_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1113_6( I_("0") );
         return( dstrDefValue_1113_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1113_4( I_("0") );
         return( dstrDefValue_1113_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1113_3( I_("") );
         return( dstrDefValue_1113_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1113_1( I_("") );
         return( dstrDefValue_1113_1 );
      }
      static const DString dstrDefValue_1113_1( I_("") );
      return( dstrDefValue_1113_1 );
   }
   const DString& s_FldProp_BankInstrCombo2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1113_5( I_("BankInstrCombo2 ") );
         return( dstrFldLabel_1113_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1113_7( I_("BankInstrCombo2 ") );
         return( dstrFldLabel_1113_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1113_8( I_("BankInstrCombo2 ") );
         return( dstrFldLabel_1113_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1113_6( I_("BankInstrCombo2 ") );
         return( dstrFldLabel_1113_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1113_4( I_("BankInstrCombo2 ") );
         return( dstrFldLabel_1113_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1113_3( I_("BankInstrCombo2 ") );
         return( dstrFldLabel_1113_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1113_1( I_("BankInstrCombo2 ") );
         return( dstrFldLabel_1113_1 );
      }
      static const DString dstrFldLabel_1113_1( I_("BankInstrCombo2 ") );
      return( dstrFldLabel_1113_1 );
   }
   PBF_SSC subset_super_chooser_2_1113( const ClientLocale& locale )
   {
      return chooser_ss_002_093; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankInstrCombo2(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankInstrCombo2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankInstrCombo2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankInstrCombo2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1113 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IntAccrEffectiveDate (1114)
   //------------------------------------------------------------------
   const DString& s_FldProp_IntAccrEffectiveDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1114_3( I_("0") );
      return( dstrDefValue_1114_3 );
   }
   double s_FldProp_IntAccrEffectiveDate_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_IntAccrEffectiveDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1114_3( I_("IntAccrEffectiveDate  ") );
      return( dstrFldLabel_1114_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IntAccrEffectiveDate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,IntAccrEffectiveDate // fieldId
      ,4 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_IntAccrEffectiveDate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_IntAccrEffectiveDate_d_DVF // default value
      ,s_FldProp_IntAccrEffectiveDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IntAccrLastDivDate (1115)
   //------------------------------------------------------------------
   const DString& s_FldProp_IntAccrLastDivDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1115_4( I_("0") );
      return( dstrDefValue_1115_4 );
   }
   double s_FldProp_IntAccrLastDivDate_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_IntAccrLastDivDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1115_4( I_("IntAccrLastDivDate  ") );
      return( dstrFldLabel_1115_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IntAccrLastDivDate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,IntAccrLastDivDate // fieldId
      ,4 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_IntAccrLastDivDate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_IntAccrLastDivDate_d_DVF // default value
      ,s_FldProp_IntAccrLastDivDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocTaxType (1116)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocTaxType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1116_4( I_("0") );
      return( dstrDefValue_1116_4 );
   }
   const DString& s_FldProp_AllocTaxType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1116_4( I_("AllocTaxType") );
      return( dstrFldLabel_1116_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocTaxType(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllocTaxType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllocTaxType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllocTaxType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Employee (1117)
   //------------------------------------------------------------------
   const DString& s_FldProp_Employee_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1117_4( I_("0") );
         return( dstrDefValue_1117_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1117_7( I_("") );
         return( dstrDefValue_1117_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1117_5( I_("") );
         return( dstrDefValue_1117_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1117_8( I_("") );
         return( dstrDefValue_1117_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1117_3( I_("") );
         return( dstrDefValue_1117_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1117_1( I_("") );
         return( dstrDefValue_1117_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1117_6( I_("") );
         return( dstrDefValue_1117_6 );
      }
      static const DString dstrDefValue_1117_1( I_("") );
      return( dstrDefValue_1117_1 );
   }
   const DString& s_FldProp_Employee_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1117_4( I_("Employee ") );
         return( dstrFldLabel_1117_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1117_7( I_("Employee ") );
         return( dstrFldLabel_1117_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1117_5( I_("Employee ") );
         return( dstrFldLabel_1117_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1117_8( I_("Employee ") );
         return( dstrFldLabel_1117_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1117_3( I_("Employee ") );
         return( dstrFldLabel_1117_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1117_1( I_("Employee ") );
         return( dstrFldLabel_1117_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1117_6( I_("Employee ") );
         return( dstrFldLabel_1117_6 );
      }
      static const DString dstrFldLabel_1117_1( I_("Employee ") );
      return( dstrFldLabel_1117_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Employee(
       BFDataFieldProperties::Type::text // field is a text field
      ,Employee // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Employee_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Employee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddAcctFlag (1118)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddAcctFlag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1118_5( I_("N") );
      return( dstrDefValue_1118_5 );
   }
   const DString& s_FldProp_AddAcctFlag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1118_5( I_("AddAcctFlag") );
      return( dstrFldLabel_1118_5 );
   }
   PBF_SSC subset_super_chooser_2_1118( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddAcctFlag(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddAcctFlag // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddAcctFlag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddAcctFlag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1118 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SysCurrency (1122)
   //------------------------------------------------------------------
   const DString& s_FldProp_SysCurrency_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1122_4( I_("0") );
      return( dstrDefValue_1122_4 );
   }
   const DString& s_FldProp_SysCurrency_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1122_4( I_("SysCurrency  ") );
      return( dstrFldLabel_1122_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SysCurrency(
       BFDataFieldProperties::Type::text // field is a text field
      ,SysCurrency // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SysCurrency_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SysCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShrNumCtrl (1123)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShrNumCtrl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1123_5( I_("0") );
      return( dstrDefValue_1123_5 );
   }
   const DString& s_FldProp_ShrNumCtrl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1123_5( I_("ShrNumCtrl ") );
      return( dstrFldLabel_1123_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShrNumCtrl(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShrNumCtrl // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShrNumCtrl_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShrNumCtrl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShrNumVal (1124)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShrNumVal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1124_4( I_("0") );
      return( dstrDefValue_1124_4 );
   }
   const DString& s_FldProp_ShrNumVal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1124_4( I_("ShrNumVal  ") );
      return( dstrFldLabel_1124_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShrNumVal(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShrNumVal // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShrNumVal_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShrNumVal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctNumCtrl (1125)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctNumCtrl_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1125_4( I_("0") );
      return( dstrDefValue_1125_4 );
   }
   const DString& s_FldProp_AcctNumCtrl_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1125_4( I_("AcctNumCtrl ") );
      return( dstrFldLabel_1125_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctNumCtrl(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctNumCtrl // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctNumCtrl_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctNumCtrl_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctNumVal (1126)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctNumVal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1126_5( I_("0") );
      return( dstrDefValue_1126_5 );
   }
   const DString& s_FldProp_AcctNumVal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1126_5( I_("AcctNumCtrl  ") );
      return( dstrFldLabel_1126_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctNumVal(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctNumVal // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctNumVal_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctNumVal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DefaultGrp (1127)
   //------------------------------------------------------------------
   const DString& s_FldProp_DefaultGrp_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1127_5( I_("0") );
      return( dstrDefValue_1127_5 );
   }
   const DString& s_FldProp_DefaultGrp_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1127_5( I_("DefaultGrp ") );
      return( dstrFldLabel_1127_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DefaultGrp(
       BFDataFieldProperties::Type::text // field is a text field
      ,DefaultGrp // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DefaultGrp_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DefaultGrp_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GrpCodeLevel (1128)
   //------------------------------------------------------------------
   const DString& s_FldProp_GrpCodeLevel_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1128_4( I_("0") );
      return( dstrDefValue_1128_4 );
   }
   const DString& s_FldProp_GrpCodeLevel_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1128_4( I_("GrpCodeLevel ") );
      return( dstrFldLabel_1128_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GrpCodeLevel(
       BFDataFieldProperties::Type::text // field is a text field
      ,GrpCodeLevel // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GrpCodeLevel_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GrpCodeLevel_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxTypeUpd (1129)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxTypeUpd_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1129_4( I_("0") );
      return( dstrDefValue_1129_4 );
   }
   const DString& s_FldProp_TaxTypeUpd_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1129_4( I_("TaxTypeUpd  ") );
      return( dstrFldLabel_1129_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxTypeUpd(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxTypeUpd // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxTypeUpd_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxTypeUpd_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MktMailDef (1130)
   //------------------------------------------------------------------
   const DString& s_FldProp_MktMailDef_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1130_4( I_("0") );
      return( dstrDefValue_1130_4 );
   }
   const DString& s_FldProp_MktMailDef_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1130_4( I_("MktMailDef  ") );
      return( dstrFldLabel_1130_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MktMailDef(
       BFDataFieldProperties::Type::text // field is a text field
      ,MktMailDef // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MktMailDef_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MktMailDef_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RepByBranch (1131)
   //------------------------------------------------------------------
   const DString& s_FldProp_RepByBranch_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1131_5( I_("0") );
      return( dstrDefValue_1131_5 );
   }
   const DString& s_FldProp_RepByBranch_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1131_5( I_("RepByBranch  ") );
      return( dstrFldLabel_1131_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RepByBranch(
       BFDataFieldProperties::Type::text // field is a text field
      ,RepByBranch // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RepByBranch_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RepByBranch_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BrokerBranch (1132)
   //------------------------------------------------------------------
   const DString& s_FldProp_BrokerBranch_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1132_4( I_("0") );
      return( dstrDefValue_1132_4 );
   }
   const DString& s_FldProp_BrokerBranch_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1132_4( I_("BrokerBranch  ") );
      return( dstrFldLabel_1132_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BrokerBranch(
       BFDataFieldProperties::Type::text // field is a text field
      ,BrokerBranch // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BrokerBranch_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BrokerBranch_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CapAddress (1133)
   //------------------------------------------------------------------
   const DString& s_FldProp_CapAddress_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1133_5( I_("0") );
      return( dstrDefValue_1133_5 );
   }
   const DString& s_FldProp_CapAddress_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1133_5( I_("CapAddress  ") );
      return( dstrFldLabel_1133_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CapAddress(
       BFDataFieldProperties::Type::text // field is a text field
      ,CapAddress // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CapAddress_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CapAddress_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CountryVal (1134)
   //------------------------------------------------------------------
   const DString& s_FldProp_CountryVal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1134_8( I_("0") );
      return( dstrDefValue_1134_8 );
   }
   const DString& s_FldProp_CountryVal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1134_8( I_("CountryVal  ") );
      return( dstrFldLabel_1134_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CountryVal(
       BFDataFieldProperties::Type::text // field is a text field
      ,CountryVal // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CountryVal_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CountryVal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MandatoryId (1135)
   //------------------------------------------------------------------
   const DString& s_FldProp_MandatoryId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1135_4( I_("0") );
      return( dstrDefValue_1135_4 );
   }
   const DString& s_FldProp_MandatoryId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1135_4( I_("MandatoryId ") );
      return( dstrFldLabel_1135_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MandatoryId(
       BFDataFieldProperties::Type::text // field is a text field
      ,MandatoryId // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MandatoryId_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MandatoryId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BirthNameMand (1136)
   //------------------------------------------------------------------
   const DString& s_FldProp_BirthNameMand_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1136_5( I_("0") );
      return( dstrDefValue_1136_5 );
   }
   const DString& s_FldProp_BirthNameMand_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1136_5( I_("BirthNameMand  ") );
      return( dstrFldLabel_1136_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BirthNameMand(
       BFDataFieldProperties::Type::text // field is a text field
      ,BirthNameMand // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BirthNameMand_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BirthNameMand_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ValidSIN (1137)
   //------------------------------------------------------------------
   const DString& s_FldProp_ValidSIN_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1137_4( I_("0") );
         return( dstrDefValue_1137_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1137_7( I_("") );
         return( dstrDefValue_1137_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1137_8( I_("") );
         return( dstrDefValue_1137_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1137_5( I_("") );
         return( dstrDefValue_1137_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1137_1( I_("") );
         return( dstrDefValue_1137_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1137_6( I_("0") );
         return( dstrDefValue_1137_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1137_3( I_("") );
         return( dstrDefValue_1137_3 );
      }
      static const DString dstrDefValue_1137_1( I_("") );
      return( dstrDefValue_1137_1 );
   }
   const DString& s_FldProp_ValidSIN_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1137_4( I_("ValidSIN") );
         return( dstrFldLabel_1137_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1137_7( I_("ValidSIN") );
         return( dstrFldLabel_1137_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1137_8( I_("ValidSIN") );
         return( dstrFldLabel_1137_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1137_5( I_("ValidSIN") );
         return( dstrFldLabel_1137_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1137_1( I_("ValidSIN") );
         return( dstrFldLabel_1137_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1137_6( I_("ValidSIN") );
         return( dstrFldLabel_1137_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1137_3( I_("ValidSIN") );
         return( dstrFldLabel_1137_3 );
      }
      static const DString dstrFldLabel_1137_1( I_("ValidSIN") );
      return( dstrFldLabel_1137_1 );
   }
   PBF_SSC subset_super_chooser_2_1137( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ValidSIN(
       BFDataFieldProperties::Type::text // field is a text field
      ,ValidSIN // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ValidSIN_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ValidSIN_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1137 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShadowNominee (1138)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShadowNominee_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1138_4( I_("0") );
      return( dstrDefValue_1138_4 );
   }
   const DString& s_FldProp_ShadowNominee_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1138_4( I_("ShadowNominee  ") );
      return( dstrFldLabel_1138_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShadowNominee(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShadowNominee // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShadowNominee_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShadowNominee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankValid1 (1139)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankValid1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1139_5( I_("  ") );
      return( dstrDefValue_1139_5 );
   }
   double s_FldProp_BankValid1_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_BankValid1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1139_5( I_("BankValid1   ") );
      return( dstrFldLabel_1139_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankValid1(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BankValid1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_BankValid1_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BankValid1_d_DVF // default value
      ,s_FldProp_BankValid1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankValid2 (1140)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankValid2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1140_3( I_("0") );
      return( dstrDefValue_1140_3 );
   }
   const DString& s_FldProp_BankValid2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1140_3( I_("BankValid2  ") );
      return( dstrFldLabel_1140_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankValid2(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankValid2 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankValid2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankValid2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankLayout (1141)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankLayout_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1141_4( I_("  ") );
      return( dstrDefValue_1141_4 );
   }
   double s_FldProp_BankLayout_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_BankLayout_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1141_4( I_("BankLayout  ") );
      return( dstrFldLabel_1141_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankLayout(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BankLayout // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_BankLayout_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BankLayout_d_DVF // default value
      ,s_FldProp_BankLayout_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SYMBrkUpd (1142)
   //------------------------------------------------------------------
   const DString& s_FldProp_SYMBrkUpd_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1142_4( I_("0") );
      return( dstrDefValue_1142_4 );
   }
   const DString& s_FldProp_SYMBrkUpd_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1142_4( I_("SYMBrkUpd  ") );
      return( dstrFldLabel_1142_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SYMBrkUpd(
       BFDataFieldProperties::Type::text // field is a text field
      ,SYMBrkUpd // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SYMBrkUpd_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SYMBrkUpd_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BrokerFund (1143)
   //------------------------------------------------------------------
   const DString& s_FldProp_BrokerFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1143_4( I_("0") );
      return( dstrDefValue_1143_4 );
   }
   const DString& s_FldProp_BrokerFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1143_4( I_("BrokerFund  ") );
      return( dstrFldLabel_1143_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BrokerFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,BrokerFund // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BrokerFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BrokerFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PACMinAmt (1144)
   //------------------------------------------------------------------
   const DString& s_FldProp_PACMinAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1144_5( I_("0") );
      return( dstrDefValue_1144_5 );
   }
   double s_FldProp_PACMinAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_PACMinAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1144_5( I_("PACMinAmt ") );
      return( dstrFldLabel_1144_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PACMinAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PACMinAmt // fieldId
      ,60 // length
      ,0 // minimum length
      ,10 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PACMinAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PACMinAmt_d_DVF // default value
      ,s_FldProp_PACMinAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PACAmtEdit (1145)
   //------------------------------------------------------------------
   const DString& s_FldProp_PACAmtEdit_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1145_4( I_("  ") );
      return( dstrDefValue_1145_4 );
   }
   double s_FldProp_PACAmtEdit_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_PACAmtEdit_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1145_4( I_("PACAmtEdit  ") );
      return( dstrFldLabel_1145_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PACAmtEdit(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PACAmtEdit // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_PACAmtEdit_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PACAmtEdit_d_DVF // default value
      ,s_FldProp_PACAmtEdit_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GICAllocOnly (1146)
   //------------------------------------------------------------------
   const DString& s_FldProp_GICAllocOnly_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1146_5( I_("0") );
      return( dstrDefValue_1146_5 );
   }
   const DString& s_FldProp_GICAllocOnly_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1146_5( I_("GICAllocOnly  ") );
      return( dstrFldLabel_1146_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GICAllocOnly(
       BFDataFieldProperties::Type::text // field is a text field
      ,GICAllocOnly // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GICAllocOnly_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GICAllocOnly_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DisableFee4Alloc (1147)
   //------------------------------------------------------------------
   const DString& s_FldProp_DisableFee4Alloc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1147_8( I_("0") );
      return( dstrDefValue_1147_8 );
   }
   const DString& s_FldProp_DisableFee4Alloc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1147_8( I_("DisableFee4Alloc  ") );
      return( dstrFldLabel_1147_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DisableFee4Alloc(
       BFDataFieldProperties::Type::text // field is a text field
      ,DisableFee4Alloc // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DisableFee4Alloc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DisableFee4Alloc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BusRounding (1148)
   //------------------------------------------------------------------
   const DString& s_FldProp_BusRounding_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1148_4( I_("0") );
      return( dstrDefValue_1148_4 );
   }
   const DString& s_FldProp_BusRounding_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1148_4( I_("BusRounding  ") );
      return( dstrFldLabel_1148_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BusRounding(
       BFDataFieldProperties::Type::text // field is a text field
      ,BusRounding // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BusRounding_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BusRounding_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MultiCurrency (1149)
   //------------------------------------------------------------------
   const DString& s_FldProp_MultiCurrency_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1149_5( I_("0") );
      return( dstrDefValue_1149_5 );
   }
   const DString& s_FldProp_MultiCurrency_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1149_5( I_("MultiCurrency ") );
      return( dstrFldLabel_1149_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MultiCurrency(
       BFDataFieldProperties::Type::text // field is a text field
      ,MultiCurrency // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MultiCurrency_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MultiCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SplitComm (1150)
   //------------------------------------------------------------------
   const DString& s_FldProp_SplitComm_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1150_4( I_("0") );
         return( dstrDefValue_1150_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1150_7( I_("N") );
         return( dstrDefValue_1150_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1150_8( I_("N") );
         return( dstrDefValue_1150_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1150_5( I_("N") );
         return( dstrDefValue_1150_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1150_1( I_("N") );
         return( dstrDefValue_1150_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1150_6( I_("N") );
         return( dstrDefValue_1150_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1150_3( I_("N") );
         return( dstrDefValue_1150_3 );
      }
      static const DString dstrDefValue_1150_1( I_("N") );
      return( dstrDefValue_1150_1 );
   }
   const DString& s_FldProp_SplitComm_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1150_4( I_("SplitComm ") );
         return( dstrFldLabel_1150_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1150_7( I_("SplitComm ") );
         return( dstrFldLabel_1150_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1150_8( I_("SplitComm ") );
         return( dstrFldLabel_1150_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1150_5( I_("SplitComm ") );
         return( dstrFldLabel_1150_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1150_1( I_("SplitComm ") );
         return( dstrFldLabel_1150_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1150_6( I_("SplitComm ") );
         return( dstrFldLabel_1150_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1150_3( I_("SplitComm ") );
         return( dstrFldLabel_1150_3 );
      }
      static const DString dstrFldLabel_1150_1( I_("SplitComm ") );
      return( dstrFldLabel_1150_1 );
   }
   PBF_SSC subset_super_chooser_2_1150( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SplitComm(
       BFDataFieldProperties::Type::text // field is a text field
      ,SplitComm // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SplitComm_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SplitComm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1150 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctFeeParm (1151)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctFeeParm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1151_4( I_("0") );
      return( dstrDefValue_1151_4 );
   }
   const DString& s_FldProp_AcctFeeParm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1151_4( I_("AcctFeeParm ") );
      return( dstrFldLabel_1151_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctFeeParm(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctFeeParm // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctFeeParm_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctFeeParm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CappedFund (1152)
   //------------------------------------------------------------------
   const DString& s_FldProp_CappedFund_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1152_5( I_("0") );
      return( dstrDefValue_1152_5 );
   }
   const DString& s_FldProp_CappedFund_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1152_5( I_("CappedFund ") );
      return( dstrFldLabel_1152_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CappedFund(
       BFDataFieldProperties::Type::text // field is a text field
      ,CappedFund // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CappedFund_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CappedFund_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankingFormat (1153)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankingFormat_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1153_3( I_("0") );
      return( dstrDefValue_1153_3 );
   }
   const DString& s_FldProp_BankingFormat_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1153_3( I_("BankingFormat ") );
      return( dstrFldLabel_1153_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankingFormat(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankingFormat // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankingFormat_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankingFormat_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransitNoMax (1154)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransitNoMax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1154_4( I_("  ") );
      return( dstrDefValue_1154_4 );
   }
   DIINT64 s_FldProp_TransitNoMax_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_TransitNoMax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1154_4( I_("TransitNoMax ") );
      return( dstrFldLabel_1154_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransitNoMax(
       BFDataFieldProperties::Type::integer // field is an integer field
      ,TransitNoMax // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransitNoMax_s_DVF // default value
      ,s_FldProp_TransitNoMax_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_TransitNoMax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankAcctNumMax (1155)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankAcctNumMax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1155_5( I_("  ") );
      return( dstrDefValue_1155_5 );
   }
   double s_FldProp_BankAcctNumMax_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_BankAcctNumMax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1155_5( I_("BankAcctNumMax  ") );
      return( dstrFldLabel_1155_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankAcctNumMax(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BankAcctNumMax // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_BankAcctNumMax_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BankAcctNumMax_d_DVF // default value
      ,s_FldProp_BankAcctNumMax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InstCodeMax (1156)
   //------------------------------------------------------------------
   const DString& s_FldProp_InstCodeMax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1156_5( I_("0") );
      return( dstrDefValue_1156_5 );
   }
   double s_FldProp_InstCodeMax_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_InstCodeMax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1156_5( I_("InstCodeMax") );
      return( dstrFldLabel_1156_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InstCodeMax(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,InstCodeMax // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_InstCodeMax_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_InstCodeMax_d_DVF // default value
      ,s_FldProp_InstCodeMax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Sequence (1157)
   //------------------------------------------------------------------
   const DString& s_FldProp_Sequence_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1157_4( I_("1") );
      return( dstrDefValue_1157_4 );
   }
   double s_FldProp_Sequence_d_DVF( const ClientLocale& locale )
   {
      return( 1 );
   }
   const DString& s_FldProp_Sequence_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1157_4( I_("Sequence ") );
      return( dstrFldLabel_1157_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Sequence(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Sequence // fieldId
      ,2 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Sequence_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Sequence_d_DVF // default value
      ,s_FldProp_Sequence_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IntrCode (1158)
   //------------------------------------------------------------------
   const DString& s_FldProp_IntrCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1158_5( I_("0") );
      return( dstrDefValue_1158_5 );
   }
   const DString& s_FldProp_IntrCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1158_5( I_("IntrCode ") );
      return( dstrFldLabel_1158_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IntrCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,IntrCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IntrCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IntrCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IntermName (1159)
   //------------------------------------------------------------------
   const DString& s_FldProp_IntermName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1159_7( I_("0") );
      return( dstrDefValue_1159_7 );
   }
   const DString& s_FldProp_IntermName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1159_7( I_("IntermName ") );
      return( dstrFldLabel_1159_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IntermName(
       BFDataFieldProperties::Type::text // field is a text field
      ,IntermName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IntermName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IntermName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IntermCode (1160)
   //------------------------------------------------------------------
   const DString& s_FldProp_IntermCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1160_4( I_("0") );
      return( dstrDefValue_1160_4 );
   }
   const DString& s_FldProp_IntermCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1160_4( I_("IntermCode ") );
      return( dstrFldLabel_1160_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IntermCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,IntermCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_IntermCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_IntermCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrchBrokerName (1162)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrchBrokerName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1162_5( I_("0") );
      return( dstrDefValue_1162_5 );
   }
   const DString& s_FldProp_SrchBrokerName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1162_5( I_("SrchBrokerName ") );
      return( dstrFldLabel_1162_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrchBrokerName(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrchBrokerName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrchBrokerName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrchBrokerName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RequestType (1163)
   //------------------------------------------------------------------
   const DString& s_FldProp_RequestType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1163_4( I_("0") );
      return( dstrDefValue_1163_4 );
   }
   const DString& s_FldProp_RequestType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1163_4( I_("RequestType ") );
      return( dstrFldLabel_1163_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RequestType(
       BFDataFieldProperties::Type::text // field is a text field
      ,RequestType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RequestType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RequestType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxBrokerCode (1164)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxBrokerCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1164_3( I_("0") );
      return( dstrDefValue_1164_3 );
   }
   const DString& s_FldProp_rxBrokerCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1164_3( I_("rxBrokerCode ") );
      return( dstrFldLabel_1164_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxBrokerCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxBrokerCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxBrokerCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxBrokerCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BrokerType (1165)
   //------------------------------------------------------------------
   const DString& s_FldProp_BrokerType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1165_1( I_("0") );
      return( dstrDefValue_1165_1 );
   }
   const DString& s_FldProp_BrokerType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1165_1( I_("BrokerType ") );
      return( dstrFldLabel_1165_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BrokerType(
       BFDataFieldProperties::Type::text // field is a text field
      ,BrokerType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BrokerType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BrokerType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BrokerTypeDesc (1166)
   //------------------------------------------------------------------
   const DString& s_FldProp_BrokerTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1166_5( I_("0") );
      return( dstrDefValue_1166_5 );
   }
   const DString& s_FldProp_BrokerTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1166_5( I_("BrokerTypeDesc ") );
      return( dstrFldLabel_1166_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BrokerTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,BrokerTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BrokerTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BrokerTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxBranchCode (1176)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxBranchCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1176_5( I_("0") );
      return( dstrDefValue_1176_5 );
   }
   const DString& s_FldProp_rxBranchCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1176_5( I_("rxBranchCode ") );
      return( dstrFldLabel_1176_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxBranchCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxBranchCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxBranchCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxBranchCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_rxSlsrep (1177)
   //------------------------------------------------------------------
   const DString& s_FldProp_rxSlsrep_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1177_4( I_("0") );
      return( dstrDefValue_1177_4 );
   }
   const DString& s_FldProp_rxSlsrep_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1177_4( I_("rxSlsrep ") );
      return( dstrFldLabel_1177_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_rxSlsrep(
       BFDataFieldProperties::Type::text // field is a text field
      ,rxSlsrep // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_rxSlsrep_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_rxSlsrep_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TrailEligible (1178)
   //------------------------------------------------------------------
   const DString& s_FldProp_TrailEligible_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1178_5( I_("0") );
      return( dstrDefValue_1178_5 );
   }
   const DString& s_FldProp_TrailEligible_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1178_5( I_("TrailEligible  ") );
      return( dstrFldLabel_1178_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TrailEligible(
       BFDataFieldProperties::Type::text // field is a text field
      ,TrailEligible // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TrailEligible_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TrailEligible_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayFreq (1179)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayFreq_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1179_3( I_("0") );
      return( dstrDefValue_1179_3 );
   }
   const DString& s_FldProp_PayFreq_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1179_3( I_("PayFreq ") );
      return( dstrFldLabel_1179_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayFreq(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayFreq // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayFreq_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayFreq_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayFreqDesc (1180)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayFreqDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1180_4( I_("0") );
      return( dstrDefValue_1180_4 );
   }
   const DString& s_FldProp_PayFreqDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1180_4( I_("PayFreqDesc ") );
      return( dstrFldLabel_1180_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayFreqDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayFreqDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayFreqDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayFreqDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsrepType (1181)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsrepType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1181_4( I_("0") );
      return( dstrDefValue_1181_4 );
   }
   const DString& s_FldProp_SlsrepType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1181_4( I_("SlsrepType ") );
      return( dstrFldLabel_1181_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsrepType(
       BFDataFieldProperties::Type::text // field is a text field
      ,SlsrepType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsrepType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SlsrepType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SlsrepTypeDesc (1182)
   //------------------------------------------------------------------
   const DString& s_FldProp_SlsrepTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1182_4( I_("0") );
      return( dstrDefValue_1182_4 );
   }
   const DString& s_FldProp_SlsrepTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1182_4( I_("SlsrepTypeDesc ") );
      return( dstrFldLabel_1182_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SlsrepTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,SlsrepTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SlsrepTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SlsrepTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_DefaultAllocFundHeading (1185)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_DefaultAllocFundHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1185_5( I_("") );
         return( dstrDefValue_1185_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1185_7( I_("") );
         return( dstrDefValue_1185_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1185_8( I_("") );
         return( dstrDefValue_1185_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1185_6( I_("0") );
         return( dstrDefValue_1185_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1185_4( I_("0") );
         return( dstrDefValue_1185_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1185_3( I_("") );
         return( dstrDefValue_1185_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1185_1( I_("") );
         return( dstrDefValue_1185_1 );
      }
      static const DString dstrDefValue_1185_1( I_("") );
      return( dstrDefValue_1185_1 );
   }
   const DString& s_FldProp_LV_DefaultAllocFundHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1185_5( I_("LV_DefaultAllocFundHeading") );
         return( dstrFldLabel_1185_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1185_7( I_("LV_DefaultAllocFundHeading") );
         return( dstrFldLabel_1185_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1185_8( I_("LV_DefaultAllocFundHeading") );
         return( dstrFldLabel_1185_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1185_6( I_("LV_DefaultAllocFundHeading") );
         return( dstrFldLabel_1185_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1185_4( I_("LV_DefaultAllocFundHeading") );
         return( dstrFldLabel_1185_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1185_3( I_("LV_DefaultAllocFundHeading") );
         return( dstrFldLabel_1185_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1185_1( I_("LV_DefaultAllocFundHeading") );
         return( dstrFldLabel_1185_1 );
      }
      static const DString dstrFldLabel_1185_1( I_("LV_DefaultAllocFundHeading") );
      return( dstrFldLabel_1185_1 );
   }
   PBF_SSC subset_super_chooser_2_1185( const ClientLocale& locale )
   {
      return chooser_ss_002_101; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_DefaultAllocFundHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_DefaultAllocFundHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_DefaultAllocFundHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_DefaultAllocFundHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1185 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_OneTimeAllocSystematicHeading (1186)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_OneTimeAllocSystematicHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1186_5( I_("") );
         return( dstrDefValue_1186_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1186_7( I_("") );
         return( dstrDefValue_1186_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1186_8( I_("") );
         return( dstrDefValue_1186_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1186_6( I_("0") );
         return( dstrDefValue_1186_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1186_3( I_("") );
         return( dstrDefValue_1186_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1186_1( I_("") );
         return( dstrDefValue_1186_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1186_4( I_("0") );
         return( dstrDefValue_1186_4 );
      }
      static const DString dstrDefValue_1186_1( I_("") );
      return( dstrDefValue_1186_1 );
   }
   const DString& s_FldProp_LV_OneTimeAllocSystematicHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1186_5( I_("LV_OneTimeAllocSystematicHeading") );
         return( dstrFldLabel_1186_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1186_7( I_("LV_OneTimeAllocSystematicHeading") );
         return( dstrFldLabel_1186_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1186_8( I_("LV_OneTimeAllocSystematicHeading") );
         return( dstrFldLabel_1186_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1186_6( I_("LV_OneTimeAllocSystematicHeading") );
         return( dstrFldLabel_1186_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1186_3( I_("LV_OneTimeAllocSystematicHeading") );
         return( dstrFldLabel_1186_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1186_1( I_("LV_OneTimeAllocSystematicHeading") );
         return( dstrFldLabel_1186_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1186_4( I_("LV_OneTimeAllocSystematicHeading") );
         return( dstrFldLabel_1186_4 );
      }
      static const DString dstrFldLabel_1186_1( I_("LV_OneTimeAllocSystematicHeading") );
      return( dstrFldLabel_1186_1 );
   }
   PBF_SSC subset_super_chooser_2_1186( const ClientLocale& locale )
   {
      return chooser_ss_002_102; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_OneTimeAllocSystematicHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_OneTimeAllocSystematicHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_OneTimeAllocSystematicHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_OneTimeAllocSystematicHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1186 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LV_OneTimeAllocFundHeading (1187)
   //------------------------------------------------------------------
   const DString& s_FldProp_LV_OneTimeAllocFundHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1187_4( I_("0") );
         return( dstrDefValue_1187_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1187_7( I_("") );
         return( dstrDefValue_1187_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1187_5( I_("") );
         return( dstrDefValue_1187_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1187_8( I_("") );
         return( dstrDefValue_1187_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1187_3( I_("") );
         return( dstrDefValue_1187_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1187_1( I_("") );
         return( dstrDefValue_1187_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1187_6( I_("0") );
         return( dstrDefValue_1187_6 );
      }
      static const DString dstrDefValue_1187_1( I_("") );
      return( dstrDefValue_1187_1 );
   }
   const DString& s_FldProp_LV_OneTimeAllocFundHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1187_4( I_("LV_OneTimeAllocFundHeading") );
         return( dstrFldLabel_1187_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1187_7( I_("LV_OneTimeAllocFundHeading") );
         return( dstrFldLabel_1187_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1187_5( I_("LV_OneTimeAllocFundHeading") );
         return( dstrFldLabel_1187_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1187_8( I_("LV_OneTimeAllocFundHeading") );
         return( dstrFldLabel_1187_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1187_3( I_("LV_OneTimeAllocFundHeading") );
         return( dstrFldLabel_1187_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1187_1( I_("LV_OneTimeAllocFundHeading") );
         return( dstrFldLabel_1187_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1187_6( I_("LV_OneTimeAllocFundHeading") );
         return( dstrFldLabel_1187_6 );
      }
      static const DString dstrFldLabel_1187_1( I_("LV_OneTimeAllocFundHeading") );
      return( dstrFldLabel_1187_1 );
   }
   PBF_SSC subset_super_chooser_2_1187( const ClientLocale& locale )
   {
      return chooser_ss_002_103; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LV_OneTimeAllocFundHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,LV_OneTimeAllocFundHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LV_OneTimeAllocFundHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LV_OneTimeAllocFundHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1187 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SystematicListHeading (1188)
   //------------------------------------------------------------------
   const DString& s_FldProp_SystematicListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1188_5( I_("") );
         return( dstrDefValue_1188_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1188_8( I_("") );
         return( dstrDefValue_1188_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1188_7( I_("") );
         return( dstrDefValue_1188_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1188_6( I_("0") );
         return( dstrDefValue_1188_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1188_4( I_("0") );
         return( dstrDefValue_1188_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1188_3( I_("") );
         return( dstrDefValue_1188_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1188_1( I_("") );
         return( dstrDefValue_1188_1 );
      }
      static const DString dstrDefValue_1188_1( I_("") );
      return( dstrDefValue_1188_1 );
   }
   const DString& s_FldProp_SystematicListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1188_5( I_("SystematicListHeading ") );
         return( dstrFldLabel_1188_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1188_8( I_("SystematicListHeading ") );
         return( dstrFldLabel_1188_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1188_7( I_("SystematicListHeading ") );
         return( dstrFldLabel_1188_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1188_6( I_("SystematicListHeading ") );
         return( dstrFldLabel_1188_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1188_4( I_("SystematicListHeading ") );
         return( dstrFldLabel_1188_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1188_3( I_("SystematicListHeading ") );
         return( dstrFldLabel_1188_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1188_1( I_("SystematicListHeading ") );
         return( dstrFldLabel_1188_1 );
      }
      static const DString dstrFldLabel_1188_1( I_("SystematicListHeading ") );
      return( dstrFldLabel_1188_1 );
   }
   PBF_SSC subset_super_chooser_2_1188( const ClientLocale& locale )
   {
      return chooser_ss_002_098; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SystematicListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,SystematicListHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SystematicListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SystematicListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1188 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SysAllocListHeading (1189)
   //------------------------------------------------------------------
   const DString& s_FldProp_SysAllocListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1189_4( I_("0") );
         return( dstrDefValue_1189_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1189_7( I_("") );
         return( dstrDefValue_1189_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1189_8( I_("") );
         return( dstrDefValue_1189_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1189_5( I_("") );
         return( dstrDefValue_1189_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1189_1( I_("") );
         return( dstrDefValue_1189_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1189_6( I_("0") );
         return( dstrDefValue_1189_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1189_3( I_("") );
         return( dstrDefValue_1189_3 );
      }
      static const DString dstrDefValue_1189_1( I_("") );
      return( dstrDefValue_1189_1 );
   }
   const DString& s_FldProp_SysAllocListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1189_4( I_("SysAllocListHeading ") );
         return( dstrFldLabel_1189_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1189_7( I_("SysAllocListHeading ") );
         return( dstrFldLabel_1189_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1189_8( I_("SysAllocListHeading ") );
         return( dstrFldLabel_1189_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1189_5( I_("SysAllocListHeading ") );
         return( dstrFldLabel_1189_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1189_1( I_("SysAllocListHeading ") );
         return( dstrFldLabel_1189_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1189_6( I_("SysAllocListHeading ") );
         return( dstrFldLabel_1189_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1189_3( I_("SysAllocListHeading ") );
         return( dstrFldLabel_1189_3 );
      }
      static const DString dstrFldLabel_1189_1( I_("SysAllocListHeading ") );
      return( dstrFldLabel_1189_1 );
   }
   PBF_SSC subset_super_chooser_2_1189( const ClientLocale& locale )
   {
      return chooser_ss_002_099; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SysAllocListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,SysAllocListHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SysAllocListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SysAllocListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1189 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocationType (1191)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocationType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_1191_5( I_("0") );
      return( dstrDefValue_1191_5 );
   }
   const DString& s_FldProp_AllocationType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_1191_5( I_("AllocationType") );
      return( dstrFldLabel_1191_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocationType(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllocationType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllocationType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllocationType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DistributionPayType (1194)
   //------------------------------------------------------------------
   const DString& s_FldProp_DistributionPayType_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1194_4( I_("0") );
         return( dstrDefValue_1194_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1194_5( I_("") );
         return( dstrDefValue_1194_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1194_8( I_("") );
         return( dstrDefValue_1194_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1194_7( I_("") );
         return( dstrDefValue_1194_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1194_1( I_("") );
         return( dstrDefValue_1194_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1194_3( I_("") );
         return( dstrDefValue_1194_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1194_6( I_("0") );
         return( dstrDefValue_1194_6 );
      }
      static const DString dstrDefValue_1194_1( I_("") );
      return( dstrDefValue_1194_1 );
   }
   const DString& s_FldProp_DistributionPayType_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1194_4( I_("DistributionPayType ") );
         return( dstrFldLabel_1194_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1194_5( I_("DistributionPayType ") );
         return( dstrFldLabel_1194_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1194_8( I_("DistributionPayType ") );
         return( dstrFldLabel_1194_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1194_7( I_("DistributionPayType ") );
         return( dstrFldLabel_1194_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1194_1( I_("DistributionPayType ") );
         return( dstrFldLabel_1194_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1194_3( I_("DistributionPayType ") );
         return( dstrFldLabel_1194_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1194_6( I_("DistributionPayType ") );
         return( dstrFldLabel_1194_6 );
      }
      static const DString dstrFldLabel_1194_1( I_("DistributionPayType ") );
      return( dstrFldLabel_1194_1 );
   }
   PBF_SSC subset_super_chooser_2_1194( const ClientLocale& locale )
   {
      return chooser_ss_002_016; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DistributionPayType(
       BFDataFieldProperties::Type::text // field is a text field
      ,DistributionPayType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DistributionPayType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DistributionPayType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1194 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WhereUsedListHeading (1199)
   //------------------------------------------------------------------
   const DString& s_FldProp_WhereUsedListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_1199_8( I_("") );
         return( dstrDefValue_1199_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_1199_7( I_("") );
         return( dstrDefValue_1199_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_1199_5( I_("") );
         return( dstrDefValue_1199_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_1199_6( I_("0") );
         return( dstrDefValue_1199_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_1199_3( I_("") );
         return( dstrDefValue_1199_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_1199_1( I_("") );
         return( dstrDefValue_1199_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_1199_4( I_("0") );
         return( dstrDefValue_1199_4 );
      }
      static const DString dstrDefValue_1199_1( I_("") );
      return( dstrDefValue_1199_1 );
   }
   const DString& s_FldProp_WhereUsedListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_1199_8( I_("WhereUsedListHeading  ") );
         return( dstrFldLabel_1199_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_1199_7( I_("WhereUsedListHeading  ") );
         return( dstrFldLabel_1199_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_1199_5( I_("WhereUsedListHeading  ") );
         return( dstrFldLabel_1199_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_1199_6( I_("WhereUsedListHeading  ") );
         return( dstrFldLabel_1199_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_1199_3( I_("WhereUsedListHeading  ") );
         return( dstrFldLabel_1199_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_1199_1( I_("WhereUsedListHeading  ") );
         return( dstrFldLabel_1199_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_1199_4( I_("WhereUsedListHeading  ") );
         return( dstrFldLabel_1199_4 );
      }
      static const DString dstrFldLabel_1199_1( I_("WhereUsedListHeading  ") );
      return( dstrFldLabel_1199_1 );
   }
   PBF_SSC subset_super_chooser_2_1199( const ClientLocale& locale )
   {
      return chooser_ss_002_105; // defined in ifast_substitutions_chooser_3.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WhereUsedListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,WhereUsedListHeading // fieldId
      ,0 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WhereUsedListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WhereUsedListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_1199 // substitution set super chooser
      );
}
