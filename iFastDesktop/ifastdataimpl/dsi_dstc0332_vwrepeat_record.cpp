// BFDataImpl implementation file for DataSet DSTC0332.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0332_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0332_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0332_VWRepeat_Record() { return new dsi_DSTC0332_VWRepeat_Record; }

dsi_DSTC0332_VWRepeat_Record::dsi_DSTC0332_VWRepeat_Record()
: BFDataImpl( 40005043 )
, NetworkID_( ifds::NetworkID, &ifds::s_FldProp_NetworkID )
, FileName_( ifds::FileName, &ifds::s_FldProp_FileName )
, EnvelopeStatus_( ifds::EnvelopeStatus, &ifds::s_FldProp_EnvelopeStatus )
, ProcessDate_( ifds::ProcessDate, &ifds::s_FldProp_ProcessDate )
, ProcessTime_( ifds::ProcessTime, &ifds::s_FldProp_ProcessTime )
, EnvelopeID_( ifds::EnvelopeID, &ifds::s_FldProp_EnvelopeID )
{
   cFields_ = 6;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0332_VWRepeat_Record::~dsi_DSTC0332_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0332_VWRepeat_Record::clone()
{
   dsi_DSTC0332_VWRepeat_Record* p = new dsi_DSTC0332_VWRepeat_Record;
   p->NetworkID_ = NetworkID_;
   p->FileName_ = FileName_;
   p->EnvelopeStatus_ = EnvelopeStatus_;
   p->ProcessDate_ = ProcessDate_;
   p->ProcessTime_ = ProcessTime_;
   p->EnvelopeID_ = EnvelopeID_;
   return(p);
}

BFDataField* dsi_DSTC0332_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40003522: return ( &NetworkID_ ); break; // NetworkID
      case 40005014: return ( &FileName_ ); break; // FileName
      case 40005044: return ( &EnvelopeStatus_ ); break; // EnvelopeStatus
      case 40000216: return ( &ProcessDate_ ); break; // ProcessDate
      case 40000491: return ( &ProcessTime_ ); break; // ProcessTime
      case 40005006: return ( &EnvelopeID_ ); break; // EnvelopeID
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0332_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0332_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0332_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 6 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &NetworkID_; break;
            case 1: aFlds_[1] = &FileName_; break;
            case 2: aFlds_[2] = &EnvelopeStatus_; break;
            case 3: aFlds_[3] = &ProcessDate_; break;
            case 4: aFlds_[4] = &ProcessTime_; break;
            case 5: aFlds_[5] = &EnvelopeID_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0332_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0332_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0332_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 60 );
}

unsigned long dsi_DSTC0332_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 310 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0332_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0332_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0332_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40003522: return( true );
      case 40005014: return( true );
      case 40005044: return( true );
      case 40000216: return( true );
      case 40000491: return( true );
      case 40005006: return( true );
   }
   return false;
}

