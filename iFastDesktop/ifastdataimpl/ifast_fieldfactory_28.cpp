// Data Field Factory Function
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdatafield.hpp>
#include <bfdata/bfdataid.hpp>

namespace ifds
{
   extern const BFTextFieldId AMSFreqOvrd;
   extern const BFIntegerFieldId RebalanceDay;
   extern const BFDataId DSTC0380_REQ;
   extern const BFDataId DSTC0380_VWRepeat_Record;
   extern const BFIntegerFieldId FreqOverride;
   extern const BFIntegerFieldId SchedSetupFreqID;
   extern const BFIntegerFieldId AMSStat;
   extern const BFDateFieldId ActivationDate;
   extern const BFNumericFieldId AcctAMSRID;
   extern const BFDataId DSTC0380_VW;
   extern const BFDataId DSTC0381_REQRepeat_Record;
   extern const BFDecimalFieldId ThresholdPrcnt;
   extern const BFDataId DSTC0381_REQ;
   extern const BFDataId DSTC0382_REQ;
   extern const BFTextFieldId SchedFreqDesc;
   extern const BFTextFieldId FrequencyType;
   extern const BFDataId DSTC0382_VWRepeat_Record;
   extern const BFDataId DSTC0382_VW;
   extern const BFDataId DSTC0381_VW;
   extern const BFDataId DSTC0383_VW;
   extern const BFDataId DSTC0383_REQ;
   extern const BFTextFieldId FOFFund;
   extern const BFTextFieldId PendingStatus;
   extern const BFTextFieldId PendingPrivate;
   extern const BFTextFieldId UpdAllNonFin;
   extern const BFTextFieldId IdStatus;
   extern const BFTextFieldId KYCComment;
   extern const BFTextFieldId EmploymentType;
   extern const BFTextFieldId ResidenceType;
   extern const BFDecimalFieldId ResAmount;
   extern const BFDateFieldId KYCMailedDate;
   extern const BFTextFieldId AMSAcctLevelHeading;
   extern const BFTextFieldId CloneAcctAMS;
   extern const BFDecimalFieldId AnnualIncomeAmount;
   extern const BFDateFieldId IncomeLevelDate;
   extern const BFDecimalFieldId NetWorthAmount;
   extern const BFDateFieldId NetWorthDate;
   extern const BFTextFieldId RefferalCode;
   extern const BFTextFieldId ReferenceName;
   extern const BFTextFieldId SpecialtyCode;
   extern const BFDecimalFieldId TolerancePrcnt;
   extern const BFDecimalFieldId ShortTermPrcnt;
   extern const BFDecimalFieldId AggressivePrcnt;
   extern const BFDateFieldId PrcntDate;
   extern const BFTextFieldId AccountClosingReason;
   extern const BFTextFieldId Email2;
   extern const BFTextFieldId SecondPhoneNum;
   extern const BFTextFieldId SecondPhoneNumExt;
   extern const BFDecimalFieldId RejErrNum;
   extern const BFTextFieldId NFUpdate;
   extern const BFDateFieldId FundStatusDate;
   extern const BFTextFieldId FromSoftCapCheck;
   extern const BFTextFieldId ToSoftCapCheck;
   extern const BFTextFieldId DistribChkAllowTfr;
   extern const BFTextFieldId KYCLevel;
   extern const BFIntegerFieldId ShrKYCVer;
   extern const BFTextFieldId ActiveAMSExists;
   extern const BFNumericFieldId KYCRID;
   extern const BFTextFieldId PaymentIdMethod;
   extern const BFTextFieldId MFPayment;
   extern const BFTextFieldId SiblingOnly;
   extern const BFTextFieldId DaysOfMonth;
   extern const BFTextFieldId UseSpAge;
   extern const BFTextFieldId RetSameCIFAcct;
   extern const BFTextFieldId Affluent;
   extern const BFTextFieldId MgmtFeeId;
   extern const BFTextFieldId MgmFeeType;
   extern const BFTextFieldId MgmtFeeRbtId;
   extern const BFTextFieldId MgmtFeeRbtType;
   extern const BFTextFieldId DeliveryMethod2;
   extern const BFIntegerFieldId AMSStat2;
   extern const BFTextFieldId BillingToEntityType;
   extern const BFDataId DSTC0384_VW;
   extern const BFDataId DSTC0384_VWRepeat_Record;
   extern const BFDataId DSTC0384_REQ;
   extern const BFTextFieldId LinkMFR;
   extern const BFTextFieldId IdAllowOverride;
   extern const BFNumericFieldId AssociatedAcctNum;
   extern const BFTextFieldId BillingToEntity;
   extern const BFTextFieldId ManualTradesTransType;
   extern const BFTextFieldId AcctAMSExist;
   extern const BFTextFieldId AllocatorFund;
   extern const BFTextFieldId MFRPayment;
   extern const BFTextFieldId MFRCorporateFund;
   extern const BFTextFieldId InvoiceModelID;
   extern const BFTextFieldId CheckCloseBatch;
   extern const BFTextFieldId AcctClearingMethod;
   extern const BFTextFieldId ActiveCert;
   extern const BFTextFieldId AWDObjectId;
   extern const BFTextFieldId IsSplitDilution;
   extern const BFTextFieldId CompanyUrl;
   extern const BFTextFieldId AWDCrda;
   extern const BFDecimalFieldId ACBSettledValue;
   extern const BFDecimalFieldId RefTempInc;
   extern const BFDecimalFieldId AdjLifeInc;
   extern const BFTextFieldId MinWaived;
   extern const BFDataId DSTC0385_VW;
   extern const BFDataId DSTC0385_REQ;
   extern const BFTextFieldId AffluentFrom;
   extern const BFTextFieldId AffluentTo;
   extern const BFTextFieldId AffluentChgAllowed;
   extern const BFTextFieldId GrossNetMethod;
   extern const BFTextFieldId GrossNetMethod2;
   extern const BFDateFieldId NetOfFeesDate;
   extern const BFTextFieldId RRIFcrossGrossNetMethod;
   extern const BFTextFieldId CancelContribRcpt;
   extern const BFTextFieldId ExcldRcptPrint;
   extern const BFTextFieldId RetRcptToSender;
   extern const BFDecimalFieldId HistUnitACB;
   extern const BFTextFieldId DispHistUnitACB;
   extern const BFTextFieldId ACBListHeading2;
   extern const BFDateFieldId ExDate;
   extern const BFDateFieldId ReInvDate;
   extern const BFTextFieldId HoldDivPymt;
   extern const BFIntegerFieldId DivDates;
   extern const BFTextFieldId AllFundsDistrib;
   extern const BFTextFieldId SwitchBanks;
   extern const BFTextFieldId EFTRedemptionXEdit;
   extern const BFTextFieldId DOTAdnd;
   extern const BFTextFieldId ToCurrency2;
   extern const BFTextFieldId OverrideChar;
   extern const BFTextFieldId rxRuleType;
   extern const BFDateFieldId rxEffectiveDate;
   extern const BFDateFieldId rxStopDate;
   extern const BFTextFieldId rxOverrideAmt;
   extern const BFTextFieldId rxOverrideLog;
   extern const BFTextFieldId rxOverrideChar;
   extern const BFNumericFieldId AcctControlsID;
   extern const BFNumericFieldId AcctControlsVer;
   extern const BFNumericFieldId AcctControlsRID;
   extern const BFDataId DSTC0386_REQ;
   extern const BFDataId DSTC0386_VW;
   extern const BFDataId DSTC0386_VWRepeat_Record;
   extern const BFDataId DSTC0387_REQ;
   extern const BFDataId DSTC0387_REQRepeat_Record;
   extern const BFDataId DSTC0387_VW;
   extern const BFTextFieldId SettleDays;
   extern const BFTextFieldId AcctSettlementRuleHeadingSet;
   extern const BFNumericFieldId rxAcctControlsRID;
   extern const BFTextFieldId AcctLvlSettlementRuleType;
   extern const BFTextFieldId SettlementRuleExist;
   extern const BFTextFieldId SettlementRulecrossRuleType;
   extern const BFTextFieldId SettlementRulecrossSettleDays;
   extern const BFDateFieldId UnLockDeff;
   extern const BFDecimalFieldId UnLockGrossAmt;
   extern const BFTextFieldId TaxTypeSchedule;
   extern const BFTextFieldId TaxTypeScheduleApplicable;
   extern const BFTextFieldId DefltFeeOption;
   extern const BFTextFieldId TaxTypeTaxTypeSchedule;
   extern const BFTextFieldId EligExtTrfGainLoss;
   extern const BFTextFieldId AcctActivityExists;
   extern const BFTextFieldId OnLineEntExcept;
   extern const BFDateFieldId RollQualDate;
   extern const BFTextFieldId UseFundDefDate;
   extern const BFTextFieldId UseFundDefDateCE;
   extern const BFTextFieldId FrSettlCurrency;
   extern const BFTextFieldId ToSettlCurrency;
   extern const BFTextFieldId StopReason;
   extern const BFTextFieldId AdditionalStopReason;
   extern const BFTextFieldId TypeOfInvestor;
   extern const BFTextFieldId InvestingOnBehalf;
   extern const BFTextFieldId PowerOfAttorney;
   extern const BFTextFieldId SourceOfIncome;
   extern const BFTextFieldId InitialPayment;
   extern const BFTextFieldId ComplianceCode;
   extern const BFTextFieldId RegulatoryStandard;
   extern const BFTextFieldId RegStandardName;
   extern const BFTextFieldId RegStandardId;
   extern const BFDataFieldProperties s_FldProp_AMSFreqOvrd;
   extern const BFDataFieldProperties s_FldProp_RebalanceDay;
   extern const BFDataFieldProperties s_FldProp_DSTC0380_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0380_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_FreqOverride;
   extern const BFDataFieldProperties s_FldProp_SchedSetupFreqID;
   extern const BFDataFieldProperties s_FldProp_AMSStat;
   extern const BFDataFieldProperties s_FldProp_ActivationDate;
   extern const BFDataFieldProperties s_FldProp_AcctAMSRID;
   extern const BFDataFieldProperties s_FldProp_DSTC0380_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0381_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_ThresholdPrcnt;
   extern const BFDataFieldProperties s_FldProp_DSTC0381_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0382_REQ;
   extern const BFDataFieldProperties s_FldProp_SchedFreqDesc;
   extern const BFDataFieldProperties s_FldProp_FrequencyType;
   extern const BFDataFieldProperties s_FldProp_DSTC0382_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0382_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0381_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0383_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0383_REQ;
   extern const BFDataFieldProperties s_FldProp_FOFFund;
   extern const BFDataFieldProperties s_FldProp_PendingStatus;
   extern const BFDataFieldProperties s_FldProp_PendingPrivate;
   extern const BFDataFieldProperties s_FldProp_UpdAllNonFin;
   extern const BFDataFieldProperties s_FldProp_IdStatus;
   extern const BFDataFieldProperties s_FldProp_KYCComment;
   extern const BFDataFieldProperties s_FldProp_EmploymentType;
   extern const BFDataFieldProperties s_FldProp_ResidenceType;
   extern const BFDataFieldProperties s_FldProp_ResAmount;
   extern const BFDataFieldProperties s_FldProp_KYCMailedDate;
   extern const BFDataFieldProperties s_FldProp_AMSAcctLevelHeading;
   extern const BFDataFieldProperties s_FldProp_CloneAcctAMS;
   extern const BFDataFieldProperties s_FldProp_AnnualIncomeAmount;
   extern const BFDataFieldProperties s_FldProp_IncomeLevelDate;
   extern const BFDataFieldProperties s_FldProp_NetWorthAmount;
   extern const BFDataFieldProperties s_FldProp_NetWorthDate;
   extern const BFDataFieldProperties s_FldProp_RefferalCode;
   extern const BFDataFieldProperties s_FldProp_ReferenceName;
   extern const BFDataFieldProperties s_FldProp_SpecialtyCode;
   extern const BFDataFieldProperties s_FldProp_TolerancePrcnt;
   extern const BFDataFieldProperties s_FldProp_ShortTermPrcnt;
   extern const BFDataFieldProperties s_FldProp_AggressivePrcnt;
   extern const BFDataFieldProperties s_FldProp_PrcntDate;
   extern const BFDataFieldProperties s_FldProp_AccountClosingReason;
   extern const BFDataFieldProperties s_FldProp_Email2;
   extern const BFDataFieldProperties s_FldProp_SecondPhoneNum;
   extern const BFDataFieldProperties s_FldProp_SecondPhoneNumExt;
   extern const BFDataFieldProperties s_FldProp_RejErrNum;
   extern const BFDataFieldProperties s_FldProp_NFUpdate;
   extern const BFDataFieldProperties s_FldProp_FundStatusDate;
   extern const BFDataFieldProperties s_FldProp_FromSoftCapCheck;
   extern const BFDataFieldProperties s_FldProp_ToSoftCapCheck;
   extern const BFDataFieldProperties s_FldProp_DistribChkAllowTfr;
   extern const BFDataFieldProperties s_FldProp_KYCLevel;
   extern const BFDataFieldProperties s_FldProp_ShrKYCVer;
   extern const BFDataFieldProperties s_FldProp_ActiveAMSExists;
   extern const BFDataFieldProperties s_FldProp_KYCRID;
   extern const BFDataFieldProperties s_FldProp_PaymentIdMethod;
   extern const BFDataFieldProperties s_FldProp_MFPayment;
   extern const BFDataFieldProperties s_FldProp_SiblingOnly;
   extern const BFDataFieldProperties s_FldProp_DaysOfMonth;
   extern const BFDataFieldProperties s_FldProp_UseSpAge;
   extern const BFDataFieldProperties s_FldProp_RetSameCIFAcct;
   extern const BFDataFieldProperties s_FldProp_Affluent;
   extern const BFDataFieldProperties s_FldProp_MgmtFeeId;
   extern const BFDataFieldProperties s_FldProp_MgmFeeType;
   extern const BFDataFieldProperties s_FldProp_MgmtFeeRbtId;
   extern const BFDataFieldProperties s_FldProp_MgmtFeeRbtType;
   extern const BFDataFieldProperties s_FldProp_DeliveryMethod2;
   extern const BFDataFieldProperties s_FldProp_AMSStat2;
   extern const BFDataFieldProperties s_FldProp_BillingToEntityType;
   extern const BFDataFieldProperties s_FldProp_DSTC0384_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0384_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0384_REQ;
   extern const BFDataFieldProperties s_FldProp_LinkMFR;
   extern const BFDataFieldProperties s_FldProp_IdAllowOverride;
   extern const BFDataFieldProperties s_FldProp_AssociatedAcctNum;
   extern const BFDataFieldProperties s_FldProp_BillingToEntity;
   extern const BFDataFieldProperties s_FldProp_ManualTradesTransType;
   extern const BFDataFieldProperties s_FldProp_AcctAMSExist;
   extern const BFDataFieldProperties s_FldProp_AllocatorFund;
   extern const BFDataFieldProperties s_FldProp_MFRPayment;
   extern const BFDataFieldProperties s_FldProp_MFRCorporateFund;
   extern const BFDataFieldProperties s_FldProp_InvoiceModelID;
   extern const BFDataFieldProperties s_FldProp_CheckCloseBatch;
   extern const BFDataFieldProperties s_FldProp_AcctClearingMethod;
   extern const BFDataFieldProperties s_FldProp_ActiveCert;
   extern const BFDataFieldProperties s_FldProp_AWDObjectId;
   extern const BFDataFieldProperties s_FldProp_IsSplitDilution;
   extern const BFDataFieldProperties s_FldProp_CompanyUrl;
   extern const BFDataFieldProperties s_FldProp_AWDCrda;
   extern const BFDataFieldProperties s_FldProp_ACBSettledValue;
   extern const BFDataFieldProperties s_FldProp_RefTempInc;
   extern const BFDataFieldProperties s_FldProp_AdjLifeInc;
   extern const BFDataFieldProperties s_FldProp_MinWaived;
   extern const BFDataFieldProperties s_FldProp_DSTC0385_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0385_REQ;
   extern const BFDataFieldProperties s_FldProp_AffluentFrom;
   extern const BFDataFieldProperties s_FldProp_AffluentTo;
   extern const BFDataFieldProperties s_FldProp_AffluentChgAllowed;
   extern const BFDataFieldProperties s_FldProp_GrossNetMethod;
   extern const BFDataFieldProperties s_FldProp_GrossNetMethod2;
   extern const BFDataFieldProperties s_FldProp_NetOfFeesDate;
   extern const BFDataFieldProperties s_FldProp_RRIFcrossGrossNetMethod;
   extern const BFDataFieldProperties s_FldProp_CancelContribRcpt;
   extern const BFDataFieldProperties s_FldProp_ExcldRcptPrint;
   extern const BFDataFieldProperties s_FldProp_RetRcptToSender;
   extern const BFDataFieldProperties s_FldProp_HistUnitACB;
   extern const BFDataFieldProperties s_FldProp_DispHistUnitACB;
   extern const BFDataFieldProperties s_FldProp_ACBListHeading2;
   extern const BFDataFieldProperties s_FldProp_ExDate;
   extern const BFDataFieldProperties s_FldProp_ReInvDate;
   extern const BFDataFieldProperties s_FldProp_HoldDivPymt;
   extern const BFDataFieldProperties s_FldProp_DivDates;
   extern const BFDataFieldProperties s_FldProp_AllFundsDistrib;
   extern const BFDataFieldProperties s_FldProp_SwitchBanks;
   extern const BFDataFieldProperties s_FldProp_EFTRedemptionXEdit;
   extern const BFDataFieldProperties s_FldProp_DOTAdnd;
   extern const BFDataFieldProperties s_FldProp_ToCurrency2;
   extern const BFDataFieldProperties s_FldProp_OverrideChar;
   extern const BFDataFieldProperties s_FldProp_rxRuleType;
   extern const BFDataFieldProperties s_FldProp_rxEffectiveDate;
   extern const BFDataFieldProperties s_FldProp_rxStopDate;
   extern const BFDataFieldProperties s_FldProp_rxOverrideAmt;
   extern const BFDataFieldProperties s_FldProp_rxOverrideLog;
   extern const BFDataFieldProperties s_FldProp_rxOverrideChar;
   extern const BFDataFieldProperties s_FldProp_AcctControlsID;
   extern const BFDataFieldProperties s_FldProp_AcctControlsVer;
   extern const BFDataFieldProperties s_FldProp_AcctControlsRID;
   extern const BFDataFieldProperties s_FldProp_DSTC0386_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0386_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0386_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0387_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0387_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0387_VW;
   extern const BFDataFieldProperties s_FldProp_SettleDays;
   extern const BFDataFieldProperties s_FldProp_AcctSettlementRuleHeadingSet;
   extern const BFDataFieldProperties s_FldProp_rxAcctControlsRID;
   extern const BFDataFieldProperties s_FldProp_AcctLvlSettlementRuleType;
   extern const BFDataFieldProperties s_FldProp_SettlementRuleExist;
   extern const BFDataFieldProperties s_FldProp_SettlementRulecrossRuleType;
   extern const BFDataFieldProperties s_FldProp_SettlementRulecrossSettleDays;
   extern const BFDataFieldProperties s_FldProp_UnLockDeff;
   extern const BFDataFieldProperties s_FldProp_UnLockGrossAmt;
   extern const BFDataFieldProperties s_FldProp_TaxTypeSchedule;
   extern const BFDataFieldProperties s_FldProp_TaxTypeScheduleApplicable;
   extern const BFDataFieldProperties s_FldProp_DefltFeeOption;
   extern const BFDataFieldProperties s_FldProp_TaxTypeTaxTypeSchedule;
   extern const BFDataFieldProperties s_FldProp_EligExtTrfGainLoss;
   extern const BFDataFieldProperties s_FldProp_AcctActivityExists;
   extern const BFDataFieldProperties s_FldProp_OnLineEntExcept;
   extern const BFDataFieldProperties s_FldProp_RollQualDate;
   extern const BFDataFieldProperties s_FldProp_UseFundDefDate;
   extern const BFDataFieldProperties s_FldProp_UseFundDefDateCE;
   extern const BFDataFieldProperties s_FldProp_FrSettlCurrency;
   extern const BFDataFieldProperties s_FldProp_ToSettlCurrency;
   extern const BFDataFieldProperties s_FldProp_StopReason;
   extern const BFDataFieldProperties s_FldProp_AdditionalStopReason;
   extern const BFDataFieldProperties s_FldProp_TypeOfInvestor;
   extern const BFDataFieldProperties s_FldProp_InvestingOnBehalf;
   extern const BFDataFieldProperties s_FldProp_PowerOfAttorney;
   extern const BFDataFieldProperties s_FldProp_SourceOfIncome;
   extern const BFDataFieldProperties s_FldProp_InitialPayment;
   extern const BFDataFieldProperties s_FldProp_ComplianceCode;
   extern const BFDataFieldProperties s_FldProp_RegulatoryStandard;
   extern const BFDataFieldProperties s_FldProp_RegStandardName;
   extern const BFDataFieldProperties s_FldProp_RegStandardId;
   BFDataField* createField_28( const BFFieldId id )
   {
      BFDataField* pField = NULL;
      switch( id.getId() )
      {
         case 40005600: pField = new BFTextField<4>( AMSFreqOvrd, &s_FldProp_AMSFreqOvrd ); break; 
         case 40005601: pField = new BFIntegerField( RebalanceDay, &s_FldProp_RebalanceDay ); break; 
         case 40005604: pField = new BFIntegerField( FreqOverride, &s_FldProp_FreqOverride ); break; 
         case 40005605: pField = new BFIntegerField( SchedSetupFreqID, &s_FldProp_SchedSetupFreqID ); break; 
         case 40005606: pField = new BFIntegerField( AMSStat, &s_FldProp_AMSStat ); break; 
         case 40005607: pField = new BFDateField( ActivationDate, &s_FldProp_ActivationDate ); break; 
         case 40005608: pField = new BFNumericField( AcctAMSRID, &s_FldProp_AcctAMSRID ); break; 
         case 40005611: pField = new BFDecimalField( ThresholdPrcnt, &s_FldProp_ThresholdPrcnt ); break; 
         case 40005614: pField = new BFTextField_60( SchedFreqDesc, &s_FldProp_SchedFreqDesc ); break; 
         case 40005615: pField = new BFTextField_60( FrequencyType, &s_FldProp_FrequencyType ); break; 
         case 40005624: pField = new BFTextField<3>( FOFFund, &s_FldProp_FOFFund ); break; 
         case 40005626: pField = new BFTextField<3>( PendingStatus, &s_FldProp_PendingStatus ); break; 
         case 40005627: pField = new BFTextField<3>( PendingPrivate, &s_FldProp_PendingPrivate ); break; 
         case 40005628: pField = new BFTextField<3>( UpdAllNonFin, &s_FldProp_UpdAllNonFin ); break; 
         case 40005630: pField = new BFTextField_60( IdStatus, &s_FldProp_IdStatus ); break; 
         case 40005631: pField = new BFTextField<200>( KYCComment, &s_FldProp_KYCComment ); break; 
         case 40005632: pField = new BFTextField_60( EmploymentType, &s_FldProp_EmploymentType ); break; 
         case 40005633: pField = new BFTextField_60( ResidenceType, &s_FldProp_ResidenceType ); break; 
         case 40005634: pField = new BFDecimalField( ResAmount, &s_FldProp_ResAmount ); break; 
         case 40005635: pField = new BFDateField( KYCMailedDate, &s_FldProp_KYCMailedDate ); break; 
         case 40005636: pField = new BFTextField_60( AMSAcctLevelHeading, &s_FldProp_AMSAcctLevelHeading ); break; 
         case 40005637: pField = new BFTextField_1( CloneAcctAMS, &s_FldProp_CloneAcctAMS ); break; 
         case 40005638: pField = new BFDecimalField( AnnualIncomeAmount, &s_FldProp_AnnualIncomeAmount ); break; 
         case 40005639: pField = new BFDateField( IncomeLevelDate, &s_FldProp_IncomeLevelDate ); break; 
         case 40005640: pField = new BFDecimalField( NetWorthAmount, &s_FldProp_NetWorthAmount ); break; 
         case 40005641: pField = new BFDateField( NetWorthDate, &s_FldProp_NetWorthDate ); break; 
         case 40005642: pField = new BFTextField_60( RefferalCode, &s_FldProp_RefferalCode ); break; 
         case 40005643: pField = new BFTextField_60( ReferenceName, &s_FldProp_ReferenceName ); break; 
         case 40005644: pField = new BFTextField_60( SpecialtyCode, &s_FldProp_SpecialtyCode ); break; 
         case 40005645: pField = new BFDecimalField( TolerancePrcnt, &s_FldProp_TolerancePrcnt ); break; 
         case 40005646: pField = new BFDecimalField( ShortTermPrcnt, &s_FldProp_ShortTermPrcnt ); break; 
         case 40005647: pField = new BFDecimalField( AggressivePrcnt, &s_FldProp_AggressivePrcnt ); break; 
         case 40005648: pField = new BFDateField( PrcntDate, &s_FldProp_PrcntDate ); break; 
         case 40005649: pField = new BFTextField_60( AccountClosingReason, &s_FldProp_AccountClosingReason ); break; 
         case 40005650: pField = new BFTextField_60( Email2, &s_FldProp_Email2 ); break; 
         case 40005651: pField = new BFTextField_60( SecondPhoneNum, &s_FldProp_SecondPhoneNum ); break; 
         case 40005652: pField = new BFTextField_60( SecondPhoneNumExt, &s_FldProp_SecondPhoneNumExt ); break; 
         case 40005654: pField = new BFDecimalField( RejErrNum, &s_FldProp_RejErrNum ); break; 
         case 40005655: pField = new BFTextField<20>( NFUpdate, &s_FldProp_NFUpdate ); break; 
         case 40005657: pField = new BFDateField( FundStatusDate, &s_FldProp_FundStatusDate ); break; 
         case 40005658: pField = new BFTextField_60( FromSoftCapCheck, &s_FldProp_FromSoftCapCheck ); break; 
         case 40005659: pField = new BFTextField_60( ToSoftCapCheck, &s_FldProp_ToSoftCapCheck ); break; 
         case 40005660: pField = new BFTextField_1( DistribChkAllowTfr, &s_FldProp_DistribChkAllowTfr ); break; 
         case 40005661: pField = new BFTextField_2( KYCLevel, &s_FldProp_KYCLevel ); break; 
         case 40005663: pField = new BFIntegerField( ShrKYCVer, &s_FldProp_ShrKYCVer ); break; 
         case 40005664: pField = new BFTextField_1( ActiveAMSExists, &s_FldProp_ActiveAMSExists ); break; 
         case 40005667: pField = new BFNumericField( KYCRID, &s_FldProp_KYCRID ); break; 
         case 40005668: pField = new BFTextField_60( PaymentIdMethod, &s_FldProp_PaymentIdMethod ); break; 
         case 40005669: pField = new BFTextField<3>( MFPayment, &s_FldProp_MFPayment ); break; 
         case 40005670: pField = new BFTextField_1( SiblingOnly, &s_FldProp_SiblingOnly ); break; 
         case 40005673: pField = new BFTextField_10( DaysOfMonth, &s_FldProp_DaysOfMonth ); break; 
         case 40005675: pField = new BFTextField_1( UseSpAge, &s_FldProp_UseSpAge ); break; 
         case 40005676: pField = new BFTextField_1( RetSameCIFAcct, &s_FldProp_RetSameCIFAcct ); break; 
         case 40005677: pField = new BFTextField_60( Affluent, &s_FldProp_Affluent ); break; 
         case 40005678: pField = new BFTextField_60( MgmtFeeId, &s_FldProp_MgmtFeeId ); break; 
         case 40005680: pField = new BFTextField_60( MgmFeeType, &s_FldProp_MgmFeeType ); break; 
         case 40005682: pField = new BFTextField_60( MgmtFeeRbtId, &s_FldProp_MgmtFeeRbtId ); break; 
         case 40005683: pField = new BFTextField_60( MgmtFeeRbtType, &s_FldProp_MgmtFeeRbtType ); break; 
         case 40005686: pField = new BFTextField_60( DeliveryMethod2, &s_FldProp_DeliveryMethod2 ); break; 
         case 40005691: pField = new BFIntegerField( AMSStat2, &s_FldProp_AMSStat2 ); break; 
         case 40005692: pField = new BFTextField_60( BillingToEntityType, &s_FldProp_BillingToEntityType ); break; 
         case 40005701: pField = new BFTextField<20>( LinkMFR, &s_FldProp_LinkMFR ); break; 
         case 40005702: pField = new BFTextField<20>( IdAllowOverride, &s_FldProp_IdAllowOverride ); break; 
         case 40005703: pField = new BFNumericField( AssociatedAcctNum, &s_FldProp_AssociatedAcctNum ); break; 
         case 40005704: pField = new BFTextField_60( BillingToEntity, &s_FldProp_BillingToEntity ); break; 
         case 40005705: pField = new BFTextField_60( ManualTradesTransType, &s_FldProp_ManualTradesTransType ); break; 
         case 40005707: pField = new BFTextField_1( AcctAMSExist, &s_FldProp_AcctAMSExist ); break; 
         case 40005708: pField = new BFTextField_1( AllocatorFund, &s_FldProp_AllocatorFund ); break; 
         case 40005709: pField = new BFTextField<30>( MFRPayment, &s_FldProp_MFRPayment ); break; 
         case 40005710: pField = new BFTextField_1( MFRCorporateFund, &s_FldProp_MFRCorporateFund ); break; 
         case 40005711: pField = new BFTextField_60( InvoiceModelID, &s_FldProp_InvoiceModelID ); break; 
         case 40005712: pField = new BFTextField_1( CheckCloseBatch, &s_FldProp_CheckCloseBatch ); break; 
         case 40005713: pField = new BFTextField_60( AcctClearingMethod, &s_FldProp_AcctClearingMethod ); break; 
         case 40005714: pField = new BFTextField_1( ActiveCert, &s_FldProp_ActiveCert ); break; 
         case 40005715: pField = new BFTextField_60( AWDObjectId, &s_FldProp_AWDObjectId ); break; 
         case 40005716: pField = new BFTextField<4>( IsSplitDilution, &s_FldProp_IsSplitDilution ); break; 
         case 40005717: pField = new BFTextField<100>( CompanyUrl, &s_FldProp_CompanyUrl ); break; 
         case 40005718: pField = new BFTextField_60( AWDCrda, &s_FldProp_AWDCrda ); break; 
         case 40005719: pField = new BFDecimalField( ACBSettledValue, &s_FldProp_ACBSettledValue ); break; 
         case 40005720: pField = new BFDecimalField( RefTempInc, &s_FldProp_RefTempInc ); break; 
         case 40005721: pField = new BFDecimalField( AdjLifeInc, &s_FldProp_AdjLifeInc ); break; 
         case 40005722: pField = new BFTextField<3>( MinWaived, &s_FldProp_MinWaived ); break; 
         case 40005725: pField = new BFTextField_1( AffluentFrom, &s_FldProp_AffluentFrom ); break; 
         case 40005726: pField = new BFTextField_1( AffluentTo, &s_FldProp_AffluentTo ); break; 
         case 40005727: pField = new BFTextField_1( AffluentChgAllowed, &s_FldProp_AffluentChgAllowed ); break; 
         case 40005728: pField = new BFTextField_2( GrossNetMethod, &s_FldProp_GrossNetMethod ); break; 
         case 40005729: pField = new BFTextField_2( GrossNetMethod2, &s_FldProp_GrossNetMethod2 ); break; 
         case 40005730: pField = new BFDateField( NetOfFeesDate, &s_FldProp_NetOfFeesDate ); break; 
         case 40005731: pField = new BFTextField_60( RRIFcrossGrossNetMethod, &s_FldProp_RRIFcrossGrossNetMethod ); break; 
         case 40005732: pField = new BFTextField_1( CancelContribRcpt, &s_FldProp_CancelContribRcpt ); break; 
         case 40005733: pField = new BFTextField_1( ExcldRcptPrint, &s_FldProp_ExcldRcptPrint ); break; 
         case 40005734: pField = new BFTextField_1( RetRcptToSender, &s_FldProp_RetRcptToSender ); break; 
         case 40005735: pField = new BFDecimalField( HistUnitACB, &s_FldProp_HistUnitACB ); break; 
         case 40005736: pField = new BFTextField<3>( DispHistUnitACB, &s_FldProp_DispHistUnitACB ); break; 
         case 40005737: pField = new BFTextField_60( ACBListHeading2, &s_FldProp_ACBListHeading2 ); break; 
         case 40005738: pField = new BFDateField( ExDate, &s_FldProp_ExDate ); break; 
         case 40005739: pField = new BFDateField( ReInvDate, &s_FldProp_ReInvDate ); break; 
         case 40005743: pField = new BFTextField_1( HoldDivPymt, &s_FldProp_HoldDivPymt ); break; 
         case 40005744: pField = new BFIntegerField( DivDates, &s_FldProp_DivDates ); break; 
         case 40005745: pField = new BFTextField_1( AllFundsDistrib, &s_FldProp_AllFundsDistrib ); break; 
         case 40005746: pField = new BFTextField_1( SwitchBanks, &s_FldProp_SwitchBanks ); break; 
         case 40005747: pField = new BFTextField_10( EFTRedemptionXEdit, &s_FldProp_EFTRedemptionXEdit ); break; 
         case 40005749: pField = new BFTextField_60( DOTAdnd, &s_FldProp_DOTAdnd ); break; 
         case 40005751: pField = new BFTextField_10( ToCurrency2, &s_FldProp_ToCurrency2 ); break; 
         case 40005752: pField = new BFTextField_60( OverrideChar, &s_FldProp_OverrideChar ); break; 
         case 40005753: pField = new BFTextField_60( rxRuleType, &s_FldProp_rxRuleType ); break; 
         case 40005754: pField = new BFDateField( rxEffectiveDate, &s_FldProp_rxEffectiveDate ); break; 
         case 40005755: pField = new BFDateField( rxStopDate, &s_FldProp_rxStopDate ); break; 
         case 40005756: pField = new BFTextField_60( rxOverrideAmt, &s_FldProp_rxOverrideAmt ); break; 
         case 40005757: pField = new BFTextField_60( rxOverrideLog, &s_FldProp_rxOverrideLog ); break; 
         case 40005758: pField = new BFTextField_60( rxOverrideChar, &s_FldProp_rxOverrideChar ); break; 
         case 40005759: pField = new BFNumericField( AcctControlsID, &s_FldProp_AcctControlsID ); break; 
         case 40005760: pField = new BFNumericField( AcctControlsVer, &s_FldProp_AcctControlsVer ); break; 
         case 40005761: pField = new BFNumericField( AcctControlsRID, &s_FldProp_AcctControlsRID ); break; 
         case 40005768: pField = new BFTextField_60( SettleDays, &s_FldProp_SettleDays ); break; 
         case 40005769: pField = new BFTextField_60( AcctSettlementRuleHeadingSet, &s_FldProp_AcctSettlementRuleHeadingSet ); break; 
         case 40005770: pField = new BFNumericField( rxAcctControlsRID, &s_FldProp_rxAcctControlsRID ); break; 
         case 40005771: pField = new BFTextField_60( AcctLvlSettlementRuleType, &s_FldProp_AcctLvlSettlementRuleType ); break; 
         case 40005772: pField = new BFTextField_1( SettlementRuleExist, &s_FldProp_SettlementRuleExist ); break; 
         case 40005773: pField = new BFTextField_60( SettlementRulecrossRuleType, &s_FldProp_SettlementRulecrossRuleType ); break; 
         case 40005774: pField = new BFTextField_60( SettlementRulecrossSettleDays, &s_FldProp_SettlementRulecrossSettleDays ); break; 
         case 40005775: pField = new BFDateField( UnLockDeff, &s_FldProp_UnLockDeff ); break; 
         case 40005776: pField = new BFDecimalField( UnLockGrossAmt, &s_FldProp_UnLockGrossAmt ); break; 
         case 40005778: pField = new BFTextField_2( TaxTypeSchedule, &s_FldProp_TaxTypeSchedule ); break; 
         case 40005779: pField = new BFTextField_1( TaxTypeScheduleApplicable, &s_FldProp_TaxTypeScheduleApplicable ); break; 
         case 40005780: pField = new BFTextField_2( DefltFeeOption, &s_FldProp_DefltFeeOption ); break; 
         case 40005781: pField = new BFTextField_10( TaxTypeTaxTypeSchedule, &s_FldProp_TaxTypeTaxTypeSchedule ); break; 
         case 40005782: pField = new BFTextField_1( EligExtTrfGainLoss, &s_FldProp_EligExtTrfGainLoss ); break; 
         case 40005783: pField = new BFTextField_1( AcctActivityExists, &s_FldProp_AcctActivityExists ); break; 
         case 40005784: pField = new BFTextField<200>( OnLineEntExcept, &s_FldProp_OnLineEntExcept ); break; 
         case 40005785: pField = new BFDateField( RollQualDate, &s_FldProp_RollQualDate ); break; 
         case 40005786: pField = new BFTextField_1( UseFundDefDate, &s_FldProp_UseFundDefDate ); break; 
         case 40005787: pField = new BFTextField<20>( UseFundDefDateCE, &s_FldProp_UseFundDefDateCE ); break; 
         case 40005788: pField = new BFTextField_10( FrSettlCurrency, &s_FldProp_FrSettlCurrency ); break; 
         case 40005789: pField = new BFTextField_10( ToSettlCurrency, &s_FldProp_ToSettlCurrency ); break; 
         case 40005790: pField = new BFTextField_60( StopReason, &s_FldProp_StopReason ); break; 
         case 40005791: pField = new BFTextField_60( AdditionalStopReason, &s_FldProp_AdditionalStopReason ); break; 
         case 40005792: pField = new BFTextField_60( TypeOfInvestor, &s_FldProp_TypeOfInvestor ); break; 
         case 40005793: pField = new BFTextField<3>( InvestingOnBehalf, &s_FldProp_InvestingOnBehalf ); break; 
         case 40005794: pField = new BFTextField<3>( PowerOfAttorney, &s_FldProp_PowerOfAttorney ); break; 
         case 40005795: pField = new BFTextField<3>( SourceOfIncome, &s_FldProp_SourceOfIncome ); break; 
         case 40005796: pField = new BFTextField_60( InitialPayment, &s_FldProp_InitialPayment ); break; 
         case 40005797: pField = new BFTextField_60( ComplianceCode, &s_FldProp_ComplianceCode ); break; 
         case 40005798: pField = new BFTextField_60( RegulatoryStandard, &s_FldProp_RegulatoryStandard ); break; 
         case 40005799: pField = new BFTextField<200>( RegStandardName, &s_FldProp_RegStandardName ); break; 
      }
      return pField;
   }
}
