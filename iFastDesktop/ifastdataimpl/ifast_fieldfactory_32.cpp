// Data Field Factory Function
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdatafield.hpp>
#include <bfdata/bfdataid.hpp>

namespace ifds
{
   extern const BFDataId DSTC0419_REQ;
   extern const BFDataId DSTC0419_VW;
   extern const BFDataId DSTC0419_VWRepeat_Record;
   extern const BFTextFieldId LoanType;
   extern const BFDecimalFieldId ACBOffset;
   extern const BFTextFieldId ACBUnitOffset;
   extern const BFTextFieldId ACBListHeading3;
   extern const BFTextFieldId ACBListHeading4;
   extern const BFTextFieldId TAGroup;
   extern const BFTextFieldId KYCInfoFormat;
   extern const BFTextFieldId KYCInfoFormatDesc;
   extern const BFTextFieldId ProfileNum;
   extern const BFTextFieldId ProfileValue;
   extern const BFDateFieldId LastReviewDate;
   extern const BFDecimalFieldId CESGPaid;
   extern const BFTextFieldId EAPEarningCodes;
   extern const BFTextFieldId WarnParam14;
   extern const BFTextFieldId NSCCSocialCode;
   extern const BFTextFieldId DistributionChannel;
   extern const BFDecimalFieldId EAPCESGPaid;
   extern const BFTextFieldId IWTEnable;
   extern const BFTextFieldId IWTTaxJurisList;
   extern const BFTextFieldId TINExists;
   extern const BFTextFieldId BrokerListHeadingFamilyCode;
   extern const BFTextFieldId SearchFamilyCode;
   extern const BFTextFieldId SearchFamilyCodeUsing;
   extern const BFTextFieldId ShrFamilyHeadingHouseHold;
   extern const BFTextFieldId ShrFamilyStatus;
   extern const BFDecimalFieldId FamilyRId;
   extern const BFDecimalFieldId CommReduction;
   extern const BFTextFieldId ForcedRate;
   extern const BFDateFieldId NxtIntDay;
   extern const BFTextFieldId IntFreq;
   extern const BFDateFieldId InvestDate;
   extern const BFNumericFieldId DepositTerm;
   extern const BFTextFieldId IntCalcType;
   extern const BFDecimalFieldId AdditionalAmount;
   extern const BFTextFieldId InvestType;
   extern const BFTextFieldId InvestmentHistoryDetailsList;
   extern const BFTextFieldId InvestmentHistoryDetailsTranList;
   extern const BFTextFieldId InvestmentHistorySearch;
   extern const BFTextFieldId InvestmentHistoryStatus;
   extern const BFTextFieldId InvestmentHistoryFund;
   extern const BFTextFieldId InvestmentHistoryClass;
   extern const BFTextFieldId InvestmentHistoryNumber;
   extern const BFDataId DSTC0420_REQ;
   extern const BFDataId DSTC0420_VW;
   extern const BFDataId DSTC0421_REQ;
   extern const BFDataId DSTC0421_VW;
   extern const BFDataId DSTC0421_VWRepeat_Record;
   extern const BFDataId DSTC0422_REQ;
   extern const BFDataId DSTC0422_VW;
   extern const BFDataId DSTC0422_VWRepeat_Record;
   extern const BFDataId DSTC0423_REQ;
   extern const BFDataId DSTC0423_VW;
   extern const BFDataId DSTC0423_VWRepeat_Record;
   extern const BFDataId DSTC0424_REQ;
   extern const BFDataId DSTC0424_VW;
   extern const BFDataId DSTC0424_VWRepeat_Record;
   extern const BFDataId DSTC0425_REQ;
   extern const BFDataId DSTC0425_VW;
   extern const BFDataId DSTC0425_VWRepeat_Record;
   extern const BFTextFieldId HasGIAHolding;
   extern const BFTextFieldId InvHisNumber;
   extern const BFTextFieldId InvHisStatus;
   extern const BFTextFieldId InvHisIntCalcMthd;
   extern const BFTextFieldId InvHisIntRateType;
   extern const BFIntegerFieldId InvHisTerm;
   extern const BFDecimalFieldId InvHisIntRate;
   extern const BFDateFieldId InvHisDepDate;
   extern const BFDateFieldId InvHisMatDate;
   extern const BFDecimalFieldId InvHisPrincipal;
   extern const BFTextFieldId InvHisIntFreq;
   extern const BFDecimalFieldId InvHisCurMktVal;
   extern const BFDateFieldId InvHisLastIntCrdDate;
   extern const BFDecimalFieldId InvHisAcurdToDate;
   extern const BFTextFieldId InvHisTransType;
   extern const BFDateFieldId InvHisTradeDate;
   extern const BFDecimalFieldId InvHisPrincipalGrossMoneyOut;
   extern const BFDecimalFieldId InvHisMVA;
   extern const BFDecimalFieldId InvHisAdminFee;
   extern const BFDecimalFieldId InvHisNetOfFees;
   extern const BFDateFieldId InvHisIntDate;
   extern const BFDecimalFieldId InvHisIntAmt;
   extern const BFNumericFieldId ProgressiveInvTerm;
   extern const BFDecimalFieldId ProgressiveIntRate;
   extern const BFTextFieldId SegmentIntDate;
   extern const BFDecimalFieldId SegmentIntValue;
   extern const BFTextFieldId IntInvestUUID;
   extern const BFTextFieldId InvestmentHistoryDetailsIntList;
   extern const BFTextFieldId SharelotDetlUUID;
   extern const BFTextFieldId FundServBroker;
   extern const BFIntegerFieldId InvestTerm;
   extern const BFTextFieldId IntCalcMthd;
   extern const BFDateFieldId NextIntCredDate;
   extern const BFTextFieldId CommRedRate;
   extern const BFDecimalFieldId EstimatedRate;
   extern const BFTextFieldId IntInvestType;
   extern const BFTextFieldId IntCredFreq;
   extern const BFDecimalFieldId AddlAmt;
   extern const BFTextFieldId IntRateType;
   extern const BFTextFieldId InvestStatus;
   extern const BFTextFieldId IsGIFund;
   extern const BFTextFieldId SimpleTermList;
   extern const BFTextFieldId CompoundTermList;
   extern const BFTextFieldId SimpleCredFreqList;
   extern const BFTextFieldId CompoundCredFreqList;
   extern const BFTextFieldId CommRedRateList;
   extern const BFTextFieldId IntCalcMthdList;
   extern const BFTextFieldId ProgressiveRateUUID;
   extern const BFDateFieldId LastIntCredDate;
   extern const BFDataId DSTC0426_REQ;
   extern const BFDataId DSTC0426_VW;
   extern const BFTextFieldId ProgressiveIntRateDetailsList;
   extern const BFTextFieldId InvestTermList;
   extern const BFTextFieldId AllocationTransType;
   extern const BFDecimalFieldId InvHisLotId;
   extern const BFDecimalFieldId InvHisInvestId;
   extern const BFDecimalFieldId InvHisTradeAmt;
   extern const BFDecimalFieldId InvHisAddlAmt;
   extern const BFDecimalFieldId InvHisEstimatedRate;
   extern const BFDecimalFieldId ForcedRateAmt;
   extern const BFTextFieldId RemainingFleg;
   extern const BFTextFieldId RolloverType;
   extern const BFTextFieldId BusinessType;
   extern const BFTextFieldId SplitType;
   extern const BFTextFieldId CashSweepBal;
   extern const BFDecimalFieldId SelectedAmt;
   extern const BFTextFieldId DistribDetlUUID;
   extern const BFDecimalFieldId IntInvestId;
   extern const BFDecimalFieldId FELAmt;
   extern const BFIntegerFieldId IntInvestTerm;
   extern const BFTextFieldId MatSweepInstructListHeading;
   extern const BFTextFieldId MatInstrLevel;
   extern const BFTextFieldId MatSweepInstructDetailsListHeading;
   extern const BFTextFieldId MatSwpInstructionType;
   extern const BFDataId DSTC0427_REQ;
   extern const BFDataId DSTC0427_VW;
   extern const BFDataId DSTC0427_VWRepeat_Record;
   extern const BFDataId DSTC0428_VWRepeat_Record;
   extern const BFDataId DSTC0428_VW;
   extern const BFDataId DSTC0428_REQ;
   extern const BFTextFieldId PorfolioIsRequried;
   extern const BFTextFieldId CanHaveCashSweep;
   extern const BFTextFieldId CanHaveMatInstr;
   extern const BFTextFieldId CashSweepExists;
   extern const BFTextFieldId MatIntExists;
   extern const BFTextFieldId InvHisIncomeUUID;
   extern const BFTextFieldId InvHisSegmentUUID;
   extern const BFIntegerFieldId InvHisSegment;
   extern const BFTextFieldId InvHisIntSegment;
   extern const BFTextFieldId InvHisCode;
   extern const BFDecimalFieldId InvHisRate;
   extern const BFTextFieldId NonReceiptApplicable;
   extern const BFTextFieldId GuaranteeCalcByRules;
   extern const BFDecimalFieldId BankAcctId;
   extern const BFTextFieldId BankAcctUse;
   extern const BFIntegerFieldId BankTransitNo;
   extern const BFIntegerFieldId BankSwiftCode;
   extern const BFIntegerFieldId BankRefNumber;
   extern const BFDateFieldId BankStopDate;
   extern const BFTextFieldId BankCorrespondent;
   extern const BFBigDecimalFieldId DSTC0429_REQ;
   extern const BFDataId DSTC0429_REQRepeat_Record;
   extern const BFBigDecimalFieldId DSTC0429_VW;
   extern const BFTextFieldId InstrType;
   extern const BFDecimalFieldId BankId1;
   extern const BFTextFieldId InterestSegmentDetailsList;
   extern const BFDateFieldId GIMaturityDate;
   extern const BFDataFieldProperties s_FldProp_DSTC0419_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0419_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0419_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_LoanType;
   extern const BFDataFieldProperties s_FldProp_ACBOffset;
   extern const BFDataFieldProperties s_FldProp_ACBUnitOffset;
   extern const BFDataFieldProperties s_FldProp_ACBListHeading3;
   extern const BFDataFieldProperties s_FldProp_ACBListHeading4;
   extern const BFDataFieldProperties s_FldProp_TAGroup;
   extern const BFDataFieldProperties s_FldProp_KYCInfoFormat;
   extern const BFDataFieldProperties s_FldProp_KYCInfoFormatDesc;
   extern const BFDataFieldProperties s_FldProp_ProfileNum;
   extern const BFDataFieldProperties s_FldProp_ProfileValue;
   extern const BFDataFieldProperties s_FldProp_LastReviewDate;
   extern const BFDataFieldProperties s_FldProp_CESGPaid;
   extern const BFDataFieldProperties s_FldProp_EAPEarningCodes;
   extern const BFDataFieldProperties s_FldProp_WarnParam14;
   extern const BFDataFieldProperties s_FldProp_NSCCSocialCode;
   extern const BFDataFieldProperties s_FldProp_DistributionChannel;
   extern const BFDataFieldProperties s_FldProp_EAPCESGPaid;
   extern const BFDataFieldProperties s_FldProp_IWTEnable;
   extern const BFDataFieldProperties s_FldProp_IWTTaxJurisList;
   extern const BFDataFieldProperties s_FldProp_TINExists;
   extern const BFDataFieldProperties s_FldProp_BrokerListHeadingFamilyCode;
   extern const BFDataFieldProperties s_FldProp_SearchFamilyCode;
   extern const BFDataFieldProperties s_FldProp_SearchFamilyCodeUsing;
   extern const BFDataFieldProperties s_FldProp_ShrFamilyHeadingHouseHold;
   extern const BFDataFieldProperties s_FldProp_ShrFamilyStatus;
   extern const BFDataFieldProperties s_FldProp_FamilyRId;
   extern const BFDataFieldProperties s_FldProp_CommReduction;
   extern const BFDataFieldProperties s_FldProp_ForcedRate;
   extern const BFDataFieldProperties s_FldProp_NxtIntDay;
   extern const BFDataFieldProperties s_FldProp_IntFreq;
   extern const BFDataFieldProperties s_FldProp_InvestDate;
   extern const BFDataFieldProperties s_FldProp_DepositTerm;
   extern const BFDataFieldProperties s_FldProp_IntCalcType;
   extern const BFDataFieldProperties s_FldProp_AdditionalAmount;
   extern const BFDataFieldProperties s_FldProp_InvestType;
   extern const BFDataFieldProperties s_FldProp_InvestmentHistoryDetailsList;
   extern const BFDataFieldProperties s_FldProp_InvestmentHistoryDetailsTranList;
   extern const BFDataFieldProperties s_FldProp_InvestmentHistorySearch;
   extern const BFDataFieldProperties s_FldProp_InvestmentHistoryStatus;
   extern const BFDataFieldProperties s_FldProp_InvestmentHistoryFund;
   extern const BFDataFieldProperties s_FldProp_InvestmentHistoryClass;
   extern const BFDataFieldProperties s_FldProp_InvestmentHistoryNumber;
   extern const BFDataFieldProperties s_FldProp_DSTC0420_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0420_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0421_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0421_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0421_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0422_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0422_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0422_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0423_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0423_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0423_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0424_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0424_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0424_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0425_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0425_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0425_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_HasGIAHolding;
   extern const BFDataFieldProperties s_FldProp_InvHisNumber;
   extern const BFDataFieldProperties s_FldProp_InvHisStatus;
   extern const BFDataFieldProperties s_FldProp_InvHisIntCalcMthd;
   extern const BFDataFieldProperties s_FldProp_InvHisIntRateType;
   extern const BFDataFieldProperties s_FldProp_InvHisTerm;
   extern const BFDataFieldProperties s_FldProp_InvHisIntRate;
   extern const BFDataFieldProperties s_FldProp_InvHisDepDate;
   extern const BFDataFieldProperties s_FldProp_InvHisMatDate;
   extern const BFDataFieldProperties s_FldProp_InvHisPrincipal;
   extern const BFDataFieldProperties s_FldProp_InvHisIntFreq;
   extern const BFDataFieldProperties s_FldProp_InvHisCurMktVal;
   extern const BFDataFieldProperties s_FldProp_InvHisLastIntCrdDate;
   extern const BFDataFieldProperties s_FldProp_InvHisAcurdToDate;
   extern const BFDataFieldProperties s_FldProp_InvHisTransType;
   extern const BFDataFieldProperties s_FldProp_InvHisTradeDate;
   extern const BFDataFieldProperties s_FldProp_InvHisPrincipalGrossMoneyOut;
   extern const BFDataFieldProperties s_FldProp_InvHisMVA;
   extern const BFDataFieldProperties s_FldProp_InvHisAdminFee;
   extern const BFDataFieldProperties s_FldProp_InvHisNetOfFees;
   extern const BFDataFieldProperties s_FldProp_InvHisIntDate;
   extern const BFDataFieldProperties s_FldProp_InvHisIntAmt;
   extern const BFDataFieldProperties s_FldProp_ProgressiveInvTerm;
   extern const BFDataFieldProperties s_FldProp_ProgressiveIntRate;
   extern const BFDataFieldProperties s_FldProp_SegmentIntDate;
   extern const BFDataFieldProperties s_FldProp_SegmentIntValue;
   extern const BFDataFieldProperties s_FldProp_IntInvestUUID;
   extern const BFDataFieldProperties s_FldProp_InvestmentHistoryDetailsIntList;
   extern const BFDataFieldProperties s_FldProp_SharelotDetlUUID;
   extern const BFDataFieldProperties s_FldProp_FundServBroker;
   extern const BFDataFieldProperties s_FldProp_InvestTerm;
   extern const BFDataFieldProperties s_FldProp_IntCalcMthd;
   extern const BFDataFieldProperties s_FldProp_NextIntCredDate;
   extern const BFDataFieldProperties s_FldProp_CommRedRate;
   extern const BFDataFieldProperties s_FldProp_EstimatedRate;
   extern const BFDataFieldProperties s_FldProp_IntInvestType;
   extern const BFDataFieldProperties s_FldProp_IntCredFreq;
   extern const BFDataFieldProperties s_FldProp_AddlAmt;
   extern const BFDataFieldProperties s_FldProp_IntRateType;
   extern const BFDataFieldProperties s_FldProp_InvestStatus;
   extern const BFDataFieldProperties s_FldProp_IsGIFund;
   extern const BFDataFieldProperties s_FldProp_SimpleTermList;
   extern const BFDataFieldProperties s_FldProp_CompoundTermList;
   extern const BFDataFieldProperties s_FldProp_SimpleCredFreqList;
   extern const BFDataFieldProperties s_FldProp_CompoundCredFreqList;
   extern const BFDataFieldProperties s_FldProp_CommRedRateList;
   extern const BFDataFieldProperties s_FldProp_IntCalcMthdList;
   extern const BFDataFieldProperties s_FldProp_ProgressiveRateUUID;
   extern const BFDataFieldProperties s_FldProp_LastIntCredDate;
   extern const BFDataFieldProperties s_FldProp_DSTC0426_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0426_VW;
   extern const BFDataFieldProperties s_FldProp_ProgressiveIntRateDetailsList;
   extern const BFDataFieldProperties s_FldProp_InvestTermList;
   extern const BFDataFieldProperties s_FldProp_AllocationTransType;
   extern const BFDataFieldProperties s_FldProp_InvHisLotId;
   extern const BFDataFieldProperties s_FldProp_InvHisInvestId;
   extern const BFDataFieldProperties s_FldProp_InvHisTradeAmt;
   extern const BFDataFieldProperties s_FldProp_InvHisAddlAmt;
   extern const BFDataFieldProperties s_FldProp_InvHisEstimatedRate;
   extern const BFDataFieldProperties s_FldProp_ForcedRateAmt;
   extern const BFDataFieldProperties s_FldProp_RemainingFleg;
   extern const BFDataFieldProperties s_FldProp_RolloverType;
   extern const BFDataFieldProperties s_FldProp_BusinessType;
   extern const BFDataFieldProperties s_FldProp_SplitType;
   extern const BFDataFieldProperties s_FldProp_CashSweepBal;
   extern const BFDataFieldProperties s_FldProp_SelectedAmt;
   extern const BFDataFieldProperties s_FldProp_DistribDetlUUID;
   extern const BFDataFieldProperties s_FldProp_IntInvestId;
   extern const BFDataFieldProperties s_FldProp_FELAmt;
   extern const BFDataFieldProperties s_FldProp_IntInvestTerm;
   extern const BFDataFieldProperties s_FldProp_MatSweepInstructListHeading;
   extern const BFDataFieldProperties s_FldProp_MatInstrLevel;
   extern const BFDataFieldProperties s_FldProp_MatSweepInstructDetailsListHeading;
   extern const BFDataFieldProperties s_FldProp_MatSwpInstructionType;
   extern const BFDataFieldProperties s_FldProp_DSTC0427_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0427_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0427_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0428_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0428_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0428_REQ;
   extern const BFDataFieldProperties s_FldProp_PorfolioIsRequried;
   extern const BFDataFieldProperties s_FldProp_CanHaveCashSweep;
   extern const BFDataFieldProperties s_FldProp_CanHaveMatInstr;
   extern const BFDataFieldProperties s_FldProp_CashSweepExists;
   extern const BFDataFieldProperties s_FldProp_MatIntExists;
   extern const BFDataFieldProperties s_FldProp_InvHisIncomeUUID;
   extern const BFDataFieldProperties s_FldProp_InvHisSegmentUUID;
   extern const BFDataFieldProperties s_FldProp_InvHisSegment;
   extern const BFDataFieldProperties s_FldProp_InvHisIntSegment;
   extern const BFDataFieldProperties s_FldProp_InvHisCode;
   extern const BFDataFieldProperties s_FldProp_InvHisRate;
   extern const BFDataFieldProperties s_FldProp_NonReceiptApplicable;
   extern const BFDataFieldProperties s_FldProp_GuaranteeCalcByRules;
   extern const BFDataFieldProperties s_FldProp_BankAcctId;
   extern const BFDataFieldProperties s_FldProp_BankAcctUse;
   extern const BFDataFieldProperties s_FldProp_BankTransitNo;
   extern const BFDataFieldProperties s_FldProp_BankSwiftCode;
   extern const BFDataFieldProperties s_FldProp_BankRefNumber;
   extern const BFDataFieldProperties s_FldProp_BankStopDate;
   extern const BFDataFieldProperties s_FldProp_BankCorrespondent;
   extern const BFDataFieldProperties s_FldProp_DSTC0429_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0429_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0429_VW;
   extern const BFDataFieldProperties s_FldProp_InstrType;
   extern const BFDataFieldProperties s_FldProp_BankId1;
   extern const BFDataFieldProperties s_FldProp_InterestSegmentDetailsList;
   extern const BFDataFieldProperties s_FldProp_GIMaturityDate;
   BFDataField* createField_32( const BFFieldId id )
   {
      BFDataField* pField = NULL;
      switch( id.getId() )
      {
         case 40006403: pField = new BFTextField_60( LoanType, &s_FldProp_LoanType ); break; 
         case 40006407: pField = new BFDecimalField( ACBOffset, &s_FldProp_ACBOffset ); break; 
         case 40006408: pField = new BFTextField<4>( ACBUnitOffset, &s_FldProp_ACBUnitOffset ); break; 
         case 40006409: pField = new BFTextField_60( ACBListHeading3, &s_FldProp_ACBListHeading3 ); break; 
         case 40006410: pField = new BFTextField_60( ACBListHeading4, &s_FldProp_ACBListHeading4 ); break; 
         case 40006411: pField = new BFTextField_60( TAGroup, &s_FldProp_TAGroup ); break; 
         case 40006412: pField = new BFTextField_60( KYCInfoFormat, &s_FldProp_KYCInfoFormat ); break; 
         case 40006413: pField = new BFTextField_60( KYCInfoFormatDesc, &s_FldProp_KYCInfoFormatDesc ); break; 
         case 40006414: pField = new BFTextField_60( ProfileNum, &s_FldProp_ProfileNum ); break; 
         case 40006415: pField = new BFTextField_60( ProfileValue, &s_FldProp_ProfileValue ); break; 
         case 40006416: pField = new BFDateField( LastReviewDate, &s_FldProp_LastReviewDate ); break; 
         case 40006417: pField = new BFDecimalField( CESGPaid, &s_FldProp_CESGPaid ); break; 
         case 40006418: pField = new BFTextField_60( EAPEarningCodes, &s_FldProp_EAPEarningCodes ); break; 
         case 40006419: pField = new BFTextField_60( WarnParam14, &s_FldProp_WarnParam14 ); break; 
         case 40006420: pField = new BFTextField_60( NSCCSocialCode, &s_FldProp_NSCCSocialCode ); break; 
         case 40006421: pField = new BFTextField_60( DistributionChannel, &s_FldProp_DistributionChannel ); break; 
         case 40006422: pField = new BFDecimalField( EAPCESGPaid, &s_FldProp_EAPCESGPaid ); break; 
         case 40006423: pField = new BFTextField_10( IWTEnable, &s_FldProp_IWTEnable ); break; 
         case 40006424: pField = new BFTextField<200>( IWTTaxJurisList, &s_FldProp_IWTTaxJurisList ); break; 
         case 40006425: pField = new BFTextField_10( TINExists, &s_FldProp_TINExists ); break; 
         case 40006426: pField = new BFTextField_60( BrokerListHeadingFamilyCode, &s_FldProp_BrokerListHeadingFamilyCode ); break; 
         case 40006427: pField = new BFTextField_60( SearchFamilyCode, &s_FldProp_SearchFamilyCode ); break; 
         case 40006428: pField = new BFTextField_60( SearchFamilyCodeUsing, &s_FldProp_SearchFamilyCodeUsing ); break; 
         case 40006429: pField = new BFTextField_60( ShrFamilyHeadingHouseHold, &s_FldProp_ShrFamilyHeadingHouseHold ); break; 
         case 40006430: pField = new BFTextField_10( ShrFamilyStatus, &s_FldProp_ShrFamilyStatus ); break; 
         case 40006431: pField = new BFDecimalField( FamilyRId, &s_FldProp_FamilyRId ); break; 
         case 40006433: pField = new BFDecimalField( CommReduction, &s_FldProp_CommReduction ); break; 
         case 40006434: pField = new BFTextField_10( ForcedRate, &s_FldProp_ForcedRate ); break; 
         case 40006435: pField = new BFDateField( NxtIntDay, &s_FldProp_NxtIntDay ); break; 
         case 40006436: pField = new BFTextField_60( IntFreq, &s_FldProp_IntFreq ); break; 
         case 40006437: pField = new BFDateField( InvestDate, &s_FldProp_InvestDate ); break; 
         case 40006438: pField = new BFNumericField( DepositTerm, &s_FldProp_DepositTerm ); break; 
         case 40006439: pField = new BFTextField_60( IntCalcType, &s_FldProp_IntCalcType ); break; 
         case 40006440: pField = new BFDecimalField( AdditionalAmount, &s_FldProp_AdditionalAmount ); break; 
         case 40006441: pField = new BFTextField_60( InvestType, &s_FldProp_InvestType ); break; 
         case 40006442: pField = new BFTextField<100>( InvestmentHistoryDetailsList, &s_FldProp_InvestmentHistoryDetailsList ); break; 
         case 40006443: pField = new BFTextField<100>( InvestmentHistoryDetailsTranList, &s_FldProp_InvestmentHistoryDetailsTranList ); break; 
         case 40006444: pField = new BFTextField<20>( InvestmentHistorySearch, &s_FldProp_InvestmentHistorySearch ); break; 
         case 40006445: pField = new BFTextField<20>( InvestmentHistoryStatus, &s_FldProp_InvestmentHistoryStatus ); break; 
         case 40006446: pField = new BFTextField<20>( InvestmentHistoryFund, &s_FldProp_InvestmentHistoryFund ); break; 
         case 40006447: pField = new BFTextField<20>( InvestmentHistoryClass, &s_FldProp_InvestmentHistoryClass ); break; 
         case 40006448: pField = new BFTextField_60( InvestmentHistoryNumber, &s_FldProp_InvestmentHistoryNumber ); break; 
         case 40006466: pField = new BFTextField_1( HasGIAHolding, &s_FldProp_HasGIAHolding ); break; 
         case 40006469: pField = new BFTextField<20>( InvHisNumber, &s_FldProp_InvHisNumber ); break; 
         case 40006470: pField = new BFTextField<20>( InvHisStatus, &s_FldProp_InvHisStatus ); break; 
         case 40006471: pField = new BFTextField<20>( InvHisIntCalcMthd, &s_FldProp_InvHisIntCalcMthd ); break; 
         case 40006472: pField = new BFTextField<20>( InvHisIntRateType, &s_FldProp_InvHisIntRateType ); break; 
         case 40006473: pField = new BFIntegerField( InvHisTerm, &s_FldProp_InvHisTerm ); break; 
         case 40006474: pField = new BFDecimalField( InvHisIntRate, &s_FldProp_InvHisIntRate ); break; 
         case 40006475: pField = new BFDateField( InvHisDepDate, &s_FldProp_InvHisDepDate ); break; 
         case 40006476: pField = new BFDateField( InvHisMatDate, &s_FldProp_InvHisMatDate ); break; 
         case 40006477: pField = new BFDecimalField( InvHisPrincipal, &s_FldProp_InvHisPrincipal ); break; 
         case 40006478: pField = new BFTextField<20>( InvHisIntFreq, &s_FldProp_InvHisIntFreq ); break; 
         case 40006479: pField = new BFDecimalField( InvHisCurMktVal, &s_FldProp_InvHisCurMktVal ); break; 
         case 40006480: pField = new BFDateField( InvHisLastIntCrdDate, &s_FldProp_InvHisLastIntCrdDate ); break; 
         case 40006481: pField = new BFDecimalField( InvHisAcurdToDate, &s_FldProp_InvHisAcurdToDate ); break; 
         case 40006482: pField = new BFTextField<20>( InvHisTransType, &s_FldProp_InvHisTransType ); break; 
         case 40006483: pField = new BFDateField( InvHisTradeDate, &s_FldProp_InvHisTradeDate ); break; 
         case 40006484: pField = new BFDecimalField( InvHisPrincipalGrossMoneyOut, &s_FldProp_InvHisPrincipalGrossMoneyOut ); break; 
         case 40006485: pField = new BFDecimalField( InvHisMVA, &s_FldProp_InvHisMVA ); break; 
         case 40006487: pField = new BFDecimalField( InvHisAdminFee, &s_FldProp_InvHisAdminFee ); break; 
         case 40006488: pField = new BFDecimalField( InvHisNetOfFees, &s_FldProp_InvHisNetOfFees ); break; 
         case 40006489: pField = new BFDateField( InvHisIntDate, &s_FldProp_InvHisIntDate ); break; 
         case 40006490: pField = new BFDecimalField( InvHisIntAmt, &s_FldProp_InvHisIntAmt ); break; 
         case 40006491: pField = new BFNumericField( ProgressiveInvTerm, &s_FldProp_ProgressiveInvTerm ); break; 
         case 40006492: pField = new BFDecimalField( ProgressiveIntRate, &s_FldProp_ProgressiveIntRate ); break; 
         case 40006493: pField = new BFTextField<20>( SegmentIntDate, &s_FldProp_SegmentIntDate ); break; 
         case 40006494: pField = new BFDecimalField( SegmentIntValue, &s_FldProp_SegmentIntValue ); break; 
         case 40006498: pField = new BFTextField_60( IntInvestUUID, &s_FldProp_IntInvestUUID ); break; 
         case 40006500: pField = new BFTextField<50>( InvestmentHistoryDetailsIntList, &s_FldProp_InvestmentHistoryDetailsIntList ); break; 
         case 40006501: pField = new BFTextField_60( SharelotDetlUUID, &s_FldProp_SharelotDetlUUID ); break; 
         case 40006502: pField = new BFTextField_1( FundServBroker, &s_FldProp_FundServBroker ); break; 
         case 40006503: pField = new BFIntegerField( InvestTerm, &s_FldProp_InvestTerm ); break; 
         case 40006504: pField = new BFTextField_60( IntCalcMthd, &s_FldProp_IntCalcMthd ); break; 
         case 40006506: pField = new BFDateField( NextIntCredDate, &s_FldProp_NextIntCredDate ); break; 
         case 40006507: pField = new BFTextField_10( CommRedRate, &s_FldProp_CommRedRate ); break; 
         case 40006508: pField = new BFDecimalField( EstimatedRate, &s_FldProp_EstimatedRate ); break; 
         case 40006509: pField = new BFTextField_60( IntInvestType, &s_FldProp_IntInvestType ); break; 
         case 40006511: pField = new BFTextField_60( IntCredFreq, &s_FldProp_IntCredFreq ); break; 
         case 40006512: pField = new BFDecimalField( AddlAmt, &s_FldProp_AddlAmt ); break; 
         case 40006515: pField = new BFTextField_60( IntRateType, &s_FldProp_IntRateType ); break; 
         case 40006516: pField = new BFTextField_60( InvestStatus, &s_FldProp_InvestStatus ); break; 
         case 40006517: pField = new BFTextField_1( IsGIFund, &s_FldProp_IsGIFund ); break; 
         case 40006518: pField = new BFTextField_60( SimpleTermList, &s_FldProp_SimpleTermList ); break; 
         case 40006519: pField = new BFTextField_60( CompoundTermList, &s_FldProp_CompoundTermList ); break; 
         case 40006520: pField = new BFTextField_60( SimpleCredFreqList, &s_FldProp_SimpleCredFreqList ); break; 
         case 40006521: pField = new BFTextField_60( CompoundCredFreqList, &s_FldProp_CompoundCredFreqList ); break; 
         case 40006522: pField = new BFTextField<200>( CommRedRateList, &s_FldProp_CommRedRateList ); break; 
         case 40006523: pField = new BFTextField_60( IntCalcMthdList, &s_FldProp_IntCalcMthdList ); break; 
         case 40006526: pField = new BFTextField_60( ProgressiveRateUUID, &s_FldProp_ProgressiveRateUUID ); break; 
         case 40006527: pField = new BFDateField( LastIntCredDate, &s_FldProp_LastIntCredDate ); break; 
         case 40006530: pField = new BFTextField_60( ProgressiveIntRateDetailsList, &s_FldProp_ProgressiveIntRateDetailsList ); break; 
         case 40006531: pField = new BFTextField_60( InvestTermList, &s_FldProp_InvestTermList ); break; 
         case 40006532: pField = new BFTextField_60( AllocationTransType, &s_FldProp_AllocationTransType ); break; 
         case 40006533: pField = new BFDecimalField( InvHisLotId, &s_FldProp_InvHisLotId ); break; 
         case 40006534: pField = new BFDecimalField( InvHisInvestId, &s_FldProp_InvHisInvestId ); break; 
         case 40006535: pField = new BFDecimalField( InvHisTradeAmt, &s_FldProp_InvHisTradeAmt ); break; 
         case 40006536: pField = new BFDecimalField( InvHisAddlAmt, &s_FldProp_InvHisAddlAmt ); break; 
         case 40006537: pField = new BFDecimalField( InvHisEstimatedRate, &s_FldProp_InvHisEstimatedRate ); break; 
         case 40006538: pField = new BFDecimalField( ForcedRateAmt, &s_FldProp_ForcedRateAmt ); break; 
         case 40006540: pField = new BFTextField_1( RemainingFleg, &s_FldProp_RemainingFleg ); break; 
         case 40006541: pField = new BFTextField_60( RolloverType, &s_FldProp_RolloverType ); break; 
         case 40006542: pField = new BFTextField_60( BusinessType, &s_FldProp_BusinessType ); break; 
         case 40006544: pField = new BFTextField_1( SplitType, &s_FldProp_SplitType ); break; 
         case 40006545: pField = new BFTextField_60( CashSweepBal, &s_FldProp_CashSweepBal ); break; 
         case 40006546: pField = new BFDecimalField( SelectedAmt, &s_FldProp_SelectedAmt ); break; 
         case 40006547: pField = new BFTextField_60( DistribDetlUUID, &s_FldProp_DistribDetlUUID ); break; 
         case 40006548: pField = new BFDecimalField( IntInvestId, &s_FldProp_IntInvestId ); break; 
         case 40006549: pField = new BFDecimalField( FELAmt, &s_FldProp_FELAmt ); break; 
         case 40006550: pField = new BFIntegerField( IntInvestTerm, &s_FldProp_IntInvestTerm ); break; 
         case 40006553: pField = new BFTextField_60( MatSweepInstructListHeading, &s_FldProp_MatSweepInstructListHeading ); break; 
         case 40006554: pField = new BFTextField_60( MatInstrLevel, &s_FldProp_MatInstrLevel ); break; 
         case 40006555: pField = new BFTextField_60( MatSweepInstructDetailsListHeading, &s_FldProp_MatSweepInstructDetailsListHeading ); break; 
         case 40006562: pField = new BFTextField_60( MatSwpInstructionType, &s_FldProp_MatSwpInstructionType ); break; 
         case 40006572: pField = new BFTextField_1( PorfolioIsRequried, &s_FldProp_PorfolioIsRequried ); break; 
         case 40006573: pField = new BFTextField_1( CanHaveCashSweep, &s_FldProp_CanHaveCashSweep ); break; 
         case 40006574: pField = new BFTextField_1( CanHaveMatInstr, &s_FldProp_CanHaveMatInstr ); break; 
         case 40006575: pField = new BFTextField_1( CashSweepExists, &s_FldProp_CashSweepExists ); break; 
         case 40006576: pField = new BFTextField_1( MatIntExists, &s_FldProp_MatIntExists ); break; 
         case 40006577: pField = new BFTextField<50>( InvHisIncomeUUID, &s_FldProp_InvHisIncomeUUID ); break; 
         case 40006578: pField = new BFTextField<50>( InvHisSegmentUUID, &s_FldProp_InvHisSegmentUUID ); break; 
         case 40006580: pField = new BFIntegerField( InvHisSegment, &s_FldProp_InvHisSegment ); break; 
         case 40006581: pField = new BFTextField<50>( InvHisIntSegment, &s_FldProp_InvHisIntSegment ); break; 
         case 40006582: pField = new BFTextField<50>( InvHisCode, &s_FldProp_InvHisCode ); break; 
         case 40006583: pField = new BFDecimalField( InvHisRate, &s_FldProp_InvHisRate ); break; 
         case 40006585: pField = new BFTextField_1( NonReceiptApplicable, &s_FldProp_NonReceiptApplicable ); break; 
         case 40006586: pField = new BFTextField_1( GuaranteeCalcByRules, &s_FldProp_GuaranteeCalcByRules ); break; 
         case 40006587: pField = new BFDecimalField( BankAcctId, &s_FldProp_BankAcctId ); break; 
         case 40006588: pField = new BFTextField_60( BankAcctUse, &s_FldProp_BankAcctUse ); break; 
         case 40006589: pField = new BFIntegerField( BankTransitNo, &s_FldProp_BankTransitNo ); break; 
         case 40006590: pField = new BFIntegerField( BankSwiftCode, &s_FldProp_BankSwiftCode ); break; 
         case 40006591: pField = new BFIntegerField( BankRefNumber, &s_FldProp_BankRefNumber ); break; 
         case 40006592: pField = new BFDateField( BankStopDate, &s_FldProp_BankStopDate ); break; 
         case 40006593: pField = new BFTextField_60( BankCorrespondent, &s_FldProp_BankCorrespondent ); break; 
         case 40006594: pField = new BFBigDecimalField( DSTC0429_REQ, &s_FldProp_DSTC0429_REQ ); break; 
         case 40006596: pField = new BFBigDecimalField( DSTC0429_VW, &s_FldProp_DSTC0429_VW ); break; 
         case 40006597: pField = new BFTextField_60( InstrType, &s_FldProp_InstrType ); break; 
         case 40006598: pField = new BFDecimalField( BankId1, &s_FldProp_BankId1 ); break; 
         case 40006599: pField = new BFTextField<50>( InterestSegmentDetailsList, &s_FldProp_InterestSegmentDetailsList ); break; 
      }
      return pField;
   }
}
