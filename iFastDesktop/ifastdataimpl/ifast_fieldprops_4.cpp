// Data Field Properties
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Monday, May 29, 2017 16:26:16

#include "stdafx.h"
#include <bfdata/bfdataid.hpp>
#include "ifast_substitutions.h"
#include "ifast_masks.h"

namespace ifds
{
   extern const BFTextFieldId GroupCode;
   extern const BFTextFieldId GroupName1;
   extern const BFTextFieldId FamilyCode;
   extern const BFTextFieldId FamilyName;
   extern const BFTextFieldId FundRelnCode;
   extern const BFTextFieldId FundRelnDesc;
   extern const BFTextFieldId GroupName2;
   extern const BFDataId DSTC0071_VW;
   extern const BFDataId DSTC0071_VWRepeat_Record;
   extern const BFTextFieldId AddrDesc;
   extern const BFDecimalFieldId AddrId;
   extern const BFTextFieldId Province;
   extern const BFTextFieldId ProvinceName;
   extern const BFTextFieldId Country;
   extern const BFTextFieldId HoldMail;
   extern const BFDataId DSTCGLOB_VW;
   extern const BFTextFieldId Operator_Extension;
   extern const BFTextFieldId Profile;
   extern const BFTextFieldId Registry_Directory;
   extern const BFNumericFieldId Using_AWD;
   extern const BFNumericFieldId LastActiveAccountNum;
   extern const BFTextFieldId Management_Co;
   extern const BFTextFieldId Search_Type;
   extern const BFTextFieldId System;
   extern const BFDataId SUBSTITUTE_VW;
   extern const BFTextFieldId Substitute_Code;
   extern const BFTextFieldId Substitute_Description;
   extern const BFTextFieldId AllocType;
   extern const BFTextFieldId Initial;
   extern const BFDateFieldId LastProcDate;
   extern const BFTextFieldId Batch;
   extern const BFDateFieldId BatchDate;
   extern const BFTextFieldId TransferType;
   extern const BFTextFieldId FeeTypeDesc;
   extern const BFTextFieldId FrequencyDesc;
   extern const BFTextFieldId TransferTypeDesc;
   extern const BFDataId DSTC0067_REQ;
   extern const BFDataId DSTC0067_VW;
   extern const BFDataId DSTC0067_VWRepeat_Record;
   extern const BFTextFieldId PlanType;
   extern const BFDecimalFieldId RIFId;
   extern const BFTextFieldId RecTypeDesc;
   extern const BFTextFieldId SuppFedTax;
   extern const BFTextFieldId SuppProvTax;
   extern const BFDecimalFieldId FedRate;
   extern const BFTextFieldId FedRatePUD;
   extern const BFDecimalFieldId ProvRate;
   extern const BFTextFieldId ProvRatePUD;
   extern const BFDecimalFieldId NowPlanValue;
   extern const BFDecimalFieldId PYEPlanValue;
   extern const BFDecimalFieldId CalcMandYr;
   extern const BFDecimalFieldId CalcMaxYr;
   extern const BFDecimalFieldId MandAmtPay;
   extern const BFDecimalFieldId MandAmtYr;
   extern const BFTextFieldId PayOption;
   extern const BFTextFieldId PayOptionDesc;
   extern const BFDecimalFieldId MaxAmtYr;
   extern const BFTextFieldId TaxOnMin;
   extern const BFTextFieldId OverrideAmtYr;
   extern const BFDecimalFieldId IndexRate;
   extern const BFTextFieldId Qualified;
   extern const BFDateFieldId BatchEffective;
   extern const BFDateFieldId SpouseBirth;
   extern const BFDecimalFieldId PayTerm;
   extern const BFTextFieldId PayTermDesc;
   extern const BFTextFieldId Factor;
   extern const BFDecimalFieldId CansimRate;
   extern const BFTextFieldId UnsettledTrn;
   extern const BFNumericFieldId PendingRid;
   extern const BFTextFieldId TransPending;
   extern const BFTextFieldId Summary;
   extern const BFTextFieldId CallerName;
   extern const BFTextFieldId CallerPhoneNumber;
   extern const BFTextFieldId HomeFax;
   extern const BFTextFieldId PostUnsettled;
   extern const BFTextFieldId Indc;
   extern const BFTextFieldId ExpSetlGN;
   extern const BFTextFieldId DepositId;
   extern const BFTextFieldId SearchCriteria;
   extern const BFTextFieldId SearchAccountUsing;
   extern const BFTextFieldId SearchChequeUsing;
   extern const BFTextFieldId SearchCertificateUsing;
   extern const BFTextFieldId SearchLabels;
   extern const BFDataId CURRENCY_VW;
   extern const BFDecimalFieldId JapaneseCurrency;
   extern const BFDecimalFieldId CanadianCurrency;
   extern const BFDecimalFieldId USDollar;
   extern const BFDecimalFieldId EuroDollar;
   extern const BFDecimalFieldId IrishPounds;
   extern const BFDecimalFieldId LuxembourgFranc;
   extern const BFDecimalFieldId PortugueseEscudo;
   extern const BFDecimalFieldId ChgFactor;
   extern const BFDataId ListViewHeading;
   extern const BFTextFieldId EntityListViewHeading;
   extern const BFTextFieldId SelectEntityListHeading;
   extern const BFTextFieldId AcctDetailsHeading;
   extern const BFDateFieldId CurrBusDate;
   extern const BFTextFieldId ShrBankInstrAcctUseCode;
   extern const BFTextFieldId AccListHeading;
   extern const BFNumericFieldId AcctEntityVer;
   extern const BFDecimalFieldId AcctEntityRid;
   extern const BFNumericFieldId AcctEntityBenefVer;
   extern const BFDecimalFieldId AcctEntityBenefRid;
   extern const BFDecimalFieldId AcctEntityJointVer;
   extern const BFDecimalFieldId AcctEntityJointRid;
   extern const BFDecimalFieldId AssignDetlVer;
   extern const BFDecimalFieldId AssignDetlRid;
   extern const BFDecimalFieldId EntitySearchIdVer;
   extern const BFDecimalFieldId EntitySearchRid;
   extern const BFNumericFieldId AcctMstrVer;
   extern const BFDecimalFieldId AcctMstrRid;
   extern const BFDecimalFieldId RemarksDetlVer;
   extern const BFDecimalFieldId RemarksDetlRid;
   extern const BFDecimalFieldId BankDetlVer;
   extern const BFDecimalFieldId PrimMstrVer;
   extern const BFDecimalFieldId PrimMstrRid;
   extern const BFDateFieldId BirthDate2;
   extern const BFTextFieldId Gender2;
   extern const BFTextFieldId MaritalCode2;
   extern const BFTextFieldId MaritalDesc2;
   extern const BFTextFieldId Employer2;
   extern const BFDecimalFieldId EmployedYrs2;
   extern const BFTextFieldId TypeOfBusFreeFormat;
   extern const BFTextFieldId TypeOfBusFreeFormatDesc;
   extern const BFTextFieldId OccupationFreeFormat;
   extern const BFTextFieldId OccupationFreeFormatDesc;
   extern const BFTextFieldId AnnualIncomeCode2;
   extern const BFTextFieldId AnnualIncomeDesc2;
   extern const BFTextFieldId NetWorthCode2;
   extern const BFTextFieldId NetWorthDesc2;
   extern const BFTextFieldId InvObjCode2;
   extern const BFTextFieldId InvObjDesc2;
   extern const BFTextFieldId InvKnowledgeCode2;
   extern const BFTextFieldId InvKnowledgeDesc2;
   extern const BFTextFieldId InvHorizonCode2;
   extern const BFTextFieldId InvHorizonDesc2;
   extern const BFTextFieldId RiskToleranceCode2;
   extern const BFTextFieldId RiskToleranceDesc2;
   extern const BFTextFieldId OtherInvestments2;
   extern const BFTextFieldId AdvisorCode2;
   extern const BFTextFieldId AdvisorDesc2;
   extern const BFTextFieldId WitnessName2;
   extern const BFTextFieldId WitnessAddr12;
   extern const BFTextFieldId WitnessAddr2;
   extern const BFDateFieldId EffectiveDate2;
   extern const BFDateFieldId ProcessDate2;
   extern const BFTextFieldId PersonalSecCode2;
   extern const BFTextFieldId WitnessAddr22;
   extern const BFDecimalFieldId BankDetlRid;
   extern const BFDecimalFieldId DistribDetlVer;
   extern const BFDecimalFieldId DistribDetlRid;
   extern const BFTextFieldId RecordType;
   extern const BFTextFieldId YearDesc;
   extern const BFDecimalFieldId AddressFileVer;
   extern const BFDecimalFieldId AddressFileRid;
   extern const BFTextFieldId BankingInstr;
   extern const BFDecimalFieldId BankAcctVer;
   extern const BFDecimalFieldId BankAcctRid;
   extern const BFTextFieldId Baycom;
   extern const BFTextFieldId RSPflag;
   extern const BFTextFieldId LoadType;
   extern const BFTextFieldId RIFflag;
   extern const BFTextFieldId RecurDetlVer;
   extern const BFTextFieldId PACavail;
   extern const BFTextFieldId SWPavail;
   extern const BFTextFieldId FundStatus;
   extern const BFDateFieldId StatusDate;
   extern const BFDecimalFieldId EntityAddrVer;
   extern const BFDecimalFieldId EntityAddrRid;
   extern const BFDecimalFieldId EntityAddrXrefVer;
   extern const BFDecimalFieldId EntityAddrXrefRid;
   extern const BFTextFieldId DistributionHeadingSet;
   extern const BFTextFieldId VerifySearchHeadingSet;
   extern const BFTextFieldId AllocationUsage;
   extern const BFTextFieldId FreeUnitHeadingSet;
   extern const BFTextFieldId ConsolEFT;
   extern const BFTextFieldId SystematicTransType;
   extern const BFDecimalFieldId Level;
   extern const BFDateFieldId LastEvent;
   extern const BFTextFieldId WireElig;
   extern const BFTextFieldId Domestic;
   extern const BFTextFieldId ACBListHeading;
   extern const BFTextFieldId TransactionHeading;
   extern const BFTextFieldId PendingHeading;
   extern const BFTextFieldId PendingOrTransHist;
   extern const BFDecimalFieldId TransactionAmount;
   extern const BFDataId DSTC0072_REQ;
   extern const BFDataId DSTC0072_REQRepeat_Record;
   extern const BFDataId DSTC0072_VW;
   extern const BFTextFieldId UpdateStatus;
   extern const BFTextFieldId RunMode;
   extern const BFNumericFieldId AddrFileVer;
   extern const BFNumericFieldId AddrFileRid;
   extern const BFTextFieldId RegAddrCode;
   extern const BFDataId DSTC0073_REQ;
   extern const BFDataId DSTC0074_REQ;
   extern const BFTextFieldId CommitFlag;
   extern const BFDataId DSTC0074_VW;
   extern const BFTextFieldId KeyType;
   extern const BFTextFieldId TempValue;
   extern const BFTextFieldId PermValue;

   //------------------------------------------------------------------
   // Field s_FldProp_GroupCode (800)
   //------------------------------------------------------------------
   const DString& s_FldProp_GroupCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_800_5( I_("  ") );
      return( dstrDefValue_800_5 );
   }
   const DString& s_FldProp_GroupCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_800_5( I_("GroupCode   ") );
      return( dstrFldLabel_800_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GroupCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,GroupCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GroupCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GroupCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GroupName1 (801)
   //------------------------------------------------------------------
   const DString& s_FldProp_GroupName1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_801_4( I_("  ") );
      return( dstrDefValue_801_4 );
   }
   const DString& s_FldProp_GroupName1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_801_4( I_("GroupName1  ") );
      return( dstrFldLabel_801_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GroupName1(
       BFDataFieldProperties::Type::text // field is a text field
      ,GroupName1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GroupName1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GroupName1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FamilyCode (802)
   //------------------------------------------------------------------
   const DString& s_FldProp_FamilyCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_802_4( I_("                                                  ") );
      return( dstrDefValue_802_4 );
   }
   const DString& s_FldProp_FamilyCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_802_4( I_("FamilyCode ") );
      return( dstrFldLabel_802_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FamilyCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,FamilyCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FamilyCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FamilyCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FamilyName (803)
   //------------------------------------------------------------------
   const DString& s_FldProp_FamilyName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_803_4( I_("                                        ") );
      return( dstrDefValue_803_4 );
   }
   const DString& s_FldProp_FamilyName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_803_4( I_("FamilyName ") );
      return( dstrFldLabel_803_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FamilyName(
       BFDataFieldProperties::Type::text // field is a text field
      ,FamilyName // fieldId
      ,40 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FamilyName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FamilyName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundRelnCode (804)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundRelnCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_804_4( I_("01 ") );
      return( dstrDefValue_804_4 );
   }
   const DString& s_FldProp_FundRelnCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_804_4( I_("FundRelnCode  ") );
      return( dstrFldLabel_804_4 );
   }
   PBF_SSC subset_super_chooser_2_804( const ClientLocale& locale )
   {
      return chooser_ss_002_021; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundRelnCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundRelnCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundRelnCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundRelnCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_804 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundRelnDesc (805)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundRelnDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_805_5( I_("                                                  ") );
      return( dstrDefValue_805_5 );
   }
   const DString& s_FldProp_FundRelnDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_805_5( I_("FundRelnDesc ") );
      return( dstrFldLabel_805_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundRelnDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundRelnDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundRelnDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundRelnDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GroupName2 (806)
   //------------------------------------------------------------------
   const DString& s_FldProp_GroupName2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_806_4( I_("                                                  ") );
      return( dstrDefValue_806_4 );
   }
   const DString& s_FldProp_GroupName2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_806_4( I_("GroupName2 ") );
      return( dstrFldLabel_806_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GroupName2(
       BFDataFieldProperties::Type::text // field is a text field
      ,GroupName2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GroupName2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GroupName2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrDesc (809)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_809_4( I_("                                                  ") );
      return( dstrDefValue_809_4 );
   }
   const DString& s_FldProp_AddrDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_809_4( I_("AddrDesc ") );
      return( dstrFldLabel_809_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrId (810)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_810_5( I_(" ") );
      return( dstrDefValue_810_5 );
   }
   double s_FldProp_AddrId_d_DVF( const ClientLocale& locale )
   {
      return( 0.0 );
   }
   const DString& s_FldProp_AddrId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_810_5( I_("AddrId") );
      return( dstrFldLabel_810_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrId(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AddrId // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_AddrId_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AddrId_d_DVF // default value
      ,s_FldProp_AddrId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Province (811)
   //------------------------------------------------------------------
   const DString& s_FldProp_Province_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_811_4( I_(" ") );
      return( dstrDefValue_811_4 );
   }
   const DString& s_FldProp_Province_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_811_4( I_("Province") );
      return( dstrFldLabel_811_4 );
   }
   PBF_SSC subset_super_chooser_2_811( const ClientLocale& locale )
   {
      return chooser_ss_002_013; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Province(
       BFDataFieldProperties::Type::text // field is a text field
      ,Province // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Province_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Province_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_811 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvinceName (812)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvinceName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_812_4( I_(" ") );
      return( dstrDefValue_812_4 );
   }
   const DString& s_FldProp_ProvinceName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_812_4( I_("ProvinceName") );
      return( dstrFldLabel_812_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvinceName(
       BFDataFieldProperties::Type::text // field is a text field
      ,ProvinceName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ProvinceName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ProvinceName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Country (813)
   //------------------------------------------------------------------
   const DString& s_FldProp_Country_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_813_5( I_("                                                  ") );
      return( dstrDefValue_813_5 );
   }
   const DString& s_FldProp_Country_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_813_5( I_("Country  ") );
      return( dstrFldLabel_813_5 );
   }
   PBF_SSC subset_super_chooser_2_813( const ClientLocale& locale )
   {
      return chooser_ss_002_013; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Country(
       BFDataFieldProperties::Type::text // field is a text field
      ,Country // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Country_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Country_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_813 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HoldMail (814)
   //------------------------------------------------------------------
   const DString& s_FldProp_HoldMail_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_814_5( I_("N") );
      return( dstrDefValue_814_5 );
   }
   const DString& s_FldProp_HoldMail_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_814_5( I_("HoldMail") );
      return( dstrFldLabel_814_5 );
   }
   PBF_SSC subset_super_chooser_2_814( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HoldMail(
       BFDataFieldProperties::Type::text // field is a text field
      ,HoldMail // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HoldMail_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HoldMail_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_814 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Operator_Extension (816)
   //------------------------------------------------------------------
   const DString& s_FldProp_Operator_Extension_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_816_4( I_("          ") );
      return( dstrDefValue_816_4 );
   }
   const DString& s_FldProp_Operator_Extension_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_816_4( I_("Operator_Extension ") );
      return( dstrFldLabel_816_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Operator_Extension(
       BFDataFieldProperties::Type::text // field is a text field
      ,Operator_Extension // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Operator_Extension_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Operator_Extension_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Profile (817)
   //------------------------------------------------------------------
   const DString& s_FldProp_Profile_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_817_4( I_("                                        ") );
      return( dstrDefValue_817_4 );
   }
   const DString& s_FldProp_Profile_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_817_4( I_("Profile ") );
      return( dstrFldLabel_817_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Profile(
       BFDataFieldProperties::Type::text // field is a text field
      ,Profile // fieldId
      ,40 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Profile_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Profile_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Registry_Directory (818)
   //------------------------------------------------------------------
   const DString& s_FldProp_Registry_Directory_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_818_5( I_("                                                  ") );
      return( dstrDefValue_818_5 );
   }
   const DString& s_FldProp_Registry_Directory_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_818_5( I_("Registry_Directory ") );
      return( dstrFldLabel_818_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Registry_Directory(
       BFDataFieldProperties::Type::text // field is a text field
      ,Registry_Directory // fieldId
      ,100 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Registry_Directory_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Registry_Directory_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Using_AWD (819)
   //------------------------------------------------------------------
   const DString& s_FldProp_Using_AWD_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_819_4( I_("0") );
      return( dstrDefValue_819_4 );
   }
   DIINT64 s_FldProp_Using_AWD_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_Using_AWD_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_819_4( I_("Using_AWD ") );
      return( dstrFldLabel_819_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Using_AWD(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,Using_AWD // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Using_AWD_s_DVF // default value
      ,s_FldProp_Using_AWD_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_Using_AWD_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastActiveAccountNum (820)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastActiveAccountNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_820_5( I_("0") );
      return( dstrDefValue_820_5 );
   }
   DIINT64 s_FldProp_LastActiveAccountNum_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_LastActiveAccountNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_820_5( I_("LastActiveAccountNum") );
      return( dstrFldLabel_820_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastActiveAccountNum(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,LastActiveAccountNum // fieldId
      ,17 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_27 // mask chooser function
      ,s_FldProp_LastActiveAccountNum_s_DVF // default value
      ,s_FldProp_LastActiveAccountNum_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_LastActiveAccountNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Management_Co (821)
   //------------------------------------------------------------------
   const DString& s_FldProp_Management_Co_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_821_8( I_("  ") );
      return( dstrDefValue_821_8 );
   }
   const DString& s_FldProp_Management_Co_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_821_8( I_("Management_Co ") );
      return( dstrFldLabel_821_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Management_Co(
       BFDataFieldProperties::Type::text // field is a text field
      ,Management_Co // fieldId
      ,2 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Management_Co_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Management_Co_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Search_Type (822)
   //------------------------------------------------------------------
   const DString& s_FldProp_Search_Type_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_822_4( I_("                                                  ") );
      return( dstrDefValue_822_4 );
   }
   const DString& s_FldProp_Search_Type_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_822_4( I_("Search_Type ") );
      return( dstrFldLabel_822_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Search_Type(
       BFDataFieldProperties::Type::text // field is a text field
      ,Search_Type // fieldId
      ,50 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Search_Type_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Search_Type_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_System (823)
   //------------------------------------------------------------------
   const DString& s_FldProp_System_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_823_5( I_("    ") );
      return( dstrDefValue_823_5 );
   }
   const DString& s_FldProp_System_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_823_5( I_("System ") );
      return( dstrFldLabel_823_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_System(
       BFDataFieldProperties::Type::text // field is a text field
      ,System // fieldId
      ,4 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_System_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_System_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Substitute_Code (825)
   //------------------------------------------------------------------
   const DString& s_FldProp_Substitute_Code_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_825_4( I_(" ") );
      return( dstrDefValue_825_4 );
   }
   const DString& s_FldProp_Substitute_Code_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_825_4( I_("Substitute_Code ") );
      return( dstrFldLabel_825_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Substitute_Code(
       BFDataFieldProperties::Type::text // field is a text field
      ,Substitute_Code // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Substitute_Code_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Substitute_Code_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Substitute_Description (826)
   //------------------------------------------------------------------
   const DString& s_FldProp_Substitute_Description_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_826_5( I_(" ") );
      return( dstrDefValue_826_5 );
   }
   const DString& s_FldProp_Substitute_Description_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_826_5( I_("Substitute_Description ") );
      return( dstrFldLabel_826_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Substitute_Description(
       BFDataFieldProperties::Type::text // field is a text field
      ,Substitute_Description // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Substitute_Description_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Substitute_Description_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocType (827)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_827_4( I_("  ") );
      return( dstrDefValue_827_4 );
   }
   const DString& s_FldProp_AllocType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_827_4( I_("AllocType") );
      return( dstrFldLabel_827_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocType(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllocType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllocType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllocType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Initial (828)
   //------------------------------------------------------------------
   const DString& s_FldProp_Initial_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_828_4( I_(" ") );
      return( dstrDefValue_828_4 );
   }
   const DString& s_FldProp_Initial_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_828_4( I_("Initial") );
      return( dstrFldLabel_828_4 );
   }
   PBF_SSC subset_super_chooser_2_828( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Initial(
       BFDataFieldProperties::Type::text // field is a text field
      ,Initial // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Initial_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Initial_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_828 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastProcDate (829)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastProcDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_829_4( I_("  ") );
      return( dstrDefValue_829_4 );
   }
   const DString& s_FldProp_LastProcDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_829_4( I_("LastProcDate ") );
      return( dstrFldLabel_829_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastProcDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,LastProcDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LastProcDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LastProcDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Batch (830)
   //------------------------------------------------------------------
   const DString& s_FldProp_Batch_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_830_4( I_("  ") );
      return( dstrDefValue_830_4 );
   }
   const DString& s_FldProp_Batch_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_830_4( I_("Batch ") );
      return( dstrFldLabel_830_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Batch(
       BFDataFieldProperties::Type::text // field is a text field
      ,Batch // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Batch_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Batch_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BatchDate (831)
   //------------------------------------------------------------------
   const DString& s_FldProp_BatchDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_831_5( I_("  ") );
      return( dstrDefValue_831_5 );
   }
   const DString& s_FldProp_BatchDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_831_5( I_("BatchDate ") );
      return( dstrFldLabel_831_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BatchDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,BatchDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BatchDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BatchDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransferType (832)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransferType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_832_4( I_("    ") );
      return( dstrDefValue_832_4 );
   }
   const DString& s_FldProp_TransferType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_832_4( I_("TransferType   ") );
      return( dstrFldLabel_832_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransferType(
       BFDataFieldProperties::Type::text // field is a text field
      ,TransferType // fieldId
      ,80 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransferType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TransferType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeTypeDesc (833)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_833_5( I_("  ") );
      return( dstrDefValue_833_5 );
   }
   const DString& s_FldProp_FeeTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_833_5( I_("FeeTypeDesc ") );
      return( dstrFldLabel_833_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,FeeTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FeeTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FeeTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FrequencyDesc (834)
   //------------------------------------------------------------------
   const DString& s_FldProp_FrequencyDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_834_8( I_("  ") );
      return( dstrDefValue_834_8 );
   }
   const DString& s_FldProp_FrequencyDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_834_8( I_("FrequencyDesc ") );
      return( dstrFldLabel_834_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FrequencyDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,FrequencyDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FrequencyDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FrequencyDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransferTypeDesc (835)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransferTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_835_4( I_("  ") );
      return( dstrDefValue_835_4 );
   }
   const DString& s_FldProp_TransferTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_835_4( I_("TransferTypeDesc ") );
      return( dstrFldLabel_835_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransferTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,TransferTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransferTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TransferTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PlanType (839)
   //------------------------------------------------------------------
   const DString& s_FldProp_PlanType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_839_5( I_("                                                  ") );
      return( dstrDefValue_839_5 );
   }
   const DString& s_FldProp_PlanType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_839_5( I_("PlanType ") );
      return( dstrFldLabel_839_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PlanType(
       BFDataFieldProperties::Type::text // field is a text field
      ,PlanType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PlanType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PlanType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RIFId (840)
   //------------------------------------------------------------------
   const DString& s_FldProp_RIFId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_840_4( I_("0") );
      return( dstrDefValue_840_4 );
   }
   double s_FldProp_RIFId_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_RIFId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_840_4( I_("RIFId ") );
      return( dstrFldLabel_840_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RIFId(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RIFId // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_RIFId_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RIFId_d_DVF // default value
      ,s_FldProp_RIFId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RecTypeDesc (841)
   //------------------------------------------------------------------
   const DString& s_FldProp_RecTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_841_4( I_("                                                  ") );
      return( dstrDefValue_841_4 );
   }
   const DString& s_FldProp_RecTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_841_4( I_("RecTypeDesc ") );
      return( dstrFldLabel_841_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RecTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,RecTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RecTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RecTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SuppFedTax (842)
   //------------------------------------------------------------------
   const DString& s_FldProp_SuppFedTax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_842_4( I_("N") );
      return( dstrDefValue_842_4 );
   }
   const DString& s_FldProp_SuppFedTax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_842_4( I_("SuppFedTax") );
      return( dstrFldLabel_842_4 );
   }
   PBF_SSC subset_super_chooser_2_842( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SuppFedTax(
       BFDataFieldProperties::Type::text // field is a text field
      ,SuppFedTax // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SuppFedTax_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SuppFedTax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_842 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SuppProvTax (843)
   //------------------------------------------------------------------
   const DString& s_FldProp_SuppProvTax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_843_4( I_("N") );
      return( dstrDefValue_843_4 );
   }
   const DString& s_FldProp_SuppProvTax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_843_4( I_("SuppProvTax") );
      return( dstrFldLabel_843_4 );
   }
   PBF_SSC subset_super_chooser_2_843( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SuppProvTax(
       BFDataFieldProperties::Type::text // field is a text field
      ,SuppProvTax // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SuppProvTax_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SuppProvTax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_843 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FedRate (844)
   //------------------------------------------------------------------
   const DString& s_FldProp_FedRate_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_844_5( I_("0.0") );
         return( dstrDefValue_844_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_844_8( I_("0.0") );
         return( dstrDefValue_844_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_844_7( I_("0.0") );
         return( dstrDefValue_844_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_844_6( I_("0.0") );
         return( dstrDefValue_844_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_844_3( I_("0.0") );
         return( dstrDefValue_844_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_844_1( I_("0.0") );
         return( dstrDefValue_844_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_844_4( I_("0.0000000000") );
         return( dstrDefValue_844_4 );
      }
      static const DString dstrDefValue_844_1( I_("0.0") );
      return( dstrDefValue_844_1 );
   }
   double s_FldProp_FedRate_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_FedRate_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_844_5( I_("FedRate ") );
         return( dstrFldLabel_844_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_844_8( I_("FedRate ") );
         return( dstrFldLabel_844_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_844_7( I_("FedRate ") );
         return( dstrFldLabel_844_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_844_6( I_("FedRate ") );
         return( dstrFldLabel_844_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_844_3( I_("FedRate ") );
         return( dstrFldLabel_844_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_844_1( I_("FedRate ") );
         return( dstrFldLabel_844_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_844_4( I_("FedRate ") );
         return( dstrFldLabel_844_4 );
      }
      static const DString dstrFldLabel_844_1( I_("FedRate ") );
      return( dstrFldLabel_844_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FedRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FedRate // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FedRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FedRate_d_DVF // default value
      ,s_FldProp_FedRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FedRatePUD (845)
   //------------------------------------------------------------------
   const DString& s_FldProp_FedRatePUD_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_845_4( I_(" ") );
         return( dstrDefValue_845_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_845_7( I_("Percent") );
         return( dstrDefValue_845_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_845_5( I_("P") );
         return( dstrDefValue_845_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_845_8( I_("P") );
         return( dstrDefValue_845_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_845_3( I_("P") );
         return( dstrDefValue_845_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_845_1( I_("P") );
         return( dstrDefValue_845_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_845_6( I_("Percent") );
         return( dstrDefValue_845_6 );
      }
      static const DString dstrDefValue_845_1( I_("P") );
      return( dstrDefValue_845_1 );
   }
   const DString& s_FldProp_FedRatePUD_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_845_4( I_("FedRatePUD") );
         return( dstrFldLabel_845_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_845_7( I_("FedRatePUD") );
         return( dstrFldLabel_845_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_845_5( I_("FedRatePUD") );
         return( dstrFldLabel_845_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_845_8( I_("FedRatePUD") );
         return( dstrFldLabel_845_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_845_3( I_("FedRatePUD") );
         return( dstrFldLabel_845_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_845_1( I_("FedRatePUD") );
         return( dstrFldLabel_845_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_845_6( I_("FedRatePUD") );
         return( dstrFldLabel_845_6 );
      }
      static const DString dstrFldLabel_845_1( I_("FedRatePUD") );
      return( dstrFldLabel_845_1 );
   }
   PBF_SSC subset_super_chooser_2_845( const ClientLocale& locale )
   {
      return chooser_ss_002_145; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FedRatePUD(
       BFDataFieldProperties::Type::text // field is a text field
      ,FedRatePUD // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FedRatePUD_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FedRatePUD_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_845 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvRate (846)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvRate_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_846_5( I_("0.0") );
         return( dstrDefValue_846_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_846_7( I_("0.0") );
         return( dstrDefValue_846_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_846_8( I_("0.0") );
         return( dstrDefValue_846_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_846_6( I_("0.0") );
         return( dstrDefValue_846_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_846_4( I_("0.0000000000") );
         return( dstrDefValue_846_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_846_3( I_("0.0") );
         return( dstrDefValue_846_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_846_1( I_("0.0") );
         return( dstrDefValue_846_1 );
      }
      static const DString dstrDefValue_846_1( I_("0.0") );
      return( dstrDefValue_846_1 );
   }
   double s_FldProp_ProvRate_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_ProvRate_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_846_5( I_("ProvRate ") );
         return( dstrFldLabel_846_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_846_7( I_("ProvRate ") );
         return( dstrFldLabel_846_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_846_8( I_("ProvRate ") );
         return( dstrFldLabel_846_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_846_6( I_("ProvRate ") );
         return( dstrFldLabel_846_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_846_4( I_("ProvRate ") );
         return( dstrFldLabel_846_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_846_3( I_("ProvRate ") );
         return( dstrFldLabel_846_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_846_1( I_("ProvRate ") );
         return( dstrFldLabel_846_1 );
      }
      static const DString dstrFldLabel_846_1( I_("ProvRate ") );
      return( dstrFldLabel_846_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ProvRate // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ProvRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ProvRate_d_DVF // default value
      ,s_FldProp_ProvRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvRatePUD (847)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvRatePUD_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_847_5( I_("P") );
         return( dstrDefValue_847_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_847_7( I_("Percent") );
         return( dstrDefValue_847_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_847_8( I_("P") );
         return( dstrDefValue_847_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_847_6( I_("Percent") );
         return( dstrDefValue_847_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_847_3( I_("P") );
         return( dstrDefValue_847_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_847_1( I_("P") );
         return( dstrDefValue_847_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_847_4( I_(" ") );
         return( dstrDefValue_847_4 );
      }
      static const DString dstrDefValue_847_1( I_("P") );
      return( dstrDefValue_847_1 );
   }
   const DString& s_FldProp_ProvRatePUD_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_847_5( I_("ProvRatePUD") );
         return( dstrFldLabel_847_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_847_7( I_("ProvRatePUD") );
         return( dstrFldLabel_847_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_847_8( I_("ProvRatePUD") );
         return( dstrFldLabel_847_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_847_6( I_("ProvRatePUD") );
         return( dstrFldLabel_847_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_847_3( I_("ProvRatePUD") );
         return( dstrFldLabel_847_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_847_1( I_("ProvRatePUD") );
         return( dstrFldLabel_847_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_847_4( I_("ProvRatePUD") );
         return( dstrFldLabel_847_4 );
      }
      static const DString dstrFldLabel_847_1( I_("ProvRatePUD") );
      return( dstrFldLabel_847_1 );
   }
   PBF_SSC subset_super_chooser_2_847( const ClientLocale& locale )
   {
      return chooser_ss_002_145; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvRatePUD(
       BFDataFieldProperties::Type::text // field is a text field
      ,ProvRatePUD // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ProvRatePUD_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ProvRatePUD_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_847 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NowPlanValue (848)
   //------------------------------------------------------------------
   const DString& s_FldProp_NowPlanValue_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_848_4( I_("0.0000000000") );
         return( dstrDefValue_848_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_848_7( I_("0") );
         return( dstrDefValue_848_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_848_5( I_("0") );
         return( dstrDefValue_848_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_848_8( I_("0") );
         return( dstrDefValue_848_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_848_3( I_("0") );
         return( dstrDefValue_848_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_848_1( I_("0") );
         return( dstrDefValue_848_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_848_6( I_("0") );
         return( dstrDefValue_848_6 );
      }
      static const DString dstrDefValue_848_1( I_("0") );
      return( dstrDefValue_848_1 );
   }
   double s_FldProp_NowPlanValue_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_NowPlanValue_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_848_4( I_("NowPlanValue ") );
         return( dstrFldLabel_848_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_848_7( I_("NowPlanValue ") );
         return( dstrFldLabel_848_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_848_5( I_("NowPlanValue ") );
         return( dstrFldLabel_848_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_848_8( I_("NowPlanValue ") );
         return( dstrFldLabel_848_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_848_3( I_("NowPlanValue ") );
         return( dstrFldLabel_848_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_848_1( I_("NowPlanValue ") );
         return( dstrFldLabel_848_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_848_6( I_("NowPlanValue ") );
         return( dstrFldLabel_848_6 );
      }
      static const DString dstrFldLabel_848_1( I_("NowPlanValue ") );
      return( dstrFldLabel_848_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NowPlanValue(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,NowPlanValue // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_NowPlanValue_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_NowPlanValue_d_DVF // default value
      ,s_FldProp_NowPlanValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PYEPlanValue (849)
   //------------------------------------------------------------------
   const DString& s_FldProp_PYEPlanValue_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_849_5( I_("0") );
         return( dstrDefValue_849_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_849_8( I_("0") );
         return( dstrDefValue_849_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_849_7( I_("0") );
         return( dstrDefValue_849_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_849_6( I_("0") );
         return( dstrDefValue_849_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_849_4( I_("0.0000000000") );
         return( dstrDefValue_849_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_849_3( I_("0") );
         return( dstrDefValue_849_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_849_1( I_("0") );
         return( dstrDefValue_849_1 );
      }
      static const DString dstrDefValue_849_1( I_("0") );
      return( dstrDefValue_849_1 );
   }
   double s_FldProp_PYEPlanValue_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_PYEPlanValue_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_849_5( I_("PYEPlanValue ") );
         return( dstrFldLabel_849_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_849_8( I_("PYEPlanValue ") );
         return( dstrFldLabel_849_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_849_7( I_("PYEPlanValue ") );
         return( dstrFldLabel_849_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_849_6( I_("PYEPlanValue ") );
         return( dstrFldLabel_849_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_849_4( I_("PYEPlanValue ") );
         return( dstrFldLabel_849_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_849_3( I_("PYEPlanValue ") );
         return( dstrFldLabel_849_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_849_1( I_("PYEPlanValue ") );
         return( dstrFldLabel_849_1 );
      }
      static const DString dstrFldLabel_849_1( I_("PYEPlanValue ") );
      return( dstrFldLabel_849_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PYEPlanValue(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PYEPlanValue // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_PYEPlanValue_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PYEPlanValue_d_DVF // default value
      ,s_FldProp_PYEPlanValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CalcMandYr (850)
   //------------------------------------------------------------------
   const DString& s_FldProp_CalcMandYr_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_850_4( I_("0.0000000000") );
         return( dstrDefValue_850_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_850_7( I_("0") );
         return( dstrDefValue_850_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_850_8( I_("0") );
         return( dstrDefValue_850_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_850_5( I_("0") );
         return( dstrDefValue_850_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_850_1( I_("0") );
         return( dstrDefValue_850_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_850_6( I_("0") );
         return( dstrDefValue_850_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_850_3( I_("0") );
         return( dstrDefValue_850_3 );
      }
      static const DString dstrDefValue_850_1( I_("0") );
      return( dstrDefValue_850_1 );
   }
   double s_FldProp_CalcMandYr_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_CalcMandYr_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_850_4( I_("CalcMandYr ") );
         return( dstrFldLabel_850_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_850_7( I_("CalcMandYr ") );
         return( dstrFldLabel_850_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_850_8( I_("CalcMandYr ") );
         return( dstrFldLabel_850_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_850_5( I_("CalcMandYr ") );
         return( dstrFldLabel_850_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_850_1( I_("CalcMandYr ") );
         return( dstrFldLabel_850_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_850_6( I_("CalcMandYr ") );
         return( dstrFldLabel_850_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_850_3( I_("CalcMandYr ") );
         return( dstrFldLabel_850_3 );
      }
      static const DString dstrFldLabel_850_1( I_("CalcMandYr ") );
      return( dstrFldLabel_850_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CalcMandYr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,CalcMandYr // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_CalcMandYr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_CalcMandYr_d_DVF // default value
      ,s_FldProp_CalcMandYr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CalcMaxYr (851)
   //------------------------------------------------------------------
   const DString& s_FldProp_CalcMaxYr_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_851_4( I_("0.0000000000") );
         return( dstrDefValue_851_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_851_7( I_("0") );
         return( dstrDefValue_851_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_851_5( I_("0") );
         return( dstrDefValue_851_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_851_8( I_("0") );
         return( dstrDefValue_851_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_851_3( I_("0") );
         return( dstrDefValue_851_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_851_1( I_("0") );
         return( dstrDefValue_851_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_851_6( I_("0") );
         return( dstrDefValue_851_6 );
      }
      static const DString dstrDefValue_851_1( I_("0") );
      return( dstrDefValue_851_1 );
   }
   double s_FldProp_CalcMaxYr_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_CalcMaxYr_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_851_4( I_("CalcMaxYr ") );
         return( dstrFldLabel_851_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_851_7( I_("CalcMaxYr ") );
         return( dstrFldLabel_851_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_851_5( I_("CalcMaxYr ") );
         return( dstrFldLabel_851_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_851_8( I_("CalcMaxYr ") );
         return( dstrFldLabel_851_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_851_3( I_("CalcMaxYr ") );
         return( dstrFldLabel_851_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_851_1( I_("CalcMaxYr ") );
         return( dstrFldLabel_851_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_851_6( I_("CalcMaxYr ") );
         return( dstrFldLabel_851_6 );
      }
      static const DString dstrFldLabel_851_1( I_("CalcMaxYr ") );
      return( dstrFldLabel_851_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CalcMaxYr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,CalcMaxYr // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_CalcMaxYr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_CalcMaxYr_d_DVF // default value
      ,s_FldProp_CalcMaxYr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MandAmtPay (852)
   //------------------------------------------------------------------
   const DString& s_FldProp_MandAmtPay_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_852_5( I_("0.0") );
         return( dstrDefValue_852_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_852_7( I_("0.0") );
         return( dstrDefValue_852_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_852_8( I_("0.0") );
         return( dstrDefValue_852_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_852_6( I_("0.0") );
         return( dstrDefValue_852_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_852_4( I_("0.0000000000") );
         return( dstrDefValue_852_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_852_3( I_("0.0") );
         return( dstrDefValue_852_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_852_1( I_("0.0") );
         return( dstrDefValue_852_1 );
      }
      static const DString dstrDefValue_852_1( I_("0.0") );
      return( dstrDefValue_852_1 );
   }
   double s_FldProp_MandAmtPay_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_MandAmtPay_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_852_5( I_("MandAmtPay ") );
         return( dstrFldLabel_852_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_852_7( I_("MandAmtPay ") );
         return( dstrFldLabel_852_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_852_8( I_("MandAmtPay ") );
         return( dstrFldLabel_852_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_852_6( I_("MandAmtPay ") );
         return( dstrFldLabel_852_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_852_4( I_("MandAmtPay ") );
         return( dstrFldLabel_852_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_852_3( I_("MandAmtPay ") );
         return( dstrFldLabel_852_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_852_1( I_("MandAmtPay ") );
         return( dstrFldLabel_852_1 );
      }
      static const DString dstrFldLabel_852_1( I_("MandAmtPay ") );
      return( dstrFldLabel_852_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MandAmtPay(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MandAmtPay // fieldId
      ,23 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_MandAmtPay_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MandAmtPay_d_DVF // default value
      ,s_FldProp_MandAmtPay_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MandAmtYr (853)
   //------------------------------------------------------------------
   const DString& s_FldProp_MandAmtYr_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_853_7( I_("0.0") );
         return( dstrDefValue_853_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_853_1( I_("0.0") );
         return( dstrDefValue_853_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_853_3( I_("0.0") );
         return( dstrDefValue_853_3 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_853_4( I_("0.0000000000") );
         return( dstrDefValue_853_4 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_853_6( I_("0.0") );
         return( dstrDefValue_853_6 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_853_8( I_("0.0") );
         return( dstrDefValue_853_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_853_5( I_("0.0") );
         return( dstrDefValue_853_5 );
      }
      static const DString dstrDefValue_853_1( I_("0.0") );
      return( dstrDefValue_853_1 );
   }
   double s_FldProp_MandAmtYr_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_MandAmtYr_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_853_7( I_("MandAmtYr ") );
         return( dstrFldLabel_853_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_853_1( I_("MandAmtYr ") );
         return( dstrFldLabel_853_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_853_3( I_("MandAmtYr ") );
         return( dstrFldLabel_853_3 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_853_4( I_("MandAmtYr ") );
         return( dstrFldLabel_853_4 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_853_6( I_("MandAmtYr ") );
         return( dstrFldLabel_853_6 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_853_8( I_("MandAmtYr ") );
         return( dstrFldLabel_853_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_853_5( I_("MandAmtYr ") );
         return( dstrFldLabel_853_5 );
      }
      static const DString dstrFldLabel_853_1( I_("MandAmtYr ") );
      return( dstrFldLabel_853_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MandAmtYr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MandAmtYr // fieldId
      ,23 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_MandAmtYr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MandAmtYr_d_DVF // default value
      ,s_FldProp_MandAmtYr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayOption (854)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayOption_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_854_1( I_("M") );
         return( dstrDefValue_854_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_854_3( I_("M") );
         return( dstrDefValue_854_3 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_854_4( I_(" ") );
         return( dstrDefValue_854_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_854_5( I_("M") );
         return( dstrDefValue_854_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_854_6( I_("M") );
         return( dstrDefValue_854_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_854_7( I_("M") );
         return( dstrDefValue_854_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_854_8( I_("M") );
         return( dstrDefValue_854_8 );
      }
      static const DString dstrDefValue_854_1( I_("M") );
      return( dstrDefValue_854_1 );
   }
   const DString& s_FldProp_PayOption_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_854_1( I_("PayOption") );
         return( dstrFldLabel_854_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_854_3( I_("PayOption") );
         return( dstrFldLabel_854_3 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_854_4( I_("PayOption") );
         return( dstrFldLabel_854_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_854_5( I_("PayOption") );
         return( dstrFldLabel_854_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_854_6( I_("PayOption") );
         return( dstrFldLabel_854_6 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_854_7( I_("PayOption") );
         return( dstrFldLabel_854_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_854_8( I_("PayOption") );
         return( dstrFldLabel_854_8 );
      }
      static const DString dstrFldLabel_854_1( I_("PayOption") );
      return( dstrFldLabel_854_1 );
   }
   PBF_SSC subset_super_chooser_2_854( const ClientLocale& locale )
   {
      return chooser_ss_002_146; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayOption(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayOption // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayOption_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayOption_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_854 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayOptionDesc (855)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayOptionDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_855_4( I_("                                                  ") );
      return( dstrDefValue_855_4 );
   }
   const DString& s_FldProp_PayOptionDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_855_4( I_("PayOptionDesc ") );
      return( dstrFldLabel_855_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayOptionDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayOptionDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayOptionDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayOptionDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaxAmtYr (856)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaxAmtYr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_856_4( I_("0.0000000000") );
      return( dstrDefValue_856_4 );
   }
   double s_FldProp_MaxAmtYr_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_MaxAmtYr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_856_4( I_("MaxAmtYr ") );
      return( dstrFldLabel_856_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaxAmtYr(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MaxAmtYr // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_MaxAmtYr_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MaxAmtYr_d_DVF // default value
      ,s_FldProp_MaxAmtYr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxOnMin (857)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxOnMin_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_857_5( I_("N") );
      return( dstrDefValue_857_5 );
   }
   const DString& s_FldProp_TaxOnMin_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_857_5( I_("TaxOnMin ") );
      return( dstrFldLabel_857_5 );
   }
   PBF_SSC subset_super_chooser_2_857( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxOnMin(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxOnMin // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxOnMin_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxOnMin_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_857 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OverrideAmtYr (858)
   //------------------------------------------------------------------
   const DString& s_FldProp_OverrideAmtYr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_858_4( I_("N") );
      return( dstrDefValue_858_4 );
   }
   const DString& s_FldProp_OverrideAmtYr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_858_4( I_("OverrideAmtYr ") );
      return( dstrFldLabel_858_4 );
   }
   PBF_SSC subset_super_chooser_2_858( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OverrideAmtYr(
       BFDataFieldProperties::Type::text // field is a text field
      ,OverrideAmtYr // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OverrideAmtYr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OverrideAmtYr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_858 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IndexRate (859)
   //------------------------------------------------------------------
   const DString& s_FldProp_IndexRate_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_859_5( I_("0.0") );
         return( dstrDefValue_859_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_859_7( I_("0.0") );
         return( dstrDefValue_859_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_859_8( I_("0.0") );
         return( dstrDefValue_859_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_859_6( I_("0.0") );
         return( dstrDefValue_859_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_859_4( I_("0000000000000.0000000000") );
         return( dstrDefValue_859_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_859_3( I_("0.0") );
         return( dstrDefValue_859_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_859_1( I_("0.0") );
         return( dstrDefValue_859_1 );
      }
      static const DString dstrDefValue_859_1( I_("0.0") );
      return( dstrDefValue_859_1 );
   }
   double s_FldProp_IndexRate_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0000000000000.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_IndexRate_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_859_5( I_("IndexRate ") );
         return( dstrFldLabel_859_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_859_7( I_("IndexRate ") );
         return( dstrFldLabel_859_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_859_8( I_("IndexRate ") );
         return( dstrFldLabel_859_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_859_6( I_("IndexRate ") );
         return( dstrFldLabel_859_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_859_4( I_("IndexRate ") );
         return( dstrFldLabel_859_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_859_3( I_("IndexRate ") );
         return( dstrFldLabel_859_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_859_1( I_("IndexRate ") );
         return( dstrFldLabel_859_1 );
      }
      static const DString dstrFldLabel_859_1( I_("IndexRate ") );
      return( dstrFldLabel_859_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IndexRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,IndexRate // fieldId
      ,25 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_29 // mask chooser function
      ,s_FldProp_IndexRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_IndexRate_d_DVF // default value
      ,s_FldProp_IndexRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Qualified (860)
   //------------------------------------------------------------------
   const DString& s_FldProp_Qualified_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_860_5( I_("N  ") );
      return( dstrDefValue_860_5 );
   }
   const DString& s_FldProp_Qualified_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_860_5( I_("Qualified ") );
      return( dstrFldLabel_860_5 );
   }
   PBF_SSC subset_super_chooser_2_860( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Qualified(
       BFDataFieldProperties::Type::text // field is a text field
      ,Qualified // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Qualified_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Qualified_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_860 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BatchEffective (861)
   //------------------------------------------------------------------
   const DString& s_FldProp_BatchEffective_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_861_4( I_("         ") );
      return( dstrDefValue_861_4 );
   }
   const DString& s_FldProp_BatchEffective_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_861_4( I_("BatchEffective ") );
      return( dstrFldLabel_861_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BatchEffective(
       BFDataFieldProperties::Type::date // field is a date field
      ,BatchEffective // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BatchEffective_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BatchEffective_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SpouseBirth (862)
   //------------------------------------------------------------------
   const DString& s_FldProp_SpouseBirth_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_862_4( I_("         ") );
      return( dstrDefValue_862_4 );
   }
   const DString& s_FldProp_SpouseBirth_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_862_4( I_("SpouseBirth ") );
      return( dstrFldLabel_862_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SpouseBirth(
       BFDataFieldProperties::Type::date // field is a date field
      ,SpouseBirth // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SpouseBirth_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SpouseBirth_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayTerm (863)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayTerm_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_863_4( I_("0000") );
         return( dstrDefValue_863_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_863_7( I_("0") );
         return( dstrDefValue_863_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_863_5( I_("0") );
         return( dstrDefValue_863_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_863_8( I_("0") );
         return( dstrDefValue_863_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_863_3( I_("0") );
         return( dstrDefValue_863_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_863_1( I_("0") );
         return( dstrDefValue_863_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_863_6( I_("0") );
         return( dstrDefValue_863_6 );
      }
      static const DString dstrDefValue_863_1( I_("0") );
      return( dstrDefValue_863_1 );
   }
   double s_FldProp_PayTerm_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_PayTerm_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_863_4( I_("PayTerm ") );
         return( dstrFldLabel_863_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_863_7( I_("PayTerm ") );
         return( dstrFldLabel_863_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_863_5( I_("PayTerm ") );
         return( dstrFldLabel_863_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_863_8( I_("PayTerm ") );
         return( dstrFldLabel_863_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_863_3( I_("PayTerm ") );
         return( dstrFldLabel_863_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_863_1( I_("PayTerm ") );
         return( dstrFldLabel_863_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_863_6( I_("PayTerm ") );
         return( dstrFldLabel_863_6 );
      }
      static const DString dstrFldLabel_863_1( I_("PayTerm ") );
      return( dstrFldLabel_863_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayTerm(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PayTerm // fieldId
      ,4 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_28 // mask chooser function
      ,s_FldProp_PayTerm_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PayTerm_d_DVF // default value
      ,s_FldProp_PayTerm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayTermDesc (864)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayTermDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_864_8( I_("                                                  ") );
      return( dstrDefValue_864_8 );
   }
   const DString& s_FldProp_PayTermDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_864_8( I_("PayTermDesc ") );
      return( dstrFldLabel_864_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayTermDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayTermDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayTermDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayTermDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Factor (865)
   //------------------------------------------------------------------
   const DString& s_FldProp_Factor_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_865_8( I_("                                                  ") );
      return( dstrDefValue_865_8 );
   }
   const DString& s_FldProp_Factor_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_865_8( I_("Factor ") );
      return( dstrFldLabel_865_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Factor(
       BFDataFieldProperties::Type::text // field is a text field
      ,Factor // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Factor_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Factor_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CansimRate (866)
   //------------------------------------------------------------------
   const DString& s_FldProp_CansimRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_866_7( I_("0.0000000000") );
      return( dstrDefValue_866_7 );
   }
   double s_FldProp_CansimRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_CansimRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_866_7( I_("CansimRate ") );
      return( dstrFldLabel_866_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CansimRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,CansimRate // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_CansimRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_CansimRate_d_DVF // default value
      ,s_FldProp_CansimRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnsettledTrn (867)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnsettledTrn_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_867_5( I_(" ") );
      return( dstrDefValue_867_5 );
   }
   const DString& s_FldProp_UnsettledTrn_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_867_5( I_("UnsettledTrn") );
      return( dstrFldLabel_867_5 );
   }
   PBF_SSC subset_super_chooser_2_867( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnsettledTrn(
       BFDataFieldProperties::Type::text // field is a text field
      ,UnsettledTrn // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_UnsettledTrn_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_UnsettledTrn_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_867 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PendingRid (868)
   //------------------------------------------------------------------
   const DString& s_FldProp_PendingRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_868_4( I_("00000000000000000000000") );
      return( dstrDefValue_868_4 );
   }
   DIINT64 s_FldProp_PendingRid_i_DVF( const ClientLocale& locale )
   {
      return( 00000000000000000000000 );
   }
   const DString& s_FldProp_PendingRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_868_4( I_("PendingRid ") );
      return( dstrFldLabel_868_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PendingRid(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,PendingRid // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PendingRid_s_DVF // default value
      ,s_FldProp_PendingRid_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_PendingRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransPending (869)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransPending_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_869_4( I_("  ") );
      return( dstrDefValue_869_4 );
   }
   const DString& s_FldProp_TransPending_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_869_4( I_("TransPending ") );
      return( dstrFldLabel_869_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransPending(
       BFDataFieldProperties::Type::text // field is a text field
      ,TransPending // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransPending_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TransPending_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Summary (870)
   //------------------------------------------------------------------
   const DString& s_FldProp_Summary_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_870_4( I_(" ") );
      return( dstrDefValue_870_4 );
   }
   const DString& s_FldProp_Summary_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_870_4( I_("Summary ") );
      return( dstrFldLabel_870_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Summary(
       BFDataFieldProperties::Type::text // field is a text field
      ,Summary // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Summary_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Summary_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CallerName (871)
   //------------------------------------------------------------------
   const DString& s_FldProp_CallerName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_871_5( I_("  ") );
      return( dstrDefValue_871_5 );
   }
   const DString& s_FldProp_CallerName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_871_5( I_("CallerName ") );
      return( dstrFldLabel_871_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CallerName(
       BFDataFieldProperties::Type::text // field is a text field
      ,CallerName // fieldId
      ,100 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CallerName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CallerName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CallerPhoneNumber (872)
   //------------------------------------------------------------------
   const DString& s_FldProp_CallerPhoneNumber_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_872_4( I_("  ") );
      return( dstrDefValue_872_4 );
   }
   const DString& s_FldProp_CallerPhoneNumber_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_872_4( I_("CallerPhoneNumber ") );
      return( dstrFldLabel_872_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CallerPhoneNumber(
       BFDataFieldProperties::Type::text // field is a text field
      ,CallerPhoneNumber // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CallerPhoneNumber_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CallerPhoneNumber_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HomeFax (873)
   //------------------------------------------------------------------
   const DString& s_FldProp_HomeFax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_873_5( I_("  ") );
      return( dstrDefValue_873_5 );
   }
   const DString& s_FldProp_HomeFax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_873_5( I_("HomeFax ") );
      return( dstrFldLabel_873_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HomeFax(
       BFDataFieldProperties::Type::text // field is a text field
      ,HomeFax // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_HomeFax_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_HomeFax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PostUnsettled (874)
   //------------------------------------------------------------------
   const DString& s_FldProp_PostUnsettled_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_874_5( I_("N") );
      return( dstrDefValue_874_5 );
   }
   const DString& s_FldProp_PostUnsettled_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_874_5( I_("PostUnsettled ") );
      return( dstrFldLabel_874_5 );
   }
   PBF_SSC subset_super_chooser_2_874( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PostUnsettled(
       BFDataFieldProperties::Type::text // field is a text field
      ,PostUnsettled // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PostUnsettled_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PostUnsettled_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_874 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Indc (875)
   //------------------------------------------------------------------
   const DString& s_FldProp_Indc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_875_4( I_("  ") );
      return( dstrDefValue_875_4 );
   }
   const DString& s_FldProp_Indc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_875_4( I_("Indc ") );
      return( dstrFldLabel_875_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Indc(
       BFDataFieldProperties::Type::text // field is a text field
      ,Indc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Indc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Indc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExpSetlGN (876)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExpSetlGN_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_876_5( I_(" ") );
      return( dstrDefValue_876_5 );
   }
   const DString& s_FldProp_ExpSetlGN_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_876_5( I_("ExpSetlGN") );
      return( dstrFldLabel_876_5 );
   }
   PBF_SSC subset_super_chooser_2_876( const ClientLocale& locale )
   {
      return chooser_ss_002_126; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExpSetlGN(
       BFDataFieldProperties::Type::text // field is a text field
      ,ExpSetlGN // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ExpSetlGN_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ExpSetlGN_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_876 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DepositId (877)
   //------------------------------------------------------------------
   const DString& s_FldProp_DepositId_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_877_4( I_("  ") );
      return( dstrDefValue_877_4 );
   }
   const DString& s_FldProp_DepositId_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_877_4( I_("DepositId ") );
      return( dstrFldLabel_877_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DepositId(
       BFDataFieldProperties::Type::text // field is a text field
      ,DepositId // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DepositId_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DepositId_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchCriteria (878)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchCriteria_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_878_4( I_("  ") );
      return( dstrDefValue_878_4 );
   }
   const DString& s_FldProp_SearchCriteria_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_878_4( I_("SearchCriteria ") );
      return( dstrFldLabel_878_4 );
   }
   PBF_SSC subset_super_chooser_2_878( const ClientLocale& locale )
   {
      return chooser_ss_002_003; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchCriteria(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchCriteria // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchCriteria_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchCriteria_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_878 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchAccountUsing (879)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchAccountUsing_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_879_5( I_("  ") );
      return( dstrDefValue_879_5 );
   }
   const DString& s_FldProp_SearchAccountUsing_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_879_5( I_("SearchAccountUsing ") );
      return( dstrFldLabel_879_5 );
   }
   PBF_SSC subset_super_chooser_2_879( const ClientLocale& locale )
   {
      return chooser_ss_002_004; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchAccountUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchAccountUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchAccountUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchAccountUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_879 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchChequeUsing (880)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchChequeUsing_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_880_5( I_("  ") );
      return( dstrDefValue_880_5 );
   }
   const DString& s_FldProp_SearchChequeUsing_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_880_5( I_("SearchChequeUsing ") );
      return( dstrFldLabel_880_5 );
   }
   PBF_SSC subset_super_chooser_2_880( const ClientLocale& locale )
   {
      return chooser_ss_002_005; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchChequeUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchChequeUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchChequeUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchChequeUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_880 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchCertificateUsing (881)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchCertificateUsing_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_881_4( I_("  ") );
      return( dstrDefValue_881_4 );
   }
   const DString& s_FldProp_SearchCertificateUsing_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_881_4( I_("SearchCertificateUsing ") );
      return( dstrFldLabel_881_4 );
   }
   PBF_SSC subset_super_chooser_2_881( const ClientLocale& locale )
   {
      return chooser_ss_002_006; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchCertificateUsing(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchCertificateUsing // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchCertificateUsing_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchCertificateUsing_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_881 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SearchLabels (882)
   //------------------------------------------------------------------
   const DString& s_FldProp_SearchLabels_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_882_4( I_("  ") );
      return( dstrDefValue_882_4 );
   }
   const DString& s_FldProp_SearchLabels_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_882_4( I_("SearchLabels ") );
      return( dstrFldLabel_882_4 );
   }
   PBF_SSC subset_super_chooser_2_882( const ClientLocale& locale )
   {
      return chooser_ss_002_007; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SearchLabels(
       BFDataFieldProperties::Type::text // field is a text field
      ,SearchLabels // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SearchLabels_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SearchLabels_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_882 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_JapaneseCurrency (884)
   //------------------------------------------------------------------
   const DString& s_FldProp_JapaneseCurrency_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_884_5( I_("0") );
      return( dstrDefValue_884_5 );
   }
   double s_FldProp_JapaneseCurrency_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_JapaneseCurrency_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_884_5( I_("JapaneseCurrency  ") );
      return( dstrFldLabel_884_5 );
   } 
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_JapaneseCurrency(
       BFDataFieldProperties::Type::decimal // field is decimal
      ,JapaneseCurrency // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decimals
      ,mask_chooser_2_32 // mask chooser function
      ,s_FldProp_JapaneseCurrency_s_DVF // default value (string)
      ,NULL // default value (integer)
      ,s_FldProp_JapaneseCurrency_d_DVF // default value (double)
      ,s_FldProp_JapaneseCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CanadianCurrency (885)
   //------------------------------------------------------------------
   const DString& s_FldProp_CanadianCurrency_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_885_4( I_("0") );
      return( dstrDefValue_885_4 );
   }
   double s_FldProp_CanadianCurrency_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_CanadianCurrency_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_885_4( I_("CanadianCurrency  ") );
      return( dstrFldLabel_885_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CanadianCurrency(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,CanadianCurrency // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_CanadianCurrency_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_CanadianCurrency_d_DVF // default value
      ,s_FldProp_CanadianCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_USDollar (886)
   //------------------------------------------------------------------
   const DString& s_FldProp_USDollar_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_886_5( I_("0") );
      return( dstrDefValue_886_5 );
   }
   double s_FldProp_USDollar_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_USDollar_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_886_5( I_("USDollar  ") );
      return( dstrFldLabel_886_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_USDollar(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,USDollar // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_USDollar_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_USDollar_d_DVF // default value
      ,s_FldProp_USDollar_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EuroDollar (887)
   //------------------------------------------------------------------
   const DString& s_FldProp_EuroDollar_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_887_8( I_("0") );
      return( dstrDefValue_887_8 );
   }
   double s_FldProp_EuroDollar_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_EuroDollar_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_887_8( I_("EuroDollar  ") );
      return( dstrFldLabel_887_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EuroDollar(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EuroDollar // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_EuroDollar_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EuroDollar_d_DVF // default value
      ,s_FldProp_EuroDollar_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_IrishPounds (888)
   //------------------------------------------------------------------
   const DString& s_FldProp_IrishPounds_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_888_4( I_("0") );
      return( dstrDefValue_888_4 );
   }
   double s_FldProp_IrishPounds_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_IrishPounds_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_888_4( I_("IrishPounds  ") );
      return( dstrFldLabel_888_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_IrishPounds(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,IrishPounds // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_IrishPounds_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_IrishPounds_d_DVF // default value
      ,s_FldProp_IrishPounds_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LuxembourgFranc (889)
   //------------------------------------------------------------------
   const DString& s_FldProp_LuxembourgFranc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_889_5( I_("0") );
      return( dstrDefValue_889_5 );
   }
   double s_FldProp_LuxembourgFranc_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_LuxembourgFranc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_889_5( I_("LuxembourgFranc  ") );
      return( dstrFldLabel_889_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LuxembourgFranc(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,LuxembourgFranc // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_LuxembourgFranc_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_LuxembourgFranc_d_DVF // default value
      ,s_FldProp_LuxembourgFranc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PortugueseEscudo (890)
   //------------------------------------------------------------------
   const DString& s_FldProp_PortugueseEscudo_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_890_4( I_("0") );
      return( dstrDefValue_890_4 );
   }
   double s_FldProp_PortugueseEscudo_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_PortugueseEscudo_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_890_4( I_("PortugueseEscudo  ") );
      return( dstrFldLabel_890_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PortugueseEscudo(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PortugueseEscudo // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_PortugueseEscudo_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PortugueseEscudo_d_DVF // default value
      ,s_FldProp_PortugueseEscudo_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChgFactor (891)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChgFactor_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_891_4( I_("0") );
      return( dstrDefValue_891_4 );
   }
   double s_FldProp_ChgFactor_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_ChgFactor_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_891_4( I_("ChgFactor  ") );
      return( dstrFldLabel_891_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChgFactor(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ChgFactor // fieldId
      ,31 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_ChgFactor_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ChgFactor_d_DVF // default value
      ,s_FldProp_ChgFactor_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityListViewHeading (893)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityListViewHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_893_4( I_("0") );
         return( dstrDefValue_893_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_893_7( I_("") );
         return( dstrDefValue_893_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_893_8( I_("") );
         return( dstrDefValue_893_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_893_5( I_("") );
         return( dstrDefValue_893_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_893_1( I_("") );
         return( dstrDefValue_893_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_893_6( I_("0") );
         return( dstrDefValue_893_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_893_3( I_("") );
         return( dstrDefValue_893_3 );
      }
      static const DString dstrDefValue_893_1( I_("") );
      return( dstrDefValue_893_1 );
   }
   const DString& s_FldProp_EntityListViewHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_893_4( I_("EntityListViewHeading    ") );
         return( dstrFldLabel_893_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_893_7( I_("EntityListViewHeading    ") );
         return( dstrFldLabel_893_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_893_8( I_("EntityListViewHeading    ") );
         return( dstrFldLabel_893_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_893_5( I_("EntityListViewHeading    ") );
         return( dstrFldLabel_893_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_893_1( I_("EntityListViewHeading    ") );
         return( dstrFldLabel_893_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_893_6( I_("EntityListViewHeading    ") );
         return( dstrFldLabel_893_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_893_3( I_("EntityListViewHeading    ") );
         return( dstrFldLabel_893_3 );
      }
      static const DString dstrFldLabel_893_1( I_("EntityListViewHeading    ") );
      return( dstrFldLabel_893_1 );
   }
   PBF_SSC subset_super_chooser_2_893( const ClientLocale& locale )
   {
      return chooser_ss_002_055; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityListViewHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,EntityListViewHeading // fieldId
      ,0 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EntityListViewHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EntityListViewHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_893 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SelectEntityListHeading (894)
   //------------------------------------------------------------------
   const DString& s_FldProp_SelectEntityListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_894_4( I_("0") );
         return( dstrDefValue_894_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_894_8( I_("") );
         return( dstrDefValue_894_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_894_7( I_("") );
         return( dstrDefValue_894_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_894_5( I_("") );
         return( dstrDefValue_894_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_894_3( I_("") );
         return( dstrDefValue_894_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_894_1( I_("") );
         return( dstrDefValue_894_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_894_6( I_("0") );
         return( dstrDefValue_894_6 );
      }
      static const DString dstrDefValue_894_1( I_("") );
      return( dstrDefValue_894_1 );
   }
   const DString& s_FldProp_SelectEntityListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_894_4( I_("SelectEntityListHeading    ") );
         return( dstrFldLabel_894_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_894_8( I_("SelectEntityListHeading    ") );
         return( dstrFldLabel_894_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_894_7( I_("SelectEntityListHeading    ") );
         return( dstrFldLabel_894_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_894_5( I_("SelectEntityListHeading    ") );
         return( dstrFldLabel_894_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_894_3( I_("SelectEntityListHeading    ") );
         return( dstrFldLabel_894_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_894_1( I_("SelectEntityListHeading    ") );
         return( dstrFldLabel_894_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_894_6( I_("SelectEntityListHeading    ") );
         return( dstrFldLabel_894_6 );
      }
      static const DString dstrFldLabel_894_1( I_("SelectEntityListHeading    ") );
      return( dstrFldLabel_894_1 );
   }
   PBF_SSC subset_super_chooser_2_894( const ClientLocale& locale )
   {
      return chooser_ss_002_057; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SelectEntityListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,SelectEntityListHeading // fieldId
      ,0 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SelectEntityListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SelectEntityListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_894 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctDetailsHeading (895)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctDetailsHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_895_4( I_("0") );
         return( dstrDefValue_895_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_895_5( I_("") );
         return( dstrDefValue_895_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_895_8( I_("") );
         return( dstrDefValue_895_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_895_7( I_("") );
         return( dstrDefValue_895_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_895_1( I_("") );
         return( dstrDefValue_895_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_895_3( I_("") );
         return( dstrDefValue_895_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_895_6( I_("0") );
         return( dstrDefValue_895_6 );
      }
      static const DString dstrDefValue_895_1( I_("") );
      return( dstrDefValue_895_1 );
   }
   const DString& s_FldProp_AcctDetailsHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_895_4( I_("AcctDetailsHeading  ") );
         return( dstrFldLabel_895_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_895_5( I_("AcctDetailsHeading  ") );
         return( dstrFldLabel_895_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_895_8( I_("AcctDetailsHeading  ") );
         return( dstrFldLabel_895_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_895_7( I_("AcctDetailsHeading  ") );
         return( dstrFldLabel_895_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_895_1( I_("AcctDetailsHeading  ") );
         return( dstrFldLabel_895_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_895_3( I_("AcctDetailsHeading  ") );
         return( dstrFldLabel_895_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_895_6( I_("AcctDetailsHeading  ") );
         return( dstrFldLabel_895_6 );
      }
      static const DString dstrFldLabel_895_1( I_("AcctDetailsHeading  ") );
      return( dstrFldLabel_895_1 );
   }
   PBF_SSC subset_super_chooser_2_895( const ClientLocale& locale )
   {
      return chooser_ss_002_059; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctDetailsHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctDetailsHeading // fieldId
      ,0 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctDetailsHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctDetailsHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_895 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CurrBusDate (896)
   //------------------------------------------------------------------
   const DString& s_FldProp_CurrBusDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_896_4( I_("   ") );
      return( dstrDefValue_896_4 );
   }
   const DString& s_FldProp_CurrBusDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_896_4( I_("CurrBusDate  ") );
      return( dstrFldLabel_896_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CurrBusDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,CurrBusDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CurrBusDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CurrBusDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ShrBankInstrAcctUseCode (897)
   //------------------------------------------------------------------
   const DString& s_FldProp_ShrBankInstrAcctUseCode_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_897_5( I_("") );
         return( dstrDefValue_897_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_897_8( I_("") );
         return( dstrDefValue_897_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_897_7( I_("") );
         return( dstrDefValue_897_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_897_6( I_("0") );
         return( dstrDefValue_897_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_897_3( I_("") );
         return( dstrDefValue_897_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_897_1( I_("") );
         return( dstrDefValue_897_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_897_4( I_("0") );
         return( dstrDefValue_897_4 );
      }
      static const DString dstrDefValue_897_1( I_("") );
      return( dstrDefValue_897_1 );
   }
   const DString& s_FldProp_ShrBankInstrAcctUseCode_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_897_5( I_("ShrBankInstrAcctUseCode   ") );
         return( dstrFldLabel_897_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_897_8( I_("ShrBankInstrAcctUseCode   ") );
         return( dstrFldLabel_897_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_897_7( I_("ShrBankInstrAcctUseCode   ") );
         return( dstrFldLabel_897_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_897_6( I_("ShrBankInstrAcctUseCode   ") );
         return( dstrFldLabel_897_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_897_3( I_("ShrBankInstrAcctUseCode   ") );
         return( dstrFldLabel_897_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_897_1( I_("ShrBankInstrAcctUseCode   ") );
         return( dstrFldLabel_897_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_897_4( I_("ShrBankInstrAcctUseCode   ") );
         return( dstrFldLabel_897_4 );
      }
      static const DString dstrFldLabel_897_1( I_("ShrBankInstrAcctUseCode   ") );
      return( dstrFldLabel_897_1 );
   }
   PBF_SSC subset_super_chooser_2_897( const ClientLocale& locale )
   {
      return chooser_ss_002_064; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ShrBankInstrAcctUseCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,ShrBankInstrAcctUseCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ShrBankInstrAcctUseCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ShrBankInstrAcctUseCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_897 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccListHeading (898)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_898_4( I_("0") );
         return( dstrDefValue_898_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_898_7( I_("") );
         return( dstrDefValue_898_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_898_5( I_("") );
         return( dstrDefValue_898_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_898_8( I_("") );
         return( dstrDefValue_898_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_898_3( I_("") );
         return( dstrDefValue_898_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_898_1( I_("") );
         return( dstrDefValue_898_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_898_6( I_("0") );
         return( dstrDefValue_898_6 );
      }
      static const DString dstrDefValue_898_1( I_("") );
      return( dstrDefValue_898_1 );
   }
   const DString& s_FldProp_AccListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_898_4( I_("AccListHeading   ") );
         return( dstrFldLabel_898_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_898_7( I_("AccListHeading   ") );
         return( dstrFldLabel_898_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_898_5( I_("AccListHeading   ") );
         return( dstrFldLabel_898_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_898_8( I_("AccListHeading   ") );
         return( dstrFldLabel_898_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_898_3( I_("AccListHeading   ") );
         return( dstrFldLabel_898_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_898_1( I_("AccListHeading   ") );
         return( dstrFldLabel_898_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_898_6( I_("AccListHeading   ") );
         return( dstrFldLabel_898_6 );
      }
      static const DString dstrFldLabel_898_1( I_("AccListHeading   ") );
      return( dstrFldLabel_898_1 );
   }
   PBF_SSC subset_super_chooser_2_898( const ClientLocale& locale )
   {
      return chooser_ss_002_059; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,AccListHeading // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AccListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AccListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_898 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctEntityVer (899)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctEntityVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_899_5( I_("0") );
      return( dstrDefValue_899_5 );
   }
   DIINT64 s_FldProp_AcctEntityVer_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctEntityVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_899_5( I_("AcctEntityVer     ") );
      return( dstrFldLabel_899_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctEntityVer(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AcctEntityVer // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctEntityVer_s_DVF // default value
      ,s_FldProp_AcctEntityVer_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AcctEntityVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctEntityRid (900)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctEntityRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_900_5( I_("0") );
      return( dstrDefValue_900_5 );
   }
   double s_FldProp_AcctEntityRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctEntityRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_900_5( I_("AcctEntityRid     ") );
      return( dstrFldLabel_900_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctEntityRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctEntityRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctEntityRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctEntityRid_d_DVF // default value
      ,s_FldProp_AcctEntityRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctEntityBenefVer (901)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctEntityBenefVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_901_4( I_("0") );
      return( dstrDefValue_901_4 );
   }
   DIINT64 s_FldProp_AcctEntityBenefVer_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctEntityBenefVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_901_4( I_("AcctEntityBenefVer    ") );
      return( dstrFldLabel_901_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctEntityBenefVer(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AcctEntityBenefVer // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_AcctEntityBenefVer_s_DVF // default value
      ,s_FldProp_AcctEntityBenefVer_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AcctEntityBenefVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctEntityBenefRid (902)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctEntityBenefRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_902_5( I_("0") );
      return( dstrDefValue_902_5 );
   }
   double s_FldProp_AcctEntityBenefRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctEntityBenefRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_902_5( I_("AcctEntityBenefRid    ") );
      return( dstrFldLabel_902_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctEntityBenefRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctEntityBenefRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctEntityBenefRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctEntityBenefRid_d_DVF // default value
      ,s_FldProp_AcctEntityBenefRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctEntityJointVer (903)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctEntityJointVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_903_4( I_("0") );
      return( dstrDefValue_903_4 );
   }
   double s_FldProp_AcctEntityJointVer_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctEntityJointVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_903_4( I_("AcctEntityJointVer    ") );
      return( dstrFldLabel_903_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctEntityJointVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctEntityJointVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctEntityJointVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctEntityJointVer_d_DVF // default value
      ,s_FldProp_AcctEntityJointVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctEntityJointRid (904)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctEntityJointRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_904_4( I_("0") );
      return( dstrDefValue_904_4 );
   }
   double s_FldProp_AcctEntityJointRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctEntityJointRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_904_4( I_("AcctEntityJointRid") );
      return( dstrFldLabel_904_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctEntityJointRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctEntityJointRid // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctEntityJointRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctEntityJointRid_d_DVF // default value
      ,s_FldProp_AcctEntityJointRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AssignDetlVer (905)
   //------------------------------------------------------------------
   const DString& s_FldProp_AssignDetlVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_905_5( I_("0") );
      return( dstrDefValue_905_5 );
   }
   double s_FldProp_AssignDetlVer_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AssignDetlVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_905_5( I_("AssignDetlVer    ") );
      return( dstrFldLabel_905_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AssignDetlVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AssignDetlVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_AssignDetlVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AssignDetlVer_d_DVF // default value
      ,s_FldProp_AssignDetlVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AssignDetlRid (906)
   //------------------------------------------------------------------
   const DString& s_FldProp_AssignDetlRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_906_5( I_("0") );
      return( dstrDefValue_906_5 );
   }
   double s_FldProp_AssignDetlRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AssignDetlRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_906_5( I_("AssignDetlRid   ") );
      return( dstrFldLabel_906_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AssignDetlRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AssignDetlRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_AssignDetlRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AssignDetlRid_d_DVF // default value
      ,s_FldProp_AssignDetlRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntitySearchIdVer (907)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntitySearchIdVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_907_4( I_("0") );
      return( dstrDefValue_907_4 );
   }
   double s_FldProp_EntitySearchIdVer_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_EntitySearchIdVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_907_4( I_("EntitySearchIdVer   ") );
      return( dstrFldLabel_907_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntitySearchIdVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EntitySearchIdVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_EntitySearchIdVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EntitySearchIdVer_d_DVF // default value
      ,s_FldProp_EntitySearchIdVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntitySearchRid (908)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntitySearchRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_908_4( I_("0") );
      return( dstrDefValue_908_4 );
   }
   double s_FldProp_EntitySearchRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_EntitySearchRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_908_4( I_("EntitySearchRid   ") );
      return( dstrFldLabel_908_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntitySearchRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EntitySearchRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_EntitySearchRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EntitySearchRid_d_DVF // default value
      ,s_FldProp_EntitySearchRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctMstrVer (909)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctMstrVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_909_4( I_("0") );
      return( dstrDefValue_909_4 );
   }
   DIINT64 s_FldProp_AcctMstrVer_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctMstrVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_909_4( I_("AcctMstrVer     ") );
      return( dstrFldLabel_909_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctMstrVer(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AcctMstrVer // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctMstrVer_s_DVF // default value
      ,s_FldProp_AcctMstrVer_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AcctMstrVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctMstrRid (910)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctMstrRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_910_5( I_("0") );
      return( dstrDefValue_910_5 );
   }
   double s_FldProp_AcctMstrRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AcctMstrRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_910_5( I_("AcctMstrRid    ") );
      return( dstrFldLabel_910_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctMstrRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AcctMstrRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctMstrRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AcctMstrRid_d_DVF // default value
      ,s_FldProp_AcctMstrRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RemarksDetlVer (911)
   //------------------------------------------------------------------
   const DString& s_FldProp_RemarksDetlVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_911_4( I_("0") );
      return( dstrDefValue_911_4 );
   }
   double s_FldProp_RemarksDetlVer_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_RemarksDetlVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_911_4( I_("RemarksDetlVer    ") );
      return( dstrFldLabel_911_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RemarksDetlVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RemarksDetlVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_RemarksDetlVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RemarksDetlVer_d_DVF // default value
      ,s_FldProp_RemarksDetlVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RemarksDetlRid (912)
   //------------------------------------------------------------------
   const DString& s_FldProp_RemarksDetlRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_912_5( I_("0") );
      return( dstrDefValue_912_5 );
   }
   double s_FldProp_RemarksDetlRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_RemarksDetlRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_912_5( I_("RemarksDetlRid") );
      return( dstrFldLabel_912_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RemarksDetlRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RemarksDetlRid // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_RemarksDetlRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RemarksDetlRid_d_DVF // default value
      ,s_FldProp_RemarksDetlRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankDetlVer (913)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankDetlVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_913_5( I_("0") );
      return( dstrDefValue_913_5 );
   }
   double s_FldProp_BankDetlVer_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_BankDetlVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_913_5( I_("BankDetlVer   ") );
      return( dstrFldLabel_913_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankDetlVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BankDetlVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_BankDetlVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BankDetlVer_d_DVF // default value
      ,s_FldProp_BankDetlVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PrimMstrVer (914)
   //------------------------------------------------------------------
   const DString& s_FldProp_PrimMstrVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_914_4( I_("0") );
      return( dstrDefValue_914_4 );
   }
   double s_FldProp_PrimMstrVer_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_PrimMstrVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_914_4( I_("PrimMstrVer   ") );
      return( dstrFldLabel_914_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PrimMstrVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PrimMstrVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_PrimMstrVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PrimMstrVer_d_DVF // default value
      ,s_FldProp_PrimMstrVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PrimMstrRid (915)
   //------------------------------------------------------------------
   const DString& s_FldProp_PrimMstrRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_915_5( I_("0") );
      return( dstrDefValue_915_5 );
   }
   double s_FldProp_PrimMstrRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_PrimMstrRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_915_5( I_("PrimMstrRid   ") );
      return( dstrFldLabel_915_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PrimMstrRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PrimMstrRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_PrimMstrRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PrimMstrRid_d_DVF // default value
      ,s_FldProp_PrimMstrRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BirthDate2 (916)
   //------------------------------------------------------------------
   const DString& s_FldProp_BirthDate2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_916_4( I_("   ") );
         return( dstrDefValue_916_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_916_7( I_("") );
         return( dstrDefValue_916_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_916_8( I_("") );
         return( dstrDefValue_916_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_916_5( I_("   ") );
         return( dstrDefValue_916_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_916_1( I_("") );
         return( dstrDefValue_916_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_916_6( I_("") );
         return( dstrDefValue_916_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_916_3( I_("") );
         return( dstrDefValue_916_3 );
      }
      static const DString dstrDefValue_916_1( I_("") );
      return( dstrDefValue_916_1 );
   }
   const DString& s_FldProp_BirthDate2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_916_4( I_("BirthDate2  ") );
         return( dstrFldLabel_916_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_916_7( I_("BirthDate2  ") );
         return( dstrFldLabel_916_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_916_8( I_("BirthDate2  ") );
         return( dstrFldLabel_916_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_916_5( I_("BirthDate2  ") );
         return( dstrFldLabel_916_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_916_1( I_("BirthDate2  ") );
         return( dstrFldLabel_916_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_916_6( I_("BirthDate2  ") );
         return( dstrFldLabel_916_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_916_3( I_("BirthDate2  ") );
         return( dstrFldLabel_916_3 );
      }
      static const DString dstrFldLabel_916_1( I_("BirthDate2  ") );
      return( dstrFldLabel_916_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BirthDate2(
       BFDataFieldProperties::Type::date // field is a date field
      ,BirthDate2 // fieldId
      ,30 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BirthDate2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BirthDate2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Gender2 (917)
   //------------------------------------------------------------------
   const DString& s_FldProp_Gender2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_917_4( I_("0") );
         return( dstrDefValue_917_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_917_7( I_("") );
         return( dstrDefValue_917_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_917_5( I_("") );
         return( dstrDefValue_917_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_917_8( I_("") );
         return( dstrDefValue_917_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_917_3( I_("") );
         return( dstrDefValue_917_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_917_1( I_("") );
         return( dstrDefValue_917_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_917_6( I_("0") );
         return( dstrDefValue_917_6 );
      }
      static const DString dstrDefValue_917_1( I_("") );
      return( dstrDefValue_917_1 );
   }
   const DString& s_FldProp_Gender2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_917_4( I_("Gender2  ") );
         return( dstrFldLabel_917_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_917_7( I_("Gender2  ") );
         return( dstrFldLabel_917_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_917_5( I_("Gender2  ") );
         return( dstrFldLabel_917_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_917_8( I_("Gender2  ") );
         return( dstrFldLabel_917_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_917_3( I_("Gender2  ") );
         return( dstrFldLabel_917_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_917_1( I_("Gender2  ") );
         return( dstrFldLabel_917_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_917_6( I_("Gender2  ") );
         return( dstrFldLabel_917_6 );
      }
      static const DString dstrFldLabel_917_1( I_("Gender2  ") );
      return( dstrFldLabel_917_1 );
   }
   PBF_SSC subset_super_chooser_2_917( const ClientLocale& locale )
   {
      return chooser_ss_002_052; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Gender2(
       BFDataFieldProperties::Type::text // field is a text field
      ,Gender2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Gender2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Gender2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_917 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaritalCode2 (918)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaritalCode2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_918_5( I_("") );
         return( dstrDefValue_918_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_918_7( I_("") );
         return( dstrDefValue_918_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_918_8( I_("") );
         return( dstrDefValue_918_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_918_6( I_("0") );
         return( dstrDefValue_918_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_918_4( I_("0") );
         return( dstrDefValue_918_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_918_3( I_("") );
         return( dstrDefValue_918_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_918_1( I_("") );
         return( dstrDefValue_918_1 );
      }
      static const DString dstrDefValue_918_1( I_("") );
      return( dstrDefValue_918_1 );
   }
   const DString& s_FldProp_MaritalCode2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_918_5( I_("MartialCodeSet2  ") );
         return( dstrFldLabel_918_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_918_7( I_("MartialCodeSet2  ") );
         return( dstrFldLabel_918_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_918_8( I_("MartialCodeSet2  ") );
         return( dstrFldLabel_918_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_918_6( I_("MartialCodeSet2  ") );
         return( dstrFldLabel_918_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_918_4( I_("MartialCodeSet2  ") );
         return( dstrFldLabel_918_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_918_3( I_("MartialCodeSet2  ") );
         return( dstrFldLabel_918_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_918_1( I_("MartialCodeSet2  ") );
         return( dstrFldLabel_918_1 );
      }
      static const DString dstrFldLabel_918_1( I_("MartialCodeSet2  ") );
      return( dstrFldLabel_918_1 );
   }
   PBF_SSC subset_super_chooser_2_918( const ClientLocale& locale )
   {
      return chooser_ss_002_031; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaritalCode2(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaritalCode2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaritalCode2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaritalCode2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_918 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MaritalDesc2 (919)
   //------------------------------------------------------------------
   const DString& s_FldProp_MaritalDesc2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_919_5( I_("0") );
      return( dstrDefValue_919_5 );
   }
   const DString& s_FldProp_MaritalDesc2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_919_5( I_("MaritalDesc2  ") );
      return( dstrFldLabel_919_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MaritalDesc2(
       BFDataFieldProperties::Type::text // field is a text field
      ,MaritalDesc2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_MaritalDesc2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_MaritalDesc2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Employer2 (920)
   //------------------------------------------------------------------
   const DString& s_FldProp_Employer2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_920_4( I_("0") );
         return( dstrDefValue_920_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_920_8( I_("") );
         return( dstrDefValue_920_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_920_7( I_("") );
         return( dstrDefValue_920_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_920_5( I_("") );
         return( dstrDefValue_920_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_920_3( I_("") );
         return( dstrDefValue_920_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_920_1( I_("") );
         return( dstrDefValue_920_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_920_6( I_("0") );
         return( dstrDefValue_920_6 );
      }
      static const DString dstrDefValue_920_1( I_("") );
      return( dstrDefValue_920_1 );
   }
   const DString& s_FldProp_Employer2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_920_4( I_("Employer2  ") );
         return( dstrFldLabel_920_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_920_8( I_("Employer2  ") );
         return( dstrFldLabel_920_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_920_7( I_("Employer2  ") );
         return( dstrFldLabel_920_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_920_5( I_("Employer2  ") );
         return( dstrFldLabel_920_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_920_3( I_("Employer2  ") );
         return( dstrFldLabel_920_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_920_1( I_("Employer2  ") );
         return( dstrFldLabel_920_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_920_6( I_("Employer2  ") );
         return( dstrFldLabel_920_6 );
      }
      static const DString dstrFldLabel_920_1( I_("Employer2  ") );
      return( dstrFldLabel_920_1 );
   }
   PBF_SSC subset_super_chooser_2_920( const ClientLocale& locale )
   {
      return chooser_ss_002_056; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Employer2(
       BFDataFieldProperties::Type::text // field is a text field
      ,Employer2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Employer2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Employer2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_920 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EmployedYrs2 (921)
   //------------------------------------------------------------------
   const DString& s_FldProp_EmployedYrs2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_921_4( I_("0") );
      return( dstrDefValue_921_4 );
   }
   double s_FldProp_EmployedYrs2_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_EmployedYrs2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_921_4( I_("EmployedYrs2    ") );
      return( dstrFldLabel_921_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EmployedYrs2(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EmployedYrs2 // fieldId
      ,23 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_5 // mask chooser function
      ,s_FldProp_EmployedYrs2_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EmployedYrs2_d_DVF // default value
      ,s_FldProp_EmployedYrs2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TypeOfBusFreeFormat (922)
   //------------------------------------------------------------------
   const DString& s_FldProp_TypeOfBusFreeFormat_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_922_4( I_("0") );
         return( dstrDefValue_922_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_922_7( I_("") );
         return( dstrDefValue_922_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_922_5( I_("") );
         return( dstrDefValue_922_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_922_8( I_("") );
         return( dstrDefValue_922_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_922_3( I_("") );
         return( dstrDefValue_922_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_922_1( I_("") );
         return( dstrDefValue_922_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_922_6( I_("0") );
         return( dstrDefValue_922_6 );
      }
      static const DString dstrDefValue_922_1( I_("") );
      return( dstrDefValue_922_1 );
   }
   const DString& s_FldProp_TypeOfBusFreeFormat_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_922_4( I_("IndustryCode2  ") );
         return( dstrFldLabel_922_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_922_7( I_("IndustryCode2  ") );
         return( dstrFldLabel_922_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_922_5( I_("IndustryCode2  ") );
         return( dstrFldLabel_922_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_922_8( I_("TypeOfBusFreeFormat") );
         return( dstrFldLabel_922_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_922_3( I_("TypeOfBusFreeFormat") );
         return( dstrFldLabel_922_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_922_1( I_("TypeOfBusFreeFormat") );
         return( dstrFldLabel_922_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_922_6( I_("IndustryCode2  ") );
         return( dstrFldLabel_922_6 );
      }
      static const DString dstrFldLabel_922_1( I_("TypeOfBusFreeFormat") );
      return( dstrFldLabel_922_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TypeOfBusFreeFormat(
       BFDataFieldProperties::Type::text // field is a text field
      ,TypeOfBusFreeFormat // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TypeOfBusFreeFormat_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TypeOfBusFreeFormat_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TypeOfBusFreeFormatDesc (923)
   //------------------------------------------------------------------
   const DString& s_FldProp_TypeOfBusFreeFormatDesc_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_923_5( I_("0") );
         return( dstrDefValue_923_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_923_8( I_("0") );
         return( dstrDefValue_923_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_923_7( I_("0") );
         return( dstrDefValue_923_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_923_6( I_("0") );
         return( dstrDefValue_923_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_923_3( I_("0") );
         return( dstrDefValue_923_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_923_1( I_("0") );
         return( dstrDefValue_923_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_923_4( I_("0") );
         return( dstrDefValue_923_4 );
      }
      static const DString dstrDefValue_923_1( I_("0") );
      return( dstrDefValue_923_1 );
   }
   const DString& s_FldProp_TypeOfBusFreeFormatDesc_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_923_5( I_("IndustryDesc2  ") );
         return( dstrFldLabel_923_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_923_8( I_("TypeOfBusFreeFormatDesc") );
         return( dstrFldLabel_923_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_923_7( I_("IndustryDesc2  ") );
         return( dstrFldLabel_923_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_923_6( I_("IndustryDesc2  ") );
         return( dstrFldLabel_923_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_923_3( I_("TypeOfBusFreeFormatDesc") );
         return( dstrFldLabel_923_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_923_1( I_("TypeOfBusFreeFormatDesc") );
         return( dstrFldLabel_923_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_923_4( I_("IndustryDesc2  ") );
         return( dstrFldLabel_923_4 );
      }
      static const DString dstrFldLabel_923_1( I_("TypeOfBusFreeFormatDesc") );
      return( dstrFldLabel_923_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TypeOfBusFreeFormatDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,TypeOfBusFreeFormatDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TypeOfBusFreeFormatDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TypeOfBusFreeFormatDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OccupationFreeFormat (924)
   //------------------------------------------------------------------
   const DString& s_FldProp_OccupationFreeFormat_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_924_4( I_("0") );
         return( dstrDefValue_924_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_924_7( I_("") );
         return( dstrDefValue_924_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_924_5( I_("") );
         return( dstrDefValue_924_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_924_8( I_("") );
         return( dstrDefValue_924_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_924_3( I_("") );
         return( dstrDefValue_924_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_924_1( I_("") );
         return( dstrDefValue_924_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_924_6( I_("0") );
         return( dstrDefValue_924_6 );
      }
      static const DString dstrDefValue_924_1( I_("") );
      return( dstrDefValue_924_1 );
   }
   const DString& s_FldProp_OccupationFreeFormat_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_924_4( I_("OccupationCode2  ") );
         return( dstrFldLabel_924_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_924_7( I_("OccupationCode2  ") );
         return( dstrFldLabel_924_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_924_5( I_("OccupationCode2  ") );
         return( dstrFldLabel_924_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_924_8( I_("OccupationFreeFormat") );
         return( dstrFldLabel_924_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_924_3( I_("OccupationFreeFormat") );
         return( dstrFldLabel_924_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_924_1( I_("OccupationFreeFormat") );
         return( dstrFldLabel_924_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_924_6( I_("OccupationCode2  ") );
         return( dstrFldLabel_924_6 );
      }
      static const DString dstrFldLabel_924_1( I_("OccupationFreeFormat") );
      return( dstrFldLabel_924_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OccupationFreeFormat(
       BFDataFieldProperties::Type::text // field is a text field
      ,OccupationFreeFormat // fieldId
      ,40 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OccupationFreeFormat_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OccupationFreeFormat_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OccupationFreeFormatDesc (925)
   //------------------------------------------------------------------
   const DString& s_FldProp_OccupationFreeFormatDesc_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_925_5( I_("0") );
         return( dstrDefValue_925_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_925_7( I_("0") );
         return( dstrDefValue_925_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_925_8( I_("0") );
         return( dstrDefValue_925_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_925_6( I_("0") );
         return( dstrDefValue_925_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_925_4( I_("0") );
         return( dstrDefValue_925_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_925_3( I_("0") );
         return( dstrDefValue_925_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_925_1( I_("0") );
         return( dstrDefValue_925_1 );
      }
      static const DString dstrDefValue_925_1( I_("0") );
      return( dstrDefValue_925_1 );
   }
   const DString& s_FldProp_OccupationFreeFormatDesc_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_925_5( I_("OccupationDesc2  ") );
         return( dstrFldLabel_925_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_925_7( I_("OccupationDesc2  ") );
         return( dstrFldLabel_925_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_925_8( I_("OccupationFreeFormatDesc") );
         return( dstrFldLabel_925_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_925_6( I_("OccupationDesc2  ") );
         return( dstrFldLabel_925_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_925_4( I_("OccupationDesc2  ") );
         return( dstrFldLabel_925_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_925_3( I_("OccupationFreeFormatDesc") );
         return( dstrFldLabel_925_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_925_1( I_("OccupationFreeFormatDesc") );
         return( dstrFldLabel_925_1 );
      }
      static const DString dstrFldLabel_925_1( I_("OccupationFreeFormatDesc") );
      return( dstrFldLabel_925_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OccupationFreeFormatDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,OccupationFreeFormatDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OccupationFreeFormatDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OccupationFreeFormatDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AnnualIncomeCode2 (926)
   //------------------------------------------------------------------
   const DString& s_FldProp_AnnualIncomeCode2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_926_8( I_("") );
         return( dstrDefValue_926_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_926_7( I_("") );
         return( dstrDefValue_926_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_926_5( I_("") );
         return( dstrDefValue_926_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_926_6( I_("0") );
         return( dstrDefValue_926_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_926_3( I_("") );
         return( dstrDefValue_926_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_926_1( I_("") );
         return( dstrDefValue_926_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_926_4( I_("0") );
         return( dstrDefValue_926_4 );
      }
      static const DString dstrDefValue_926_1( I_("") );
      return( dstrDefValue_926_1 );
   }
   const DString& s_FldProp_AnnualIncomeCode2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_926_8( I_("AnnualIncomeCode2  ") );
         return( dstrFldLabel_926_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_926_7( I_("AnnualIncomeCode2  ") );
         return( dstrFldLabel_926_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_926_5( I_("AnnualIncomeCode2  ") );
         return( dstrFldLabel_926_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_926_6( I_("AnnualIncomeCode2  ") );
         return( dstrFldLabel_926_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_926_3( I_("AnnualIncomeCode2  ") );
         return( dstrFldLabel_926_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_926_1( I_("AnnualIncomeCode2  ") );
         return( dstrFldLabel_926_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_926_4( I_("AnnualIncomeCode2  ") );
         return( dstrFldLabel_926_4 );
      }
      static const DString dstrFldLabel_926_1( I_("AnnualIncomeCode2  ") );
      return( dstrFldLabel_926_1 );
   }
   PBF_SSC subset_super_chooser_2_926( const ClientLocale& locale )
   {
      return chooser_ss_002_009; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AnnualIncomeCode2(
       BFDataFieldProperties::Type::text // field is a text field
      ,AnnualIncomeCode2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AnnualIncomeCode2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AnnualIncomeCode2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_926 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AnnualIncomeDesc2 (927)
   //------------------------------------------------------------------
   const DString& s_FldProp_AnnualIncomeDesc2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_927_4( I_("0") );
      return( dstrDefValue_927_4 );
   }
   const DString& s_FldProp_AnnualIncomeDesc2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_927_4( I_("AnnualIncomeDesc2  ") );
      return( dstrFldLabel_927_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AnnualIncomeDesc2(
       BFDataFieldProperties::Type::text // field is a text field
      ,AnnualIncomeDesc2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AnnualIncomeDesc2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AnnualIncomeDesc2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetWorthCode2 (928)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetWorthCode2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_928_5( I_("") );
         return( dstrDefValue_928_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_928_8( I_("") );
         return( dstrDefValue_928_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_928_7( I_("") );
         return( dstrDefValue_928_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_928_6( I_("0") );
         return( dstrDefValue_928_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_928_4( I_("0") );
         return( dstrDefValue_928_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_928_3( I_("") );
         return( dstrDefValue_928_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_928_1( I_("") );
         return( dstrDefValue_928_1 );
      }
      static const DString dstrDefValue_928_1( I_("") );
      return( dstrDefValue_928_1 );
   }
   const DString& s_FldProp_NetWorthCode2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_928_5( I_("NetWorthCode2  ") );
         return( dstrFldLabel_928_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_928_8( I_("NetWorthCode2  ") );
         return( dstrFldLabel_928_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_928_7( I_("NetWorthCode2  ") );
         return( dstrFldLabel_928_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_928_6( I_("NetWorthCode2  ") );
         return( dstrFldLabel_928_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_928_4( I_("NetWorthCode2  ") );
         return( dstrFldLabel_928_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_928_3( I_("NetWorthCode2  ") );
         return( dstrFldLabel_928_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_928_1( I_("NetWorthCode2  ") );
         return( dstrFldLabel_928_1 );
      }
      static const DString dstrFldLabel_928_1( I_("NetWorthCode2  ") );
      return( dstrFldLabel_928_1 );
   }
   PBF_SSC subset_super_chooser_2_928( const ClientLocale& locale )
   {
      return chooser_ss_002_032; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetWorthCode2(
       BFDataFieldProperties::Type::text // field is a text field
      ,NetWorthCode2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NetWorthCode2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NetWorthCode2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_928 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_NetWorthDesc2 (929)
   //------------------------------------------------------------------
   const DString& s_FldProp_NetWorthDesc2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_929_4( I_("0") );
      return( dstrDefValue_929_4 );
   }
   const DString& s_FldProp_NetWorthDesc2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_929_4( I_("NetWorthDesc2  ") );
      return( dstrFldLabel_929_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_NetWorthDesc2(
       BFDataFieldProperties::Type::text // field is a text field
      ,NetWorthDesc2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_NetWorthDesc2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_NetWorthDesc2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvObjCode2 (930)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvObjCode2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_930_4( I_("0") );
         return( dstrDefValue_930_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_930_7( I_("") );
         return( dstrDefValue_930_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_930_5( I_("") );
         return( dstrDefValue_930_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_930_8( I_("") );
         return( dstrDefValue_930_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_930_3( I_("") );
         return( dstrDefValue_930_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_930_1( I_("") );
         return( dstrDefValue_930_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_930_6( I_("0") );
         return( dstrDefValue_930_6 );
      }
      static const DString dstrDefValue_930_1( I_("") );
      return( dstrDefValue_930_1 );
   }
   const DString& s_FldProp_InvObjCode2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_930_4( I_("InvObjCode2  ") );
         return( dstrFldLabel_930_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_930_7( I_("InvObjCode2  ") );
         return( dstrFldLabel_930_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_930_5( I_("InvObjCode2  ") );
         return( dstrFldLabel_930_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_930_8( I_("InvObjCode2  ") );
         return( dstrFldLabel_930_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_930_3( I_("InvObjCode2  ") );
         return( dstrFldLabel_930_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_930_1( I_("InvObjCode2  ") );
         return( dstrFldLabel_930_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_930_6( I_("InvObjCode2  ") );
         return( dstrFldLabel_930_6 );
      }
      static const DString dstrFldLabel_930_1( I_("InvObjCode2  ") );
      return( dstrFldLabel_930_1 );
   }
   PBF_SSC subset_super_chooser_2_930( const ClientLocale& locale )
   {
      return chooser_ss_002_033; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvObjCode2(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvObjCode2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvObjCode2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvObjCode2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_930 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvObjDesc2 (931)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvObjDesc2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_931_5( I_("0") );
      return( dstrDefValue_931_5 );
   }
   const DString& s_FldProp_InvObjDesc2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_931_5( I_("InvObjDesc2  ") );
      return( dstrFldLabel_931_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvObjDesc2(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvObjDesc2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvObjDesc2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvObjDesc2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvKnowledgeCode2 (932)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvKnowledgeCode2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_932_4( I_("0") );
         return( dstrDefValue_932_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_932_7( I_("") );
         return( dstrDefValue_932_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_932_8( I_("") );
         return( dstrDefValue_932_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_932_5( I_("") );
         return( dstrDefValue_932_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_932_1( I_("") );
         return( dstrDefValue_932_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_932_6( I_("0") );
         return( dstrDefValue_932_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_932_3( I_("") );
         return( dstrDefValue_932_3 );
      }
      static const DString dstrDefValue_932_1( I_("") );
      return( dstrDefValue_932_1 );
   }
   const DString& s_FldProp_InvKnowledgeCode2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_932_4( I_("InvKnowledgeCode2  ") );
         return( dstrFldLabel_932_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_932_7( I_("InvKnowledgeCode2  ") );
         return( dstrFldLabel_932_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_932_8( I_("InvKnowledgeCode2  ") );
         return( dstrFldLabel_932_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_932_5( I_("InvKnowledgeCode2  ") );
         return( dstrFldLabel_932_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_932_1( I_("InvKnowledgeCode2  ") );
         return( dstrFldLabel_932_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_932_6( I_("InvKnowledgeCode2  ") );
         return( dstrFldLabel_932_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_932_3( I_("InvKnowledgeCode2  ") );
         return( dstrFldLabel_932_3 );
      }
      static const DString dstrFldLabel_932_1( I_("InvKnowledgeCode2  ") );
      return( dstrFldLabel_932_1 );
   }
   PBF_SSC subset_super_chooser_2_932( const ClientLocale& locale )
   {
      return chooser_ss_002_027; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvKnowledgeCode2(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvKnowledgeCode2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvKnowledgeCode2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvKnowledgeCode2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_932 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvKnowledgeDesc2 (933)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvKnowledgeDesc2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_933_4( I_("0") );
      return( dstrDefValue_933_4 );
   }
   const DString& s_FldProp_InvKnowledgeDesc2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_933_4( I_("InvKnowledgeDesc2  ") );
      return( dstrFldLabel_933_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvKnowledgeDesc2(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvKnowledgeDesc2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvKnowledgeDesc2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvKnowledgeDesc2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvHorizonCode2 (934)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvHorizonCode2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_934_4( I_("0") );
         return( dstrDefValue_934_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_934_5( I_("") );
         return( dstrDefValue_934_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_934_8( I_("") );
         return( dstrDefValue_934_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_934_7( I_("") );
         return( dstrDefValue_934_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_934_1( I_("") );
         return( dstrDefValue_934_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_934_3( I_("") );
         return( dstrDefValue_934_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_934_6( I_("0") );
         return( dstrDefValue_934_6 );
      }
      static const DString dstrDefValue_934_1( I_("") );
      return( dstrDefValue_934_1 );
   }
   const DString& s_FldProp_InvHorizonCode2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_934_4( I_("InvHorizonCode2  ") );
         return( dstrFldLabel_934_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_934_5( I_("InvHorizonCode2  ") );
         return( dstrFldLabel_934_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_934_8( I_("InvHorizonCode2  ") );
         return( dstrFldLabel_934_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_934_7( I_("InvHorizonCode2  ") );
         return( dstrFldLabel_934_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_934_1( I_("InvHorizonCode2  ") );
         return( dstrFldLabel_934_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_934_3( I_("InvHorizonCode2  ") );
         return( dstrFldLabel_934_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_934_6( I_("InvHorizonCode2  ") );
         return( dstrFldLabel_934_6 );
      }
      static const DString dstrFldLabel_934_1( I_("InvHorizonCode2  ") );
      return( dstrFldLabel_934_1 );
   }
   PBF_SSC subset_super_chooser_2_934( const ClientLocale& locale )
   {
      return chooser_ss_002_024; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvHorizonCode2(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvHorizonCode2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvHorizonCode2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvHorizonCode2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_934 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InvHorizonDesc2 (935)
   //------------------------------------------------------------------
   const DString& s_FldProp_InvHorizonDesc2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_935_4( I_("0") );
      return( dstrDefValue_935_4 );
   }
   const DString& s_FldProp_InvHorizonDesc2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_935_4( I_("InvHorizonDesc2  ") );
      return( dstrFldLabel_935_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InvHorizonDesc2(
       BFDataFieldProperties::Type::text // field is a text field
      ,InvHorizonDesc2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InvHorizonDesc2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InvHorizonDesc2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RiskToleranceCode2 (936)
   //------------------------------------------------------------------
   const DString& s_FldProp_RiskToleranceCode2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_936_5( I_("") );
         return( dstrDefValue_936_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_936_8( I_("") );
         return( dstrDefValue_936_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_936_7( I_("") );
         return( dstrDefValue_936_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_936_6( I_("0") );
         return( dstrDefValue_936_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_936_3( I_("") );
         return( dstrDefValue_936_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_936_1( I_("") );
         return( dstrDefValue_936_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_936_4( I_("0") );
         return( dstrDefValue_936_4 );
      }
      static const DString dstrDefValue_936_1( I_("") );
      return( dstrDefValue_936_1 );
   }
   const DString& s_FldProp_RiskToleranceCode2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_936_5( I_("RiskToleranceCode2  ") );
         return( dstrFldLabel_936_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_936_8( I_("RiskToleranceCode2  ") );
         return( dstrFldLabel_936_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_936_7( I_("RiskToleranceCode2  ") );
         return( dstrFldLabel_936_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_936_6( I_("RiskToleranceCode2  ") );
         return( dstrFldLabel_936_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_936_3( I_("RiskToleranceCode2  ") );
         return( dstrFldLabel_936_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_936_1( I_("RiskToleranceCode2  ") );
         return( dstrFldLabel_936_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_936_4( I_("RiskToleranceCode2  ") );
         return( dstrFldLabel_936_4 );
      }
      static const DString dstrFldLabel_936_1( I_("RiskToleranceCode2  ") );
      return( dstrFldLabel_936_1 );
   }
   PBF_SSC subset_super_chooser_2_936( const ClientLocale& locale )
   {
      return chooser_ss_002_042; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RiskToleranceCode2(
       BFDataFieldProperties::Type::text // field is a text field
      ,RiskToleranceCode2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RiskToleranceCode2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RiskToleranceCode2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_936 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RiskToleranceDesc2 (937)
   //------------------------------------------------------------------
   const DString& s_FldProp_RiskToleranceDesc2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_937_4( I_("0") );
      return( dstrDefValue_937_4 );
   }
   const DString& s_FldProp_RiskToleranceDesc2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_937_4( I_("RiskToleranceDesc2  ") );
      return( dstrFldLabel_937_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RiskToleranceDesc2(
       BFDataFieldProperties::Type::text // field is a text field
      ,RiskToleranceDesc2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RiskToleranceDesc2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RiskToleranceDesc2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OtherInvestments2 (938)
   //------------------------------------------------------------------
   const DString& s_FldProp_OtherInvestments2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_938_5( I_("") );
         return( dstrDefValue_938_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_938_7( I_("") );
         return( dstrDefValue_938_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_938_8( I_("") );
         return( dstrDefValue_938_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_938_6( I_("0") );
         return( dstrDefValue_938_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_938_4( I_("0") );
         return( dstrDefValue_938_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_938_3( I_("") );
         return( dstrDefValue_938_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_938_1( I_("") );
         return( dstrDefValue_938_1 );
      }
      static const DString dstrDefValue_938_1( I_("") );
      return( dstrDefValue_938_1 );
   }
   const DString& s_FldProp_OtherInvestments2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_938_5( I_("OtherInvestments2  ") );
         return( dstrFldLabel_938_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_938_7( I_("OtherInvestments2  ") );
         return( dstrFldLabel_938_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_938_8( I_("OtherInvestments2  ") );
         return( dstrFldLabel_938_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_938_6( I_("OtherInvestments2  ") );
         return( dstrFldLabel_938_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_938_4( I_("OtherInvestments2  ") );
         return( dstrFldLabel_938_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_938_3( I_("OtherInvestments2  ") );
         return( dstrFldLabel_938_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_938_1( I_("OtherInvestments2  ") );
         return( dstrFldLabel_938_1 );
      }
      static const DString dstrFldLabel_938_1( I_("OtherInvestments2  ") );
      return( dstrFldLabel_938_1 );
   }
   PBF_SSC subset_super_chooser_2_938( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OtherInvestments2(
       BFDataFieldProperties::Type::text // field is a text field
      ,OtherInvestments2 // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OtherInvestments2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OtherInvestments2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_938 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdvisorCode2 (939)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdvisorCode2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_939_8( I_("") );
         return( dstrDefValue_939_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_939_7( I_("") );
         return( dstrDefValue_939_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_939_5( I_("") );
         return( dstrDefValue_939_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_939_6( I_("0") );
         return( dstrDefValue_939_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_939_3( I_("") );
         return( dstrDefValue_939_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_939_1( I_("") );
         return( dstrDefValue_939_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_939_4( I_("0") );
         return( dstrDefValue_939_4 );
      }
      static const DString dstrDefValue_939_1( I_("") );
      return( dstrDefValue_939_1 );
   }
   const DString& s_FldProp_AdvisorCode2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_939_8( I_("AdvisorCode2  ") );
         return( dstrFldLabel_939_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_939_7( I_("AdvisorCode2  ") );
         return( dstrFldLabel_939_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_939_5( I_("AdvisorCode2  ") );
         return( dstrFldLabel_939_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_939_6( I_("AdvisorCode2  ") );
         return( dstrFldLabel_939_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_939_3( I_("AdvisorCode2  ") );
         return( dstrFldLabel_939_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_939_1( I_("AdvisorCode2  ") );
         return( dstrFldLabel_939_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_939_4( I_("AdvisorCode2  ") );
         return( dstrFldLabel_939_4 );
      }
      static const DString dstrFldLabel_939_1( I_("AdvisorCode2  ") );
      return( dstrFldLabel_939_1 );
   }
   PBF_SSC subset_super_chooser_2_939( const ClientLocale& locale )
   {
      return chooser_ss_002_011; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdvisorCode2(
       BFDataFieldProperties::Type::text // field is a text field
      ,AdvisorCode2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AdvisorCode2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AdvisorCode2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_939 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AdvisorDesc2 (940)
   //------------------------------------------------------------------
   const DString& s_FldProp_AdvisorDesc2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_940_4( I_("0") );
      return( dstrDefValue_940_4 );
   }
   const DString& s_FldProp_AdvisorDesc2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_940_4( I_("AdvisorDesc2  ") );
      return( dstrFldLabel_940_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AdvisorDesc2(
       BFDataFieldProperties::Type::text // field is a text field
      ,AdvisorDesc2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AdvisorDesc2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AdvisorDesc2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WitnessName2 (941)
   //------------------------------------------------------------------
   const DString& s_FldProp_WitnessName2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_941_5( I_("0") );
      return( dstrDefValue_941_5 );
   }
   const DString& s_FldProp_WitnessName2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_941_5( I_("WitnessName2  ") );
      return( dstrFldLabel_941_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WitnessName2(
       BFDataFieldProperties::Type::text // field is a text field
      ,WitnessName2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WitnessName2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WitnessName2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WitnessAddr12 (942)
   //------------------------------------------------------------------
   const DString& s_FldProp_WitnessAddr12_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_942_4( I_("0") );
      return( dstrDefValue_942_4 );
   }
   const DString& s_FldProp_WitnessAddr12_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_942_4( I_("WitnessAddr12  ") );
      return( dstrFldLabel_942_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WitnessAddr12(
       BFDataFieldProperties::Type::text // field is a text field
      ,WitnessAddr12 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WitnessAddr12_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WitnessAddr12_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WitnessAddr2 (943)
   //------------------------------------------------------------------
   const DString& s_FldProp_WitnessAddr2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_943_4( I_("0") );
         return( dstrDefValue_943_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_943_7( I_("0") );
         return( dstrDefValue_943_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_943_5( I_("") );
         return( dstrDefValue_943_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_943_8( I_("0") );
         return( dstrDefValue_943_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_943_3( I_("") );
         return( dstrDefValue_943_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_943_1( I_("") );
         return( dstrDefValue_943_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_943_6( I_("0") );
         return( dstrDefValue_943_6 );
      }
      static const DString dstrDefValue_943_1( I_("") );
      return( dstrDefValue_943_1 );
   }
   const DString& s_FldProp_WitnessAddr2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_943_4( I_("WitnessAddr2  ") );
         return( dstrFldLabel_943_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_943_7( I_("WitnessAddr2  ") );
         return( dstrFldLabel_943_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_943_5( I_("WitnessAddr2  ") );
         return( dstrFldLabel_943_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_943_8( I_("WitnessAddr2  ") );
         return( dstrFldLabel_943_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_943_3( I_("WitnessAddr2  ") );
         return( dstrFldLabel_943_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_943_1( I_("WitnessAddr2  ") );
         return( dstrFldLabel_943_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_943_6( I_("WitnessAddr2  ") );
         return( dstrFldLabel_943_6 );
      }
      static const DString dstrFldLabel_943_1( I_("WitnessAddr2  ") );
      return( dstrFldLabel_943_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WitnessAddr2(
       BFDataFieldProperties::Type::text // field is a text field
      ,WitnessAddr2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WitnessAddr2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WitnessAddr2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EffectiveDate2 (944)
   //------------------------------------------------------------------
   const DString& s_FldProp_EffectiveDate2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_944_5( I_(" ") );
      return( dstrDefValue_944_5 );
   }
   const DString& s_FldProp_EffectiveDate2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_944_5( I_("EffectiveDate2") );
      return( dstrFldLabel_944_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EffectiveDate2(
       BFDataFieldProperties::Type::date // field is a date field
      ,EffectiveDate2 // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_EffectiveDate2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_EffectiveDate2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProcessDate2 (945)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProcessDate2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_945_4( I_("   ") );
         return( dstrDefValue_945_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_945_7( I_("") );
         return( dstrDefValue_945_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_945_8( I_("") );
         return( dstrDefValue_945_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_945_5( I_("   ") );
         return( dstrDefValue_945_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_945_1( I_("") );
         return( dstrDefValue_945_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_945_6( I_("") );
         return( dstrDefValue_945_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_945_3( I_("") );
         return( dstrDefValue_945_3 );
      }
      static const DString dstrDefValue_945_1( I_("") );
      return( dstrDefValue_945_1 );
   }
   const DString& s_FldProp_ProcessDate2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_945_4( I_("ProcessDate2  ") );
         return( dstrFldLabel_945_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_945_7( I_("ProcessDate2  ") );
         return( dstrFldLabel_945_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_945_8( I_("ProcessDate2  ") );
         return( dstrFldLabel_945_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_945_5( I_("ProcessDate2  ") );
         return( dstrFldLabel_945_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_945_1( I_("ProcessDate2  ") );
         return( dstrFldLabel_945_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_945_6( I_("ProcessDate2  ") );
         return( dstrFldLabel_945_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_945_3( I_("ProcessDate2  ") );
         return( dstrFldLabel_945_3 );
      }
      static const DString dstrFldLabel_945_1( I_("ProcessDate2  ") );
      return( dstrFldLabel_945_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProcessDate2(
       BFDataFieldProperties::Type::date // field is a date field
      ,ProcessDate2 // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ProcessDate2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ProcessDate2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PersonalSecCode2 (946)
   //------------------------------------------------------------------
   const DString& s_FldProp_PersonalSecCode2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_946_4( I_("0") );
      return( dstrDefValue_946_4 );
   }
   const DString& s_FldProp_PersonalSecCode2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_946_4( I_("PersonalSecCode2  ") );
      return( dstrFldLabel_946_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PersonalSecCode2(
       BFDataFieldProperties::Type::text // field is a text field
      ,PersonalSecCode2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PersonalSecCode2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PersonalSecCode2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WitnessAddr22 (947)
   //------------------------------------------------------------------
   const DString& s_FldProp_WitnessAddr22_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_947_4( I_("0") );
      return( dstrDefValue_947_4 );
   }
   const DString& s_FldProp_WitnessAddr22_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_947_4( I_("WitnessAddr22  ") );
      return( dstrFldLabel_947_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WitnessAddr22(
       BFDataFieldProperties::Type::text // field is a text field
      ,WitnessAddr22 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WitnessAddr22_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WitnessAddr22_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankDetlRid (948)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankDetlRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_948_4( I_("0") );
      return( dstrDefValue_948_4 );
   }
   double s_FldProp_BankDetlRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_BankDetlRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_948_4( I_("BankDetlRid    ") );
      return( dstrFldLabel_948_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankDetlRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BankDetlRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_BankDetlRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BankDetlRid_d_DVF // default value
      ,s_FldProp_BankDetlRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DistribDetlVer (949)
   //------------------------------------------------------------------
   const DString& s_FldProp_DistribDetlVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_949_5( I_("0") );
      return( dstrDefValue_949_5 );
   }
   double s_FldProp_DistribDetlVer_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_DistribDetlVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_949_5( I_("DistribDetlVer   ") );
      return( dstrFldLabel_949_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DistribDetlVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DistribDetlVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_DistribDetlVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DistribDetlVer_d_DVF // default value
      ,s_FldProp_DistribDetlVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DistribDetlRid (950)
   //------------------------------------------------------------------
   const DString& s_FldProp_DistribDetlRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_950_4( I_("0") );
      return( dstrDefValue_950_4 );
   }
   double s_FldProp_DistribDetlRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_DistribDetlRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_950_4( I_("DistribDetlRid   ") );
      return( dstrFldLabel_950_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DistribDetlRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DistribDetlRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_DistribDetlRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DistribDetlRid_d_DVF // default value
      ,s_FldProp_DistribDetlRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RecordType (951)
   //------------------------------------------------------------------
   const DString& s_FldProp_RecordType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_951_5( I_("0") );
      return( dstrDefValue_951_5 );
   }
   const DString& s_FldProp_RecordType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_951_5( I_("RecordType  ") );
      return( dstrFldLabel_951_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RecordType(
       BFDataFieldProperties::Type::text // field is a text field
      ,RecordType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RecordType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RecordType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_YearDesc (952)
   //------------------------------------------------------------------
   const DString& s_FldProp_YearDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_952_5( I_("0") );
      return( dstrDefValue_952_5 );
   }
   const DString& s_FldProp_YearDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_952_5( I_("YearDesc  ") );
      return( dstrFldLabel_952_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_YearDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,YearDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_YearDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_YearDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddressFileVer (953)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddressFileVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_953_4( I_("0") );
      return( dstrDefValue_953_4 );
   }
   double s_FldProp_AddressFileVer_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AddressFileVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_953_4( I_("AddressFileVer    ") );
      return( dstrFldLabel_953_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddressFileVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AddressFileVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_AddressFileVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AddressFileVer_d_DVF // default value
      ,s_FldProp_AddressFileVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddressFileRid (954)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddressFileRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_954_5( I_("0") );
      return( dstrDefValue_954_5 );
   }
   double s_FldProp_AddressFileRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_AddressFileRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_954_5( I_("AddressFileRid") );
      return( dstrFldLabel_954_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddressFileRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AddressFileRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_AddressFileRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AddressFileRid_d_DVF // default value
      ,s_FldProp_AddressFileRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankingInstr (955)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankingInstr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_955_4( I_("N") );
      return( dstrDefValue_955_4 );
   }
   const DString& s_FldProp_BankingInstr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_955_4( I_("BankingInstr") );
      return( dstrFldLabel_955_4 );
   }
   PBF_SSC subset_super_chooser_2_955( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankingInstr(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankingInstr // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankingInstr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankingInstr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_955 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankAcctVer (956)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankAcctVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_956_4( I_("0") );
      return( dstrDefValue_956_4 );
   }
   double s_FldProp_BankAcctVer_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_BankAcctVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_956_4( I_("BankAcctVer   ") );
      return( dstrFldLabel_956_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankAcctVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BankAcctVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_BankAcctVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BankAcctVer_d_DVF // default value
      ,s_FldProp_BankAcctVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankAcctRid (957)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankAcctRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_957_5( I_("0") );
      return( dstrDefValue_957_5 );
   }
   double s_FldProp_BankAcctRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_BankAcctRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_957_5( I_("BankAcctRid   ") );
      return( dstrFldLabel_957_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankAcctRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,BankAcctRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_BankAcctRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_BankAcctRid_d_DVF // default value
      ,s_FldProp_BankAcctRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Baycom (958)
   //------------------------------------------------------------------
   const DString& s_FldProp_Baycom_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_958_8( I_("0") );
      return( dstrDefValue_958_8 );
   }
   const DString& s_FldProp_Baycom_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_958_8( I_("Baycom   ") );
      return( dstrFldLabel_958_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Baycom(
       BFDataFieldProperties::Type::text // field is a text field
      ,Baycom // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Baycom_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Baycom_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RSPflag (959)
   //------------------------------------------------------------------
   const DString& s_FldProp_RSPflag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_959_4( I_("0") );
      return( dstrDefValue_959_4 );
   }
   const DString& s_FldProp_RSPflag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_959_4( I_("RSPflag  ") );
      return( dstrFldLabel_959_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RSPflag(
       BFDataFieldProperties::Type::text // field is a text field
      ,RSPflag // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RSPflag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RSPflag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LoadType (960)
   //------------------------------------------------------------------
   const DString& s_FldProp_LoadType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_960_4( I_("0") );
      return( dstrDefValue_960_4 );
   }
   const DString& s_FldProp_LoadType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_960_4( I_("LoadType  ") );
      return( dstrFldLabel_960_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LoadType(
       BFDataFieldProperties::Type::text // field is a text field
      ,LoadType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LoadType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LoadType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RIFflag (961)
   //------------------------------------------------------------------
   const DString& s_FldProp_RIFflag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_961_4( I_("0") );
      return( dstrDefValue_961_4 );
   }
   const DString& s_FldProp_RIFflag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_961_4( I_("RIFflag  ") );
      return( dstrFldLabel_961_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RIFflag(
       BFDataFieldProperties::Type::text // field is a text field
      ,RIFflag // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RIFflag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RIFflag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RecurDetlVer (962)
   //------------------------------------------------------------------
   const DString& s_FldProp_RecurDetlVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_962_5( I_("0") );
      return( dstrDefValue_962_5 );
   }
   const DString& s_FldProp_RecurDetlVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_962_5( I_("RecurDetlVer  ") );
      return( dstrFldLabel_962_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RecurDetlVer(
       BFDataFieldProperties::Type::text // field is a text field
      ,RecurDetlVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_16 // mask chooser function
      ,s_FldProp_RecurDetlVer_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RecurDetlVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PACavail (963)
   //------------------------------------------------------------------
   const DString& s_FldProp_PACavail_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_963_4( I_("0") );
      return( dstrDefValue_963_4 );
   }
   const DString& s_FldProp_PACavail_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_963_4( I_("PACavail  ") );
      return( dstrFldLabel_963_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PACavail(
       BFDataFieldProperties::Type::text // field is a text field
      ,PACavail // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PACavail_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PACavail_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SWPavail (964)
   //------------------------------------------------------------------
   const DString& s_FldProp_SWPavail_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_964_5( I_("0") );
      return( dstrDefValue_964_5 );
   }
   const DString& s_FldProp_SWPavail_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_964_5( I_("SWPavail  ") );
      return( dstrFldLabel_964_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SWPavail(
       BFDataFieldProperties::Type::text // field is a text field
      ,SWPavail // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SWPavail_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SWPavail_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundStatus (965)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundStatus_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_965_5( I_("0") );
      return( dstrDefValue_965_5 );
   }
   const DString& s_FldProp_FundStatus_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_965_5( I_("FundStatus  ") );
      return( dstrFldLabel_965_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundStatus(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundStatus // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundStatus_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundStatus_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StatusDate (966)
   //------------------------------------------------------------------
   const DString& s_FldProp_StatusDate_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_966_4( I_("   ") );
         return( dstrDefValue_966_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_966_7( I_("") );
         return( dstrDefValue_966_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_966_5( I_("   ") );
         return( dstrDefValue_966_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_966_8( I_("") );
         return( dstrDefValue_966_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_966_3( I_("") );
         return( dstrDefValue_966_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_966_1( I_("") );
         return( dstrDefValue_966_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_966_6( I_("") );
         return( dstrDefValue_966_6 );
      }
      static const DString dstrDefValue_966_1( I_("") );
      return( dstrDefValue_966_1 );
   }
   const DString& s_FldProp_StatusDate_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_966_4( I_("StatusDate  ") );
         return( dstrFldLabel_966_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_966_7( I_("StatusDate  ") );
         return( dstrFldLabel_966_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_966_5( I_("StatusDate  ") );
         return( dstrFldLabel_966_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_966_8( I_("StatusDate  ") );
         return( dstrFldLabel_966_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_966_3( I_("StatusDate  ") );
         return( dstrFldLabel_966_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_966_1( I_("StatusDate  ") );
         return( dstrFldLabel_966_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_966_6( I_("StatusDate  ") );
         return( dstrFldLabel_966_6 );
      }
      static const DString dstrFldLabel_966_1( I_("StatusDate  ") );
      return( dstrFldLabel_966_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StatusDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,StatusDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StatusDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StatusDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityAddrVer (967)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityAddrVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_967_5( I_("0") );
      return( dstrDefValue_967_5 );
   }
   double s_FldProp_EntityAddrVer_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_EntityAddrVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_967_5( I_("EntityAddrVer   ") );
      return( dstrFldLabel_967_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityAddrVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EntityAddrVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_EntityAddrVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EntityAddrVer_d_DVF // default value
      ,s_FldProp_EntityAddrVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityAddrRid (968)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityAddrRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_968_4( I_("0") );
      return( dstrDefValue_968_4 );
   }
   double s_FldProp_EntityAddrRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_EntityAddrRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_968_4( I_("EntityAddrRid   ") );
      return( dstrFldLabel_968_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityAddrRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EntityAddrRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_EntityAddrRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EntityAddrRid_d_DVF // default value
      ,s_FldProp_EntityAddrRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityAddrXrefVer (969)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityAddrXrefVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_969_4( I_("0") );
      return( dstrDefValue_969_4 );
   }
   double s_FldProp_EntityAddrXrefVer_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_EntityAddrXrefVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_969_4( I_("EntityAddrXrefVer   ") );
      return( dstrFldLabel_969_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityAddrXrefVer(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EntityAddrXrefVer // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_EntityAddrXrefVer_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EntityAddrXrefVer_d_DVF // default value
      ,s_FldProp_EntityAddrXrefVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EntityAddrXrefRid (970)
   //------------------------------------------------------------------
   const DString& s_FldProp_EntityAddrXrefRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_970_5( I_("0") );
      return( dstrDefValue_970_5 );
   }
   double s_FldProp_EntityAddrXrefRid_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_EntityAddrXrefRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_970_5( I_("EntityAddrXrefRid   ") );
      return( dstrFldLabel_970_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EntityAddrXrefRid(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EntityAddrXrefRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_EntityAddrXrefRid_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EntityAddrXrefRid_d_DVF // default value
      ,s_FldProp_EntityAddrXrefRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DistributionHeadingSet (971)
   //------------------------------------------------------------------
   const DString& s_FldProp_DistributionHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_971_5( I_("") );
         return( dstrDefValue_971_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_971_4( I_("0") );
         return( dstrDefValue_971_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_971_8( I_("") );
         return( dstrDefValue_971_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_971_7( I_("") );
         return( dstrDefValue_971_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_971_1( I_("") );
         return( dstrDefValue_971_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_971_3( I_("") );
         return( dstrDefValue_971_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_971_6( I_("0") );
         return( dstrDefValue_971_6 );
      }
      static const DString dstrDefValue_971_1( I_("") );
      return( dstrDefValue_971_1 );
   }
   const DString& s_FldProp_DistributionHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_971_5( I_("DistributionHeadingSet") );
         return( dstrFldLabel_971_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_971_4( I_("DistributionHeadingSet") );
         return( dstrFldLabel_971_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_971_8( I_("DistributionHeadingSet") );
         return( dstrFldLabel_971_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_971_7( I_("DistributionHeadingSet") );
         return( dstrFldLabel_971_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_971_1( I_("DistributionHeadingSet") );
         return( dstrFldLabel_971_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_971_3( I_("DistributionHeadingSet") );
         return( dstrFldLabel_971_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_971_6( I_("DistributionHeadingSet") );
         return( dstrFldLabel_971_6 );
      }
      static const DString dstrFldLabel_971_1( I_("DistributionHeadingSet") );
      return( dstrFldLabel_971_1 );
   }
   PBF_SSC subset_super_chooser_2_971( const ClientLocale& locale )
   {
      return chooser_ss_002_066; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DistributionHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,DistributionHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DistributionHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DistributionHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_971 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_VerifySearchHeadingSet (972)
   //------------------------------------------------------------------
   const DString& s_FldProp_VerifySearchHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_972_4( I_("0") );
         return( dstrDefValue_972_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_972_8( I_("") );
         return( dstrDefValue_972_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_972_7( I_("") );
         return( dstrDefValue_972_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_972_5( I_("") );
         return( dstrDefValue_972_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_972_3( I_("") );
         return( dstrDefValue_972_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_972_1( I_("") );
         return( dstrDefValue_972_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_972_6( I_("0") );
         return( dstrDefValue_972_6 );
      }
      static const DString dstrDefValue_972_1( I_("") );
      return( dstrDefValue_972_1 );
   }
   const DString& s_FldProp_VerifySearchHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_972_4( I_("VerifySearchHeadingSet  ") );
         return( dstrFldLabel_972_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_972_8( I_("VerifySearchHeadingSet  ") );
         return( dstrFldLabel_972_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_972_7( I_("VerifySearchHeadingSet  ") );
         return( dstrFldLabel_972_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_972_5( I_("VerifySearchHeadingSet  ") );
         return( dstrFldLabel_972_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_972_3( I_("VerifySearchHeadingSet  ") );
         return( dstrFldLabel_972_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_972_1( I_("VerifySearchHeadingSet  ") );
         return( dstrFldLabel_972_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_972_6( I_("VerifySearchHeadingSet  ") );
         return( dstrFldLabel_972_6 );
      }
      static const DString dstrFldLabel_972_1( I_("VerifySearchHeadingSet  ") );
      return( dstrFldLabel_972_1 );
   }
   PBF_SSC subset_super_chooser_2_972( const ClientLocale& locale )
   {
      return chooser_ss_002_067; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_VerifySearchHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,VerifySearchHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_VerifySearchHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_VerifySearchHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_972 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AllocationUsage (973)
   //------------------------------------------------------------------
   const DString& s_FldProp_AllocationUsage_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_973_4( I_("0") );
         return( dstrDefValue_973_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_973_5( I_("") );
         return( dstrDefValue_973_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_973_8( I_("") );
         return( dstrDefValue_973_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_973_7( I_("") );
         return( dstrDefValue_973_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_973_1( I_("") );
         return( dstrDefValue_973_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_973_3( I_("") );
         return( dstrDefValue_973_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_973_6( I_("0") );
         return( dstrDefValue_973_6 );
      }
      static const DString dstrDefValue_973_1( I_("") );
      return( dstrDefValue_973_1 );
   }
   const DString& s_FldProp_AllocationUsage_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_973_4( I_("AllocationUsage") );
         return( dstrFldLabel_973_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_973_5( I_("AllocationUsage") );
         return( dstrFldLabel_973_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_973_8( I_("AllocationUsage") );
         return( dstrFldLabel_973_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_973_7( I_("AllocationUsage") );
         return( dstrFldLabel_973_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_973_1( I_("AllocationUsage") );
         return( dstrFldLabel_973_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_973_3( I_("AllocationUsage") );
         return( dstrFldLabel_973_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_973_6( I_("AllocationUsage") );
         return( dstrFldLabel_973_6 );
      }
      static const DString dstrFldLabel_973_1( I_("AllocationUsage") );
      return( dstrFldLabel_973_1 );
   }
   PBF_SSC subset_super_chooser_2_973( const ClientLocale& locale )
   {
      return chooser_ss_002_069; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AllocationUsage(
       BFDataFieldProperties::Type::text // field is a text field
      ,AllocationUsage // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AllocationUsage_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AllocationUsage_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_973 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FreeUnitHeadingSet (974)
   //------------------------------------------------------------------
   const DString& s_FldProp_FreeUnitHeadingSet_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_974_4( I_("0") );
         return( dstrDefValue_974_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_974_7( I_("") );
         return( dstrDefValue_974_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_974_5( I_("") );
         return( dstrDefValue_974_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_974_8( I_("") );
         return( dstrDefValue_974_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_974_3( I_("") );
         return( dstrDefValue_974_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_974_1( I_("") );
         return( dstrDefValue_974_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_974_6( I_("0") );
         return( dstrDefValue_974_6 );
      }
      static const DString dstrDefValue_974_1( I_("") );
      return( dstrDefValue_974_1 );
   }
   const DString& s_FldProp_FreeUnitHeadingSet_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_974_4( I_("FreeUnitHeadingSet  ") );
         return( dstrFldLabel_974_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_974_7( I_("FreeUnitHeadingSet  ") );
         return( dstrFldLabel_974_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_974_5( I_("FreeUnitHeadingSet  ") );
         return( dstrFldLabel_974_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_974_8( I_("FreeUnitHeadingSet  ") );
         return( dstrFldLabel_974_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_974_3( I_("FreeUnitHeadingSet  ") );
         return( dstrFldLabel_974_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_974_1( I_("FreeUnitHeadingSet  ") );
         return( dstrFldLabel_974_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_974_6( I_("FreeUnitHeadingSet  ") );
         return( dstrFldLabel_974_6 );
      }
      static const DString dstrFldLabel_974_1( I_("FreeUnitHeadingSet  ") );
      return( dstrFldLabel_974_1 );
   }
   PBF_SSC subset_super_chooser_2_974( const ClientLocale& locale )
   {
      return chooser_ss_002_070; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FreeUnitHeadingSet(
       BFDataFieldProperties::Type::text // field is a text field
      ,FreeUnitHeadingSet // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FreeUnitHeadingSet_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FreeUnitHeadingSet_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_974 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ConsolEFT (975)
   //------------------------------------------------------------------
   const DString& s_FldProp_ConsolEFT_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_975_5( I_("Y") );
         return( dstrDefValue_975_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_975_8( I_("Y") );
         return( dstrDefValue_975_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_975_7( I_("Y") );
         return( dstrDefValue_975_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_975_6( I_("Y") );
         return( dstrDefValue_975_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_975_3( I_("Y") );
         return( dstrDefValue_975_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_975_1( I_("Y") );
         return( dstrDefValue_975_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_975_4( I_("N") );
         return( dstrDefValue_975_4 );
      }
      static const DString dstrDefValue_975_1( I_("Y") );
      return( dstrDefValue_975_1 );
   }
   const DString& s_FldProp_ConsolEFT_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_975_5( I_("ConsolEFT") );
         return( dstrFldLabel_975_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_975_8( I_("ConsolEFT") );
         return( dstrFldLabel_975_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_975_7( I_("ConsolEFT") );
         return( dstrFldLabel_975_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_975_6( I_("ConsolEFT") );
         return( dstrFldLabel_975_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_975_3( I_("ConsolEFT") );
         return( dstrFldLabel_975_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_975_1( I_("ConsolEFT") );
         return( dstrFldLabel_975_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_975_4( I_("ConsolEFT") );
         return( dstrFldLabel_975_4 );
      }
      static const DString dstrFldLabel_975_1( I_("ConsolEFT") );
      return( dstrFldLabel_975_1 );
   }
   PBF_SSC subset_super_chooser_2_975( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ConsolEFT(
       BFDataFieldProperties::Type::text // field is a text field
      ,ConsolEFT // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ConsolEFT_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ConsolEFT_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_975 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SystematicTransType (976)
   //------------------------------------------------------------------
   const DString& s_FldProp_SystematicTransType_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_976_4( I_("0") );
         return( dstrDefValue_976_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_976_7( I_("") );
         return( dstrDefValue_976_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_976_5( I_("") );
         return( dstrDefValue_976_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_976_8( I_("") );
         return( dstrDefValue_976_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_976_3( I_("") );
         return( dstrDefValue_976_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_976_1( I_("") );
         return( dstrDefValue_976_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_976_6( I_("0") );
         return( dstrDefValue_976_6 );
      }
      static const DString dstrDefValue_976_1( I_("") );
      return( dstrDefValue_976_1 );
   }
   const DString& s_FldProp_SystematicTransType_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_976_4( I_("SystematicTransType  ") );
         return( dstrFldLabel_976_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_976_7( I_("SystematicTransType  ") );
         return( dstrFldLabel_976_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_976_5( I_("SystematicTransType  ") );
         return( dstrFldLabel_976_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_976_8( I_("SystematicTransType  ") );
         return( dstrFldLabel_976_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_976_3( I_("SystematicTransType  ") );
         return( dstrFldLabel_976_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_976_1( I_("SystematicTransType  ") );
         return( dstrFldLabel_976_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_976_6( I_("SystematicTransType  ") );
         return( dstrFldLabel_976_6 );
      }
      static const DString dstrFldLabel_976_1( I_("SystematicTransType  ") );
      return( dstrFldLabel_976_1 );
   }
   PBF_SSC subset_super_chooser_2_976( const ClientLocale& locale )
   {
      return chooser_ss_002_071; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SystematicTransType(
       BFDataFieldProperties::Type::text // field is a text field
      ,SystematicTransType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SystematicTransType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SystematicTransType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_976 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Level (977)
   //------------------------------------------------------------------
   const DString& s_FldProp_Level_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_977_5( I_("0") );
      return( dstrDefValue_977_5 );
   }
   double s_FldProp_Level_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_Level_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_977_5( I_("Level") );
      return( dstrFldLabel_977_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Level(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Level // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_26 // mask chooser function
      ,s_FldProp_Level_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Level_d_DVF // default value
      ,s_FldProp_Level_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LastEvent (978)
   //------------------------------------------------------------------
   const DString& s_FldProp_LastEvent_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_978_8( I_("") );
         return( dstrDefValue_978_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_978_7( I_("") );
         return( dstrDefValue_978_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_978_5( I_("   ") );
         return( dstrDefValue_978_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_978_6( I_("") );
         return( dstrDefValue_978_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_978_3( I_("") );
         return( dstrDefValue_978_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_978_1( I_("") );
         return( dstrDefValue_978_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_978_4( I_("   ") );
         return( dstrDefValue_978_4 );
      }
      static const DString dstrDefValue_978_1( I_("") );
      return( dstrDefValue_978_1 );
   }
   const DString& s_FldProp_LastEvent_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_978_8( I_("LastEvent  ") );
         return( dstrFldLabel_978_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_978_7( I_("LastEvent  ") );
         return( dstrFldLabel_978_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_978_5( I_("LastEvent  ") );
         return( dstrFldLabel_978_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_978_6( I_("LastEvent  ") );
         return( dstrFldLabel_978_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_978_3( I_("LastEvent  ") );
         return( dstrFldLabel_978_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_978_1( I_("LastEvent  ") );
         return( dstrFldLabel_978_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_978_4( I_("LastEvent  ") );
         return( dstrFldLabel_978_4 );
      }
      static const DString dstrFldLabel_978_1( I_("LastEvent  ") );
      return( dstrFldLabel_978_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LastEvent(
       BFDataFieldProperties::Type::date // field is a date field
      ,LastEvent // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LastEvent_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LastEvent_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WireElig (979)
   //------------------------------------------------------------------
   const DString& s_FldProp_WireElig_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_979_4( I_("0") );
      return( dstrDefValue_979_4 );
   }
   const DString& s_FldProp_WireElig_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_979_4( I_("WireElig  ") );
      return( dstrFldLabel_979_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WireElig(
       BFDataFieldProperties::Type::text // field is a text field
      ,WireElig // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_19 // mask chooser function
      ,s_FldProp_WireElig_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WireElig_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Domestic (980)
   //------------------------------------------------------------------
   const DString& s_FldProp_Domestic_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_980_5( I_("0") );
      return( dstrDefValue_980_5 );
   }
   const DString& s_FldProp_Domestic_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_980_5( I_("Domestic  ") );
      return( dstrFldLabel_980_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Domestic(
       BFDataFieldProperties::Type::text // field is a text field
      ,Domestic // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_19 // mask chooser function
      ,s_FldProp_Domestic_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Domestic_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ACBListHeading (981)
   //------------------------------------------------------------------
   const DString& s_FldProp_ACBListHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_981_4( I_("0") );
         return( dstrDefValue_981_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_981_7( I_("") );
         return( dstrDefValue_981_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_981_8( I_("") );
         return( dstrDefValue_981_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_981_5( I_("") );
         return( dstrDefValue_981_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_981_1( I_("") );
         return( dstrDefValue_981_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_981_6( I_("0") );
         return( dstrDefValue_981_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_981_3( I_("") );
         return( dstrDefValue_981_3 );
      }
      static const DString dstrDefValue_981_1( I_("") );
      return( dstrDefValue_981_1 );
   }
   const DString& s_FldProp_ACBListHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_981_4( I_("ACBListHeading") );
         return( dstrFldLabel_981_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_981_7( I_("ACBListHeading") );
         return( dstrFldLabel_981_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_981_8( I_("ACBListHeading") );
         return( dstrFldLabel_981_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_981_5( I_("ACBListHeading") );
         return( dstrFldLabel_981_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_981_1( I_("ACBListHeading") );
         return( dstrFldLabel_981_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_981_6( I_("ACBListHeading") );
         return( dstrFldLabel_981_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_981_3( I_("ACBListHeading") );
         return( dstrFldLabel_981_3 );
      }
      static const DString dstrFldLabel_981_1( I_("ACBListHeading") );
      return( dstrFldLabel_981_1 );
   }
   PBF_SSC subset_super_chooser_2_981( const ClientLocale& locale )
   {
      return chooser_ss_002_074; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ACBListHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,ACBListHeading // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ACBListHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ACBListHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_981 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransactionHeading (982)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransactionHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_982_4( I_("0") );
         return( dstrDefValue_982_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_982_7( I_("") );
         return( dstrDefValue_982_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_982_5( I_("") );
         return( dstrDefValue_982_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_982_8( I_("") );
         return( dstrDefValue_982_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_982_3( I_("") );
         return( dstrDefValue_982_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_982_1( I_("") );
         return( dstrDefValue_982_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_982_6( I_("0") );
         return( dstrDefValue_982_6 );
      }
      static const DString dstrDefValue_982_1( I_("") );
      return( dstrDefValue_982_1 );
   }
   const DString& s_FldProp_TransactionHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_982_4( I_("TransactionHeading") );
         return( dstrFldLabel_982_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_982_7( I_("TransactionHeading") );
         return( dstrFldLabel_982_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_982_5( I_("TransactionHeading") );
         return( dstrFldLabel_982_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_982_8( I_("TransactionHeading") );
         return( dstrFldLabel_982_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_982_3( I_("TransactionHeading") );
         return( dstrFldLabel_982_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_982_1( I_("TransactionHeading") );
         return( dstrFldLabel_982_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_982_6( I_("TransactionHeading") );
         return( dstrFldLabel_982_6 );
      }
      static const DString dstrFldLabel_982_1( I_("TransactionHeading") );
      return( dstrFldLabel_982_1 );
   }
   PBF_SSC subset_super_chooser_2_982( const ClientLocale& locale )
   {
      return chooser_ss_002_075; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransactionHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,TransactionHeading // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransactionHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TransactionHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_982 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PendingHeading (983)
   //------------------------------------------------------------------
   const DString& s_FldProp_PendingHeading_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_983_5( I_("") );
         return( dstrDefValue_983_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_983_7( I_("") );
         return( dstrDefValue_983_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_983_8( I_("") );
         return( dstrDefValue_983_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_983_6( I_("1") );
         return( dstrDefValue_983_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_983_4( I_("1") );
         return( dstrDefValue_983_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_983_3( I_("") );
         return( dstrDefValue_983_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_983_1( I_("") );
         return( dstrDefValue_983_1 );
      }
      static const DString dstrDefValue_983_1( I_("") );
      return( dstrDefValue_983_1 );
   }
   const DString& s_FldProp_PendingHeading_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_983_5( I_("PendingHeading") );
         return( dstrFldLabel_983_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_983_7( I_("PendingHeading") );
         return( dstrFldLabel_983_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_983_8( I_("PendingHeading") );
         return( dstrFldLabel_983_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_983_6( I_("PendingHeading") );
         return( dstrFldLabel_983_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_983_4( I_("PendingHeading") );
         return( dstrFldLabel_983_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_983_3( I_("PendingHeading") );
         return( dstrFldLabel_983_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_983_1( I_("PendingHeading") );
         return( dstrFldLabel_983_1 );
      }
      static const DString dstrFldLabel_983_1( I_("PendingHeading") );
      return( dstrFldLabel_983_1 );
   }
   PBF_SSC subset_super_chooser_2_983( const ClientLocale& locale )
   {
      return chooser_ss_002_076; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PendingHeading(
       BFDataFieldProperties::Type::text // field is a text field
      ,PendingHeading // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PendingHeading_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PendingHeading_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_983 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PendingOrTransHist (984)
   //------------------------------------------------------------------
   const DString& s_FldProp_PendingOrTransHist_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_984_4( I_("0") );
      return( dstrDefValue_984_4 );
   }
   const DString& s_FldProp_PendingOrTransHist_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_984_4( I_("PendingOrTransHist") );
      return( dstrFldLabel_984_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PendingOrTransHist(
       BFDataFieldProperties::Type::text // field is a text field
      ,PendingOrTransHist // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PendingOrTransHist_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PendingOrTransHist_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransactionAmount (985)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransactionAmount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_985_4( I_("0000000000000000000000") );
      return( dstrDefValue_985_4 );
   }
   double s_FldProp_TransactionAmount_d_DVF( const ClientLocale& locale )
   {
      return( 0000000000000000000000 );
   }
   const DString& s_FldProp_TransactionAmount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_985_4( I_("TransactionAmount") );
      return( dstrFldLabel_985_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransactionAmount(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TransactionAmount // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_TransactionAmount_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TransactionAmount_d_DVF // default value
      ,s_FldProp_TransactionAmount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UpdateStatus (989)
   //------------------------------------------------------------------
   const DString& s_FldProp_UpdateStatus_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_989_4( I_("0") );
         return( dstrDefValue_989_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_989_7( I_("N") );
         return( dstrDefValue_989_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_989_5( I_("N") );
         return( dstrDefValue_989_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_989_8( I_("N") );
         return( dstrDefValue_989_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_989_3( I_("N") );
         return( dstrDefValue_989_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_989_1( I_("N") );
         return( dstrDefValue_989_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_989_6( I_("N") );
         return( dstrDefValue_989_6 );
      }
      static const DString dstrDefValue_989_1( I_("N") );
      return( dstrDefValue_989_1 );
   }
   const DString& s_FldProp_UpdateStatus_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_989_4( I_("UpdateStatus   ") );
         return( dstrFldLabel_989_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_989_7( I_("UpdateStatus   ") );
         return( dstrFldLabel_989_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_989_5( I_("UpdateStatus   ") );
         return( dstrFldLabel_989_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_989_8( I_("UpdateStatus   ") );
         return( dstrFldLabel_989_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_989_3( I_("UpdateStatus   ") );
         return( dstrFldLabel_989_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_989_1( I_("UpdateStatus   ") );
         return( dstrFldLabel_989_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_989_6( I_("UpdateStatus   ") );
         return( dstrFldLabel_989_6 );
      }
      static const DString dstrFldLabel_989_1( I_("UpdateStatus   ") );
      return( dstrFldLabel_989_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UpdateStatus(
       BFDataFieldProperties::Type::text // field is a text field
      ,UpdateStatus // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_UpdateStatus_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_UpdateStatus_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RunMode (990)
   //------------------------------------------------------------------
   const DString& s_FldProp_RunMode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_990_5( I_("0") );
      return( dstrDefValue_990_5 );
   }
   const DString& s_FldProp_RunMode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_990_5( I_("RunMode  ") );
      return( dstrFldLabel_990_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RunMode(
       BFDataFieldProperties::Type::text // field is a text field
      ,RunMode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RunMode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RunMode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrFileVer (991)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrFileVer_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_991_5( I_("1") );
      return( dstrDefValue_991_5 );
   }
   DIINT64 s_FldProp_AddrFileVer_i_DVF( const ClientLocale& locale )
   {
      return( 1 );
   }
   const DString& s_FldProp_AddrFileVer_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_991_5( I_("AddrFileVer      ") );
      return( dstrFldLabel_991_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrFileVer(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AddrFileVer // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_AddrFileVer_s_DVF // default value
      ,s_FldProp_AddrFileVer_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AddrFileVer_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrFileRid (992)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrFileRid_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_992_4( I_("000000000000000") );
      return( dstrDefValue_992_4 );
   }
   DIINT64 s_FldProp_AddrFileRid_i_DVF( const ClientLocale& locale )
   {
      return( 000000000000000 );
   }
   const DString& s_FldProp_AddrFileRid_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_992_4( I_("AddrFileRid   ") );
      return( dstrFldLabel_992_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrFileRid(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,AddrFileRid // fieldId
      ,15 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_18 // mask chooser function
      ,s_FldProp_AddrFileRid_s_DVF // default value
      ,s_FldProp_AddrFileRid_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_AddrFileRid_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RegAddrCode (993)
   //------------------------------------------------------------------
   const DString& s_FldProp_RegAddrCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_993_5( I_("01") );
      return( dstrDefValue_993_5 );
   }
   const DString& s_FldProp_RegAddrCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_993_5( I_("RegAddrCode") );
      return( dstrFldLabel_993_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RegAddrCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,RegAddrCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RegAddrCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RegAddrCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CommitFlag (996)
   //------------------------------------------------------------------
   const DString& s_FldProp_CommitFlag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_996_5( I_("0") );
      return( dstrDefValue_996_5 );
   }
   const DString& s_FldProp_CommitFlag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_996_5( I_("CommitFlag  ") );
      return( dstrFldLabel_996_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CommitFlag(
       BFDataFieldProperties::Type::text // field is a text field
      ,CommitFlag // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CommitFlag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CommitFlag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_KeyType (998)
   //------------------------------------------------------------------
   const DString& s_FldProp_KeyType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_998_4( I_("0") );
      return( dstrDefValue_998_4 );
   }
   const DString& s_FldProp_KeyType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_998_4( I_("KeyType   ") );
      return( dstrFldLabel_998_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_KeyType(
       BFDataFieldProperties::Type::text // field is a text field
      ,KeyType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_KeyType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_KeyType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TempValue (999)
   //------------------------------------------------------------------
   const DString& s_FldProp_TempValue_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_999_4( I_("0") );
      return( dstrDefValue_999_4 );
   }
   const DString& s_FldProp_TempValue_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_999_4( I_("TempValue  ") );
      return( dstrFldLabel_999_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TempValue(
       BFDataFieldProperties::Type::text // field is a text field
      ,TempValue // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TempValue_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TempValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );
}
