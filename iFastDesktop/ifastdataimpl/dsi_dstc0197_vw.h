// BFDataImpl header file for DataSet DSTC0197.VW
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFDateFieldId StopDate;
   extern const BFTextFieldId FeeType;
   extern const BFDecimalFieldId Rate;
   extern const BFDecimalFieldId MinFee;
   extern const BFDecimalFieldId MaxFee;
   extern const BFTextFieldId AllowOverwrite;
   extern const BFNumericFieldId FeeParamRid;
   extern const BFTextFieldId MoreAvailable;
   extern const BFTextFieldId NextKey;
   extern const BFTextFieldId FundCode;
   extern const BFTextFieldId ClassCode;
   extern const BFTextFieldId FeeCode;
   extern const BFDateFieldId EffectiveDate;
   extern const BFTextFieldId CommGroup;
   extern const BFTextFieldId DuplicateExist;
   extern const BFTextFieldId FeeModelCode;
   extern const BFTextFieldId ChargeOption;
   extern const BFTextFieldId Currency;
   extern const BFTextFieldId DistributionChannel;
   extern const BFNumericFieldId RepeatCount;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_StopDate;
   extern const BFDataFieldProperties s_FldProp_FeeType;
   extern const BFDataFieldProperties s_FldProp_Rate;
   extern const BFDataFieldProperties s_FldProp_MinFee;
   extern const BFDataFieldProperties s_FldProp_MaxFee;
   extern const BFDataFieldProperties s_FldProp_AllowOverwrite;
   extern const BFDataFieldProperties s_FldProp_FeeParamRid;
   extern const BFDataFieldProperties s_FldProp_MoreAvailable;
   extern const BFDataFieldProperties s_FldProp_NextKey;
   extern const BFDataFieldProperties s_FldProp_FundCode;
   extern const BFDataFieldProperties s_FldProp_ClassCode;
   extern const BFDataFieldProperties s_FldProp_FeeCode;
   extern const BFDataFieldProperties s_FldProp_EffectiveDate;
   extern const BFDataFieldProperties s_FldProp_CommGroup;
   extern const BFDataFieldProperties s_FldProp_DuplicateExist;
   extern const BFDataFieldProperties s_FldProp_FeeModelCode;
   extern const BFDataFieldProperties s_FldProp_ChargeOption;
   extern const BFDataFieldProperties s_FldProp_Currency;
   extern const BFDataFieldProperties s_FldProp_DistributionChannel;
   extern const BFDataFieldProperties s_FldProp_RepeatCount;
}


class dsi_DSTC0197_VW : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0197_VW();
   virtual ~dsi_DSTC0197_VW();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[20];
   // Field Declarations
   BFDateField StopDate_;
   BFTextField_60 FeeType_;
   BFDecimalField Rate_;
   BFDecimalField MinFee_;
   BFDecimalField MaxFee_;
   BFTextField_1 AllowOverwrite_;
   BFNumericField FeeParamRid_;
   BFTextField_1 MoreAvailable_;
   BFTextField<100> NextKey_;
   BFTextField<200> FundCode_;
   BFTextField<120> ClassCode_;
   BFTextField_60 FeeCode_;
   BFDateField EffectiveDate_;
   BFTextField<25> CommGroup_;
   BFTextField_60 DuplicateExist_;
   BFTextField_60 FeeModelCode_;
   BFTextField_60 ChargeOption_;
   BFTextField<200> Currency_;
   BFTextField_60 DistributionChannel_;
   BFNumericField RepeatCount_;

};
