// Data Field Properties
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdataid.hpp>
#include "ifast_substitutions.h"
#include "ifast_masks.h"

namespace ifds
{
   extern const BFDataId DSTC0020_VWRepeat_Record;
   extern const BFDecimalFieldId SettledUnits;
   extern const BFDecimalFieldId SettledValue;
   extern const BFDecimalFieldId UnsettledUnits;
   extern const BFDecimalFieldId UnsettledValue;
   extern const BFDecimalFieldId FundNAV;
   extern const BFDecimalFieldId PYEUnits;
   extern const BFDecimalFieldId PYEValue;
   extern const BFDateFieldId AsAtDate;
   extern const BFDataId DSTC0021_VW;
   extern const BFDataId DSTC0021_VWRepeat_Record;
   extern const BFTextFieldId RecType;
   extern const BFTextFieldId CheqNum;
   extern const BFDecimalFieldId FeeAmt;
   extern const BFDecimalFieldId FedTax;
   extern const BFDecimalFieldId ProvTax;
   extern const BFTextFieldId Salutation;
   extern const BFTextFieldId PayeeName;
   extern const BFTextFieldId BrokerChq;
   extern const BFTextFieldId DeliveryCode;
   extern const BFTextFieldId DeliveryCodeDesc;
   extern const BFDateFieldId PrintDate;
   extern const BFNumericFieldId ChequeAge;
   extern const BFDateFieldId BankRecDate;
   extern const BFDateFieldId CanDate;
   extern const BFTextFieldId CanUser;
   extern const BFTextFieldId ChqStatus;
   extern const BFTextFieldId ChqStatDesc;
   extern const BFTextFieldId Memo1;
   extern const BFTextFieldId Memo2;
   extern const BFDataId DSTC0022_VW;
   extern const BFTextFieldId OrderType;
   extern const BFTextFieldId WireOrdNum;
   extern const BFTextFieldId DepositType;
   extern const BFTextFieldId DepositTypeDesc;
   extern const BFTextFieldId RedCode;
   extern const BFTextFieldId RedCodeDesc;
   extern const BFTextFieldId RvCode;
   extern const BFTextFieldId RvCodeDesc;
   extern const BFTextFieldId PartFull;
   extern const BFDecimalFieldId PrevUnitBal;
   extern const BFDecimalFieldId Commission;
   extern const BFDecimalFieldId HoldBackAmt;
   extern const BFDecimalFieldId HoldBackRate;
   extern const BFTextFieldId OverrideDSCDesc;
   extern const BFDecimalFieldId OverrideAmt;
   extern const BFDecimalFieldId SharesElig;
   extern const BFTextFieldId PartnerShip;
   extern const BFTextFieldId ProvSales;
   extern const BFDateFieldId DepositDate;
   extern const BFDateFieldId CashDate;
   extern const BFDateFieldId DealDate;
   extern const BFTextFieldId DealTime;
   extern const BFDecimalFieldId SetGrossAmt;
   extern const BFDecimalFieldId SetNetAmt;
   extern const BFTextFieldId SettleCurrency;
   extern const BFDecimalFieldId ExchRate;
   extern const BFTextFieldId ConfIssued;
   extern const BFTextFieldId RecptIssued;
   extern const BFTextFieldId SrcOfFundDesc;
   extern const BFTextFieldId SrcOfAccount;
   extern const BFTextFieldId OrderSource;
   extern const BFTextFieldId OrderSrcDesc;
   extern const BFTextFieldId SettleSource;
   extern const BFTextFieldId SettleSrcDesc;
   extern const BFTextFieldId SettleType;
   extern const BFTextFieldId SettleTypeDesc;
   extern const BFTextFieldId SettledBy;
   extern const BFTextFieldId SettledByDesc;
   extern const BFTextFieldId ChqSupCode;
   extern const BFTextFieldId ChqSupCodeDesc;
   extern const BFTextFieldId ConfirmReq;
   extern const BFTextFieldId CertReq;
   extern const BFTextFieldId OnStmt;
   extern const BFTextFieldId RoundFlag;
   extern const BFNumericFieldId SeqNum;
   extern const BFTextFieldId Accountable;
   extern const BFTextFieldId AcctableDesc;
   extern const BFTextFieldId Remarks1;
   extern const BFTextFieldId Remarks2;
   extern const BFTextFieldId Remarks3;
   extern const BFTextFieldId Allocation;
   extern const BFDataId DSTC0022_VWRepeat_Record;
   extern const BFTextFieldId DeductCode;
   extern const BFTextFieldId DeductDesc;
   extern const BFDecimalFieldId DeductAmt;
   extern const BFDataId DSTC0023_VW;
   extern const BFTextFieldId FundCodeList;
   extern const BFDataId DSTC0023_VWRepeat_Record;
   extern const BFDateFieldId ValueAsAt;
   extern const BFDateFieldId RecordDate;
   extern const BFTextFieldId ProcessTime;
   extern const BFDecimalFieldId UnitValue;
   extern const BFDecimalFieldId UnAllocIncome;
   extern const BFTextFieldId Notional;
   extern const BFTextFieldId SkeletonBusYr;
   extern const BFTextFieldId GoodBad;
   extern const BFDecimalFieldId CanDividend;
   extern const BFDecimalFieldId InelgDividend;
   extern const BFDecimalFieldId CanInterest;
   extern const BFDecimalFieldId ForeignInterest;
   extern const BFDecimalFieldId ForeignDividend;
   extern const BFDecimalFieldId AccrualIncome;
   extern const BFDecimalFieldId MgmtFee;
   extern const BFDecimalFieldId TaxCapGain;
   extern const BFDecimalFieldId ForeignTax;
   extern const BFDecimalFieldId OthIncome;
   extern const BFDecimalFieldId RealizeGain;
   extern const BFDecimalFieldId TrusteeFee;
   extern const BFDecimalFieldId EqualizationAmt;
   extern const BFDecimalFieldId PaidAmt;
   extern const BFTextFieldId PriceCode2;
   extern const BFTextFieldId PriceDesc2;
   extern const BFDecimalFieldId UnitValue2;
   extern const BFDecimalFieldId ChgFactor2;
   extern const BFTextFieldId PriceCode3;
   extern const BFTextFieldId PriceDesc3;
   extern const BFDecimalFieldId UnitValue3;
   extern const BFDecimalFieldId ChgFactor3;
   extern const BFTextFieldId PriceCode4;
   extern const BFTextFieldId PriceDesc4;
   extern const BFDecimalFieldId UnitValue4;
   extern const BFDecimalFieldId ChgFactor4;
   extern const BFTextFieldId PriceCode5;
   extern const BFTextFieldId PriceDesc5;
   extern const BFDecimalFieldId UnitValue5;
   extern const BFDecimalFieldId ChgFactor5;
   extern const BFDataId DSTC0024_VW;
   extern const BFDataId DSTC0024_VWRepeat_Record;
   extern const BFNumericFieldId TransactionNum;
   extern const BFDateFieldId BackDatedOn;
   extern const BFTextFieldId Cancellation;
   extern const BFTextFieldId PayTypeCode;
   extern const BFTextFieldId PayTypeCodeDesc;
   extern const BFTextFieldId StatementCode;
   extern const BFTextFieldId StatementCodeDesc;
   extern const BFTextFieldId PaymentType;
   extern const BFDataId DSTC0039_VW;
   extern const BFTextFieldId ValidPasswd;
   extern const BFDataId DSTC0043_VW;
   extern const BFDataId DSTC0043_VWRepeat_Record;
   extern const BFTextFieldId AddrCodeDesc;
   extern const BFTextFieldId Name1;
   extern const BFTextFieldId Name2;
   extern const BFTextFieldId CountryName;
   extern const BFTextFieldId RegAddr;
   extern const BFTextFieldId DivConfAddr;
   extern const BFTextFieldId DivChqAddr;
   extern const BFTextFieldId TxnConfAddr;
   extern const BFTextFieldId DupConfAddr;
   extern const BFTextFieldId StmtAddr;
   extern const BFTextFieldId DupStmtAddr;
   extern const BFTextFieldId CertAddr;
   extern const BFTextFieldId TaxAddr;
   extern const BFTextFieldId LetAddr;
   extern const BFTextFieldId BenAddr;
   extern const BFNumericFieldId DupConfCopies;
   extern const BFNumericFieldId DupStmtCopies;
   extern const BFTextFieldId RegOnHold;
   extern const BFTextFieldId DivConfOnHold;
   extern const BFTextFieldId DivChqOnHold;
   extern const BFTextFieldId TxnConfOnHold;
   extern const BFTextFieldId DupConfOnHold;
   extern const BFTextFieldId StmtOnHold;
   extern const BFTextFieldId DupStmtOnHold;
   extern const BFTextFieldId CertOnHold;
   extern const BFTextFieldId TaxOnHold;
   extern const BFTextFieldId LetOnHold;
   extern const BFTextFieldId BenOnHold;
   extern const BFTextFieldId Confirm;
   extern const BFTextFieldId SATxnConfCode;
   extern const BFTextFieldId SATxnConfDesc;
   extern const BFTextFieldId SADivConfCode;
   extern const BFTextFieldId SADivConfDesc;
   extern const BFTextFieldId SALettersCode;
   extern const BFTextFieldId SALettersDesc;
   extern const BFTextFieldId City;
   extern const BFDataId DSTC0044_VW;
   extern const BFNumericFieldId InstitutionCode;
   extern const BFTextFieldId InstitutionName;
   extern const BFTextFieldId TransitCode;
   extern const BFTextFieldId TransitName;
   extern const BFTextFieldId BankAccountNum;
   extern const BFDecimalFieldId FedTaxAmt;
   extern const BFDecimalFieldId ProvTaxAmt;
   extern const BFDataId DSTC0045_VW;
   extern const BFNumericFieldId ErrorCode;
   extern const BFTextFieldId ErrorDesc;
   extern const BFDataId DSTC0049_VW;
   extern const BFTextFieldId PendingTrade;
   extern const BFTextFieldId Remarks;
   extern const BFTextFieldId Certificates;
   extern const BFTextFieldId StopPurch;
   extern const BFTextFieldId StopRed;
   extern const BFTextFieldId StopTrsfrOut;
   extern const BFTextFieldId StopTrsfrIn;
   extern const BFTextFieldId BankingAcct;
   extern const BFTextFieldId SystemTrsfr;
   extern const BFTextFieldId PAC;
   extern const BFTextFieldId SWP;
   extern const BFTextFieldId AcctAlloc;

   //------------------------------------------------------------------
   // Field s_FldProp_SettledUnits (401)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettledUnits_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_401_4( I_("0.0000000000") );
         return( dstrDefValue_401_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_401_7( I_("0") );
         return( dstrDefValue_401_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_401_5( I_("0") );
         return( dstrDefValue_401_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_401_8( I_("0") );
         return( dstrDefValue_401_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_401_3( I_("0") );
         return( dstrDefValue_401_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_401_1( I_("0") );
         return( dstrDefValue_401_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_401_6( I_("0") );
         return( dstrDefValue_401_6 );
      }
      static const DString dstrDefValue_401_1( I_("0") );
      return( dstrDefValue_401_1 );
   }
   double s_FldProp_SettledUnits_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_SettledUnits_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_401_4( I_("SettledUnits ") );
         return( dstrFldLabel_401_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_401_7( I_("SettledUnits ") );
         return( dstrFldLabel_401_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_401_5( I_("SettledUnits ") );
         return( dstrFldLabel_401_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_401_8( I_("SettledUnits ") );
         return( dstrFldLabel_401_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_401_3( I_("SettledUnits ") );
         return( dstrFldLabel_401_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_401_1( I_("SettledUnits ") );
         return( dstrFldLabel_401_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_401_6( I_("SettledUnits ") );
         return( dstrFldLabel_401_6 );
      }
      static const DString dstrFldLabel_401_1( I_("SettledUnits ") );
      return( dstrFldLabel_401_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettledUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,SettledUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_SettledUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_SettledUnits_d_DVF // default value
      ,s_FldProp_SettledUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettledValue (402)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettledValue_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_402_5( I_("0") );
         return( dstrDefValue_402_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_402_8( I_("0") );
         return( dstrDefValue_402_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_402_7( I_("0") );
         return( dstrDefValue_402_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_402_6( I_("0") );
         return( dstrDefValue_402_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_402_4( I_("0.0000000000") );
         return( dstrDefValue_402_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_402_3( I_("0") );
         return( dstrDefValue_402_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_402_1( I_("0") );
         return( dstrDefValue_402_1 );
      }
      static const DString dstrDefValue_402_1( I_("0") );
      return( dstrDefValue_402_1 );
   }
   double s_FldProp_SettledValue_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_SettledValue_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_402_5( I_("SettledValue ") );
         return( dstrFldLabel_402_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_402_8( I_("SettledValue ") );
         return( dstrFldLabel_402_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_402_7( I_("SettledValue ") );
         return( dstrFldLabel_402_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_402_6( I_("SettledValue ") );
         return( dstrFldLabel_402_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_402_4( I_("SettledValue ") );
         return( dstrFldLabel_402_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_402_3( I_("SettledValue ") );
         return( dstrFldLabel_402_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_402_1( I_("SettledValue ") );
         return( dstrFldLabel_402_1 );
      }
      static const DString dstrFldLabel_402_1( I_("SettledValue ") );
      return( dstrFldLabel_402_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettledValue(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,SettledValue // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_SettledValue_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_SettledValue_d_DVF // default value
      ,s_FldProp_SettledValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnsettledUnits (403)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnsettledUnits_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_403_5( I_("0") );
         return( dstrDefValue_403_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_403_4( I_("0.0000000000") );
         return( dstrDefValue_403_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_403_8( I_("0") );
         return( dstrDefValue_403_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_403_7( I_("0") );
         return( dstrDefValue_403_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_403_1( I_("0") );
         return( dstrDefValue_403_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_403_3( I_("0") );
         return( dstrDefValue_403_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_403_6( I_("0") );
         return( dstrDefValue_403_6 );
      }
      static const DString dstrDefValue_403_1( I_("0") );
      return( dstrDefValue_403_1 );
   }
   double s_FldProp_UnsettledUnits_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_UnsettledUnits_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_403_5( I_("UnsettledUnits ") );
         return( dstrFldLabel_403_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_403_4( I_("UnsettledUnits ") );
         return( dstrFldLabel_403_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_403_8( I_("UnsettledUnits ") );
         return( dstrFldLabel_403_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_403_7( I_("UnsettledUnits ") );
         return( dstrFldLabel_403_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_403_1( I_("UnsettledUnits ") );
         return( dstrFldLabel_403_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_403_3( I_("UnsettledUnits ") );
         return( dstrFldLabel_403_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_403_6( I_("UnsettledUnits ") );
         return( dstrFldLabel_403_6 );
      }
      static const DString dstrFldLabel_403_1( I_("UnsettledUnits ") );
      return( dstrFldLabel_403_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnsettledUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnsettledUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_UnsettledUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnsettledUnits_d_DVF // default value
      ,s_FldProp_UnsettledUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnsettledValue (404)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnsettledValue_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_404_4( I_("0.0000000000") );
         return( dstrDefValue_404_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_404_7( I_("0") );
         return( dstrDefValue_404_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_404_5( I_("0") );
         return( dstrDefValue_404_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_404_8( I_("0") );
         return( dstrDefValue_404_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_404_3( I_("0") );
         return( dstrDefValue_404_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_404_1( I_("0") );
         return( dstrDefValue_404_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_404_6( I_("0") );
         return( dstrDefValue_404_6 );
      }
      static const DString dstrDefValue_404_1( I_("0") );
      return( dstrDefValue_404_1 );
   }
   double s_FldProp_UnsettledValue_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_UnsettledValue_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_404_4( I_("UnsettledValue ") );
         return( dstrFldLabel_404_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_404_7( I_("UnsettledValue ") );
         return( dstrFldLabel_404_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_404_5( I_("UnsettledValue ") );
         return( dstrFldLabel_404_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_404_8( I_("UnsettledValue ") );
         return( dstrFldLabel_404_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_404_3( I_("UnsettledValue ") );
         return( dstrFldLabel_404_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_404_1( I_("UnsettledValue ") );
         return( dstrFldLabel_404_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_404_6( I_("UnsettledValue ") );
         return( dstrFldLabel_404_6 );
      }
      static const DString dstrFldLabel_404_1( I_("UnsettledValue ") );
      return( dstrFldLabel_404_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnsettledValue(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnsettledValue // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_UnsettledValue_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnsettledValue_d_DVF // default value
      ,s_FldProp_UnsettledValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundNAV (405)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundNAV_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_405_5( I_("0") );
      return( dstrDefValue_405_5 );
   }
   double s_FldProp_FundNAV_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_FundNAV_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_405_5( I_("FundNAV ") );
      return( dstrFldLabel_405_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundNAV(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FundNAV // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_FundNAV_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FundNAV_d_DVF // default value
      ,s_FldProp_FundNAV_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PYEUnits (406)
   //------------------------------------------------------------------
   const DString& s_FldProp_PYEUnits_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_406_4( I_("0.0000000000") );
      return( dstrDefValue_406_4 );
   }
   double s_FldProp_PYEUnits_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_PYEUnits_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_406_4( I_("PYEUnits ") );
      return( dstrFldLabel_406_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PYEUnits(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PYEUnits // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_PYEUnits_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PYEUnits_d_DVF // default value
      ,s_FldProp_PYEUnits_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PYEValue (407)
   //------------------------------------------------------------------
   const DString& s_FldProp_PYEValue_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_407_4( I_("0.0000000000") );
      return( dstrDefValue_407_4 );
   }
   double s_FldProp_PYEValue_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_PYEValue_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_407_4( I_("PYEValue ") );
      return( dstrFldLabel_407_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PYEValue(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PYEValue // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_PYEValue_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PYEValue_d_DVF // default value
      ,s_FldProp_PYEValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AsAtDate (408)
   //------------------------------------------------------------------
   const DString& s_FldProp_AsAtDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_408_5( I_("         ") );
      return( dstrDefValue_408_5 );
   }
   const DString& s_FldProp_AsAtDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_408_5( I_("AsAtDate ") );
      return( dstrFldLabel_408_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AsAtDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,AsAtDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AsAtDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AsAtDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RecType (411)
   //------------------------------------------------------------------
   const DString& s_FldProp_RecType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_411_5( I_(" ") );
      return( dstrDefValue_411_5 );
   }
   const DString& s_FldProp_RecType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_411_5( I_("RecType") );
      return( dstrFldLabel_411_5 );
   }
   PBF_SSC subset_super_chooser_2_411( const ClientLocale& locale )
   {
      return chooser_ss_002_144; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RecType(
       BFDataFieldProperties::Type::text // field is a text field
      ,RecType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RecType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RecType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_411 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CheqNum (412)
   //------------------------------------------------------------------
   const DString& s_FldProp_CheqNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_412_3( I_("                                                  ") );
      return( dstrDefValue_412_3 );
   }
   const DString& s_FldProp_CheqNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_412_3( I_("CheqNum ") );
      return( dstrFldLabel_412_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CheqNum(
       BFDataFieldProperties::Type::text // field is a text field
      ,CheqNum // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CheqNum_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CheqNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FeeAmt (413)
   //------------------------------------------------------------------
   const DString& s_FldProp_FeeAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_413_4( I_("0.0000000000") );
      return( dstrDefValue_413_4 );
   }
   double s_FldProp_FeeAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_FeeAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_413_4( I_("FeeAmt ") );
      return( dstrFldLabel_413_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FeeAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FeeAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FeeAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FeeAmt_d_DVF // default value
      ,s_FldProp_FeeAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FedTax (414)
   //------------------------------------------------------------------
   const DString& s_FldProp_FedTax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_414_5( I_("0.0000000000") );
      return( dstrDefValue_414_5 );
   }
   double s_FldProp_FedTax_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_FedTax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_414_5( I_("FedTax ") );
      return( dstrFldLabel_414_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FedTax(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FedTax // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_FedTax_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FedTax_d_DVF // default value
      ,s_FldProp_FedTax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvTax (415)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvTax_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_415_5( I_("0.0000000000") );
      return( dstrDefValue_415_5 );
   }
   double s_FldProp_ProvTax_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_ProvTax_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_415_5( I_("ProvTax ") );
      return( dstrFldLabel_415_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvTax(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ProvTax // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_ProvTax_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ProvTax_d_DVF // default value
      ,s_FldProp_ProvTax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Salutation (416)
   //------------------------------------------------------------------
   const DString& s_FldProp_Salutation_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_416_4( I_("   ") );
      return( dstrDefValue_416_4 );
   }
   const DString& s_FldProp_Salutation_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_416_4( I_("Salutation  ") );
      return( dstrFldLabel_416_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Salutation(
       BFDataFieldProperties::Type::text // field is a text field
      ,Salutation // fieldId
      ,25 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Salutation_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Salutation_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayeeName (417)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayeeName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_417_5( I_("                                                  ") );
      return( dstrDefValue_417_5 );
   }
   const DString& s_FldProp_PayeeName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_417_5( I_("PayeeName ") );
      return( dstrFldLabel_417_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayeeName(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayeeName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayeeName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayeeName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BrokerChq (418)
   //------------------------------------------------------------------
   const DString& s_FldProp_BrokerChq_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_418_4( I_(" ") );
      return( dstrDefValue_418_4 );
   }
   const DString& s_FldProp_BrokerChq_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_418_4( I_("BrokerChq ") );
      return( dstrFldLabel_418_4 );
   }
   PBF_SSC subset_super_chooser_2_418( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BrokerChq(
       BFDataFieldProperties::Type::text // field is a text field
      ,BrokerChq // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BrokerChq_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BrokerChq_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_418 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DeliveryCode (419)
   //------------------------------------------------------------------
   const DString& s_FldProp_DeliveryCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_419_4( I_("                                                  ") );
      return( dstrDefValue_419_4 );
   }
   const DString& s_FldProp_DeliveryCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_419_4( I_("DeliveryCode ") );
      return( dstrFldLabel_419_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DeliveryCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,DeliveryCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DeliveryCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DeliveryCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DeliveryCodeDesc (420)
   //------------------------------------------------------------------
   const DString& s_FldProp_DeliveryCodeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_420_5( I_("                                                  ") );
      return( dstrDefValue_420_5 );
   }
   const DString& s_FldProp_DeliveryCodeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_420_5( I_("DeliveryCodeDesc ") );
      return( dstrFldLabel_420_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DeliveryCodeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,DeliveryCodeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DeliveryCodeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DeliveryCodeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PrintDate (421)
   //------------------------------------------------------------------
   const DString& s_FldProp_PrintDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_421_5( I_("         ") );
      return( dstrDefValue_421_5 );
   }
   const DString& s_FldProp_PrintDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_421_5( I_("PrintDate ") );
      return( dstrFldLabel_421_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PrintDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,PrintDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PrintDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PrintDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChequeAge (422)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChequeAge_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_422_4( I_("0000000000") );
      return( dstrDefValue_422_4 );
   }
   DIINT64 s_FldProp_ChequeAge_i_DVF( const ClientLocale& locale )
   {
      return( 0000000000 );
   }
   const DString& s_FldProp_ChequeAge_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_422_4( I_("ChequeAge ") );
      return( dstrFldLabel_422_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChequeAge(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,ChequeAge // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_ChequeAge_s_DVF // default value
      ,s_FldProp_ChequeAge_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_ChequeAge_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankRecDate (423)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankRecDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_423_5( I_("         ") );
      return( dstrDefValue_423_5 );
   }
   const DString& s_FldProp_BankRecDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_423_5( I_("BankRecDate ") );
      return( dstrFldLabel_423_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankRecDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,BankRecDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankRecDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankRecDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CanDate (424)
   //------------------------------------------------------------------
   const DString& s_FldProp_CanDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_424_3( I_("         ") );
      return( dstrDefValue_424_3 );
   }
   const DString& s_FldProp_CanDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_424_3( I_("CanDate ") );
      return( dstrFldLabel_424_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CanDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,CanDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CanDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CanDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CanUser (425)
   //------------------------------------------------------------------
   const DString& s_FldProp_CanUser_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_425_4( I_("                                                  ") );
      return( dstrDefValue_425_4 );
   }
   const DString& s_FldProp_CanUser_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_425_4( I_("CanUser ") );
      return( dstrFldLabel_425_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CanUser(
       BFDataFieldProperties::Type::text // field is a text field
      ,CanUser // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CanUser_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CanUser_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChqStatus (426)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChqStatus_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_426_5( I_("                                                  ") );
      return( dstrDefValue_426_5 );
   }
   const DString& s_FldProp_ChqStatus_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_426_5( I_("ChqStatus ") );
      return( dstrFldLabel_426_5 );
   }
   PBF_SSC subset_super_chooser_2_426( const ClientLocale& locale )
   {
      return chooser_ss_002_757; // defined in ifast_substitutions_chooser_25.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChqStatus(
       BFDataFieldProperties::Type::text // field is a text field
      ,ChqStatus // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ChqStatus_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ChqStatus_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_426 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChqStatDesc (427)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChqStatDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_427_5( I_("                                                  ") );
      return( dstrDefValue_427_5 );
   }
   const DString& s_FldProp_ChqStatDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_427_5( I_("ChqStatDesc ") );
      return( dstrFldLabel_427_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChqStatDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,ChqStatDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ChqStatDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ChqStatDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Memo1 (428)
   //------------------------------------------------------------------
   const DString& s_FldProp_Memo1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_428_4( I_("                                                  ") );
      return( dstrDefValue_428_4 );
   }
   const DString& s_FldProp_Memo1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_428_4( I_("Memo1 ") );
      return( dstrFldLabel_428_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Memo1(
       BFDataFieldProperties::Type::text // field is a text field
      ,Memo1 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Memo1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Memo1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Memo2 (429)
   //------------------------------------------------------------------
   const DString& s_FldProp_Memo2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_429_5( I_("                                                  ") );
      return( dstrDefValue_429_5 );
   }
   const DString& s_FldProp_Memo2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_429_5( I_("Memo2 ") );
      return( dstrFldLabel_429_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Memo2(
       BFDataFieldProperties::Type::text // field is a text field
      ,Memo2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Memo2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Memo2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OrderType (431)
   //------------------------------------------------------------------
   const DString& s_FldProp_OrderType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_431_4( I_("Y") );
      return( dstrDefValue_431_4 );
   }
   const DString& s_FldProp_OrderType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_431_4( I_("OrderType") );
      return( dstrFldLabel_431_4 );
   }
   PBF_SSC subset_super_chooser_2_431( const ClientLocale& locale )
   {
      return chooser_ss_002_183; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OrderType(
       BFDataFieldProperties::Type::text // field is a text field
      ,OrderType // fieldId
      ,2 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OrderType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OrderType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_431 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_WireOrdNum (432)
   //------------------------------------------------------------------
   const DString& s_FldProp_WireOrdNum_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_432_5( I_("                    ") );
         return( dstrDefValue_432_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_432_8( I_("") );
         return( dstrDefValue_432_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_432_7( I_("") );
         return( dstrDefValue_432_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_432_6( I_("") );
         return( dstrDefValue_432_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_432_4( I_("                    ") );
         return( dstrDefValue_432_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_432_3( I_("") );
         return( dstrDefValue_432_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_432_1( I_("") );
         return( dstrDefValue_432_1 );
      }
      static const DString dstrDefValue_432_1( I_("") );
      return( dstrDefValue_432_1 );
   }
   const DString& s_FldProp_WireOrdNum_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_432_5( I_("WireOrdNum ") );
         return( dstrFldLabel_432_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_432_8( I_("WireOrdNum ") );
         return( dstrFldLabel_432_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_432_7( I_("WireOrdNum ") );
         return( dstrFldLabel_432_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_432_6( I_("WireOrdNum ") );
         return( dstrFldLabel_432_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_432_4( I_("WireOrdNum ") );
         return( dstrFldLabel_432_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_432_3( I_("WireOrdNum ") );
         return( dstrFldLabel_432_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_432_1( I_("WireOrdNum ") );
         return( dstrFldLabel_432_1 );
      }
      static const DString dstrFldLabel_432_1( I_("WireOrdNum ") );
      return( dstrFldLabel_432_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_WireOrdNum(
       BFDataFieldProperties::Type::text // field is a text field
      ,WireOrdNum // fieldId
      ,20 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_WireOrdNum_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_WireOrdNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DepositType (433)
   //------------------------------------------------------------------
   const DString& s_FldProp_DepositType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_433_3( I_("1") );
      return( dstrDefValue_433_3 );
   }
   const DString& s_FldProp_DepositType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_433_3( I_("DepositType") );
      return( dstrFldLabel_433_3 );
   }
   PBF_SSC subset_super_chooser_2_433( const ClientLocale& locale )
   {
      return chooser_ss_002_018; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DepositType(
       BFDataFieldProperties::Type::text // field is a text field
      ,DepositType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DepositType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DepositType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_433 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DepositTypeDesc (434)
   //------------------------------------------------------------------
   const DString& s_FldProp_DepositTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_434_7( I_("                                                  ") );
      return( dstrDefValue_434_7 );
   }
   const DString& s_FldProp_DepositTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_434_7( I_("DepositTypeDesc ") );
      return( dstrFldLabel_434_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DepositTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,DepositTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DepositTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DepositTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RedCode (435)
   //------------------------------------------------------------------
   const DString& s_FldProp_RedCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_435_3( I_("01") );
      return( dstrDefValue_435_3 );
   }
   const DString& s_FldProp_RedCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_435_3( I_("RedCode ") );
      return( dstrFldLabel_435_3 );
   }
   PBF_SSC subset_super_chooser_2_435( const ClientLocale& locale )
   {
      return chooser_ss_002_039; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RedCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,RedCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RedCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RedCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_435 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RedCodeDesc (436)
   //------------------------------------------------------------------
   const DString& s_FldProp_RedCodeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_436_3( I_("                                                  ") );
      return( dstrDefValue_436_3 );
   }
   const DString& s_FldProp_RedCodeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_436_3( I_("RedCodeDesc ") );
      return( dstrFldLabel_436_3 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RedCodeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,RedCodeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RedCodeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RedCodeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RvCode (437)
   //------------------------------------------------------------------
   const DString& s_FldProp_RvCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_437_7( I_("                                                  ") );
      return( dstrDefValue_437_7 );
   }
   const DString& s_FldProp_RvCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_437_7( I_("RvCode ") );
      return( dstrFldLabel_437_7 );
   }
   PBF_SSC subset_super_chooser_2_437( const ClientLocale& locale )
   {
      return chooser_ss_002_669; // defined in ifast_substitutions_chooser_22.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RvCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,RvCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RvCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RvCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_437 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RvCodeDesc (438)
   //------------------------------------------------------------------
   const DString& s_FldProp_RvCodeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_438_4( I_("                                                  ") );
      return( dstrDefValue_438_4 );
   }
   const DString& s_FldProp_RvCodeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_438_4( I_("RvCodeDesc ") );
      return( dstrFldLabel_438_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RvCodeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,RvCodeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RvCodeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RvCodeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PartFull (439)
   //------------------------------------------------------------------
   const DString& s_FldProp_PartFull_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_439_6( I_("  ") );
      return( dstrDefValue_439_6 );
   }
   const DString& s_FldProp_PartFull_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_439_6( I_("PartFull ") );
      return( dstrFldLabel_439_6 );
   }
   PBF_SSC subset_super_chooser_2_439( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PartFull(
       BFDataFieldProperties::Type::text // field is a text field
      ,PartFull // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PartFull_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PartFull_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_439 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PrevUnitBal (440)
   //------------------------------------------------------------------
   const DString& s_FldProp_PrevUnitBal_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_440_4( I_("0.0000000000") );
      return( dstrDefValue_440_4 );
   }
   double s_FldProp_PrevUnitBal_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_PrevUnitBal_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_440_4( I_("PrevUnitBal ") );
      return( dstrFldLabel_440_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PrevUnitBal(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PrevUnitBal // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_PrevUnitBal_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PrevUnitBal_d_DVF // default value
      ,s_FldProp_PrevUnitBal_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Commission (441)
   //------------------------------------------------------------------
   const DString& s_FldProp_Commission_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_441_5( I_("0") );
      return( dstrDefValue_441_5 );
   }
   double s_FldProp_Commission_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_Commission_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_441_5( I_("Commission  ") );
      return( dstrFldLabel_441_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Commission(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,Commission // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_Commission_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_Commission_d_DVF // default value
      ,s_FldProp_Commission_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HoldBackAmt (442)
   //------------------------------------------------------------------
   const DString& s_FldProp_HoldBackAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_442_5( I_("0") );
      return( dstrDefValue_442_5 );
   }
   double s_FldProp_HoldBackAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_HoldBackAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_442_5( I_("HoldBackAmt") );
      return( dstrFldLabel_442_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HoldBackAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,HoldBackAmt // fieldId
      ,24 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_HoldBackAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_HoldBackAmt_d_DVF // default value
      ,s_FldProp_HoldBackAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_HoldBackRate (443)
   //------------------------------------------------------------------
   const DString& s_FldProp_HoldBackRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_443_4( I_("0.0000000000") );
      return( dstrDefValue_443_4 );
   }
   double s_FldProp_HoldBackRate_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_HoldBackRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_443_4( I_("HoldBackRate ") );
      return( dstrFldLabel_443_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_HoldBackRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,HoldBackRate // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_1 // mask chooser function
      ,s_FldProp_HoldBackRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_HoldBackRate_d_DVF // default value
      ,s_FldProp_HoldBackRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OverrideDSCDesc (444)
   //------------------------------------------------------------------
   const DString& s_FldProp_OverrideDSCDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_444_4( I_("                                                  ") );
      return( dstrDefValue_444_4 );
   }
   const DString& s_FldProp_OverrideDSCDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_444_4( I_("OverrideDSCDesc ") );
      return( dstrFldLabel_444_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OverrideDSCDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,OverrideDSCDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OverrideDSCDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OverrideDSCDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OverrideAmt (445)
   //------------------------------------------------------------------
   const DString& s_FldProp_OverrideAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_445_4( I_("0") );
      return( dstrDefValue_445_4 );
   }
   double s_FldProp_OverrideAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_OverrideAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_445_4( I_("OverrideAmt  ") );
      return( dstrFldLabel_445_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OverrideAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,OverrideAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_OverrideAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_OverrideAmt_d_DVF // default value
      ,s_FldProp_OverrideAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SharesElig (446)
   //------------------------------------------------------------------
   const DString& s_FldProp_SharesElig_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_446_5( I_("0") );
         return( dstrDefValue_446_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_446_7( I_("0") );
         return( dstrDefValue_446_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_446_8( I_("0") );
         return( dstrDefValue_446_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_446_6( I_("0") );
         return( dstrDefValue_446_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_446_3( I_("0") );
         return( dstrDefValue_446_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_446_1( I_("0") );
         return( dstrDefValue_446_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_446_4( I_("0.0000000000") );
         return( dstrDefValue_446_4 );
      }
      static const DString dstrDefValue_446_1( I_("0") );
      return( dstrDefValue_446_1 );
   }
   double s_FldProp_SharesElig_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      return( 0 );
   }
   const DString& s_FldProp_SharesElig_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_446_5( I_("SharesElig ") );
         return( dstrFldLabel_446_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_446_7( I_("SharesElig ") );
         return( dstrFldLabel_446_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_446_8( I_("SharesElig ") );
         return( dstrFldLabel_446_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_446_6( I_("SharesElig ") );
         return( dstrFldLabel_446_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_446_3( I_("SharesElig ") );
         return( dstrFldLabel_446_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_446_1( I_("SharesElig ") );
         return( dstrFldLabel_446_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_446_4( I_("SharesElig ") );
         return( dstrFldLabel_446_4 );
      }
      static const DString dstrFldLabel_446_1( I_("SharesElig ") );
      return( dstrFldLabel_446_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SharesElig(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,SharesElig // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_SharesElig_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_SharesElig_d_DVF // default value
      ,s_FldProp_SharesElig_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PartnerShip (447)
   //------------------------------------------------------------------
   const DString& s_FldProp_PartnerShip_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_447_4( I_("                                                  ") );
      return( dstrDefValue_447_4 );
   }
   const DString& s_FldProp_PartnerShip_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_447_4( I_("PartnerShip ") );
      return( dstrFldLabel_447_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PartnerShip(
       BFDataFieldProperties::Type::text // field is a text field
      ,PartnerShip // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PartnerShip_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PartnerShip_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvSales (448)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvSales_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_448_5( I_("  ") );
      return( dstrDefValue_448_5 );
   }
   const DString& s_FldProp_ProvSales_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_448_5( I_("ProvSales ") );
      return( dstrFldLabel_448_5 );
   }
   PBF_SSC subset_super_chooser_2_448( const ClientLocale& locale )
   {
      return chooser_ss_002_013; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvSales(
       BFDataFieldProperties::Type::text // field is a text field
      ,ProvSales // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ProvSales_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ProvSales_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_448 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DepositDate (449)
   //------------------------------------------------------------------
   const DString& s_FldProp_DepositDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_449_6( I_("         ") );
      return( dstrDefValue_449_6 );
   }
   const DString& s_FldProp_DepositDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_449_6( I_("DepositDate ") );
      return( dstrFldLabel_449_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DepositDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,DepositDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DepositDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DepositDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CashDate (450)
   //------------------------------------------------------------------
   const DString& s_FldProp_CashDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_450_4( I_("        ") );
      return( dstrDefValue_450_4 );
   }
   const DString& s_FldProp_CashDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_450_4( I_("CashDate ") );
      return( dstrFldLabel_450_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CashDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,CashDate // fieldId
      ,8 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CashDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CashDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DealDate (451)
   //------------------------------------------------------------------
   const DString& s_FldProp_DealDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_451_4( I_("         ") );
      return( dstrDefValue_451_4 );
   }
   const DString& s_FldProp_DealDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_451_4( I_("DealDate ") );
      return( dstrFldLabel_451_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DealDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,DealDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DealDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DealDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DealTime (452)
   //------------------------------------------------------------------
   const DString& s_FldProp_DealTime_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_452_4( I_("                                                  ") );
      return( dstrDefValue_452_4 );
   }
   const DString& s_FldProp_DealTime_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_452_4( I_("DealTime ") );
      return( dstrFldLabel_452_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DealTime(
       BFDataFieldProperties::Type::text // field is a text field
      ,DealTime // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DealTime_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DealTime_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SetGrossAmt (453)
   //------------------------------------------------------------------
   const DString& s_FldProp_SetGrossAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_453_5( I_("0") );
      return( dstrDefValue_453_5 );
   }
   double s_FldProp_SetGrossAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_SetGrossAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_453_5( I_("SetGrossAmt  ") );
      return( dstrFldLabel_453_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SetGrossAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,SetGrossAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_SetGrossAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_SetGrossAmt_d_DVF // default value
      ,s_FldProp_SetGrossAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SetNetAmt (454)
   //------------------------------------------------------------------
   const DString& s_FldProp_SetNetAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_454_4( I_("0") );
      return( dstrDefValue_454_4 );
   }
   double s_FldProp_SetNetAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_SetNetAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_454_4( I_("SetNetAmt  ") );
      return( dstrFldLabel_454_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SetNetAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,SetNetAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_SetNetAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_SetNetAmt_d_DVF // default value
      ,s_FldProp_SetNetAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleCurrency (455)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleCurrency_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_455_5( I_("   ") );
      return( dstrDefValue_455_5 );
   }
   const DString& s_FldProp_SettleCurrency_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_455_5( I_("SettleCurrency  ") );
      return( dstrFldLabel_455_5 );
   }
   PBF_SSC subset_super_chooser_2_455( const ClientLocale& locale )
   {
      return chooser_ss_002_065; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleCurrency(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettleCurrency // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettleCurrency_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettleCurrency_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_455 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ExchRate (456)
   //------------------------------------------------------------------
   const DString& s_FldProp_ExchRate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_456_8( I_("0") );
      return( dstrDefValue_456_8 );
   }
   double s_FldProp_ExchRate_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_ExchRate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_456_8( I_("ExchRate") );
      return( dstrFldLabel_456_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ExchRate(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ExchRate // fieldId
      ,30 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_ExchRate_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ExchRate_d_DVF // default value
      ,s_FldProp_ExchRate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ConfIssued (457)
   //------------------------------------------------------------------
   const DString& s_FldProp_ConfIssued_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_457_4( I_("                                                  ") );
      return( dstrDefValue_457_4 );
   }
   const DString& s_FldProp_ConfIssued_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_457_4( I_("ConfIssued ") );
      return( dstrFldLabel_457_4 );
   }
   PBF_SSC subset_super_chooser_2_457( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ConfIssued(
       BFDataFieldProperties::Type::text // field is a text field
      ,ConfIssued // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ConfIssued_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ConfIssued_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_457 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RecptIssued (458)
   //------------------------------------------------------------------
   const DString& s_FldProp_RecptIssued_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_458_5( I_("N") );
      return( dstrDefValue_458_5 );
   }
   const DString& s_FldProp_RecptIssued_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_458_5( I_("RecptIssued") );
      return( dstrFldLabel_458_5 );
   }
   PBF_SSC subset_super_chooser_2_458( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RecptIssued(
       BFDataFieldProperties::Type::text // field is a text field
      ,RecptIssued // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RecptIssued_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RecptIssued_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_458 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfFundDesc (459)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfFundDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_459_4( I_("                                                  ") );
      return( dstrDefValue_459_4 );
   }
   const DString& s_FldProp_SrcOfFundDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_459_4( I_("SrcOfFundDesc ") );
      return( dstrFldLabel_459_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfFundDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfFundDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfFundDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfFundDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SrcOfAccount (460)
   //------------------------------------------------------------------
   const DString& s_FldProp_SrcOfAccount_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_460_4( I_("                                                  ") );
      return( dstrDefValue_460_4 );
   }
   const DString& s_FldProp_SrcOfAccount_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_460_4( I_("SrcOfAccount ") );
      return( dstrFldLabel_460_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SrcOfAccount(
       BFDataFieldProperties::Type::text // field is a text field
      ,SrcOfAccount // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SrcOfAccount_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SrcOfAccount_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OrderSource (461)
   //------------------------------------------------------------------
   const DString& s_FldProp_OrderSource_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_461_5( I_("D") );
      return( dstrDefValue_461_5 );
   }
   const DString& s_FldProp_OrderSource_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_461_5( I_("OrderSource") );
      return( dstrFldLabel_461_5 );
   }
   PBF_SSC subset_super_chooser_2_461( const ClientLocale& locale )
   {
      return chooser_ss_002_036; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OrderSource(
       BFDataFieldProperties::Type::text // field is a text field
      ,OrderSource // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OrderSource_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OrderSource_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_461 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OrderSrcDesc (462)
   //------------------------------------------------------------------
   const DString& s_FldProp_OrderSrcDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_462_6( I_("                                                  ") );
      return( dstrDefValue_462_6 );
   }
   const DString& s_FldProp_OrderSrcDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_462_6( I_("OrderSrcDesc ") );
      return( dstrFldLabel_462_6 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OrderSrcDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,OrderSrcDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OrderSrcDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OrderSrcDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleSource (463)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleSource_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_463_4( I_("D") );
      return( dstrDefValue_463_4 );
   }
   const DString& s_FldProp_SettleSource_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_463_4( I_("SettleSource") );
      return( dstrFldLabel_463_4 );
   }
   PBF_SSC subset_super_chooser_2_463( const ClientLocale& locale )
   {
      return chooser_ss_002_036; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleSource(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettleSource // fieldId
      ,2 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettleSource_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettleSource_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_463 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleSrcDesc (464)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleSrcDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_464_4( I_("                                                  ") );
      return( dstrDefValue_464_4 );
   }
   const DString& s_FldProp_SettleSrcDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_464_4( I_("SettleSrcDesc ") );
      return( dstrFldLabel_464_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleSrcDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettleSrcDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettleSrcDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettleSrcDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleType (465)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_465_4( I_("I") );
      return( dstrDefValue_465_4 );
   }
   const DString& s_FldProp_SettleType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_465_4( I_("SettleType") );
      return( dstrFldLabel_465_4 );
   }
   PBF_SSC subset_super_chooser_2_465( const ClientLocale& locale )
   {
      return chooser_ss_002_045; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleType(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettleType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettleType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettleType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_465 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettleTypeDesc (466)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettleTypeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_466_5( I_("                                                  ") );
      return( dstrDefValue_466_5 );
   }
   const DString& s_FldProp_SettleTypeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_466_5( I_("SettleTypeDesc ") );
      return( dstrFldLabel_466_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettleTypeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettleTypeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettleTypeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettleTypeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettledBy (467)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettledBy_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_467_4( I_(" ") );
      return( dstrDefValue_467_4 );
   }
   const DString& s_FldProp_SettledBy_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_467_4( I_("SettledBy") );
      return( dstrFldLabel_467_4 );
   }
   PBF_SSC subset_super_chooser_2_467( const ClientLocale& locale )
   {
      return chooser_ss_002_184; // defined in ifast_substitutions_chooser_6.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettledBy(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettledBy // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettledBy_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettledBy_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_467 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SettledByDesc (468)
   //------------------------------------------------------------------
   const DString& s_FldProp_SettledByDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_468_5( I_("                                                  ") );
      return( dstrDefValue_468_5 );
   }
   const DString& s_FldProp_SettledByDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_468_5( I_("SettledByDesc ") );
      return( dstrFldLabel_468_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SettledByDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,SettledByDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SettledByDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SettledByDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChqSupCode (469)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChqSupCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_469_5( I_("                                                  ") );
      return( dstrDefValue_469_5 );
   }
   const DString& s_FldProp_ChqSupCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_469_5( I_("ChqSupCode ") );
      return( dstrFldLabel_469_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChqSupCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,ChqSupCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ChqSupCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ChqSupCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChqSupCodeDesc (470)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChqSupCodeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_470_4( I_("                                                  ") );
      return( dstrDefValue_470_4 );
   }
   const DString& s_FldProp_ChqSupCodeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_470_4( I_("ChqSupCodeDesc ") );
      return( dstrFldLabel_470_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChqSupCodeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,ChqSupCodeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ChqSupCodeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ChqSupCodeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ConfirmReq (471)
   //------------------------------------------------------------------
   const DString& s_FldProp_ConfirmReq_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_471_5( I_("N") );
      return( dstrDefValue_471_5 );
   }
   const DString& s_FldProp_ConfirmReq_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_471_5( I_("ConfirmReq ") );
      return( dstrFldLabel_471_5 );
   }
   PBF_SSC subset_super_chooser_2_471( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ConfirmReq(
       BFDataFieldProperties::Type::text // field is a text field
      ,ConfirmReq // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ConfirmReq_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ConfirmReq_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_471 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CertReq (472)
   //------------------------------------------------------------------
   const DString& s_FldProp_CertReq_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_472_4( I_(" ") );
      return( dstrDefValue_472_4 );
   }
   const DString& s_FldProp_CertReq_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_472_4( I_("CertReq ") );
      return( dstrFldLabel_472_4 );
   }
   PBF_SSC subset_super_chooser_2_472( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CertReq(
       BFDataFieldProperties::Type::text // field is a text field
      ,CertReq // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CertReq_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CertReq_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_472 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OnStmt (473)
   //------------------------------------------------------------------
   const DString& s_FldProp_OnStmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_473_4( I_(" ") );
      return( dstrDefValue_473_4 );
   }
   const DString& s_FldProp_OnStmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_473_4( I_("OnStmt ") );
      return( dstrFldLabel_473_4 );
   }
   PBF_SSC subset_super_chooser_2_473( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OnStmt(
       BFDataFieldProperties::Type::text // field is a text field
      ,OnStmt // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_OnStmt_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_OnStmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_473 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RoundFlag (474)
   //------------------------------------------------------------------
   const DString& s_FldProp_RoundFlag_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_474_5( I_("                                                  ") );
      return( dstrDefValue_474_5 );
   }
   const DString& s_FldProp_RoundFlag_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_474_5( I_("RoundFlag ") );
      return( dstrFldLabel_474_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RoundFlag(
       BFDataFieldProperties::Type::text // field is a text field
      ,RoundFlag // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RoundFlag_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RoundFlag_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SeqNum (475)
   //------------------------------------------------------------------
   const DString& s_FldProp_SeqNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_475_5( I_("0000000000") );
      return( dstrDefValue_475_5 );
   }
   DIINT64 s_FldProp_SeqNum_i_DVF( const ClientLocale& locale )
   {
      return( 0000000000 );
   }
   const DString& s_FldProp_SeqNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_475_5( I_("SeqNum ") );
      return( dstrFldLabel_475_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SeqNum(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,SeqNum // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_SeqNum_s_DVF // default value
      ,s_FldProp_SeqNum_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_SeqNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Accountable (476)
   //------------------------------------------------------------------
   const DString& s_FldProp_Accountable_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_476_4( I_("  ") );
      return( dstrDefValue_476_4 );
   }
   const DString& s_FldProp_Accountable_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_476_4( I_("Accountable ") );
      return( dstrFldLabel_476_4 );
   }
   PBF_SSC subset_super_chooser_2_476( const ClientLocale& locale )
   {
      return chooser_ss_002_008; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Accountable(
       BFDataFieldProperties::Type::text // field is a text field
      ,Accountable // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Accountable_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Accountable_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_476 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AcctableDesc (477)
   //------------------------------------------------------------------
   const DString& s_FldProp_AcctableDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_477_4( I_("                                                  ") );
      return( dstrDefValue_477_4 );
   }
   const DString& s_FldProp_AcctableDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_477_4( I_("AcctableDesc ") );
      return( dstrFldLabel_477_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AcctableDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,AcctableDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AcctableDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AcctableDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Remarks1 (478)
   //------------------------------------------------------------------
   const DString& s_FldProp_Remarks1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_478_4( I_("                                                  ") );
      return( dstrDefValue_478_4 );
   }
   const DString& s_FldProp_Remarks1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_478_4( I_("Remarks1 ") );
      return( dstrFldLabel_478_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Remarks1(
       BFDataFieldProperties::Type::text // field is a text field
      ,Remarks1 // fieldId
      ,50 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Remarks1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Remarks1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Remarks2 (479)
   //------------------------------------------------------------------
   const DString& s_FldProp_Remarks2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_479_5( I_("                                                  ") );
      return( dstrDefValue_479_5 );
   }
   const DString& s_FldProp_Remarks2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_479_5( I_("Remarks2 ") );
      return( dstrFldLabel_479_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Remarks2(
       BFDataFieldProperties::Type::text // field is a text field
      ,Remarks2 // fieldId
      ,50 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Remarks2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Remarks2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Remarks3 (480)
   //------------------------------------------------------------------
   const DString& s_FldProp_Remarks3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_480_4( I_("                                                  ") );
      return( dstrDefValue_480_4 );
   }
   const DString& s_FldProp_Remarks3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_480_4( I_("Remarks3 ") );
      return( dstrFldLabel_480_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Remarks3(
       BFDataFieldProperties::Type::text // field is a text field
      ,Remarks3 // fieldId
      ,50 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Remarks3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Remarks3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Allocation (481)
   //------------------------------------------------------------------
   const DString& s_FldProp_Allocation_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_481_5( I_(" ") );
      return( dstrDefValue_481_5 );
   }
   const DString& s_FldProp_Allocation_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_481_5( I_("Allocation ") );
      return( dstrFldLabel_481_5 );
   }
   PBF_SSC subset_super_chooser_2_481( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Allocation(
       BFDataFieldProperties::Type::text // field is a text field
      ,Allocation // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Allocation_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Allocation_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_481 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DeductCode (483)
   //------------------------------------------------------------------
   const DString& s_FldProp_DeductCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_483_4( I_("                                                  ") );
      return( dstrDefValue_483_4 );
   }
   const DString& s_FldProp_DeductCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_483_4( I_("DeductCode ") );
      return( dstrFldLabel_483_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DeductCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,DeductCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DeductCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DeductCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DeductDesc (484)
   //------------------------------------------------------------------
   const DString& s_FldProp_DeductDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_484_5( I_("                                                  ") );
      return( dstrDefValue_484_5 );
   }
   const DString& s_FldProp_DeductDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_484_5( I_("DeductDesc ") );
      return( dstrFldLabel_484_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DeductDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,DeductDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DeductDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DeductDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DeductAmt (485)
   //------------------------------------------------------------------
   const DString& s_FldProp_DeductAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_485_4( I_("0") );
      return( dstrDefValue_485_4 );
   }
   double s_FldProp_DeductAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_DeductAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_485_4( I_("DeductAmt  ") );
      return( dstrFldLabel_485_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DeductAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,DeductAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,2 // decmials
      ,mask_chooser_2_14 // mask chooser function
      ,s_FldProp_DeductAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_DeductAmt_d_DVF // default value
      ,s_FldProp_DeductAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FundCodeList (487)
   //------------------------------------------------------------------
   const DString& s_FldProp_FundCodeList_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_487_5( I_("                                                  ") );
      return( dstrDefValue_487_5 );
   }
   const DString& s_FldProp_FundCodeList_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_487_5( I_("FundCodeList ") );
      return( dstrFldLabel_487_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FundCodeList(
       BFDataFieldProperties::Type::text // field is a text field
      ,FundCodeList // fieldId
      ,190 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_FundCodeList_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_FundCodeList_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ValueAsAt (489)
   //------------------------------------------------------------------
   const DString& s_FldProp_ValueAsAt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_489_4( I_("         ") );
      return( dstrDefValue_489_4 );
   }
   const DString& s_FldProp_ValueAsAt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_489_4( I_("ValueAsAt ") );
      return( dstrFldLabel_489_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ValueAsAt(
       BFDataFieldProperties::Type::date // field is a date field
      ,ValueAsAt // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ValueAsAt_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ValueAsAt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RecordDate (490)
   //------------------------------------------------------------------
   const DString& s_FldProp_RecordDate_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_490_4( I_("         ") );
      return( dstrDefValue_490_4 );
   }
   const DString& s_FldProp_RecordDate_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_490_4( I_("RecordDate ") );
      return( dstrFldLabel_490_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RecordDate(
       BFDataFieldProperties::Type::date // field is a date field
      ,RecordDate // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RecordDate_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RecordDate_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProcessTime (491)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProcessTime_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_491_4( I_("                                                  ") );
      return( dstrDefValue_491_4 );
   }
   const DString& s_FldProp_ProcessTime_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_491_4( I_("ProcessTime ") );
      return( dstrFldLabel_491_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProcessTime(
       BFDataFieldProperties::Type::text // field is a text field
      ,ProcessTime // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ProcessTime_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ProcessTime_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnitValue (492)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnitValue_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_492_5( I_("0") );
      return( dstrDefValue_492_5 );
   }
   double s_FldProp_UnitValue_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_UnitValue_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_492_5( I_("UnitValue    ") );
      return( dstrFldLabel_492_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnitValue(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnitValue // fieldId
      ,30 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_UnitValue_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnitValue_d_DVF // default value
      ,s_FldProp_UnitValue_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnAllocIncome (493)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnAllocIncome_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_493_4( I_("0") );
      return( dstrDefValue_493_4 );
   }
   double s_FldProp_UnAllocIncome_d_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_UnAllocIncome_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_493_4( I_("UnAllocIncome ") );
      return( dstrFldLabel_493_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnAllocIncome(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnAllocIncome // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_UnAllocIncome_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnAllocIncome_d_DVF // default value
      ,s_FldProp_UnAllocIncome_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Notional (494)
   //------------------------------------------------------------------
   const DString& s_FldProp_Notional_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_494_5( I_(" ") );
      return( dstrDefValue_494_5 );
   }
   const DString& s_FldProp_Notional_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_494_5( I_("Notional ") );
      return( dstrFldLabel_494_5 );
   }
   PBF_SSC subset_super_chooser_2_494( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Notional(
       BFDataFieldProperties::Type::text // field is a text field
      ,Notional // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Notional_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Notional_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_494 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SkeletonBusYr (495)
   //------------------------------------------------------------------
   const DString& s_FldProp_SkeletonBusYr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_495_5( I_(" ") );
      return( dstrDefValue_495_5 );
   }
   const DString& s_FldProp_SkeletonBusYr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_495_5( I_("SkeletonBusYr ") );
      return( dstrFldLabel_495_5 );
   }
   PBF_SSC subset_super_chooser_2_495( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SkeletonBusYr(
       BFDataFieldProperties::Type::text // field is a text field
      ,SkeletonBusYr // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SkeletonBusYr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SkeletonBusYr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_495 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_GoodBad (496)
   //------------------------------------------------------------------
   const DString& s_FldProp_GoodBad_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_496_4( I_("Y") );
      return( dstrDefValue_496_4 );
   }
   const DString& s_FldProp_GoodBad_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_496_4( I_("GoodBad") );
      return( dstrFldLabel_496_4 );
   }
   PBF_SSC subset_super_chooser_2_496( const ClientLocale& locale )
   {
      return chooser_ss_002_128; // defined in ifast_substitutions_chooser_4.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_GoodBad(
       BFDataFieldProperties::Type::text // field is a text field
      ,GoodBad // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_GoodBad_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_GoodBad_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_496 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CanDividend (497)
   //------------------------------------------------------------------
   const DString& s_FldProp_CanDividend_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_497_5( I_("0.0000000000") );
      return( dstrDefValue_497_5 );
   }
   double s_FldProp_CanDividend_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_CanDividend_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_497_5( I_("CanDividend ") );
      return( dstrFldLabel_497_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CanDividend(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,CanDividend // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_CanDividend_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_CanDividend_d_DVF // default value
      ,s_FldProp_CanDividend_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InelgDividend (498)
   //------------------------------------------------------------------
   const DString& s_FldProp_InelgDividend_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_498_4( I_("0.0000000000") );
      return( dstrDefValue_498_4 );
   }
   double s_FldProp_InelgDividend_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_InelgDividend_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_498_4( I_("InelgDividend ") );
      return( dstrFldLabel_498_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InelgDividend(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,InelgDividend // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_1 // mask chooser function
      ,s_FldProp_InelgDividend_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_InelgDividend_d_DVF // default value
      ,s_FldProp_InelgDividend_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CanInterest (499)
   //------------------------------------------------------------------
   const DString& s_FldProp_CanInterest_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_499_4( I_("0.0000000000") );
      return( dstrDefValue_499_4 );
   }
   double s_FldProp_CanInterest_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_CanInterest_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_499_4( I_("CanInterest ") );
      return( dstrFldLabel_499_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CanInterest(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,CanInterest // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_CanInterest_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_CanInterest_d_DVF // default value
      ,s_FldProp_CanInterest_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ForeignInterest (500)
   //------------------------------------------------------------------
   const DString& s_FldProp_ForeignInterest_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_500_5( I_("") );
         return( dstrDefValue_500_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_500_7( I_("0.0000000000") );
         return( dstrDefValue_500_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_500_8( I_("0.0000000000") );
         return( dstrDefValue_500_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_500_6( I_("0.0000000000") );
         return( dstrDefValue_500_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_500_4( I_("0.0000000000") );
         return( dstrDefValue_500_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_500_3( I_("0.0000000000") );
         return( dstrDefValue_500_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_500_1( I_("") );
         return( dstrDefValue_500_1 );
      }
      static const DString dstrDefValue_500_1( I_("") );
      return( dstrDefValue_500_1 );
   }
   double s_FldProp_ForeignInterest_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_ForeignInterest_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_500_5( I_("ForeignInterest ") );
         return( dstrFldLabel_500_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_500_7( I_("ForeignInterest ") );
         return( dstrFldLabel_500_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_500_8( I_("ForeignInterest ") );
         return( dstrFldLabel_500_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_500_6( I_("ForeignInterest ") );
         return( dstrFldLabel_500_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_500_4( I_("ForeignInterest ") );
         return( dstrFldLabel_500_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_500_3( I_("ForeignInterest ") );
         return( dstrFldLabel_500_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_500_1( I_("ForeignInterest ") );
         return( dstrFldLabel_500_1 );
      }
      static const DString dstrFldLabel_500_1( I_("ForeignInterest ") );
      return( dstrFldLabel_500_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ForeignInterest(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ForeignInterest // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_ForeignInterest_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ForeignInterest_d_DVF // default value
      ,s_FldProp_ForeignInterest_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ForeignDividend (501)
   //------------------------------------------------------------------
   const DString& s_FldProp_ForeignDividend_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_501_5( I_("") );
         return( dstrDefValue_501_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_501_4( I_("0.0000000000") );
         return( dstrDefValue_501_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_501_8( I_("0.0000000000") );
         return( dstrDefValue_501_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_501_7( I_("0.0000000000") );
         return( dstrDefValue_501_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_501_1( I_("") );
         return( dstrDefValue_501_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_501_3( I_("0.0000000000") );
         return( dstrDefValue_501_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_501_6( I_("0.0000000000") );
         return( dstrDefValue_501_6 );
      }
      static const DString dstrDefValue_501_1( I_("") );
      return( dstrDefValue_501_1 );
   }
   double s_FldProp_ForeignDividend_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0000000000 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_ForeignDividend_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_501_5( I_("ForeignDividend ") );
         return( dstrFldLabel_501_5 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_501_4( I_("ForeignDividend ") );
         return( dstrFldLabel_501_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_501_8( I_("ForeignDividend ") );
         return( dstrFldLabel_501_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_501_7( I_("ForeignDividend ") );
         return( dstrFldLabel_501_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_501_1( I_("ForeignDividend ") );
         return( dstrFldLabel_501_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_501_3( I_("ForeignDividend ") );
         return( dstrFldLabel_501_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_501_6( I_("ForeignDividend ") );
         return( dstrFldLabel_501_6 );
      }
      static const DString dstrFldLabel_501_1( I_("ForeignDividend ") );
      return( dstrFldLabel_501_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ForeignDividend(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ForeignDividend // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_ForeignDividend_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ForeignDividend_d_DVF // default value
      ,s_FldProp_ForeignDividend_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AccrualIncome (502)
   //------------------------------------------------------------------
   const DString& s_FldProp_AccrualIncome_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_502_4( I_("0.0000000000") );
         return( dstrDefValue_502_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_502_8( I_("0") );
         return( dstrDefValue_502_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_502_7( I_("0") );
         return( dstrDefValue_502_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_502_5( I_("0.0000000000") );
         return( dstrDefValue_502_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_502_3( I_("0") );
         return( dstrDefValue_502_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_502_1( I_("0.0000000000") );
         return( dstrDefValue_502_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_502_6( I_("0") );
         return( dstrDefValue_502_6 );
      }
      static const DString dstrDefValue_502_1( I_("0.0000000000") );
      return( dstrDefValue_502_1 );
   }
   double s_FldProp_AccrualIncome_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0.0000000000 );
   }
   const DString& s_FldProp_AccrualIncome_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_502_4( I_("AccrualIncome ") );
         return( dstrFldLabel_502_4 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_502_8( I_("AccrualIncome ") );
         return( dstrFldLabel_502_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_502_7( I_("AccrualIncome ") );
         return( dstrFldLabel_502_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_502_5( I_("AccrualIncome ") );
         return( dstrFldLabel_502_5 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_502_3( I_("AccrualIncome ") );
         return( dstrFldLabel_502_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_502_1( I_("AccrualIncome ") );
         return( dstrFldLabel_502_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_502_6( I_("AccrualIncome ") );
         return( dstrFldLabel_502_6 );
      }
      static const DString dstrFldLabel_502_1( I_("AccrualIncome ") );
      return( dstrFldLabel_502_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AccrualIncome(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,AccrualIncome // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_AccrualIncome_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_AccrualIncome_d_DVF // default value
      ,s_FldProp_AccrualIncome_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_MgmtFee (503)
   //------------------------------------------------------------------
   const DString& s_FldProp_MgmtFee_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_503_4( I_("0.0000000000") );
         return( dstrDefValue_503_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_503_5( I_(" 0.0000000000") );
         return( dstrDefValue_503_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_503_8( I_("0.0000000000") );
         return( dstrDefValue_503_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_503_7( I_("0.0000000000") );
         return( dstrDefValue_503_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_503_1( I_(" 0.0000000000") );
         return( dstrDefValue_503_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_503_3( I_("0.0000000000") );
         return( dstrDefValue_503_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_503_6( I_("0.0000000000") );
         return( dstrDefValue_503_6 );
      }
      static const DString dstrDefValue_503_1( I_(" 0.0000000000") );
      return( dstrDefValue_503_1 );
   }
   double s_FldProp_MgmtFee_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return(  0.0000000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return(  0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0000000000 );
      }
      return(  0.0000000000 );
   }
   const DString& s_FldProp_MgmtFee_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_503_4( I_("MgmtFee ") );
         return( dstrFldLabel_503_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_503_5( I_("MgmtFee ") );
         return( dstrFldLabel_503_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_503_8( I_("MgmtFee ") );
         return( dstrFldLabel_503_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_503_7( I_("MgmtFee ") );
         return( dstrFldLabel_503_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_503_1( I_("MgmtFee ") );
         return( dstrFldLabel_503_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_503_3( I_("MgmtFee ") );
         return( dstrFldLabel_503_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_503_6( I_("MgmtFee ") );
         return( dstrFldLabel_503_6 );
      }
      static const DString dstrFldLabel_503_1( I_("MgmtFee ") );
      return( dstrFldLabel_503_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_MgmtFee(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,MgmtFee // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_MgmtFee_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_MgmtFee_d_DVF // default value
      ,s_FldProp_MgmtFee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxCapGain (504)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxCapGain_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_504_4( I_("0.0000000000") );
         return( dstrDefValue_504_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_504_7( I_("0.0000000000") );
         return( dstrDefValue_504_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_504_5( I_("") );
         return( dstrDefValue_504_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_504_8( I_("0.0000000000") );
         return( dstrDefValue_504_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_504_3( I_("0.0000000000") );
         return( dstrDefValue_504_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_504_1( I_("") );
         return( dstrDefValue_504_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_504_6( I_("0.0000000000") );
         return( dstrDefValue_504_6 );
      }
      static const DString dstrDefValue_504_1( I_("") );
      return( dstrDefValue_504_1 );
   }
   double s_FldProp_TaxCapGain_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0000000000 );
      }
      return( 0.0 );
   }
   const DString& s_FldProp_TaxCapGain_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_504_4( I_("TaxCapGain ") );
         return( dstrFldLabel_504_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_504_7( I_("TaxCapGain ") );
         return( dstrFldLabel_504_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_504_5( I_("TaxCapGain ") );
         return( dstrFldLabel_504_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_504_8( I_("TaxCapGain ") );
         return( dstrFldLabel_504_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_504_3( I_("TaxCapGain ") );
         return( dstrFldLabel_504_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_504_1( I_("TaxCapGain ") );
         return( dstrFldLabel_504_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_504_6( I_("TaxCapGain ") );
         return( dstrFldLabel_504_6 );
      }
      static const DString dstrFldLabel_504_1( I_("TaxCapGain ") );
      return( dstrFldLabel_504_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxCapGain(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TaxCapGain // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_TaxCapGain_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TaxCapGain_d_DVF // default value
      ,s_FldProp_TaxCapGain_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ForeignTax (505)
   //------------------------------------------------------------------
   const DString& s_FldProp_ForeignTax_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_505_5( I_(" 0.0000000000") );
         return( dstrDefValue_505_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_505_8( I_("0.0000000000") );
         return( dstrDefValue_505_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_505_7( I_("0.0000000000") );
         return( dstrDefValue_505_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_505_6( I_("0.0000000000") );
         return( dstrDefValue_505_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_505_3( I_("0.0000000000") );
         return( dstrDefValue_505_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_505_1( I_(" 0.0000000000") );
         return( dstrDefValue_505_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_505_4( I_("0.0000000000") );
         return( dstrDefValue_505_4 );
      }
      static const DString dstrDefValue_505_1( I_(" 0.0000000000") );
      return( dstrDefValue_505_1 );
   }
   double s_FldProp_ForeignTax_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return(  0.0000000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return(  0.0000000000 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      return(  0.0000000000 );
   }
   const DString& s_FldProp_ForeignTax_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_505_5( I_("ForeignTax ") );
         return( dstrFldLabel_505_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_505_8( I_("ForeignTax ") );
         return( dstrFldLabel_505_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_505_7( I_("ForeignTax ") );
         return( dstrFldLabel_505_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_505_6( I_("ForeignTax ") );
         return( dstrFldLabel_505_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_505_3( I_("ForeignTax ") );
         return( dstrFldLabel_505_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_505_1( I_("ForeignTax ") );
         return( dstrFldLabel_505_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_505_4( I_("ForeignTax ") );
         return( dstrFldLabel_505_4 );
      }
      static const DString dstrFldLabel_505_1( I_("ForeignTax ") );
      return( dstrFldLabel_505_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ForeignTax(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ForeignTax // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_ForeignTax_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ForeignTax_d_DVF // default value
      ,s_FldProp_ForeignTax_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_OthIncome (506)
   //------------------------------------------------------------------
   const DString& s_FldProp_OthIncome_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_506_4( I_("0.0000000000") );
      return( dstrDefValue_506_4 );
   }
   double s_FldProp_OthIncome_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_OthIncome_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_506_4( I_("OthIncome ") );
      return( dstrFldLabel_506_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_OthIncome(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,OthIncome // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_1 // mask chooser function
      ,s_FldProp_OthIncome_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_OthIncome_d_DVF // default value
      ,s_FldProp_OthIncome_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RealizeGain (507)
   //------------------------------------------------------------------
   const DString& s_FldProp_RealizeGain_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_507_5( I_("0.0000000000") );
      return( dstrDefValue_507_5 );
   }
   double s_FldProp_RealizeGain_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_RealizeGain_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_507_5( I_("RealizeGain ") );
      return( dstrFldLabel_507_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RealizeGain(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,RealizeGain // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_1 // mask chooser function
      ,s_FldProp_RealizeGain_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_RealizeGain_d_DVF // default value
      ,s_FldProp_RealizeGain_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TrusteeFee (508)
   //------------------------------------------------------------------
   const DString& s_FldProp_TrusteeFee_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_508_8( I_("0") );
         return( dstrDefValue_508_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_508_7( I_("0") );
         return( dstrDefValue_508_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_508_5( I_("0.0000000000") );
         return( dstrDefValue_508_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_508_6( I_("0") );
         return( dstrDefValue_508_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_508_3( I_("0") );
         return( dstrDefValue_508_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_508_1( I_("0.0000000000") );
         return( dstrDefValue_508_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_508_4( I_("0.0000000000") );
         return( dstrDefValue_508_4 );
      }
      static const DString dstrDefValue_508_1( I_("0.0000000000") );
      return( dstrDefValue_508_1 );
   }
   double s_FldProp_TrusteeFee_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      return( 0.0000000000 );
   }
   const DString& s_FldProp_TrusteeFee_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_508_8( I_("TrusteeFee ") );
         return( dstrFldLabel_508_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_508_7( I_("TrusteeFee ") );
         return( dstrFldLabel_508_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_508_5( I_("TrusteeFee ") );
         return( dstrFldLabel_508_5 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_508_6( I_("TrusteeFee ") );
         return( dstrFldLabel_508_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_508_3( I_("TrusteeFee ") );
         return( dstrFldLabel_508_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_508_1( I_("TrusteeFee ") );
         return( dstrFldLabel_508_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_508_4( I_("TrusteeFee ") );
         return( dstrFldLabel_508_4 );
      }
      static const DString dstrFldLabel_508_1( I_("TrusteeFee ") );
      return( dstrFldLabel_508_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TrusteeFee(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,TrusteeFee // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_TrusteeFee_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_TrusteeFee_d_DVF // default value
      ,s_FldProp_TrusteeFee_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_EqualizationAmt (509)
   //------------------------------------------------------------------
   const DString& s_FldProp_EqualizationAmt_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_509_4( I_("0.0000000000") );
         return( dstrDefValue_509_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_509_7( I_("0") );
         return( dstrDefValue_509_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_509_5( I_(" 0.0000000000") );
         return( dstrDefValue_509_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_509_8( I_("0") );
         return( dstrDefValue_509_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_509_3( I_("0") );
         return( dstrDefValue_509_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_509_1( I_(" 0.0000000000") );
         return( dstrDefValue_509_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_509_6( I_("0") );
         return( dstrDefValue_509_6 );
      }
      static const DString dstrDefValue_509_1( I_(" 0.0000000000") );
      return( dstrDefValue_509_1 );
   }
   double s_FldProp_EqualizationAmt_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return(  0.0000000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return(  0.0000000000 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return(  0.0000000000 );
   }
   const DString& s_FldProp_EqualizationAmt_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_509_4( I_("EqualizationAmt ") );
         return( dstrFldLabel_509_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_509_7( I_("EqualizationAmt ") );
         return( dstrFldLabel_509_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_509_5( I_("EqualizationAmt ") );
         return( dstrFldLabel_509_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_509_8( I_("EqualizationAmt ") );
         return( dstrFldLabel_509_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_509_3( I_("EqualizationAmt ") );
         return( dstrFldLabel_509_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_509_1( I_("EqualizationAmt ") );
         return( dstrFldLabel_509_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_509_6( I_("EqualizationAmt ") );
         return( dstrFldLabel_509_6 );
      }
      static const DString dstrFldLabel_509_1( I_("EqualizationAmt ") );
      return( dstrFldLabel_509_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_EqualizationAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,EqualizationAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_EqualizationAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_EqualizationAmt_d_DVF // default value
      ,s_FldProp_EqualizationAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PaidAmt (510)
   //------------------------------------------------------------------
   const DString& s_FldProp_PaidAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_510_5( I_("0.0000000000") );
      return( dstrDefValue_510_5 );
   }
   double s_FldProp_PaidAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_PaidAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_510_5( I_("PaidAmt ") );
      return( dstrFldLabel_510_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PaidAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,PaidAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_PaidAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_PaidAmt_d_DVF // default value
      ,s_FldProp_PaidAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PriceCode2 (511)
   //------------------------------------------------------------------
   const DString& s_FldProp_PriceCode2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_511_4( I_("  ") );
      return( dstrDefValue_511_4 );
   }
   const DString& s_FldProp_PriceCode2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_511_4( I_("PriceCode2 ") );
      return( dstrFldLabel_511_4 );
   }
   PBF_SSC subset_super_chooser_2_511( const ClientLocale& locale )
   {
      return chooser_ss_002_030; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PriceCode2(
       BFDataFieldProperties::Type::text // field is a text field
      ,PriceCode2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PriceCode2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PriceCode2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_511 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PriceDesc2 (512)
   //------------------------------------------------------------------
   const DString& s_FldProp_PriceDesc2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_512_4( I_("                                                  ") );
      return( dstrDefValue_512_4 );
   }
   const DString& s_FldProp_PriceDesc2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_512_4( I_("PriceDesc2 ") );
      return( dstrFldLabel_512_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PriceDesc2(
       BFDataFieldProperties::Type::text // field is a text field
      ,PriceDesc2 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PriceDesc2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PriceDesc2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnitValue2 (513)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnitValue2_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_513_5( I_("0") );
         return( dstrDefValue_513_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_513_7( I_("0") );
         return( dstrDefValue_513_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_513_8( I_("0") );
         return( dstrDefValue_513_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_513_6( I_("0") );
         return( dstrDefValue_513_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_513_4( I_("0.0000000000") );
         return( dstrDefValue_513_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_513_3( I_("0") );
         return( dstrDefValue_513_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_513_1( I_("0") );
         return( dstrDefValue_513_1 );
      }
      static const DString dstrDefValue_513_1( I_("0") );
      return( dstrDefValue_513_1 );
   }
   double s_FldProp_UnitValue2_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_UnitValue2_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_513_5( I_("UnitValue2 ") );
         return( dstrFldLabel_513_5 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_513_7( I_("UnitValue2 ") );
         return( dstrFldLabel_513_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_513_8( I_("UnitValue2 ") );
         return( dstrFldLabel_513_8 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_513_6( I_("UnitValue2 ") );
         return( dstrFldLabel_513_6 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_513_4( I_("UnitValue2 ") );
         return( dstrFldLabel_513_4 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_513_3( I_("UnitValue2 ") );
         return( dstrFldLabel_513_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_513_1( I_("UnitValue2 ") );
         return( dstrFldLabel_513_1 );
      }
      static const DString dstrFldLabel_513_1( I_("UnitValue2 ") );
      return( dstrFldLabel_513_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnitValue2(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnitValue2 // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_UnitValue2_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnitValue2_d_DVF // default value
      ,s_FldProp_UnitValue2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChgFactor2 (514)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChgFactor2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_514_4( I_("0.0000000000") );
      return( dstrDefValue_514_4 );
   }
   double s_FldProp_ChgFactor2_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_ChgFactor2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_514_4( I_("ChgFactor2 ") );
      return( dstrFldLabel_514_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChgFactor2(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ChgFactor2 // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_ChgFactor2_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ChgFactor2_d_DVF // default value
      ,s_FldProp_ChgFactor2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PriceCode3 (515)
   //------------------------------------------------------------------
   const DString& s_FldProp_PriceCode3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_515_4( I_("  ") );
      return( dstrDefValue_515_4 );
   }
   const DString& s_FldProp_PriceCode3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_515_4( I_("PriceCode3 ") );
      return( dstrFldLabel_515_4 );
   }
   PBF_SSC subset_super_chooser_2_515( const ClientLocale& locale )
   {
      return chooser_ss_002_030; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PriceCode3(
       BFDataFieldProperties::Type::text // field is a text field
      ,PriceCode3 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PriceCode3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PriceCode3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_515 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PriceDesc3 (516)
   //------------------------------------------------------------------
   const DString& s_FldProp_PriceDesc3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_516_4( I_("                                                  ") );
      return( dstrDefValue_516_4 );
   }
   const DString& s_FldProp_PriceDesc3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_516_4( I_("PriceDesc3 ") );
      return( dstrFldLabel_516_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PriceDesc3(
       BFDataFieldProperties::Type::text // field is a text field
      ,PriceDesc3 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PriceDesc3_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PriceDesc3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnitValue3 (517)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnitValue3_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_517_4( I_("0.0000000000") );
         return( dstrDefValue_517_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_517_7( I_("0") );
         return( dstrDefValue_517_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_517_5( I_("0") );
         return( dstrDefValue_517_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_517_8( I_("0") );
         return( dstrDefValue_517_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_517_3( I_("0") );
         return( dstrDefValue_517_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_517_1( I_("0") );
         return( dstrDefValue_517_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_517_6( I_("0") );
         return( dstrDefValue_517_6 );
      }
      static const DString dstrDefValue_517_1( I_("0") );
      return( dstrDefValue_517_1 );
   }
   double s_FldProp_UnitValue3_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_UnitValue3_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_517_4( I_("UnitValue3 ") );
         return( dstrFldLabel_517_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_517_7( I_("UnitValue3 ") );
         return( dstrFldLabel_517_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_517_5( I_("UnitValue3 ") );
         return( dstrFldLabel_517_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_517_8( I_("UnitValue3 ") );
         return( dstrFldLabel_517_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_517_3( I_("UnitValue3 ") );
         return( dstrFldLabel_517_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_517_1( I_("UnitValue3 ") );
         return( dstrFldLabel_517_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_517_6( I_("UnitValue3 ") );
         return( dstrFldLabel_517_6 );
      }
      static const DString dstrFldLabel_517_1( I_("UnitValue3 ") );
      return( dstrFldLabel_517_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnitValue3(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnitValue3 // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_UnitValue3_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnitValue3_d_DVF // default value
      ,s_FldProp_UnitValue3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChgFactor3 (518)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChgFactor3_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_518_5( I_("0.0000000000") );
      return( dstrDefValue_518_5 );
   }
   double s_FldProp_ChgFactor3_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_ChgFactor3_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_518_5( I_("ChgFactor3 ") );
      return( dstrFldLabel_518_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChgFactor3(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ChgFactor3 // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_ChgFactor3_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ChgFactor3_d_DVF // default value
      ,s_FldProp_ChgFactor3_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PriceCode4 (519)
   //------------------------------------------------------------------
   const DString& s_FldProp_PriceCode4_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_519_4( I_("  ") );
      return( dstrDefValue_519_4 );
   }
   const DString& s_FldProp_PriceCode4_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_519_4( I_("PriceCode4 ") );
      return( dstrFldLabel_519_4 );
   }
   PBF_SSC subset_super_chooser_2_519( const ClientLocale& locale )
   {
      return chooser_ss_002_030; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PriceCode4(
       BFDataFieldProperties::Type::text // field is a text field
      ,PriceCode4 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PriceCode4_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PriceCode4_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_519 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PriceDesc4 (520)
   //------------------------------------------------------------------
   const DString& s_FldProp_PriceDesc4_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_520_5( I_("                                                  ") );
      return( dstrDefValue_520_5 );
   }
   const DString& s_FldProp_PriceDesc4_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_520_5( I_("PriceDesc4 ") );
      return( dstrFldLabel_520_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PriceDesc4(
       BFDataFieldProperties::Type::text // field is a text field
      ,PriceDesc4 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PriceDesc4_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PriceDesc4_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnitValue4 (521)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnitValue4_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_521_5( I_("0") );
         return( dstrDefValue_521_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_521_8( I_("0") );
         return( dstrDefValue_521_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_521_7( I_("0") );
         return( dstrDefValue_521_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_521_6( I_("0") );
         return( dstrDefValue_521_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_521_3( I_("0") );
         return( dstrDefValue_521_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_521_1( I_("0") );
         return( dstrDefValue_521_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_521_4( I_("0.0000000000") );
         return( dstrDefValue_521_4 );
      }
      static const DString dstrDefValue_521_1( I_("0") );
      return( dstrDefValue_521_1 );
   }
   double s_FldProp_UnitValue4_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      return( 0 );
   }
   const DString& s_FldProp_UnitValue4_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_521_5( I_("UnitValue4 ") );
         return( dstrFldLabel_521_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_521_8( I_("UnitValue4 ") );
         return( dstrFldLabel_521_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_521_7( I_("UnitValue4 ") );
         return( dstrFldLabel_521_7 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_521_6( I_("UnitValue4 ") );
         return( dstrFldLabel_521_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_521_3( I_("UnitValue4 ") );
         return( dstrFldLabel_521_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_521_1( I_("UnitValue4 ") );
         return( dstrFldLabel_521_1 );
      }
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_521_4( I_("UnitValue4 ") );
         return( dstrFldLabel_521_4 );
      }
      static const DString dstrFldLabel_521_1( I_("UnitValue4 ") );
      return( dstrFldLabel_521_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnitValue4(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnitValue4 // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_UnitValue4_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnitValue4_d_DVF // default value
      ,s_FldProp_UnitValue4_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChgFactor4 (522)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChgFactor4_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_522_4( I_("0.0000000000") );
      return( dstrDefValue_522_4 );
   }
   double s_FldProp_ChgFactor4_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_ChgFactor4_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_522_4( I_("ChgFactor4 ") );
      return( dstrFldLabel_522_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChgFactor4(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ChgFactor4 // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_ChgFactor4_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ChgFactor4_d_DVF // default value
      ,s_FldProp_ChgFactor4_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PriceCode5 (523)
   //------------------------------------------------------------------
   const DString& s_FldProp_PriceCode5_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_523_5( I_("  ") );
      return( dstrDefValue_523_5 );
   }
   const DString& s_FldProp_PriceCode5_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_523_5( I_("PriceCode5 ") );
      return( dstrFldLabel_523_5 );
   }
   PBF_SSC subset_super_chooser_2_523( const ClientLocale& locale )
   {
      return chooser_ss_002_030; // defined in ifast_substitutions_chooser_1.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PriceCode5(
       BFDataFieldProperties::Type::text // field is a text field
      ,PriceCode5 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PriceCode5_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PriceCode5_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_523 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PriceDesc5 (524)
   //------------------------------------------------------------------
   const DString& s_FldProp_PriceDesc5_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_524_4( I_("                                                  ") );
      return( dstrDefValue_524_4 );
   }
   const DString& s_FldProp_PriceDesc5_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_524_4( I_("PriceDesc5 ") );
      return( dstrFldLabel_524_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PriceDesc5(
       BFDataFieldProperties::Type::text // field is a text field
      ,PriceDesc5 // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PriceDesc5_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PriceDesc5_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_UnitValue5 (525)
   //------------------------------------------------------------------
   const DString& s_FldProp_UnitValue5_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_525_4( I_("0.0000000000") );
         return( dstrDefValue_525_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_525_7( I_("0") );
         return( dstrDefValue_525_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_525_5( I_("0") );
         return( dstrDefValue_525_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_525_8( I_("0") );
         return( dstrDefValue_525_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_525_3( I_("0") );
         return( dstrDefValue_525_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_525_1( I_("0") );
         return( dstrDefValue_525_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_525_6( I_("0") );
         return( dstrDefValue_525_6 );
      }
      static const DString dstrDefValue_525_1( I_("0") );
      return( dstrDefValue_525_1 );
   }
   double s_FldProp_UnitValue5_d_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0.0000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 0 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 0 );
      }
      return( 0 );
   }
   const DString& s_FldProp_UnitValue5_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_525_4( I_("UnitValue5 ") );
         return( dstrFldLabel_525_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_525_7( I_("UnitValue5 ") );
         return( dstrFldLabel_525_7 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_525_5( I_("UnitValue5 ") );
         return( dstrFldLabel_525_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_525_8( I_("UnitValue5 ") );
         return( dstrFldLabel_525_8 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_525_3( I_("UnitValue5 ") );
         return( dstrFldLabel_525_3 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_525_1( I_("UnitValue5 ") );
         return( dstrFldLabel_525_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_525_6( I_("UnitValue5 ") );
         return( dstrFldLabel_525_6 );
      }
      static const DString dstrFldLabel_525_1( I_("UnitValue5 ") );
      return( dstrFldLabel_525_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_UnitValue5(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,UnitValue5 // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_UnitValue5_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_UnitValue5_d_DVF // default value
      ,s_FldProp_UnitValue5_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ChgFactor5 (526)
   //------------------------------------------------------------------
   const DString& s_FldProp_ChgFactor5_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_526_5( I_("0.0000000000") );
      return( dstrDefValue_526_5 );
   }
   double s_FldProp_ChgFactor5_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_ChgFactor5_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_526_5( I_("ChgFactor5 ") );
      return( dstrFldLabel_526_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ChgFactor5(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ChgFactor5 // fieldId
      ,23 // length
      ,0 // minimum length
      ,10 // decmials
      ,mask_chooser_2_15 // mask chooser function
      ,s_FldProp_ChgFactor5_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ChgFactor5_d_DVF // default value
      ,s_FldProp_ChgFactor5_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransactionNum (529)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransactionNum_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_529_4( I_("0000000000") );
         return( dstrDefValue_529_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_529_5( I_("00000000000000000") );
         return( dstrDefValue_529_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_529_8( I_("00000000000000000") );
         return( dstrDefValue_529_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_529_7( I_("00000000000000000") );
         return( dstrDefValue_529_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_529_1( I_("00000000000000000") );
         return( dstrDefValue_529_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_529_3( I_("00000000000000000") );
         return( dstrDefValue_529_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_529_6( I_("00000000000000000") );
         return( dstrDefValue_529_6 );
      }
      static const DString dstrDefValue_529_1( I_("00000000000000000") );
      return( dstrDefValue_529_1 );
   }
   DIINT64 s_FldProp_TransactionNum_i_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         return( 0000000000 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         return( 00000000000000000 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         return( 00000000000000000 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         return( 00000000000000000 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         return( 00000000000000000 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         return( 00000000000000000 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         return( 00000000000000000 );
      }
      return( 00000000000000000 );
   }
   const DString& s_FldProp_TransactionNum_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_529_4( I_("TransactionNum ") );
         return( dstrFldLabel_529_4 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_529_5( I_("TransactionNum ") );
         return( dstrFldLabel_529_5 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_529_8( I_("TransactionNum ") );
         return( dstrFldLabel_529_8 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_529_7( I_("TransactionNum ") );
         return( dstrFldLabel_529_7 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_529_1( I_("TransactionNum ") );
         return( dstrFldLabel_529_1 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_529_3( I_("TransactionNum ") );
         return( dstrFldLabel_529_3 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_529_6( I_("TransactionNum ") );
         return( dstrFldLabel_529_6 );
      }
      static const DString dstrFldLabel_529_1( I_("TransactionNum ") );
      return( dstrFldLabel_529_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransactionNum(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,TransactionNum // fieldId
      ,17 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_27 // mask chooser function
      ,s_FldProp_TransactionNum_s_DVF // default value
      ,s_FldProp_TransactionNum_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_TransactionNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BackDatedOn (530)
   //------------------------------------------------------------------
   const DString& s_FldProp_BackDatedOn_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_530_4( I_("         ") );
      return( dstrDefValue_530_4 );
   }
   const DString& s_FldProp_BackDatedOn_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_530_4( I_("BackDatedOn ") );
      return( dstrFldLabel_530_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BackDatedOn(
       BFDataFieldProperties::Type::date // field is a date field
      ,BackDatedOn // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BackDatedOn_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BackDatedOn_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Cancellation (531)
   //------------------------------------------------------------------
   const DString& s_FldProp_Cancellation_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_531_5( I_(" ") );
      return( dstrDefValue_531_5 );
   }
   const DString& s_FldProp_Cancellation_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_531_5( I_("Cancellation ") );
      return( dstrFldLabel_531_5 );
   }
   PBF_SSC subset_super_chooser_2_531( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Cancellation(
       BFDataFieldProperties::Type::text // field is a text field
      ,Cancellation // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Cancellation_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Cancellation_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_531 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayTypeCode (532)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayTypeCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_532_4( I_("E") );
      return( dstrDefValue_532_4 );
   }
   const DString& s_FldProp_PayTypeCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_532_4( I_("PayTypeCode") );
      return( dstrFldLabel_532_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayTypeCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayTypeCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayTypeCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayTypeCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PayTypeCodeDesc (533)
   //------------------------------------------------------------------
   const DString& s_FldProp_PayTypeCodeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_533_5( I_("                                                  ") );
      return( dstrDefValue_533_5 );
   }
   const DString& s_FldProp_PayTypeCodeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_533_5( I_("PayTypeCodeDesc ") );
      return( dstrFldLabel_533_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PayTypeCodeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,PayTypeCodeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PayTypeCodeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PayTypeCodeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StatementCode (534)
   //------------------------------------------------------------------
   const DString& s_FldProp_StatementCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_534_8( I_("                                                  ") );
      return( dstrDefValue_534_8 );
   }
   const DString& s_FldProp_StatementCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_534_8( I_("StatementCode ") );
      return( dstrFldLabel_534_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StatementCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,StatementCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StatementCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StatementCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StatementCodeDesc (535)
   //------------------------------------------------------------------
   const DString& s_FldProp_StatementCodeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_535_4( I_("                                                  ") );
      return( dstrDefValue_535_4 );
   }
   const DString& s_FldProp_StatementCodeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_535_4( I_("StatementCodeDesc ") );
      return( dstrFldLabel_535_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StatementCodeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,StatementCodeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StatementCodeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StatementCodeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PaymentType (536)
   //------------------------------------------------------------------
   const DString& s_FldProp_PaymentType_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_536_5( I_("                                                  ") );
      return( dstrDefValue_536_5 );
   }
   const DString& s_FldProp_PaymentType_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_536_5( I_("PaymentType ") );
      return( dstrFldLabel_536_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PaymentType(
       BFDataFieldProperties::Type::text // field is a text field
      ,PaymentType // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PaymentType_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PaymentType_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ValidPasswd (538)
   //------------------------------------------------------------------
   const DString& s_FldProp_ValidPasswd_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_538_4( I_(" ") );
      return( dstrDefValue_538_4 );
   }
   const DString& s_FldProp_ValidPasswd_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_538_4( I_("ValidPasswd ") );
      return( dstrFldLabel_538_4 );
   }
   PBF_SSC subset_super_chooser_2_538( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ValidPasswd(
       BFDataFieldProperties::Type::text // field is a text field
      ,ValidPasswd // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ValidPasswd_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ValidPasswd_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_538 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_AddrCodeDesc (541)
   //------------------------------------------------------------------
   const DString& s_FldProp_AddrCodeDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_541_4( I_("                                                  ") );
      return( dstrDefValue_541_4 );
   }
   const DString& s_FldProp_AddrCodeDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_541_4( I_("AddrCodeDesc ") );
      return( dstrFldLabel_541_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_AddrCodeDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,AddrCodeDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_AddrCodeDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_AddrCodeDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Name1 (542)
   //------------------------------------------------------------------
   const DString& s_FldProp_Name1_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_542_4( I_("                                        ") );
      return( dstrDefValue_542_4 );
   }
   const DString& s_FldProp_Name1_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_542_4( I_("Name1 ") );
      return( dstrFldLabel_542_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Name1(
       BFDataFieldProperties::Type::text // field is a text field
      ,Name1 // fieldId
      ,40 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Name1_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Name1_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Name2 (543)
   //------------------------------------------------------------------
   const DString& s_FldProp_Name2_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_543_4( I_("                                        ") );
      return( dstrDefValue_543_4 );
   }
   const DString& s_FldProp_Name2_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_543_4( I_("Name2 ") );
      return( dstrFldLabel_543_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Name2(
       BFDataFieldProperties::Type::text // field is a text field
      ,Name2 // fieldId
      ,40 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Name2_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Name2_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CountryName (544)
   //------------------------------------------------------------------
   const DString& s_FldProp_CountryName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_544_5( I_("  ") );
      return( dstrDefValue_544_5 );
   }
   const DString& s_FldProp_CountryName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_544_5( I_("CountryName ") );
      return( dstrFldLabel_544_5 );
   }
   PBF_SSC subset_super_chooser_2_544( const ClientLocale& locale )
   {
      return chooser_ss_002_013; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CountryName(
       BFDataFieldProperties::Type::text // field is a text field
      ,CountryName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CountryName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CountryName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_544 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RegAddr (545)
   //------------------------------------------------------------------
   const DString& s_FldProp_RegAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_545_4( I_("01 ") );
      return( dstrDefValue_545_4 );
   }
   const DString& s_FldProp_RegAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_545_4( I_("RegAddr   ") );
      return( dstrFldLabel_545_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RegAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,RegAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RegAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RegAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DivConfAddr (546)
   //------------------------------------------------------------------
   const DString& s_FldProp_DivConfAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_546_5( I_("01") );
      return( dstrDefValue_546_5 );
   }
   const DString& s_FldProp_DivConfAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_546_5( I_("DivConfAddr") );
      return( dstrFldLabel_546_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DivConfAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,DivConfAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DivConfAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DivConfAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DivChqAddr (547)
   //------------------------------------------------------------------
   const DString& s_FldProp_DivChqAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_547_5( I_("01 ") );
      return( dstrDefValue_547_5 );
   }
   const DString& s_FldProp_DivChqAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_547_5( I_("DivChqAddr   ") );
      return( dstrFldLabel_547_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DivChqAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,DivChqAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DivChqAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DivChqAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TxnConfAddr (548)
   //------------------------------------------------------------------
   const DString& s_FldProp_TxnConfAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_548_4( I_("01") );
      return( dstrDefValue_548_4 );
   }
   const DString& s_FldProp_TxnConfAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_548_4( I_("TxnConfAddr") );
      return( dstrFldLabel_548_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TxnConfAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,TxnConfAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TxnConfAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TxnConfAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DupConfAddr (549)
   //------------------------------------------------------------------
   const DString& s_FldProp_DupConfAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_549_4( I_("01") );
      return( dstrDefValue_549_4 );
   }
   const DString& s_FldProp_DupConfAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_549_4( I_("DupConfAddr") );
      return( dstrFldLabel_549_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DupConfAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,DupConfAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DupConfAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DupConfAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StmtAddr (550)
   //------------------------------------------------------------------
   const DString& s_FldProp_StmtAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_550_4( I_("01") );
      return( dstrDefValue_550_4 );
   }
   const DString& s_FldProp_StmtAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_550_4( I_("StmtAddr") );
      return( dstrFldLabel_550_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StmtAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,StmtAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StmtAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StmtAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DupStmtAddr (551)
   //------------------------------------------------------------------
   const DString& s_FldProp_DupStmtAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_551_8( I_("01 ") );
      return( dstrDefValue_551_8 );
   }
   const DString& s_FldProp_DupStmtAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_551_8( I_("DupStmtAddr   ") );
      return( dstrFldLabel_551_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DupStmtAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,DupStmtAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DupStmtAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DupStmtAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CertAddr (552)
   //------------------------------------------------------------------
   const DString& s_FldProp_CertAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_552_8( I_("01 ") );
      return( dstrDefValue_552_8 );
   }
   const DString& s_FldProp_CertAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_552_8( I_("CertAddr   ") );
      return( dstrFldLabel_552_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CertAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,CertAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CertAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CertAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxAddr (553)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_553_7( I_("01") );
      return( dstrDefValue_553_7 );
   }
   const DString& s_FldProp_TaxAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_553_7( I_("TaxAddr") );
      return( dstrFldLabel_553_7 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LetAddr (554)
   //------------------------------------------------------------------
   const DString& s_FldProp_LetAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_554_5( I_("01") );
      return( dstrDefValue_554_5 );
   }
   const DString& s_FldProp_LetAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_554_5( I_("LetAddr") );
      return( dstrFldLabel_554_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LetAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,LetAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LetAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LetAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenAddr (555)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenAddr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_555_4( I_("01") );
      return( dstrDefValue_555_4 );
   }
   const DString& s_FldProp_BenAddr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_555_4( I_("BenAddr") );
      return( dstrFldLabel_555_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenAddr(
       BFDataFieldProperties::Type::text // field is a text field
      ,BenAddr // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BenAddr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BenAddr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DupConfCopies (556)
   //------------------------------------------------------------------
   const DString& s_FldProp_DupConfCopies_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_556_4( I_("0") );
      return( dstrDefValue_556_4 );
   }
   DIINT64 s_FldProp_DupConfCopies_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_DupConfCopies_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_556_4( I_("DupConfCopies") );
      return( dstrFldLabel_556_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DupConfCopies(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,DupConfCopies // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_DupConfCopies_s_DVF // default value
      ,s_FldProp_DupConfCopies_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_DupConfCopies_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DupStmtCopies (557)
   //------------------------------------------------------------------
   const DString& s_FldProp_DupStmtCopies_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_557_4( I_("0") );
      return( dstrDefValue_557_4 );
   }
   DIINT64 s_FldProp_DupStmtCopies_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_DupStmtCopies_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_557_4( I_("DupStmtCopies") );
      return( dstrFldLabel_557_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DupStmtCopies(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,DupStmtCopies // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_DupStmtCopies_s_DVF // default value
      ,s_FldProp_DupStmtCopies_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_DupStmtCopies_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_RegOnHold (558)
   //------------------------------------------------------------------
   const DString& s_FldProp_RegOnHold_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_558_5( I_("N") );
      return( dstrDefValue_558_5 );
   }
   const DString& s_FldProp_RegOnHold_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_558_5( I_("RegOnHold") );
      return( dstrFldLabel_558_5 );
   }
   PBF_SSC subset_super_chooser_2_558( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_RegOnHold(
       BFDataFieldProperties::Type::text // field is a text field
      ,RegOnHold // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_RegOnHold_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_RegOnHold_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_558 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DivConfOnHold (559)
   //------------------------------------------------------------------
   const DString& s_FldProp_DivConfOnHold_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_559_4( I_("N") );
      return( dstrDefValue_559_4 );
   }
   const DString& s_FldProp_DivConfOnHold_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_559_4( I_("DivConfOnHold") );
      return( dstrFldLabel_559_4 );
   }
   PBF_SSC subset_super_chooser_2_559( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DivConfOnHold(
       BFDataFieldProperties::Type::text // field is a text field
      ,DivConfOnHold // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DivConfOnHold_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DivConfOnHold_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_559 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DivChqOnHold (560)
   //------------------------------------------------------------------
   const DString& s_FldProp_DivChqOnHold_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_560_5( I_("N") );
      return( dstrDefValue_560_5 );
   }
   const DString& s_FldProp_DivChqOnHold_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_560_5( I_("DivChqOnHold  ") );
      return( dstrFldLabel_560_5 );
   }
   PBF_SSC subset_super_chooser_2_560( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DivChqOnHold(
       BFDataFieldProperties::Type::text // field is a text field
      ,DivChqOnHold // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DivChqOnHold_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DivChqOnHold_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_560 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TxnConfOnHold (561)
   //------------------------------------------------------------------
   const DString& s_FldProp_TxnConfOnHold_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_561_5( I_("N") );
      return( dstrDefValue_561_5 );
   }
   const DString& s_FldProp_TxnConfOnHold_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_561_5( I_("TxnConfOnHold  ") );
      return( dstrFldLabel_561_5 );
   }
   PBF_SSC subset_super_chooser_2_561( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TxnConfOnHold(
       BFDataFieldProperties::Type::text // field is a text field
      ,TxnConfOnHold // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TxnConfOnHold_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TxnConfOnHold_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_561 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DupConfOnHold (562)
   //------------------------------------------------------------------
   const DString& s_FldProp_DupConfOnHold_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_562_4( I_("N") );
      return( dstrDefValue_562_4 );
   }
   const DString& s_FldProp_DupConfOnHold_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_562_4( I_("DupConfOnHold") );
      return( dstrFldLabel_562_4 );
   }
   PBF_SSC subset_super_chooser_2_562( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DupConfOnHold(
       BFDataFieldProperties::Type::text // field is a text field
      ,DupConfOnHold // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DupConfOnHold_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DupConfOnHold_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_562 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StmtOnHold (563)
   //------------------------------------------------------------------
   const DString& s_FldProp_StmtOnHold_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_563_5( I_("N") );
      return( dstrDefValue_563_5 );
   }
   const DString& s_FldProp_StmtOnHold_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_563_5( I_("StmtOnHold  ") );
      return( dstrFldLabel_563_5 );
   }
   PBF_SSC subset_super_chooser_2_563( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StmtOnHold(
       BFDataFieldProperties::Type::text // field is a text field
      ,StmtOnHold // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StmtOnHold_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StmtOnHold_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_563 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_DupStmtOnHold (564)
   //------------------------------------------------------------------
   const DString& s_FldProp_DupStmtOnHold_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_564_4( I_("N") );
      return( dstrDefValue_564_4 );
   }
   const DString& s_FldProp_DupStmtOnHold_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_564_4( I_("DupStmtOnHold") );
      return( dstrFldLabel_564_4 );
   }
   PBF_SSC subset_super_chooser_2_564( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_DupStmtOnHold(
       BFDataFieldProperties::Type::text // field is a text field
      ,DupStmtOnHold // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_DupStmtOnHold_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_DupStmtOnHold_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_564 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_CertOnHold (565)
   //------------------------------------------------------------------
   const DString& s_FldProp_CertOnHold_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_565_4( I_("N") );
      return( dstrDefValue_565_4 );
   }
   const DString& s_FldProp_CertOnHold_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_565_4( I_("CertOnHold  ") );
      return( dstrFldLabel_565_4 );
   }
   PBF_SSC subset_super_chooser_2_565( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_CertOnHold(
       BFDataFieldProperties::Type::text // field is a text field
      ,CertOnHold // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_CertOnHold_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_CertOnHold_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_565 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TaxOnHold (566)
   //------------------------------------------------------------------
   const DString& s_FldProp_TaxOnHold_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_566_5( I_("N") );
      return( dstrDefValue_566_5 );
   }
   const DString& s_FldProp_TaxOnHold_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_566_5( I_("TaxOnHold  ") );
      return( dstrFldLabel_566_5 );
   }
   PBF_SSC subset_super_chooser_2_566( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TaxOnHold(
       BFDataFieldProperties::Type::text // field is a text field
      ,TaxOnHold // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TaxOnHold_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TaxOnHold_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_566 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_LetOnHold (567)
   //------------------------------------------------------------------
   const DString& s_FldProp_LetOnHold_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_567_5( I_("N") );
      return( dstrDefValue_567_5 );
   }
   const DString& s_FldProp_LetOnHold_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_567_5( I_("LetOnHold  ") );
      return( dstrFldLabel_567_5 );
   }
   PBF_SSC subset_super_chooser_2_567( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_LetOnHold(
       BFDataFieldProperties::Type::text // field is a text field
      ,LetOnHold // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_LetOnHold_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_LetOnHold_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_567 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BenOnHold (568)
   //------------------------------------------------------------------
   const DString& s_FldProp_BenOnHold_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_568_4( I_("N") );
      return( dstrDefValue_568_4 );
   }
   const DString& s_FldProp_BenOnHold_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_568_4( I_("BenOnHold  ") );
      return( dstrFldLabel_568_4 );
   }
   PBF_SSC subset_super_chooser_2_568( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BenOnHold(
       BFDataFieldProperties::Type::text // field is a text field
      ,BenOnHold // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BenOnHold_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BenOnHold_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_568 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Confirm (569)
   //------------------------------------------------------------------
   const DString& s_FldProp_Confirm_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_569_4( I_("Y") );
      return( dstrDefValue_569_4 );
   }
   const DString& s_FldProp_Confirm_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_569_4( I_("Confirm") );
      return( dstrFldLabel_569_4 );
   }
   PBF_SSC subset_super_chooser_2_569( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Confirm(
       BFDataFieldProperties::Type::text // field is a text field
      ,Confirm // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Confirm_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Confirm_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_569 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SATxnConfCode (570)
   //------------------------------------------------------------------
   const DString& s_FldProp_SATxnConfCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_570_4( I_("                                                  ") );
      return( dstrDefValue_570_4 );
   }
   const DString& s_FldProp_SATxnConfCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_570_4( I_("SATxnConfCode ") );
      return( dstrFldLabel_570_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SATxnConfCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,SATxnConfCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SATxnConfCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SATxnConfCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SATxnConfDesc (571)
   //------------------------------------------------------------------
   const DString& s_FldProp_SATxnConfDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_571_5( I_("                                                  ") );
      return( dstrDefValue_571_5 );
   }
   const DString& s_FldProp_SATxnConfDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_571_5( I_("SATxnConfDesc ") );
      return( dstrFldLabel_571_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SATxnConfDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,SATxnConfDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SATxnConfDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SATxnConfDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SADivConfCode (572)
   //------------------------------------------------------------------
   const DString& s_FldProp_SADivConfCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_572_4( I_("                                                  ") );
      return( dstrDefValue_572_4 );
   }
   const DString& s_FldProp_SADivConfCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_572_4( I_("SADivConfCode ") );
      return( dstrFldLabel_572_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SADivConfCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,SADivConfCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SADivConfCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SADivConfCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SADivConfDesc (573)
   //------------------------------------------------------------------
   const DString& s_FldProp_SADivConfDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_573_5( I_("                                                  ") );
      return( dstrDefValue_573_5 );
   }
   const DString& s_FldProp_SADivConfDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_573_5( I_("SADivConfDesc ") );
      return( dstrFldLabel_573_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SADivConfDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,SADivConfDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SADivConfDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SADivConfDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SALettersCode (574)
   //------------------------------------------------------------------
   const DString& s_FldProp_SALettersCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_574_8( I_("                                                  ") );
      return( dstrDefValue_574_8 );
   }
   const DString& s_FldProp_SALettersCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_574_8( I_("SALettersCode ") );
      return( dstrFldLabel_574_8 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SALettersCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,SALettersCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SALettersCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SALettersCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SALettersDesc (575)
   //------------------------------------------------------------------
   const DString& s_FldProp_SALettersDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_575_4( I_("                                                  ") );
      return( dstrDefValue_575_4 );
   }
   const DString& s_FldProp_SALettersDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_575_4( I_("SALettersDesc ") );
      return( dstrFldLabel_575_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SALettersDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,SALettersDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SALettersDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SALettersDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_City (576)
   //------------------------------------------------------------------
   const DString& s_FldProp_City_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_576_5( I_("                                                  ") );
      return( dstrDefValue_576_5 );
   }
   const DString& s_FldProp_City_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_576_5( I_("City ") );
      return( dstrFldLabel_576_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_City(
       BFDataFieldProperties::Type::text // field is a text field
      ,City // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_City_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_City_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InstitutionCode (578)
   //------------------------------------------------------------------
   const DString& s_FldProp_InstitutionCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_578_4( I_("0") );
      return( dstrDefValue_578_4 );
   }
   DIINT64 s_FldProp_InstitutionCode_i_DVF( const ClientLocale& locale )
   {
      return( 0 );
   }
   const DString& s_FldProp_InstitutionCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_578_4( I_("InstitutionCode") );
      return( dstrFldLabel_578_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InstitutionCode(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,InstitutionCode // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_InstitutionCode_s_DVF // default value
      ,s_FldProp_InstitutionCode_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_InstitutionCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_InstitutionName (579)
   //------------------------------------------------------------------
   const DString& s_FldProp_InstitutionName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_579_5( I_("                                                  ") );
      return( dstrDefValue_579_5 );
   }
   const DString& s_FldProp_InstitutionName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_579_5( I_("InstitutionName ") );
      return( dstrFldLabel_579_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_InstitutionName(
       BFDataFieldProperties::Type::text // field is a text field
      ,InstitutionName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_InstitutionName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_InstitutionName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransitCode (580)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransitCode_s_DVF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrDefValue_580_4( I_("0") );
         return( dstrDefValue_580_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrDefValue_580_7( I_("0") );
         return( dstrDefValue_580_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrDefValue_580_8( I_("0") );
         return( dstrDefValue_580_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrDefValue_580_5( I_("") );
         return( dstrDefValue_580_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrDefValue_580_1( I_("") );
         return( dstrDefValue_580_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrDefValue_580_6( I_("0") );
         return( dstrDefValue_580_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrDefValue_580_3( I_("0") );
         return( dstrDefValue_580_3 );
      }
      static const DString dstrDefValue_580_1( I_("") );
      return( dstrDefValue_580_1 );
   }
   const DString& s_FldProp_TransitCode_FLF( const ClientLocale& locale )
   {
      if( locale.getLocale() == I_("frFR") ) {
         static const DString dstrFldLabel_580_4( I_("TransitCode") );
         return( dstrFldLabel_580_4 );
      }
      if( locale.getLocale() == I_("deDE") ) {
         static const DString dstrFldLabel_580_7( I_("TransitCode") );
         return( dstrFldLabel_580_7 );
      }
      if( locale.getLocale() == I_("esEs") ) {
         static const DString dstrFldLabel_580_8( I_("TransitCode") );
         return( dstrFldLabel_580_8 );
      }
      if( locale.getLocale() == I_("frCA") ) {
         static const DString dstrFldLabel_580_5( I_("TransitCode") );
         return( dstrFldLabel_580_5 );
      }
      if( locale.getLocale() == I_("enUS") ) {
         static const DString dstrFldLabel_580_1( I_("TransitCode") );
         return( dstrFldLabel_580_1 );
      }
      if( locale.getLocale() == I_("enIE") ) {
         static const DString dstrFldLabel_580_6( I_("TransitCode") );
         return( dstrFldLabel_580_6 );
      }
      if( locale.getLocale() == I_("enCA") ) {
         static const DString dstrFldLabel_580_3( I_("TransitCode") );
         return( dstrFldLabel_580_3 );
      }
      static const DString dstrFldLabel_580_1( I_("TransitCode") );
      return( dstrFldLabel_580_1 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransitCode(
       BFDataFieldProperties::Type::text // field is a text field
      ,TransitCode // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransitCode_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TransitCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_TransitName (581)
   //------------------------------------------------------------------
   const DString& s_FldProp_TransitName_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_581_4( I_("                                                  ") );
      return( dstrDefValue_581_4 );
   }
   const DString& s_FldProp_TransitName_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_581_4( I_("TransitName ") );
      return( dstrFldLabel_581_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_TransitName(
       BFDataFieldProperties::Type::text // field is a text field
      ,TransitName // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_TransitName_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_TransitName_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankAccountNum (582)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankAccountNum_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_582_4( I_("                                                  ") );
      return( dstrDefValue_582_4 );
   }
   const DString& s_FldProp_BankAccountNum_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_582_4( I_("BankAccountNum ") );
      return( dstrFldLabel_582_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankAccountNum(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankAccountNum // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankAccountNum_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankAccountNum_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_FedTaxAmt (583)
   //------------------------------------------------------------------
   const DString& s_FldProp_FedTaxAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_583_4( I_("0.0000000000") );
      return( dstrDefValue_583_4 );
   }
   double s_FldProp_FedTaxAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_FedTaxAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_583_4( I_("FedTaxAmt ") );
      return( dstrFldLabel_583_4 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_FedTaxAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,FedTaxAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_FedTaxAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_FedTaxAmt_d_DVF // default value
      ,s_FldProp_FedTaxAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ProvTaxAmt (584)
   //------------------------------------------------------------------
   const DString& s_FldProp_ProvTaxAmt_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_584_5( I_("0.0000000000") );
      return( dstrDefValue_584_5 );
   }
   double s_FldProp_ProvTaxAmt_d_DVF( const ClientLocale& locale )
   {
      return( 0.0000000000 );
   }
   const DString& s_FldProp_ProvTaxAmt_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_584_5( I_("ProvTaxAmt ") );
      return( dstrFldLabel_584_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ProvTaxAmt(
       BFDataFieldProperties::Type::decimal // field is a decimal number field
      ,ProvTaxAmt // fieldId
      ,23 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_2_17 // mask chooser function
      ,s_FldProp_ProvTaxAmt_s_DVF // default value
      ,NULL // default value (integer)
      ,s_FldProp_ProvTaxAmt_d_DVF // default value
      ,s_FldProp_ProvTaxAmt_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ErrorCode (586)
   //------------------------------------------------------------------
   const DString& s_FldProp_ErrorCode_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_586_5( I_("0000000000") );
      return( dstrDefValue_586_5 );
   }
   DIINT64 s_FldProp_ErrorCode_i_DVF( const ClientLocale& locale )
   {
      return( 0000000000 );
   }
   const DString& s_FldProp_ErrorCode_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_586_5( I_("ErrorCode ") );
      return( dstrFldLabel_586_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ErrorCode(
       BFDataFieldProperties::Type::numeric // field is numeric
      ,ErrorCode // fieldId
      ,10 // length
      ,0 // minimum length
      ,0 // decmials
      ,mask_chooser_1_3 // mask chooser function
      ,s_FldProp_ErrorCode_s_DVF // default value
      ,s_FldProp_ErrorCode_i_DVF // default value
      ,NULL // default value (double)
      ,s_FldProp_ErrorCode_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_ErrorDesc (587)
   //------------------------------------------------------------------
   const DString& s_FldProp_ErrorDesc_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_587_5( I_("                                                  ") );
      return( dstrDefValue_587_5 );
   }
   const DString& s_FldProp_ErrorDesc_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_587_5( I_("ErrorDesc ") );
      return( dstrFldLabel_587_5 );
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_ErrorDesc(
       BFDataFieldProperties::Type::text // field is a text field
      ,ErrorDesc // fieldId
      ,60 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_ErrorDesc_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_ErrorDesc_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,NULL // no substitution set
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PendingTrade (589)
   //------------------------------------------------------------------
   const DString& s_FldProp_PendingTrade_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_589_5( I_("N") );
      return( dstrDefValue_589_5 );
   }
   const DString& s_FldProp_PendingTrade_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_589_5( I_("PendingTrade") );
      return( dstrFldLabel_589_5 );
   }
   PBF_SSC subset_super_chooser_2_589( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PendingTrade(
       BFDataFieldProperties::Type::text // field is a text field
      ,PendingTrade // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PendingTrade_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PendingTrade_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_589 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Remarks (590)
   //------------------------------------------------------------------
   const DString& s_FldProp_Remarks_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_590_4( I_("N") );
      return( dstrDefValue_590_4 );
   }
   const DString& s_FldProp_Remarks_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_590_4( I_("Remarks") );
      return( dstrFldLabel_590_4 );
   }
   PBF_SSC subset_super_chooser_2_590( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Remarks(
       BFDataFieldProperties::Type::text // field is a text field
      ,Remarks // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Remarks_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Remarks_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_590 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_Certificates (591)
   //------------------------------------------------------------------
   const DString& s_FldProp_Certificates_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_591_4( I_("N") );
      return( dstrDefValue_591_4 );
   }
   const DString& s_FldProp_Certificates_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_591_4( I_("Certificates") );
      return( dstrFldLabel_591_4 );
   }
   PBF_SSC subset_super_chooser_2_591( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_Certificates(
       BFDataFieldProperties::Type::text // field is a text field
      ,Certificates // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_Certificates_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_Certificates_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_591 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopPurch (592)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopPurch_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_592_5( I_("N") );
      return( dstrDefValue_592_5 );
   }
   const DString& s_FldProp_StopPurch_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_592_5( I_("StopPurch  ") );
      return( dstrFldLabel_592_5 );
   }
   PBF_SSC subset_super_chooser_2_592( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopPurch(
       BFDataFieldProperties::Type::text // field is a text field
      ,StopPurch // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopPurch_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopPurch_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_592 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopRed (593)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopRed_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_593_5( I_("N") );
      return( dstrDefValue_593_5 );
   }
   const DString& s_FldProp_StopRed_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_593_5( I_("StopRed") );
      return( dstrFldLabel_593_5 );
   }
   PBF_SSC subset_super_chooser_2_593( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopRed(
       BFDataFieldProperties::Type::text // field is a text field
      ,StopRed // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopRed_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopRed_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_593 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopTrsfrOut (594)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopTrsfrOut_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_594_4( I_("N") );
      return( dstrDefValue_594_4 );
   }
   const DString& s_FldProp_StopTrsfrOut_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_594_4( I_("StopTrsfrOut") );
      return( dstrFldLabel_594_4 );
   }
   PBF_SSC subset_super_chooser_2_594( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopTrsfrOut(
       BFDataFieldProperties::Type::text // field is a text field
      ,StopTrsfrOut // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopTrsfrOut_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopTrsfrOut_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_594 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_StopTrsfrIn (595)
   //------------------------------------------------------------------
   const DString& s_FldProp_StopTrsfrIn_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_595_4( I_("N") );
      return( dstrDefValue_595_4 );
   }
   const DString& s_FldProp_StopTrsfrIn_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_595_4( I_("StopTrsfrIn") );
      return( dstrFldLabel_595_4 );
   }
   PBF_SSC subset_super_chooser_2_595( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_StopTrsfrIn(
       BFDataFieldProperties::Type::text // field is a text field
      ,StopTrsfrIn // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_StopTrsfrIn_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_StopTrsfrIn_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_595 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_BankingAcct (596)
   //------------------------------------------------------------------
   const DString& s_FldProp_BankingAcct_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_596_4( I_("N") );
      return( dstrDefValue_596_4 );
   }
   const DString& s_FldProp_BankingAcct_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_596_4( I_("BankingAcct ") );
      return( dstrFldLabel_596_4 );
   }
   PBF_SSC subset_super_chooser_2_596( const ClientLocale& locale )
   {
      return chooser_ss_002_002; // defined in ifast_substitutions_chooser_0.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_BankingAcct(
       BFDataFieldProperties::Type::text // field is a text field
      ,BankingAcct // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_BankingAcct_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_BankingAcct_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_596 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SystemTrsfr (597)
   //------------------------------------------------------------------
   const DString& s_FldProp_SystemTrsfr_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_597_5( I_("N") );
      return( dstrDefValue_597_5 );
   }
   const DString& s_FldProp_SystemTrsfr_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_597_5( I_("SystemTrsfr") );
      return( dstrFldLabel_597_5 );
   }
   PBF_SSC subset_super_chooser_2_597( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SystemTrsfr(
       BFDataFieldProperties::Type::text // field is a text field
      ,SystemTrsfr // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SystemTrsfr_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SystemTrsfr_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_597 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_PAC (598)
   //------------------------------------------------------------------
   const DString& s_FldProp_PAC_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_598_4( I_("N") );
      return( dstrDefValue_598_4 );
   }
   const DString& s_FldProp_PAC_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_598_4( I_("PAC") );
      return( dstrFldLabel_598_4 );
   }
   PBF_SSC subset_super_chooser_2_598( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_PAC(
       BFDataFieldProperties::Type::text // field is a text field
      ,PAC // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_PAC_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_PAC_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_598 // substitution set super chooser
      );

   //------------------------------------------------------------------
   // Field s_FldProp_SWP (599)
   //------------------------------------------------------------------
   const DString& s_FldProp_SWP_s_DVF( const ClientLocale& locale )
   {
      static const DString dstrDefValue_599_5( I_("N") );
      return( dstrDefValue_599_5 );
   }
   const DString& s_FldProp_SWP_FLF( const ClientLocale& locale )
   {
      static const DString dstrFldLabel_599_5( I_("SWP") );
      return( dstrFldLabel_599_5 );
   }
   PBF_SSC subset_super_chooser_2_599( const ClientLocale& locale )
   {
      return chooser_ss_002_068; // defined in ifast_substitutions_chooser_2.cpp
   }
   extern CLASS_EXPORT const BFDataFieldProperties s_FldProp_SWP(
       BFDataFieldProperties::Type::text // field is a text field
      ,SWP // fieldId
      ,1 // length
      ,0 // minimum length
      ,0 // decmials
      ,NULL  // mask chooser function
      ,s_FldProp_SWP_s_DVF // default value
      ,NULL // default value (integer)
      ,NULL // default value (double)
      ,s_FldProp_SWP_FLF // label
      ,NULL // field name is deprecated
      ,false // allow Nulls
      ,None // justification
      ,subset_super_chooser_2_599 // substitution set super chooser
      );
}
