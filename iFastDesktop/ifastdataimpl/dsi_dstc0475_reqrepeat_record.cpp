// BFDataImpl implementation file for DataSet DSTC0475.REQRepeat_Record
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Wednesday, December 07, 2016 10:56:22


#include "stdafx.h"
#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0475_reqrepeat_record.h"


// This function creates an instance of dsi_DSTC0475_REQRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0475_REQRepeat_Record() { return new dsi_DSTC0475_REQRepeat_Record; }

dsi_DSTC0475_REQRepeat_Record::dsi_DSTC0475_REQRepeat_Record()
: BFDataImpl( 40007710 )
, ErrorCode_( ifds::ErrorCode, &ifds::s_FldProp_ErrorCode )
, ErrorDesc_( ifds::ErrorDesc, &ifds::s_FldProp_ErrorDesc )
, EWI_( ifds::EWI, &ifds::s_FldProp_EWI )
, Username_( ifds::Username, &ifds::s_FldProp_Username )
{
    cFields_ = 4;
    memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0475_REQRepeat_Record::~dsi_DSTC0475_REQRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0475_REQRepeat_Record::clone()
{
    dsi_DSTC0475_REQRepeat_Record* p = new dsi_DSTC0475_REQRepeat_Record;
    p->ErrorCode_ = ErrorCode_;
    p->ErrorDesc_ = ErrorDesc_;
    p->EWI_ = EWI_;
    p->Username_ = Username_;
    return(p);
}

BFDataField* dsi_DSTC0475_REQRepeat_Record::getElement( const BFFieldId& id )
{
    switch( id.getId() ) {
        case 40000586: return ( &ErrorCode_ ); break; // ErrorCode
        case 40000587: return ( &ErrorDesc_ ); break; // ErrorDesc
        case 40001802: return ( &EWI_ ); break; // EWI
        case 40000117: return ( &Username_ ); break; // Username
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0475_REQRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0475_REQRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0475_REQRepeat_Record::getElementByIndex( unsigned int iField )
{
    if ( iField >=0 && iField < 4 )
    {
        BFDataField* pField = aFlds_[iField];
        if( NULL == pField )
        {
            switch(iField)
            {
                case 0: aFlds_[0] = &ErrorCode_; break;
                case 1: aFlds_[1] = &ErrorDesc_; break;
                case 2: aFlds_[2] = &EWI_; break;
                case 3: aFlds_[3] = &Username_; break;
            }
            pField = aFlds_[iField];
            if( NULL == pField ) return( NULL );
        }
        return( pField );
    }
    return( NULL );
}

const BFDataField* dsi_DSTC0475_REQRepeat_Record::getElementByIndex( unsigned int iField ) const
{
    return( ( const_cast< dsi_DSTC0475_REQRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0475_REQRepeat_Record::getLargestDefinedField( void ) const
{
    return( 60 );
}

unsigned long dsi_DSTC0475_REQRepeat_Record::getDefinedByteLength( void ) const
{
    return( 190 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0475_REQRepeat_Record::exists( const BFFieldId& id ) const
{
    return dsi_DSTC0475_REQRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0475_REQRepeat_Record::fieldExists( const BFFieldId& id )
{
    switch( id.getId() )
    {
        case 40000586: return ( true );
        case 40000587: return ( true );
        case 40001802: return ( true );
        case 40000117: return ( true );
    }
    return false;
}

