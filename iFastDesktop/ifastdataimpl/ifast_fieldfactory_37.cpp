// FieldIds
// ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
// ViewsGenerator: Generated on : Friday, May 06, 2016 16:30:44

#include "stdafx.h"
#include <bfdata/bffieldid.hpp>
#include <bfdata/bfdataid.hpp>

namespace ifds            
{            
   extern const BFTextFieldId InvestorClassification;            
   extern const BFTextFieldId AIFMDInvestorCategory;            
   extern const BFTextFieldId ExcludeVerifiedTrades;            
   extern const BFTextFieldId SearchUserID;            
   extern const BFTextFieldId VerifyPerm;            
   extern const BFTextFieldId DeletePerm;            
   extern const BFTextFieldId MessageExits;            
   extern const BFDataId DSTC0463_REQ;            
   extern const BFDataId DSTC0463_REQRepeat_Record;            
   extern const BFTextFieldId UserAction;            
   extern const BFDataId DSTC0463_VW;            
   extern const BFDataId DSTC0463_VWRepeat_Record;            
   extern const BFDataId DSTC0464_REQ;            
   extern const BFDataId DSTC0464_VW;            
   extern const BFDataId DSTC0464_VWRepeat_Record;            
   extern const BFTextFieldId TradeVerificationSearchHeading;            
   extern const BFTextFieldId VerifyTrade;            
   extern const BFTextFieldId DeleteTrade;            
   extern const BFTextFieldId VerifyAll;            
   extern const BFTextFieldId DeleteAll;            
   extern const BFTextFieldId RetType;            
   extern const BFTextFieldId RuleCode;            
   extern const BFTextFieldId RuleValue;            
   extern const BFTextFieldId UnitSearchType;            
   extern const BFTextFieldId GainOrLossCurrency;            
   extern const BFTextFieldId GetTransType;            
   extern const BFTextFieldId GetNextAvailRate;            
   extern const BFTextFieldId TaxFormsAppl;            
   extern const BFTextFieldId EDocsAccessAppl;            
   extern const BFTextFieldId AccountGroupExist;            
   extern const BFTextFieldId PrivateWealthAcct;            
   extern const BFTextFieldId PrivateWealthOptOut;            
   extern const BFTextFieldId TPSReason;            
   extern const BFTextFieldId CashMsgType;            
   extern const BFTextFieldId IntermediaryBank;            
   extern const BFTextFieldId ReceivingBank;            
   extern const BFTextFieldId Beneficiary;            
   extern const BFTextFieldId SpecialInstructions;            
   extern const BFTextFieldId ToCashMsgType;            
   extern const BFTextFieldId FrCashMsgType;            
   extern const BFTextFieldId ToIntermediaryBank;            
   extern const BFTextFieldId ToReceivingBank;            
   extern const BFTextFieldId ToBeneficiary;            
   extern const BFTextFieldId ToSpecialInstructions;            
   extern const BFTextFieldId FrIntermediaryBank;            
   extern const BFTextFieldId FrReceivingBank;            
   extern const BFTextFieldId FrBeneficiary;            
   extern const BFTextFieldId FrSpecialInstructions;            
   extern const BFTextFieldId ToSettlementAccount;            
   extern const BFTextFieldId ToInternalSettlementAccount;            
   extern const BFTextFieldId FrSettlementAccount;            
   extern const BFTextFieldId FrInternalSettlementAccount;            
   extern const BFTextFieldId InternalSettlementAccount;            
   extern const BFTextFieldId BatchVerify;            
   extern const BFTextFieldId ExcludeAggrOrd;            
   extern const BFTextFieldId LastModfiedStatus;            
   extern const BFTextFieldId CancelRequestedUser;            
   extern const BFTextFieldId SrcOfPymtSalary;            
   extern const BFTextFieldId SrcOfPymtBusinessIncome;            
   extern const BFTextFieldId SrcOfPymtBorrowedFunds;            
   extern const BFTextFieldId SrcOfPymtGiftedFunds;            
   extern const BFTextFieldId SrcOfPymtPrcdsFrmDeathBenefEstate;            
   extern const BFTextFieldId SrcOfPymtSocialBenefits;            
   extern const BFTextFieldId SrcOfPymtOther;            
   extern const BFTextFieldId SrcOfPymtOtherReason;            
   extern const BFTextFieldId SrcOfPymtExistingInvstAccount;            
   extern const BFTextFieldId SrcOfPymtOwnerSavings;            
   extern const BFTextFieldId SrcOfPymtSaleOfProperty;            
   extern const BFTextFieldId SrcOfPymtPensionIncome;            
   extern const BFTextFieldId SrcOfPymtInheritedFunds;            
   extern const BFTextFieldId SolicitPublicContrib;            
   extern const BFTextFieldId InvReason;            
   extern const BFTextFieldId KYCAttribType;            
   extern const BFTextFieldId KYCAttribCode;            
   extern const BFTextFieldId KYCAttribStat;            
   extern const BFDataId DSTC0465_REQ;            
   extern const BFDataId DSTC0465_VW;            
   extern const BFDataId DSTC0465_VWRepeat_Record;            
   extern const BFDataId DSTC0466_REQ;            
   extern const BFDataId DSTC0466_REQRepeat_Record;            
   extern const BFDataId DSTC0466_VW;            
   extern const BFTextFieldId LastTransNumInSetofReq;            
   extern const BFTextFieldId AutoDefaultCancelGrant;            
   extern const BFTextFieldId KYCAttribDesc;            
   extern const BFTextFieldId G1G2CalcMethd;            
   extern const BFTextFieldId FundClassSheduleAvailable;            
   extern const BFNumericFieldId CrossSysAcctNum;            
   extern const BFTextFieldId G1G2UnitsXEdit;            
   extern const BFTextFieldId AggregationType;            
   extern const BFTextFieldId AggActive;            
   extern const BFTextFieldId AggActCatgry;            
   extern const BFTextFieldId AggDefAggMod;            
   extern const BFTextFieldId AnnuitantName;            
   extern const BFTextFieldId SuccessorAnnuitantName;            
   extern const BFTextFieldId SuccessorName;            
   extern const BFTextFieldId HypoRedSummaryAmountHeadingSetWithCB;            
   extern const BFTextFieldId HypoRedDetailAmountHeadingSetWithCB;            
   extern const BFTextFieldId HypoRedTotalHeadingSetWithCB;            
   extern const BFDecimalFieldId TotCBAmount;            
   extern const BFTextFieldId rxBankingEntity;            
   extern const BFTextFieldId MoreThanOneAccount;            
   extern const BFTextFieldId BankingLevel;            
   extern const BFTextFieldId DefaultBankingLevel;            
   extern const BFTextFieldId TOExistAfterPreElectReset;            
   extern const BFTextFieldId BankInstrComboDefaultNoRRIFAcct;            
   extern const BFTextFieldId MoneyInExist;            
   extern const BFTextFieldId HighRiskDispMode;            
   extern const BFTextFieldId HighRiskLevels;            
   extern const BFTextFieldId RiskApplEntity;            
   extern const BFTextFieldId RiskApplEntitySeq;            
   extern const BFTextFieldId RiskForAcctHldrRsk;            
   extern const BFTextFieldId SourceofFundsChecked;            
   extern const BFTextFieldId NotApplicable;            
   extern const BFTextFieldId HouseholdInfoExist;            
   extern const BFTextFieldId MailHouseholdID;            
   extern const BFTextFieldId ReqMode;            
   extern const BFTextFieldId CopyToMailErrorCode;            
   extern const BFTextFieldId ApplCopyToMailHousehold;            
   extern const BFTextFieldId CopyFromFeeModelCode;            
   extern const BFTextFieldId RebalDateFormat;            
   extern const BFTextFieldId AMSRebalPending;            
   extern const BFDateFieldId ActualRebalanceDate;            
   extern const BFTextFieldId AMSRebReqMode;            
   extern const BFTextFieldId AllocationUpdated;            
   extern const BFTextFieldId SuppressionReasonCode;            
   extern const BFTextFieldId XrefSuppressionReasonCode;            
   extern const BFTextFieldId IsRESPTransform;            
   extern const BFDecimalFieldId BCTESGGrant;            
   extern const BFDataId DSTC0467_REQ;            
   extern const BFDataId DSTC0467_VW;            
   extern const BFDataId DSTC0467_VWRepeat_Record;            
   extern const BFTextFieldId AssetType;            
   extern const BFTextFieldId RESPNotlType;            
   extern const BFTextFieldId GrantDescription;            
   extern const BFTextFieldId RESPNotlGroup;            
   extern const BFTextFieldId TaxJurisAtGrantRequest;            
   extern const BFTextFieldId TaxJurisAtGrantRedeem;            
   extern const BFTextFieldId ResidencyAtGrantRequest;            
   extern const BFTextFieldId ResidencyAtGrantRedeem;            
   extern const BFIntegerFieldId BenefStartAgeForAsset;            
   extern const BFIntegerFieldId BenefEndAgeForAsset;            
   extern const BFTextFieldId AgeCalcMethod;            
   extern const BFTextFieldId GrantFrequency;            
   extern const BFTextFieldId GrantRequestType;            
   extern const BFTextFieldId SiblingRequired;            
   extern const BFTextFieldId ShareAsset;            
   extern const BFTextFieldId DepletionMethod;            
   extern const BFTextFieldId AutoGrantReturn;            
   extern const BFDateFieldId GrantStartDate;            
   extern const BFDateFieldId GrantEndDate;            
   extern const BFTextFieldId GrantGBCD;            
   extern const BFTextFieldId FeeModelSrc;            
   extern const BFTextFieldId GroupDest;            
   extern const BFTextFieldId FeeModelCopyToGroupHeading;            
   extern const BFDataId DSTC0468_REQ;            
   extern const BFDataId DSTC0468_VW;            
   extern const BFDataId DSTC0468_VWRepeat_Record;            
   extern const BFTextFieldId AcctGrpType;            
   extern const BFTextFieldId ConfigName;            
   extern const BFTextFieldId ConfigValue;            
   extern const BFTextFieldId AllowCopy;            
   extern const BFTextFieldId SameDlrBrnRep;            
   extern const BFTextFieldId GrantAmountNA;            
   extern const BFTextFieldId TotalOnly;            
   extern const BFTextFieldId CountryOfExposure;            
   extern const BFTextFieldId RegDocJurisdiction;            
   extern const BFDateFieldId RegEffectiveDate;            
   extern const BFTextFieldId CRSEntityList;            
   extern const BFTextFieldId RegDocComplyRule;            
   extern const BFTextFieldId EntityAssociation;            
   extern const BFTextFieldId TaxComplianceList;            
   extern const BFTextFieldId CRSActive;            
   extern const BFTextFieldId TaxJurisAppl;            
   extern const BFTextFieldId KYCBusinessType;            
   extern const BFTextFieldId KYCLegalForm;            
   extern const BFDateFieldId AcctEffDate;            
   extern const BFBigDecimalFieldId BidPrice;            
   extern const BFTextFieldId FullExchPrntToPrnt;            
   extern const BFTextFieldId SoftCapLvl;            
   extern const BFTextFieldId OrigTradeFee;
   extern const BFDataFieldProperties s_FldProp_InvestorClassification;            
   extern const BFDataFieldProperties s_FldProp_AIFMDInvestorCategory;            
   extern const BFDataFieldProperties s_FldProp_ExcludeVerifiedTrades;            
   extern const BFDataFieldProperties s_FldProp_SearchUserID;            
   extern const BFDataFieldProperties s_FldProp_VerifyPerm;            
   extern const BFDataFieldProperties s_FldProp_DeletePerm;            
   extern const BFDataFieldProperties s_FldProp_MessageExits;            
   extern const BFDataFieldProperties s_FldProp_DSTC0463_REQ;            
   extern const BFDataFieldProperties s_FldProp_DSTC0463_REQRepeat_Record;            
   extern const BFDataFieldProperties s_FldProp_UserAction;            
   extern const BFDataFieldProperties s_FldProp_DSTC0463_VW;            
   extern const BFDataFieldProperties s_FldProp_DSTC0463_VWRepeat_Record;            
   extern const BFDataFieldProperties s_FldProp_DSTC0464_REQ;            
   extern const BFDataFieldProperties s_FldProp_DSTC0464_VW;            
   extern const BFDataFieldProperties s_FldProp_DSTC0464_VWRepeat_Record;            
   extern const BFDataFieldProperties s_FldProp_TradeVerificationSearchHeading;            
   extern const BFDataFieldProperties s_FldProp_VerifyTrade;            
   extern const BFDataFieldProperties s_FldProp_DeleteTrade;            
   extern const BFDataFieldProperties s_FldProp_VerifyAll;            
   extern const BFDataFieldProperties s_FldProp_DeleteAll;            
   extern const BFDataFieldProperties s_FldProp_RetType;            
   extern const BFDataFieldProperties s_FldProp_RuleCode;            
   extern const BFDataFieldProperties s_FldProp_RuleValue;            
   extern const BFDataFieldProperties s_FldProp_UnitSearchType;            
   extern const BFDataFieldProperties s_FldProp_GainOrLossCurrency;            
   extern const BFDataFieldProperties s_FldProp_GetTransType;            
   extern const BFDataFieldProperties s_FldProp_GetNextAvailRate;            
   extern const BFDataFieldProperties s_FldProp_TaxFormsAppl;            
   extern const BFDataFieldProperties s_FldProp_EDocsAccessAppl;            
   extern const BFDataFieldProperties s_FldProp_AccountGroupExist;            
   extern const BFDataFieldProperties s_FldProp_PrivateWealthAcct;            
   extern const BFDataFieldProperties s_FldProp_PrivateWealthOptOut;            
   extern const BFDataFieldProperties s_FldProp_TPSReason;            
   extern const BFDataFieldProperties s_FldProp_CashMsgType;            
   extern const BFDataFieldProperties s_FldProp_IntermediaryBank;            
   extern const BFDataFieldProperties s_FldProp_ReceivingBank;            
   extern const BFDataFieldProperties s_FldProp_Beneficiary;            
   extern const BFDataFieldProperties s_FldProp_SpecialInstructions;            
   extern const BFDataFieldProperties s_FldProp_ToCashMsgType;            
   extern const BFDataFieldProperties s_FldProp_FrCashMsgType;            
   extern const BFDataFieldProperties s_FldProp_ToIntermediaryBank;            
   extern const BFDataFieldProperties s_FldProp_ToReceivingBank;            
   extern const BFDataFieldProperties s_FldProp_ToBeneficiary;            
   extern const BFDataFieldProperties s_FldProp_ToSpecialInstructions;            
   extern const BFDataFieldProperties s_FldProp_FrIntermediaryBank;            
   extern const BFDataFieldProperties s_FldProp_FrReceivingBank;            
   extern const BFDataFieldProperties s_FldProp_FrBeneficiary;            
   extern const BFDataFieldProperties s_FldProp_FrSpecialInstructions;            
   extern const BFDataFieldProperties s_FldProp_ToSettlementAccount;            
   extern const BFDataFieldProperties s_FldProp_ToInternalSettlementAccount;            
   extern const BFDataFieldProperties s_FldProp_FrSettlementAccount;            
   extern const BFDataFieldProperties s_FldProp_FrInternalSettlementAccount;            
   extern const BFDataFieldProperties s_FldProp_InternalSettlementAccount;            
   extern const BFDataFieldProperties s_FldProp_BatchVerify;            
   extern const BFDataFieldProperties s_FldProp_ExcludeAggrOrd;            
   extern const BFDataFieldProperties s_FldProp_LastModfiedStatus;            
   extern const BFDataFieldProperties s_FldProp_CancelRequestedUser;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtSalary;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtBusinessIncome;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtBorrowedFunds;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtGiftedFunds;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtPrcdsFrmDeathBenefEstate;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtSocialBenefits;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtOther;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtOtherReason;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtExistingInvstAccount;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtOwnerSavings;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtSaleOfProperty;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtPensionIncome;            
   extern const BFDataFieldProperties s_FldProp_SrcOfPymtInheritedFunds;            
   extern const BFDataFieldProperties s_FldProp_SolicitPublicContrib;            
   extern const BFDataFieldProperties s_FldProp_InvReason;            
   extern const BFDataFieldProperties s_FldProp_KYCAttribType;            
   extern const BFDataFieldProperties s_FldProp_KYCAttribCode;            
   extern const BFDataFieldProperties s_FldProp_KYCAttribStat;            
   extern const BFDataFieldProperties s_FldProp_DSTC0465_REQ;            
   extern const BFDataFieldProperties s_FldProp_DSTC0465_VW;            
   extern const BFDataFieldProperties s_FldProp_DSTC0465_VWRepeat_Record;            
   extern const BFDataFieldProperties s_FldProp_DSTC0466_REQ;            
   extern const BFDataFieldProperties s_FldProp_DSTC0466_REQRepeat_Record;            
   extern const BFDataFieldProperties s_FldProp_DSTC0466_VW;            
   extern const BFDataFieldProperties s_FldProp_LastTransNumInSetofReq;            
   extern const BFDataFieldProperties s_FldProp_AutoDefaultCancelGrant;            
   extern const BFDataFieldProperties s_FldProp_KYCAttribDesc;            
   extern const BFDataFieldProperties s_FldProp_G1G2CalcMethd;            
   extern const BFDataFieldProperties s_FldProp_FundClassSheduleAvailable;            
   extern const BFDataFieldProperties s_FldProp_CrossSysAcctNum;            
   extern const BFDataFieldProperties s_FldProp_G1G2UnitsXEdit;            
   extern const BFDataFieldProperties s_FldProp_AggregationType;            
   extern const BFDataFieldProperties s_FldProp_AggActive;            
   extern const BFDataFieldProperties s_FldProp_AggActCatgry;            
   extern const BFDataFieldProperties s_FldProp_AggDefAggMod;            
   extern const BFDataFieldProperties s_FldProp_AnnuitantName;            
   extern const BFDataFieldProperties s_FldProp_SuccessorAnnuitantName;            
   extern const BFDataFieldProperties s_FldProp_SuccessorName;            
   extern const BFDataFieldProperties s_FldProp_HypoRedSummaryAmountHeadingSetWithCB;            
   extern const BFDataFieldProperties s_FldProp_HypoRedDetailAmountHeadingSetWithCB;            
   extern const BFDataFieldProperties s_FldProp_HypoRedTotalHeadingSetWithCB;            
   extern const BFDataFieldProperties s_FldProp_TotCBAmount;            
   extern const BFDataFieldProperties s_FldProp_rxBankingEntity;            
   extern const BFDataFieldProperties s_FldProp_MoreThanOneAccount;            
   extern const BFDataFieldProperties s_FldProp_BankingLevel;            
   extern const BFDataFieldProperties s_FldProp_DefaultBankingLevel;            
   extern const BFDataFieldProperties s_FldProp_TOExistAfterPreElectReset;            
   extern const BFDataFieldProperties s_FldProp_BankInstrComboDefaultNoRRIFAcct;            
   extern const BFDataFieldProperties s_FldProp_MoneyInExist;            
   extern const BFDataFieldProperties s_FldProp_HighRiskDispMode;            
   extern const BFDataFieldProperties s_FldProp_HighRiskLevels;            
   extern const BFDataFieldProperties s_FldProp_RiskApplEntity;            
   extern const BFDataFieldProperties s_FldProp_RiskApplEntitySeq;            
   extern const BFDataFieldProperties s_FldProp_RiskForAcctHldrRsk;            
   extern const BFDataFieldProperties s_FldProp_SourceofFundsChecked;            
   extern const BFDataFieldProperties s_FldProp_NotApplicable;            
   extern const BFDataFieldProperties s_FldProp_HouseholdInfoExist;            
   extern const BFDataFieldProperties s_FldProp_MailHouseholdID;            
   extern const BFDataFieldProperties s_FldProp_ReqMode;            
   extern const BFDataFieldProperties s_FldProp_CopyToMailErrorCode;            
   extern const BFDataFieldProperties s_FldProp_ApplCopyToMailHousehold;            
   extern const BFDataFieldProperties s_FldProp_CopyFromFeeModelCode;            
   extern const BFDataFieldProperties s_FldProp_RebalDateFormat;            
   extern const BFDataFieldProperties s_FldProp_AMSRebalPending;            
   extern const BFDataFieldProperties s_FldProp_ActualRebalanceDate;            
   extern const BFDataFieldProperties s_FldProp_AMSRebReqMode;            
   extern const BFDataFieldProperties s_FldProp_AllocationUpdated;            
   extern const BFDataFieldProperties s_FldProp_SuppressionReasonCode;            
   extern const BFDataFieldProperties s_FldProp_XrefSuppressionReasonCode;            
   extern const BFDataFieldProperties s_FldProp_IsRESPTransform;            
   extern const BFDataFieldProperties s_FldProp_BCTESGGrant;            
   extern const BFDataFieldProperties s_FldProp_DSTC0467_REQ;            
   extern const BFDataFieldProperties s_FldProp_DSTC0467_VW;            
   extern const BFDataFieldProperties s_FldProp_DSTC0467_VWRepeat_Record;            
   extern const BFDataFieldProperties s_FldProp_AssetType;            
   extern const BFDataFieldProperties s_FldProp_RESPNotlType;            
   extern const BFDataFieldProperties s_FldProp_GrantDescription;            
   extern const BFDataFieldProperties s_FldProp_RESPNotlGroup;            
   extern const BFDataFieldProperties s_FldProp_TaxJurisAtGrantRequest;            
   extern const BFDataFieldProperties s_FldProp_TaxJurisAtGrantRedeem;            
   extern const BFDataFieldProperties s_FldProp_ResidencyAtGrantRequest;            
   extern const BFDataFieldProperties s_FldProp_ResidencyAtGrantRedeem;            
   extern const BFDataFieldProperties s_FldProp_BenefStartAgeForAsset;            
   extern const BFDataFieldProperties s_FldProp_BenefEndAgeForAsset;            
   extern const BFDataFieldProperties s_FldProp_AgeCalcMethod;            
   extern const BFDataFieldProperties s_FldProp_GrantFrequency;            
   extern const BFDataFieldProperties s_FldProp_GrantRequestType;            
   extern const BFDataFieldProperties s_FldProp_SiblingRequired;            
   extern const BFDataFieldProperties s_FldProp_ShareAsset;            
   extern const BFDataFieldProperties s_FldProp_DepletionMethod;            
   extern const BFDataFieldProperties s_FldProp_AutoGrantReturn;            
   extern const BFDataFieldProperties s_FldProp_GrantStartDate;            
   extern const BFDataFieldProperties s_FldProp_GrantEndDate;            
   extern const BFDataFieldProperties s_FldProp_GrantGBCD;            
   extern const BFDataFieldProperties s_FldProp_FeeModelSrc;            
   extern const BFDataFieldProperties s_FldProp_GroupDest;            
   extern const BFDataFieldProperties s_FldProp_FeeModelCopyToGroupHeading;            
   extern const BFDataFieldProperties s_FldProp_DSTC0468_REQ;            
   extern const BFDataFieldProperties s_FldProp_DSTC0468_VW;            
   extern const BFDataFieldProperties s_FldProp_DSTC0468_VWRepeat_Record;            
   extern const BFDataFieldProperties s_FldProp_AcctGrpType;            
   extern const BFDataFieldProperties s_FldProp_ConfigName;            
   extern const BFDataFieldProperties s_FldProp_ConfigValue;            
   extern const BFDataFieldProperties s_FldProp_AllowCopy;            
   extern const BFDataFieldProperties s_FldProp_SameDlrBrnRep;            
   extern const BFDataFieldProperties s_FldProp_GrantAmountNA;            
   extern const BFDataFieldProperties s_FldProp_TotalOnly;            
   extern const BFDataFieldProperties s_FldProp_CountryOfExposure;            
   extern const BFDataFieldProperties s_FldProp_RegDocJurisdiction;            
   extern const BFDataFieldProperties s_FldProp_RegEffectiveDate;            
   extern const BFDataFieldProperties s_FldProp_CRSEntityList;            
   extern const BFDataFieldProperties s_FldProp_RegDocComplyRule;            
   extern const BFDataFieldProperties s_FldProp_EntityAssociation;            
   extern const BFDataFieldProperties s_FldProp_TaxComplianceList;            
   extern const BFDataFieldProperties s_FldProp_CRSActive;            
   extern const BFDataFieldProperties s_FldProp_TaxJurisAppl;            
   extern const BFDataFieldProperties s_FldProp_KYCBusinessType;            
   extern const BFDataFieldProperties s_FldProp_KYCLegalForm;            
   extern const BFDataFieldProperties s_FldProp_AcctEffDate;            
   extern const BFDataFieldProperties s_FldProp_BidPrice;            
   extern const BFDataFieldProperties s_FldProp_FullExchPrntToPrnt;            
   extern const BFDataFieldProperties s_FldProp_SoftCapLvl;            
   extern const BFDataFieldProperties s_FldProp_OrigTradeFee;
   BFDataField* createField_37( const BFFieldId id )            
   {            
      BFDataField* pField = NULL;            
      switch( id.getId() )            
      {            
         case 40007400: pField = new BFTextField_10( InvestorClassification, &s_FldProp_InvestorClassification ); break;            
         case 40007401: pField = new BFTextField_10( AIFMDInvestorCategory, &s_FldProp_AIFMDInvestorCategory ); break;            
         case 40007402: pField = new BFTextField_10( ExcludeVerifiedTrades, &s_FldProp_ExcludeVerifiedTrades ); break;            
         case 40007403: pField = new BFTextField_60( SearchUserID, &s_FldProp_SearchUserID ); break;            
         case 40007404: pField = new BFTextField_10( VerifyPerm, &s_FldProp_VerifyPerm ); break;            
         case 40007405: pField = new BFTextField_10( DeletePerm, &s_FldProp_DeletePerm ); break;            
         case 40007406: pField = new BFTextField_10( MessageExits, &s_FldProp_MessageExits ); break;            
         case 40007410: pField = new BFTextField_10( UserAction, &s_FldProp_UserAction ); break;            
         case 40007416: pField = new BFTextField_60( TradeVerificationSearchHeading, &s_FldProp_TradeVerificationSearchHeading ); break;            
         case 40007417: pField = new BFTextField_10( VerifyTrade, &s_FldProp_VerifyTrade ); break;            
         case 40007418: pField = new BFTextField_10( DeleteTrade, &s_FldProp_DeleteTrade ); break;            
         case 40007419: pField = new BFTextField_10( VerifyAll, &s_FldProp_VerifyAll ); break;            
         case 40007420: pField = new BFTextField_10( DeleteAll, &s_FldProp_DeleteAll ); break;            
         case 40007421: pField = new BFTextField_10( RetType, &s_FldProp_RetType ); break;            
         case 40007422: pField = new BFTextField_10( RuleCode, &s_FldProp_RuleCode ); break;            
         case 40007423: pField = new BFTextField_10( RuleValue, &s_FldProp_RuleValue ); break;            
         case 40007424: pField = new BFTextField<50>( UnitSearchType, &s_FldProp_UnitSearchType ); break;            
         case 40007425: pField = new BFTextField<3>( GainOrLossCurrency, &s_FldProp_GainOrLossCurrency ); break;            
         case 40007426: pField = new BFTextField<30>( GetTransType, &s_FldProp_GetTransType ); break;            
         case 40007427: pField = new BFTextField<30>( GetNextAvailRate, &s_FldProp_GetNextAvailRate ); break;            
         case 40007428: pField = new BFTextField<30>( TaxFormsAppl, &s_FldProp_TaxFormsAppl ); break;            
         case 40007429: pField = new BFTextField<30>( EDocsAccessAppl, &s_FldProp_EDocsAccessAppl ); break;            
         case 40007430: pField = new BFTextField_10( AccountGroupExist, &s_FldProp_AccountGroupExist ); break;            
         case 40007431: pField = new BFTextField_10( PrivateWealthAcct, &s_FldProp_PrivateWealthAcct ); break;            
         case 40007432: pField = new BFTextField_10( PrivateWealthOptOut, &s_FldProp_PrivateWealthOptOut ); break;            
         case 40007433: pField = new BFTextField<40>( TPSReason, &s_FldProp_TPSReason ); break;            
         case 40007434: pField = new BFTextField<50>( CashMsgType, &s_FldProp_CashMsgType ); break;            
         case 40007435: pField = new BFTextField<50>( IntermediaryBank, &s_FldProp_IntermediaryBank ); break;            
         case 40007436: pField = new BFTextField<50>( ReceivingBank, &s_FldProp_ReceivingBank ); break;            
         case 40007437: pField = new BFTextField<50>( Beneficiary, &s_FldProp_Beneficiary ); break;            
         case 40007438: pField = new BFTextField<50>( SpecialInstructions, &s_FldProp_SpecialInstructions ); break;            
         case 40007439: pField = new BFTextField<50>( ToCashMsgType, &s_FldProp_ToCashMsgType ); break;            
         case 40007440: pField = new BFTextField<50>( FrCashMsgType, &s_FldProp_FrCashMsgType ); break;            
         case 40007441: pField = new BFTextField<50>( ToIntermediaryBank, &s_FldProp_ToIntermediaryBank ); break;            
         case 40007442: pField = new BFTextField<50>( ToReceivingBank, &s_FldProp_ToReceivingBank ); break;            
         case 40007443: pField = new BFTextField<50>( ToBeneficiary, &s_FldProp_ToBeneficiary ); break;            
         case 40007444: pField = new BFTextField<50>( ToSpecialInstructions, &s_FldProp_ToSpecialInstructions ); break;            
         case 40007445: pField = new BFTextField<50>( FrIntermediaryBank, &s_FldProp_FrIntermediaryBank ); break;            
         case 40007446: pField = new BFTextField<50>( FrReceivingBank, &s_FldProp_FrReceivingBank ); break;            
         case 40007447: pField = new BFTextField<50>( FrBeneficiary, &s_FldProp_FrBeneficiary ); break;            
         case 40007448: pField = new BFTextField<50>( FrSpecialInstructions, &s_FldProp_FrSpecialInstructions ); break;            
         case 40007449: pField = new BFTextField<50>( ToSettlementAccount, &s_FldProp_ToSettlementAccount ); break;            
         case 40007450: pField = new BFTextField<50>( ToInternalSettlementAccount, &s_FldProp_ToInternalSettlementAccount ); break;            
         case 40007451: pField = new BFTextField<50>( FrSettlementAccount, &s_FldProp_FrSettlementAccount ); break;            
         case 40007452: pField = new BFTextField<50>( FrInternalSettlementAccount, &s_FldProp_FrInternalSettlementAccount ); break;            
         case 40007453: pField = new BFTextField<50>( InternalSettlementAccount, &s_FldProp_InternalSettlementAccount ); break;            
         case 40007455: pField = new BFTextField_10( BatchVerify, &s_FldProp_BatchVerify ); break;            
         case 40007457: pField = new BFTextField_10( ExcludeAggrOrd, &s_FldProp_ExcludeAggrOrd ); break;            
         case 40007458: pField = new BFTextField_10( LastModfiedStatus, &s_FldProp_LastModfiedStatus ); break;            
         case 40007459: pField = new BFTextField_60( CancelRequestedUser, &s_FldProp_CancelRequestedUser ); break;            
         case 40007460: pField = new BFTextField_10( SrcOfPymtSalary, &s_FldProp_SrcOfPymtSalary ); break;            
         case 40007461: pField = new BFTextField_10( SrcOfPymtBusinessIncome, &s_FldProp_SrcOfPymtBusinessIncome ); break;            
         case 40007462: pField = new BFTextField_10( SrcOfPymtBorrowedFunds, &s_FldProp_SrcOfPymtBorrowedFunds ); break;            
         case 40007463: pField = new BFTextField_10( SrcOfPymtGiftedFunds, &s_FldProp_SrcOfPymtGiftedFunds ); break;            
         case 40007464: pField = new BFTextField_10( SrcOfPymtPrcdsFrmDeathBenefEstate, &s_FldProp_SrcOfPymtPrcdsFrmDeathBenefEstate ); break;            
         case 40007465: pField = new BFTextField_10( SrcOfPymtSocialBenefits, &s_FldProp_SrcOfPymtSocialBenefits ); break;            
         case 40007466: pField = new BFTextField_10( SrcOfPymtOther, &s_FldProp_SrcOfPymtOther ); break;            
         case 40007467: pField = new BFTextField<200>( SrcOfPymtOtherReason, &s_FldProp_SrcOfPymtOtherReason ); break;            
         case 40007468: pField = new BFTextField_10( SrcOfPymtExistingInvstAccount, &s_FldProp_SrcOfPymtExistingInvstAccount ); break;            
         case 40007469: pField = new BFTextField_10( SrcOfPymtOwnerSavings, &s_FldProp_SrcOfPymtOwnerSavings ); break;            
         case 40007470: pField = new BFTextField_10( SrcOfPymtSaleOfProperty, &s_FldProp_SrcOfPymtSaleOfProperty ); break;            
         case 40007471: pField = new BFTextField_10( SrcOfPymtPensionIncome, &s_FldProp_SrcOfPymtPensionIncome ); break;            
         case 40007472: pField = new BFTextField_10( SrcOfPymtInheritedFunds, &s_FldProp_SrcOfPymtInheritedFunds ); break;            
         case 40007473: pField = new BFTextField_10( SolicitPublicContrib, &s_FldProp_SolicitPublicContrib ); break;            
         case 40007474: pField = new BFTextField_10( InvReason, &s_FldProp_InvReason ); break;            
         case 40007475: pField = new BFTextField_10( KYCAttribType, &s_FldProp_KYCAttribType ); break;            
         case 40007476: pField = new BFTextField_10( KYCAttribCode, &s_FldProp_KYCAttribCode ); break;            
         case 40007477: pField = new BFTextField_10( KYCAttribStat, &s_FldProp_KYCAttribStat ); break;            
         case 40007484: pField = new BFTextField_60( LastTransNumInSetofReq, &s_FldProp_LastTransNumInSetofReq ); break;            
         case 40007485: pField = new BFTextField<30>( AutoDefaultCancelGrant, &s_FldProp_AutoDefaultCancelGrant ); break;            
         case 40007486: pField = new BFTextField<200>( KYCAttribDesc, &s_FldProp_KYCAttribDesc ); break;            
         case 40007487: pField = new BFTextField_10( G1G2CalcMethd, &s_FldProp_G1G2CalcMethd ); break;            
         case 40007489: pField = new BFTextField_10( FundClassSheduleAvailable, &s_FldProp_FundClassSheduleAvailable ); break;            
         case 40007490: pField = new BFNumericField( CrossSysAcctNum, &s_FldProp_CrossSysAcctNum ); break;            
         case 40007492: pField = new BFTextField<100>( G1G2UnitsXEdit, &s_FldProp_G1G2UnitsXEdit ); break;            
         case 40007493: pField = new BFTextField_10( AggregationType, &s_FldProp_AggregationType ); break;            
         case 40007494: pField = new BFTextField_10( AggActive, &s_FldProp_AggActive ); break;            
         case 40007495: pField = new BFTextField<256>( AggActCatgry, &s_FldProp_AggActCatgry ); break;            
         case 40007496: pField = new BFTextField<256>( AggDefAggMod, &s_FldProp_AggDefAggMod ); break;            
         case 40007497: pField = new BFTextField_60( AnnuitantName, &s_FldProp_AnnuitantName ); break;            
         case 40007498: pField = new BFTextField_60( SuccessorAnnuitantName, &s_FldProp_SuccessorAnnuitantName ); break;            
         case 40007499: pField = new BFTextField_60( SuccessorName, &s_FldProp_SuccessorName ); break;            
         case 40007500: pField = new BFTextField_60( HypoRedSummaryAmountHeadingSetWithCB, &s_FldProp_HypoRedSummaryAmountHeadingSetWithCB ); break;            
         case 40007501: pField = new BFTextField_60( HypoRedDetailAmountHeadingSetWithCB, &s_FldProp_HypoRedDetailAmountHeadingSetWithCB ); break;            
         case 40007502: pField = new BFTextField_60( HypoRedTotalHeadingSetWithCB, &s_FldProp_HypoRedTotalHeadingSetWithCB ); break;            
         case 40007503: pField = new BFDecimalField( TotCBAmount, &s_FldProp_TotCBAmount ); break;            
         case 40007505: pField = new BFTextField_10( rxBankingEntity, &s_FldProp_rxBankingEntity ); break;            
         case 40007506: pField = new BFTextField_10( MoreThanOneAccount, &s_FldProp_MoreThanOneAccount ); break;            
         case 40007507: pField = new BFTextField_10( BankingLevel, &s_FldProp_BankingLevel ); break;            
         case 40007508: pField = new BFTextField_10( DefaultBankingLevel, &s_FldProp_DefaultBankingLevel ); break;            
         case 40007509: pField = new BFTextField_10( TOExistAfterPreElectReset, &s_FldProp_TOExistAfterPreElectReset ); break;            
         case 40007510: pField = new BFTextField_60( BankInstrComboDefaultNoRRIFAcct, &s_FldProp_BankInstrComboDefaultNoRRIFAcct ); break;            
         case 40007511: pField = new BFTextField_10( MoneyInExist, &s_FldProp_MoneyInExist ); break;            
         case 40007512: pField = new BFTextField_10( HighRiskDispMode, &s_FldProp_HighRiskDispMode ); break;            
         case 40007513: pField = new BFTextField<256>( HighRiskLevels, &s_FldProp_HighRiskLevels ); break;            
         case 40007514: pField = new BFTextField<256>( RiskApplEntity, &s_FldProp_RiskApplEntity ); break;            
         case 40007515: pField = new BFTextField<256>( RiskApplEntitySeq, &s_FldProp_RiskApplEntitySeq ); break;            
         case 40007516: pField = new BFTextField<256>( RiskForAcctHldrRsk, &s_FldProp_RiskForAcctHldrRsk ); break;            
         case 40007517: pField = new BFTextField_10( SourceofFundsChecked, &s_FldProp_SourceofFundsChecked ); break;            
         case 40007522: pField = new BFTextField_10( NotApplicable, &s_FldProp_NotApplicable ); break;            
         case 40007523: pField = new BFTextField<30>( HouseholdInfoExist, &s_FldProp_HouseholdInfoExist ); break;            
         case 40007524: pField = new BFTextField_60( MailHouseholdID, &s_FldProp_MailHouseholdID ); break;            
         case 40007525: pField = new BFTextField_60( ReqMode, &s_FldProp_ReqMode ); break;            
         case 40007526: pField = new BFTextField_60( CopyToMailErrorCode, &s_FldProp_CopyToMailErrorCode ); break;            
         case 40007527: pField = new BFTextField_60( ApplCopyToMailHousehold, &s_FldProp_ApplCopyToMailHousehold ); break;            
         case 40007528: pField = new BFTextField_60( CopyFromFeeModelCode, &s_FldProp_CopyFromFeeModelCode ); break;            
         case 40007529: pField = new BFTextField_10( RebalDateFormat, &s_FldProp_RebalDateFormat ); break;            
         case 40007530: pField = new BFTextField_10( AMSRebalPending, &s_FldProp_AMSRebalPending ); break;            
         case 40007531: pField = new BFDateField( ActualRebalanceDate, &s_FldProp_ActualRebalanceDate ); break;            
         case 40007532: pField = new BFTextField_10( AMSRebReqMode, &s_FldProp_AMSRebReqMode ); break;            
         case 40007533: pField = new BFTextField_10( AllocationUpdated, &s_FldProp_AllocationUpdated ); break;            
         case 40007534: pField = new BFTextField_10( SuppressionReasonCode, &s_FldProp_SuppressionReasonCode ); break;            
         case 40007535: pField = new BFTextField_10( XrefSuppressionReasonCode, &s_FldProp_XrefSuppressionReasonCode ); break;            
         case 40007537: pField = new BFTextField_1( IsRESPTransform, &s_FldProp_IsRESPTransform ); break;            
         case 40007538: pField = new BFDecimalField( BCTESGGrant, &s_FldProp_BCTESGGrant ); break;            
         case 40007542: pField = new BFTextField_60( AssetType, &s_FldProp_AssetType ); break;            
         case 40007543: pField = new BFTextField_60( RESPNotlType, &s_FldProp_RESPNotlType ); break;            
         case 40007544: pField = new BFTextField_60( GrantDescription, &s_FldProp_GrantDescription ); break;            
         case 40007545: pField = new BFTextField_60( RESPNotlGroup, &s_FldProp_RESPNotlGroup ); break;            
         case 40007546: pField = new BFTextField_60( TaxJurisAtGrantRequest, &s_FldProp_TaxJurisAtGrantRequest ); break;            
         case 40007547: pField = new BFTextField_60( TaxJurisAtGrantRedeem, &s_FldProp_TaxJurisAtGrantRedeem ); break;            
         case 40007548: pField = new BFTextField_60( ResidencyAtGrantRequest, &s_FldProp_ResidencyAtGrantRequest ); break;            
         case 40007549: pField = new BFTextField_60( ResidencyAtGrantRedeem, &s_FldProp_ResidencyAtGrantRedeem ); break;            
         case 40007550: pField = new BFIntegerField( BenefStartAgeForAsset, &s_FldProp_BenefStartAgeForAsset ); break;            
         case 40007551: pField = new BFIntegerField( BenefEndAgeForAsset, &s_FldProp_BenefEndAgeForAsset ); break;            
         case 40007552: pField = new BFTextField_60( AgeCalcMethod, &s_FldProp_AgeCalcMethod ); break;            
         case 40007553: pField = new BFTextField_60( GrantFrequency, &s_FldProp_GrantFrequency ); break;            
         case 40007554: pField = new BFTextField_60( GrantRequestType, &s_FldProp_GrantRequestType ); break;            
         case 40007555: pField = new BFTextField_60( SiblingRequired, &s_FldProp_SiblingRequired ); break;            
         case 40007556: pField = new BFTextField_60( ShareAsset, &s_FldProp_ShareAsset ); break;            
         case 40007557: pField = new BFTextField_60( DepletionMethod, &s_FldProp_DepletionMethod ); break;            
         case 40007558: pField = new BFTextField_60( AutoGrantReturn, &s_FldProp_AutoGrantReturn ); break;            
         case 40007559: pField = new BFDateField( GrantStartDate, &s_FldProp_GrantStartDate ); break;            
         case 40007560: pField = new BFDateField( GrantEndDate, &s_FldProp_GrantEndDate ); break;            
         case 40007561: pField = new BFTextField_1( GrantGBCD, &s_FldProp_GrantGBCD ); break;            
         case 40007562: pField = new BFTextField_60( FeeModelSrc, &s_FldProp_FeeModelSrc ); break;            
         case 40007563: pField = new BFTextField_60( GroupDest, &s_FldProp_GroupDest ); break;            
         case 40007564: pField = new BFTextField_60( FeeModelCopyToGroupHeading, &s_FldProp_FeeModelCopyToGroupHeading ); break;            
         case 40007568: pField = new BFTextField_60( AcctGrpType, &s_FldProp_AcctGrpType ); break;            
         case 40007569: pField = new BFTextField_60( ConfigName, &s_FldProp_ConfigName ); break;            
         case 40007570: pField = new BFTextField_60( ConfigValue, &s_FldProp_ConfigValue ); break;            
         case 40007571: pField = new BFTextField_10( AllowCopy, &s_FldProp_AllowCopy ); break;            
         case 40007572: pField = new BFTextField_10( SameDlrBrnRep, &s_FldProp_SameDlrBrnRep ); break;            
         case 40007573: pField = new BFTextField_10( GrantAmountNA, &s_FldProp_GrantAmountNA ); break;            
         case 40007574: pField = new BFTextField_1( TotalOnly, &s_FldProp_TotalOnly ); break;            
         case 40007577: pField = new BFTextField_6( CountryOfExposure, &s_FldProp_CountryOfExposure ); break;            
         case 40007578: pField = new BFTextField_60( RegDocJurisdiction, &s_FldProp_RegDocJurisdiction ); break;            
         case 40007583: pField = new BFDateField( RegEffectiveDate, &s_FldProp_RegEffectiveDate ); break;            
         case 40007584: pField = new BFTextField<256>( CRSEntityList, &s_FldProp_CRSEntityList ); break;            
         case 40007588: pField = new BFTextField<256>( RegDocComplyRule, &s_FldProp_RegDocComplyRule ); break;            
         case 40007589: pField = new BFTextField_10( EntityAssociation, &s_FldProp_EntityAssociation ); break;            
         case 40007590: pField = new BFTextField<256>( TaxComplianceList, &s_FldProp_TaxComplianceList ); break;            
         case 40007591: pField = new BFTextField_10( CRSActive, &s_FldProp_CRSActive ); break;            
         case 40007592: pField = new BFTextField_1( TaxJurisAppl, &s_FldProp_TaxJurisAppl ); break;            
         case 40007593: pField = new BFTextField_60( KYCBusinessType, &s_FldProp_KYCBusinessType ); break;            
         case 40007594: pField = new BFTextField_60( KYCLegalForm, &s_FldProp_KYCLegalForm ); break;            
         case 40007595: pField = new BFDateField( AcctEffDate, &s_FldProp_AcctEffDate ); break;            
         case 40007596: pField = new BFBigDecimalField( BidPrice, &s_FldProp_BidPrice ); break;            
         case 40007597: pField = new BFTextField_60( FullExchPrntToPrnt, &s_FldProp_FullExchPrntToPrnt ); break;            
         case 40007598: pField = new BFTextField_10( SoftCapLvl, &s_FldProp_SoftCapLvl ); break;            
         case 40007599: pField = new BFTextField_10( OrigTradeFee, &s_FldProp_OrigTradeFee ); break; 
      }            
      return pField;            
   }            
}            
