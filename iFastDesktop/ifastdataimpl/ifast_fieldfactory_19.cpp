// Data Field Factory Function
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdatafield.hpp>
#include <bfdata/bfdataid.hpp>

namespace ifds
{
   extern const BFTextFieldId Nationality;
   extern const BFDecimalFieldId BrokerAMSVer;
   extern const BFNumericFieldId BrokerAMSRId;
   extern const BFDataId DSTC0250_REQ;
   extern const BFDataId DSTC0250_VWRepeat_Record;
   extern const BFDataId DSTC0250_VW;
   extern const BFTextFieldId AMSName;
   extern const BFDataId DSTC0251_REQ;
   extern const BFDataId DSTC0251_REQRepeat_Record;
   extern const BFDataId DSTC0251_VW;
   extern const BFDecimalFieldId RebalPrcnt;
   extern const BFTextFieldId AMSCurrency;
   extern const BFTextFieldId BrokerAMSList;
   extern const BFTextFieldId FeeExists;
   extern const BFTextFieldId EarlyPWFeeElig;
   extern const BFTextFieldId ShortTermTRFeeElig;
   extern const BFTextFieldId NomineeOwnFirstN;
   extern const BFTextFieldId NomineeOwnLastN;
   extern const BFTextFieldId ChargesERSTTRFee;
   extern const BFTextFieldId ChargeERSTTRFee;
   extern const BFTextFieldId ChargeERFee;
   extern const BFTextFieldId ChargeSTTRFee;
   extern const BFTextFieldId ShGroupName;
   extern const BFTextFieldId ShGroupApplicable;
   extern const BFTextFieldId BrokerApplicable;
   extern const BFTextFieldId BranchApplicable;
   extern const BFTextFieldId SalesrepApplicable;
   extern const BFTextFieldId FundClassApplicable;
   extern const BFTextFieldId FromFundClassApplicable;
   extern const BFTextFieldId FeeTypeList;
   extern const BFTextFieldId BaseOnList;
   extern const BFTextFieldId HowPaidList;
   extern const BFTextFieldId MinMaxFreqList;
   extern const BFTextFieldId OverrideList;
   extern const BFTextFieldId OnPWApplicable;
   extern const BFTextFieldId OnFWApplicable;
   extern const BFTextFieldId FeeSetupLevel;
   extern const BFDataId DSTC0253_REQ;
   extern const BFDataId DSTC0253_VW;
   extern const BFDataId DSTC0253_VWRepeat_Record;
   extern const BFTextFieldId FeeRecordOverlapCheck;
   extern const BFTextFieldId MailingByFundGroup;
   extern const BFTextFieldId FamilyCodeApplicable;
   extern const BFTextFieldId TradeAMSCode;
   extern const BFTextFieldId TxnLevelSec;
   extern const BFTextFieldId DuplicateExist;
   extern const BFTextFieldId ExchangeOutFromFund;
   extern const BFTextFieldId AcctMailingOverrideHeading;
   extern const BFTextFieldId BrokerAddressHeadingSet;
   extern const BFDataId DSTC0254_REQ;
   extern const BFDataId DSTC0254_VW;
   extern const BFDataId DSTC0254_VWRepeat_Record;
   extern const BFTextFieldId MiscCode;
   extern const BFTextFieldId MiscDesc;
   extern const BFTextFieldId MiscCategory;
   extern const BFTextFieldId OnHold;
   extern const BFTextFieldId Mail;
   extern const BFTextFieldId Fax;
   extern const BFTextFieldId CD;
   extern const BFTextFieldId LEmail;
   extern const BFDecimalFieldId MailRecId;
   extern const BFDecimalFieldId EmailRecId;
   extern const BFDecimalFieldId FaxRecId;
   extern const BFDecimalFieldId CDRecId;
   extern const BFDecimalFieldId MailVersion;
   extern const BFDecimalFieldId EmailVersion;
   extern const BFDecimalFieldId FaxVersion;
   extern const BFDecimalFieldId CDVersion;
   extern const BFTextFieldId ATFeeApply;
   extern const BFDecimalFieldId FeeOverrideType;
   extern const BFTextFieldId ProfileCodeDflt;
   extern const BFTextFieldId MgmtFeePayOptDflt;
   extern const BFTextFieldId MailingOption;
   extern const BFTextFieldId MailConsent;
   extern const BFDecimalFieldId MinPrevYrBalPctSysCalc;
   extern const BFDecimalFieldId MaxPrevYrBalPctSysCalc;
   extern const BFTextFieldId UseBrokerMF;
   extern const BFTextFieldId AmountRedEff;
   extern const BFTextFieldId StopAMSRebalancing;
   extern const BFTextFieldId BasedOnBA;
   extern const BFTextFieldId BasedOnBC;
   extern const BFTextFieldId BasedOnBH;
   extern const BFTextFieldId ManualDividendHeading;
   extern const BFTextFieldId FromFundClassAcctTo;
   extern const BFTextFieldId ManualDividendPayType;
   extern const BFTextFieldId SummitAccountsLowerBound;
   extern const BFTextFieldId SummitAccountsUpperBound;
   extern const BFTextFieldId MoneyMktFund;
   extern const BFTextFieldId BankInstrComboDefault;
   extern const BFTextFieldId RRIFFromAlloc;
   extern const BFTextFieldId RRIFToAlloc;
   extern const BFTextFieldId AllowManDiv;
   extern const BFTextFieldId SetRTAsDefault;
   extern const BFTextFieldId InvestPhilosophyCode;
   extern const BFTextFieldId SAMFinHealthCode;
   extern const BFTextFieldId InvestPhilosophyDesc;
   extern const BFTextFieldId SAMFinHealthDesc;
   extern const BFTextFieldId CloneBankInstructions;
   extern const BFTextFieldId IsRRIFAccount;
   extern const BFTextFieldId BankInstrComboTransaction;
   extern const BFTextFieldId BankInstrComboDefaultNoRRIF;
   extern const BFTextFieldId BankInstrComboPendingTransaction;
   extern const BFTextFieldId BankInstrComboTrade;
   extern const BFTextFieldId BankInstrComboClient;
   extern const BFTextFieldId BankInstrComboFund;
   extern const BFTextFieldId BankInstrComboSettlement;
   extern const BFTextFieldId ToAllocations;
   extern const BFTextFieldId ACHTrailerFee;
   extern const BFTextFieldId ACHCommission;
   extern const BFTextFieldId ACHDividend;
   extern const BFTextFieldId PayInstructAvail;
   extern const BFTextFieldId PayFor;
   extern const BFTextFieldId FeeLevel;
   extern const BFTextFieldId BrokerFeaturesSearchCriteria;
   extern const BFTextFieldId BrokerFeaturesSearchPayToEntityUsing;
   extern const BFTextFieldId BrokerFeaturesSearchPaymentInstructionsUsing;
   extern const BFTextFieldId BrokerFeaturesSearchLabels;
   extern const BFTextFieldId SearchLabel1;
   extern const BFTextFieldId SearchLabel2;
   extern const BFTextFieldId SearchLabel3;
   extern const BFTextFieldId FillSearchType;
   extern const BFTextFieldId PayTypeMethod;
   extern const BFTextFieldId MainSearchLabels;
   extern const BFTextFieldId MainSearchCriteria;
   extern const BFTextFieldId SearchUsing;
   extern const BFTextFieldId DefaultFeeCode;
   extern const BFTextFieldId SearchFieldCriteria1;
   extern const BFTextFieldId SearchFieldCriteria2;
   extern const BFTextFieldId SearchFieldCriteria3;
   extern const BFTextFieldId HowManySearchCriterias;
   extern const BFTextFieldId BrokerFeaturesSearchCriteriaNo;
   extern const BFTextFieldId MainSearchCriteriaNo;
   extern const BFTextFieldId BrokerFeaturesSearchBankingUsing;
   extern const BFDataId DSTC0258_REQ;
   extern const BFDataId DSTC0258_VW;
   extern const BFDataId DSTC0258_VWRepeat_Record;
   extern const BFTextFieldId PaymentFor;
   extern const BFTextFieldId PayToEntity;
   extern const BFDataId DSTC0259_REQRepeat_Record;
   extern const BFDataId DSTC0259_REQ;
   extern const BFDataId DSTC0259_VW;
   extern const BFTextFieldId PayToEntityListHeading;
   extern const BFTextFieldId PayToEntityNoAll;
   extern const BFTextFieldId BrokerPaymentFor;
   extern const BFDataId DSTC0256_REQ;
   extern const BFTextFieldId DuplicateCheck;
   extern const BFDataId DSTC0256_VW;
   extern const BFDataId DSTC0256_VWRepeat_Record;
   extern const BFTextFieldId BankCharge;
   extern const BFTextFieldId CurrencyOption;
   extern const BFTextFieldId UseEntityAddress;
   extern const BFTextFieldId BrokerBranchSalesRepPaymentFor;
   extern const BFTextFieldId PaymentInstructionsListHeading;
   extern const BFTextFieldId BrokerFeaturesSearchHistoricalInfoUsing;
   extern const BFDataId DSTC0257_REQ;
   extern const BFDataId DSTC0257_REQRepeat_Record;
   extern const BFDataId DSTC0257_VW;
   extern const BFTextFieldId PaymentInstructionsPayType;
   extern const BFTextFieldId BAFFFileProcessor;
   extern const BFDecimalFieldId PayInstructionsId;
   extern const BFTextFieldId PayInstrTrailer;
   extern const BFTextFieldId PayInstrComm;
   extern const BFDecimalFieldId GrowthPercent;
   extern const BFDecimalFieldId IncomePercent;
   extern const BFDecimalFieldId SafetyPercent;
   extern const BFNumericFieldId RepNo;
   extern const BFDateFieldId AcctModDate;
   extern const BFDataFieldProperties s_FldProp_Nationality;
   extern const BFDataFieldProperties s_FldProp_BrokerAMSVer;
   extern const BFDataFieldProperties s_FldProp_BrokerAMSRId;
   extern const BFDataFieldProperties s_FldProp_DSTC0250_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0250_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0250_VW;
   extern const BFDataFieldProperties s_FldProp_AMSName;
   extern const BFDataFieldProperties s_FldProp_DSTC0251_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0251_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0251_VW;
   extern const BFDataFieldProperties s_FldProp_RebalPrcnt;
   extern const BFDataFieldProperties s_FldProp_AMSCurrency;
   extern const BFDataFieldProperties s_FldProp_BrokerAMSList;
   extern const BFDataFieldProperties s_FldProp_FeeExists;
   extern const BFDataFieldProperties s_FldProp_EarlyPWFeeElig;
   extern const BFDataFieldProperties s_FldProp_ShortTermTRFeeElig;
   extern const BFDataFieldProperties s_FldProp_NomineeOwnFirstN;
   extern const BFDataFieldProperties s_FldProp_NomineeOwnLastN;
   extern const BFDataFieldProperties s_FldProp_ChargesERSTTRFee;
   extern const BFDataFieldProperties s_FldProp_ChargeERSTTRFee;
   extern const BFDataFieldProperties s_FldProp_ChargeERFee;
   extern const BFDataFieldProperties s_FldProp_ChargeSTTRFee;
   extern const BFDataFieldProperties s_FldProp_ShGroupName;
   extern const BFDataFieldProperties s_FldProp_ShGroupApplicable;
   extern const BFDataFieldProperties s_FldProp_BrokerApplicable;
   extern const BFDataFieldProperties s_FldProp_BranchApplicable;
   extern const BFDataFieldProperties s_FldProp_SalesrepApplicable;
   extern const BFDataFieldProperties s_FldProp_FundClassApplicable;
   extern const BFDataFieldProperties s_FldProp_FromFundClassApplicable;
   extern const BFDataFieldProperties s_FldProp_FeeTypeList;
   extern const BFDataFieldProperties s_FldProp_BaseOnList;
   extern const BFDataFieldProperties s_FldProp_HowPaidList;
   extern const BFDataFieldProperties s_FldProp_MinMaxFreqList;
   extern const BFDataFieldProperties s_FldProp_OverrideList;
   extern const BFDataFieldProperties s_FldProp_OnPWApplicable;
   extern const BFDataFieldProperties s_FldProp_OnFWApplicable;
   extern const BFDataFieldProperties s_FldProp_FeeSetupLevel;
   extern const BFDataFieldProperties s_FldProp_DSTC0253_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0253_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0253_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_FeeRecordOverlapCheck;
   extern const BFDataFieldProperties s_FldProp_MailingByFundGroup;
   extern const BFDataFieldProperties s_FldProp_FamilyCodeApplicable;
   extern const BFDataFieldProperties s_FldProp_TradeAMSCode;
   extern const BFDataFieldProperties s_FldProp_TxnLevelSec;
   extern const BFDataFieldProperties s_FldProp_DuplicateExist;
   extern const BFDataFieldProperties s_FldProp_ExchangeOutFromFund;
   extern const BFDataFieldProperties s_FldProp_AcctMailingOverrideHeading;
   extern const BFDataFieldProperties s_FldProp_BrokerAddressHeadingSet;
   extern const BFDataFieldProperties s_FldProp_DSTC0254_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0254_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0254_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_MiscCode;
   extern const BFDataFieldProperties s_FldProp_MiscDesc;
   extern const BFDataFieldProperties s_FldProp_MiscCategory;
   extern const BFDataFieldProperties s_FldProp_OnHold;
   extern const BFDataFieldProperties s_FldProp_Mail;
   extern const BFDataFieldProperties s_FldProp_Fax;
   extern const BFDataFieldProperties s_FldProp_CD;
   extern const BFDataFieldProperties s_FldProp_LEmail;
   extern const BFDataFieldProperties s_FldProp_MailRecId;
   extern const BFDataFieldProperties s_FldProp_EmailRecId;
   extern const BFDataFieldProperties s_FldProp_FaxRecId;
   extern const BFDataFieldProperties s_FldProp_CDRecId;
   extern const BFDataFieldProperties s_FldProp_MailVersion;
   extern const BFDataFieldProperties s_FldProp_EmailVersion;
   extern const BFDataFieldProperties s_FldProp_FaxVersion;
   extern const BFDataFieldProperties s_FldProp_CDVersion;
   extern const BFDataFieldProperties s_FldProp_ATFeeApply;
   extern const BFDataFieldProperties s_FldProp_FeeOverrideType;
   extern const BFDataFieldProperties s_FldProp_ProfileCodeDflt;
   extern const BFDataFieldProperties s_FldProp_MgmtFeePayOptDflt;
   extern const BFDataFieldProperties s_FldProp_MailingOption;
   extern const BFDataFieldProperties s_FldProp_MailConsent;
   extern const BFDataFieldProperties s_FldProp_MinPrevYrBalPctSysCalc;
   extern const BFDataFieldProperties s_FldProp_MaxPrevYrBalPctSysCalc;
   extern const BFDataFieldProperties s_FldProp_UseBrokerMF;
   extern const BFDataFieldProperties s_FldProp_AmountRedEff;
   extern const BFDataFieldProperties s_FldProp_StopAMSRebalancing;
   extern const BFDataFieldProperties s_FldProp_BasedOnBA;
   extern const BFDataFieldProperties s_FldProp_BasedOnBC;
   extern const BFDataFieldProperties s_FldProp_BasedOnBH;
   extern const BFDataFieldProperties s_FldProp_ManualDividendHeading;
   extern const BFDataFieldProperties s_FldProp_FromFundClassAcctTo;
   extern const BFDataFieldProperties s_FldProp_ManualDividendPayType;
   extern const BFDataFieldProperties s_FldProp_SummitAccountsLowerBound;
   extern const BFDataFieldProperties s_FldProp_SummitAccountsUpperBound;
   extern const BFDataFieldProperties s_FldProp_MoneyMktFund;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboDefault;
   extern const BFDataFieldProperties s_FldProp_RRIFFromAlloc;
   extern const BFDataFieldProperties s_FldProp_RRIFToAlloc;
   extern const BFDataFieldProperties s_FldProp_AllowManDiv;
   extern const BFDataFieldProperties s_FldProp_SetRTAsDefault;
   extern const BFDataFieldProperties s_FldProp_InvestPhilosophyCode;
   extern const BFDataFieldProperties s_FldProp_SAMFinHealthCode;
   extern const BFDataFieldProperties s_FldProp_InvestPhilosophyDesc;
   extern const BFDataFieldProperties s_FldProp_SAMFinHealthDesc;
   extern const BFDataFieldProperties s_FldProp_CloneBankInstructions;
   extern const BFDataFieldProperties s_FldProp_IsRRIFAccount;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboTransaction;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboDefaultNoRRIF;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboPendingTransaction;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboTrade;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboClient;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboFund;
   extern const BFDataFieldProperties s_FldProp_BankInstrComboSettlement;
   extern const BFDataFieldProperties s_FldProp_ToAllocations;
   extern const BFDataFieldProperties s_FldProp_ACHTrailerFee;
   extern const BFDataFieldProperties s_FldProp_ACHCommission;
   extern const BFDataFieldProperties s_FldProp_ACHDividend;
   extern const BFDataFieldProperties s_FldProp_PayInstructAvail;
   extern const BFDataFieldProperties s_FldProp_PayFor;
   extern const BFDataFieldProperties s_FldProp_FeeLevel;
   extern const BFDataFieldProperties s_FldProp_BrokerFeaturesSearchCriteria;
   extern const BFDataFieldProperties s_FldProp_BrokerFeaturesSearchPayToEntityUsing;
   extern const BFDataFieldProperties s_FldProp_BrokerFeaturesSearchPaymentInstructionsUsing;
   extern const BFDataFieldProperties s_FldProp_BrokerFeaturesSearchLabels;
   extern const BFDataFieldProperties s_FldProp_SearchLabel1;
   extern const BFDataFieldProperties s_FldProp_SearchLabel2;
   extern const BFDataFieldProperties s_FldProp_SearchLabel3;
   extern const BFDataFieldProperties s_FldProp_FillSearchType;
   extern const BFDataFieldProperties s_FldProp_PayTypeMethod;
   extern const BFDataFieldProperties s_FldProp_MainSearchLabels;
   extern const BFDataFieldProperties s_FldProp_MainSearchCriteria;
   extern const BFDataFieldProperties s_FldProp_SearchUsing;
   extern const BFDataFieldProperties s_FldProp_DefaultFeeCode;
   extern const BFDataFieldProperties s_FldProp_SearchFieldCriteria1;
   extern const BFDataFieldProperties s_FldProp_SearchFieldCriteria2;
   extern const BFDataFieldProperties s_FldProp_SearchFieldCriteria3;
   extern const BFDataFieldProperties s_FldProp_HowManySearchCriterias;
   extern const BFDataFieldProperties s_FldProp_BrokerFeaturesSearchCriteriaNo;
   extern const BFDataFieldProperties s_FldProp_MainSearchCriteriaNo;
   extern const BFDataFieldProperties s_FldProp_BrokerFeaturesSearchBankingUsing;
   extern const BFDataFieldProperties s_FldProp_DSTC0258_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0258_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0258_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_PaymentFor;
   extern const BFDataFieldProperties s_FldProp_PayToEntity;
   extern const BFDataFieldProperties s_FldProp_DSTC0259_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0259_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0259_VW;
   extern const BFDataFieldProperties s_FldProp_PayToEntityListHeading;
   extern const BFDataFieldProperties s_FldProp_PayToEntityNoAll;
   extern const BFDataFieldProperties s_FldProp_BrokerPaymentFor;
   extern const BFDataFieldProperties s_FldProp_DSTC0256_REQ;
   extern const BFDataFieldProperties s_FldProp_DuplicateCheck;
   extern const BFDataFieldProperties s_FldProp_DSTC0256_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0256_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_BankCharge;
   extern const BFDataFieldProperties s_FldProp_CurrencyOption;
   extern const BFDataFieldProperties s_FldProp_UseEntityAddress;
   extern const BFDataFieldProperties s_FldProp_BrokerBranchSalesRepPaymentFor;
   extern const BFDataFieldProperties s_FldProp_PaymentInstructionsListHeading;
   extern const BFDataFieldProperties s_FldProp_BrokerFeaturesSearchHistoricalInfoUsing;
   extern const BFDataFieldProperties s_FldProp_DSTC0257_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0257_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0257_VW;
   extern const BFDataFieldProperties s_FldProp_PaymentInstructionsPayType;
   extern const BFDataFieldProperties s_FldProp_BAFFFileProcessor;
   extern const BFDataFieldProperties s_FldProp_PayInstructionsId;
   extern const BFDataFieldProperties s_FldProp_PayInstrTrailer;
   extern const BFDataFieldProperties s_FldProp_PayInstrComm;
   extern const BFDataFieldProperties s_FldProp_GrowthPercent;
   extern const BFDataFieldProperties s_FldProp_IncomePercent;
   extern const BFDataFieldProperties s_FldProp_SafetyPercent;
   extern const BFDataFieldProperties s_FldProp_RepNo;
   extern const BFDataFieldProperties s_FldProp_AcctModDate;
   BFDataField* createField_19( const BFFieldId id )
   {
      BFDataField* pField = NULL;
      switch( id.getId() )
      {
         case 40003800: pField = new BFTextField_60( Nationality, &s_FldProp_Nationality ); break; 
         case 40003805: pField = new BFDecimalField( BrokerAMSVer, &s_FldProp_BrokerAMSVer ); break; 
         case 40003806: pField = new BFNumericField( BrokerAMSRId, &s_FldProp_BrokerAMSRId ); break; 
         case 40003811: pField = new BFTextField_60( AMSName, &s_FldProp_AMSName ); break; 
         case 40003815: pField = new BFDecimalField( RebalPrcnt, &s_FldProp_RebalPrcnt ); break; 
         case 40003816: pField = new BFTextField_60( AMSCurrency, &s_FldProp_AMSCurrency ); break; 
         case 40003817: pField = new BFTextField_60( BrokerAMSList, &s_FldProp_BrokerAMSList ); break; 
         case 40003818: pField = new BFTextField_1( FeeExists, &s_FldProp_FeeExists ); break; 
         case 40003820: pField = new BFTextField_1( EarlyPWFeeElig, &s_FldProp_EarlyPWFeeElig ); break; 
         case 40003821: pField = new BFTextField_1( ShortTermTRFeeElig, &s_FldProp_ShortTermTRFeeElig ); break; 
         case 40003822: pField = new BFTextField_60( NomineeOwnFirstN, &s_FldProp_NomineeOwnFirstN ); break; 
         case 40003823: pField = new BFTextField_60( NomineeOwnLastN, &s_FldProp_NomineeOwnLastN ); break; 
         case 40003824: pField = new BFTextField_1( ChargesERSTTRFee, &s_FldProp_ChargesERSTTRFee ); break; 
         case 40003825: pField = new BFTextField_1( ChargeERSTTRFee, &s_FldProp_ChargeERSTTRFee ); break; 
         case 40003826: pField = new BFTextField_1( ChargeERFee, &s_FldProp_ChargeERFee ); break; 
         case 40003827: pField = new BFTextField_1( ChargeSTTRFee, &s_FldProp_ChargeSTTRFee ); break; 
         case 40003828: pField = new BFTextField_60( ShGroupName, &s_FldProp_ShGroupName ); break; 
         case 40003830: pField = new BFTextField_60( ShGroupApplicable, &s_FldProp_ShGroupApplicable ); break; 
         case 40003831: pField = new BFTextField_60( BrokerApplicable, &s_FldProp_BrokerApplicable ); break; 
         case 40003832: pField = new BFTextField_60( BranchApplicable, &s_FldProp_BranchApplicable ); break; 
         case 40003833: pField = new BFTextField_60( SalesrepApplicable, &s_FldProp_SalesrepApplicable ); break; 
         case 40003835: pField = new BFTextField_60( FundClassApplicable, &s_FldProp_FundClassApplicable ); break; 
         case 40003836: pField = new BFTextField_60( FromFundClassApplicable, &s_FldProp_FromFundClassApplicable ); break; 
         case 40003837: pField = new BFTextField_60( FeeTypeList, &s_FldProp_FeeTypeList ); break; 
         case 40003838: pField = new BFTextField_60( BaseOnList, &s_FldProp_BaseOnList ); break; 
         case 40003839: pField = new BFTextField_60( HowPaidList, &s_FldProp_HowPaidList ); break; 
         case 40003840: pField = new BFTextField_60( MinMaxFreqList, &s_FldProp_MinMaxFreqList ); break; 
         case 40003841: pField = new BFTextField_60( OverrideList, &s_FldProp_OverrideList ); break; 
         case 40003842: pField = new BFTextField_60( OnPWApplicable, &s_FldProp_OnPWApplicable ); break; 
         case 40003843: pField = new BFTextField_60( OnFWApplicable, &s_FldProp_OnFWApplicable ); break; 
         case 40003844: pField = new BFTextField_60( FeeSetupLevel, &s_FldProp_FeeSetupLevel ); break; 
         case 40003849: pField = new BFTextField_60( FeeRecordOverlapCheck, &s_FldProp_FeeRecordOverlapCheck ); break; 
         case 40003850: pField = new BFTextField_10( MailingByFundGroup, &s_FldProp_MailingByFundGroup ); break; 
         case 40003851: pField = new BFTextField_1( FamilyCodeApplicable, &s_FldProp_FamilyCodeApplicable ); break; 
         case 40003852: pField = new BFTextField_60( TradeAMSCode, &s_FldProp_TradeAMSCode ); break; 
         case 40003853: pField = new BFTextField_1( TxnLevelSec, &s_FldProp_TxnLevelSec ); break; 
         case 40003854: pField = new BFTextField_60( DuplicateExist, &s_FldProp_DuplicateExist ); break; 
         case 40003855: pField = new BFTextField_60( ExchangeOutFromFund, &s_FldProp_ExchangeOutFromFund ); break; 
         case 40003856: pField = new BFTextField_60( AcctMailingOverrideHeading, &s_FldProp_AcctMailingOverrideHeading ); break; 
         case 40003857: pField = new BFTextField_60( BrokerAddressHeadingSet, &s_FldProp_BrokerAddressHeadingSet ); break; 
         case 40003862: pField = new BFTextField_60( MiscCode, &s_FldProp_MiscCode ); break; 
         case 40003863: pField = new BFTextField_60( MiscDesc, &s_FldProp_MiscDesc ); break; 
         case 40003864: pField = new BFTextField_60( MiscCategory, &s_FldProp_MiscCategory ); break; 
         case 40003866: pField = new BFTextField_1( OnHold, &s_FldProp_OnHold ); break; 
         case 40003867: pField = new BFTextField_2( Mail, &s_FldProp_Mail ); break; 
         case 40003869: pField = new BFTextField_2( Fax, &s_FldProp_Fax ); break; 
         case 40003870: pField = new BFTextField_2( CD, &s_FldProp_CD ); break; 
         case 40003871: pField = new BFTextField_2( LEmail, &s_FldProp_LEmail ); break; 
         case 40003872: pField = new BFDecimalField( MailRecId, &s_FldProp_MailRecId ); break; 
         case 40003873: pField = new BFDecimalField( EmailRecId, &s_FldProp_EmailRecId ); break; 
         case 40003874: pField = new BFDecimalField( FaxRecId, &s_FldProp_FaxRecId ); break; 
         case 40003875: pField = new BFDecimalField( CDRecId, &s_FldProp_CDRecId ); break; 
         case 40003876: pField = new BFDecimalField( MailVersion, &s_FldProp_MailVersion ); break; 
         case 40003877: pField = new BFDecimalField( EmailVersion, &s_FldProp_EmailVersion ); break; 
         case 40003878: pField = new BFDecimalField( FaxVersion, &s_FldProp_FaxVersion ); break; 
         case 40003879: pField = new BFDecimalField( CDVersion, &s_FldProp_CDVersion ); break; 
         case 40003881: pField = new BFTextField_2( ATFeeApply, &s_FldProp_ATFeeApply ); break; 
         case 40003882: pField = new BFDecimalField( FeeOverrideType, &s_FldProp_FeeOverrideType ); break; 
         case 40003883: pField = new BFTextField_60( ProfileCodeDflt, &s_FldProp_ProfileCodeDflt ); break; 
         case 40003884: pField = new BFTextField_60( MgmtFeePayOptDflt, &s_FldProp_MgmtFeePayOptDflt ); break; 
         case 40003886: pField = new BFTextField_60( MailingOption, &s_FldProp_MailingOption ); break; 
         case 40003887: pField = new BFTextField_60( MailConsent, &s_FldProp_MailConsent ); break; 
         case 40003888: pField = new BFDecimalField( MinPrevYrBalPctSysCalc, &s_FldProp_MinPrevYrBalPctSysCalc ); break; 
         case 40003889: pField = new BFDecimalField( MaxPrevYrBalPctSysCalc, &s_FldProp_MaxPrevYrBalPctSysCalc ); break; 
         case 40003890: pField = new BFTextField_2( UseBrokerMF, &s_FldProp_UseBrokerMF ); break; 
         case 40003892: pField = new BFTextField<50>( AmountRedEff, &s_FldProp_AmountRedEff ); break; 
         case 40003894: pField = new BFTextField_1( StopAMSRebalancing, &s_FldProp_StopAMSRebalancing ); break; 
         case 40003895: pField = new BFTextField_60( BasedOnBA, &s_FldProp_BasedOnBA ); break; 
         case 40003896: pField = new BFTextField_60( BasedOnBC, &s_FldProp_BasedOnBC ); break; 
         case 40003897: pField = new BFTextField_60( BasedOnBH, &s_FldProp_BasedOnBH ); break; 
         case 40003898: pField = new BFTextField_60( ManualDividendHeading, &s_FldProp_ManualDividendHeading ); break; 
         case 40003900: pField = new BFTextField<20>( FromFundClassAcctTo, &s_FldProp_FromFundClassAcctTo ); break; 
         case 40003904: pField = new BFTextField_60( ManualDividendPayType, &s_FldProp_ManualDividendPayType ); break; 
         case 40003905: pField = new BFTextField<100>( SummitAccountsLowerBound, &s_FldProp_SummitAccountsLowerBound ); break; 
         case 40003906: pField = new BFTextField<100>( SummitAccountsUpperBound, &s_FldProp_SummitAccountsUpperBound ); break; 
         case 40003907: pField = new BFTextField_1( MoneyMktFund, &s_FldProp_MoneyMktFund ); break; 
         case 40003909: pField = new BFTextField_60( BankInstrComboDefault, &s_FldProp_BankInstrComboDefault ); break; 
         case 40003910: pField = new BFTextField_2( RRIFFromAlloc, &s_FldProp_RRIFFromAlloc ); break; 
         case 40003911: pField = new BFTextField_2( RRIFToAlloc, &s_FldProp_RRIFToAlloc ); break; 
         case 40003912: pField = new BFTextField_2( AllowManDiv, &s_FldProp_AllowManDiv ); break; 
         case 40003914: pField = new BFTextField_2( SetRTAsDefault, &s_FldProp_SetRTAsDefault ); break; 
         case 40003915: pField = new BFTextField_60( InvestPhilosophyCode, &s_FldProp_InvestPhilosophyCode ); break; 
         case 40003916: pField = new BFTextField_60( SAMFinHealthCode, &s_FldProp_SAMFinHealthCode ); break; 
         case 40003917: pField = new BFTextField_60( InvestPhilosophyDesc, &s_FldProp_InvestPhilosophyDesc ); break; 
         case 40003918: pField = new BFTextField_60( SAMFinHealthDesc, &s_FldProp_SAMFinHealthDesc ); break; 
         case 40003920: pField = new BFTextField_1( CloneBankInstructions, &s_FldProp_CloneBankInstructions ); break; 
         case 40003922: pField = new BFTextField_1( IsRRIFAccount, &s_FldProp_IsRRIFAccount ); break; 
         case 40003923: pField = new BFTextField_60( BankInstrComboTransaction, &s_FldProp_BankInstrComboTransaction ); break; 
         case 40003924: pField = new BFTextField_60( BankInstrComboDefaultNoRRIF, &s_FldProp_BankInstrComboDefaultNoRRIF ); break; 
         case 40003925: pField = new BFTextField_60( BankInstrComboPendingTransaction, &s_FldProp_BankInstrComboPendingTransaction ); break; 
         case 40003926: pField = new BFTextField_60( BankInstrComboTrade, &s_FldProp_BankInstrComboTrade ); break; 
         case 40003927: pField = new BFTextField_60( BankInstrComboClient, &s_FldProp_BankInstrComboClient ); break; 
         case 40003929: pField = new BFTextField_60( BankInstrComboFund, &s_FldProp_BankInstrComboFund ); break; 
         case 40003930: pField = new BFTextField_60( BankInstrComboSettlement, &s_FldProp_BankInstrComboSettlement ); break; 
         case 40003932: pField = new BFTextField_2( ToAllocations, &s_FldProp_ToAllocations ); break; 
         case 40003933: pField = new BFTextField_2( ACHTrailerFee, &s_FldProp_ACHTrailerFee ); break; 
         case 40003934: pField = new BFTextField_2( ACHCommission, &s_FldProp_ACHCommission ); break; 
         case 40003935: pField = new BFTextField_2( ACHDividend, &s_FldProp_ACHDividend ); break; 
         case 40003936: pField = new BFTextField_2( PayInstructAvail, &s_FldProp_PayInstructAvail ); break; 
         case 40003937: pField = new BFTextField_60( PayFor, &s_FldProp_PayFor ); break; 
         case 40003938: pField = new BFTextField_60( FeeLevel, &s_FldProp_FeeLevel ); break; 
         case 40003939: pField = new BFTextField_60( BrokerFeaturesSearchCriteria, &s_FldProp_BrokerFeaturesSearchCriteria ); break; 
         case 40003940: pField = new BFTextField_60( BrokerFeaturesSearchPayToEntityUsing, &s_FldProp_BrokerFeaturesSearchPayToEntityUsing ); break; 
         case 40003941: pField = new BFTextField_60( BrokerFeaturesSearchPaymentInstructionsUsing, &s_FldProp_BrokerFeaturesSearchPaymentInstructionsUsing ); break; 
         case 40003942: pField = new BFTextField_60( BrokerFeaturesSearchLabels, &s_FldProp_BrokerFeaturesSearchLabels ); break; 
         case 40003944: pField = new BFTextField_60( SearchLabel1, &s_FldProp_SearchLabel1 ); break; 
         case 40003946: pField = new BFTextField_60( SearchLabel2, &s_FldProp_SearchLabel2 ); break; 
         case 40003947: pField = new BFTextField_60( SearchLabel3, &s_FldProp_SearchLabel3 ); break; 
         case 40003948: pField = new BFTextField_60( FillSearchType, &s_FldProp_FillSearchType ); break; 
         case 40003949: pField = new BFTextField_60( PayTypeMethod, &s_FldProp_PayTypeMethod ); break; 
         case 40003950: pField = new BFTextField_60( MainSearchLabels, &s_FldProp_MainSearchLabels ); break; 
         case 40003951: pField = new BFTextField_60( MainSearchCriteria, &s_FldProp_MainSearchCriteria ); break; 
         case 40003952: pField = new BFTextField_60( SearchUsing, &s_FldProp_SearchUsing ); break; 
         case 40003953: pField = new BFTextField_60( DefaultFeeCode, &s_FldProp_DefaultFeeCode ); break; 
         case 40003955: pField = new BFTextField_60( SearchFieldCriteria1, &s_FldProp_SearchFieldCriteria1 ); break; 
         case 40003956: pField = new BFTextField_60( SearchFieldCriteria2, &s_FldProp_SearchFieldCriteria2 ); break; 
         case 40003957: pField = new BFTextField_60( SearchFieldCriteria3, &s_FldProp_SearchFieldCriteria3 ); break; 
         case 40003958: pField = new BFTextField_1( HowManySearchCriterias, &s_FldProp_HowManySearchCriterias ); break; 
         case 40003959: pField = new BFTextField_60( BrokerFeaturesSearchCriteriaNo, &s_FldProp_BrokerFeaturesSearchCriteriaNo ); break; 
         case 40003960: pField = new BFTextField_60( MainSearchCriteriaNo, &s_FldProp_MainSearchCriteriaNo ); break; 
         case 40003961: pField = new BFTextField_60( BrokerFeaturesSearchBankingUsing, &s_FldProp_BrokerFeaturesSearchBankingUsing ); break; 
         case 40003965: pField = new BFTextField_60( PaymentFor, &s_FldProp_PaymentFor ); break; 
         case 40003966: pField = new BFTextField_60( PayToEntity, &s_FldProp_PayToEntity ); break; 
         case 40003970: pField = new BFTextField_60( PayToEntityListHeading, &s_FldProp_PayToEntityListHeading ); break; 
         case 40003972: pField = new BFTextField_60( PayToEntityNoAll, &s_FldProp_PayToEntityNoAll ); break; 
         case 40003973: pField = new BFTextField_60( BrokerPaymentFor, &s_FldProp_BrokerPaymentFor ); break; 
         case 40003976: pField = new BFTextField_1( DuplicateCheck, &s_FldProp_DuplicateCheck ); break; 
         case 40003979: pField = new BFTextField_1( BankCharge, &s_FldProp_BankCharge ); break; 
         case 40003980: pField = new BFTextField_60( CurrencyOption, &s_FldProp_CurrencyOption ); break; 
         case 40003981: pField = new BFTextField_1( UseEntityAddress, &s_FldProp_UseEntityAddress ); break; 
         case 40003982: pField = new BFTextField_60( BrokerBranchSalesRepPaymentFor, &s_FldProp_BrokerBranchSalesRepPaymentFor ); break; 
         case 40003983: pField = new BFTextField_60( PaymentInstructionsListHeading, &s_FldProp_PaymentInstructionsListHeading ); break; 
         case 40003984: pField = new BFTextField_60( BrokerFeaturesSearchHistoricalInfoUsing, &s_FldProp_BrokerFeaturesSearchHistoricalInfoUsing ); break; 
         case 40003988: pField = new BFTextField_60( PaymentInstructionsPayType, &s_FldProp_PaymentInstructionsPayType ); break; 
         case 40003989: pField = new BFTextField_60( BAFFFileProcessor, &s_FldProp_BAFFFileProcessor ); break; 
         case 40003990: pField = new BFDecimalField( PayInstructionsId, &s_FldProp_PayInstructionsId ); break; 
         case 40003991: pField = new BFTextField_1( PayInstrTrailer, &s_FldProp_PayInstrTrailer ); break; 
         case 40003992: pField = new BFTextField_1( PayInstrComm, &s_FldProp_PayInstrComm ); break; 
         case 40003993: pField = new BFDecimalField( GrowthPercent, &s_FldProp_GrowthPercent ); break; 
         case 40003994: pField = new BFDecimalField( IncomePercent, &s_FldProp_IncomePercent ); break; 
         case 40003995: pField = new BFDecimalField( SafetyPercent, &s_FldProp_SafetyPercent ); break; 
         case 40003996: pField = new BFNumericField( RepNo, &s_FldProp_RepNo ); break; 
      }
      return pField;
   }
}
