// BFDataImpl header file for DataSet DSTC0305.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId FeeModelCode;
   extern const BFNumericFieldId FeeModelRecid;
   extern const BFTextFieldId FeeModelDesc;
   extern const BFDateFieldId EffectiveDate;
   extern const BFDateFieldId StopDate;
   extern const BFDateFieldId ProcessDate;
   extern const BFTextFieldId Username;
   extern const BFDateFieldId ModDate;
   extern const BFTextFieldId ModUser;
   extern const BFDecimalFieldId Version;
   extern const BFTextFieldId CodeIsInUse;
   extern const BFTextFieldId FeeModelType;
   extern const BFTextFieldId HoldingCompCode;
   extern const BFTextFieldId HoldingCompName;
   extern const BFTextFieldId GBCD;
   extern const BFTextFieldId CalcCurrency;
   extern const BFTextFieldId CalcRateType;
   extern const BFTextFieldId ModelAggregationMethod;
   extern const BFTextFieldId EligibleFundBy;
   extern const BFTextFieldId Program;
   extern const BFTextFieldId ScheduleFreqID;
   extern const BFDateFieldId ShrAcctDeff;
   extern const BFTextFieldId FeeModelFundGroup;
   extern const BFNumericFieldId FundSponsorRID;
   extern const BFNumericFieldId HoldEntRID;
   extern const BFNumericFieldId FundSponsorVer;
   extern const BFTextFieldId ShrAcctFeeExist;
   extern const BFTextFieldId FeeParmExist;
   extern const BFDateFieldId LastProcDate;
   extern const BFIntegerFieldId FullMoneyOutApplicable;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_FeeModelCode;
   extern const BFDataFieldProperties s_FldProp_FeeModelRecid;
   extern const BFDataFieldProperties s_FldProp_FeeModelDesc;
   extern const BFDataFieldProperties s_FldProp_EffectiveDate;
   extern const BFDataFieldProperties s_FldProp_StopDate;
   extern const BFDataFieldProperties s_FldProp_ProcessDate;
   extern const BFDataFieldProperties s_FldProp_Username;
   extern const BFDataFieldProperties s_FldProp_ModDate;
   extern const BFDataFieldProperties s_FldProp_ModUser;
   extern const BFDataFieldProperties s_FldProp_Version;
   extern const BFDataFieldProperties s_FldProp_CodeIsInUse;
   extern const BFDataFieldProperties s_FldProp_FeeModelType;
   extern const BFDataFieldProperties s_FldProp_HoldingCompCode;
   extern const BFDataFieldProperties s_FldProp_HoldingCompName;
   extern const BFDataFieldProperties s_FldProp_GBCD;
   extern const BFDataFieldProperties s_FldProp_CalcCurrency;
   extern const BFDataFieldProperties s_FldProp_CalcRateType;
   extern const BFDataFieldProperties s_FldProp_ModelAggregationMethod;
   extern const BFDataFieldProperties s_FldProp_EligibleFundBy;
   extern const BFDataFieldProperties s_FldProp_Program;
   extern const BFDataFieldProperties s_FldProp_ScheduleFreqID;
   extern const BFDataFieldProperties s_FldProp_ShrAcctDeff;
   extern const BFDataFieldProperties s_FldProp_FeeModelFundGroup;
   extern const BFDataFieldProperties s_FldProp_FundSponsorRID;
   extern const BFDataFieldProperties s_FldProp_HoldEntRID;
   extern const BFDataFieldProperties s_FldProp_FundSponsorVer;
   extern const BFDataFieldProperties s_FldProp_ShrAcctFeeExist;
   extern const BFDataFieldProperties s_FldProp_FeeParmExist;
   extern const BFDataFieldProperties s_FldProp_LastProcDate;
   extern const BFDataFieldProperties s_FldProp_FullMoneyOutApplicable;
}


class dsi_DSTC0305_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0305_VWRepeat_Record();
   virtual ~dsi_DSTC0305_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[30];
   // Field Declarations
   BFTextField_60 FeeModelCode_;
   BFNumericField FeeModelRecid_;
   BFTextField<80> FeeModelDesc_;
   BFDateField EffectiveDate_;
   BFDateField StopDate_;
   BFDateField ProcessDate_;
   BFTextField_60 Username_;
   BFDateField ModDate_;
   BFTextField_60 ModUser_;
   BFDecimalField Version_;
   BFTextField<3> CodeIsInUse_;
   BFTextField_60 FeeModelType_;
   BFTextField<20> HoldingCompCode_;
   BFTextField<80> HoldingCompName_;
   BFTextField_1 GBCD_;
   BFTextField_10 CalcCurrency_;
   BFTextField_10 CalcRateType_;
   BFTextField<20> ModelAggregationMethod_;
   BFTextField_60 EligibleFundBy_;
   BFTextField<50> Program_;
   BFTextField<20> ScheduleFreqID_;
   BFDateField ShrAcctDeff_;
   BFTextField_60 FeeModelFundGroup_;
   BFNumericField FundSponsorRID_;
   BFNumericField HoldEntRID_;
   BFNumericField FundSponsorVer_;
   BFTextField_10 ShrAcctFeeExist_;
   BFTextField_10 FeeParmExist_;
   BFDateField LastProcDate_;
   BFIntegerField FullMoneyOutApplicable_;

};
