// BFDataImpl header file for DataSet DSTCF164.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId AcqFeeType;
   extern const BFDecimalFieldId AcqRate;
   extern const BFTextFieldId RedemFeeType;
   extern const BFDecimalFieldId RedemFee;
   extern const BFTextFieldId RedemFeeCurrency;
   extern const BFTextFieldId LoadType;
   extern const BFTextFieldId FundCurrency;
   extern const BFNumericFieldId ClassIndex;
   extern const BFTextFieldId ClassCode;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_AcqFeeType;
   extern const BFDataFieldProperties s_FldProp_AcqRate;
   extern const BFDataFieldProperties s_FldProp_RedemFeeType;
   extern const BFDataFieldProperties s_FldProp_RedemFee;
   extern const BFDataFieldProperties s_FldProp_RedemFeeCurrency;
   extern const BFDataFieldProperties s_FldProp_LoadType;
   extern const BFDataFieldProperties s_FldProp_FundCurrency;
   extern const BFDataFieldProperties s_FldProp_ClassIndex;
   extern const BFDataFieldProperties s_FldProp_ClassCode;
}


class dsi_DSTCF164_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTCF164_VWRepeat_Record();
   virtual ~dsi_DSTCF164_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[9];
   // Field Declarations
   BFTextField_1 AcqFeeType_;
   BFDecimalField AcqRate_;
   BFTextField_60 RedemFeeType_;
   BFDecimalField RedemFee_;
   BFTextField_60 RedemFeeCurrency_;
   BFTextField_60 LoadType_;
   BFTextField_60 FundCurrency_;
   BFNumericField ClassIndex_;
   BFTextField<120> ClassCode_;

};
