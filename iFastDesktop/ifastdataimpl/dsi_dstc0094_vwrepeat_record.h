// BFDataImpl header file for DataSet DSTC0094.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId FundCode;
   extern const BFTextFieldId ClassCode;
   extern const BFDecimalFieldId FundPercent;
   extern const BFTextFieldId Currency;
   extern const BFDecimalFieldId UnitValue;
   extern const BFDecimalFieldId FundUnits;
   extern const BFDecimalFieldId FundAmt;
   extern const BFTextFieldId TaxTypeDesc;
   extern const BFDecimalFieldId FundProdPercent;
   extern const BFDecimalFieldId FundProdUnits;
   extern const BFDecimalFieldId FundProdAmt;
   extern const BFDateFieldId ValueAsAt;
   extern const BFTextFieldId TaxType;
   extern const BFDecimalFieldId CurrTotal;
   extern const BFTextFieldId FundGroup;
   extern const BFDecimalFieldId FundUnsettUnits;
   extern const BFDecimalFieldId FundUnsettAmt;
   extern const BFDecimalFieldId FundProdUnsettUnits;
   extern const BFDecimalFieldId FundProdUnsettAmt;
   extern const BFDecimalFieldId FundTotalUnits;
   extern const BFDecimalFieldId FundTotalAmt;
   extern const BFDecimalFieldId FundProdTotalUnits;
   extern const BFDecimalFieldId FundProdTotalAmt;
   extern const BFDecimalFieldId CurrSettValue;
   extern const BFDecimalFieldId CurrUnsettValue;
   extern const BFDateFieldId LastNR;
   extern const BFDateFieldId NextNR;
   extern const BFDecimalFieldId PendingTradeTotal;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_FundCode;
   extern const BFDataFieldProperties s_FldProp_ClassCode;
   extern const BFDataFieldProperties s_FldProp_FundPercent;
   extern const BFDataFieldProperties s_FldProp_Currency;
   extern const BFDataFieldProperties s_FldProp_UnitValue;
   extern const BFDataFieldProperties s_FldProp_FundUnits;
   extern const BFDataFieldProperties s_FldProp_FundAmt;
   extern const BFDataFieldProperties s_FldProp_TaxTypeDesc;
   extern const BFDataFieldProperties s_FldProp_FundProdPercent;
   extern const BFDataFieldProperties s_FldProp_FundProdUnits;
   extern const BFDataFieldProperties s_FldProp_FundProdAmt;
   extern const BFDataFieldProperties s_FldProp_ValueAsAt;
   extern const BFDataFieldProperties s_FldProp_TaxType;
   extern const BFDataFieldProperties s_FldProp_CurrTotal;
   extern const BFDataFieldProperties s_FldProp_FundGroup;
   extern const BFDataFieldProperties s_FldProp_FundUnsettUnits;
   extern const BFDataFieldProperties s_FldProp_FundUnsettAmt;
   extern const BFDataFieldProperties s_FldProp_FundProdUnsettUnits;
   extern const BFDataFieldProperties s_FldProp_FundProdUnsettAmt;
   extern const BFDataFieldProperties s_FldProp_FundTotalUnits;
   extern const BFDataFieldProperties s_FldProp_FundTotalAmt;
   extern const BFDataFieldProperties s_FldProp_FundProdTotalUnits;
   extern const BFDataFieldProperties s_FldProp_FundProdTotalAmt;
   extern const BFDataFieldProperties s_FldProp_CurrSettValue;
   extern const BFDataFieldProperties s_FldProp_CurrUnsettValue;
   extern const BFDataFieldProperties s_FldProp_LastNR;
   extern const BFDataFieldProperties s_FldProp_NextNR;
   extern const BFDataFieldProperties s_FldProp_PendingTradeTotal;
}


class dsi_DSTC0094_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0094_VWRepeat_Record();
   virtual ~dsi_DSTC0094_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[28];
   // Field Declarations
   BFTextField<200> FundCode_;
   BFTextField<120> ClassCode_;
   BFDecimalField FundPercent_;
   BFTextField<200> Currency_;
   BFDecimalField UnitValue_;
   BFDecimalField FundUnits_;
   BFDecimalField FundAmt_;
   BFTextField_60 TaxTypeDesc_;
   BFDecimalField FundProdPercent_;
   BFDecimalField FundProdUnits_;
   BFDecimalField FundProdAmt_;
   BFDateField ValueAsAt_;
   BFTextField_60 TaxType_;
   BFDecimalField CurrTotal_;
   BFTextField_60 FundGroup_;
   BFDecimalField FundUnsettUnits_;
   BFDecimalField FundUnsettAmt_;
   BFDecimalField FundProdUnsettUnits_;
   BFDecimalField FundProdUnsettAmt_;
   BFDecimalField FundTotalUnits_;
   BFDecimalField FundTotalAmt_;
   BFDecimalField FundProdTotalUnits_;
   BFDecimalField FundProdTotalAmt_;
   BFDecimalField CurrSettValue_;
   BFDecimalField CurrUnsettValue_;
   BFDateField LastNR_;
   BFDateField NextNR_;
   BFDecimalField PendingTradeTotal_;

};
