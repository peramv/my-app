// BFDataImpl implementation file for DataSet DSTC0173.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0173_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0173_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0173_VWRepeat_Record() { return new dsi_DSTC0173_VWRepeat_Record; }

dsi_DSTC0173_VWRepeat_Record::dsi_DSTC0173_VWRepeat_Record()
: BFDataImpl( 40002728 )
, ContribYear_( ifds::ContribYear, &ifds::s_FldProp_ContribYear )
, First60days_( ifds::First60days, &ifds::s_FldProp_First60days )
, Remaining_( ifds::Remaining, &ifds::s_FldProp_Remaining )
{
   cFields_ = 3;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0173_VWRepeat_Record::~dsi_DSTC0173_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0173_VWRepeat_Record::clone()
{
   dsi_DSTC0173_VWRepeat_Record* p = new dsi_DSTC0173_VWRepeat_Record;
   p->ContribYear_ = ContribYear_;
   p->First60days_ = First60days_;
   p->Remaining_ = Remaining_;
   return(p);
}

BFDataField* dsi_DSTC0173_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40002719: return ( &ContribYear_ ); break; // ContribYear
      case 40002720: return ( &First60days_ ); break; // First60days
      case 40002721: return ( &Remaining_ ); break; // Remaining
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0173_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0173_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0173_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 3 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &ContribYear_; break;
            case 1: aFlds_[1] = &First60days_; break;
            case 2: aFlds_[2] = &Remaining_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0173_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0173_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0173_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 17 );
}

unsigned long dsi_DSTC0173_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 40 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0173_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0173_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0173_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40002719: return( true );
      case 40002720: return( true );
      case 40002721: return( true );
   }
   return false;
}

