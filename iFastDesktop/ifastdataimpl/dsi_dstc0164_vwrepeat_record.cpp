// BFDataImpl implementation file for DataSet DSTC0164.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0164_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0164_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0164_VWRepeat_Record() { return new dsi_DSTC0164_VWRepeat_Record; }

dsi_DSTC0164_VWRepeat_Record::dsi_DSTC0164_VWRepeat_Record()
: BFDataImpl( 40002645, 40002647 )
, FundCode_( ifds::FundCode, &ifds::s_FldProp_FundCode )
, FundType_( ifds::FundType, &ifds::s_FldProp_FundType )
, PriceAtClass_( ifds::PriceAtClass, &ifds::s_FldProp_PriceAtClass )
, EffectiveDate_( ifds::EffectiveDate, &ifds::s_FldProp_EffectiveDate )
, StopDate_( ifds::StopDate, &ifds::s_FldProp_StopDate )
, ClassStartIdx_( ifds::ClassStartIdx, &ifds::s_FldProp_ClassStartIdx )
, ClassEndIdx_( ifds::ClassEndIdx, &ifds::s_FldProp_ClassEndIdx )
, EShortName_( ifds::EShortName, &ifds::s_FldProp_EShortName )
, OthShortName_( ifds::OthShortName, &ifds::s_FldProp_OthShortName )
, RepeatCount_( ifds::RepeatCount, &ifds::s_FldProp_RepeatCount )
{
   cFields_ = 10;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0164_VWRepeat_Record::~dsi_DSTC0164_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0164_VWRepeat_Record::clone()
{
   dsi_DSTC0164_VWRepeat_Record* p = new dsi_DSTC0164_VWRepeat_Record;
   p->FundCode_ = FundCode_;
   p->FundType_ = FundType_;
   p->PriceAtClass_ = PriceAtClass_;
   p->EffectiveDate_ = EffectiveDate_;
   p->StopDate_ = StopDate_;
   p->ClassStartIdx_ = ClassStartIdx_;
   p->ClassEndIdx_ = ClassEndIdx_;
   p->EShortName_ = EShortName_;
   p->OthShortName_ = OthShortName_;
   p->RepeatCount_ = RepeatCount_;
   return(p);
}

BFDataField* dsi_DSTC0164_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40000049: return ( &FundCode_ ); break; // FundCode
      case 40000753: return ( &FundType_ ); break; // FundType
      case 40000756: return ( &PriceAtClass_ ); break; // PriceAtClass
      case 40000327: return ( &EffectiveDate_ ); break; // EffectiveDate
      case 40000279: return ( &StopDate_ ); break; // StopDate
      case 40002654: return ( &ClassStartIdx_ ); break; // ClassStartIdx
      case 40002655: return ( &ClassEndIdx_ ); break; // ClassEndIdx
      case 40000749: return ( &EShortName_ ); break; // EShortName
      case 40003085: return ( &OthShortName_ ); break; // OthShortName
      case 40000120: return ( &RepeatCount_ ); break; // RepeatCount
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0164_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0164_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0164_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 10 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &FundCode_; break;
            case 1: aFlds_[1] = &FundType_; break;
            case 2: aFlds_[2] = &PriceAtClass_; break;
            case 3: aFlds_[3] = &EffectiveDate_; break;
            case 4: aFlds_[4] = &StopDate_; break;
            case 5: aFlds_[5] = &ClassStartIdx_; break;
            case 6: aFlds_[6] = &ClassEndIdx_; break;
            case 7: aFlds_[7] = &EShortName_; break;
            case 8: aFlds_[8] = &OthShortName_; break;
            case 9: aFlds_[9] = &RepeatCount_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0164_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0164_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0164_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 200 );
}

unsigned long dsi_DSTC0164_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 576 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0164_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0164_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0164_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40000049: return( true );
      case 40000753: return( true );
      case 40000756: return( true );
      case 40000327: return( true );
      case 40000279: return( true );
      case 40002654: return( true );
      case 40002655: return( true );
      case 40000749: return( true );
      case 40003085: return( true );
      case 40000120: return( true );
   }
   return false;
}

