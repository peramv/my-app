// BFDataImpl header file for DataSet DSTC0395.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId BrokerCode;
   extern const BFTextFieldId BranchCode;
   extern const BFTextFieldId SlsrepCode;
   extern const BFTextFieldId IAFundIndicator;
   extern const BFDateFieldId EffectiveDate;
   extern const BFDateFieldId StopDate;
   extern const BFDateFieldId ProcessDate;
   extern const BFTextFieldId Username;
   extern const BFDateFieldId ModDate;
   extern const BFTextFieldId ModUser;
   extern const BFNumericFieldId AcctAuthVer;
   extern const BFNumericFieldId AcctAuthRid;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_BrokerCode;
   extern const BFDataFieldProperties s_FldProp_BranchCode;
   extern const BFDataFieldProperties s_FldProp_SlsrepCode;
   extern const BFDataFieldProperties s_FldProp_IAFundIndicator;
   extern const BFDataFieldProperties s_FldProp_EffectiveDate;
   extern const BFDataFieldProperties s_FldProp_StopDate;
   extern const BFDataFieldProperties s_FldProp_ProcessDate;
   extern const BFDataFieldProperties s_FldProp_Username;
   extern const BFDataFieldProperties s_FldProp_ModDate;
   extern const BFDataFieldProperties s_FldProp_ModUser;
   extern const BFDataFieldProperties s_FldProp_AcctAuthVer;
   extern const BFDataFieldProperties s_FldProp_AcctAuthRid;
}


class dsi_DSTC0395_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0395_VWRepeat_Record();
   virtual ~dsi_DSTC0395_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[12];
   // Field Declarations
   BFTextField_60 BrokerCode_;
   BFTextField_60 BranchCode_;
   BFTextField_60 SlsrepCode_;
   BFTextField_60 IAFundIndicator_;
   BFDateField EffectiveDate_;
   BFDateField StopDate_;
   BFDateField ProcessDate_;
   BFTextField_60 Username_;
   BFDateField ModDate_;
   BFTextField_60 ModUser_;
   BFNumericField AcctAuthVer_;
   BFNumericField AcctAuthRid_;

};
