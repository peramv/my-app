// BFDataImpl implementation file for DataSet DSTC0010.VW
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:58 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0010_vw.h"


// This function creates an instance of dsi_DSTC0010_VW
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0010_VW() { return new dsi_DSTC0010_VW; }

dsi_DSTC0010_VW::dsi_DSTC0010_VW()
: BFDataImpl( 40000293 )
, BrokerName_( ifds::BrokerName, &ifds::s_FldProp_BrokerName )
, BrokerSalut_( ifds::BrokerSalut, &ifds::s_FldProp_BrokerSalut )
, BranchName_( ifds::BranchName, &ifds::s_FldProp_BranchName )
, SalesRepName_( ifds::SalesRepName, &ifds::s_FldProp_SalesRepName )
, SalesRepSalut_( ifds::SalesRepSalut, &ifds::s_FldProp_SalesRepSalut )
, PhoneNumber_( ifds::PhoneNumber, &ifds::s_FldProp_PhoneNumber )
, FaxNumber_( ifds::FaxNumber, &ifds::s_FldProp_FaxNumber )
, AddrLine1_( ifds::AddrLine1, &ifds::s_FldProp_AddrLine1 )
, AddrLine2_( ifds::AddrLine2, &ifds::s_FldProp_AddrLine2 )
, AddrLine3_( ifds::AddrLine3, &ifds::s_FldProp_AddrLine3 )
, AddrLine4_( ifds::AddrLine4, &ifds::s_FldProp_AddrLine4 )
, AddrLine5_( ifds::AddrLine5, &ifds::s_FldProp_AddrLine5 )
, AddrCntryCode_( ifds::AddrCntryCode, &ifds::s_FldProp_AddrCntryCode )
, VersionNum_( ifds::VersionNum, &ifds::s_FldProp_VersionNum )
{
   cFields_ = 14;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0010_VW::~dsi_DSTC0010_VW()
{
}

BFDataImpl* dsi_DSTC0010_VW::clone()
{
   dsi_DSTC0010_VW* p = new dsi_DSTC0010_VW;
   p->BrokerName_ = BrokerName_;
   p->BrokerSalut_ = BrokerSalut_;
   p->BranchName_ = BranchName_;
   p->SalesRepName_ = SalesRepName_;
   p->SalesRepSalut_ = SalesRepSalut_;
   p->PhoneNumber_ = PhoneNumber_;
   p->FaxNumber_ = FaxNumber_;
   p->AddrLine1_ = AddrLine1_;
   p->AddrLine2_ = AddrLine2_;
   p->AddrLine3_ = AddrLine3_;
   p->AddrLine4_ = AddrLine4_;
   p->AddrLine5_ = AddrLine5_;
   p->AddrCntryCode_ = AddrCntryCode_;
   p->VersionNum_ = VersionNum_;
   return(p);
}

BFDataField* dsi_DSTC0010_VW::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40000210: return ( &BrokerName_ ); break; // BrokerName
      case 40000294: return ( &BrokerSalut_ ); break; // BrokerSalut
      case 40000211: return ( &BranchName_ ); break; // BranchName
      case 40000295: return ( &SalesRepName_ ); break; // SalesRepName
      case 40000296: return ( &SalesRepSalut_ ); break; // SalesRepSalut
      case 40000297: return ( &PhoneNumber_ ); break; // PhoneNumber
      case 40000298: return ( &FaxNumber_ ); break; // FaxNumber
      case 40000280: return ( &AddrLine1_ ); break; // AddrLine1
      case 40000281: return ( &AddrLine2_ ); break; // AddrLine2
      case 40000282: return ( &AddrLine3_ ); break; // AddrLine3
      case 40000283: return ( &AddrLine4_ ); break; // AddrLine4
      case 40000284: return ( &AddrLine5_ ); break; // AddrLine5
      case 40000299: return ( &AddrCntryCode_ ); break; // AddrCntryCode
      case 40000228: return ( &VersionNum_ ); break; // VersionNum
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0010_VW::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0010_VW* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0010_VW::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 14 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &BrokerName_; break;
            case 1: aFlds_[1] = &BrokerSalut_; break;
            case 2: aFlds_[2] = &BranchName_; break;
            case 3: aFlds_[3] = &SalesRepName_; break;
            case 4: aFlds_[4] = &SalesRepSalut_; break;
            case 5: aFlds_[5] = &PhoneNumber_; break;
            case 6: aFlds_[6] = &FaxNumber_; break;
            case 7: aFlds_[7] = &AddrLine1_; break;
            case 8: aFlds_[8] = &AddrLine2_; break;
            case 9: aFlds_[9] = &AddrLine3_; break;
            case 10: aFlds_[10] = &AddrLine4_; break;
            case 11: aFlds_[11] = &AddrLine5_; break;
            case 12: aFlds_[12] = &AddrCntryCode_; break;
            case 13: aFlds_[13] = &VersionNum_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0010_VW::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0010_VW* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0010_VW::getLargestDefinedField( void ) const
{
   return( 60 );
}

unsigned long dsi_DSTC0010_VW::getDefinedByteLength( void ) const
{
   return( 790 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0010_VW::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0010_VW::fieldExists( id );
}

bool dsi_DSTC0010_VW::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40000210: return( true );
      case 40000294: return( true );
      case 40000211: return( true );
      case 40000295: return( true );
      case 40000296: return( true );
      case 40000297: return( true );
      case 40000298: return( true );
      case 40000280: return( true );
      case 40000281: return( true );
      case 40000282: return( true );
      case 40000283: return( true );
      case 40000284: return( true );
      case 40000299: return( true );
      case 40000228: return( true );
   }
   return false;
}

