// BFDataImpl header file for DataSet DSTC0333.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#pragma once
#include <commonport.h>
#include <clientlocale.hpp>

#undef IFAST_DATAIMPL_LINKAGE
#ifdef IFAST_DATAIMPL_DLL
   #define IFAST_DATAIMPL_LINKAGE CLASS_EXPORT
#else
   #define IFAST_DATAIMPL_LINKAGE CLASS_IMPORT
#endif

namespace ifds
{
   //Field Externs
   extern const BFTextFieldId NetworkID;
   extern const BFNumericFieldId ProcessID;
   extern const BFTextFieldId MsgProcessType;
   extern const BFTextFieldId MsgProcessStatus;
   extern const BFDateFieldId ProcessDate;
   extern const BFTextFieldId ProcessTime;
   extern const BFTextFieldId MsgProcessCategory;
   extern const BFTextFieldId FileName;

   //Property Externs
   extern const BFDataFieldProperties s_FldProp_NetworkID;
   extern const BFDataFieldProperties s_FldProp_ProcessID;
   extern const BFDataFieldProperties s_FldProp_MsgProcessType;
   extern const BFDataFieldProperties s_FldProp_MsgProcessStatus;
   extern const BFDataFieldProperties s_FldProp_ProcessDate;
   extern const BFDataFieldProperties s_FldProp_ProcessTime;
   extern const BFDataFieldProperties s_FldProp_MsgProcessCategory;
   extern const BFDataFieldProperties s_FldProp_FileName;
}


class dsi_DSTC0333_VWRepeat_Record : public BFDataImpl 
{
public:
   // Constructors
   dsi_DSTC0333_VWRepeat_Record();
   virtual ~dsi_DSTC0333_VWRepeat_Record();

   virtual BFDataImpl* clone();

   virtual BFDataField* getElement( const BFFieldId& id );
   virtual const BFDataField* getElement( const BFFieldId& id ) const;
   virtual BFDataField* getElementByIndex( unsigned int iField );
   virtual const BFDataField* getElementByIndex( unsigned int iField ) const;


   virtual unsigned long getLargestDefinedField( void ) const;
   virtual unsigned long getDefinedByteLength( void ) const;
   virtual bool exists( const BFFieldId& id ) const;
   static bool fieldExists( const BFFieldId& id );

private:
   BFDataField* aFlds_[8];
   // Field Declarations
   BFTextField_60 NetworkID_;
   BFNumericField ProcessID_;
   BFTextField_60 MsgProcessType_;
   BFTextField_60 MsgProcessStatus_;
   BFDateField ProcessDate_;
   BFTextField_60 ProcessTime_;
   BFTextField_60 MsgProcessCategory_;
   BFTextField_60 FileName_;

};
