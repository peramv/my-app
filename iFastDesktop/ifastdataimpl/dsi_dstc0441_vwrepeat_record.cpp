// BFDataImpl implementation file for DataSet DSTC0441.VWRepeat_Record
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0441_vwrepeat_record.h"


// This function creates an instance of dsi_DSTC0441_VWRepeat_Record
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0441_VWRepeat_Record() { return new dsi_DSTC0441_VWRepeat_Record; }

dsi_DSTC0441_VWRepeat_Record::dsi_DSTC0441_VWRepeat_Record()
: BFDataImpl( 40006952 )
, BenefEntityID_( ifds::BenefEntityID, &ifds::s_FldProp_BenefEntityID )
, BenefAddrCode_( ifds::BenefAddrCode, &ifds::s_FldProp_BenefAddrCode )
, BenefAddrLevel_( ifds::BenefAddrLevel, &ifds::s_FldProp_BenefAddrLevel )
, BenefPrcnt_( ifds::BenefPrcnt, &ifds::s_FldProp_BenefPrcnt )
, BenefAmount_( ifds::BenefAmount, &ifds::s_FldProp_BenefAmount )
, BenefUnits_( ifds::BenefUnits, &ifds::s_FldProp_BenefUnits )
, BenefName_( ifds::BenefName, &ifds::s_FldProp_BenefName )
, BenefRecType_( ifds::BenefRecType, &ifds::s_FldProp_BenefRecType )
{
   cFields_ = 8;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0441_VWRepeat_Record::~dsi_DSTC0441_VWRepeat_Record()
{
}

BFDataImpl* dsi_DSTC0441_VWRepeat_Record::clone()
{
   dsi_DSTC0441_VWRepeat_Record* p = new dsi_DSTC0441_VWRepeat_Record;
   p->BenefEntityID_ = BenefEntityID_;
   p->BenefAddrCode_ = BenefAddrCode_;
   p->BenefAddrLevel_ = BenefAddrLevel_;
   p->BenefPrcnt_ = BenefPrcnt_;
   p->BenefAmount_ = BenefAmount_;
   p->BenefUnits_ = BenefUnits_;
   p->BenefName_ = BenefName_;
   p->BenefRecType_ = BenefRecType_;
   return(p);
}

BFDataField* dsi_DSTC0441_VWRepeat_Record::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40006955: return ( &BenefEntityID_ ); break; // BenefEntityID
      case 40006956: return ( &BenefAddrCode_ ); break; // BenefAddrCode
      case 40006957: return ( &BenefAddrLevel_ ); break; // BenefAddrLevel
      case 40006958: return ( &BenefPrcnt_ ); break; // BenefPrcnt
      case 40006959: return ( &BenefAmount_ ); break; // BenefAmount
      case 40006960: return ( &BenefUnits_ ); break; // BenefUnits
      case 40006961: return ( &BenefName_ ); break; // BenefName
      case 40006984: return ( &BenefRecType_ ); break; // BenefRecType
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0441_VWRepeat_Record::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0441_VWRepeat_Record* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0441_VWRepeat_Record::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 8 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &BenefEntityID_; break;
            case 1: aFlds_[1] = &BenefAddrCode_; break;
            case 2: aFlds_[2] = &BenefAddrLevel_; break;
            case 3: aFlds_[3] = &BenefPrcnt_; break;
            case 4: aFlds_[4] = &BenefAmount_; break;
            case 5: aFlds_[5] = &BenefUnits_; break;
            case 6: aFlds_[6] = &BenefName_; break;
            case 7: aFlds_[7] = &BenefRecType_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0441_VWRepeat_Record::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0441_VWRepeat_Record* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0441_VWRepeat_Record::getLargestDefinedField( void ) const
{
   return( 30 );
}

unsigned long dsi_DSTC0441_VWRepeat_Record::getDefinedByteLength( void ) const
{
   return( 144 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0441_VWRepeat_Record::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0441_VWRepeat_Record::fieldExists( id );
}

bool dsi_DSTC0441_VWRepeat_Record::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40006955: return( true );
      case 40006956: return( true );
      case 40006957: return( true );
      case 40006958: return( true );
      case 40006959: return( true );
      case 40006960: return( true );
      case 40006961: return( true );
      case 40006984: return( true );
   }
   return false;
}

