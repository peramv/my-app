// BFDataImpl implementation file for DataSet DSTC0324.REQ
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 15:59:59 2015


#include "stdafx.h"




#include <bfdata/bfdataimpl.hpp>
#include "dsi_dstc0324_req.h"


// This function creates an instance of dsi_DSTC0324_REQ
// The function is required by the factory class as that class may choke the compiler
// with excessive symbols if all of the required header files needed to be #include'd
BFDataImpl* create_dsi_DSTC0324_REQ() { return new dsi_DSTC0324_REQ; }

dsi_DSTC0324_REQ::dsi_DSTC0324_REQ()
: BFDataImpl( 40004835 )
, SessionId_( ifds::SessionId, &ifds::s_FldProp_SessionId )
, User_Id_( ifds::User_Id, &ifds::s_FldProp_User_Id )
, LanguageCode_( ifds::LanguageCode, &ifds::s_FldProp_LanguageCode )
, CompanyId_( ifds::CompanyId, &ifds::s_FldProp_CompanyId )
, Track_( ifds::Track, &ifds::s_FldProp_Track )
, Activity_( ifds::Activity, &ifds::s_FldProp_Activity )
, OmnibusID_( ifds::OmnibusID, &ifds::s_FldProp_OmnibusID )
, BrkSettlDate_( ifds::BrkSettlDate, &ifds::s_FldProp_BrkSettlDate )
, BrkSettlAmtUnits_( ifds::BrkSettlAmtUnits, &ifds::s_FldProp_BrkSettlAmtUnits )
, BrkSettlPUD_( ifds::BrkSettlPUD, &ifds::s_FldProp_BrkSettlPUD )
, Price_( ifds::Price, &ifds::s_FldProp_Price )
, AggrPriceType_( ifds::AggrPriceType, &ifds::s_FldProp_AggrPriceType )
, Commission_( ifds::Commission, &ifds::s_FldProp_Commission )
, ExternCharge_( ifds::ExternCharge, &ifds::s_FldProp_ExternCharge )
, RebateRate_( ifds::RebateRate, &ifds::s_FldProp_RebateRate )
, OrdStatus_( ifds::OrdStatus, &ifds::s_FldProp_OrdStatus )
, DeliveryTo_( ifds::DeliveryTo, &ifds::s_FldProp_DeliveryTo )
, ForAccount_( ifds::ForAccount, &ifds::s_FldProp_ForAccount )
, InFavourOf_( ifds::InFavourOf, &ifds::s_FldProp_InFavourOf )
, ClrSettlMethod_( ifds::ClrSettlMethod, &ifds::s_FldProp_ClrSettlMethod )
, SettlInstrCode_( ifds::SettlInstrCode, &ifds::s_FldProp_SettlInstrCode )
, SettleLocationCode_( ifds::SettleLocationCode, &ifds::s_FldProp_SettleLocationCode )
, AggrOrdId_( ifds::AggrOrdId, &ifds::s_FldProp_AggrOrdId )
, AggrOrdVer_( ifds::AggrOrdVer, &ifds::s_FldProp_AggrOrdVer )
, Recalculate_( ifds::Recalculate, &ifds::s_FldProp_Recalculate )
, RemarksAggr_( ifds::RemarksAggr, &ifds::s_FldProp_RemarksAggr )
, RunMode_( ifds::RunMode, &ifds::s_FldProp_RunMode )
, TradeDate_( ifds::TradeDate, &ifds::s_FldProp_TradeDate )
, CalcBrkAmount_( ifds::CalcBrkAmount, &ifds::s_FldProp_CalcBrkAmount )
, SecRecFileIndicator_( ifds::SecRecFileIndicator, &ifds::s_FldProp_SecRecFileIndicator )
, Amount_( ifds::Amount, &ifds::s_FldProp_Amount )
, CashMsgType_( ifds::CashMsgType, &ifds::s_FldProp_CashMsgType )
, IntermediaryBank_( ifds::IntermediaryBank, &ifds::s_FldProp_IntermediaryBank )
, ReceivingBank_( ifds::ReceivingBank, &ifds::s_FldProp_ReceivingBank )
, Beneficiary_( ifds::Beneficiary, &ifds::s_FldProp_Beneficiary )
, SpecialInstructions_( ifds::SpecialInstructions, &ifds::s_FldProp_SpecialInstructions )
, InternalSettlementAccount_( ifds::InternalSettlementAccount, &ifds::s_FldProp_InternalSettlementAccount )
{
   cFields_ = 37;
   memset( &aFlds_[0], 0x00, sizeof( aFlds_ ) );
}

dsi_DSTC0324_REQ::~dsi_DSTC0324_REQ()
{
}

BFDataImpl* dsi_DSTC0324_REQ::clone()
{
   dsi_DSTC0324_REQ* p = new dsi_DSTC0324_REQ;
   p->SessionId_ = SessionId_;
   p->User_Id_ = User_Id_;
   p->LanguageCode_ = LanguageCode_;
   p->CompanyId_ = CompanyId_;
   p->Track_ = Track_;
   p->Activity_ = Activity_;
   p->OmnibusID_ = OmnibusID_;
   p->BrkSettlDate_ = BrkSettlDate_;
   p->BrkSettlAmtUnits_ = BrkSettlAmtUnits_;
   p->BrkSettlPUD_ = BrkSettlPUD_;
   p->Price_ = Price_;
   p->AggrPriceType_ = AggrPriceType_;
   p->Commission_ = Commission_;
   p->ExternCharge_ = ExternCharge_;
   p->RebateRate_ = RebateRate_;
   p->OrdStatus_ = OrdStatus_;
   p->DeliveryTo_ = DeliveryTo_;
   p->ForAccount_ = ForAccount_;
   p->InFavourOf_ = InFavourOf_;
   p->ClrSettlMethod_ = ClrSettlMethod_;
   p->SettlInstrCode_ = SettlInstrCode_;
   p->SettleLocationCode_ = SettleLocationCode_;
   p->AggrOrdId_ = AggrOrdId_;
   p->AggrOrdVer_ = AggrOrdVer_;
   p->Recalculate_ = Recalculate_;
   p->RemarksAggr_ = RemarksAggr_;
   p->RunMode_ = RunMode_;
   p->TradeDate_ = TradeDate_;
   p->CalcBrkAmount_ = CalcBrkAmount_;
   p->SecRecFileIndicator_ = SecRecFileIndicator_;
   p->Amount_ = Amount_;
   p->CashMsgType_ = CashMsgType_;
   p->IntermediaryBank_ = IntermediaryBank_;
   p->ReceivingBank_ = ReceivingBank_;
   p->Beneficiary_ = Beneficiary_;
   p->SpecialInstructions_ = SpecialInstructions_;
   p->InternalSettlementAccount_ = InternalSettlementAccount_;
   return(p);
}

BFDataField* dsi_DSTC0324_REQ::getElement( const BFFieldId& id )
{
   switch( id.getId() ) {
      case 40000005: return ( &SessionId_ ); break; // SessionId
      case 40000002: return ( &User_Id_ ); break; // User_Id
      case 40000030: return ( &LanguageCode_ ); break; // LanguageCode
      case 40000031: return ( &CompanyId_ ); break; // CompanyId
      case 40002065: return ( &Track_ ); break; // Track
      case 40002066: return ( &Activity_ ); break; // Activity
      case 40004780: return ( &OmnibusID_ ); break; // OmnibusID
      case 40004814: return ( &BrkSettlDate_ ); break; // BrkSettlDate
      case 40004815: return ( &BrkSettlAmtUnits_ ); break; // BrkSettlAmtUnits
      case 40004816: return ( &BrkSettlPUD_ ); break; // BrkSettlPUD
      case 40003094: return ( &Price_ ); break; // Price
      case 40004906: return ( &AggrPriceType_ ); break; // AggrPriceType
      case 40000441: return ( &Commission_ ); break; // Commission
      case 40004818: return ( &ExternCharge_ ); break; // ExternCharge
      case 40004819: return ( &RebateRate_ ); break; // RebateRate
      case 40004783: return ( &OrdStatus_ ); break; // OrdStatus
      case 40004822: return ( &DeliveryTo_ ); break; // DeliveryTo
      case 40004823: return ( &ForAccount_ ); break; // ForAccount
      case 40002178: return ( &InFavourOf_ ); break; // InFavourOf
      case 40004830: return ( &ClrSettlMethod_ ); break; // ClrSettlMethod
      case 40004825: return ( &SettlInstrCode_ ); break; // SettlInstrCode
      case 40004261: return ( &SettleLocationCode_ ); break; // SettleLocationCode
      case 40004828: return ( &AggrOrdId_ ); break; // AggrOrdId
      case 40004829: return ( &AggrOrdVer_ ); break; // AggrOrdVer
      case 40004832: return ( &Recalculate_ ); break; // Recalculate
      case 40004833: return ( &RemarksAggr_ ); break; // RemarksAggr
      case 40000990: return ( &RunMode_ ); break; // RunMode
      case 40000097: return ( &TradeDate_ ); break; // TradeDate
      case 40005258: return ( &CalcBrkAmount_ ); break; // CalcBrkAmount
      case 40005381: return ( &SecRecFileIndicator_ ); break; // SecRecFileIndicator
      case 40000231: return ( &Amount_ ); break; // Amount
      case 40007434: return ( &CashMsgType_ ); break; // CashMsgType
      case 40007435: return ( &IntermediaryBank_ ); break; // IntermediaryBank
      case 40007436: return ( &ReceivingBank_ ); break; // ReceivingBank
      case 40007437: return ( &Beneficiary_ ); break; // Beneficiary
      case 40007438: return ( &SpecialInstructions_ ); break; // SpecialInstructions
      case 40007453: return ( &InternalSettlementAccount_ ); break; // InternalSettlementAccount
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0324_REQ::getElement( const BFFieldId& id ) const
{
   return( ( const_cast< dsi_DSTC0324_REQ* >(this) )->getElement( id ) );
}

BFDataField* dsi_DSTC0324_REQ::getElementByIndex( unsigned int iField )
{
   if ( iField >=0 && iField < 37 )
   {
      BFDataField* pField = aFlds_[iField];
      if( NULL == pField )
      {
         switch(iField)
         {
            case 0: aFlds_[0] = &SessionId_; break;
            case 1: aFlds_[1] = &User_Id_; break;
            case 2: aFlds_[2] = &LanguageCode_; break;
            case 3: aFlds_[3] = &CompanyId_; break;
            case 4: aFlds_[4] = &Track_; break;
            case 5: aFlds_[5] = &Activity_; break;
            case 6: aFlds_[6] = &OmnibusID_; break;
            case 7: aFlds_[7] = &BrkSettlDate_; break;
            case 8: aFlds_[8] = &BrkSettlAmtUnits_; break;
            case 9: aFlds_[9] = &BrkSettlPUD_; break;
            case 10: aFlds_[10] = &Price_; break;
            case 11: aFlds_[11] = &AggrPriceType_; break;
            case 12: aFlds_[12] = &Commission_; break;
            case 13: aFlds_[13] = &ExternCharge_; break;
            case 14: aFlds_[14] = &RebateRate_; break;
            case 15: aFlds_[15] = &OrdStatus_; break;
            case 16: aFlds_[16] = &DeliveryTo_; break;
            case 17: aFlds_[17] = &ForAccount_; break;
            case 18: aFlds_[18] = &InFavourOf_; break;
            case 19: aFlds_[19] = &ClrSettlMethod_; break;
            case 20: aFlds_[20] = &SettlInstrCode_; break;
            case 21: aFlds_[21] = &SettleLocationCode_; break;
            case 22: aFlds_[22] = &AggrOrdId_; break;
            case 23: aFlds_[23] = &AggrOrdVer_; break;
            case 24: aFlds_[24] = &Recalculate_; break;
            case 25: aFlds_[25] = &RemarksAggr_; break;
            case 26: aFlds_[26] = &RunMode_; break;
            case 27: aFlds_[27] = &TradeDate_; break;
            case 28: aFlds_[28] = &CalcBrkAmount_; break;
            case 29: aFlds_[29] = &SecRecFileIndicator_; break;
            case 30: aFlds_[30] = &Amount_; break;
            case 31: aFlds_[31] = &CashMsgType_; break;
            case 32: aFlds_[32] = &IntermediaryBank_; break;
            case 33: aFlds_[33] = &ReceivingBank_; break;
            case 34: aFlds_[34] = &Beneficiary_; break;
            case 35: aFlds_[35] = &SpecialInstructions_; break;
            case 36: aFlds_[36] = &InternalSettlementAccount_; break;
         }
         pField = aFlds_[iField];
         if( NULL == pField ) return( NULL );
      }
      return( pField );
   }
   return( NULL );
}

const BFDataField* dsi_DSTC0324_REQ::getElementByIndex( unsigned int iField ) const
{
   return( ( const_cast< dsi_DSTC0324_REQ* >(this) )->getElementByIndex( iField ) );
}

unsigned long dsi_DSTC0324_REQ::getLargestDefinedField( void ) const
{
   return( 180 );
}

unsigned long dsi_DSTC0324_REQ::getDefinedByteLength( void ) const
{
   return( 1635 * sizeof( I_CHAR ) );
}

bool dsi_DSTC0324_REQ::exists( const BFFieldId& id ) const
{
   return dsi_DSTC0324_REQ::fieldExists( id );
}

bool dsi_DSTC0324_REQ::fieldExists( const BFFieldId& id )
{
   switch( id.getId() )
   {
      case 40000005: return( true );
      case 40000002: return( true );
      case 40000030: return( true );
      case 40000031: return( true );
      case 40002065: return( true );
      case 40002066: return( true );
      case 40004780: return( true );
      case 40004814: return( true );
      case 40004815: return( true );
      case 40004816: return( true );
      case 40003094: return( true );
      case 40004906: return( true );
      case 40000441: return( true );
      case 40004818: return( true );
      case 40004819: return( true );
      case 40004783: return( true );
      case 40004822: return( true );
      case 40004823: return( true );
      case 40002178: return( true );
      case 40004830: return( true );
      case 40004825: return( true );
      case 40004261: return( true );
      case 40004828: return( true );
      case 40004829: return( true );
      case 40004832: return( true );
      case 40004833: return( true );
      case 40000990: return( true );
      case 40000097: return( true );
      case 40005258: return( true );
      case 40005381: return( true );
      case 40000231: return( true );
      case 40007434: return( true );
      case 40007435: return( true );
      case 40007436: return( true );
      case 40007437: return( true );
      case 40007438: return( true );
      case 40007453: return( true );
   }
   return false;
}

