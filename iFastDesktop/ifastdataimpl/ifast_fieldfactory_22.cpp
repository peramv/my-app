// Data Field Factory Function
// TIMBUK3: This file was generated by Timbuk3 - Version 2.4.1
// TIMBUK3: Generated on : Mon Aug 24 16:00:00 2015

#include "stdafx.h"




#include <bfdata/bfdatafield.hpp>
#include <bfdata/bfdataid.hpp>

namespace ifds
{
   extern const BFTextFieldId Commissionable;
   extern const BFDecimalFieldId UnitsTotal;
   extern const BFTextFieldId GuarActive;
   extern const BFTextFieldId HistoricalType;
   extern const BFDataId DSTC0289_REQ;
   extern const BFTextFieldId InventorySummHeading;
   extern const BFDateFieldId LastIntAccDate;
   extern const BFTextFieldId IntAccrualMthd;
   extern const BFNumericFieldId DailyFeeRid;
   extern const BFTextFieldId GuarStatus;
   extern const BFTextFieldId FndMrgRedCod;
   extern const BFTextFieldId ExclFeeCode;
   extern const BFTextFieldId AllocAtCost;
   extern const BFTextFieldId Networkcontrolind;
   extern const BFTextFieldId NSCCCompliant;
   extern const BFTextFieldId ClearingFirm;
   extern const BFTextFieldId NSCCCurrencyList;
   extern const BFTextFieldId NSCCPaymentFor;
   extern const BFTextFieldId FileTypeD;
   extern const BFTextFieldId PaymentInstructionsPaymentFor;
   extern const BFTextFieldId FileTypeJ;
   extern const BFTextFieldId NSCCDummyDistributionPayType;
   extern const BFTextFieldId NSCCMFRDistributionPay;
   extern const BFDateFieldId LiveRunDate;
   extern const BFTextFieldId UnsettleWithAMSFund;
   extern const BFTextFieldId PendingWithAMSFund;
   extern const BFTextFieldId CashDateXEdit;
   extern const BFTextFieldId AMSEligible;
   extern const BFTextFieldId RiskLevel;
   extern const BFTextFieldId HighestEntityRisk;
   extern const BFTextFieldId EntityRiskLevel;
   extern const BFTextFieldId LSIFPAC;
   extern const BFTextFieldId STTRFeeExclRedCodeList;
   extern const BFDecimalFieldId FedClawback;
   extern const BFDecimalFieldId ProvClawback;
   extern const BFTextFieldId TraceNo;
   extern const BFDateFieldId MatureDate;
   extern const BFTextFieldId ReceiptStatus;
   extern const BFTextFieldId TaxJuris;
   extern const BFDecimalFieldId TotalCBFFreeUnits;
   extern const BFIntegerFieldId ReceiptNumber;
   extern const BFTextFieldId ShortTermFee;
   extern const BFTextFieldId ActiveOnly;
   extern const BFTextFieldId AWD_OBJECT_ID;
   extern const BFTextFieldId isLSIF;
   extern const BFTextFieldId HypoRedSummaryAmountHeadingSetWithLSIF;
   extern const BFTextFieldId HypoRedSummaryUnitsHeadingSetWithLSIF;
   extern const BFTextFieldId HypoRedTotalHeadingSetWithLSIF;
   extern const BFDecimalFieldId AdditionalProvClawback;
   extern const BFTextFieldId ProductCtrlCode;
   extern const BFTextFieldId ActiveCode;
   extern const BFDataId DSTC0291_REQ;
   extern const BFDataId DSTC0291_VW;
   extern const BFDataId DSTC0291_VWRepeat_Record;
   extern const BFDataId DSTC0292_REQ;
   extern const BFDataId DSTC0292_VW;
   extern const BFDataId DSTC0292_VWRepeat_Record;
   extern const BFTextFieldId AWDRemark;
   extern const BFTextFieldId HypoRedDetailAmountHeadingSetWithLSIF;
   extern const BFTextFieldId HypoRedDetailUnitsHeadingSetWithLSIF;
   extern const BFTextFieldId LSIFCode;
   extern const BFDataId DSTC0295_REQ;
   extern const BFDataId DSTC0295_VW;
   extern const BFDataId DSTC0295_VWRepeat_Record;
   extern const BFIntegerFieldId AvailOnInput;
   extern const BFTextFieldId LSIFDSCOverrideCode;
   extern const BFDataId DSTC0296_REQ;
   extern const BFDataId DSTC0296_VW;
   extern const BFDataId DSTC0296_VWRepeat_Record;
   extern const BFTextFieldId TradeRolloverAttribute;
   extern const BFTextFieldId AmountTypeRollover;
   extern const BFDecimalFieldId OriginalTotalUnits;
   extern const BFTextFieldId InventoryDetailsHeading;
   extern const BFTextFieldId RedCodeChrERSTTRFeeXEdit;
   extern const BFTextFieldId FromToFundClassChrERSTTRFeeXEdit;
   extern const BFTextFieldId StopCommissionRebate;
   extern const BFDecimalFieldId ClawBackTotal;
   extern const BFDataId DSTC0294_REQ;
   extern const BFDataId DSTC0294_VW;
   extern const BFDecimalFieldId DomesticACBAmtBefore;
   extern const BFDecimalFieldId DomesticPrcntBefore;
   extern const BFDecimalFieldId DomesticACBCAmtAfter;
   extern const BFDecimalFieldId DomesticPrcntAfter;
   extern const BFDecimalFieldId FrgnACBAmtBefore;
   extern const BFDecimalFieldId FrgnPrcntBefore;
   extern const BFDecimalFieldId FrgnACBAmtAfter;
   extern const BFDecimalFieldId FrgnPrcntAfter;
   extern const BFDecimalFieldId FrgnAllowedPrcntBefore;
   extern const BFDecimalFieldId FrgnAllowedAmtBefore;
   extern const BFTextFieldId HypoTransType;
   extern const BFDecimalFieldId FrgnAllowedAmtAfter;
   extern const BFDecimalFieldId FrgnAllowedPrcntAfter;
   extern const BFDecimalFieldId ACBTotalPrcntAfter;
   extern const BFDecimalFieldId ACBTotalPrcntBefore;
   extern const BFDecimalFieldId ACBTotalAmtBefore;
   extern const BFDecimalFieldId ACBTotalAmtAfter;
   extern const BFDecimalFieldId LSIFUnitsAvail;
   extern const BFTextFieldId EqualizationActive;
   extern const BFTextFieldId FromFundName;
   extern const BFTextFieldId ToFundName;
   extern const BFTextFieldId IDAccess;
   extern const BFDataId DSTC0297_REQ;
   extern const BFDataId DSTC0297_VW;
   extern const BFTextFieldId DistribCoopAgrmnt;
   extern const BFDataId DSTC0299_REQ;
   extern const BFDataId DSTC0299_VW;
   extern const BFDataId DSTC0299_VWRepeat_Record;
   extern const BFDataId DSTC0300_REQ;
   extern const BFDataId DSTC0300_REQRepeat_Record;
   extern const BFDataId DSTC0300_VW;
   extern const BFTextFieldId ShrFundSpAgrmntHeading;
   extern const BFTextFieldId FundSponsorFeeModelUsing;
   extern const BFTextFieldId FundSponsorFeeModelLabel;
   extern const BFTextFieldId FundSponsorFeeModelSearchCriteria;
   extern const BFTextFieldId FundSponsorFeeModelSearchCriteriaNo;
   extern const BFDecimalFieldId DeregAmtYrToDate;
   extern const BFIntegerFieldId TaxExemptId;
   extern const BFTextFieldId TaxExType;
   extern const BFDecimalFieldId ExemptAmtOrig;
   extern const BFDecimalFieldId ExemptAmountUsed;
   extern const BFDecimalFieldId ExemptAmtRemain;
   extern const BFDataId DSTC0301_REQ;
   extern const BFDataId DSTC0301_VW;
   extern const BFDataId DSTC0301_VWRepeat_Record;
   extern const BFDataId DSTC0302_VW;
   extern const BFDataId DSTC0302_REQ;
   extern const BFDataId DSTC0302_REQRepeat_Record;
   extern const BFTextFieldId StopRedSettle;
   extern const BFTextFieldId RegistrationInfo;
   extern const BFTextFieldId ShrFndSpAgrExists;
   extern const BFDecimalFieldId EligibleRedempTotal;
   extern const BFDecimalFieldId EligibleNetTotal;
   extern const BFIntegerFieldId EligibleCount;
   extern const BFTextFieldId RegisteredTaxTypes;
   extern const BFDecimalFieldId TaxExemptAmt;
   extern const BFTextFieldId TaxExemptAuthorizationHeading;
   extern const BFTextFieldId TradeFeeTypeList;
   extern const BFTextFieldId FeeModelCode;
   extern const BFTextFieldId RefNum;
   extern const BFTextFieldId FundWKN;
   extern const BFTextFieldId FundISIN;
   extern const BFTextFieldId FundToWKN;
   extern const BFTextFieldId FundToISIN;
   extern const BFTextFieldId AcqFeeOption;
   extern const BFTextFieldId SettleDateOverriden;
   extern const BFTextFieldId ValidSettleCurr;
   extern const BFTextFieldId UnitsCal;
   extern const BFTextFieldId PUEVCapable;
   extern const BFTextFieldId ForceVerify;
   extern const BFTextFieldId FndSpFeeModelID;
   extern const BFDataId DSTC0298_REQ;
   extern const BFDataId DSTC0298_VW;
   extern const BFDataFieldProperties s_FldProp_Commissionable;
   extern const BFDataFieldProperties s_FldProp_UnitsTotal;
   extern const BFDataFieldProperties s_FldProp_GuarActive;
   extern const BFDataFieldProperties s_FldProp_HistoricalType;
   extern const BFDataFieldProperties s_FldProp_DSTC0289_REQ;
   extern const BFDataFieldProperties s_FldProp_InventorySummHeading;
   extern const BFDataFieldProperties s_FldProp_LastIntAccDate;
   extern const BFDataFieldProperties s_FldProp_IntAccrualMthd;
   extern const BFDataFieldProperties s_FldProp_DailyFeeRid;
   extern const BFDataFieldProperties s_FldProp_GuarStatus;
   extern const BFDataFieldProperties s_FldProp_FndMrgRedCod;
   extern const BFDataFieldProperties s_FldProp_ExclFeeCode;
   extern const BFDataFieldProperties s_FldProp_AllocAtCost;
   extern const BFDataFieldProperties s_FldProp_Networkcontrolind;
   extern const BFDataFieldProperties s_FldProp_NSCCCompliant;
   extern const BFDataFieldProperties s_FldProp_ClearingFirm;
   extern const BFDataFieldProperties s_FldProp_NSCCCurrencyList;
   extern const BFDataFieldProperties s_FldProp_NSCCPaymentFor;
   extern const BFDataFieldProperties s_FldProp_FileTypeD;
   extern const BFDataFieldProperties s_FldProp_PaymentInstructionsPaymentFor;
   extern const BFDataFieldProperties s_FldProp_FileTypeJ;
   extern const BFDataFieldProperties s_FldProp_NSCCDummyDistributionPayType;
   extern const BFDataFieldProperties s_FldProp_NSCCMFRDistributionPay;
   extern const BFDataFieldProperties s_FldProp_LiveRunDate;
   extern const BFDataFieldProperties s_FldProp_UnsettleWithAMSFund;
   extern const BFDataFieldProperties s_FldProp_PendingWithAMSFund;
   extern const BFDataFieldProperties s_FldProp_CashDateXEdit;
   extern const BFDataFieldProperties s_FldProp_AMSEligible;
   extern const BFDataFieldProperties s_FldProp_RiskLevel;
   extern const BFDataFieldProperties s_FldProp_HighestEntityRisk;
   extern const BFDataFieldProperties s_FldProp_EntityRiskLevel;
   extern const BFDataFieldProperties s_FldProp_LSIFPAC;
   extern const BFDataFieldProperties s_FldProp_STTRFeeExclRedCodeList;
   extern const BFDataFieldProperties s_FldProp_FedClawback;
   extern const BFDataFieldProperties s_FldProp_ProvClawback;
   extern const BFDataFieldProperties s_FldProp_TraceNo;
   extern const BFDataFieldProperties s_FldProp_MatureDate;
   extern const BFDataFieldProperties s_FldProp_ReceiptStatus;
   extern const BFDataFieldProperties s_FldProp_TaxJuris;
   extern const BFDataFieldProperties s_FldProp_TotalCBFFreeUnits;
   extern const BFDataFieldProperties s_FldProp_ReceiptNumber;
   extern const BFDataFieldProperties s_FldProp_ShortTermFee;
   extern const BFDataFieldProperties s_FldProp_ActiveOnly;
   extern const BFDataFieldProperties s_FldProp_AWD_OBJECT_ID;
   extern const BFDataFieldProperties s_FldProp_isLSIF;
   extern const BFDataFieldProperties s_FldProp_HypoRedSummaryAmountHeadingSetWithLSIF;
   extern const BFDataFieldProperties s_FldProp_HypoRedSummaryUnitsHeadingSetWithLSIF;
   extern const BFDataFieldProperties s_FldProp_HypoRedTotalHeadingSetWithLSIF;
   extern const BFDataFieldProperties s_FldProp_AdditionalProvClawback;
   extern const BFDataFieldProperties s_FldProp_ProductCtrlCode;
   extern const BFDataFieldProperties s_FldProp_ActiveCode;
   extern const BFDataFieldProperties s_FldProp_DSTC0291_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0291_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0291_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0292_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0292_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0292_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_AWDRemark;
   extern const BFDataFieldProperties s_FldProp_HypoRedDetailAmountHeadingSetWithLSIF;
   extern const BFDataFieldProperties s_FldProp_HypoRedDetailUnitsHeadingSetWithLSIF;
   extern const BFDataFieldProperties s_FldProp_LSIFCode;
   extern const BFDataFieldProperties s_FldProp_DSTC0295_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0295_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0295_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_AvailOnInput;
   extern const BFDataFieldProperties s_FldProp_LSIFDSCOverrideCode;
   extern const BFDataFieldProperties s_FldProp_DSTC0296_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0296_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0296_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_TradeRolloverAttribute;
   extern const BFDataFieldProperties s_FldProp_AmountTypeRollover;
   extern const BFDataFieldProperties s_FldProp_OriginalTotalUnits;
   extern const BFDataFieldProperties s_FldProp_InventoryDetailsHeading;
   extern const BFDataFieldProperties s_FldProp_RedCodeChrERSTTRFeeXEdit;
   extern const BFDataFieldProperties s_FldProp_FromToFundClassChrERSTTRFeeXEdit;
   extern const BFDataFieldProperties s_FldProp_StopCommissionRebate;
   extern const BFDataFieldProperties s_FldProp_ClawBackTotal;
   extern const BFDataFieldProperties s_FldProp_DSTC0294_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0294_VW;
   extern const BFDataFieldProperties s_FldProp_DomesticACBAmtBefore;
   extern const BFDataFieldProperties s_FldProp_DomesticPrcntBefore;
   extern const BFDataFieldProperties s_FldProp_DomesticACBCAmtAfter;
   extern const BFDataFieldProperties s_FldProp_DomesticPrcntAfter;
   extern const BFDataFieldProperties s_FldProp_FrgnACBAmtBefore;
   extern const BFDataFieldProperties s_FldProp_FrgnPrcntBefore;
   extern const BFDataFieldProperties s_FldProp_FrgnACBAmtAfter;
   extern const BFDataFieldProperties s_FldProp_FrgnPrcntAfter;
   extern const BFDataFieldProperties s_FldProp_FrgnAllowedPrcntBefore;
   extern const BFDataFieldProperties s_FldProp_FrgnAllowedAmtBefore;
   extern const BFDataFieldProperties s_FldProp_HypoTransType;
   extern const BFDataFieldProperties s_FldProp_FrgnAllowedAmtAfter;
   extern const BFDataFieldProperties s_FldProp_FrgnAllowedPrcntAfter;
   extern const BFDataFieldProperties s_FldProp_ACBTotalPrcntAfter;
   extern const BFDataFieldProperties s_FldProp_ACBTotalPrcntBefore;
   extern const BFDataFieldProperties s_FldProp_ACBTotalAmtBefore;
   extern const BFDataFieldProperties s_FldProp_ACBTotalAmtAfter;
   extern const BFDataFieldProperties s_FldProp_LSIFUnitsAvail;
   extern const BFDataFieldProperties s_FldProp_EqualizationActive;
   extern const BFDataFieldProperties s_FldProp_FromFundName;
   extern const BFDataFieldProperties s_FldProp_ToFundName;
   extern const BFDataFieldProperties s_FldProp_IDAccess;
   extern const BFDataFieldProperties s_FldProp_DSTC0297_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0297_VW;
   extern const BFDataFieldProperties s_FldProp_DistribCoopAgrmnt;
   extern const BFDataFieldProperties s_FldProp_DSTC0299_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0299_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0299_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0300_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0300_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0300_VW;
   extern const BFDataFieldProperties s_FldProp_ShrFundSpAgrmntHeading;
   extern const BFDataFieldProperties s_FldProp_FundSponsorFeeModelUsing;
   extern const BFDataFieldProperties s_FldProp_FundSponsorFeeModelLabel;
   extern const BFDataFieldProperties s_FldProp_FundSponsorFeeModelSearchCriteria;
   extern const BFDataFieldProperties s_FldProp_FundSponsorFeeModelSearchCriteriaNo;
   extern const BFDataFieldProperties s_FldProp_DeregAmtYrToDate;
   extern const BFDataFieldProperties s_FldProp_TaxExemptId;
   extern const BFDataFieldProperties s_FldProp_TaxExType;
   extern const BFDataFieldProperties s_FldProp_ExemptAmtOrig;
   extern const BFDataFieldProperties s_FldProp_ExemptAmountUsed;
   extern const BFDataFieldProperties s_FldProp_ExemptAmtRemain;
   extern const BFDataFieldProperties s_FldProp_DSTC0301_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0301_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0301_VWRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_DSTC0302_VW;
   extern const BFDataFieldProperties s_FldProp_DSTC0302_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0302_REQRepeat_Record;
   extern const BFDataFieldProperties s_FldProp_StopRedSettle;
   extern const BFDataFieldProperties s_FldProp_RegistrationInfo;
   extern const BFDataFieldProperties s_FldProp_ShrFndSpAgrExists;
   extern const BFDataFieldProperties s_FldProp_EligibleRedempTotal;
   extern const BFDataFieldProperties s_FldProp_EligibleNetTotal;
   extern const BFDataFieldProperties s_FldProp_EligibleCount;
   extern const BFDataFieldProperties s_FldProp_RegisteredTaxTypes;
   extern const BFDataFieldProperties s_FldProp_TaxExemptAmt;
   extern const BFDataFieldProperties s_FldProp_TaxExemptAuthorizationHeading;
   extern const BFDataFieldProperties s_FldProp_TradeFeeTypeList;
   extern const BFDataFieldProperties s_FldProp_FeeModelCode;
   extern const BFDataFieldProperties s_FldProp_RefNum;
   extern const BFDataFieldProperties s_FldProp_FundWKN;
   extern const BFDataFieldProperties s_FldProp_FundISIN;
   extern const BFDataFieldProperties s_FldProp_FundToWKN;
   extern const BFDataFieldProperties s_FldProp_FundToISIN;
   extern const BFDataFieldProperties s_FldProp_AcqFeeOption;
   extern const BFDataFieldProperties s_FldProp_SettleDateOverriden;
   extern const BFDataFieldProperties s_FldProp_ValidSettleCurr;
   extern const BFDataFieldProperties s_FldProp_UnitsCal;
   extern const BFDataFieldProperties s_FldProp_PUEVCapable;
   extern const BFDataFieldProperties s_FldProp_ForceVerify;
   extern const BFDataFieldProperties s_FldProp_FndSpFeeModelID;
   extern const BFDataFieldProperties s_FldProp_DSTC0298_REQ;
   extern const BFDataFieldProperties s_FldProp_DSTC0298_VW;
   BFDataField* createField_22( const BFFieldId id )
   {
      BFDataField* pField = NULL;
      switch( id.getId() )
      {
         case 40004400: pField = new BFTextField_1( Commissionable, &s_FldProp_Commissionable ); break; 
         case 40004401: pField = new BFDecimalField( UnitsTotal, &s_FldProp_UnitsTotal ); break; 
         case 40004406: pField = new BFTextField_60( GuarActive, &s_FldProp_GuarActive ); break; 
         case 40004407: pField = new BFTextField<30>( HistoricalType, &s_FldProp_HistoricalType ); break; 
         case 40004409: pField = new BFTextField_60( InventorySummHeading, &s_FldProp_InventorySummHeading ); break; 
         case 40004410: pField = new BFDateField( LastIntAccDate, &s_FldProp_LastIntAccDate ); break; 
         case 40004411: pField = new BFTextField_6( IntAccrualMthd, &s_FldProp_IntAccrualMthd ); break; 
         case 40004412: pField = new BFNumericField( DailyFeeRid, &s_FldProp_DailyFeeRid ); break; 
         case 40004413: pField = new BFTextField_60( GuarStatus, &s_FldProp_GuarStatus ); break; 
         case 40004414: pField = new BFTextField_60( FndMrgRedCod, &s_FldProp_FndMrgRedCod ); break; 
         case 40004415: pField = new BFTextField_60( ExclFeeCode, &s_FldProp_ExclFeeCode ); break; 
         case 40004416: pField = new BFTextField_2( AllocAtCost, &s_FldProp_AllocAtCost ); break; 
         case 40004418: pField = new BFTextField_1( Networkcontrolind, &s_FldProp_Networkcontrolind ); break; 
         case 40004419: pField = new BFTextField_1( NSCCCompliant, &s_FldProp_NSCCCompliant ); break; 
         case 40004420: pField = new BFTextField_60( ClearingFirm, &s_FldProp_ClearingFirm ); break; 
         case 40004421: pField = new BFTextField_60( NSCCCurrencyList, &s_FldProp_NSCCCurrencyList ); break; 
         case 40004422: pField = new BFTextField_60( NSCCPaymentFor, &s_FldProp_NSCCPaymentFor ); break; 
         case 40004424: pField = new BFTextField_1( FileTypeD, &s_FldProp_FileTypeD ); break; 
         case 40004425: pField = new BFTextField_60( PaymentInstructionsPaymentFor, &s_FldProp_PaymentInstructionsPaymentFor ); break; 
         case 40004426: pField = new BFTextField_1( FileTypeJ, &s_FldProp_FileTypeJ ); break; 
         case 40004427: pField = new BFTextField_1( NSCCDummyDistributionPayType, &s_FldProp_NSCCDummyDistributionPayType ); break; 
         case 40004428: pField = new BFTextField_1( NSCCMFRDistributionPay, &s_FldProp_NSCCMFRDistributionPay ); break; 
         case 40004429: pField = new BFDateField( LiveRunDate, &s_FldProp_LiveRunDate ); break; 
         case 40004431: pField = new BFTextField_1( UnsettleWithAMSFund, &s_FldProp_UnsettleWithAMSFund ); break; 
         case 40004432: pField = new BFTextField_1( PendingWithAMSFund, &s_FldProp_PendingWithAMSFund ); break; 
         case 40004433: pField = new BFTextField_1( CashDateXEdit, &s_FldProp_CashDateXEdit ); break; 
         case 40004434: pField = new BFTextField_1( AMSEligible, &s_FldProp_AMSEligible ); break; 
         case 40004435: pField = new BFTextField_60( RiskLevel, &s_FldProp_RiskLevel ); break; 
         case 40004436: pField = new BFTextField_60( HighestEntityRisk, &s_FldProp_HighestEntityRisk ); break; 
         case 40004437: pField = new BFTextField_60( EntityRiskLevel, &s_FldProp_EntityRiskLevel ); break; 
         case 40004439: pField = new BFTextField_1( LSIFPAC, &s_FldProp_LSIFPAC ); break; 
         case 40004440: pField = new BFTextField<100>( STTRFeeExclRedCodeList, &s_FldProp_STTRFeeExclRedCodeList ); break; 
         case 40004441: pField = new BFDecimalField( FedClawback, &s_FldProp_FedClawback ); break; 
         case 40004442: pField = new BFDecimalField( ProvClawback, &s_FldProp_ProvClawback ); break; 
         case 40004444: pField = new BFTextField_60( TraceNo, &s_FldProp_TraceNo ); break; 
         case 40004445: pField = new BFDateField( MatureDate, &s_FldProp_MatureDate ); break; 
         case 40004446: pField = new BFTextField_60( ReceiptStatus, &s_FldProp_ReceiptStatus ); break; 
         case 40004447: pField = new BFTextField_60( TaxJuris, &s_FldProp_TaxJuris ); break; 
         case 40004448: pField = new BFDecimalField( TotalCBFFreeUnits, &s_FldProp_TotalCBFFreeUnits ); break; 
         case 40004449: pField = new BFIntegerField( ReceiptNumber, &s_FldProp_ReceiptNumber ); break; 
         case 40004450: pField = new BFTextField<3>( ShortTermFee, &s_FldProp_ShortTermFee ); break; 
         case 40004452: pField = new BFTextField<3>( ActiveOnly, &s_FldProp_ActiveOnly ); break; 
         case 40004453: pField = new BFTextField_60( AWD_OBJECT_ID, &s_FldProp_AWD_OBJECT_ID ); break; 
         case 40004454: pField = new BFTextField<3>( isLSIF, &s_FldProp_isLSIF ); break; 
         case 40004455: pField = new BFTextField_60( HypoRedSummaryAmountHeadingSetWithLSIF, &s_FldProp_HypoRedSummaryAmountHeadingSetWithLSIF ); break; 
         case 40004456: pField = new BFTextField_60( HypoRedSummaryUnitsHeadingSetWithLSIF, &s_FldProp_HypoRedSummaryUnitsHeadingSetWithLSIF ); break; 
         case 40004457: pField = new BFTextField_60( HypoRedTotalHeadingSetWithLSIF, &s_FldProp_HypoRedTotalHeadingSetWithLSIF ); break; 
         case 40004462: pField = new BFDecimalField( AdditionalProvClawback, &s_FldProp_AdditionalProvClawback ); break; 
         case 40004467: pField = new BFTextField_60( ProductCtrlCode, &s_FldProp_ProductCtrlCode ); break; 
         case 40004469: pField = new BFTextField_60( ActiveCode, &s_FldProp_ActiveCode ); break; 
         case 40004478: pField = new BFTextField<100>( AWDRemark, &s_FldProp_AWDRemark ); break; 
         case 40004479: pField = new BFTextField_60( HypoRedDetailAmountHeadingSetWithLSIF, &s_FldProp_HypoRedDetailAmountHeadingSetWithLSIF ); break; 
         case 40004480: pField = new BFTextField_60( HypoRedDetailUnitsHeadingSetWithLSIF, &s_FldProp_HypoRedDetailUnitsHeadingSetWithLSIF ); break; 
         case 40004484: pField = new BFTextField_60( LSIFCode, &s_FldProp_LSIFCode ); break; 
         case 40004488: pField = new BFIntegerField( AvailOnInput, &s_FldProp_AvailOnInput ); break; 
         case 40004489: pField = new BFTextField_60( LSIFDSCOverrideCode, &s_FldProp_LSIFDSCOverrideCode ); break; 
         case 40004493: pField = new BFTextField_60( TradeRolloverAttribute, &s_FldProp_TradeRolloverAttribute ); break; 
         case 40004495: pField = new BFTextField_1( AmountTypeRollover, &s_FldProp_AmountTypeRollover ); break; 
         case 40004498: pField = new BFDecimalField( OriginalTotalUnits, &s_FldProp_OriginalTotalUnits ); break; 
         case 40004499: pField = new BFTextField_60( InventoryDetailsHeading, &s_FldProp_InventoryDetailsHeading ); break; 
         case 40004500: pField = new BFTextField_1( RedCodeChrERSTTRFeeXEdit, &s_FldProp_RedCodeChrERSTTRFeeXEdit ); break; 
         case 40004501: pField = new BFTextField_1( FromToFundClassChrERSTTRFeeXEdit, &s_FldProp_FromToFundClassChrERSTTRFeeXEdit ); break; 
         case 40004503: pField = new BFTextField_1( StopCommissionRebate, &s_FldProp_StopCommissionRebate ); break; 
         case 40004505: pField = new BFDecimalField( ClawBackTotal, &s_FldProp_ClawBackTotal ); break; 
         case 40004509: pField = new BFDecimalField( DomesticACBAmtBefore, &s_FldProp_DomesticACBAmtBefore ); break; 
         case 40004510: pField = new BFDecimalField( DomesticPrcntBefore, &s_FldProp_DomesticPrcntBefore ); break; 
         case 40004511: pField = new BFDecimalField( DomesticACBCAmtAfter, &s_FldProp_DomesticACBCAmtAfter ); break; 
         case 40004512: pField = new BFDecimalField( DomesticPrcntAfter, &s_FldProp_DomesticPrcntAfter ); break; 
         case 40004513: pField = new BFDecimalField( FrgnACBAmtBefore, &s_FldProp_FrgnACBAmtBefore ); break; 
         case 40004514: pField = new BFDecimalField( FrgnPrcntBefore, &s_FldProp_FrgnPrcntBefore ); break; 
         case 40004515: pField = new BFDecimalField( FrgnACBAmtAfter, &s_FldProp_FrgnACBAmtAfter ); break; 
         case 40004517: pField = new BFDecimalField( FrgnPrcntAfter, &s_FldProp_FrgnPrcntAfter ); break; 
         case 40004518: pField = new BFDecimalField( FrgnAllowedPrcntBefore, &s_FldProp_FrgnAllowedPrcntBefore ); break; 
         case 40004519: pField = new BFDecimalField( FrgnAllowedAmtBefore, &s_FldProp_FrgnAllowedAmtBefore ); break; 
         case 40004520: pField = new BFTextField<20>( HypoTransType, &s_FldProp_HypoTransType ); break; 
         case 40004521: pField = new BFDecimalField( FrgnAllowedAmtAfter, &s_FldProp_FrgnAllowedAmtAfter ); break; 
         case 40004522: pField = new BFDecimalField( FrgnAllowedPrcntAfter, &s_FldProp_FrgnAllowedPrcntAfter ); break; 
         case 40004523: pField = new BFDecimalField( ACBTotalPrcntAfter, &s_FldProp_ACBTotalPrcntAfter ); break; 
         case 40004524: pField = new BFDecimalField( ACBTotalPrcntBefore, &s_FldProp_ACBTotalPrcntBefore ); break; 
         case 40004525: pField = new BFDecimalField( ACBTotalAmtBefore, &s_FldProp_ACBTotalAmtBefore ); break; 
         case 40004526: pField = new BFDecimalField( ACBTotalAmtAfter, &s_FldProp_ACBTotalAmtAfter ); break; 
         case 40004529: pField = new BFDecimalField( LSIFUnitsAvail, &s_FldProp_LSIFUnitsAvail ); break; 
         case 40004532: pField = new BFTextField_1( EqualizationActive, &s_FldProp_EqualizationActive ); break; 
         case 40004533: pField = new BFTextField_60( FromFundName, &s_FldProp_FromFundName ); break; 
         case 40004534: pField = new BFTextField_60( ToFundName, &s_FldProp_ToFundName ); break; 
         case 40004535: pField = new BFTextField_60( IDAccess, &s_FldProp_IDAccess ); break; 
         case 40004540: pField = new BFTextField<3>( DistribCoopAgrmnt, &s_FldProp_DistribCoopAgrmnt ); break; 
         case 40004549: pField = new BFTextField_60( ShrFundSpAgrmntHeading, &s_FldProp_ShrFundSpAgrmntHeading ); break; 
         case 40004550: pField = new BFTextField<20>( FundSponsorFeeModelUsing, &s_FldProp_FundSponsorFeeModelUsing ); break; 
         case 40004551: pField = new BFTextField<20>( FundSponsorFeeModelLabel, &s_FldProp_FundSponsorFeeModelLabel ); break; 
         case 40004552: pField = new BFTextField<20>( FundSponsorFeeModelSearchCriteria, &s_FldProp_FundSponsorFeeModelSearchCriteria ); break; 
         case 40004553: pField = new BFTextField_60( FundSponsorFeeModelSearchCriteriaNo, &s_FldProp_FundSponsorFeeModelSearchCriteriaNo ); break; 
         case 40004556: pField = new BFDecimalField( DeregAmtYrToDate, &s_FldProp_DeregAmtYrToDate ); break; 
         case 40004557: pField = new BFIntegerField( TaxExemptId, &s_FldProp_TaxExemptId ); break; 
         case 40004558: pField = new BFTextField_60( TaxExType, &s_FldProp_TaxExType ); break; 
         case 40004559: pField = new BFDecimalField( ExemptAmtOrig, &s_FldProp_ExemptAmtOrig ); break; 
         case 40004560: pField = new BFDecimalField( ExemptAmountUsed, &s_FldProp_ExemptAmountUsed ); break; 
         case 40004562: pField = new BFDecimalField( ExemptAmtRemain, &s_FldProp_ExemptAmtRemain ); break; 
         case 40004571: pField = new BFTextField<20>( StopRedSettle, &s_FldProp_StopRedSettle ); break; 
         case 40004572: pField = new BFTextField<80>( RegistrationInfo, &s_FldProp_RegistrationInfo ); break; 
         case 40004574: pField = new BFTextField<3>( ShrFndSpAgrExists, &s_FldProp_ShrFndSpAgrExists ); break; 
         case 40004576: pField = new BFDecimalField( EligibleRedempTotal, &s_FldProp_EligibleRedempTotal ); break; 
         case 40004577: pField = new BFDecimalField( EligibleNetTotal, &s_FldProp_EligibleNetTotal ); break; 
         case 40004578: pField = new BFIntegerField( EligibleCount, &s_FldProp_EligibleCount ); break; 
         case 40004579: pField = new BFTextField_60( RegisteredTaxTypes, &s_FldProp_RegisteredTaxTypes ); break; 
         case 40004581: pField = new BFDecimalField( TaxExemptAmt, &s_FldProp_TaxExemptAmt ); break; 
         case 40004582: pField = new BFTextField_60( TaxExemptAuthorizationHeading, &s_FldProp_TaxExemptAuthorizationHeading ); break; 
         case 40004583: pField = new BFTextField_60( TradeFeeTypeList, &s_FldProp_TradeFeeTypeList ); break; 
         case 40004584: pField = new BFTextField_60( FeeModelCode, &s_FldProp_FeeModelCode ); break; 
         case 40004585: pField = new BFTextField_60( RefNum, &s_FldProp_RefNum ); break; 
         case 40004586: pField = new BFTextField_60( FundWKN, &s_FldProp_FundWKN ); break; 
         case 40004587: pField = new BFTextField_60( FundISIN, &s_FldProp_FundISIN ); break; 
         case 40004588: pField = new BFTextField_60( FundToWKN, &s_FldProp_FundToWKN ); break; 
         case 40004590: pField = new BFTextField_60( FundToISIN, &s_FldProp_FundToISIN ); break; 
         case 40004591: pField = new BFTextField_60( AcqFeeOption, &s_FldProp_AcqFeeOption ); break; 
         case 40004592: pField = new BFTextField_1( SettleDateOverriden, &s_FldProp_SettleDateOverriden ); break; 
         case 40004593: pField = new BFTextField_60( ValidSettleCurr, &s_FldProp_ValidSettleCurr ); break; 
         case 40004594: pField = new BFTextField_60( UnitsCal, &s_FldProp_UnitsCal ); break; 
         case 40004595: pField = new BFTextField_1( PUEVCapable, &s_FldProp_PUEVCapable ); break; 
         case 40004597: pField = new BFTextField_1( ForceVerify, &s_FldProp_ForceVerify ); break; 
         case 40004598: pField = new BFTextField_60( FndSpFeeModelID, &s_FldProp_FndSpFeeModelID ); break; 
      }
      return pField;
   }
}
