
#ifndef SOM_ACBL0044_xh
#define SOM_ACBL0044_xh

class ACBL0044;

#define ACBL0044_MajorVersion 0
#define ACBL0044_MinorVersion 0

/*
 * Passthru lines: File: "C.xh", "before"
 */


/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_AWDView_xh
#include <view.xh>
#endif

#ifndef ACBL0044_API
#define ACBL0044_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class somf_MLinkable;
class AWDConnection;
class AWDException;
class ACBL0044Record;
typedef
struct ACBL0044_ACBL0044INPUT {
char  countrycd[3];
char  queuecd[8];
char  objectkey[29];
char  cont_flag;
char  cont_statcd[10];
} ACBL0044_ACBL0044INPUT;
typedef
struct ACBL0044_ACBL0044INPUT* ACBL0044_PACBL0044INPUT;
typedef
struct ACBL0044_ACBL0044OUTPUT {
char  return_code[7];
char  return_message[78];
char  view_complete;
char  cont_queuecd[8];
char  cont_statcd[10];
} ACBL0044_ACBL0044OUTPUT;
typedef
struct ACBL0044_ACBL0044OUTPUT* ACBL0044_PACBL0044OUTPUT;

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ACBL0044INPUT
    #ifdef ACBL0044INPUT
        #undef ACBL0044INPUT
        #define SOMTGD_ACBL0044INPUT 1
    #else
        #define ACBL0044INPUT ACBL0044_ACBL0044INPUT
    #endif /* ACBL0044INPUT */
#endif /* SOMTGD_ACBL0044INPUT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PACBL0044INPUT
    #ifdef PACBL0044INPUT
        #undef PACBL0044INPUT
        #define SOMTGD_PACBL0044INPUT 1
    #else
        #define PACBL0044INPUT ACBL0044_PACBL0044INPUT
    #endif /* PACBL0044INPUT */
#endif /* SOMTGD_PACBL0044INPUT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_ACBL0044OUTPUT
    #ifdef ACBL0044OUTPUT
        #undef ACBL0044OUTPUT
        #define SOMTGD_ACBL0044OUTPUT 1
    #else
        #define ACBL0044OUTPUT ACBL0044_ACBL0044OUTPUT
    #endif /* ACBL0044OUTPUT */
#endif /* SOMTGD_ACBL0044OUTPUT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PACBL0044OUTPUT
    #ifdef PACBL0044OUTPUT
        #undef PACBL0044OUTPUT
        #define SOMTGD_PACBL0044OUTPUT 1
    #else
        #define PACBL0044OUTPUT ACBL0044_PACBL0044OUTPUT
    #endif /* PACBL0044OUTPUT */
#endif /* SOMTGD_PACBL0044OUTPUT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#endif /* SOM_DONT_USE_SHORT_NAMES */

/*
 * End of user-defined types.
 */

/* A procedure to create the ACBL0044 Class */
SOMEXTERN
#if (defined(SOM_Module_acbl0044_Source) || defined(ACBL0044_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_ACBL0044))
WIN32_DLLEXPORT
#else
WIN32_DLLIMPORT
#endif
SOMClass * SOMLINK ACBL0044NewClass(
		integer4,
		integer4 );

/* The API to the ACBL0044 class object, and the methods it introduces. */
SOMEXTERN struct ACBL0044ClassDataStructure {
	SOMClass *classObject;
	somMToken setContinuation;
	somMToken setContinuationStatus;
	somMToken setQueue;
	somMToken setObjectKey;
}
#if !(defined(SOM_Module_acbl0044_Source) || defined(ACBL0044_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_ACBL0044))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK ACBL0044ClassData;
#define _ACBL0044 ACBL0044ClassData.classObject

/* The API to parentMtabs for ACBL0044, and the instance data it introduces. */
SOMEXTERN struct ACBL0044CClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
}
#if !(defined(SOM_Module_acbl0044_Source) || defined(ACBL0044_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_ACBL0044))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK ACBL0044CClassData;

/*
 * -- Typedefs for ACBL0044 Method Procedures
 */
extern "C" {
typedef void   SOMLINK somTP_ACBL0044_setContinuation(ACBL0044 *somSelf, Environment *ev,
		boolean fContinue);
typedef somTP_ACBL0044_setContinuation *somTD_ACBL0044_setContinuation;
typedef void   SOMLINK somTP_ACBL0044_setContinuationStatus(ACBL0044 *somSelf, Environment *ev,
		string pszStatcd);
typedef somTP_ACBL0044_setContinuationStatus *somTD_ACBL0044_setContinuationStatus;
typedef void   SOMLINK somTP_ACBL0044_setQueue(ACBL0044 *somSelf, Environment *ev,
		string pszQueuecd);
typedef somTP_ACBL0044_setQueue *somTD_ACBL0044_setQueue;
typedef void   SOMLINK somTP_ACBL0044_setObjectKey(ACBL0044 *somSelf, Environment *ev,
		string pszObjectKey);
typedef somTP_ACBL0044_setObjectKey *somTD_ACBL0044_setObjectKey;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef string   SOMLINK somTP_ACBL0044_app(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_app *somTD_ACBL0044_app;
typedef void   SOMLINK somTP_ACBL0044_setApp(ACBL0044 *somSelf, Environment *ev,
		string app);
typedef somTP_ACBL0044_setApp *somTD_ACBL0044_setApp;
typedef string   SOMLINK somTP_ACBL0044_targetApp(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_targetApp *somTD_ACBL0044_targetApp;
typedef void   SOMLINK somTP_ACBL0044_setTargetApp(ACBL0044 *somSelf, Environment *ev,
		string target);
typedef somTP_ACBL0044_setTargetApp *somTD_ACBL0044_setTargetApp;
typedef string   SOMLINK somTP_ACBL0044_name(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_name *somTD_ACBL0044_name;
typedef void   SOMLINK somTP_ACBL0044_setName(ACBL0044 *somSelf, Environment *ev,
		string aName);
typedef somTP_ACBL0044_setName *somTD_ACBL0044_setName;
typedef unsigned long   SOMLINK somTP_ACBL0044_size(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_size *somTD_ACBL0044_size;
typedef void   SOMLINK somTP_ACBL0044_setSize(ACBL0044 *somSelf, Environment *ev,
		unsigned long size);
typedef somTP_ACBL0044_setSize *somTD_ACBL0044_setSize;
typedef void*   SOMLINK somTP_ACBL0044_sendData(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_sendData *somTD_ACBL0044_sendData;
typedef void   SOMLINK somTP_ACBL0044_setSendData(ACBL0044 *somSelf, Environment *ev,
		void* data);
typedef somTP_ACBL0044_setSendData *somTD_ACBL0044_setSendData;
typedef AWDView_view_type   SOMLINK somTP_ACBL0044_mode(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_mode *somTD_ACBL0044_mode;
typedef void   SOMLINK somTP_ACBL0044_setMode(ACBL0044 *somSelf, Environment *ev,
		AWDView_view_type viewtype);
typedef somTP_ACBL0044_setMode *somTD_ACBL0044_setMode;
typedef unsigned long   SOMLINK somTP_ACBL0044_hwndNotify(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_hwndNotify *somTD_ACBL0044_hwndNotify;
typedef void   SOMLINK somTP_ACBL0044_sethwndNotify(ACBL0044 *somSelf, Environment *ev,
		unsigned long hwndNotify);
typedef somTP_ACBL0044_sethwndNotify *somTD_ACBL0044_sethwndNotify;
typedef unsigned long   SOMLINK somTP_ACBL0044_returnMsg(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_returnMsg *somTD_ACBL0044_returnMsg;
typedef void   SOMLINK somTP_ACBL0044_setReturnMsg(ACBL0044 *somSelf, Environment *ev,
		unsigned long msg);
typedef somTP_ACBL0044_setReturnMsg *somTD_ACBL0044_setReturnMsg;
typedef void*   SOMLINK somTP_ACBL0044_pfnCallBack(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_pfnCallBack *somTD_ACBL0044_pfnCallBack;
typedef void   SOMLINK somTP_ACBL0044_setpfnCallBack(ACBL0044 *somSelf, Environment *ev,
		void* pfnCallback);
typedef somTP_ACBL0044_setpfnCallBack *somTD_ACBL0044_setpfnCallBack;
typedef unsigned long   SOMLINK somTP_ACBL0044_timeOut(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_timeOut *somTD_ACBL0044_timeOut;
typedef void   SOMLINK somTP_ACBL0044_setTimeOut(ACBL0044 *somSelf, Environment *ev,
		unsigned long timeout);
typedef somTP_ACBL0044_setTimeOut *somTD_ACBL0044_setTimeOut;
typedef string   SOMLINK somTP_ACBL0044_host(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_host *somTD_ACBL0044_host;
typedef void   SOMLINK somTP_ACBL0044_setHost(ACBL0044 *somSelf, Environment *ev,
		string host);
typedef somTP_ACBL0044_setHost *somTD_ACBL0044_setHost;
typedef long   SOMLINK somTP_ACBL0044_queue(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_queue *somTD_ACBL0044_queue;
typedef void   SOMLINK somTP_ACBL0044_setMessageQueue(ACBL0044 *somSelf, Environment *ev,
		long que);
typedef somTP_ACBL0044_setMessageQueue *somTD_ACBL0044_setMessageQueue;
typedef void*   SOMLINK somTP_ACBL0044_receiveData(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_receiveData *somTD_ACBL0044_receiveData;
typedef void   SOMLINK somTP_ACBL0044_setReceiveData(ACBL0044 *somSelf, Environment *ev,
		void* pRData);
typedef somTP_ACBL0044_setReceiveData *somTD_ACBL0044_setReceiveData;
typedef unsigned long   SOMLINK somTP_ACBL0044_numRepeats(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_numRepeats *somTD_ACBL0044_numRepeats;
typedef void   SOMLINK somTP_ACBL0044_setNumRepeats(ACBL0044 *somSelf, Environment *ev,
		unsigned long repeats);
typedef somTP_ACBL0044_setNumRepeats *somTD_ACBL0044_setNumRepeats;
typedef unsigned long   SOMLINK somTP_ACBL0044_fixedLength(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_fixedLength *somTD_ACBL0044_fixedLength;
typedef void   SOMLINK somTP_ACBL0044_setFixedLength(ACBL0044 *somSelf, Environment *ev,
		unsigned long length);
typedef somTP_ACBL0044_setFixedLength *somTD_ACBL0044_setFixedLength;
typedef unsigned long   SOMLINK somTP_ACBL0044_repeatLength(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_repeatLength *somTD_ACBL0044_repeatLength;
typedef void   SOMLINK somTP_ACBL0044_setRepeatLength(ACBL0044 *somSelf, Environment *ev,
		unsigned long length);
typedef somTP_ACBL0044_setRepeatLength *somTD_ACBL0044_setRepeatLength;
typedef unsigned long   SOMLINK somTP_ACBL0044_currentIndex(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_currentIndex *somTD_ACBL0044_currentIndex;
typedef void   SOMLINK somTP_ACBL0044_setCurrentIndex(ACBL0044 *somSelf, Environment *ev,
		unsigned long index);
typedef somTP_ACBL0044_setCurrentIndex *somTD_ACBL0044_setCurrentIndex;
typedef void*   SOMLINK somTP_ACBL0044_lastView(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_lastView *somTD_ACBL0044_lastView;
typedef void   SOMLINK somTP_ACBL0044_setLastView(ACBL0044 *somSelf, Environment *ev,
		void* pRData);
typedef somTP_ACBL0044_setLastView *somTD_ACBL0044_setLastView;
typedef void*   SOMLINK somTP_ACBL0044_startData(ACBL0044 *somSelf, Environment *ev,
		string app,
		string targetapp,
		string viewname,
		void* senddata,
		unsigned long size,
		AWDView_view_type mode,
		void* pfn,
		unsigned long timeout,
		unsigned long hwndnotify,
		unsigned long returnmsg,
		long queue,
		string host);
typedef somTP_ACBL0044_startData *somTD_ACBL0044_startData;
typedef void*   SOMLINK somTP_ACBL0044_start(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_start *somTD_ACBL0044_start;
typedef void*   SOMLINK somTP_ACBL0044_getRecord(ACBL0044 *somSelf, Environment *ev,
		void* pv,
		unsigned long userIndex,
		AWDView_index_type indexvalue);
typedef somTP_ACBL0044_getRecord *somTD_ACBL0044_getRecord;
typedef boolean   SOMLINK somTP_ACBL0044_check(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_check *somTD_ACBL0044_check;
typedef void   SOMLINK somTP_ACBL0044_checkForException(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_checkForException *somTD_ACBL0044_checkForException;
typedef void   SOMLINK somTP_ACBL0044_setException(ACBL0044 *somSelf, Environment *ev,
		unsigned short excType,
		string pszFile,
		unsigned short usLine,
		string pszMessage,
		unsigned short usReturnCd);
typedef somTP_ACBL0044_setException *somTD_ACBL0044_setException;
typedef void   SOMLINK somTP_ACBL0044_setViewMessage(ACBL0044 *somSelf, Environment *ev,
		string pszMessage);
typedef somTP_ACBL0044_setViewMessage *somTD_ACBL0044_setViewMessage;
typedef string   SOMLINK somTP_ACBL0044_viewMessage(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_viewMessage *somTD_ACBL0044_viewMessage;
typedef void*   SOMLINK somTP_ACBL0044_startString(ACBL0044 *somSelf, Environment *ev,
		string pszSetupString);
typedef somTP_ACBL0044_startString *somTD_ACBL0044_startString;
typedef boolean   SOMLINK somTP_ACBL0044_scanArgString(ACBL0044 *somSelf, Environment *ev,
		string pszSetupString,
		string pszKey,
		string pszValue,
		unsigned long* pcbValue);
typedef somTP_ACBL0044_scanArgString *somTD_ACBL0044_scanArgString;
typedef boolean   SOMLINK somTP_ACBL0044_isComplete(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_isComplete *somTD_ACBL0044_isComplete;
typedef void*   SOMLINK somTP_ACBL0044_restart(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_restart *somTD_ACBL0044_restart;
typedef void*   SOMLINK somTP_ACBL0044_resolveIndex(ACBL0044 *somSelf, Environment *ev,
		unsigned long* ulIndex);
typedef somTP_ACBL0044_resolveIndex *somTD_ACBL0044_resolveIndex;
typedef boolean   SOMLINK somTP_ACBL0044_addData(ACBL0044 *somSelf, Environment *ev,
		void* pRcvData,
		unsigned long ulNumberofRepeats);
typedef somTP_ACBL0044_addData *somTD_ACBL0044_addData;
typedef void*   SOMLINK somTP_ACBL0044_buffer(ACBL0044 *somSelf, Environment *ev,
		AWDView_index_type index,
		unsigned long theindex,
		unsigned long* pulRepeats);
typedef somTP_ACBL0044_buffer *somTD_ACBL0044_buffer;
typedef unsigned long   SOMLINK somTP_ACBL0044_errCode(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_errCode *somTD_ACBL0044_errCode;
typedef string   SOMLINK somTP_ACBL0044_errMsg(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_errMsg *somTD_ACBL0044_errMsg;
typedef AWDConnection*   SOMLINK somTP_ACBL0044_setConnection(ACBL0044 *somSelf, Environment *ev,
		AWDConnection* con);
typedef somTP_ACBL0044_setConnection *somTD_ACBL0044_setConnection;
typedef AWDConnection*   SOMLINK somTP_ACBL0044_localConnection(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_localConnection *somTD_ACBL0044_localConnection;
typedef void   SOMLINK somTP_ACBL0044_setAutoRestart(ACBL0044 *somSelf, Environment *ev,
		boolean flag);
typedef somTP_ACBL0044_setAutoRestart *somTD_ACBL0044_setAutoRestart;
typedef boolean   SOMLINK somTP_ACBL0044_isAutoRestart(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_isAutoRestart *somTD_ACBL0044_isAutoRestart;
typedef void   SOMLINK somTP_ACBL0044_reset(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_reset *somTD_ACBL0044_reset;
typedef boolean   SOMLINK somTP_ACBL0044_validateInput(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_validateInput *somTD_ACBL0044_validateInput;
typedef void   SOMLINK somTP_ACBL0044_setPersistent(ACBL0044 *somSelf, Environment *ev,
		boolean flag);
typedef somTP_ACBL0044_setPersistent *somTD_ACBL0044_setPersistent;
typedef boolean   SOMLINK somTP_ACBL0044_isPersistent(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_isPersistent *somTD_ACBL0044_isPersistent;
typedef void   SOMLINK somTP_ACBL0044_setInProcess(ACBL0044 *somSelf, Environment *ev,
		boolean flag);
typedef somTP_ACBL0044_setInProcess *somTD_ACBL0044_setInProcess;
typedef boolean   SOMLINK somTP_ACBL0044_isInProcess(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_isInProcess *somTD_ACBL0044_isInProcess;
typedef void   SOMLINK somTP_ACBL0044_setPrimaryRc(ACBL0044 *somSelf, Environment *ev,
		unsigned long rc);
typedef somTP_ACBL0044_setPrimaryRc *somTD_ACBL0044_setPrimaryRc;
typedef unsigned long   SOMLINK somTP_ACBL0044_primaryRc(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_primaryRc *somTD_ACBL0044_primaryRc;
typedef void   SOMLINK somTP_ACBL0044_setSecondaryRc(ACBL0044 *somSelf, Environment *ev,
		unsigned long rc);
typedef somTP_ACBL0044_setSecondaryRc *somTD_ACBL0044_setSecondaryRc;
typedef unsigned long   SOMLINK somTP_ACBL0044_secondaryRc(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_secondaryRc *somTD_ACBL0044_secondaryRc;
typedef void   SOMLINK somTP_ACBL0044_somDefaultInit(ACBL0044 *somSelf,
		somInitCtrl* ctrl);
typedef somTP_ACBL0044_somDefaultInit *somTD_ACBL0044_somDefaultInit;
typedef void   SOMLINK somTP_ACBL0044_somDestruct(ACBL0044 *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef somTP_ACBL0044_somDestruct *somTD_ACBL0044_somDestruct;
typedef somf_MLinkable*   SOMLINK somTP_ACBL0044_somfMLinkableInit(ACBL0044 *somSelf, Environment *ev,
		somf_MLinkable* n,
		somf_MLinkable* p);
typedef somTP_ACBL0044_somfMLinkableInit *somTD_ACBL0044_somfMLinkableInit;
typedef somf_MLinkable*   SOMLINK somTP_ACBL0044_somfGetNext(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_somfGetNext *somTD_ACBL0044_somfGetNext;
typedef void   SOMLINK somTP_ACBL0044_somfSetNext(ACBL0044 *somSelf, Environment *ev,
		somf_MLinkable* aLink);
typedef somTP_ACBL0044_somfSetNext *somTD_ACBL0044_somfSetNext;
typedef somf_MLinkable*   SOMLINK somTP_ACBL0044_somfGetPrevious(ACBL0044 *somSelf, Environment *ev);
typedef somTP_ACBL0044_somfGetPrevious *somTD_ACBL0044_somfGetPrevious;
typedef void   SOMLINK somTP_ACBL0044_somfSetPrevious(ACBL0044 *somSelf, Environment *ev,
		somf_MLinkable* aLink);
typedef somTP_ACBL0044_somfSetPrevious *somTD_ACBL0044_somfSetPrevious;
typedef void   SOMLINK somTP_ACBL0044_somInit(ACBL0044 *somSelf);
typedef somTP_ACBL0044_somInit *somTD_ACBL0044_somInit;
typedef void   SOMLINK somTP_ACBL0044_somDefaultCopyInit(ACBL0044 *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044_somDefaultCopyInit *somTD_ACBL0044_somDefaultCopyInit;
typedef ACBL0044*   SOMLINK somTP_ACBL0044_somDefaultAssign(ACBL0044 *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044_somDefaultAssign *somTD_ACBL0044_somDefaultAssign;
typedef void   SOMLINK somTP_ACBL0044_somDefaultConstCopyInit(ACBL0044 *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044_somDefaultConstCopyInit *somTD_ACBL0044_somDefaultConstCopyInit;
typedef void   SOMLINK somTP_ACBL0044_somDefaultVCopyInit(ACBL0044 *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044_somDefaultVCopyInit *somTD_ACBL0044_somDefaultVCopyInit;
typedef void   SOMLINK somTP_ACBL0044_somDefaultConstVCopyInit(ACBL0044 *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044_somDefaultConstVCopyInit *somTD_ACBL0044_somDefaultConstVCopyInit;
typedef ACBL0044*   SOMLINK somTP_ACBL0044_somDefaultConstAssign(ACBL0044 *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044_somDefaultConstAssign *somTD_ACBL0044_somDefaultConstAssign;
typedef ACBL0044*   SOMLINK somTP_ACBL0044_somDefaultVAssign(ACBL0044 *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044_somDefaultVAssign *somTD_ACBL0044_somDefaultVAssign;
typedef ACBL0044*   SOMLINK somTP_ACBL0044_somDefaultConstVAssign(ACBL0044 *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044_somDefaultConstVAssign *somTD_ACBL0044_somDefaultConstVAssign;
typedef void   SOMLINK somTP_ACBL0044_somFree(ACBL0044 *somSelf);
typedef somTP_ACBL0044_somFree *somTD_ACBL0044_somFree;
typedef void   SOMLINK somTP_ACBL0044_somUninit(ACBL0044 *somSelf);
typedef somTP_ACBL0044_somUninit *somTD_ACBL0044_somUninit;
typedef SOMClass*   SOMLINK somTP_ACBL0044_somGetClass(ACBL0044 *somSelf);
typedef somTP_ACBL0044_somGetClass *somTD_ACBL0044_somGetClass;
typedef string   SOMLINK somTP_ACBL0044_somGetClassName(ACBL0044 *somSelf);
typedef somTP_ACBL0044_somGetClassName *somTD_ACBL0044_somGetClassName;
typedef long   SOMLINK somTP_ACBL0044_somGetSize(ACBL0044 *somSelf);
typedef somTP_ACBL0044_somGetSize *somTD_ACBL0044_somGetSize;
typedef boolean   SOMLINK somTP_ACBL0044_somIsA(ACBL0044 *somSelf,
		SOMClass* aClassObj);
typedef somTP_ACBL0044_somIsA *somTD_ACBL0044_somIsA;
typedef boolean   SOMLINK somTP_ACBL0044_somIsInstanceOf(ACBL0044 *somSelf,
		SOMClass* aClassObj);
typedef somTP_ACBL0044_somIsInstanceOf *somTD_ACBL0044_somIsInstanceOf;
typedef boolean   SOMLINK somTP_ACBL0044_somRespondsTo(ACBL0044 *somSelf,
		somId mId);
typedef somTP_ACBL0044_somRespondsTo *somTD_ACBL0044_somRespondsTo;
typedef boolean   SOMLINK somTP_ACBL0044_somDispatch(ACBL0044 *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_ACBL0044_somDispatch *somTD_ACBL0044_somDispatch;
typedef boolean   SOMLINK somTP_ACBL0044_somClassDispatch(ACBL0044 *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_ACBL0044_somClassDispatch *somTD_ACBL0044_somClassDispatch;
typedef boolean   SOMLINK somTP_ACBL0044_somCastObj(ACBL0044 *somSelf,
		SOMClass* cls);
typedef somTP_ACBL0044_somCastObj *somTD_ACBL0044_somCastObj;
typedef boolean   SOMLINK somTP_ACBL0044_somResetObj(ACBL0044 *somSelf);
typedef somTP_ACBL0044_somResetObj *somTD_ACBL0044_somResetObj;
typedef SOMObject*   SOMLINK somTP_ACBL0044_somPrintSelf(ACBL0044 *somSelf);
typedef somTP_ACBL0044_somPrintSelf *somTD_ACBL0044_somPrintSelf;
typedef void   SOMLINK somTP_ACBL0044_somDumpSelf(ACBL0044 *somSelf,
		long level);
typedef somTP_ACBL0044_somDumpSelf *somTD_ACBL0044_somDumpSelf;
typedef void   SOMLINK somTP_ACBL0044_somDumpSelfInt(ACBL0044 *somSelf,
		long level);
typedef somTP_ACBL0044_somDumpSelfInt *somTD_ACBL0044_somDumpSelfInt;
}

#endif /* ACBL0044_API */


/*
 * -- This emitter believes that method thunks are unavailable,
 * -- so somResolve will be called.
 */
#undef somresolve_
#define somresolve_(obj,mToken) (somResolve(obj,mToken))

/*
 * -- The C++ Wrapper Class for ACBL0044
 */
class ACBL0044 : public AWDView
{
public:

// ACBL0044::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_ACBL0044) ACBL0044NewClass(ACBL0044_MajorVersion,ACBL0044_MinorVersion);
   return (void*)
      SOM_Resolve(_ACBL0044,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_ACBL0044));
}

// ACBL0044::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

ACBL0044()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (ACBL0044CClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

ACBL0044(ACBL0044* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (ACBL0044CClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

ACBL0044(const ACBL0044* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (ACBL0044CClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: setContinuation */
void   setContinuation(Environment *ev,
		boolean fContinue)
{
   SOM_ResolveD(this,ACBL0044,ACBL0044,setContinuation)
	(this, ev,fContinue);
}


/* method: setContinuationStatus */
void   setContinuationStatus(Environment *ev,
		string pszStatcd)
{
   SOM_ResolveD(this,ACBL0044,ACBL0044,setContinuationStatus)
	(this, ev,pszStatcd);
}


/* method: setQueue */
void   setQueue(Environment *ev,
		string pszQueuecd)
{
   SOM_ResolveD(this,ACBL0044,ACBL0044,setQueue)
	(this, ev,pszQueuecd);
}


/* method: setObjectKey */
void   setObjectKey(Environment *ev,
		string pszObjectKey)
{
   SOM_ResolveD(this,ACBL0044,ACBL0044,setObjectKey)
	(this, ev,pszObjectKey);
}


/*
 * Reintroduce inherited methods
 */

/* method: app */
string   app(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,app)
	(this, ev);
}


/* method: setApp */
void   setApp(Environment *ev,
		string app)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setApp)
	(this, ev,app);
}


/* method: targetApp */
string   targetApp(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,targetApp)
	(this, ev);
}


/* method: setTargetApp */
void   setTargetApp(Environment *ev,
		string target)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setTargetApp)
	(this, ev,target);
}


/* method: name */
string   name(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,name)
	(this, ev);
}


/* method: setName */
void   setName(Environment *ev,
		string aName)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setName)
	(this, ev,aName);
}


/* method: size */
unsigned long   size(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,size)
	(this, ev);
}


/* method: setSize */
void   setSize(Environment *ev,
		unsigned long size)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setSize)
	(this, ev,size);
}


/* method: sendData */
void*   sendData(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,sendData)
	(this, ev);
}


/* method: setSendData */
void   setSendData(Environment *ev,
		void* data)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setSendData)
	(this, ev,data);
}


/* method: mode */
AWDView_view_type   mode(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,mode)
	(this, ev);
}


/* method: setMode */
void   setMode(Environment *ev,
		AWDView_view_type viewtype)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setMode)
	(this, ev,viewtype);
}


/* method: hwndNotify */
unsigned long   hwndNotify(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,hwndNotify)
	(this, ev);
}


/* method: sethwndNotify */
void   sethwndNotify(Environment *ev,
		unsigned long hwndNotify)
{
   SOM_ResolveD(this,ACBL0044,AWDView,sethwndNotify)
	(this, ev,hwndNotify);
}


/* method: returnMsg */
unsigned long   returnMsg(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,returnMsg)
	(this, ev);
}


/* method: setReturnMsg */
void   setReturnMsg(Environment *ev,
		unsigned long msg)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setReturnMsg)
	(this, ev,msg);
}


/* method: pfnCallBack */
void*   pfnCallBack(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,pfnCallBack)
	(this, ev);
}


/* method: setpfnCallBack */
void   setpfnCallBack(Environment *ev,
		void* pfnCallback)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setpfnCallBack)
	(this, ev,pfnCallback);
}


/* method: timeOut */
unsigned long   timeOut(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,timeOut)
	(this, ev);
}


/* method: setTimeOut */
void   setTimeOut(Environment *ev,
		unsigned long timeout)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setTimeOut)
	(this, ev,timeout);
}


/* method: host */
string   host(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,host)
	(this, ev);
}


/* method: setHost */
void   setHost(Environment *ev,
		string host)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setHost)
	(this, ev,host);
}


/* method: queue */
long   queue(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,queue)
	(this, ev);
}


/* method: setMessageQueue */
void   setMessageQueue(Environment *ev,
		long que)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setMessageQueue)
	(this, ev,que);
}


/* method: receiveData */
void*   receiveData(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,receiveData)
	(this, ev);
}


/* method: setReceiveData */
void   setReceiveData(Environment *ev,
		void* pRData)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setReceiveData)
	(this, ev,pRData);
}


/* method: numRepeats */
unsigned long   numRepeats(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,numRepeats)
	(this, ev);
}


/* method: setNumRepeats */
void   setNumRepeats(Environment *ev,
		unsigned long repeats)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setNumRepeats)
	(this, ev,repeats);
}


/* method: fixedLength */
unsigned long   fixedLength(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,fixedLength)
	(this, ev);
}


/* method: setFixedLength */
void   setFixedLength(Environment *ev,
		unsigned long length)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setFixedLength)
	(this, ev,length);
}


/* method: repeatLength */
unsigned long   repeatLength(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,repeatLength)
	(this, ev);
}


/* method: setRepeatLength */
void   setRepeatLength(Environment *ev,
		unsigned long length)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setRepeatLength)
	(this, ev,length);
}


/* method: currentIndex */
unsigned long   currentIndex(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,currentIndex)
	(this, ev);
}


/* method: setCurrentIndex */
void   setCurrentIndex(Environment *ev,
		unsigned long index)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setCurrentIndex)
	(this, ev,index);
}


/* method: lastView */
void*   lastView(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,lastView)
	(this, ev);
}


/* method: setLastView */
void   setLastView(Environment *ev,
		void* pRData)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setLastView)
	(this, ev,pRData);
}


/* method: startData */
void*   startData(Environment *ev,
		string app,
		string targetapp,
		string viewname,
		void* senddata,
		unsigned long size,
		AWDView_view_type mode,
		void* pfn,
		unsigned long timeout,
		unsigned long hwndnotify,
		unsigned long returnmsg,
		long queue,
		string host)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,startData)
	(this, ev,app,targetapp,viewname,senddata,size,mode,pfn,timeout,hwndnotify,returnmsg,queue,host);
}


/* method: start */
void*   start(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,start)
	(this, ev);
}


/* method: getRecord */
void*   getRecord(Environment *ev,
		void* pv,
		unsigned long userIndex,
		AWDView_index_type indexvalue)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,getRecord)
	(this, ev,pv,userIndex,indexvalue);
}


/* method: check */
boolean   check(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,check)
	(this, ev);
}


/* method: checkForException */
void   checkForException(Environment *ev)
{
   SOM_ResolveD(this,ACBL0044,AWDView,checkForException)
	(this, ev);
}


/* method: setException */
void   setException(Environment *ev,
		unsigned short excType,
		string pszFile,
		unsigned short usLine,
		string pszMessage,
		unsigned short usReturnCd)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setException)
	(this, ev,excType,pszFile,usLine,pszMessage,usReturnCd);
}


/* method: setViewMessage */
void   setViewMessage(Environment *ev,
		string pszMessage)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setViewMessage)
	(this, ev,pszMessage);
}


/* method: viewMessage */
string   viewMessage(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,viewMessage)
	(this, ev);
}


/* method: startString */
void*   startString(Environment *ev,
		string pszSetupString)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,startString)
	(this, ev,pszSetupString);
}


/* method: scanArgString */
boolean   scanArgString(Environment *ev,
		string pszSetupString,
		string pszKey,
		string pszValue,
		unsigned long* pcbValue)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,scanArgString)
	(this, ev,pszSetupString,pszKey,pszValue,pcbValue);
}


/* method: isComplete */
boolean   isComplete(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,isComplete)
	(this, ev);
}


/* method: restart */
void*   restart(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,restart)
	(this, ev);
}


/* method: resolveIndex */
void*   resolveIndex(Environment *ev,
		unsigned long* ulIndex)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,resolveIndex)
	(this, ev,ulIndex);
}


/* method: addData */
boolean   addData(Environment *ev,
		void* pRcvData,
		unsigned long ulNumberofRepeats)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,addData)
	(this, ev,pRcvData,ulNumberofRepeats);
}


/* method: buffer */
void*   buffer(Environment *ev,
		AWDView_index_type index,
		unsigned long theindex,
		unsigned long* pulRepeats)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,buffer)
	(this, ev,index,theindex,pulRepeats);
}


/* method: errCode */
unsigned long   errCode(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,errCode)
	(this, ev);
}


/* method: errMsg */
string   errMsg(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,errMsg)
	(this, ev);
}


/* method: setConnection */
AWDConnection*   setConnection(Environment *ev,
		AWDConnection* con)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,setConnection)
	(this, ev,con);
}


/* method: localConnection */
AWDConnection*   localConnection(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,localConnection)
	(this, ev);
}


/* method: setAutoRestart */
void   setAutoRestart(Environment *ev,
		boolean flag)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setAutoRestart)
	(this, ev,flag);
}


/* method: isAutoRestart */
boolean   isAutoRestart(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,isAutoRestart)
	(this, ev);
}


/* method: reset */
void   reset(Environment *ev)
{
   SOM_ResolveD(this,ACBL0044,AWDView,reset)
	(this, ev);
}


/* method: validateInput */
boolean   validateInput(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,validateInput)
	(this, ev);
}


/* method: setPersistent */
void   setPersistent(Environment *ev,
		boolean flag)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setPersistent)
	(this, ev,flag);
}


/* method: isPersistent */
boolean   isPersistent(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,isPersistent)
	(this, ev);
}


/* method: setInProcess */
void   setInProcess(Environment *ev,
		boolean flag)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setInProcess)
	(this, ev,flag);
}


/* method: isInProcess */
boolean   isInProcess(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,isInProcess)
	(this, ev);
}


/* method: setPrimaryRc */
void   setPrimaryRc(Environment *ev,
		unsigned long rc)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setPrimaryRc)
	(this, ev,rc);
}


/* method: primaryRc */
unsigned long   primaryRc(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,primaryRc)
	(this, ev);
}


/* method: setSecondaryRc */
void   setSecondaryRc(Environment *ev,
		unsigned long rc)
{
   SOM_ResolveD(this,ACBL0044,AWDView,setSecondaryRc)
	(this, ev,rc);
}


/* method: secondaryRc */
unsigned long   secondaryRc(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,AWDView,secondaryRc)
	(this, ev);
}


/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,ACBL0044,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,ACBL0044,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: somfMLinkableInit */
somf_MLinkable*   somfMLinkableInit(Environment *ev,
		somf_MLinkable* n,
		somf_MLinkable* p)
{
   return SOM_ResolveD(this,ACBL0044,somf_MLinkable,somfMLinkableInit)
	(this, ev,n,p);
}


/* method: somfGetNext */
somf_MLinkable*   somfGetNext(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,somf_MLinkable,somfGetNext)
	(this, ev);
}


/* method: somfSetNext */
void   somfSetNext(Environment *ev,
		somf_MLinkable* aLink)
{
   SOM_ResolveD(this,ACBL0044,somf_MLinkable,somfSetNext)
	(this, ev,aLink);
}


/* method: somfGetPrevious */
somf_MLinkable*   somfGetPrevious(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044,somf_MLinkable,somfGetPrevious)
	(this, ev);
}


/* method: somfSetPrevious */
void   somfSetPrevious(Environment *ev,
		somf_MLinkable* aLink)
{
   SOM_ResolveD(this,ACBL0044,somf_MLinkable,somfSetPrevious)
	(this, ev,aLink);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,ACBL0044,SOMObject,somInit)
	(this);
}


/* initializer method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,ACBL0044,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
ACBL0044*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,ACBL0044,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,ACBL0044,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,ACBL0044,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
ACBL0044*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
ACBL0044*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
ACBL0044*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,ACBL0044,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,ACBL0044,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   ACBL0044_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,ACBL0044,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,ACBL0044,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   ACBL0044_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,ACBL0044,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,ACBL0044,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somResetObj)
	(this);
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,ACBL0044,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,ACBL0044,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,ACBL0044,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* ACBL0044 */



#endif       /* SOM_ACBL0044_xh */

#ifndef SOM_ACBL0044Record_xh
#define SOM_ACBL0044Record_xh

class ACBL0044Record;

#define ACBL0044Record_MajorVersion 0
#define ACBL0044Record_MinorVersion 0

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_RECORD_xh
#include <view.xh>
#endif

#ifndef ACBL0044Record_API
#define ACBL0044Record_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
typedef
struct ACBL0044Record_ACBL0044BUFFER {
char  statcd[10];
char  queuecd[8];
char  passfailcd;
char  defflag;
} ACBL0044Record_ACBL0044BUFFER;
typedef
struct ACBL0044Record_ACBL0044BUFFER* ACBL0044Record_PACBL0044BUFFER;

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ACBL0044BUFFER
    #ifdef ACBL0044BUFFER
        #undef ACBL0044BUFFER
        #define SOMTGD_ACBL0044BUFFER 1
    #else
        #define ACBL0044BUFFER ACBL0044Record_ACBL0044BUFFER
    #endif /* ACBL0044BUFFER */
#endif /* SOMTGD_ACBL0044BUFFER */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PACBL0044BUFFER
    #ifdef PACBL0044BUFFER
        #undef PACBL0044BUFFER
        #define SOMTGD_PACBL0044BUFFER 1
    #else
        #define PACBL0044BUFFER ACBL0044Record_PACBL0044BUFFER
    #endif /* PACBL0044BUFFER */
#endif /* SOMTGD_PACBL0044BUFFER */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#endif /* SOM_DONT_USE_SHORT_NAMES */

/*
 * End of user-defined types.
 */

/* A procedure to create the ACBL0044Record Class */
SOMEXTERN
#if (defined(SOM_Module_acbl0044_Source) || defined(ACBL0044Record_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_ACBL0044Record))
WIN32_DLLEXPORT
#else
WIN32_DLLIMPORT
#endif
SOMClass * SOMLINK ACBL0044RecordNewClass(
		integer4,
		integer4 );

/* The API to the ACBL0044Record class object, and the methods it introduces. */
SOMEXTERN struct ACBL0044RecordClassDataStructure {
	SOMClass *classObject;
	somMToken defaultFlag;
	somMToken passFail;
	somMToken queue;
	somMToken status;
	somMToken setInfo;
}
#if !(defined(SOM_Module_acbl0044_Source) || defined(ACBL0044Record_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_ACBL0044Record))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK ACBL0044RecordClassData;
#define _ACBL0044Record ACBL0044RecordClassData.classObject

/* The API to parentMtabs for ACBL0044Record, and the instance data it introduces. */
SOMEXTERN struct ACBL0044RecordCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
}
#if !(defined(SOM_Module_acbl0044_Source) || defined(ACBL0044Record_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_ACBL0044Record))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK ACBL0044RecordCClassData;

/*
 * -- Typedefs for ACBL0044Record Method Procedures
 */
extern "C" {
typedef char   SOMLINK somTP_ACBL0044Record_defaultFlag(ACBL0044Record *somSelf, Environment *ev);
typedef somTP_ACBL0044Record_defaultFlag *somTD_ACBL0044Record_defaultFlag;
typedef char   SOMLINK somTP_ACBL0044Record_passFail(ACBL0044Record *somSelf, Environment *ev);
typedef somTP_ACBL0044Record_passFail *somTD_ACBL0044Record_passFail;
typedef string   SOMLINK somTP_ACBL0044Record_queue(ACBL0044Record *somSelf, Environment *ev);
typedef somTP_ACBL0044Record_queue *somTD_ACBL0044Record_queue;
typedef string   SOMLINK somTP_ACBL0044Record_status(ACBL0044Record *somSelf, Environment *ev);
typedef somTP_ACBL0044Record_status *somTD_ACBL0044Record_status;
typedef void   SOMLINK somTP_ACBL0044Record_setInfo(ACBL0044Record *somSelf, Environment *ev,
		ACBL0044Record_PACBL0044BUFFER p44Buf);
typedef somTP_ACBL0044Record_setInfo *somTD_ACBL0044Record_setInfo;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef void*   SOMLINK somTP_ACBL0044Record_buffer(ACBL0044Record *somSelf, Environment *ev);
typedef somTP_ACBL0044Record_buffer *somTD_ACBL0044Record_buffer;
typedef void   SOMLINK somTP_ACBL0044Record_setBuffer(ACBL0044Record *somSelf, Environment *ev,
		void* pv);
typedef somTP_ACBL0044Record_setBuffer *somTD_ACBL0044Record_setBuffer;
typedef void   SOMLINK somTP_ACBL0044Record_somDefaultInit(ACBL0044Record *somSelf,
		somInitCtrl* ctrl);
typedef somTP_ACBL0044Record_somDefaultInit *somTD_ACBL0044Record_somDefaultInit;
typedef void   SOMLINK somTP_ACBL0044Record_somDestruct(ACBL0044Record *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef somTP_ACBL0044Record_somDestruct *somTD_ACBL0044Record_somDestruct;
typedef somf_MLinkable*   SOMLINK somTP_ACBL0044Record_somfMLinkableInit(ACBL0044Record *somSelf, Environment *ev,
		somf_MLinkable* n,
		somf_MLinkable* p);
typedef somTP_ACBL0044Record_somfMLinkableInit *somTD_ACBL0044Record_somfMLinkableInit;
typedef somf_MLinkable*   SOMLINK somTP_ACBL0044Record_somfGetNext(ACBL0044Record *somSelf, Environment *ev);
typedef somTP_ACBL0044Record_somfGetNext *somTD_ACBL0044Record_somfGetNext;
typedef void   SOMLINK somTP_ACBL0044Record_somfSetNext(ACBL0044Record *somSelf, Environment *ev,
		somf_MLinkable* aLink);
typedef somTP_ACBL0044Record_somfSetNext *somTD_ACBL0044Record_somfSetNext;
typedef somf_MLinkable*   SOMLINK somTP_ACBL0044Record_somfGetPrevious(ACBL0044Record *somSelf, Environment *ev);
typedef somTP_ACBL0044Record_somfGetPrevious *somTD_ACBL0044Record_somfGetPrevious;
typedef void   SOMLINK somTP_ACBL0044Record_somfSetPrevious(ACBL0044Record *somSelf, Environment *ev,
		somf_MLinkable* aLink);
typedef somTP_ACBL0044Record_somfSetPrevious *somTD_ACBL0044Record_somfSetPrevious;
typedef void   SOMLINK somTP_ACBL0044Record_somInit(ACBL0044Record *somSelf);
typedef somTP_ACBL0044Record_somInit *somTD_ACBL0044Record_somInit;
typedef void   SOMLINK somTP_ACBL0044Record_somDefaultCopyInit(ACBL0044Record *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044Record_somDefaultCopyInit *somTD_ACBL0044Record_somDefaultCopyInit;
typedef ACBL0044Record*   SOMLINK somTP_ACBL0044Record_somDefaultAssign(ACBL0044Record *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044Record_somDefaultAssign *somTD_ACBL0044Record_somDefaultAssign;
typedef void   SOMLINK somTP_ACBL0044Record_somDefaultConstCopyInit(ACBL0044Record *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044Record_somDefaultConstCopyInit *somTD_ACBL0044Record_somDefaultConstCopyInit;
typedef void   SOMLINK somTP_ACBL0044Record_somDefaultVCopyInit(ACBL0044Record *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044Record_somDefaultVCopyInit *somTD_ACBL0044Record_somDefaultVCopyInit;
typedef void   SOMLINK somTP_ACBL0044Record_somDefaultConstVCopyInit(ACBL0044Record *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044Record_somDefaultConstVCopyInit *somTD_ACBL0044Record_somDefaultConstVCopyInit;
typedef ACBL0044Record*   SOMLINK somTP_ACBL0044Record_somDefaultConstAssign(ACBL0044Record *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044Record_somDefaultConstAssign *somTD_ACBL0044Record_somDefaultConstAssign;
typedef ACBL0044Record*   SOMLINK somTP_ACBL0044Record_somDefaultVAssign(ACBL0044Record *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044Record_somDefaultVAssign *somTD_ACBL0044Record_somDefaultVAssign;
typedef ACBL0044Record*   SOMLINK somTP_ACBL0044Record_somDefaultConstVAssign(ACBL0044Record *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0044Record_somDefaultConstVAssign *somTD_ACBL0044Record_somDefaultConstVAssign;
typedef void   SOMLINK somTP_ACBL0044Record_somFree(ACBL0044Record *somSelf);
typedef somTP_ACBL0044Record_somFree *somTD_ACBL0044Record_somFree;
typedef void   SOMLINK somTP_ACBL0044Record_somUninit(ACBL0044Record *somSelf);
typedef somTP_ACBL0044Record_somUninit *somTD_ACBL0044Record_somUninit;
typedef SOMClass*   SOMLINK somTP_ACBL0044Record_somGetClass(ACBL0044Record *somSelf);
typedef somTP_ACBL0044Record_somGetClass *somTD_ACBL0044Record_somGetClass;
typedef string   SOMLINK somTP_ACBL0044Record_somGetClassName(ACBL0044Record *somSelf);
typedef somTP_ACBL0044Record_somGetClassName *somTD_ACBL0044Record_somGetClassName;
typedef long   SOMLINK somTP_ACBL0044Record_somGetSize(ACBL0044Record *somSelf);
typedef somTP_ACBL0044Record_somGetSize *somTD_ACBL0044Record_somGetSize;
typedef boolean   SOMLINK somTP_ACBL0044Record_somIsA(ACBL0044Record *somSelf,
		SOMClass* aClassObj);
typedef somTP_ACBL0044Record_somIsA *somTD_ACBL0044Record_somIsA;
typedef boolean   SOMLINK somTP_ACBL0044Record_somIsInstanceOf(ACBL0044Record *somSelf,
		SOMClass* aClassObj);
typedef somTP_ACBL0044Record_somIsInstanceOf *somTD_ACBL0044Record_somIsInstanceOf;
typedef boolean   SOMLINK somTP_ACBL0044Record_somRespondsTo(ACBL0044Record *somSelf,
		somId mId);
typedef somTP_ACBL0044Record_somRespondsTo *somTD_ACBL0044Record_somRespondsTo;
typedef boolean   SOMLINK somTP_ACBL0044Record_somDispatch(ACBL0044Record *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_ACBL0044Record_somDispatch *somTD_ACBL0044Record_somDispatch;
typedef boolean   SOMLINK somTP_ACBL0044Record_somClassDispatch(ACBL0044Record *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_ACBL0044Record_somClassDispatch *somTD_ACBL0044Record_somClassDispatch;
typedef boolean   SOMLINK somTP_ACBL0044Record_somCastObj(ACBL0044Record *somSelf,
		SOMClass* cls);
typedef somTP_ACBL0044Record_somCastObj *somTD_ACBL0044Record_somCastObj;
typedef boolean   SOMLINK somTP_ACBL0044Record_somResetObj(ACBL0044Record *somSelf);
typedef somTP_ACBL0044Record_somResetObj *somTD_ACBL0044Record_somResetObj;
typedef SOMObject*   SOMLINK somTP_ACBL0044Record_somPrintSelf(ACBL0044Record *somSelf);
typedef somTP_ACBL0044Record_somPrintSelf *somTD_ACBL0044Record_somPrintSelf;
typedef void   SOMLINK somTP_ACBL0044Record_somDumpSelf(ACBL0044Record *somSelf,
		long level);
typedef somTP_ACBL0044Record_somDumpSelf *somTD_ACBL0044Record_somDumpSelf;
typedef void   SOMLINK somTP_ACBL0044Record_somDumpSelfInt(ACBL0044Record *somSelf,
		long level);
typedef somTP_ACBL0044Record_somDumpSelfInt *somTD_ACBL0044Record_somDumpSelfInt;
}

#endif /* ACBL0044Record_API */


/*
 * -- This emitter believes that method thunks are unavailable,
 * -- so somResolve will be called.
 */
#undef somresolve_
#define somresolve_(obj,mToken) (somResolve(obj,mToken))

/*
 * -- The C++ Wrapper Class for ACBL0044Record
 */
class ACBL0044Record : public RECORD
{
public:

// ACBL0044Record::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_ACBL0044Record) ACBL0044RecordNewClass(ACBL0044Record_MajorVersion,ACBL0044Record_MinorVersion);
   return (void*)
      SOM_Resolve(_ACBL0044Record,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_ACBL0044Record));
}

// ACBL0044Record::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

ACBL0044Record()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (ACBL0044RecordCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

ACBL0044Record(ACBL0044Record* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (ACBL0044RecordCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

ACBL0044Record(const ACBL0044Record* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (ACBL0044RecordCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: defaultFlag */
char   defaultFlag(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044Record,ACBL0044Record,defaultFlag)
	(this, ev);
}


/* method: passFail */
char   passFail(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044Record,ACBL0044Record,passFail)
	(this, ev);
}


/* method: queue */
string   queue(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044Record,ACBL0044Record,queue)
	(this, ev);
}


/* method: status */
string   status(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044Record,ACBL0044Record,status)
	(this, ev);
}


/* method: setInfo */
void   setInfo(Environment *ev,
		ACBL0044Record_PACBL0044BUFFER p44Buf)
{
   SOM_ResolveD(this,ACBL0044Record,ACBL0044Record,setInfo)
	(this, ev,p44Buf);
}


/*
 * Reintroduce inherited methods
 */

/* method: buffer */
void*   buffer(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044Record,RECORD,buffer)
	(this, ev);
}


/* method: setBuffer */
void   setBuffer(Environment *ev,
		void* pv)
{
   SOM_ResolveD(this,ACBL0044Record,RECORD,setBuffer)
	(this, ev,pv);
}


/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,ACBL0044Record,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,ACBL0044Record,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: somfMLinkableInit */
somf_MLinkable*   somfMLinkableInit(Environment *ev,
		somf_MLinkable* n,
		somf_MLinkable* p)
{
   return SOM_ResolveD(this,ACBL0044Record,somf_MLinkable,somfMLinkableInit)
	(this, ev,n,p);
}


/* method: somfGetNext */
somf_MLinkable*   somfGetNext(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044Record,somf_MLinkable,somfGetNext)
	(this, ev);
}


/* method: somfSetNext */
void   somfSetNext(Environment *ev,
		somf_MLinkable* aLink)
{
   SOM_ResolveD(this,ACBL0044Record,somf_MLinkable,somfSetNext)
	(this, ev,aLink);
}


/* method: somfGetPrevious */
somf_MLinkable*   somfGetPrevious(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0044Record,somf_MLinkable,somfGetPrevious)
	(this, ev);
}


/* method: somfSetPrevious */
void   somfSetPrevious(Environment *ev,
		somf_MLinkable* aLink)
{
   SOM_ResolveD(this,ACBL0044Record,somf_MLinkable,somfSetPrevious)
	(this, ev,aLink);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,ACBL0044Record,SOMObject,somInit)
	(this);
}


/* initializer method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,ACBL0044Record,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
ACBL0044Record*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,ACBL0044Record,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,ACBL0044Record,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,ACBL0044Record,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
ACBL0044Record*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
ACBL0044Record*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
ACBL0044Record*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,ACBL0044Record,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,ACBL0044Record,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   ACBL0044Record_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,ACBL0044Record,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,ACBL0044Record,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   ACBL0044Record_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,ACBL0044Record,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,ACBL0044Record,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somResetObj)
	(this);
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,ACBL0044Record,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,ACBL0044Record,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,ACBL0044Record,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* ACBL0044Record */



#endif       /* SOM_ACBL0044Record_xh */
