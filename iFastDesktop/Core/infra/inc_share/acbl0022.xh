
/*
 * //
 *                                                                         //
 *  This view writes comments for a given FILE or STRING.                  //
 *                                                                         //
 *  6/21                                                             dyxw  //
 *     ref. ACPY0031, ACPY0013, and ACBL0022                               //
 *                                                                         //
 *  note:                                                                  //
 *    -interface does not have logic for continuation cause there is none. //
 *                                                                         //
 *    -added function withComment() to allow user to pass in string/file //
 *        as comment data...                                               //
 *        withComment(AwdObj, File/String, enum[FILE/STRING]             //
 *                                                                         //
 *  7/10                                                                   //
 *    moved enum into the View interface area                              //
 *                                                                         //
 *  7/24/95                                                                //
 *    -added constructor: withComment()                                  //
 *    -include AWDDEFS.IDL                                                 //
 *    -use #define SIZEOF_COUNTRY_CODE in view22.h                         //
 *    -use min(strlen(), sizeof()) in memcpy()                             //
 *    -make sure use a NULL terminated string while using atoi()           //
 *    -spell out words while naming methods                                //
 *    -consolidate os2/win local headers to one                            //
 *    -added pmprintf.lib to makefile                                      //
 *    -added passthru *.xh files in passthru_Cxih whenever include *.IDL   //
 *    -added memory allocation check after operator 'new'                  //
 *                                                                         //
 *  8/8/95                                                                 //
 *    -DCUR: added setKey method                                           //
 *                                                                         //
 *  8/22/95                                                         dyxw   //
 *    -update to coding standard                                           //
 *                                                                         //
 *                                                                         //
 * //
 */


#ifndef SOM_ACBL0022_xh
#define SOM_ACBL0022_xh

class ACBL0022;

#define ACBL0022_MajorVersion 0
#define ACBL0022_MinorVersion 0

/*
 * Passthru lines: File: "C.xh", "before"
 */
#include "structs.xh"
#include "view.xh"

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_AWDView_xh
#include <view.xh>
#endif

#ifndef ACBL0022_API
#define ACBL0022_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class somf_MLinkable;
class AWDConnection;
class AWDException;
#define ACBL0022_CC_WHITE_SPACE ' '
#define ACBL0022_CC_ZERO '0'
#define ACBL0022_CC_CONTINUE_YES 'Y'
#define ACBL0022_CC_CONTINUE_NO 'N'
#define ACBL0022_CC_COMPLETE_YES 'Y'
#define ACBL0022_CC_COMPLETE_NO 'N'
#define ACBL0022_CC_FORMAT_YES 'Y'
#define ACBL0022_CC_FORMAT_NO 'N'
#define ACBL0022_CC_UNDEFINED ' '
#define ACBL0022_CC_COMMCODE_SYSTEM 'S'
#define ACBL0022_CC_COMMCODE_MANUAL 'M'
#define ACBL0022_CC_STICKYNOTE_YES 'Y'
#define ACBL0022_CC_STICKYNOTE_NO 'N'
typedef unsigned long ACBL0022_DATATYPE;
#define ACBL0022_DATATYPE_STRING 1UL
#define ACBL0022_DATATYPE_FILE 2UL
typedef
struct ACBL0022_COMMAREA {
char  commtext[234];
char  commlen[3];
} ACBL0022_COMMAREA;
typedef
struct ACBL0022_COMMAREA* ACBL0022_PCOMMAREA;

/*
 *  block of comment entries
 */
typedef
struct ACBL0022_COMMENTINPUT {
struct ACBL0022_COMMAREA commentry[100];
} ACBL0022_COMMENTINPUT;

/*
 *  end of struct COMMENTINPUT
 */
typedef
struct ACBL0022_COMMENTINPUT* ACBL0022_PCOMMENTINPUT;

/*
 *  ref. view input area //
 */
typedef
struct ACBL0022_ACBL0022INPUT {
char  countrycd[3];
char  crdattim[26];
char  recordcd;
char  crnode[2];
char  userid[8];
char  commcd;
char  stickyFlag;
struct ACBL0022_COMMAREA commarea[100];
} ACBL0022_ACBL0022INPUT;
typedef
struct ACBL0022_ACBL0022INPUT* ACBL0022_PACBL0022INPUT;

/*
 *  response cont_key is defined as 116 bytes, and redefined
 *       many ways; the part that is meaningful to this view NIL
 */
typedef
struct ACBL0022_ACBL0022OUTPUT {
char  return_code[7];
char  return_message[78];
} ACBL0022_ACBL0022OUTPUT;
typedef
struct ACBL0022_ACBL0022OUTPUT* ACBL0022_PACBL0022OUTPUT;

/*
 *  constructor
 */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_CC_WHITE_SPACE
    #ifdef CC_WHITE_SPACE
        #undef CC_WHITE_SPACE
        #define SOMTGD_CC_WHITE_SPACE 1
    #else
        #define CC_WHITE_SPACE ACBL0022_CC_WHITE_SPACE
    #endif /* CC_WHITE_SPACE */
#endif /* SOMTGD_CC_WHITE_SPACE */
#ifndef SOMTGD_CC_ZERO
    #ifdef CC_ZERO
        #undef CC_ZERO
        #define SOMTGD_CC_ZERO 1
    #else
        #define CC_ZERO ACBL0022_CC_ZERO
    #endif /* CC_ZERO */
#endif /* SOMTGD_CC_ZERO */
#ifndef SOMTGD_CC_CONTINUE_YES
    #ifdef CC_CONTINUE_YES
        #undef CC_CONTINUE_YES
        #define SOMTGD_CC_CONTINUE_YES 1
    #else
        #define CC_CONTINUE_YES ACBL0022_CC_CONTINUE_YES
    #endif /* CC_CONTINUE_YES */
#endif /* SOMTGD_CC_CONTINUE_YES */
#ifndef SOMTGD_CC_CONTINUE_NO
    #ifdef CC_CONTINUE_NO
        #undef CC_CONTINUE_NO
        #define SOMTGD_CC_CONTINUE_NO 1
    #else
        #define CC_CONTINUE_NO ACBL0022_CC_CONTINUE_NO
    #endif /* CC_CONTINUE_NO */
#endif /* SOMTGD_CC_CONTINUE_NO */
#ifndef SOMTGD_CC_COMPLETE_YES
    #ifdef CC_COMPLETE_YES
        #undef CC_COMPLETE_YES
        #define SOMTGD_CC_COMPLETE_YES 1
    #else
        #define CC_COMPLETE_YES ACBL0022_CC_COMPLETE_YES
    #endif /* CC_COMPLETE_YES */
#endif /* SOMTGD_CC_COMPLETE_YES */
#ifndef SOMTGD_CC_COMPLETE_NO
    #ifdef CC_COMPLETE_NO
        #undef CC_COMPLETE_NO
        #define SOMTGD_CC_COMPLETE_NO 1
    #else
        #define CC_COMPLETE_NO ACBL0022_CC_COMPLETE_NO
    #endif /* CC_COMPLETE_NO */
#endif /* SOMTGD_CC_COMPLETE_NO */
#ifndef SOMTGD_CC_FORMAT_YES
    #ifdef CC_FORMAT_YES
        #undef CC_FORMAT_YES
        #define SOMTGD_CC_FORMAT_YES 1
    #else
        #define CC_FORMAT_YES ACBL0022_CC_FORMAT_YES
    #endif /* CC_FORMAT_YES */
#endif /* SOMTGD_CC_FORMAT_YES */
#ifndef SOMTGD_CC_FORMAT_NO
    #ifdef CC_FORMAT_NO
        #undef CC_FORMAT_NO
        #define SOMTGD_CC_FORMAT_NO 1
    #else
        #define CC_FORMAT_NO ACBL0022_CC_FORMAT_NO
    #endif /* CC_FORMAT_NO */
#endif /* SOMTGD_CC_FORMAT_NO */
#ifndef SOMTGD_CC_UNDEFINED
    #ifdef CC_UNDEFINED
        #undef CC_UNDEFINED
        #define SOMTGD_CC_UNDEFINED 1
    #else
        #define CC_UNDEFINED ACBL0022_CC_UNDEFINED
    #endif /* CC_UNDEFINED */
#endif /* SOMTGD_CC_UNDEFINED */
#ifndef SOMTGD_CC_COMMCODE_SYSTEM
    #ifdef CC_COMMCODE_SYSTEM
        #undef CC_COMMCODE_SYSTEM
        #define SOMTGD_CC_COMMCODE_SYSTEM 1
    #else
        #define CC_COMMCODE_SYSTEM ACBL0022_CC_COMMCODE_SYSTEM
    #endif /* CC_COMMCODE_SYSTEM */
#endif /* SOMTGD_CC_COMMCODE_SYSTEM */
#ifndef SOMTGD_CC_COMMCODE_MANUAL
    #ifdef CC_COMMCODE_MANUAL
        #undef CC_COMMCODE_MANUAL
        #define SOMTGD_CC_COMMCODE_MANUAL 1
    #else
        #define CC_COMMCODE_MANUAL ACBL0022_CC_COMMCODE_MANUAL
    #endif /* CC_COMMCODE_MANUAL */
#endif /* SOMTGD_CC_COMMCODE_MANUAL */
#ifndef SOMTGD_CC_STICKYNOTE_YES
    #ifdef CC_STICKYNOTE_YES
        #undef CC_STICKYNOTE_YES
        #define SOMTGD_CC_STICKYNOTE_YES 1
    #else
        #define CC_STICKYNOTE_YES ACBL0022_CC_STICKYNOTE_YES
    #endif /* CC_STICKYNOTE_YES */
#endif /* SOMTGD_CC_STICKYNOTE_YES */
#ifndef SOMTGD_CC_STICKYNOTE_NO
    #ifdef CC_STICKYNOTE_NO
        #undef CC_STICKYNOTE_NO
        #define SOMTGD_CC_STICKYNOTE_NO 1
    #else
        #define CC_STICKYNOTE_NO ACBL0022_CC_STICKYNOTE_NO
    #endif /* CC_STICKYNOTE_NO */
#endif /* SOMTGD_CC_STICKYNOTE_NO */
#ifndef SOMTGD_DATATYPE
    #ifdef DATATYPE
        #undef DATATYPE
        #define SOMTGD_DATATYPE 1
    #else
        #define DATATYPE ACBL0022_DATATYPE
    #endif /* DATATYPE */
#endif /* SOMTGD_DATATYPE */
#ifndef SOMTGD_COMMAREA
    #ifdef COMMAREA
        #undef COMMAREA
        #define SOMTGD_COMMAREA 1
    #else
        #define COMMAREA ACBL0022_COMMAREA
    #endif /* COMMAREA */
#endif /* SOMTGD_COMMAREA */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PCOMMAREA
    #ifdef PCOMMAREA
        #undef PCOMMAREA
        #define SOMTGD_PCOMMAREA 1
    #else
        #define PCOMMAREA ACBL0022_PCOMMAREA
    #endif /* PCOMMAREA */
#endif /* SOMTGD_PCOMMAREA */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_COMMENTINPUT
    #ifdef COMMENTINPUT
        #undef COMMENTINPUT
        #define SOMTGD_COMMENTINPUT 1
    #else
        #define COMMENTINPUT ACBL0022_COMMENTINPUT
    #endif /* COMMENTINPUT */
#endif /* SOMTGD_COMMENTINPUT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PCOMMENTINPUT
    #ifdef PCOMMENTINPUT
        #undef PCOMMENTINPUT
        #define SOMTGD_PCOMMENTINPUT 1
    #else
        #define PCOMMENTINPUT ACBL0022_PCOMMENTINPUT
    #endif /* PCOMMENTINPUT */
#endif /* SOMTGD_PCOMMENTINPUT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_ACBL0022INPUT
    #ifdef ACBL0022INPUT
        #undef ACBL0022INPUT
        #define SOMTGD_ACBL0022INPUT 1
    #else
        #define ACBL0022INPUT ACBL0022_ACBL0022INPUT
    #endif /* ACBL0022INPUT */
#endif /* SOMTGD_ACBL0022INPUT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PACBL0022INPUT
    #ifdef PACBL0022INPUT
        #undef PACBL0022INPUT
        #define SOMTGD_PACBL0022INPUT 1
    #else
        #define PACBL0022INPUT ACBL0022_PACBL0022INPUT
    #endif /* PACBL0022INPUT */
#endif /* SOMTGD_PACBL0022INPUT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_ACBL0022OUTPUT
    #ifdef ACBL0022OUTPUT
        #undef ACBL0022OUTPUT
        #define SOMTGD_ACBL0022OUTPUT 1
    #else
        #define ACBL0022OUTPUT ACBL0022_ACBL0022OUTPUT
    #endif /* ACBL0022OUTPUT */
#endif /* SOMTGD_ACBL0022OUTPUT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PACBL0022OUTPUT
    #ifdef PACBL0022OUTPUT
        #undef PACBL0022OUTPUT
        #define SOMTGD_PACBL0022OUTPUT 1
    #else
        #define PACBL0022OUTPUT ACBL0022_PACBL0022OUTPUT
    #endif /* PACBL0022OUTPUT */
#endif /* SOMTGD_PACBL0022OUTPUT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#endif /* SOM_DONT_USE_SHORT_NAMES */

/*
 * End of user-defined types.
 */

/* A procedure to create the ACBL0022 Class */
SOMEXTERN
#if (defined(SOM_Module_acbl0022_Source) || defined(ACBL0022_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_ACBL0022))
WIN32_DLLEXPORT
#else
WIN32_DLLIMPORT
#endif
SOMClass * SOMLINK ACBL0022NewClass(
		integer4,
		integer4 );

/* The API to the ACBL0022 class object, and the methods it introduces. */
SOMEXTERN struct ACBL0022ClassDataStructure {
	SOMClass *classObject;
	somMToken withComment;
	somMToken setCommentArea;
	somMToken setCommentCode;
	somMToken setCreateDateTime;
	somMToken setCreateNode;
	somMToken setRecordCode;
	somMToken setStickyFlag;
	somMToken setUserid;
	somMToken setKey;
}
#if !(defined(SOM_Module_acbl0022_Source) || defined(ACBL0022_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_ACBL0022))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK ACBL0022ClassData;
#define _ACBL0022 ACBL0022ClassData.classObject

/* The API to parentMtabs for ACBL0022, and the instance data it introduces. */
SOMEXTERN struct ACBL0022CClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
}
#if !(defined(SOM_Module_acbl0022_Source) || defined(ACBL0022_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_ACBL0022))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK ACBL0022CClassData;

/*
 * -- Typedefs for ACBL0022 Method Procedures
 */
extern "C" {
typedef void   SOMLINK somTP_ACBL0022_withComment(ACBL0022 *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		AWD_AWDOBJECTKEYSTRCT* pObj,
		string pszComment,
		ACBL0022_DATATYPE datatype);
typedef somTP_ACBL0022_withComment *somTD_ACBL0022_withComment;
typedef void   SOMLINK somTP_ACBL0022_setCommentArea(ACBL0022 *somSelf, Environment *ev,
		ACBL0022_PCOMMAREA arryCommarea);
typedef somTP_ACBL0022_setCommentArea *somTD_ACBL0022_setCommentArea;
typedef void   SOMLINK somTP_ACBL0022_setCommentCode(ACBL0022 *somSelf, Environment *ev,
		char cCommcd);
typedef somTP_ACBL0022_setCommentCode *somTD_ACBL0022_setCommentCode;
typedef void   SOMLINK somTP_ACBL0022_setCreateDateTime(ACBL0022 *somSelf, Environment *ev,
		string pszCrdattim);
typedef somTP_ACBL0022_setCreateDateTime *somTD_ACBL0022_setCreateDateTime;
typedef void   SOMLINK somTP_ACBL0022_setCreateNode(ACBL0022 *somSelf, Environment *ev,
		string pszCrnode);
typedef somTP_ACBL0022_setCreateNode *somTD_ACBL0022_setCreateNode;
typedef void   SOMLINK somTP_ACBL0022_setKey(ACBL0022 *somSelf, Environment *ev,
		AWD_PAWDOBJECTKEYSTRCT pKey);
typedef somTP_ACBL0022_setKey *somTD_ACBL0022_setKey;
typedef void   SOMLINK somTP_ACBL0022_setRecordCode(ACBL0022 *somSelf, Environment *ev,
		char cRecordcd);
typedef somTP_ACBL0022_setRecordCode *somTD_ACBL0022_setRecordCode;
typedef void   SOMLINK somTP_ACBL0022_setStickyFlag(ACBL0022 *somSelf, Environment *ev,
		char cStickyFlag);
typedef somTP_ACBL0022_setStickyFlag *somTD_ACBL0022_setStickyFlag;
typedef void   SOMLINK somTP_ACBL0022_setUserid(ACBL0022 *somSelf, Environment *ev,
		string pszUserid);
typedef somTP_ACBL0022_setUserid *somTD_ACBL0022_setUserid;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef string   SOMLINK somTP_ACBL0022_app(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_app *somTD_ACBL0022_app;
typedef void   SOMLINK somTP_ACBL0022_setApp(ACBL0022 *somSelf, Environment *ev,
		string app);
typedef somTP_ACBL0022_setApp *somTD_ACBL0022_setApp;
typedef string   SOMLINK somTP_ACBL0022_targetApp(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_targetApp *somTD_ACBL0022_targetApp;
typedef void   SOMLINK somTP_ACBL0022_setTargetApp(ACBL0022 *somSelf, Environment *ev,
		string target);
typedef somTP_ACBL0022_setTargetApp *somTD_ACBL0022_setTargetApp;
typedef string   SOMLINK somTP_ACBL0022_name(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_name *somTD_ACBL0022_name;
typedef void   SOMLINK somTP_ACBL0022_setName(ACBL0022 *somSelf, Environment *ev,
		string aName);
typedef somTP_ACBL0022_setName *somTD_ACBL0022_setName;
typedef unsigned long   SOMLINK somTP_ACBL0022_size(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_size *somTD_ACBL0022_size;
typedef void   SOMLINK somTP_ACBL0022_setSize(ACBL0022 *somSelf, Environment *ev,
		unsigned long size);
typedef somTP_ACBL0022_setSize *somTD_ACBL0022_setSize;
typedef void*   SOMLINK somTP_ACBL0022_sendData(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_sendData *somTD_ACBL0022_sendData;
typedef void   SOMLINK somTP_ACBL0022_setSendData(ACBL0022 *somSelf, Environment *ev,
		void* data);
typedef somTP_ACBL0022_setSendData *somTD_ACBL0022_setSendData;
typedef AWDView_view_type   SOMLINK somTP_ACBL0022_mode(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_mode *somTD_ACBL0022_mode;
typedef void   SOMLINK somTP_ACBL0022_setMode(ACBL0022 *somSelf, Environment *ev,
		AWDView_view_type viewtype);
typedef somTP_ACBL0022_setMode *somTD_ACBL0022_setMode;
typedef unsigned long   SOMLINK somTP_ACBL0022_hwndNotify(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_hwndNotify *somTD_ACBL0022_hwndNotify;
typedef void   SOMLINK somTP_ACBL0022_sethwndNotify(ACBL0022 *somSelf, Environment *ev,
		unsigned long hwndNotify);
typedef somTP_ACBL0022_sethwndNotify *somTD_ACBL0022_sethwndNotify;
typedef unsigned long   SOMLINK somTP_ACBL0022_returnMsg(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_returnMsg *somTD_ACBL0022_returnMsg;
typedef void   SOMLINK somTP_ACBL0022_setReturnMsg(ACBL0022 *somSelf, Environment *ev,
		unsigned long msg);
typedef somTP_ACBL0022_setReturnMsg *somTD_ACBL0022_setReturnMsg;
typedef void*   SOMLINK somTP_ACBL0022_pfnCallBack(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_pfnCallBack *somTD_ACBL0022_pfnCallBack;
typedef void   SOMLINK somTP_ACBL0022_setpfnCallBack(ACBL0022 *somSelf, Environment *ev,
		void* pfnCallback);
typedef somTP_ACBL0022_setpfnCallBack *somTD_ACBL0022_setpfnCallBack;
typedef unsigned long   SOMLINK somTP_ACBL0022_timeOut(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_timeOut *somTD_ACBL0022_timeOut;
typedef void   SOMLINK somTP_ACBL0022_setTimeOut(ACBL0022 *somSelf, Environment *ev,
		unsigned long timeout);
typedef somTP_ACBL0022_setTimeOut *somTD_ACBL0022_setTimeOut;
typedef string   SOMLINK somTP_ACBL0022_host(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_host *somTD_ACBL0022_host;
typedef void   SOMLINK somTP_ACBL0022_setHost(ACBL0022 *somSelf, Environment *ev,
		string host);
typedef somTP_ACBL0022_setHost *somTD_ACBL0022_setHost;
typedef long   SOMLINK somTP_ACBL0022_queue(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_queue *somTD_ACBL0022_queue;
typedef void   SOMLINK somTP_ACBL0022_setMessageQueue(ACBL0022 *somSelf, Environment *ev,
		long que);
typedef somTP_ACBL0022_setMessageQueue *somTD_ACBL0022_setMessageQueue;
typedef void*   SOMLINK somTP_ACBL0022_receiveData(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_receiveData *somTD_ACBL0022_receiveData;
typedef void   SOMLINK somTP_ACBL0022_setReceiveData(ACBL0022 *somSelf, Environment *ev,
		void* pRData);
typedef somTP_ACBL0022_setReceiveData *somTD_ACBL0022_setReceiveData;
typedef unsigned long   SOMLINK somTP_ACBL0022_numRepeats(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_numRepeats *somTD_ACBL0022_numRepeats;
typedef void   SOMLINK somTP_ACBL0022_setNumRepeats(ACBL0022 *somSelf, Environment *ev,
		unsigned long repeats);
typedef somTP_ACBL0022_setNumRepeats *somTD_ACBL0022_setNumRepeats;
typedef unsigned long   SOMLINK somTP_ACBL0022_fixedLength(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_fixedLength *somTD_ACBL0022_fixedLength;
typedef void   SOMLINK somTP_ACBL0022_setFixedLength(ACBL0022 *somSelf, Environment *ev,
		unsigned long length);
typedef somTP_ACBL0022_setFixedLength *somTD_ACBL0022_setFixedLength;
typedef unsigned long   SOMLINK somTP_ACBL0022_repeatLength(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_repeatLength *somTD_ACBL0022_repeatLength;
typedef void   SOMLINK somTP_ACBL0022_setRepeatLength(ACBL0022 *somSelf, Environment *ev,
		unsigned long length);
typedef somTP_ACBL0022_setRepeatLength *somTD_ACBL0022_setRepeatLength;
typedef unsigned long   SOMLINK somTP_ACBL0022_currentIndex(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_currentIndex *somTD_ACBL0022_currentIndex;
typedef void   SOMLINK somTP_ACBL0022_setCurrentIndex(ACBL0022 *somSelf, Environment *ev,
		unsigned long index);
typedef somTP_ACBL0022_setCurrentIndex *somTD_ACBL0022_setCurrentIndex;
typedef void*   SOMLINK somTP_ACBL0022_lastView(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_lastView *somTD_ACBL0022_lastView;
typedef void   SOMLINK somTP_ACBL0022_setLastView(ACBL0022 *somSelf, Environment *ev,
		void* pRData);
typedef somTP_ACBL0022_setLastView *somTD_ACBL0022_setLastView;
typedef void*   SOMLINK somTP_ACBL0022_startData(ACBL0022 *somSelf, Environment *ev,
		string app,
		string targetapp,
		string viewname,
		void* senddata,
		unsigned long size,
		AWDView_view_type mode,
		void* pfn,
		unsigned long timeout,
		unsigned long hwndnotify,
		unsigned long returnmsg,
		long queue,
		string host);
typedef somTP_ACBL0022_startData *somTD_ACBL0022_startData;
typedef void*   SOMLINK somTP_ACBL0022_start(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_start *somTD_ACBL0022_start;
typedef void*   SOMLINK somTP_ACBL0022_getRecord(ACBL0022 *somSelf, Environment *ev,
		void* pv,
		unsigned long userIndex,
		AWDView_index_type indexvalue);
typedef somTP_ACBL0022_getRecord *somTD_ACBL0022_getRecord;
typedef boolean   SOMLINK somTP_ACBL0022_check(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_check *somTD_ACBL0022_check;
typedef void   SOMLINK somTP_ACBL0022_checkForException(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_checkForException *somTD_ACBL0022_checkForException;
typedef void   SOMLINK somTP_ACBL0022_setException(ACBL0022 *somSelf, Environment *ev,
		unsigned short excType,
		string pszFile,
		unsigned short usLine,
		string pszMessage,
		unsigned short usReturnCd);
typedef somTP_ACBL0022_setException *somTD_ACBL0022_setException;
typedef void   SOMLINK somTP_ACBL0022_setViewMessage(ACBL0022 *somSelf, Environment *ev,
		string pszMessage);
typedef somTP_ACBL0022_setViewMessage *somTD_ACBL0022_setViewMessage;
typedef string   SOMLINK somTP_ACBL0022_viewMessage(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_viewMessage *somTD_ACBL0022_viewMessage;
typedef void*   SOMLINK somTP_ACBL0022_startString(ACBL0022 *somSelf, Environment *ev,
		string pszSetupString);
typedef somTP_ACBL0022_startString *somTD_ACBL0022_startString;
typedef boolean   SOMLINK somTP_ACBL0022_scanArgString(ACBL0022 *somSelf, Environment *ev,
		string pszSetupString,
		string pszKey,
		string pszValue,
		unsigned long* pcbValue);
typedef somTP_ACBL0022_scanArgString *somTD_ACBL0022_scanArgString;
typedef boolean   SOMLINK somTP_ACBL0022_isComplete(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_isComplete *somTD_ACBL0022_isComplete;
typedef void*   SOMLINK somTP_ACBL0022_restart(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_restart *somTD_ACBL0022_restart;
typedef void*   SOMLINK somTP_ACBL0022_resolveIndex(ACBL0022 *somSelf, Environment *ev,
		unsigned long* ulIndex);
typedef somTP_ACBL0022_resolveIndex *somTD_ACBL0022_resolveIndex;
typedef boolean   SOMLINK somTP_ACBL0022_addData(ACBL0022 *somSelf, Environment *ev,
		void* pRcvData,
		unsigned long ulNumberofRepeats);
typedef somTP_ACBL0022_addData *somTD_ACBL0022_addData;
typedef void*   SOMLINK somTP_ACBL0022_buffer(ACBL0022 *somSelf, Environment *ev,
		AWDView_index_type index,
		unsigned long theindex,
		unsigned long* pulRepeats);
typedef somTP_ACBL0022_buffer *somTD_ACBL0022_buffer;
typedef unsigned long   SOMLINK somTP_ACBL0022_errCode(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_errCode *somTD_ACBL0022_errCode;
typedef string   SOMLINK somTP_ACBL0022_errMsg(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_errMsg *somTD_ACBL0022_errMsg;
typedef AWDConnection*   SOMLINK somTP_ACBL0022_setConnection(ACBL0022 *somSelf, Environment *ev,
		AWDConnection* con);
typedef somTP_ACBL0022_setConnection *somTD_ACBL0022_setConnection;
typedef AWDConnection*   SOMLINK somTP_ACBL0022_localConnection(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_localConnection *somTD_ACBL0022_localConnection;
typedef void   SOMLINK somTP_ACBL0022_setAutoRestart(ACBL0022 *somSelf, Environment *ev,
		boolean flag);
typedef somTP_ACBL0022_setAutoRestart *somTD_ACBL0022_setAutoRestart;
typedef boolean   SOMLINK somTP_ACBL0022_isAutoRestart(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_isAutoRestart *somTD_ACBL0022_isAutoRestart;
typedef void   SOMLINK somTP_ACBL0022_reset(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_reset *somTD_ACBL0022_reset;
typedef boolean   SOMLINK somTP_ACBL0022_validateInput(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_validateInput *somTD_ACBL0022_validateInput;
typedef void   SOMLINK somTP_ACBL0022_setPersistent(ACBL0022 *somSelf, Environment *ev,
		boolean flag);
typedef somTP_ACBL0022_setPersistent *somTD_ACBL0022_setPersistent;
typedef boolean   SOMLINK somTP_ACBL0022_isPersistent(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_isPersistent *somTD_ACBL0022_isPersistent;
typedef void   SOMLINK somTP_ACBL0022_setInProcess(ACBL0022 *somSelf, Environment *ev,
		boolean flag);
typedef somTP_ACBL0022_setInProcess *somTD_ACBL0022_setInProcess;
typedef boolean   SOMLINK somTP_ACBL0022_isInProcess(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_isInProcess *somTD_ACBL0022_isInProcess;
typedef void   SOMLINK somTP_ACBL0022_setPrimaryRc(ACBL0022 *somSelf, Environment *ev,
		unsigned long rc);
typedef somTP_ACBL0022_setPrimaryRc *somTD_ACBL0022_setPrimaryRc;
typedef unsigned long   SOMLINK somTP_ACBL0022_primaryRc(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_primaryRc *somTD_ACBL0022_primaryRc;
typedef void   SOMLINK somTP_ACBL0022_setSecondaryRc(ACBL0022 *somSelf, Environment *ev,
		unsigned long rc);
typedef somTP_ACBL0022_setSecondaryRc *somTD_ACBL0022_setSecondaryRc;
typedef unsigned long   SOMLINK somTP_ACBL0022_secondaryRc(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_secondaryRc *somTD_ACBL0022_secondaryRc;
typedef void   SOMLINK somTP_ACBL0022_somDefaultInit(ACBL0022 *somSelf,
		somInitCtrl* ctrl);
typedef somTP_ACBL0022_somDefaultInit *somTD_ACBL0022_somDefaultInit;
typedef void   SOMLINK somTP_ACBL0022_somDestruct(ACBL0022 *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef somTP_ACBL0022_somDestruct *somTD_ACBL0022_somDestruct;
typedef somf_MLinkable*   SOMLINK somTP_ACBL0022_somfMLinkableInit(ACBL0022 *somSelf, Environment *ev,
		somf_MLinkable* n,
		somf_MLinkable* p);
typedef somTP_ACBL0022_somfMLinkableInit *somTD_ACBL0022_somfMLinkableInit;
typedef somf_MLinkable*   SOMLINK somTP_ACBL0022_somfGetNext(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_somfGetNext *somTD_ACBL0022_somfGetNext;
typedef void   SOMLINK somTP_ACBL0022_somfSetNext(ACBL0022 *somSelf, Environment *ev,
		somf_MLinkable* aLink);
typedef somTP_ACBL0022_somfSetNext *somTD_ACBL0022_somfSetNext;
typedef somf_MLinkable*   SOMLINK somTP_ACBL0022_somfGetPrevious(ACBL0022 *somSelf, Environment *ev);
typedef somTP_ACBL0022_somfGetPrevious *somTD_ACBL0022_somfGetPrevious;
typedef void   SOMLINK somTP_ACBL0022_somfSetPrevious(ACBL0022 *somSelf, Environment *ev,
		somf_MLinkable* aLink);
typedef somTP_ACBL0022_somfSetPrevious *somTD_ACBL0022_somfSetPrevious;
typedef void   SOMLINK somTP_ACBL0022_somInit(ACBL0022 *somSelf);
typedef somTP_ACBL0022_somInit *somTD_ACBL0022_somInit;
typedef void   SOMLINK somTP_ACBL0022_somDefaultCopyInit(ACBL0022 *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0022_somDefaultCopyInit *somTD_ACBL0022_somDefaultCopyInit;
typedef ACBL0022*   SOMLINK somTP_ACBL0022_somDefaultAssign(ACBL0022 *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0022_somDefaultAssign *somTD_ACBL0022_somDefaultAssign;
typedef void   SOMLINK somTP_ACBL0022_somDefaultConstCopyInit(ACBL0022 *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0022_somDefaultConstCopyInit *somTD_ACBL0022_somDefaultConstCopyInit;
typedef void   SOMLINK somTP_ACBL0022_somDefaultVCopyInit(ACBL0022 *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0022_somDefaultVCopyInit *somTD_ACBL0022_somDefaultVCopyInit;
typedef void   SOMLINK somTP_ACBL0022_somDefaultConstVCopyInit(ACBL0022 *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0022_somDefaultConstVCopyInit *somTD_ACBL0022_somDefaultConstVCopyInit;
typedef ACBL0022*   SOMLINK somTP_ACBL0022_somDefaultConstAssign(ACBL0022 *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0022_somDefaultConstAssign *somTD_ACBL0022_somDefaultConstAssign;
typedef ACBL0022*   SOMLINK somTP_ACBL0022_somDefaultVAssign(ACBL0022 *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0022_somDefaultVAssign *somTD_ACBL0022_somDefaultVAssign;
typedef ACBL0022*   SOMLINK somTP_ACBL0022_somDefaultConstVAssign(ACBL0022 *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_ACBL0022_somDefaultConstVAssign *somTD_ACBL0022_somDefaultConstVAssign;
typedef void   SOMLINK somTP_ACBL0022_somFree(ACBL0022 *somSelf);
typedef somTP_ACBL0022_somFree *somTD_ACBL0022_somFree;
typedef void   SOMLINK somTP_ACBL0022_somUninit(ACBL0022 *somSelf);
typedef somTP_ACBL0022_somUninit *somTD_ACBL0022_somUninit;
typedef SOMClass*   SOMLINK somTP_ACBL0022_somGetClass(ACBL0022 *somSelf);
typedef somTP_ACBL0022_somGetClass *somTD_ACBL0022_somGetClass;
typedef string   SOMLINK somTP_ACBL0022_somGetClassName(ACBL0022 *somSelf);
typedef somTP_ACBL0022_somGetClassName *somTD_ACBL0022_somGetClassName;
typedef long   SOMLINK somTP_ACBL0022_somGetSize(ACBL0022 *somSelf);
typedef somTP_ACBL0022_somGetSize *somTD_ACBL0022_somGetSize;
typedef boolean   SOMLINK somTP_ACBL0022_somIsA(ACBL0022 *somSelf,
		SOMClass* aClassObj);
typedef somTP_ACBL0022_somIsA *somTD_ACBL0022_somIsA;
typedef boolean   SOMLINK somTP_ACBL0022_somIsInstanceOf(ACBL0022 *somSelf,
		SOMClass* aClassObj);
typedef somTP_ACBL0022_somIsInstanceOf *somTD_ACBL0022_somIsInstanceOf;
typedef boolean   SOMLINK somTP_ACBL0022_somRespondsTo(ACBL0022 *somSelf,
		somId mId);
typedef somTP_ACBL0022_somRespondsTo *somTD_ACBL0022_somRespondsTo;
typedef boolean   SOMLINK somTP_ACBL0022_somDispatch(ACBL0022 *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_ACBL0022_somDispatch *somTD_ACBL0022_somDispatch;
typedef boolean   SOMLINK somTP_ACBL0022_somClassDispatch(ACBL0022 *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_ACBL0022_somClassDispatch *somTD_ACBL0022_somClassDispatch;
typedef boolean   SOMLINK somTP_ACBL0022_somCastObj(ACBL0022 *somSelf,
		SOMClass* cls);
typedef somTP_ACBL0022_somCastObj *somTD_ACBL0022_somCastObj;
typedef boolean   SOMLINK somTP_ACBL0022_somResetObj(ACBL0022 *somSelf);
typedef somTP_ACBL0022_somResetObj *somTD_ACBL0022_somResetObj;
typedef SOMObject*   SOMLINK somTP_ACBL0022_somPrintSelf(ACBL0022 *somSelf);
typedef somTP_ACBL0022_somPrintSelf *somTD_ACBL0022_somPrintSelf;
typedef void   SOMLINK somTP_ACBL0022_somDumpSelf(ACBL0022 *somSelf,
		long level);
typedef somTP_ACBL0022_somDumpSelf *somTD_ACBL0022_somDumpSelf;
typedef void   SOMLINK somTP_ACBL0022_somDumpSelfInt(ACBL0022 *somSelf,
		long level);
typedef somTP_ACBL0022_somDumpSelfInt *somTD_ACBL0022_somDumpSelfInt;
}

#endif /* ACBL0022_API */


/*
 * -- This emitter believes that method thunks are unavailable,
 * -- so somResolve will be called.
 */
#undef somresolve_
#define somresolve_(obj,mToken) (somResolve(obj,mToken))

/*
 * -- The C++ Wrapper Class for ACBL0022
 */
class ACBL0022 : public AWDView
{
public:

// ACBL0022::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_ACBL0022) ACBL0022NewClass(ACBL0022_MajorVersion,ACBL0022_MinorVersion);
   return (void*)
      SOM_Resolve(_ACBL0022,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_ACBL0022));
}

// ACBL0022::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

ACBL0022()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (ACBL0022CClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

ACBL0022(ACBL0022* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (ACBL0022CClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

ACBL0022(const ACBL0022* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (ACBL0022CClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

ACBL0022(Environment *ev,AWD_AWDOBJECTKEYSTRCT* pObj,string pszComment,ACBL0022_DATATYPE datatype) 
{
   withComment(ev,0,pObj,pszComment,datatype);
}


/* initializer method: withComment */
void   withComment(Environment *ev,
		somInitCtrl* ctrl,
		AWD_AWDOBJECTKEYSTRCT* pObj,
		string pszComment,
		ACBL0022_DATATYPE datatype)
{
   SOM_ResolveD(this,ACBL0022,ACBL0022,withComment)
	(this, ev,ctrl,pObj,pszComment,datatype);
}


/* method: setCommentArea */
void   setCommentArea(Environment *ev,
		ACBL0022_PCOMMAREA arryCommarea)
{
   SOM_ResolveD(this,ACBL0022,ACBL0022,setCommentArea)
	(this, ev,arryCommarea);
}


/* method: setCommentCode */
void   setCommentCode(Environment *ev,
		char cCommcd)
{
   SOM_ResolveD(this,ACBL0022,ACBL0022,setCommentCode)
	(this, ev,cCommcd);
}


/* method: setCreateDateTime */
void   setCreateDateTime(Environment *ev,
		string pszCrdattim)
{
   SOM_ResolveD(this,ACBL0022,ACBL0022,setCreateDateTime)
	(this, ev,pszCrdattim);
}


/* method: setCreateNode */
void   setCreateNode(Environment *ev,
		string pszCrnode)
{
   SOM_ResolveD(this,ACBL0022,ACBL0022,setCreateNode)
	(this, ev,pszCrnode);
}


/* method: setKey */
void   setKey(Environment *ev,
		AWD_PAWDOBJECTKEYSTRCT pKey)
{
   SOM_ResolveD(this,ACBL0022,ACBL0022,setKey)
	(this, ev,pKey);
}


/* method: setRecordCode */
void   setRecordCode(Environment *ev,
		char cRecordcd)
{
   SOM_ResolveD(this,ACBL0022,ACBL0022,setRecordCode)
	(this, ev,cRecordcd);
}


/* method: setStickyFlag */
void   setStickyFlag(Environment *ev,
		char cStickyFlag)
{
   SOM_ResolveD(this,ACBL0022,ACBL0022,setStickyFlag)
	(this, ev,cStickyFlag);
}


/* method: setUserid */
void   setUserid(Environment *ev,
		string pszUserid)
{
   SOM_ResolveD(this,ACBL0022,ACBL0022,setUserid)
	(this, ev,pszUserid);
}


/*
 * Reintroduce inherited methods
 */

/* method: app */
string   app(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,app)
	(this, ev);
}


/* method: setApp */
void   setApp(Environment *ev,
		string app)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setApp)
	(this, ev,app);
}


/* method: targetApp */
string   targetApp(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,targetApp)
	(this, ev);
}


/* method: setTargetApp */
void   setTargetApp(Environment *ev,
		string target)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setTargetApp)
	(this, ev,target);
}


/* method: name */
string   name(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,name)
	(this, ev);
}


/* method: setName */
void   setName(Environment *ev,
		string aName)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setName)
	(this, ev,aName);
}


/* method: size */
unsigned long   size(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,size)
	(this, ev);
}


/* method: setSize */
void   setSize(Environment *ev,
		unsigned long size)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setSize)
	(this, ev,size);
}


/* method: sendData */
void*   sendData(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,sendData)
	(this, ev);
}


/* method: setSendData */
void   setSendData(Environment *ev,
		void* data)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setSendData)
	(this, ev,data);
}


/* method: mode */
AWDView_view_type   mode(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,mode)
	(this, ev);
}


/* method: setMode */
void   setMode(Environment *ev,
		AWDView_view_type viewtype)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setMode)
	(this, ev,viewtype);
}


/* method: hwndNotify */
unsigned long   hwndNotify(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,hwndNotify)
	(this, ev);
}


/* method: sethwndNotify */
void   sethwndNotify(Environment *ev,
		unsigned long hwndNotify)
{
   SOM_ResolveD(this,ACBL0022,AWDView,sethwndNotify)
	(this, ev,hwndNotify);
}


/* method: returnMsg */
unsigned long   returnMsg(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,returnMsg)
	(this, ev);
}


/* method: setReturnMsg */
void   setReturnMsg(Environment *ev,
		unsigned long msg)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setReturnMsg)
	(this, ev,msg);
}


/* method: pfnCallBack */
void*   pfnCallBack(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,pfnCallBack)
	(this, ev);
}


/* method: setpfnCallBack */
void   setpfnCallBack(Environment *ev,
		void* pfnCallback)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setpfnCallBack)
	(this, ev,pfnCallback);
}


/* method: timeOut */
unsigned long   timeOut(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,timeOut)
	(this, ev);
}


/* method: setTimeOut */
void   setTimeOut(Environment *ev,
		unsigned long timeout)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setTimeOut)
	(this, ev,timeout);
}


/* method: host */
string   host(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,host)
	(this, ev);
}


/* method: setHost */
void   setHost(Environment *ev,
		string host)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setHost)
	(this, ev,host);
}


/* method: queue */
long   queue(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,queue)
	(this, ev);
}


/* method: setMessageQueue */
void   setMessageQueue(Environment *ev,
		long que)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setMessageQueue)
	(this, ev,que);
}


/* method: receiveData */
void*   receiveData(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,receiveData)
	(this, ev);
}


/* method: setReceiveData */
void   setReceiveData(Environment *ev,
		void* pRData)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setReceiveData)
	(this, ev,pRData);
}


/* method: numRepeats */
unsigned long   numRepeats(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,numRepeats)
	(this, ev);
}


/* method: setNumRepeats */
void   setNumRepeats(Environment *ev,
		unsigned long repeats)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setNumRepeats)
	(this, ev,repeats);
}


/* method: fixedLength */
unsigned long   fixedLength(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,fixedLength)
	(this, ev);
}


/* method: setFixedLength */
void   setFixedLength(Environment *ev,
		unsigned long length)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setFixedLength)
	(this, ev,length);
}


/* method: repeatLength */
unsigned long   repeatLength(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,repeatLength)
	(this, ev);
}


/* method: setRepeatLength */
void   setRepeatLength(Environment *ev,
		unsigned long length)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setRepeatLength)
	(this, ev,length);
}


/* method: currentIndex */
unsigned long   currentIndex(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,currentIndex)
	(this, ev);
}


/* method: setCurrentIndex */
void   setCurrentIndex(Environment *ev,
		unsigned long index)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setCurrentIndex)
	(this, ev,index);
}


/* method: lastView */
void*   lastView(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,lastView)
	(this, ev);
}


/* method: setLastView */
void   setLastView(Environment *ev,
		void* pRData)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setLastView)
	(this, ev,pRData);
}


/* method: startData */
void*   startData(Environment *ev,
		string app,
		string targetapp,
		string viewname,
		void* senddata,
		unsigned long size,
		AWDView_view_type mode,
		void* pfn,
		unsigned long timeout,
		unsigned long hwndnotify,
		unsigned long returnmsg,
		long queue,
		string host)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,startData)
	(this, ev,app,targetapp,viewname,senddata,size,mode,pfn,timeout,hwndnotify,returnmsg,queue,host);
}


/* method: start */
void*   start(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,start)
	(this, ev);
}


/* method: getRecord */
void*   getRecord(Environment *ev,
		void* pv,
		unsigned long userIndex,
		AWDView_index_type indexvalue)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,getRecord)
	(this, ev,pv,userIndex,indexvalue);
}


/* method: check */
boolean   check(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,check)
	(this, ev);
}


/* method: checkForException */
void   checkForException(Environment *ev)
{
   SOM_ResolveD(this,ACBL0022,AWDView,checkForException)
	(this, ev);
}


/* method: setException */
void   setException(Environment *ev,
		unsigned short excType,
		string pszFile,
		unsigned short usLine,
		string pszMessage,
		unsigned short usReturnCd)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setException)
	(this, ev,excType,pszFile,usLine,pszMessage,usReturnCd);
}


/* method: setViewMessage */
void   setViewMessage(Environment *ev,
		string pszMessage)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setViewMessage)
	(this, ev,pszMessage);
}


/* method: viewMessage */
string   viewMessage(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,viewMessage)
	(this, ev);
}


/* method: startString */
void*   startString(Environment *ev,
		string pszSetupString)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,startString)
	(this, ev,pszSetupString);
}


/* method: scanArgString */
boolean   scanArgString(Environment *ev,
		string pszSetupString,
		string pszKey,
		string pszValue,
		unsigned long* pcbValue)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,scanArgString)
	(this, ev,pszSetupString,pszKey,pszValue,pcbValue);
}


/* method: isComplete */
boolean   isComplete(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,isComplete)
	(this, ev);
}


/* method: restart */
void*   restart(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,restart)
	(this, ev);
}


/* method: resolveIndex */
void*   resolveIndex(Environment *ev,
		unsigned long* ulIndex)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,resolveIndex)
	(this, ev,ulIndex);
}


/* method: addData */
boolean   addData(Environment *ev,
		void* pRcvData,
		unsigned long ulNumberofRepeats)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,addData)
	(this, ev,pRcvData,ulNumberofRepeats);
}


/* method: buffer */
void*   buffer(Environment *ev,
		AWDView_index_type index,
		unsigned long theindex,
		unsigned long* pulRepeats)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,buffer)
	(this, ev,index,theindex,pulRepeats);
}


/* method: errCode */
unsigned long   errCode(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,errCode)
	(this, ev);
}


/* method: errMsg */
string   errMsg(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,errMsg)
	(this, ev);
}


/* method: setConnection */
AWDConnection*   setConnection(Environment *ev,
		AWDConnection* con)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,setConnection)
	(this, ev,con);
}


/* method: localConnection */
AWDConnection*   localConnection(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,localConnection)
	(this, ev);
}


/* method: setAutoRestart */
void   setAutoRestart(Environment *ev,
		boolean flag)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setAutoRestart)
	(this, ev,flag);
}


/* method: isAutoRestart */
boolean   isAutoRestart(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,isAutoRestart)
	(this, ev);
}


/* method: reset */
void   reset(Environment *ev)
{
   SOM_ResolveD(this,ACBL0022,AWDView,reset)
	(this, ev);
}


/* method: validateInput */
boolean   validateInput(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,validateInput)
	(this, ev);
}


/* method: setPersistent */
void   setPersistent(Environment *ev,
		boolean flag)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setPersistent)
	(this, ev,flag);
}


/* method: isPersistent */
boolean   isPersistent(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,isPersistent)
	(this, ev);
}


/* method: setInProcess */
void   setInProcess(Environment *ev,
		boolean flag)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setInProcess)
	(this, ev,flag);
}


/* method: isInProcess */
boolean   isInProcess(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,isInProcess)
	(this, ev);
}


/* method: setPrimaryRc */
void   setPrimaryRc(Environment *ev,
		unsigned long rc)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setPrimaryRc)
	(this, ev,rc);
}


/* method: primaryRc */
unsigned long   primaryRc(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,primaryRc)
	(this, ev);
}


/* method: setSecondaryRc */
void   setSecondaryRc(Environment *ev,
		unsigned long rc)
{
   SOM_ResolveD(this,ACBL0022,AWDView,setSecondaryRc)
	(this, ev,rc);
}


/* method: secondaryRc */
unsigned long   secondaryRc(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,AWDView,secondaryRc)
	(this, ev);
}


/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,ACBL0022,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,ACBL0022,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: somfMLinkableInit */
somf_MLinkable*   somfMLinkableInit(Environment *ev,
		somf_MLinkable* n,
		somf_MLinkable* p)
{
   return SOM_ResolveD(this,ACBL0022,somf_MLinkable,somfMLinkableInit)
	(this, ev,n,p);
}


/* method: somfGetNext */
somf_MLinkable*   somfGetNext(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,somf_MLinkable,somfGetNext)
	(this, ev);
}


/* method: somfSetNext */
void   somfSetNext(Environment *ev,
		somf_MLinkable* aLink)
{
   SOM_ResolveD(this,ACBL0022,somf_MLinkable,somfSetNext)
	(this, ev,aLink);
}


/* method: somfGetPrevious */
somf_MLinkable*   somfGetPrevious(Environment *ev)
{
   return SOM_ResolveD(this,ACBL0022,somf_MLinkable,somfGetPrevious)
	(this, ev);
}


/* method: somfSetPrevious */
void   somfSetPrevious(Environment *ev,
		somf_MLinkable* aLink)
{
   SOM_ResolveD(this,ACBL0022,somf_MLinkable,somfSetPrevious)
	(this, ev,aLink);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,ACBL0022,SOMObject,somInit)
	(this);
}


/* initializer method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,ACBL0022,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
ACBL0022*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,ACBL0022,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,ACBL0022,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,ACBL0022,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
ACBL0022*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
ACBL0022*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
ACBL0022*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,ACBL0022,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,ACBL0022,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   ACBL0022_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,ACBL0022,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,ACBL0022,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   ACBL0022_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,ACBL0022,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,ACBL0022,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somResetObj)
	(this);
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,ACBL0022,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,ACBL0022,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,ACBL0022,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* ACBL0022 */



#endif       /* SOM_ACBL0022_xh */
