
#ifndef SOM_AWDDateTimeField_xh
#define SOM_AWDDateTimeField_xh

class AWDDateTimeField;

#define AWDDateTimeField_MajorVersion 2
#define AWDDateTimeField_MinorVersion 3

/*
 * Passthru lines: File: "C.xh", "before"
 */
#include "field.xh"

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_AWDBaseField_xh
#include <field.xh>
#endif

#ifndef AWDDateTimeField_API
#define AWDDateTimeField_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class AWDConnection;
class AWDException;
class AWDApplication;
class AWDPersist;
class AWDBase;
class iostream;
class AWDData;
class AWDDate;
class AWDTime;

/*
 * End of user-defined types.
 */

/* A procedure to create the AWDDateTimeField Class */
SOMEXTERN
#if (defined(SOM_Module_datetime_Source) || defined(AWDDateTimeField_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDDateTimeField))
WIN32_DLLEXPORT
#else
WIN32_DLLIMPORT
#endif
SOMClass * SOMLINK AWDDateTimeFieldNewClass(
		integer4,
		integer4 );

/* The API to the AWDDateTimeField class object, and the methods it introduces. */
SOMEXTERN struct AWDDateTimeFieldClassDataStructure {
	SOMClass *classObject;
	somMToken date;
	somMToken day;
	somMToken hours;
	somMToken initDateTimeFieldObject;
	somMToken isLeapYear;
	somMToken minutes;
	somMToken month;
	somMToken seconds;
	somMToken setDate;
	somMToken setDateFromStamp;
	somMToken setDay;
	somMToken setHours;
	somMToken setMinutes;
	somMToken setMonth;
	somMToken setSeconds;
	somMToken setSubSeconds;
	somMToken setTime;
	somMToken setTimeFromStamp;
	somMToken setYear;
	somMToken subSeconds;
	somMToken time;
	somMToken verifyDate;
	somMToken verifyDay;
	somMToken verifyHours;
	somMToken verifyMinutes;
	somMToken verifyMonth;
	somMToken verifySeconds;
	somMToken verifyTime;
	somMToken verifyYear;
	somMToken year;
	somMToken datetime_withName;
	somMToken datetime_withNameandNumber;
	somMToken datetime_withNameandValue;
	somMToken datetime_withNameNumberandStatus;
	somMToken datetime_withNameNumberandValue;
	somMToken datetime_withNameNumberStatusandValue;
	somMToken datetime_withPersist;
	somMToken datetime_withField;
}
#if !(defined(SOM_Module_datetime_Source) || defined(AWDDateTimeField_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDDateTimeField))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDDateTimeFieldClassData;
#define _AWDDateTimeField AWDDateTimeFieldClassData.classObject

/* The API to parentMtabs for AWDDateTimeField, and the instance data it introduces. */
SOMEXTERN struct AWDDateTimeFieldCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
}
#if !(defined(SOM_Module_datetime_Source) || defined(AWDDateTimeField_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDDateTimeField))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDDateTimeFieldCClassData;

/*
 * -- Typedefs for AWDDateTimeField Method Procedures
 */
extern "C" {
typedef string   SOMLINK somTP_AWDDateTimeField_date(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_date *somTD_AWDDateTimeField_date;
typedef string   SOMLINK somTP_AWDDateTimeField_day(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_day *somTD_AWDDateTimeField_day;
typedef string   SOMLINK somTP_AWDDateTimeField_hours(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_hours *somTD_AWDDateTimeField_hours;
typedef void   SOMLINK somTP_AWDDateTimeField_initDateTimeFieldObject(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_initDateTimeFieldObject *somTD_AWDDateTimeField_initDateTimeFieldObject;
typedef boolean   SOMLINK somTP_AWDDateTimeField_isLeapYear(AWDDateTimeField *somSelf, Environment *ev,
		string year);
typedef somTP_AWDDateTimeField_isLeapYear *somTD_AWDDateTimeField_isLeapYear;
typedef string   SOMLINK somTP_AWDDateTimeField_minutes(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_minutes *somTD_AWDDateTimeField_minutes;
typedef string   SOMLINK somTP_AWDDateTimeField_month(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_month *somTD_AWDDateTimeField_month;
typedef string   SOMLINK somTP_AWDDateTimeField_seconds(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_seconds *somTD_AWDDateTimeField_seconds;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setDate(AWDDateTimeField *somSelf, Environment *ev,
		string date);
typedef somTP_AWDDateTimeField_setDate *somTD_AWDDateTimeField_setDate;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setDateFromStamp(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_setDateFromStamp *somTD_AWDDateTimeField_setDateFromStamp;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setDay(AWDDateTimeField *somSelf, Environment *ev,
		string day);
typedef somTP_AWDDateTimeField_setDay *somTD_AWDDateTimeField_setDay;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setHours(AWDDateTimeField *somSelf, Environment *ev,
		string hours);
typedef somTP_AWDDateTimeField_setHours *somTD_AWDDateTimeField_setHours;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setMinutes(AWDDateTimeField *somSelf, Environment *ev,
		string minutes);
typedef somTP_AWDDateTimeField_setMinutes *somTD_AWDDateTimeField_setMinutes;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setMonth(AWDDateTimeField *somSelf, Environment *ev,
		string month);
typedef somTP_AWDDateTimeField_setMonth *somTD_AWDDateTimeField_setMonth;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setSeconds(AWDDateTimeField *somSelf, Environment *ev,
		string seconds);
typedef somTP_AWDDateTimeField_setSeconds *somTD_AWDDateTimeField_setSeconds;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setSubSeconds(AWDDateTimeField *somSelf, Environment *ev,
		string subSeconds);
typedef somTP_AWDDateTimeField_setSubSeconds *somTD_AWDDateTimeField_setSubSeconds;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setTime(AWDDateTimeField *somSelf, Environment *ev,
		string time);
typedef somTP_AWDDateTimeField_setTime *somTD_AWDDateTimeField_setTime;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setTimeFromStamp(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_setTimeFromStamp *somTD_AWDDateTimeField_setTimeFromStamp;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setYear(AWDDateTimeField *somSelf, Environment *ev,
		string year);
typedef somTP_AWDDateTimeField_setYear *somTD_AWDDateTimeField_setYear;
typedef string   SOMLINK somTP_AWDDateTimeField_subSeconds(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_subSeconds *somTD_AWDDateTimeField_subSeconds;
typedef string   SOMLINK somTP_AWDDateTimeField_time(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_time *somTD_AWDDateTimeField_time;
typedef boolean   SOMLINK somTP_AWDDateTimeField_verifyDate(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_verifyDate *somTD_AWDDateTimeField_verifyDate;
typedef boolean   SOMLINK somTP_AWDDateTimeField_verifyDay(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_verifyDay *somTD_AWDDateTimeField_verifyDay;
typedef boolean   SOMLINK somTP_AWDDateTimeField_verifyHours(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_verifyHours *somTD_AWDDateTimeField_verifyHours;
typedef boolean   SOMLINK somTP_AWDDateTimeField_verifyMinutes(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_verifyMinutes *somTD_AWDDateTimeField_verifyMinutes;
typedef boolean   SOMLINK somTP_AWDDateTimeField_verifyMonth(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_verifyMonth *somTD_AWDDateTimeField_verifyMonth;
typedef boolean   SOMLINK somTP_AWDDateTimeField_verifySeconds(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_verifySeconds *somTD_AWDDateTimeField_verifySeconds;
typedef boolean   SOMLINK somTP_AWDDateTimeField_verifyTime(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_verifyTime *somTD_AWDDateTimeField_verifyTime;
typedef boolean   SOMLINK somTP_AWDDateTimeField_verifyYear(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_verifyYear *somTD_AWDDateTimeField_verifyYear;
typedef string   SOMLINK somTP_AWDDateTimeField_year(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_year *somTD_AWDDateTimeField_year;
typedef void   SOMLINK somTP_AWDDateTimeField_datetime_withName(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName);
typedef somTP_AWDDateTimeField_datetime_withName *somTD_AWDDateTimeField_datetime_withName;
typedef void   SOMLINK somTP_AWDDateTimeField_datetime_withNameandNumber(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber);
typedef somTP_AWDDateTimeField_datetime_withNameandNumber *somTD_AWDDateTimeField_datetime_withNameandNumber;
typedef void   SOMLINK somTP_AWDDateTimeField_datetime_withNameandValue(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		string value);
typedef somTP_AWDDateTimeField_datetime_withNameandValue *somTD_AWDDateTimeField_datetime_withNameandValue;
typedef void   SOMLINK somTP_AWDDateTimeField_datetime_withNameNumberandStatus(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status);
typedef somTP_AWDDateTimeField_datetime_withNameNumberandStatus *somTD_AWDDateTimeField_datetime_withNameNumberandStatus;
typedef void   SOMLINK somTP_AWDDateTimeField_datetime_withNameNumberandValue(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		string value);
typedef somTP_AWDDateTimeField_datetime_withNameNumberandValue *somTD_AWDDateTimeField_datetime_withNameNumberandValue;
typedef void   SOMLINK somTP_AWDDateTimeField_datetime_withNameNumberStatusandValue(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status,
		string value);
typedef somTP_AWDDateTimeField_datetime_withNameNumberStatusandValue *somTD_AWDDateTimeField_datetime_withNameNumberStatusandValue;
typedef void   SOMLINK somTP_AWDDateTimeField_datetime_withPersist(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		AWDPersist* pPersist);
typedef somTP_AWDDateTimeField_datetime_withPersist *somTD_AWDDateTimeField_datetime_withPersist;
typedef void   SOMLINK somTP_AWDDateTimeField_datetime_withField(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		AWDBaseField* pField);
typedef somTP_AWDDateTimeField_datetime_withField *somTD_AWDDateTimeField_datetime_withField;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef string   SOMLINK somTP_AWDDateTimeField_asString(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_asString *somTD_AWDDateTimeField_asString;
typedef string   SOMLINK somTP_AWDDateTimeField_asStringWithMask(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_asStringWithMask *somTD_AWDDateTimeField_asStringWithMask;
typedef string   SOMLINK somTP_AWDDateTimeField_blankMask(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_blankMask *somTD_AWDDateTimeField_blankMask;
typedef string   SOMLINK somTP_AWDDateTimeField_blankString(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_blankString *somTD_AWDDateTimeField_blankString;
typedef short   SOMLINK somTP_AWDDateTimeField_compare(AWDDateTimeField *somSelf, Environment *ev,
		AWDBaseField* pField);
typedef somTP_AWDDateTimeField_compare *somTD_AWDDateTimeField_compare;
typedef boolean   SOMLINK somTP_AWDDateTimeField_determineStatus(AWDDateTimeField *somSelf, Environment *ev,
		string newValue);
typedef somTP_AWDDateTimeField_determineStatus *somTD_AWDDateTimeField_determineStatus;
typedef unsigned short   SOMLINK somTP_AWDDateTimeField_displayLength(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_displayLength *somTD_AWDDateTimeField_displayLength;
typedef void   SOMLINK somTP_AWDDateTimeField_fetchProperties(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_fetchProperties *somTD_AWDDateTimeField_fetchProperties;
typedef AWDBaseField_STATUS   SOMLINK somTP_AWDDateTimeField_getStatus(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_getStatus *somTD_AWDDateTimeField_getStatus;
typedef void   SOMLINK somTP_AWDDateTimeField_initBaseFieldObject(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_initBaseFieldObject *somTD_AWDDateTimeField_initBaseFieldObject;
typedef boolean   SOMLINK somTP_AWDDateTimeField_isBlank(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_isBlank *somTD_AWDDateTimeField_isBlank;
typedef boolean   SOMLINK somTP_AWDDateTimeField_isChanged(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_isChanged *somTD_AWDDateTimeField_isChanged;
typedef boolean   SOMLINK somTP_AWDDateTimeField_isNew(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_isNew *somTD_AWDDateTimeField_isNew;
typedef string   SOMLINK somTP_AWDDateTimeField_mask(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_mask *somTD_AWDDateTimeField_mask;
typedef AWDMask*   SOMLINK somTP_AWDDateTimeField_maskObject(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_maskObject *somTD_AWDDateTimeField_maskObject;
typedef string   SOMLINK somTP_AWDDateTimeField_name(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_name *somTD_AWDDateTimeField_name;
typedef void   SOMLINK somTP_AWDDateTimeField_newMask(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_newMask *somTD_AWDDateTimeField_newMask;
typedef boolean   SOMLINK somTP_AWDDateTimeField_padValue(AWDDateTimeField *somSelf, Environment *ev,
		AWDMask_DIRECTION direction);
typedef somTP_AWDDateTimeField_padValue *somTD_AWDDateTimeField_padValue;
typedef AWDData*   SOMLINK somTP_AWDDateTimeField_properties(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_properties *somTD_AWDDateTimeField_properties;
typedef unsigned short   SOMLINK somTP_AWDDateTimeField_sequenceNumber(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_sequenceNumber *somTD_AWDDateTimeField_sequenceNumber;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setLocalMask(AWDDateTimeField *somSelf, Environment *ev,
		string localmask);
typedef somTP_AWDDateTimeField_setLocalMask *somTD_AWDDateTimeField_setLocalMask;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setName(AWDDateTimeField *somSelf, Environment *ev,
		string aName);
typedef somTP_AWDDateTimeField_setName *somTD_AWDDateTimeField_setName;
typedef void   SOMLINK somTP_AWDDateTimeField_setSequenceNumber(AWDDateTimeField *somSelf, Environment *ev,
		unsigned short seqNumber);
typedef somTP_AWDDateTimeField_setSequenceNumber *somTD_AWDDateTimeField_setSequenceNumber;
typedef void   SOMLINK somTP_AWDDateTimeField_setStatus(AWDDateTimeField *somSelf, Environment *ev,
		AWDBaseField_STATUS status);
typedef somTP_AWDDateTimeField_setStatus *somTD_AWDDateTimeField_setStatus;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setValueFromMaskedString(AWDDateTimeField *somSelf, Environment *ev,
		string value);
typedef somTP_AWDDateTimeField_setValueFromMaskedString *somTD_AWDDateTimeField_setValueFromMaskedString;
typedef boolean   SOMLINK somTP_AWDDateTimeField_setValueFromString(AWDDateTimeField *somSelf, Environment *ev,
		string value);
typedef somTP_AWDDateTimeField_setValueFromString *somTD_AWDDateTimeField_setValueFromString;
typedef unsigned short   SOMLINK somTP_AWDDateTimeField_storeLength(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_storeLength *somTD_AWDDateTimeField_storeLength;
typedef boolean   SOMLINK somTP_AWDDateTimeField_verify(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_verify *somTD_AWDDateTimeField_verify;
typedef void   SOMLINK somTP_AWDDateTimeField_withName(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName);
typedef somTP_AWDDateTimeField_withName *somTD_AWDDateTimeField_withName;
typedef void   SOMLINK somTP_AWDDateTimeField_withNameandNumber(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber);
typedef somTP_AWDDateTimeField_withNameandNumber *somTD_AWDDateTimeField_withNameandNumber;
typedef void   SOMLINK somTP_AWDDateTimeField_withNameandValue(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		string value);
typedef somTP_AWDDateTimeField_withNameandValue *somTD_AWDDateTimeField_withNameandValue;
typedef void   SOMLINK somTP_AWDDateTimeField_withNameNumberandStatus(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status);
typedef somTP_AWDDateTimeField_withNameNumberandStatus *somTD_AWDDateTimeField_withNameNumberandStatus;
typedef void   SOMLINK somTP_AWDDateTimeField_withNameNumberandValue(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		string value);
typedef somTP_AWDDateTimeField_withNameNumberandValue *somTD_AWDDateTimeField_withNameNumberandValue;
typedef void   SOMLINK somTP_AWDDateTimeField_withNameNumberStatusandValue(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status,
		string value);
typedef somTP_AWDDateTimeField_withNameNumberStatusandValue *somTD_AWDDateTimeField_withNameNumberStatusandValue;
typedef void   SOMLINK somTP_AWDDateTimeField_withPersist(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		AWDPersist* pPersist);
typedef somTP_AWDDateTimeField_withPersist *somTD_AWDDateTimeField_withPersist;
typedef void   SOMLINK somTP_AWDDateTimeField_withField(AWDDateTimeField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		AWDBaseField* pField);
typedef somTP_AWDDateTimeField_withField *somTD_AWDDateTimeField_withField;
typedef boolean   SOMLINK somTP_AWDDateTimeField_hasLocalMask(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_hasLocalMask *somTD_AWDDateTimeField_hasLocalMask;
typedef void   SOMLINK somTP_AWDDateTimeField_somDefaultInit(AWDDateTimeField *somSelf,
		somInitCtrl* ctrl);
typedef somTP_AWDDateTimeField_somDefaultInit *somTD_AWDDateTimeField_somDefaultInit;
typedef void   SOMLINK somTP_AWDDateTimeField_somDestruct(AWDDateTimeField *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef somTP_AWDDateTimeField_somDestruct *somTD_AWDDateTimeField_somDestruct;
typedef void   SOMLINK somTP_AWDDateTimeField_store(AWDDateTimeField *somSelf, Environment *ev,
		AWDPersist* pPersist);
typedef somTP_AWDDateTimeField_store *somTD_AWDDateTimeField_store;
typedef void   SOMLINK somTP_AWDDateTimeField_restore(AWDDateTimeField *somSelf, Environment *ev,
		AWDPersist* pPersist);
typedef somTP_AWDDateTimeField_restore *somTD_AWDDateTimeField_restore;
typedef somf_MLinkable*   SOMLINK somTP_AWDDateTimeField_somfMLinkableInit(AWDDateTimeField *somSelf, Environment *ev,
		somf_MLinkable* n,
		somf_MLinkable* p);
typedef somTP_AWDDateTimeField_somfMLinkableInit *somTD_AWDDateTimeField_somfMLinkableInit;
typedef somf_MLinkable*   SOMLINK somTP_AWDDateTimeField_somfGetNext(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_somfGetNext *somTD_AWDDateTimeField_somfGetNext;
typedef void   SOMLINK somTP_AWDDateTimeField_somfSetNext(AWDDateTimeField *somSelf, Environment *ev,
		somf_MLinkable* aLink);
typedef somTP_AWDDateTimeField_somfSetNext *somTD_AWDDateTimeField_somfSetNext;
typedef somf_MLinkable*   SOMLINK somTP_AWDDateTimeField_somfGetPrevious(AWDDateTimeField *somSelf, Environment *ev);
typedef somTP_AWDDateTimeField_somfGetPrevious *somTD_AWDDateTimeField_somfGetPrevious;
typedef void   SOMLINK somTP_AWDDateTimeField_somfSetPrevious(AWDDateTimeField *somSelf, Environment *ev,
		somf_MLinkable* aLink);
typedef somTP_AWDDateTimeField_somfSetPrevious *somTD_AWDDateTimeField_somfSetPrevious;
typedef void   SOMLINK somTP_AWDDateTimeField_somInit(AWDDateTimeField *somSelf);
typedef somTP_AWDDateTimeField_somInit *somTD_AWDDateTimeField_somInit;
typedef void   SOMLINK somTP_AWDDateTimeField_somDefaultCopyInit(AWDDateTimeField *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDDateTimeField_somDefaultCopyInit *somTD_AWDDateTimeField_somDefaultCopyInit;
typedef AWDDateTimeField*   SOMLINK somTP_AWDDateTimeField_somDefaultAssign(AWDDateTimeField *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDDateTimeField_somDefaultAssign *somTD_AWDDateTimeField_somDefaultAssign;
typedef void   SOMLINK somTP_AWDDateTimeField_somDefaultConstCopyInit(AWDDateTimeField *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDDateTimeField_somDefaultConstCopyInit *somTD_AWDDateTimeField_somDefaultConstCopyInit;
typedef void   SOMLINK somTP_AWDDateTimeField_somDefaultVCopyInit(AWDDateTimeField *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDDateTimeField_somDefaultVCopyInit *somTD_AWDDateTimeField_somDefaultVCopyInit;
typedef void   SOMLINK somTP_AWDDateTimeField_somDefaultConstVCopyInit(AWDDateTimeField *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDDateTimeField_somDefaultConstVCopyInit *somTD_AWDDateTimeField_somDefaultConstVCopyInit;
typedef AWDDateTimeField*   SOMLINK somTP_AWDDateTimeField_somDefaultConstAssign(AWDDateTimeField *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDDateTimeField_somDefaultConstAssign *somTD_AWDDateTimeField_somDefaultConstAssign;
typedef AWDDateTimeField*   SOMLINK somTP_AWDDateTimeField_somDefaultVAssign(AWDDateTimeField *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDDateTimeField_somDefaultVAssign *somTD_AWDDateTimeField_somDefaultVAssign;
typedef AWDDateTimeField*   SOMLINK somTP_AWDDateTimeField_somDefaultConstVAssign(AWDDateTimeField *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDDateTimeField_somDefaultConstVAssign *somTD_AWDDateTimeField_somDefaultConstVAssign;
typedef void   SOMLINK somTP_AWDDateTimeField_somFree(AWDDateTimeField *somSelf);
typedef somTP_AWDDateTimeField_somFree *somTD_AWDDateTimeField_somFree;
typedef void   SOMLINK somTP_AWDDateTimeField_somUninit(AWDDateTimeField *somSelf);
typedef somTP_AWDDateTimeField_somUninit *somTD_AWDDateTimeField_somUninit;
typedef SOMClass*   SOMLINK somTP_AWDDateTimeField_somGetClass(AWDDateTimeField *somSelf);
typedef somTP_AWDDateTimeField_somGetClass *somTD_AWDDateTimeField_somGetClass;
typedef string   SOMLINK somTP_AWDDateTimeField_somGetClassName(AWDDateTimeField *somSelf);
typedef somTP_AWDDateTimeField_somGetClassName *somTD_AWDDateTimeField_somGetClassName;
typedef long   SOMLINK somTP_AWDDateTimeField_somGetSize(AWDDateTimeField *somSelf);
typedef somTP_AWDDateTimeField_somGetSize *somTD_AWDDateTimeField_somGetSize;
typedef boolean   SOMLINK somTP_AWDDateTimeField_somIsA(AWDDateTimeField *somSelf,
		SOMClass* aClassObj);
typedef somTP_AWDDateTimeField_somIsA *somTD_AWDDateTimeField_somIsA;
typedef boolean   SOMLINK somTP_AWDDateTimeField_somIsInstanceOf(AWDDateTimeField *somSelf,
		SOMClass* aClassObj);
typedef somTP_AWDDateTimeField_somIsInstanceOf *somTD_AWDDateTimeField_somIsInstanceOf;
typedef boolean   SOMLINK somTP_AWDDateTimeField_somRespondsTo(AWDDateTimeField *somSelf,
		somId mId);
typedef somTP_AWDDateTimeField_somRespondsTo *somTD_AWDDateTimeField_somRespondsTo;
typedef boolean   SOMLINK somTP_AWDDateTimeField_somDispatch(AWDDateTimeField *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_AWDDateTimeField_somDispatch *somTD_AWDDateTimeField_somDispatch;
typedef boolean   SOMLINK somTP_AWDDateTimeField_somClassDispatch(AWDDateTimeField *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_AWDDateTimeField_somClassDispatch *somTD_AWDDateTimeField_somClassDispatch;
typedef boolean   SOMLINK somTP_AWDDateTimeField_somCastObj(AWDDateTimeField *somSelf,
		SOMClass* cls);
typedef somTP_AWDDateTimeField_somCastObj *somTD_AWDDateTimeField_somCastObj;
typedef boolean   SOMLINK somTP_AWDDateTimeField_somResetObj(AWDDateTimeField *somSelf);
typedef somTP_AWDDateTimeField_somResetObj *somTD_AWDDateTimeField_somResetObj;
typedef SOMObject*   SOMLINK somTP_AWDDateTimeField_somPrintSelf(AWDDateTimeField *somSelf);
typedef somTP_AWDDateTimeField_somPrintSelf *somTD_AWDDateTimeField_somPrintSelf;
typedef void   SOMLINK somTP_AWDDateTimeField_somDumpSelf(AWDDateTimeField *somSelf,
		long level);
typedef somTP_AWDDateTimeField_somDumpSelf *somTD_AWDDateTimeField_somDumpSelf;
typedef void   SOMLINK somTP_AWDDateTimeField_somDumpSelfInt(AWDDateTimeField *somSelf,
		long level);
typedef somTP_AWDDateTimeField_somDumpSelfInt *somTD_AWDDateTimeField_somDumpSelfInt;
}

#endif /* AWDDateTimeField_API */


/*
 * -- This emitter believes that method thunks are unavailable,
 * -- so somResolve will be called.
 */
#undef somresolve_
#define somresolve_(obj,mToken) (somResolve(obj,mToken))

/*
 * -- The C++ Wrapper Class for AWDDateTimeField
 */
class AWDDateTimeField : public AWDBaseField
{
public:

// AWDDateTimeField::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_AWDDateTimeField) AWDDateTimeFieldNewClass(AWDDateTimeField_MajorVersion,AWDDateTimeField_MinorVersion);
   return (void*)
      SOM_Resolve(_AWDDateTimeField,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_AWDDateTimeField));
}

// AWDDateTimeField::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

AWDDateTimeField()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDDateTimeFieldCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

AWDDateTimeField(AWDDateTimeField* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDDateTimeFieldCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

AWDDateTimeField(const AWDDateTimeField* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDDateTimeFieldCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

AWDDateTimeField(Environment *ev,string aName) 
{
   datetime_withName(ev,0,aName);
}

AWDDateTimeField(Environment *ev,string aName,unsigned short seqNumber) 
{
   datetime_withNameandNumber(ev,0,aName,seqNumber);
}

AWDDateTimeField(Environment *ev,string aName,string value) 
{
   datetime_withNameandValue(ev,0,aName,value);
}

AWDDateTimeField(Environment *ev,string aName,unsigned short seqNumber,AWDBaseField_STATUS status) 
{
   datetime_withNameNumberandStatus(ev,0,aName,seqNumber,status);
}

AWDDateTimeField(Environment *ev,string aName,unsigned short seqNumber,string value) 
{
   datetime_withNameNumberandValue(ev,0,aName,seqNumber,value);
}

AWDDateTimeField(Environment *ev,string aName,unsigned short seqNumber,AWDBaseField_STATUS status,string value) 
{
   datetime_withNameNumberStatusandValue(ev,0,aName,seqNumber,status,value);
}

AWDDateTimeField(Environment *ev,AWDPersist* pPersist) 
{
   datetime_withPersist(ev,0,pPersist);
}

AWDDateTimeField(Environment *ev,AWDBaseField* pField) 
{
   datetime_withField(ev,0,pField);
}


/* method: date */
string   date(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,date)
	(this, ev);
}


/* method: day */
string   day(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,day)
	(this, ev);
}


/* method: hours */
string   hours(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,hours)
	(this, ev);
}


/* method: initDateTimeFieldObject */
void   initDateTimeFieldObject(Environment *ev)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,initDateTimeFieldObject)
	(this, ev);
}


/* method: isLeapYear */
boolean   isLeapYear(Environment *ev,
		string year)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,isLeapYear)
	(this, ev,year);
}


/* method: minutes */
string   minutes(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,minutes)
	(this, ev);
}


/* method: month */
string   month(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,month)
	(this, ev);
}


/* method: seconds */
string   seconds(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,seconds)
	(this, ev);
}


/* method: setDate */
boolean   setDate(Environment *ev,
		string date)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,setDate)
	(this, ev,date);
}


/* method: setDateFromStamp */
boolean   setDateFromStamp(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,setDateFromStamp)
	(this, ev);
}


/* method: setDay */
boolean   setDay(Environment *ev,
		string day)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,setDay)
	(this, ev,day);
}


/* method: setHours */
boolean   setHours(Environment *ev,
		string hours)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,setHours)
	(this, ev,hours);
}


/* method: setMinutes */
boolean   setMinutes(Environment *ev,
		string minutes)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,setMinutes)
	(this, ev,minutes);
}


/* method: setMonth */
boolean   setMonth(Environment *ev,
		string month)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,setMonth)
	(this, ev,month);
}


/* method: setSeconds */
boolean   setSeconds(Environment *ev,
		string seconds)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,setSeconds)
	(this, ev,seconds);
}


/* method: setSubSeconds */
boolean   setSubSeconds(Environment *ev,
		string subSeconds)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,setSubSeconds)
	(this, ev,subSeconds);
}


/* method: setTime */
boolean   setTime(Environment *ev,
		string time)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,setTime)
	(this, ev,time);
}


/* method: setTimeFromStamp */
boolean   setTimeFromStamp(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,setTimeFromStamp)
	(this, ev);
}


/* method: setYear */
boolean   setYear(Environment *ev,
		string year)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,setYear)
	(this, ev,year);
}


/* method: subSeconds */
string   subSeconds(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,subSeconds)
	(this, ev);
}


/* method: time */
string   time(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,time)
	(this, ev);
}


/* method: verifyDate */
boolean   verifyDate(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,verifyDate)
	(this, ev);
}


/* method: verifyDay */
boolean   verifyDay(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,verifyDay)
	(this, ev);
}


/* method: verifyHours */
boolean   verifyHours(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,verifyHours)
	(this, ev);
}


/* method: verifyMinutes */
boolean   verifyMinutes(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,verifyMinutes)
	(this, ev);
}


/* method: verifyMonth */
boolean   verifyMonth(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,verifyMonth)
	(this, ev);
}


/* method: verifySeconds */
boolean   verifySeconds(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,verifySeconds)
	(this, ev);
}


/* method: verifyTime */
boolean   verifyTime(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,verifyTime)
	(this, ev);
}


/* method: verifyYear */
boolean   verifyYear(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,verifyYear)
	(this, ev);
}


/* method: year */
string   year(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,year)
	(this, ev);
}


/* initializer method: datetime_withName */
void   datetime_withName(Environment *ev,
		somInitCtrl* ctrl,
		string aName)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,datetime_withName)
	(this, ev,ctrl,aName);
}


/* initializer method: datetime_withNameandNumber */
void   datetime_withNameandNumber(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,datetime_withNameandNumber)
	(this, ev,ctrl,aName,seqNumber);
}


/* initializer method: datetime_withNameandValue */
void   datetime_withNameandValue(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		string value)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,datetime_withNameandValue)
	(this, ev,ctrl,aName,value);
}


/* initializer method: datetime_withNameNumberandStatus */
void   datetime_withNameNumberandStatus(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,datetime_withNameNumberandStatus)
	(this, ev,ctrl,aName,seqNumber,status);
}


/* initializer method: datetime_withNameNumberandValue */
void   datetime_withNameNumberandValue(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		string value)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,datetime_withNameNumberandValue)
	(this, ev,ctrl,aName,seqNumber,value);
}


/* initializer method: datetime_withNameNumberStatusandValue */
void   datetime_withNameNumberStatusandValue(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status,
		string value)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,datetime_withNameNumberStatusandValue)
	(this, ev,ctrl,aName,seqNumber,status,value);
}


/* initializer method: datetime_withPersist */
void   datetime_withPersist(Environment *ev,
		somInitCtrl* ctrl,
		AWDPersist* pPersist)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,datetime_withPersist)
	(this, ev,ctrl,pPersist);
}


/* initializer method: datetime_withField */
void   datetime_withField(Environment *ev,
		somInitCtrl* ctrl,
		AWDBaseField* pField)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDDateTimeField,datetime_withField)
	(this, ev,ctrl,pField);
}


/*
 * Reintroduce inherited methods
 */

/* method: asString */
string   asString(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,asString)
	(this, ev);
}


/* method: asStringWithMask */
string   asStringWithMask(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,asStringWithMask)
	(this, ev);
}


/* method: blankMask */
string   blankMask(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,blankMask)
	(this, ev);
}


/* method: blankString */
string   blankString(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,blankString)
	(this, ev);
}


/* method: compare */
short   compare(Environment *ev,
		AWDBaseField* pField)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,compare)
	(this, ev,pField);
}


/* method: determineStatus */
boolean   determineStatus(Environment *ev,
		string newValue)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,determineStatus)
	(this, ev,newValue);
}


/* method: displayLength */
unsigned short   displayLength(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,displayLength)
	(this, ev);
}


/* method: fetchProperties */
void   fetchProperties(Environment *ev)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,fetchProperties)
	(this, ev);
}


/* method: getStatus */
AWDBaseField_STATUS   getStatus(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,getStatus)
	(this, ev);
}


/* method: initBaseFieldObject */
void   initBaseFieldObject(Environment *ev)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,initBaseFieldObject)
	(this, ev);
}


/* method: isBlank */
boolean   isBlank(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,isBlank)
	(this, ev);
}


/* method: isChanged */
boolean   isChanged(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,isChanged)
	(this, ev);
}


/* method: isNew */
boolean   isNew(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,isNew)
	(this, ev);
}


/* method: mask */
string   mask(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,mask)
	(this, ev);
}


/* method: maskObject */
AWDMask*   maskObject(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,maskObject)
	(this, ev);
}


/* method: name */
string   name(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,name)
	(this, ev);
}


/* method: newMask */
void   newMask(Environment *ev)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,newMask)
	(this, ev);
}


/* method: padValue */
boolean   padValue(Environment *ev,
		AWDMask_DIRECTION direction)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,padValue)
	(this, ev,direction);
}


/* method: properties */
AWDData*   properties(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,properties)
	(this, ev);
}


/* method: sequenceNumber */
unsigned short   sequenceNumber(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,sequenceNumber)
	(this, ev);
}


/* method: setLocalMask */
boolean   setLocalMask(Environment *ev,
		string localmask)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,setLocalMask)
	(this, ev,localmask);
}


/* method: setName */
boolean   setName(Environment *ev,
		string aName)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,setName)
	(this, ev,aName);
}


/* method: setSequenceNumber */
void   setSequenceNumber(Environment *ev,
		unsigned short seqNumber)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,setSequenceNumber)
	(this, ev,seqNumber);
}


/* method: setStatus */
void   setStatus(Environment *ev,
		AWDBaseField_STATUS status)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,setStatus)
	(this, ev,status);
}


/* method: setValueFromMaskedString */
boolean   setValueFromMaskedString(Environment *ev,
		string value)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,setValueFromMaskedString)
	(this, ev,value);
}


/* method: setValueFromString */
boolean   setValueFromString(Environment *ev,
		string value)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,setValueFromString)
	(this, ev,value);
}


/* method: storeLength */
unsigned short   storeLength(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,storeLength)
	(this, ev);
}


/* method: verify */
boolean   verify(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,verify)
	(this, ev);
}


/* initializer method: withName */
void   withName(Environment *ev,
		somInitCtrl* ctrl,
		string aName)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,withName)
	(this, ev,ctrl,aName);
}


/* initializer method: withNameandNumber */
void   withNameandNumber(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,withNameandNumber)
	(this, ev,ctrl,aName,seqNumber);
}


/* initializer method: withNameandValue */
void   withNameandValue(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		string value)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,withNameandValue)
	(this, ev,ctrl,aName,value);
}


/* initializer method: withNameNumberandStatus */
void   withNameNumberandStatus(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,withNameNumberandStatus)
	(this, ev,ctrl,aName,seqNumber,status);
}


/* initializer method: withNameNumberandValue */
void   withNameNumberandValue(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		string value)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,withNameNumberandValue)
	(this, ev,ctrl,aName,seqNumber,value);
}


/* initializer method: withNameNumberStatusandValue */
void   withNameNumberStatusandValue(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status,
		string value)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,withNameNumberStatusandValue)
	(this, ev,ctrl,aName,seqNumber,status,value);
}


/* initializer method: withPersist */
void   withPersist(Environment *ev,
		somInitCtrl* ctrl,
		AWDPersist* pPersist)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,withPersist)
	(this, ev,ctrl,pPersist);
}


/* initializer method: withField */
void   withField(Environment *ev,
		somInitCtrl* ctrl,
		AWDBaseField* pField)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,withField)
	(this, ev,ctrl,pField);
}


/* method: hasLocalMask */
boolean   hasLocalMask(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,AWDBaseField,hasLocalMask)
	(this, ev);
}


/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: store */
void   store(Environment *ev,
		AWDPersist* pPersist)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDCommon,store)
	(this, ev,pPersist);
}


/* method: restore */
void   restore(Environment *ev,
		AWDPersist* pPersist)
{
   SOM_ResolveD(this,AWDDateTimeField,AWDCommon,restore)
	(this, ev,pPersist);
}


/* method: somfMLinkableInit */
somf_MLinkable*   somfMLinkableInit(Environment *ev,
		somf_MLinkable* n,
		somf_MLinkable* p)
{
   return SOM_ResolveD(this,AWDDateTimeField,somf_MLinkable,somfMLinkableInit)
	(this, ev,n,p);
}


/* method: somfGetNext */
somf_MLinkable*   somfGetNext(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,somf_MLinkable,somfGetNext)
	(this, ev);
}


/* method: somfSetNext */
void   somfSetNext(Environment *ev,
		somf_MLinkable* aLink)
{
   SOM_ResolveD(this,AWDDateTimeField,somf_MLinkable,somfSetNext)
	(this, ev,aLink);
}


/* method: somfGetPrevious */
somf_MLinkable*   somfGetPrevious(Environment *ev)
{
   return SOM_ResolveD(this,AWDDateTimeField,somf_MLinkable,somfGetPrevious)
	(this, ev);
}


/* method: somfSetPrevious */
void   somfSetPrevious(Environment *ev,
		somf_MLinkable* aLink)
{
   SOM_ResolveD(this,AWDDateTimeField,somf_MLinkable,somfSetPrevious)
	(this, ev,aLink);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,AWDDateTimeField,SOMObject,somInit)
	(this);
}


/* initializer method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
AWDDateTimeField*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
AWDDateTimeField*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
AWDDateTimeField*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
AWDDateTimeField*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,AWDDateTimeField,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,AWDDateTimeField,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   AWDDateTimeField_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   AWDDateTimeField_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,AWDDateTimeField,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somResetObj)
	(this);
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,AWDDateTimeField,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,AWDDateTimeField,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* AWDDateTimeField */



#endif       /* SOM_AWDDateTimeField_xh */
