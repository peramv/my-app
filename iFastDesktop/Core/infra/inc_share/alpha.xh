
#ifndef SOM_AWDAlphaField_xh
#define SOM_AWDAlphaField_xh

class AWDAlphaField;

#define AWDAlphaField_MajorVersion 2
#define AWDAlphaField_MinorVersion 3

/*
 * Passthru lines: File: "C.xh", "before"
 */
#include "field.xh"

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_AWDBaseField_xh
#include <field.xh>
#endif

#ifndef AWDAlphaField_API
#define AWDAlphaField_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class AWDConnection;
class AWDException;
class AWDApplication;
class AWDPersist;
class AWDBase;
class iostream;
class AWDData;

/*
 * End of user-defined types.
 */

/* A procedure to create the AWDAlphaField Class */
SOMEXTERN
#if (defined(SOM_Module_alpha_Source) || defined(AWDAlphaField_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDAlphaField))
WIN32_DLLEXPORT
#else
WIN32_DLLIMPORT
#endif
SOMClass * SOMLINK AWDAlphaFieldNewClass(
		integer4,
		integer4 );

/* The API to the AWDAlphaField class object, and the methods it introduces. */
SOMEXTERN struct AWDAlphaFieldClassDataStructure {
	SOMClass *classObject;
	somMToken initAlphaFieldObject;
	somMToken alpha_withName;
	somMToken alpha_withNameandNumber;
	somMToken alpha_withNameandValue;
	somMToken alpha_withNameNumberandStatus;
	somMToken alpha_withNameNumberandValue;
	somMToken alpha_withNameNumberStatusandValue;
	somMToken alpha_withPersist;
	somMToken alpha_withField;
	somMToken padDataValue;
}
#if !(defined(SOM_Module_alpha_Source) || defined(AWDAlphaField_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDAlphaField))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDAlphaFieldClassData;
#define _AWDAlphaField AWDAlphaFieldClassData.classObject

/* The API to parentMtabs for AWDAlphaField, and the instance data it introduces. */
SOMEXTERN struct AWDAlphaFieldCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
}
#if !(defined(SOM_Module_alpha_Source) || defined(AWDAlphaField_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDAlphaField))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDAlphaFieldCClassData;

/*
 * -- Typedefs for AWDAlphaField Method Procedures
 */
extern "C" {
typedef boolean   SOMLINK somTP_AWDAlphaField_padDataValue(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_padDataValue *somTD_AWDAlphaField_padDataValue;
typedef void   SOMLINK somTP_AWDAlphaField_initAlphaFieldObject(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_initAlphaFieldObject *somTD_AWDAlphaField_initAlphaFieldObject;
typedef void   SOMLINK somTP_AWDAlphaField_alpha_withName(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName);
typedef somTP_AWDAlphaField_alpha_withName *somTD_AWDAlphaField_alpha_withName;
typedef void   SOMLINK somTP_AWDAlphaField_alpha_withNameandNumber(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber);
typedef somTP_AWDAlphaField_alpha_withNameandNumber *somTD_AWDAlphaField_alpha_withNameandNumber;
typedef void   SOMLINK somTP_AWDAlphaField_alpha_withNameandValue(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		string value);
typedef somTP_AWDAlphaField_alpha_withNameandValue *somTD_AWDAlphaField_alpha_withNameandValue;
typedef void   SOMLINK somTP_AWDAlphaField_alpha_withNameNumberandStatus(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status);
typedef somTP_AWDAlphaField_alpha_withNameNumberandStatus *somTD_AWDAlphaField_alpha_withNameNumberandStatus;
typedef void   SOMLINK somTP_AWDAlphaField_alpha_withNameNumberandValue(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		string value);
typedef somTP_AWDAlphaField_alpha_withNameNumberandValue *somTD_AWDAlphaField_alpha_withNameNumberandValue;
typedef void   SOMLINK somTP_AWDAlphaField_alpha_withNameNumberStatusandValue(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status,
		string value);
typedef somTP_AWDAlphaField_alpha_withNameNumberStatusandValue *somTD_AWDAlphaField_alpha_withNameNumberStatusandValue;
typedef void   SOMLINK somTP_AWDAlphaField_alpha_withPersist(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		AWDPersist* pPersist);
typedef somTP_AWDAlphaField_alpha_withPersist *somTD_AWDAlphaField_alpha_withPersist;
typedef void   SOMLINK somTP_AWDAlphaField_alpha_withField(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		AWDBaseField* pField);
typedef somTP_AWDAlphaField_alpha_withField *somTD_AWDAlphaField_alpha_withField;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef string   SOMLINK somTP_AWDAlphaField_asString(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_asString *somTD_AWDAlphaField_asString;
typedef string   SOMLINK somTP_AWDAlphaField_asStringWithMask(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_asStringWithMask *somTD_AWDAlphaField_asStringWithMask;
typedef string   SOMLINK somTP_AWDAlphaField_blankMask(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_blankMask *somTD_AWDAlphaField_blankMask;
typedef string   SOMLINK somTP_AWDAlphaField_blankString(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_blankString *somTD_AWDAlphaField_blankString;
typedef short   SOMLINK somTP_AWDAlphaField_compare(AWDAlphaField *somSelf, Environment *ev,
		AWDBaseField* pField);
typedef somTP_AWDAlphaField_compare *somTD_AWDAlphaField_compare;
typedef boolean   SOMLINK somTP_AWDAlphaField_determineStatus(AWDAlphaField *somSelf, Environment *ev,
		string newValue);
typedef somTP_AWDAlphaField_determineStatus *somTD_AWDAlphaField_determineStatus;
typedef unsigned short   SOMLINK somTP_AWDAlphaField_displayLength(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_displayLength *somTD_AWDAlphaField_displayLength;
typedef void   SOMLINK somTP_AWDAlphaField_fetchProperties(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_fetchProperties *somTD_AWDAlphaField_fetchProperties;
typedef AWDBaseField_STATUS   SOMLINK somTP_AWDAlphaField_getStatus(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_getStatus *somTD_AWDAlphaField_getStatus;
typedef void   SOMLINK somTP_AWDAlphaField_initBaseFieldObject(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_initBaseFieldObject *somTD_AWDAlphaField_initBaseFieldObject;
typedef boolean   SOMLINK somTP_AWDAlphaField_isBlank(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_isBlank *somTD_AWDAlphaField_isBlank;
typedef boolean   SOMLINK somTP_AWDAlphaField_isChanged(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_isChanged *somTD_AWDAlphaField_isChanged;
typedef boolean   SOMLINK somTP_AWDAlphaField_isNew(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_isNew *somTD_AWDAlphaField_isNew;
typedef string   SOMLINK somTP_AWDAlphaField_mask(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_mask *somTD_AWDAlphaField_mask;
typedef AWDMask*   SOMLINK somTP_AWDAlphaField_maskObject(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_maskObject *somTD_AWDAlphaField_maskObject;
typedef string   SOMLINK somTP_AWDAlphaField_name(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_name *somTD_AWDAlphaField_name;
typedef void   SOMLINK somTP_AWDAlphaField_newMask(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_newMask *somTD_AWDAlphaField_newMask;
typedef boolean   SOMLINK somTP_AWDAlphaField_padValue(AWDAlphaField *somSelf, Environment *ev,
		AWDMask_DIRECTION direction);
typedef somTP_AWDAlphaField_padValue *somTD_AWDAlphaField_padValue;
typedef AWDData*   SOMLINK somTP_AWDAlphaField_properties(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_properties *somTD_AWDAlphaField_properties;
typedef unsigned short   SOMLINK somTP_AWDAlphaField_sequenceNumber(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_sequenceNumber *somTD_AWDAlphaField_sequenceNumber;
typedef boolean   SOMLINK somTP_AWDAlphaField_setLocalMask(AWDAlphaField *somSelf, Environment *ev,
		string localmask);
typedef somTP_AWDAlphaField_setLocalMask *somTD_AWDAlphaField_setLocalMask;
typedef boolean   SOMLINK somTP_AWDAlphaField_setName(AWDAlphaField *somSelf, Environment *ev,
		string aName);
typedef somTP_AWDAlphaField_setName *somTD_AWDAlphaField_setName;
typedef void   SOMLINK somTP_AWDAlphaField_setSequenceNumber(AWDAlphaField *somSelf, Environment *ev,
		unsigned short seqNumber);
typedef somTP_AWDAlphaField_setSequenceNumber *somTD_AWDAlphaField_setSequenceNumber;
typedef void   SOMLINK somTP_AWDAlphaField_setStatus(AWDAlphaField *somSelf, Environment *ev,
		AWDBaseField_STATUS status);
typedef somTP_AWDAlphaField_setStatus *somTD_AWDAlphaField_setStatus;
typedef boolean   SOMLINK somTP_AWDAlphaField_setValueFromMaskedString(AWDAlphaField *somSelf, Environment *ev,
		string value);
typedef somTP_AWDAlphaField_setValueFromMaskedString *somTD_AWDAlphaField_setValueFromMaskedString;
typedef boolean   SOMLINK somTP_AWDAlphaField_setValueFromString(AWDAlphaField *somSelf, Environment *ev,
		string value);
typedef somTP_AWDAlphaField_setValueFromString *somTD_AWDAlphaField_setValueFromString;
typedef unsigned short   SOMLINK somTP_AWDAlphaField_storeLength(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_storeLength *somTD_AWDAlphaField_storeLength;
typedef boolean   SOMLINK somTP_AWDAlphaField_verify(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_verify *somTD_AWDAlphaField_verify;
typedef void   SOMLINK somTP_AWDAlphaField_withName(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName);
typedef somTP_AWDAlphaField_withName *somTD_AWDAlphaField_withName;
typedef void   SOMLINK somTP_AWDAlphaField_withNameandNumber(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber);
typedef somTP_AWDAlphaField_withNameandNumber *somTD_AWDAlphaField_withNameandNumber;
typedef void   SOMLINK somTP_AWDAlphaField_withNameandValue(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		string value);
typedef somTP_AWDAlphaField_withNameandValue *somTD_AWDAlphaField_withNameandValue;
typedef void   SOMLINK somTP_AWDAlphaField_withNameNumberandStatus(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status);
typedef somTP_AWDAlphaField_withNameNumberandStatus *somTD_AWDAlphaField_withNameNumberandStatus;
typedef void   SOMLINK somTP_AWDAlphaField_withNameNumberandValue(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		string value);
typedef somTP_AWDAlphaField_withNameNumberandValue *somTD_AWDAlphaField_withNameNumberandValue;
typedef void   SOMLINK somTP_AWDAlphaField_withNameNumberStatusandValue(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status,
		string value);
typedef somTP_AWDAlphaField_withNameNumberStatusandValue *somTD_AWDAlphaField_withNameNumberStatusandValue;
typedef void   SOMLINK somTP_AWDAlphaField_withPersist(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		AWDPersist* pPersist);
typedef somTP_AWDAlphaField_withPersist *somTD_AWDAlphaField_withPersist;
typedef void   SOMLINK somTP_AWDAlphaField_withField(AWDAlphaField *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		AWDBaseField* pField);
typedef somTP_AWDAlphaField_withField *somTD_AWDAlphaField_withField;
typedef boolean   SOMLINK somTP_AWDAlphaField_hasLocalMask(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_hasLocalMask *somTD_AWDAlphaField_hasLocalMask;
typedef void   SOMLINK somTP_AWDAlphaField_somDefaultInit(AWDAlphaField *somSelf,
		somInitCtrl* ctrl);
typedef somTP_AWDAlphaField_somDefaultInit *somTD_AWDAlphaField_somDefaultInit;
typedef void   SOMLINK somTP_AWDAlphaField_somDestruct(AWDAlphaField *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef somTP_AWDAlphaField_somDestruct *somTD_AWDAlphaField_somDestruct;
typedef void   SOMLINK somTP_AWDAlphaField_store(AWDAlphaField *somSelf, Environment *ev,
		AWDPersist* pPersist);
typedef somTP_AWDAlphaField_store *somTD_AWDAlphaField_store;
typedef void   SOMLINK somTP_AWDAlphaField_restore(AWDAlphaField *somSelf, Environment *ev,
		AWDPersist* pPersist);
typedef somTP_AWDAlphaField_restore *somTD_AWDAlphaField_restore;
typedef somf_MLinkable*   SOMLINK somTP_AWDAlphaField_somfMLinkableInit(AWDAlphaField *somSelf, Environment *ev,
		somf_MLinkable* n,
		somf_MLinkable* p);
typedef somTP_AWDAlphaField_somfMLinkableInit *somTD_AWDAlphaField_somfMLinkableInit;
typedef somf_MLinkable*   SOMLINK somTP_AWDAlphaField_somfGetNext(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_somfGetNext *somTD_AWDAlphaField_somfGetNext;
typedef void   SOMLINK somTP_AWDAlphaField_somfSetNext(AWDAlphaField *somSelf, Environment *ev,
		somf_MLinkable* aLink);
typedef somTP_AWDAlphaField_somfSetNext *somTD_AWDAlphaField_somfSetNext;
typedef somf_MLinkable*   SOMLINK somTP_AWDAlphaField_somfGetPrevious(AWDAlphaField *somSelf, Environment *ev);
typedef somTP_AWDAlphaField_somfGetPrevious *somTD_AWDAlphaField_somfGetPrevious;
typedef void   SOMLINK somTP_AWDAlphaField_somfSetPrevious(AWDAlphaField *somSelf, Environment *ev,
		somf_MLinkable* aLink);
typedef somTP_AWDAlphaField_somfSetPrevious *somTD_AWDAlphaField_somfSetPrevious;
typedef void   SOMLINK somTP_AWDAlphaField_somInit(AWDAlphaField *somSelf);
typedef somTP_AWDAlphaField_somInit *somTD_AWDAlphaField_somInit;
typedef void   SOMLINK somTP_AWDAlphaField_somDefaultCopyInit(AWDAlphaField *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDAlphaField_somDefaultCopyInit *somTD_AWDAlphaField_somDefaultCopyInit;
typedef AWDAlphaField*   SOMLINK somTP_AWDAlphaField_somDefaultAssign(AWDAlphaField *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDAlphaField_somDefaultAssign *somTD_AWDAlphaField_somDefaultAssign;
typedef void   SOMLINK somTP_AWDAlphaField_somDefaultConstCopyInit(AWDAlphaField *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDAlphaField_somDefaultConstCopyInit *somTD_AWDAlphaField_somDefaultConstCopyInit;
typedef void   SOMLINK somTP_AWDAlphaField_somDefaultVCopyInit(AWDAlphaField *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDAlphaField_somDefaultVCopyInit *somTD_AWDAlphaField_somDefaultVCopyInit;
typedef void   SOMLINK somTP_AWDAlphaField_somDefaultConstVCopyInit(AWDAlphaField *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDAlphaField_somDefaultConstVCopyInit *somTD_AWDAlphaField_somDefaultConstVCopyInit;
typedef AWDAlphaField*   SOMLINK somTP_AWDAlphaField_somDefaultConstAssign(AWDAlphaField *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDAlphaField_somDefaultConstAssign *somTD_AWDAlphaField_somDefaultConstAssign;
typedef AWDAlphaField*   SOMLINK somTP_AWDAlphaField_somDefaultVAssign(AWDAlphaField *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDAlphaField_somDefaultVAssign *somTD_AWDAlphaField_somDefaultVAssign;
typedef AWDAlphaField*   SOMLINK somTP_AWDAlphaField_somDefaultConstVAssign(AWDAlphaField *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDAlphaField_somDefaultConstVAssign *somTD_AWDAlphaField_somDefaultConstVAssign;
typedef void   SOMLINK somTP_AWDAlphaField_somFree(AWDAlphaField *somSelf);
typedef somTP_AWDAlphaField_somFree *somTD_AWDAlphaField_somFree;
typedef void   SOMLINK somTP_AWDAlphaField_somUninit(AWDAlphaField *somSelf);
typedef somTP_AWDAlphaField_somUninit *somTD_AWDAlphaField_somUninit;
typedef SOMClass*   SOMLINK somTP_AWDAlphaField_somGetClass(AWDAlphaField *somSelf);
typedef somTP_AWDAlphaField_somGetClass *somTD_AWDAlphaField_somGetClass;
typedef string   SOMLINK somTP_AWDAlphaField_somGetClassName(AWDAlphaField *somSelf);
typedef somTP_AWDAlphaField_somGetClassName *somTD_AWDAlphaField_somGetClassName;
typedef long   SOMLINK somTP_AWDAlphaField_somGetSize(AWDAlphaField *somSelf);
typedef somTP_AWDAlphaField_somGetSize *somTD_AWDAlphaField_somGetSize;
typedef boolean   SOMLINK somTP_AWDAlphaField_somIsA(AWDAlphaField *somSelf,
		SOMClass* aClassObj);
typedef somTP_AWDAlphaField_somIsA *somTD_AWDAlphaField_somIsA;
typedef boolean   SOMLINK somTP_AWDAlphaField_somIsInstanceOf(AWDAlphaField *somSelf,
		SOMClass* aClassObj);
typedef somTP_AWDAlphaField_somIsInstanceOf *somTD_AWDAlphaField_somIsInstanceOf;
typedef boolean   SOMLINK somTP_AWDAlphaField_somRespondsTo(AWDAlphaField *somSelf,
		somId mId);
typedef somTP_AWDAlphaField_somRespondsTo *somTD_AWDAlphaField_somRespondsTo;
typedef boolean   SOMLINK somTP_AWDAlphaField_somDispatch(AWDAlphaField *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_AWDAlphaField_somDispatch *somTD_AWDAlphaField_somDispatch;
typedef boolean   SOMLINK somTP_AWDAlphaField_somClassDispatch(AWDAlphaField *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_AWDAlphaField_somClassDispatch *somTD_AWDAlphaField_somClassDispatch;
typedef boolean   SOMLINK somTP_AWDAlphaField_somCastObj(AWDAlphaField *somSelf,
		SOMClass* cls);
typedef somTP_AWDAlphaField_somCastObj *somTD_AWDAlphaField_somCastObj;
typedef boolean   SOMLINK somTP_AWDAlphaField_somResetObj(AWDAlphaField *somSelf);
typedef somTP_AWDAlphaField_somResetObj *somTD_AWDAlphaField_somResetObj;
typedef SOMObject*   SOMLINK somTP_AWDAlphaField_somPrintSelf(AWDAlphaField *somSelf);
typedef somTP_AWDAlphaField_somPrintSelf *somTD_AWDAlphaField_somPrintSelf;
typedef void   SOMLINK somTP_AWDAlphaField_somDumpSelf(AWDAlphaField *somSelf,
		long level);
typedef somTP_AWDAlphaField_somDumpSelf *somTD_AWDAlphaField_somDumpSelf;
typedef void   SOMLINK somTP_AWDAlphaField_somDumpSelfInt(AWDAlphaField *somSelf,
		long level);
typedef somTP_AWDAlphaField_somDumpSelfInt *somTD_AWDAlphaField_somDumpSelfInt;
}

#endif /* AWDAlphaField_API */


/*
 * -- This emitter believes that method thunks are unavailable,
 * -- so somResolve will be called.
 */
#undef somresolve_
#define somresolve_(obj,mToken) (somResolve(obj,mToken))

/*
 * -- The C++ Wrapper Class for AWDAlphaField
 */
class AWDAlphaField : public AWDBaseField
{
public:

// AWDAlphaField::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_AWDAlphaField) AWDAlphaFieldNewClass(AWDAlphaField_MajorVersion,AWDAlphaField_MinorVersion);
   return (void*)
      SOM_Resolve(_AWDAlphaField,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_AWDAlphaField));
}

// AWDAlphaField::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

AWDAlphaField()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDAlphaFieldCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

AWDAlphaField(AWDAlphaField* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDAlphaFieldCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

AWDAlphaField(const AWDAlphaField* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDAlphaFieldCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

AWDAlphaField(Environment *ev,string aName) 
{
   alpha_withName(ev,0,aName);
}

AWDAlphaField(Environment *ev,string aName,unsigned short seqNumber) 
{
   alpha_withNameandNumber(ev,0,aName,seqNumber);
}

AWDAlphaField(Environment *ev,string aName,string value) 
{
   alpha_withNameandValue(ev,0,aName,value);
}

AWDAlphaField(Environment *ev,string aName,unsigned short seqNumber,AWDBaseField_STATUS status) 
{
   alpha_withNameNumberandStatus(ev,0,aName,seqNumber,status);
}

AWDAlphaField(Environment *ev,string aName,unsigned short seqNumber,string value) 
{
   alpha_withNameNumberandValue(ev,0,aName,seqNumber,value);
}

AWDAlphaField(Environment *ev,string aName,unsigned short seqNumber,AWDBaseField_STATUS status,string value) 
{
   alpha_withNameNumberStatusandValue(ev,0,aName,seqNumber,status,value);
}

AWDAlphaField(Environment *ev,AWDPersist* pPersist) 
{
   alpha_withPersist(ev,0,pPersist);
}

AWDAlphaField(Environment *ev,AWDBaseField* pField) 
{
   alpha_withField(ev,0,pField);
}


/* method: padDataValue */
boolean   padDataValue(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDAlphaField,padDataValue)
	(this, ev);
}


/* method: initAlphaFieldObject */
void   initAlphaFieldObject(Environment *ev)
{
   SOM_ResolveD(this,AWDAlphaField,AWDAlphaField,initAlphaFieldObject)
	(this, ev);
}


/* initializer method: alpha_withName */
void   alpha_withName(Environment *ev,
		somInitCtrl* ctrl,
		string aName)
{
   SOM_ResolveD(this,AWDAlphaField,AWDAlphaField,alpha_withName)
	(this, ev,ctrl,aName);
}


/* initializer method: alpha_withNameandNumber */
void   alpha_withNameandNumber(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber)
{
   SOM_ResolveD(this,AWDAlphaField,AWDAlphaField,alpha_withNameandNumber)
	(this, ev,ctrl,aName,seqNumber);
}


/* initializer method: alpha_withNameandValue */
void   alpha_withNameandValue(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		string value)
{
   SOM_ResolveD(this,AWDAlphaField,AWDAlphaField,alpha_withNameandValue)
	(this, ev,ctrl,aName,value);
}


/* initializer method: alpha_withNameNumberandStatus */
void   alpha_withNameNumberandStatus(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status)
{
   SOM_ResolveD(this,AWDAlphaField,AWDAlphaField,alpha_withNameNumberandStatus)
	(this, ev,ctrl,aName,seqNumber,status);
}


/* initializer method: alpha_withNameNumberandValue */
void   alpha_withNameNumberandValue(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		string value)
{
   SOM_ResolveD(this,AWDAlphaField,AWDAlphaField,alpha_withNameNumberandValue)
	(this, ev,ctrl,aName,seqNumber,value);
}


/* initializer method: alpha_withNameNumberStatusandValue */
void   alpha_withNameNumberStatusandValue(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status,
		string value)
{
   SOM_ResolveD(this,AWDAlphaField,AWDAlphaField,alpha_withNameNumberStatusandValue)
	(this, ev,ctrl,aName,seqNumber,status,value);
}


/* initializer method: alpha_withPersist */
void   alpha_withPersist(Environment *ev,
		somInitCtrl* ctrl,
		AWDPersist* pPersist)
{
   SOM_ResolveD(this,AWDAlphaField,AWDAlphaField,alpha_withPersist)
	(this, ev,ctrl,pPersist);
}


/* initializer method: alpha_withField */
void   alpha_withField(Environment *ev,
		somInitCtrl* ctrl,
		AWDBaseField* pField)
{
   SOM_ResolveD(this,AWDAlphaField,AWDAlphaField,alpha_withField)
	(this, ev,ctrl,pField);
}


/*
 * Reintroduce inherited methods
 */

/* method: asString */
string   asString(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,asString)
	(this, ev);
}


/* method: asStringWithMask */
string   asStringWithMask(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,asStringWithMask)
	(this, ev);
}


/* method: blankMask */
string   blankMask(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,blankMask)
	(this, ev);
}


/* method: blankString */
string   blankString(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,blankString)
	(this, ev);
}


/* method: compare */
short   compare(Environment *ev,
		AWDBaseField* pField)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,compare)
	(this, ev,pField);
}


/* method: determineStatus */
boolean   determineStatus(Environment *ev,
		string newValue)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,determineStatus)
	(this, ev,newValue);
}


/* method: displayLength */
unsigned short   displayLength(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,displayLength)
	(this, ev);
}


/* method: fetchProperties */
void   fetchProperties(Environment *ev)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,fetchProperties)
	(this, ev);
}


/* method: getStatus */
AWDBaseField_STATUS   getStatus(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,getStatus)
	(this, ev);
}


/* method: initBaseFieldObject */
void   initBaseFieldObject(Environment *ev)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,initBaseFieldObject)
	(this, ev);
}


/* method: isBlank */
boolean   isBlank(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,isBlank)
	(this, ev);
}


/* method: isChanged */
boolean   isChanged(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,isChanged)
	(this, ev);
}


/* method: isNew */
boolean   isNew(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,isNew)
	(this, ev);
}


/* method: mask */
string   mask(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,mask)
	(this, ev);
}


/* method: maskObject */
AWDMask*   maskObject(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,maskObject)
	(this, ev);
}


/* method: name */
string   name(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,name)
	(this, ev);
}


/* method: newMask */
void   newMask(Environment *ev)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,newMask)
	(this, ev);
}


/* method: padValue */
boolean   padValue(Environment *ev,
		AWDMask_DIRECTION direction)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,padValue)
	(this, ev,direction);
}


/* method: properties */
AWDData*   properties(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,properties)
	(this, ev);
}


/* method: sequenceNumber */
unsigned short   sequenceNumber(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,sequenceNumber)
	(this, ev);
}


/* method: setLocalMask */
boolean   setLocalMask(Environment *ev,
		string localmask)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,setLocalMask)
	(this, ev,localmask);
}


/* method: setName */
boolean   setName(Environment *ev,
		string aName)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,setName)
	(this, ev,aName);
}


/* method: setSequenceNumber */
void   setSequenceNumber(Environment *ev,
		unsigned short seqNumber)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,setSequenceNumber)
	(this, ev,seqNumber);
}


/* method: setStatus */
void   setStatus(Environment *ev,
		AWDBaseField_STATUS status)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,setStatus)
	(this, ev,status);
}


/* method: setValueFromMaskedString */
boolean   setValueFromMaskedString(Environment *ev,
		string value)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,setValueFromMaskedString)
	(this, ev,value);
}


/* method: setValueFromString */
boolean   setValueFromString(Environment *ev,
		string value)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,setValueFromString)
	(this, ev,value);
}


/* method: storeLength */
unsigned short   storeLength(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,storeLength)
	(this, ev);
}


/* method: verify */
boolean   verify(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,verify)
	(this, ev);
}


/* initializer method: withName */
void   withName(Environment *ev,
		somInitCtrl* ctrl,
		string aName)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,withName)
	(this, ev,ctrl,aName);
}


/* initializer method: withNameandNumber */
void   withNameandNumber(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,withNameandNumber)
	(this, ev,ctrl,aName,seqNumber);
}


/* initializer method: withNameandValue */
void   withNameandValue(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		string value)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,withNameandValue)
	(this, ev,ctrl,aName,value);
}


/* initializer method: withNameNumberandStatus */
void   withNameNumberandStatus(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,withNameNumberandStatus)
	(this, ev,ctrl,aName,seqNumber,status);
}


/* initializer method: withNameNumberandValue */
void   withNameNumberandValue(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		string value)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,withNameNumberandValue)
	(this, ev,ctrl,aName,seqNumber,value);
}


/* initializer method: withNameNumberStatusandValue */
void   withNameNumberStatusandValue(Environment *ev,
		somInitCtrl* ctrl,
		string aName,
		unsigned short seqNumber,
		AWDBaseField_STATUS status,
		string value)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,withNameNumberStatusandValue)
	(this, ev,ctrl,aName,seqNumber,status,value);
}


/* initializer method: withPersist */
void   withPersist(Environment *ev,
		somInitCtrl* ctrl,
		AWDPersist* pPersist)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,withPersist)
	(this, ev,ctrl,pPersist);
}


/* initializer method: withField */
void   withField(Environment *ev,
		somInitCtrl* ctrl,
		AWDBaseField* pField)
{
   SOM_ResolveD(this,AWDAlphaField,AWDBaseField,withField)
	(this, ev,ctrl,pField);
}


/* method: hasLocalMask */
boolean   hasLocalMask(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,AWDBaseField,hasLocalMask)
	(this, ev);
}


/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,AWDAlphaField,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,AWDAlphaField,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: store */
void   store(Environment *ev,
		AWDPersist* pPersist)
{
   SOM_ResolveD(this,AWDAlphaField,AWDCommon,store)
	(this, ev,pPersist);
}


/* method: restore */
void   restore(Environment *ev,
		AWDPersist* pPersist)
{
   SOM_ResolveD(this,AWDAlphaField,AWDCommon,restore)
	(this, ev,pPersist);
}


/* method: somfMLinkableInit */
somf_MLinkable*   somfMLinkableInit(Environment *ev,
		somf_MLinkable* n,
		somf_MLinkable* p)
{
   return SOM_ResolveD(this,AWDAlphaField,somf_MLinkable,somfMLinkableInit)
	(this, ev,n,p);
}


/* method: somfGetNext */
somf_MLinkable*   somfGetNext(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,somf_MLinkable,somfGetNext)
	(this, ev);
}


/* method: somfSetNext */
void   somfSetNext(Environment *ev,
		somf_MLinkable* aLink)
{
   SOM_ResolveD(this,AWDAlphaField,somf_MLinkable,somfSetNext)
	(this, ev,aLink);
}


/* method: somfGetPrevious */
somf_MLinkable*   somfGetPrevious(Environment *ev)
{
   return SOM_ResolveD(this,AWDAlphaField,somf_MLinkable,somfGetPrevious)
	(this, ev);
}


/* method: somfSetPrevious */
void   somfSetPrevious(Environment *ev,
		somf_MLinkable* aLink)
{
   SOM_ResolveD(this,AWDAlphaField,somf_MLinkable,somfSetPrevious)
	(this, ev,aLink);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,AWDAlphaField,SOMObject,somInit)
	(this);
}


/* initializer method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDAlphaField,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
AWDAlphaField*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDAlphaField,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDAlphaField,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDAlphaField,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
AWDAlphaField*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
AWDAlphaField*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
AWDAlphaField*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,AWDAlphaField,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,AWDAlphaField,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   AWDAlphaField_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,AWDAlphaField,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,AWDAlphaField,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   AWDAlphaField_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,AWDAlphaField,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,AWDAlphaField,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somResetObj)
	(this);
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,AWDAlphaField,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,AWDAlphaField,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,AWDAlphaField,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* AWDAlphaField */



#endif       /* SOM_AWDAlphaField_xh */
