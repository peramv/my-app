
#ifndef SOM_AWDApplication_xh
#define SOM_AWDApplication_xh

class AWDApplication;

#define AWDApplication_MajorVersion 2
#define AWDApplication_MinorVersion 3

/*
 * Passthru lines: File: "C.xh", "before"
 */
#include <somobj.xh>  
#include <datadict.xh>
#include <awdsm.xh>   
#include <awdwksta.xh>
#include <entity.xh>  
#include <conmanag.xh>
#include <awduser.xh> 
#include <awdrepo.xh> 
#include <awdmsgq.xh> 

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_SOMObject_xh
#include <somobj.xh>
#endif

#ifndef AWDApplication_API
#define AWDApplication_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class AWDDictionary;
class AWDEntityDefaults;
class AWDServiceManager;
class AWDWorkStation;
class AWDConnectionManager;
class AWDUser;
class AWDMessageQueue;
class AWDRepository;
class AWDSecurity;

/*
 * End of user-defined types.
 */

/* A procedure to create the AWDApplication Class */
SOMEXTERN
#if (defined(SOM_Module_awdapp_Source) || defined(AWDApplication_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDApplication))
WIN32_DLLEXPORT
#else
WIN32_DLLIMPORT
#endif
SOMClass * SOMLINK AWDApplicationNewClass(
		integer4,
		integer4 );

/* The API to the AWDApplication class object, and the methods it introduces. */
SOMEXTERN struct AWDApplicationClassDataStructure {
	SOMClass *classObject;
	somMToken getEnvironment;
	somMToken getConnectionManager;
	somMToken getDictionary;
	somMToken getServiceManager;
	somMToken getUser;
	somMToken getWorkStation;
	somMToken destroySingletons;
	AWDDictionary* *dict;
	AWDServiceManager* *sm;
	AWDWorkStation* *wk;
	AWDConnectionManager* *cm;
	AWDUser* *user;
	AWDEntityDefaults* *keys;
	somMToken getEntityKeys;
	AWDMessageQueue* *msgq;
	somMToken getMessageQueue;
	somMToken getCurrentProcessId;
	AWDRepository* *repo;
	somMToken getRepository;
	AWDSecurity* *secu;
	somMToken getSecurity;
}
#if !(defined(SOM_Module_awdapp_Source) || defined(AWDApplication_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDApplication))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDApplicationClassData;
#define _AWDApplication AWDApplicationClassData.classObject

/* The API to parentMtabs for AWDApplication, and the instance data it introduces. */
SOMEXTERN struct AWDApplicationCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
}
#if !(defined(SOM_Module_awdapp_Source) || defined(AWDApplication_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDApplication))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDApplicationCClassData;

/*
 * -- Typedefs for AWDApplication Method Procedures
 */
extern "C" {
typedef void   SOMLINK somTP_AWDApplication_destroySingletons(AWDApplication *somSelf);
typedef somTP_AWDApplication_destroySingletons *somTD_AWDApplication_destroySingletons;
typedef AWDDictionary*   SOMLINK somTP_AWDApplication_getDictionary(AWDApplication *somSelf);
typedef somTP_AWDApplication_getDictionary *somTD_AWDApplication_getDictionary;
typedef AWDEntityDefaults*   SOMLINK somTP_AWDApplication_getEntityKeys(AWDApplication *somSelf);
typedef somTP_AWDApplication_getEntityKeys *somTD_AWDApplication_getEntityKeys;
typedef Environment*   SOMLINK somTP_AWDApplication_getEnvironment(AWDApplication *somSelf);
typedef somTP_AWDApplication_getEnvironment *somTD_AWDApplication_getEnvironment;
typedef AWDMessageQueue*   SOMLINK somTP_AWDApplication_getMessageQueue(AWDApplication *somSelf);
typedef somTP_AWDApplication_getMessageQueue *somTD_AWDApplication_getMessageQueue;
typedef AWDServiceManager*   SOMLINK somTP_AWDApplication_getServiceManager(AWDApplication *somSelf);
typedef somTP_AWDApplication_getServiceManager *somTD_AWDApplication_getServiceManager;
typedef AWDUser*   SOMLINK somTP_AWDApplication_getUser(AWDApplication *somSelf);
typedef somTP_AWDApplication_getUser *somTD_AWDApplication_getUser;
typedef AWDWorkStation*   SOMLINK somTP_AWDApplication_getWorkStation(AWDApplication *somSelf);
typedef somTP_AWDApplication_getWorkStation *somTD_AWDApplication_getWorkStation;
typedef AWDConnectionManager*   SOMLINK somTP_AWDApplication_getConnectionManager(AWDApplication *somSelf);
typedef somTP_AWDApplication_getConnectionManager *somTD_AWDApplication_getConnectionManager;
typedef unsigned long   SOMLINK somTP_AWDApplication_getCurrentProcessId(AWDApplication *somSelf);
typedef somTP_AWDApplication_getCurrentProcessId *somTD_AWDApplication_getCurrentProcessId;
typedef AWDRepository*   SOMLINK somTP_AWDApplication_getRepository(AWDApplication *somSelf);
typedef somTP_AWDApplication_getRepository *somTD_AWDApplication_getRepository;
typedef AWDSecurity*   SOMLINK somTP_AWDApplication_getSecurity(AWDApplication *somSelf);
typedef somTP_AWDApplication_getSecurity *somTD_AWDApplication_getSecurity;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef void   SOMLINK somTP_AWDApplication_somDefaultInit(AWDApplication *somSelf,
		somInitCtrl* ctrl);
typedef somTP_AWDApplication_somDefaultInit *somTD_AWDApplication_somDefaultInit;
typedef void   SOMLINK somTP_AWDApplication_somDestruct(AWDApplication *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef somTP_AWDApplication_somDestruct *somTD_AWDApplication_somDestruct;
typedef void   SOMLINK somTP_AWDApplication_somDefaultCopyInit(AWDApplication *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDApplication_somDefaultCopyInit *somTD_AWDApplication_somDefaultCopyInit;
typedef AWDApplication*   SOMLINK somTP_AWDApplication_somDefaultAssign(AWDApplication *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDApplication_somDefaultAssign *somTD_AWDApplication_somDefaultAssign;
typedef void   SOMLINK somTP_AWDApplication_somDefaultConstCopyInit(AWDApplication *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDApplication_somDefaultConstCopyInit *somTD_AWDApplication_somDefaultConstCopyInit;
typedef void   SOMLINK somTP_AWDApplication_somDefaultVCopyInit(AWDApplication *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDApplication_somDefaultVCopyInit *somTD_AWDApplication_somDefaultVCopyInit;
typedef void   SOMLINK somTP_AWDApplication_somDefaultConstVCopyInit(AWDApplication *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDApplication_somDefaultConstVCopyInit *somTD_AWDApplication_somDefaultConstVCopyInit;
typedef AWDApplication*   SOMLINK somTP_AWDApplication_somDefaultConstAssign(AWDApplication *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDApplication_somDefaultConstAssign *somTD_AWDApplication_somDefaultConstAssign;
typedef AWDApplication*   SOMLINK somTP_AWDApplication_somDefaultVAssign(AWDApplication *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDApplication_somDefaultVAssign *somTD_AWDApplication_somDefaultVAssign;
typedef AWDApplication*   SOMLINK somTP_AWDApplication_somDefaultConstVAssign(AWDApplication *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDApplication_somDefaultConstVAssign *somTD_AWDApplication_somDefaultConstVAssign;
typedef void   SOMLINK somTP_AWDApplication_somInit(AWDApplication *somSelf);
typedef somTP_AWDApplication_somInit *somTD_AWDApplication_somInit;
typedef void   SOMLINK somTP_AWDApplication_somFree(AWDApplication *somSelf);
typedef somTP_AWDApplication_somFree *somTD_AWDApplication_somFree;
typedef void   SOMLINK somTP_AWDApplication_somUninit(AWDApplication *somSelf);
typedef somTP_AWDApplication_somUninit *somTD_AWDApplication_somUninit;
typedef SOMClass*   SOMLINK somTP_AWDApplication_somGetClass(AWDApplication *somSelf);
typedef somTP_AWDApplication_somGetClass *somTD_AWDApplication_somGetClass;
typedef string   SOMLINK somTP_AWDApplication_somGetClassName(AWDApplication *somSelf);
typedef somTP_AWDApplication_somGetClassName *somTD_AWDApplication_somGetClassName;
typedef long   SOMLINK somTP_AWDApplication_somGetSize(AWDApplication *somSelf);
typedef somTP_AWDApplication_somGetSize *somTD_AWDApplication_somGetSize;
typedef boolean   SOMLINK somTP_AWDApplication_somIsA(AWDApplication *somSelf,
		SOMClass* aClassObj);
typedef somTP_AWDApplication_somIsA *somTD_AWDApplication_somIsA;
typedef boolean   SOMLINK somTP_AWDApplication_somIsInstanceOf(AWDApplication *somSelf,
		SOMClass* aClassObj);
typedef somTP_AWDApplication_somIsInstanceOf *somTD_AWDApplication_somIsInstanceOf;
typedef boolean   SOMLINK somTP_AWDApplication_somRespondsTo(AWDApplication *somSelf,
		somId mId);
typedef somTP_AWDApplication_somRespondsTo *somTD_AWDApplication_somRespondsTo;
typedef boolean   SOMLINK somTP_AWDApplication_somDispatch(AWDApplication *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_AWDApplication_somDispatch *somTD_AWDApplication_somDispatch;
typedef boolean   SOMLINK somTP_AWDApplication_somClassDispatch(AWDApplication *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_AWDApplication_somClassDispatch *somTD_AWDApplication_somClassDispatch;
typedef boolean   SOMLINK somTP_AWDApplication_somCastObj(AWDApplication *somSelf,
		SOMClass* cls);
typedef somTP_AWDApplication_somCastObj *somTD_AWDApplication_somCastObj;
typedef boolean   SOMLINK somTP_AWDApplication_somResetObj(AWDApplication *somSelf);
typedef somTP_AWDApplication_somResetObj *somTD_AWDApplication_somResetObj;
typedef SOMObject*   SOMLINK somTP_AWDApplication_somPrintSelf(AWDApplication *somSelf);
typedef somTP_AWDApplication_somPrintSelf *somTD_AWDApplication_somPrintSelf;
typedef void   SOMLINK somTP_AWDApplication_somDumpSelf(AWDApplication *somSelf,
		long level);
typedef somTP_AWDApplication_somDumpSelf *somTD_AWDApplication_somDumpSelf;
typedef void   SOMLINK somTP_AWDApplication_somDumpSelfInt(AWDApplication *somSelf,
		long level);
typedef somTP_AWDApplication_somDumpSelfInt *somTD_AWDApplication_somDumpSelfInt;
}

#endif /* AWDApplication_API */


/*
 * -- This emitter believes that method thunks are unavailable,
 * -- so somResolve will be called.
 */
#undef somresolve_
#define somresolve_(obj,mToken) (somResolve(obj,mToken))

/*
 * -- The C++ Wrapper Class for AWDApplication
 */
class AWDApplication : public SOMObject
{
public:

// AWDApplication::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_AWDApplication) AWDApplicationNewClass(AWDApplication_MajorVersion,AWDApplication_MinorVersion);
   return (void*)
      SOM_Resolve(_AWDApplication,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_AWDApplication));
}

// AWDApplication::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

AWDApplication()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDApplicationCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

AWDApplication(AWDApplication* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDApplicationCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

AWDApplication(const AWDApplication* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDApplicationCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: destroySingletons */
void   destroySingletons()
{
   SOM_ResolveD(this,AWDApplication,AWDApplication,destroySingletons)
	(this);
}


/* method: getDictionary */
AWDDictionary*   getDictionary()
{
   return SOM_ResolveD(this,AWDApplication,AWDApplication,getDictionary)
	(this);
}


/* method: getEntityKeys */
AWDEntityDefaults*   getEntityKeys()
{
   return SOM_ResolveD(this,AWDApplication,AWDApplication,getEntityKeys)
	(this);
}


/* method: getEnvironment */
Environment*   getEnvironment()
{
   return SOM_ResolveD(this,AWDApplication,AWDApplication,getEnvironment)
	(this);
}


/* method: getMessageQueue */
AWDMessageQueue*   getMessageQueue()
{
   return SOM_ResolveD(this,AWDApplication,AWDApplication,getMessageQueue)
	(this);
}


/* method: getServiceManager */
AWDServiceManager*   getServiceManager()
{
   return SOM_ResolveD(this,AWDApplication,AWDApplication,getServiceManager)
	(this);
}


/* method: getUser */
AWDUser*   getUser()
{
   return SOM_ResolveD(this,AWDApplication,AWDApplication,getUser)
	(this);
}


/* method: getWorkStation */
AWDWorkStation*   getWorkStation()
{
   return SOM_ResolveD(this,AWDApplication,AWDApplication,getWorkStation)
	(this);
}


/* method: getConnectionManager */
AWDConnectionManager*   getConnectionManager()
{
   return SOM_ResolveD(this,AWDApplication,AWDApplication,getConnectionManager)
	(this);
}


/* method: getCurrentProcessId */
unsigned long   getCurrentProcessId()
{
   return SOM_ResolveD(this,AWDApplication,AWDApplication,getCurrentProcessId)
	(this);
}


/* method: getRepository */
AWDRepository*   getRepository()
{
   return SOM_ResolveD(this,AWDApplication,AWDApplication,getRepository)
	(this);
}


/* method: getSecurity */
AWDSecurity*   getSecurity()
{
   return SOM_ResolveD(this,AWDApplication,AWDApplication,getSecurity)
	(this);
}


/*
 * Reintroduce inherited methods
 */

/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,AWDApplication,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,AWDApplication,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* initializer method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDApplication,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
AWDApplication*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDApplication,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDApplication,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDApplication,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
AWDApplication*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
AWDApplication*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
AWDApplication*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,AWDApplication,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,AWDApplication,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,AWDApplication,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   AWDApplication_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,AWDApplication,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,AWDApplication,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   AWDApplication_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,AWDApplication,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,AWDApplication,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somResetObj)
	(this);
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,AWDApplication,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,AWDApplication,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,AWDApplication,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* AWDApplication */



#endif       /* SOM_AWDApplication_xh */
