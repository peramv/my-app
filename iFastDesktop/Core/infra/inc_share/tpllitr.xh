
/*
 * 
 *    COMPONENT_NAME: somuc
 * 
 *    ORIGINS: 82, 81, 27
 * 
 * 
 *    10H9767, 10H9769  (C) COPYRIGHT International Business Machines Corp. 1992,1994
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 * 
 * CLASS_NAME: somf_TPrimitiveLinkedListIterator
 * 
 * DESCRIPTION: An iterator for somf_TPrimitiveLinkedList that will iterate over
 *              all of the objects in a primitive linked list.
 * 
 * 
 */


#ifndef SOM_somf_TPrimitiveLinkedListIterator_xh
#define SOM_somf_TPrimitiveLinkedListIterator_xh

class somf_TPrimitiveLinkedListIterator;

#define somf_TPrimitiveLinkedListIterator_MajorVersion 2
#define somf_TPrimitiveLinkedListIterator_MinorVersion 1

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_SOMObject_xh
#include <somobj.xh>
#endif

#ifndef somf_TPrimitiveLinkedListIterator_API
#define somf_TPrimitiveLinkedListIterator_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class somf_TPrimitiveLinkedList;
class somf_MLinkable;

/*
 * End of user-defined types.
 */

/*
 * Passthru lines: File: "C.xh", "after"
 */

#include <mlink.xh>
#include <tpll.xh>

/* A procedure to create the somf_TPrimitiveLinkedListIterator Class */
SOMEXTERN
#if (defined(SOM_Module_tpllitr_Source) || defined(somf_TPrimitiveLinkedListIterator_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_somf_TPrimitiveLinkedListIterator))
WIN32_DLLEXPORT
#else
WIN32_DLLIMPORT
#endif
SOMClass * SOMLINK somf_TPrimitiveLinkedListIteratorNewClass(
		integer4,
		integer4 );

/* The API to the somf_TPrimitiveLinkedListIterator class object, and the methods it introduces. */
SOMEXTERN struct somf_TPrimitiveLinkedListIteratorClassDataStructure {
	SOMClass *classObject;
	somMToken somfFirst;
	somMToken somfNext;
	somMToken somfLast;
	somMToken somfPrevious;
	somMToken somfTPrimitiveLinkedListIteratorInit;
}
#if !(defined(SOM_Module_tpllitr_Source) || defined(somf_TPrimitiveLinkedListIterator_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_somf_TPrimitiveLinkedListIterator))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK somf_TPrimitiveLinkedListIteratorClassData;
#define _somf_TPrimitiveLinkedListIterator somf_TPrimitiveLinkedListIteratorClassData.classObject

/* The API to parentMtabs for somf_TPrimitiveLinkedListIterator, and the instance data it introduces. */
SOMEXTERN struct somf_TPrimitiveLinkedListIteratorCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
}
#if !(defined(SOM_Module_tpllitr_Source) || defined(somf_TPrimitiveLinkedListIterator_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_somf_TPrimitiveLinkedListIterator))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK somf_TPrimitiveLinkedListIteratorCClassData;

/*
 * -- Typedefs for somf_TPrimitiveLinkedListIterator Method Procedures
 */
extern "C" {
typedef somf_TPrimitiveLinkedListIterator*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somfTPrimitiveLinkedListIteratorInit(somf_TPrimitiveLinkedListIterator *somSelf, Environment *ev,
		somf_TPrimitiveLinkedList* list);
typedef somTP_somf_TPrimitiveLinkedListIterator_somfTPrimitiveLinkedListIteratorInit *somTD_somf_TPrimitiveLinkedListIterator_somfTPrimitiveLinkedListIteratorInit;
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somfFirst(somf_TPrimitiveLinkedListIterator *somSelf, Environment *ev);
typedef somTP_somf_TPrimitiveLinkedListIterator_somfFirst *somTD_somf_TPrimitiveLinkedListIterator_somfFirst;
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somfNext(somf_TPrimitiveLinkedListIterator *somSelf, Environment *ev);
typedef somTP_somf_TPrimitiveLinkedListIterator_somfNext *somTD_somf_TPrimitiveLinkedListIterator_somfNext;
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somfLast(somf_TPrimitiveLinkedListIterator *somSelf, Environment *ev);
typedef somTP_somf_TPrimitiveLinkedListIterator_somfLast *somTD_somf_TPrimitiveLinkedListIterator_somfLast;
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somfPrevious(somf_TPrimitiveLinkedListIterator *somSelf, Environment *ev);
typedef somTP_somf_TPrimitiveLinkedListIterator_somfPrevious *somTD_somf_TPrimitiveLinkedListIterator_somfPrevious;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDefaultInit(somf_TPrimitiveLinkedListIterator *somSelf,
		somInitCtrl* ctrl);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDefaultInit *somTD_somf_TPrimitiveLinkedListIterator_somDefaultInit;
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDestruct(somf_TPrimitiveLinkedListIterator *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDestruct *somTD_somf_TPrimitiveLinkedListIterator_somDestruct;
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDefaultCopyInit(somf_TPrimitiveLinkedListIterator *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDefaultCopyInit *somTD_somf_TPrimitiveLinkedListIterator_somDefaultCopyInit;
typedef somf_TPrimitiveLinkedListIterator*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDefaultAssign(somf_TPrimitiveLinkedListIterator *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDefaultAssign *somTD_somf_TPrimitiveLinkedListIterator_somDefaultAssign;
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDefaultConstCopyInit(somf_TPrimitiveLinkedListIterator *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDefaultConstCopyInit *somTD_somf_TPrimitiveLinkedListIterator_somDefaultConstCopyInit;
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDefaultVCopyInit(somf_TPrimitiveLinkedListIterator *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDefaultVCopyInit *somTD_somf_TPrimitiveLinkedListIterator_somDefaultVCopyInit;
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDefaultConstVCopyInit(somf_TPrimitiveLinkedListIterator *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDefaultConstVCopyInit *somTD_somf_TPrimitiveLinkedListIterator_somDefaultConstVCopyInit;
typedef somf_TPrimitiveLinkedListIterator*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDefaultConstAssign(somf_TPrimitiveLinkedListIterator *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDefaultConstAssign *somTD_somf_TPrimitiveLinkedListIterator_somDefaultConstAssign;
typedef somf_TPrimitiveLinkedListIterator*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDefaultVAssign(somf_TPrimitiveLinkedListIterator *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDefaultVAssign *somTD_somf_TPrimitiveLinkedListIterator_somDefaultVAssign;
typedef somf_TPrimitiveLinkedListIterator*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDefaultConstVAssign(somf_TPrimitiveLinkedListIterator *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDefaultConstVAssign *somTD_somf_TPrimitiveLinkedListIterator_somDefaultConstVAssign;
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somInit(somf_TPrimitiveLinkedListIterator *somSelf);
typedef somTP_somf_TPrimitiveLinkedListIterator_somInit *somTD_somf_TPrimitiveLinkedListIterator_somInit;
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somFree(somf_TPrimitiveLinkedListIterator *somSelf);
typedef somTP_somf_TPrimitiveLinkedListIterator_somFree *somTD_somf_TPrimitiveLinkedListIterator_somFree;
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somUninit(somf_TPrimitiveLinkedListIterator *somSelf);
typedef somTP_somf_TPrimitiveLinkedListIterator_somUninit *somTD_somf_TPrimitiveLinkedListIterator_somUninit;
typedef SOMClass*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somGetClass(somf_TPrimitiveLinkedListIterator *somSelf);
typedef somTP_somf_TPrimitiveLinkedListIterator_somGetClass *somTD_somf_TPrimitiveLinkedListIterator_somGetClass;
typedef string   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somGetClassName(somf_TPrimitiveLinkedListIterator *somSelf);
typedef somTP_somf_TPrimitiveLinkedListIterator_somGetClassName *somTD_somf_TPrimitiveLinkedListIterator_somGetClassName;
typedef long   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somGetSize(somf_TPrimitiveLinkedListIterator *somSelf);
typedef somTP_somf_TPrimitiveLinkedListIterator_somGetSize *somTD_somf_TPrimitiveLinkedListIterator_somGetSize;
typedef boolean   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somIsA(somf_TPrimitiveLinkedListIterator *somSelf,
		SOMClass* aClassObj);
typedef somTP_somf_TPrimitiveLinkedListIterator_somIsA *somTD_somf_TPrimitiveLinkedListIterator_somIsA;
typedef boolean   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somIsInstanceOf(somf_TPrimitiveLinkedListIterator *somSelf,
		SOMClass* aClassObj);
typedef somTP_somf_TPrimitiveLinkedListIterator_somIsInstanceOf *somTD_somf_TPrimitiveLinkedListIterator_somIsInstanceOf;
typedef boolean   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somRespondsTo(somf_TPrimitiveLinkedListIterator *somSelf,
		somId mId);
typedef somTP_somf_TPrimitiveLinkedListIterator_somRespondsTo *somTD_somf_TPrimitiveLinkedListIterator_somRespondsTo;
typedef boolean   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDispatch(somf_TPrimitiveLinkedListIterator *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDispatch *somTD_somf_TPrimitiveLinkedListIterator_somDispatch;
typedef boolean   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somClassDispatch(somf_TPrimitiveLinkedListIterator *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_somf_TPrimitiveLinkedListIterator_somClassDispatch *somTD_somf_TPrimitiveLinkedListIterator_somClassDispatch;
typedef boolean   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somCastObj(somf_TPrimitiveLinkedListIterator *somSelf,
		SOMClass* cls);
typedef somTP_somf_TPrimitiveLinkedListIterator_somCastObj *somTD_somf_TPrimitiveLinkedListIterator_somCastObj;
typedef boolean   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somResetObj(somf_TPrimitiveLinkedListIterator *somSelf);
typedef somTP_somf_TPrimitiveLinkedListIterator_somResetObj *somTD_somf_TPrimitiveLinkedListIterator_somResetObj;
typedef SOMObject*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somPrintSelf(somf_TPrimitiveLinkedListIterator *somSelf);
typedef somTP_somf_TPrimitiveLinkedListIterator_somPrintSelf *somTD_somf_TPrimitiveLinkedListIterator_somPrintSelf;
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDumpSelf(somf_TPrimitiveLinkedListIterator *somSelf,
		long level);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDumpSelf *somTD_somf_TPrimitiveLinkedListIterator_somDumpSelf;
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somDumpSelfInt(somf_TPrimitiveLinkedListIterator *somSelf,
		long level);
typedef somTP_somf_TPrimitiveLinkedListIterator_somDumpSelfInt *somTD_somf_TPrimitiveLinkedListIterator_somDumpSelfInt;
}

#endif /* somf_TPrimitiveLinkedListIterator_API */


/*
 * -- This emitter believes that method thunks are unavailable,
 * -- so somResolve will be called.
 */
#undef somresolve_
#define somresolve_(obj,mToken) (somResolve(obj,mToken))

/*
 * -- The C++ Wrapper Class for somf_TPrimitiveLinkedListIterator
 */
class somf_TPrimitiveLinkedListIterator : public SOMObject
{
public:

// somf_TPrimitiveLinkedListIterator::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_somf_TPrimitiveLinkedListIterator) somf_TPrimitiveLinkedListIteratorNewClass(somf_TPrimitiveLinkedListIterator_MajorVersion,somf_TPrimitiveLinkedListIterator_MinorVersion);
   return (void*)
      SOM_Resolve(_somf_TPrimitiveLinkedListIterator,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_somf_TPrimitiveLinkedListIterator));
}

// somf_TPrimitiveLinkedListIterator::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

somf_TPrimitiveLinkedListIterator()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (somf_TPrimitiveLinkedListIteratorCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

somf_TPrimitiveLinkedListIterator(somf_TPrimitiveLinkedListIterator* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (somf_TPrimitiveLinkedListIteratorCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

somf_TPrimitiveLinkedListIterator(const somf_TPrimitiveLinkedListIterator* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (somf_TPrimitiveLinkedListIteratorCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: somfTPrimitiveLinkedListIteratorInit */
somf_TPrimitiveLinkedListIterator*   somfTPrimitiveLinkedListIteratorInit(Environment *ev,
		somf_TPrimitiveLinkedList* list)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,somf_TPrimitiveLinkedListIterator,somfTPrimitiveLinkedListIteratorInit)
	(this, ev,list);
}


/* method: somfFirst */
somf_MLinkable*   somfFirst(Environment *ev)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,somf_TPrimitiveLinkedListIterator,somfFirst)
	(this, ev);
}


/* method: somfNext */
somf_MLinkable*   somfNext(Environment *ev)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,somf_TPrimitiveLinkedListIterator,somfNext)
	(this, ev);
}


/* method: somfLast */
somf_MLinkable*   somfLast(Environment *ev)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,somf_TPrimitiveLinkedListIterator,somfLast)
	(this, ev);
}


/* method: somfPrevious */
somf_MLinkable*   somfPrevious(Environment *ev)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,somf_TPrimitiveLinkedListIterator,somfPrevious)
	(this, ev);
}


/*
 * Reintroduce inherited methods
 */

/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* initializer method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
somf_TPrimitiveLinkedListIterator*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
somf_TPrimitiveLinkedListIterator*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
somf_TPrimitiveLinkedListIterator*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
somf_TPrimitiveLinkedListIterator*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   somf_TPrimitiveLinkedListIterator_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   somf_TPrimitiveLinkedListIterator_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somResetObj)
	(this);
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,somf_TPrimitiveLinkedListIterator,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* somf_TPrimitiveLinkedListIterator */



#endif       /* SOM_somf_TPrimitiveLinkedListIterator_xh */
