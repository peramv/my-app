
#ifndef SOM_AWDMessageQueue_xh
#define SOM_AWDMessageQueue_xh

class AWDMessageQueue;

#define AWDMessageQueue_MajorVersion 2
#define AWDMessageQueue_MinorVersion 3

/*
 * Passthru lines: File: "C.xh", "before"
 */
#include <somobj.xh>
#include "awdapp.xh"
#include "awdevent.xh"

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_SOMObject_xh
#include <somobj.xh>
#endif

#ifndef AWDMessageQueue_API
#define AWDMessageQueue_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class AWDApplication;
class AWDEvent;
class AWDMutexSem;
class AWDEventSem;
#define AWDMessageQueue_GLOBAL_MSGQ "GLOB"
#define AWDMessageQueue_IMAGEWIN_MSGQ "IMGW"
#define AWDMessageQueue_LOBAID_MSGQ "LOBQ"
#define AWDMessageQueue_CSD_MSGQ "CSDQ"
#define AWDMessageQueue_QUEUE_DNE 99 /* 99 */
typedef
struct AWDMessageQueue_AWDMSGQINFO_SMEM {
unsigned long  ulHead;
unsigned long  ulTail;
unsigned long  ulNextFree;
unsigned long  ulNextEvent;
unsigned long  ulProcCount;
} AWDMessageQueue_AWDMSGQINFO_SMEM;
typedef
struct AWDMessageQueue_AWDMSGQINFO_SMEM* AWDMessageQueue_PAWDMSGQINFO_SMEM;
typedef
struct AWDMessageQueue_AWDMSGQ_NODE {
long  lPrevious;
long  lNext;
} AWDMessageQueue_AWDMSGQ_NODE;
typedef
struct AWDMessageQueue_AWDMSGQ_NODE* AWDMessageQueue_PAWDMSGQ_NODE;
typedef
struct AWDMessageQueue_AWD_EVENT_RECORD {
unsigned long  ulPID;
unsigned long  ulInternalId;
unsigned long  ulMsgId;
unsigned long  ulEventId;
unsigned long  ulHwndObj;
void*  mp1;
void*  mp2;
} AWDMessageQueue_AWD_EVENT_RECORD;
typedef
struct AWDMessageQueue_AWD_EVENT_RECORD* AWDMessageQueue_PAWD_EVENT_RECORD;

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_GLOBAL_MSGQ
    #ifdef GLOBAL_MSGQ
        #undef GLOBAL_MSGQ
        #define SOMTGD_GLOBAL_MSGQ 1
    #else
        #define GLOBAL_MSGQ AWDMessageQueue_GLOBAL_MSGQ
    #endif /* GLOBAL_MSGQ */
#endif /* SOMTGD_GLOBAL_MSGQ */
#ifndef SOMTGD_IMAGEWIN_MSGQ
    #ifdef IMAGEWIN_MSGQ
        #undef IMAGEWIN_MSGQ
        #define SOMTGD_IMAGEWIN_MSGQ 1
    #else
        #define IMAGEWIN_MSGQ AWDMessageQueue_IMAGEWIN_MSGQ
    #endif /* IMAGEWIN_MSGQ */
#endif /* SOMTGD_IMAGEWIN_MSGQ */
#ifndef SOMTGD_LOBAID_MSGQ
    #ifdef LOBAID_MSGQ
        #undef LOBAID_MSGQ
        #define SOMTGD_LOBAID_MSGQ 1
    #else
        #define LOBAID_MSGQ AWDMessageQueue_LOBAID_MSGQ
    #endif /* LOBAID_MSGQ */
#endif /* SOMTGD_LOBAID_MSGQ */
#ifndef SOMTGD_CSD_MSGQ
    #ifdef CSD_MSGQ
        #undef CSD_MSGQ
        #define SOMTGD_CSD_MSGQ 1
    #else
        #define CSD_MSGQ AWDMessageQueue_CSD_MSGQ
    #endif /* CSD_MSGQ */
#endif /* SOMTGD_CSD_MSGQ */
#ifndef SOMTGD_QUEUE_DNE
    #ifdef QUEUE_DNE
        #undef QUEUE_DNE
        #define SOMTGD_QUEUE_DNE 1
    #else
        #define QUEUE_DNE AWDMessageQueue_QUEUE_DNE
    #endif /* QUEUE_DNE */
#endif /* SOMTGD_QUEUE_DNE */
#ifndef SOMTGD_AWDMSGQINFO_SMEM
    #ifdef AWDMSGQINFO_SMEM
        #undef AWDMSGQINFO_SMEM
        #define SOMTGD_AWDMSGQINFO_SMEM 1
    #else
        #define AWDMSGQINFO_SMEM AWDMessageQueue_AWDMSGQINFO_SMEM
    #endif /* AWDMSGQINFO_SMEM */
#endif /* SOMTGD_AWDMSGQINFO_SMEM */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWDMSGQINFO_SMEM
    #ifdef PAWDMSGQINFO_SMEM
        #undef PAWDMSGQINFO_SMEM
        #define SOMTGD_PAWDMSGQINFO_SMEM 1
    #else
        #define PAWDMSGQINFO_SMEM AWDMessageQueue_PAWDMSGQINFO_SMEM
    #endif /* PAWDMSGQINFO_SMEM */
#endif /* SOMTGD_PAWDMSGQINFO_SMEM */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_AWDMSGQ_NODE
    #ifdef AWDMSGQ_NODE
        #undef AWDMSGQ_NODE
        #define SOMTGD_AWDMSGQ_NODE 1
    #else
        #define AWDMSGQ_NODE AWDMessageQueue_AWDMSGQ_NODE
    #endif /* AWDMSGQ_NODE */
#endif /* SOMTGD_AWDMSGQ_NODE */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWDMSGQ_NODE
    #ifdef PAWDMSGQ_NODE
        #undef PAWDMSGQ_NODE
        #define SOMTGD_PAWDMSGQ_NODE 1
    #else
        #define PAWDMSGQ_NODE AWDMessageQueue_PAWDMSGQ_NODE
    #endif /* PAWDMSGQ_NODE */
#endif /* SOMTGD_PAWDMSGQ_NODE */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_AWD_EVENT_RECORD
    #ifdef AWD_EVENT_RECORD
        #undef AWD_EVENT_RECORD
        #define SOMTGD_AWD_EVENT_RECORD 1
    #else
        #define AWD_EVENT_RECORD AWDMessageQueue_AWD_EVENT_RECORD
    #endif /* AWD_EVENT_RECORD */
#endif /* SOMTGD_AWD_EVENT_RECORD */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWD_EVENT_RECORD
    #ifdef PAWD_EVENT_RECORD
        #undef PAWD_EVENT_RECORD
        #define SOMTGD_PAWD_EVENT_RECORD 1
    #else
        #define PAWD_EVENT_RECORD AWDMessageQueue_PAWD_EVENT_RECORD
    #endif /* PAWD_EVENT_RECORD */
#endif /* SOMTGD_PAWD_EVENT_RECORD */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#endif /* SOM_DONT_USE_SHORT_NAMES */

/*
 * End of user-defined types.
 */

/* A procedure to create the AWDMessageQueue Class */
SOMEXTERN
#if (defined(SOM_Module_awdmsgq_Source) || defined(AWDMessageQueue_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDMessageQueue))
WIN32_DLLEXPORT
#else
WIN32_DLLIMPORT
#endif
SOMClass * SOMLINK AWDMessageQueueNewClass(
		integer4,
		integer4 );

/* The API to the AWDMessageQueue class object, and the methods it introduces. */
SOMEXTERN struct AWDMessageQueueClassDataStructure {
	SOMClass *classObject;
	somMToken allocateSharedMemoryMessageQueue;
	somMToken allocateSharedMemoryMessageQueueList;
	somMToken allocateSharedMemoryMessageQueueInfo;
	somMToken broadcast;
	somMToken clearEvent;
	somMToken createMessageQueue;
	somMToken freeResources;
	somMToken flushQueue;
	somMToken getMessageQueue;
	somMToken getNextEvent;
	somMToken getSharedMemoryMessageQueueListInfo;
	somMToken initialize;
	somMToken isEmpty;
	somMToken lastEvent;
	somMToken refreshMessageQueue;
	somMToken removeFromQueue;
	somMToken unmapMemory;
	somMToken waitForEvent;
	somMToken writeOutQueue;
	somMToken withSize;
	somMToken withPrivateQName;
	somMToken withPrivateQNameAndCreationFlag;
	somMToken withSizeAndPrivateQName;
	somMToken verifySharedMemory;
	somMToken stopWaitingForEvent;
	somMToken getNextFree;
	somMToken isFull;
	somMToken resetLastEvent;
}
#if !(defined(SOM_Module_awdmsgq_Source) || defined(AWDMessageQueue_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDMessageQueue))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDMessageQueueClassData;
#define _AWDMessageQueue AWDMessageQueueClassData.classObject

/* The API to parentMtabs for AWDMessageQueue, and the instance data it introduces. */
SOMEXTERN struct AWDMessageQueueCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
}
#if !(defined(SOM_Module_awdmsgq_Source) || defined(AWDMessageQueue_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDMessageQueue))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDMessageQueueCClassData;

/*
 * -- Typedefs for AWDMessageQueue Method Procedures
 */
extern "C" {
typedef boolean   SOMLINK somTP_AWDMessageQueue_allocateSharedMemoryMessageQueue(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_allocateSharedMemoryMessageQueue *somTD_AWDMessageQueue_allocateSharedMemoryMessageQueue;
typedef boolean   SOMLINK somTP_AWDMessageQueue_allocateSharedMemoryMessageQueueList(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_allocateSharedMemoryMessageQueueList *somTD_AWDMessageQueue_allocateSharedMemoryMessageQueueList;
typedef boolean   SOMLINK somTP_AWDMessageQueue_allocateSharedMemoryMessageQueueInfo(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_allocateSharedMemoryMessageQueueInfo *somTD_AWDMessageQueue_allocateSharedMemoryMessageQueueInfo;
typedef void   SOMLINK somTP_AWDMessageQueue_broadcast(AWDMessageQueue *somSelf, Environment *ev,
		AWDEvent* event);
typedef somTP_AWDMessageQueue_broadcast *somTD_AWDMessageQueue_broadcast;
typedef boolean   SOMLINK somTP_AWDMessageQueue_clearEvent(AWDMessageQueue *somSelf, Environment *ev,
		AWDEvent* event);
typedef somTP_AWDMessageQueue_clearEvent *somTD_AWDMessageQueue_clearEvent;
typedef boolean   SOMLINK somTP_AWDMessageQueue_createMessageQueue(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_createMessageQueue *somTD_AWDMessageQueue_createMessageQueue;
typedef boolean   SOMLINK somTP_AWDMessageQueue_freeResources(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_freeResources *somTD_AWDMessageQueue_freeResources;
typedef void   SOMLINK somTP_AWDMessageQueue_flushQueue(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_flushQueue *somTD_AWDMessageQueue_flushQueue;
typedef boolean   SOMLINK somTP_AWDMessageQueue_getNextEvent(AWDMessageQueue *somSelf, Environment *ev,
		unsigned long n,
		AWDEvent** event);
typedef somTP_AWDMessageQueue_getNextEvent *somTD_AWDMessageQueue_getNextEvent;
typedef void   SOMLINK somTP_AWDMessageQueue_getMessageQueue(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_getMessageQueue *somTD_AWDMessageQueue_getMessageQueue;
typedef unsigned long   SOMLINK somTP_AWDMessageQueue_getNextFree(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_getNextFree *somTD_AWDMessageQueue_getNextFree;
typedef void   SOMLINK somTP_AWDMessageQueue_getSharedMemoryMessageQueueListInfo(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_getSharedMemoryMessageQueueListInfo *somTD_AWDMessageQueue_getSharedMemoryMessageQueueListInfo;
typedef void   SOMLINK somTP_AWDMessageQueue_initialize(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_initialize *somTD_AWDMessageQueue_initialize;
typedef boolean   SOMLINK somTP_AWDMessageQueue_isEmpty(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_isEmpty *somTD_AWDMessageQueue_isEmpty;
typedef boolean   SOMLINK somTP_AWDMessageQueue_isFull(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_isFull *somTD_AWDMessageQueue_isFull;
typedef unsigned long   SOMLINK somTP_AWDMessageQueue_lastEvent(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_lastEvent *somTD_AWDMessageQueue_lastEvent;
typedef void   SOMLINK somTP_AWDMessageQueue_refreshMessageQueue(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_refreshMessageQueue *somTD_AWDMessageQueue_refreshMessageQueue;
typedef long   SOMLINK somTP_AWDMessageQueue_removeFromQueue(AWDMessageQueue *somSelf, Environment *ev,
		long current);
typedef somTP_AWDMessageQueue_removeFromQueue *somTD_AWDMessageQueue_removeFromQueue;
typedef void   SOMLINK somTP_AWDMessageQueue_resetLastEvent(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_resetLastEvent *somTD_AWDMessageQueue_resetLastEvent;
typedef void   SOMLINK somTP_AWDMessageQueue_stopWaitingForEvent(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_stopWaitingForEvent *somTD_AWDMessageQueue_stopWaitingForEvent;
typedef void   SOMLINK somTP_AWDMessageQueue_unmapMemory(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_unmapMemory *somTD_AWDMessageQueue_unmapMemory;
typedef boolean   SOMLINK somTP_AWDMessageQueue_verifySharedMemory(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_verifySharedMemory *somTD_AWDMessageQueue_verifySharedMemory;
typedef void   SOMLINK somTP_AWDMessageQueue_waitForEvent(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_waitForEvent *somTD_AWDMessageQueue_waitForEvent;
typedef void   SOMLINK somTP_AWDMessageQueue_writeOutQueue(AWDMessageQueue *somSelf, Environment *ev);
typedef somTP_AWDMessageQueue_writeOutQueue *somTD_AWDMessageQueue_writeOutQueue;
typedef void   SOMLINK somTP_AWDMessageQueue_withSize(AWDMessageQueue *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long maxSize);
typedef somTP_AWDMessageQueue_withSize *somTD_AWDMessageQueue_withSize;
typedef void   SOMLINK somTP_AWDMessageQueue_withPrivateQName(AWDMessageQueue *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string pMsgqName);
typedef somTP_AWDMessageQueue_withPrivateQName *somTD_AWDMessageQueue_withPrivateQName;
typedef void   SOMLINK somTP_AWDMessageQueue_withPrivateQNameAndCreationFlag(AWDMessageQueue *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		string pMsgqName,
		boolean bCreateIfNoExist);
typedef somTP_AWDMessageQueue_withPrivateQNameAndCreationFlag *somTD_AWDMessageQueue_withPrivateQNameAndCreationFlag;
typedef void   SOMLINK somTP_AWDMessageQueue_withSizeAndPrivateQName(AWDMessageQueue *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long maxSize,
		string pMMsgqName);
typedef somTP_AWDMessageQueue_withSizeAndPrivateQName *somTD_AWDMessageQueue_withSizeAndPrivateQName;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef void   SOMLINK somTP_AWDMessageQueue_somDefaultInit(AWDMessageQueue *somSelf,
		somInitCtrl* ctrl);
typedef somTP_AWDMessageQueue_somDefaultInit *somTD_AWDMessageQueue_somDefaultInit;
typedef void   SOMLINK somTP_AWDMessageQueue_somDestruct(AWDMessageQueue *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef somTP_AWDMessageQueue_somDestruct *somTD_AWDMessageQueue_somDestruct;
typedef void   SOMLINK somTP_AWDMessageQueue_somDefaultCopyInit(AWDMessageQueue *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDMessageQueue_somDefaultCopyInit *somTD_AWDMessageQueue_somDefaultCopyInit;
typedef AWDMessageQueue*   SOMLINK somTP_AWDMessageQueue_somDefaultAssign(AWDMessageQueue *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDMessageQueue_somDefaultAssign *somTD_AWDMessageQueue_somDefaultAssign;
typedef void   SOMLINK somTP_AWDMessageQueue_somDefaultConstCopyInit(AWDMessageQueue *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDMessageQueue_somDefaultConstCopyInit *somTD_AWDMessageQueue_somDefaultConstCopyInit;
typedef void   SOMLINK somTP_AWDMessageQueue_somDefaultVCopyInit(AWDMessageQueue *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDMessageQueue_somDefaultVCopyInit *somTD_AWDMessageQueue_somDefaultVCopyInit;
typedef void   SOMLINK somTP_AWDMessageQueue_somDefaultConstVCopyInit(AWDMessageQueue *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDMessageQueue_somDefaultConstVCopyInit *somTD_AWDMessageQueue_somDefaultConstVCopyInit;
typedef AWDMessageQueue*   SOMLINK somTP_AWDMessageQueue_somDefaultConstAssign(AWDMessageQueue *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDMessageQueue_somDefaultConstAssign *somTD_AWDMessageQueue_somDefaultConstAssign;
typedef AWDMessageQueue*   SOMLINK somTP_AWDMessageQueue_somDefaultVAssign(AWDMessageQueue *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDMessageQueue_somDefaultVAssign *somTD_AWDMessageQueue_somDefaultVAssign;
typedef AWDMessageQueue*   SOMLINK somTP_AWDMessageQueue_somDefaultConstVAssign(AWDMessageQueue *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDMessageQueue_somDefaultConstVAssign *somTD_AWDMessageQueue_somDefaultConstVAssign;
typedef void   SOMLINK somTP_AWDMessageQueue_somInit(AWDMessageQueue *somSelf);
typedef somTP_AWDMessageQueue_somInit *somTD_AWDMessageQueue_somInit;
typedef void   SOMLINK somTP_AWDMessageQueue_somFree(AWDMessageQueue *somSelf);
typedef somTP_AWDMessageQueue_somFree *somTD_AWDMessageQueue_somFree;
typedef void   SOMLINK somTP_AWDMessageQueue_somUninit(AWDMessageQueue *somSelf);
typedef somTP_AWDMessageQueue_somUninit *somTD_AWDMessageQueue_somUninit;
typedef SOMClass*   SOMLINK somTP_AWDMessageQueue_somGetClass(AWDMessageQueue *somSelf);
typedef somTP_AWDMessageQueue_somGetClass *somTD_AWDMessageQueue_somGetClass;
typedef string   SOMLINK somTP_AWDMessageQueue_somGetClassName(AWDMessageQueue *somSelf);
typedef somTP_AWDMessageQueue_somGetClassName *somTD_AWDMessageQueue_somGetClassName;
typedef long   SOMLINK somTP_AWDMessageQueue_somGetSize(AWDMessageQueue *somSelf);
typedef somTP_AWDMessageQueue_somGetSize *somTD_AWDMessageQueue_somGetSize;
typedef boolean   SOMLINK somTP_AWDMessageQueue_somIsA(AWDMessageQueue *somSelf,
		SOMClass* aClassObj);
typedef somTP_AWDMessageQueue_somIsA *somTD_AWDMessageQueue_somIsA;
typedef boolean   SOMLINK somTP_AWDMessageQueue_somIsInstanceOf(AWDMessageQueue *somSelf,
		SOMClass* aClassObj);
typedef somTP_AWDMessageQueue_somIsInstanceOf *somTD_AWDMessageQueue_somIsInstanceOf;
typedef boolean   SOMLINK somTP_AWDMessageQueue_somRespondsTo(AWDMessageQueue *somSelf,
		somId mId);
typedef somTP_AWDMessageQueue_somRespondsTo *somTD_AWDMessageQueue_somRespondsTo;
typedef boolean   SOMLINK somTP_AWDMessageQueue_somDispatch(AWDMessageQueue *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_AWDMessageQueue_somDispatch *somTD_AWDMessageQueue_somDispatch;
typedef boolean   SOMLINK somTP_AWDMessageQueue_somClassDispatch(AWDMessageQueue *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_AWDMessageQueue_somClassDispatch *somTD_AWDMessageQueue_somClassDispatch;
typedef boolean   SOMLINK somTP_AWDMessageQueue_somCastObj(AWDMessageQueue *somSelf,
		SOMClass* cls);
typedef somTP_AWDMessageQueue_somCastObj *somTD_AWDMessageQueue_somCastObj;
typedef boolean   SOMLINK somTP_AWDMessageQueue_somResetObj(AWDMessageQueue *somSelf);
typedef somTP_AWDMessageQueue_somResetObj *somTD_AWDMessageQueue_somResetObj;
typedef SOMObject*   SOMLINK somTP_AWDMessageQueue_somPrintSelf(AWDMessageQueue *somSelf);
typedef somTP_AWDMessageQueue_somPrintSelf *somTD_AWDMessageQueue_somPrintSelf;
typedef void   SOMLINK somTP_AWDMessageQueue_somDumpSelf(AWDMessageQueue *somSelf,
		long level);
typedef somTP_AWDMessageQueue_somDumpSelf *somTD_AWDMessageQueue_somDumpSelf;
typedef void   SOMLINK somTP_AWDMessageQueue_somDumpSelfInt(AWDMessageQueue *somSelf,
		long level);
typedef somTP_AWDMessageQueue_somDumpSelfInt *somTD_AWDMessageQueue_somDumpSelfInt;
}

#endif /* AWDMessageQueue_API */


/*
 * -- This emitter believes that method thunks are unavailable,
 * -- so somResolve will be called.
 */
#undef somresolve_
#define somresolve_(obj,mToken) (somResolve(obj,mToken))

/*
 * -- The C++ Wrapper Class for AWDMessageQueue
 */
class AWDMessageQueue : public SOMObject
{
public:

// AWDMessageQueue::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_AWDMessageQueue) AWDMessageQueueNewClass(AWDMessageQueue_MajorVersion,AWDMessageQueue_MinorVersion);
   return (void*)
      SOM_Resolve(_AWDMessageQueue,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_AWDMessageQueue));
}

// AWDMessageQueue::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

AWDMessageQueue()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDMessageQueueCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

AWDMessageQueue(AWDMessageQueue* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDMessageQueueCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

AWDMessageQueue(const AWDMessageQueue* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDMessageQueueCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

AWDMessageQueue(Environment *ev,unsigned long maxSize) 
{
   withSize(ev,0,maxSize);
}

AWDMessageQueue(Environment *ev,string pMsgqName) 
{
   withPrivateQName(ev,0,pMsgqName);
}

AWDMessageQueue(Environment *ev,string pMsgqName,boolean bCreateIfNoExist) 
{
   withPrivateQNameAndCreationFlag(ev,0,pMsgqName,bCreateIfNoExist);
}

AWDMessageQueue(Environment *ev,unsigned long maxSize,string pMMsgqName) 
{
   withSizeAndPrivateQName(ev,0,maxSize,pMMsgqName);
}


/* method: allocateSharedMemoryMessageQueue */
boolean   allocateSharedMemoryMessageQueue(Environment *ev)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,allocateSharedMemoryMessageQueue)
	(this, ev);
}


/* method: allocateSharedMemoryMessageQueueList */
boolean   allocateSharedMemoryMessageQueueList(Environment *ev)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,allocateSharedMemoryMessageQueueList)
	(this, ev);
}


/* method: allocateSharedMemoryMessageQueueInfo */
boolean   allocateSharedMemoryMessageQueueInfo(Environment *ev)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,allocateSharedMemoryMessageQueueInfo)
	(this, ev);
}


/* method: broadcast */
void   broadcast(Environment *ev,
		AWDEvent* event)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,broadcast)
	(this, ev,event);
}


/* method: clearEvent */
boolean   clearEvent(Environment *ev,
		AWDEvent* event)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,clearEvent)
	(this, ev,event);
}


/* method: createMessageQueue */
boolean   createMessageQueue(Environment *ev)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,createMessageQueue)
	(this, ev);
}


/* method: freeResources */
boolean   freeResources(Environment *ev)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,freeResources)
	(this, ev);
}


/* method: flushQueue */
void   flushQueue(Environment *ev)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,flushQueue)
	(this, ev);
}


/* method: getNextEvent */
boolean   getNextEvent(Environment *ev,
		unsigned long n,
		AWDEvent** event)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,getNextEvent)
	(this, ev,n,event);
}


/* method: getMessageQueue */
void   getMessageQueue(Environment *ev)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,getMessageQueue)
	(this, ev);
}


/* method: getNextFree */
unsigned long   getNextFree(Environment *ev)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,getNextFree)
	(this, ev);
}


/* method: getSharedMemoryMessageQueueListInfo */
void   getSharedMemoryMessageQueueListInfo(Environment *ev)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,getSharedMemoryMessageQueueListInfo)
	(this, ev);
}


/* method: initialize */
void   initialize(Environment *ev)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,initialize)
	(this, ev);
}


/* method: isEmpty */
boolean   isEmpty(Environment *ev)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,isEmpty)
	(this, ev);
}


/* method: isFull */
boolean   isFull(Environment *ev)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,isFull)
	(this, ev);
}


/* method: lastEvent */
unsigned long   lastEvent(Environment *ev)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,lastEvent)
	(this, ev);
}


/* method: refreshMessageQueue */
void   refreshMessageQueue(Environment *ev)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,refreshMessageQueue)
	(this, ev);
}


/* method: removeFromQueue */
long   removeFromQueue(Environment *ev,
		long current)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,removeFromQueue)
	(this, ev,current);
}


/* method: resetLastEvent */
void   resetLastEvent(Environment *ev)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,resetLastEvent)
	(this, ev);
}


/* method: stopWaitingForEvent */
void   stopWaitingForEvent(Environment *ev)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,stopWaitingForEvent)
	(this, ev);
}


/* method: unmapMemory */
void   unmapMemory(Environment *ev)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,unmapMemory)
	(this, ev);
}


/* method: verifySharedMemory */
boolean   verifySharedMemory(Environment *ev)
{
   return SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,verifySharedMemory)
	(this, ev);
}


/* method: waitForEvent */
void   waitForEvent(Environment *ev)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,waitForEvent)
	(this, ev);
}


/* method: writeOutQueue */
void   writeOutQueue(Environment *ev)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,writeOutQueue)
	(this, ev);
}


/* initializer method: withSize */
void   withSize(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long maxSize)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,withSize)
	(this, ev,ctrl,maxSize);
}


/* initializer method: withPrivateQName */
void   withPrivateQName(Environment *ev,
		somInitCtrl* ctrl,
		string pMsgqName)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,withPrivateQName)
	(this, ev,ctrl,pMsgqName);
}


/* initializer method: withPrivateQNameAndCreationFlag */
void   withPrivateQNameAndCreationFlag(Environment *ev,
		somInitCtrl* ctrl,
		string pMsgqName,
		boolean bCreateIfNoExist)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,withPrivateQNameAndCreationFlag)
	(this, ev,ctrl,pMsgqName,bCreateIfNoExist);
}


/* initializer method: withSizeAndPrivateQName */
void   withSizeAndPrivateQName(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long maxSize,
		string pMMsgqName)
{
   SOM_ResolveD(this,AWDMessageQueue,AWDMessageQueue,withSizeAndPrivateQName)
	(this, ev,ctrl,maxSize,pMMsgqName);
}


/*
 * Reintroduce inherited methods
 */

/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* initializer method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
AWDMessageQueue*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
AWDMessageQueue*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
AWDMessageQueue*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
AWDMessageQueue*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,AWDMessageQueue,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,AWDMessageQueue,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,AWDMessageQueue,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   AWDMessageQueue_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   AWDMessageQueue_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,AWDMessageQueue,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somResetObj)
	(this);
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,AWDMessageQueue,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,AWDMessageQueue,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* AWDMessageQueue */



#endif       /* SOM_AWDMessageQueue_xh */
