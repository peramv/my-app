
#ifndef SOM_AWD_xh
#define SOM_AWD_xh

class AWD;

#define AWD_MajorVersion 0
#define AWD_MinorVersion 0

/*
 * Passthru lines: File: "C.xh", "before"
 */
#pragma pack(1)

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

#ifndef AWD_API
#define AWD_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
#define AWD_OBJTYPE_NONE 0 /* 0x0000 */
#define AWD_OBJTYPE_CASE 1 /* 0x0001 */
#define AWD_OBJTYPE_FOLDER 2 /* 0x0002 */
#define AWD_OBJTYPE_SOURCE 4 /* 0x0004 */
#define AWD_OBJTYPE_TRANSACTION 8 /* 0x0008 */
#define AWD_OBJTYPE_WORK 9 /* 0x0009 */
#define AWD_OBJTYPE_ALL 15 /* 0x000F */
typedef
unsigned long  AWD_OBJECTTYPE;
typedef
struct AWD_AWDWORKOBJECTSTRCT {
char  unitcd[10];
char  wrktype[10];
char  statcd[10];
char  queuecd[8];
char  prty[3];
char  increase[3];
char  viflag;
char  suspflag;
char  amounttype;
char  amount[17];
} AWD_AWDWORKOBJECTSTRCT;
typedef
struct AWD_AWDWORKOBJECTSTRCT* AWD_PAWDWORKOBJECTSTRCT;
typedef
struct AWD_AWDSOURCEOBJECTSTRCT {
char  crstation[8];
char  cruserid[8];
char  rcdattim[26];
char  objectfmt;
char  mailtype;
char  archivbox[7];
char  archivpage[5];
char  optstat;
char  objectid[12];
char  unitcd[10];
char  objtype[10];
char  reviseflag;
char  seclevel[3];
} AWD_AWDSOURCEOBJECTSTRCT;
typedef
struct AWD_AWDSOURCEOBJECTSTRCT* AWD_PAWDSOURCEOBJECTSTRCT;
typedef
struct AWD_AWDFOLDEROBJECTSTRCT {
char  crstation[8];
char  cruserid[8];
char  unitcd[10];
char  fldtype[10];
} AWD_AWDFOLDEROBJECTSTRCT;
typedef
struct AWD_AWDFOLDEROBJECTSTRCT* AWD_PAWDFOLDEROBJECTSTRCT;
typedef
struct AWD_AWDOBJECTKEYSTRCT {
char  crdattim[26];
char  recordcd;
char  crnode[2];
} AWD_AWDOBJECTKEYSTRCT;
typedef
struct AWD_AWDOBJECTKEYSTRCT* AWD_PAWDOBJECTKEYSTRCT;
typedef
struct AWD_AWDLOBCALLSTRCT {
char  exthost[8];
char  extparm[8];
char  extdll[8];
char  extproc[33];
} AWD_AWDLOBCALLSTRCT;
typedef
struct AWD_AWDLOBCALLSTRCT* AWD_PAWDLOBCALLSTRCT;
typedef
struct AWD_AWDOBJECTSTRCT {
char  comment;
char  relation;
char  item_selected;
char  relatrecordtype[3];
char  relatcrdattim[26];
struct AWD_AWDOBJECTKEYSTRCT awdobjkey;
char  ownernode[2];
char  awddata[93];
char  existflag;
char  viewflag;
char  updateflag;
char  wrkselflag;
char  lockstat[8];
char  csdscreen[12];
char  icobjectid[12];
char  autoflags[30];
struct AWD_AWDLOBCALLSTRCT AwdLobCall[4];
char  inxfld01[10];
char  inxfld02[21];
char  inxfld03[25];
char  inxfld04[30];
} AWD_AWDOBJECTSTRCT;
typedef
struct AWD_AWDOBJECTSTRCT* AWD_PAWDOBJECTSTRCT;
typedef
struct AWD_AWDLOBDATASTRCT {
char  seqnbr[3];
char  dataname[4];
char  datavalue[75];
unsigned short  datalength;
} AWD_AWDLOBDATASTRCT;
typedef
struct AWD_AWDLOBDATASTRCT* AWD_PAWDLOBDATASTRCT;
typedef
struct AWD_AWDLOBARRAYSTRCT {
unsigned short  usCount;
AWD_PAWDLOBDATASTRCT pAwdLobData;
} AWD_AWDLOBARRAYSTRCT;
typedef
struct AWD_AWDLOBARRAYSTRCT* AWD_PAWDLOBARRAYSTRCT;
typedef
struct AWD_AWDCREATELOBDATA {
char  update_type;
char  seqnbr[3];
char  dataname[4];
char  datavalue[75];
char  datalength[2];
} AWD_AWDCREATELOBDATA;
typedef
struct AWD_AWDCREATELOBDATA* AWD_PAWDCREATELOBDATA;
typedef
struct AWD_AWDCREATELOBARRAY {
unsigned short  usCount;
AWD_PAWDCREATELOBDATA pLobArray;
} AWD_AWDCREATELOBARRAY;
typedef
struct AWD_AWDCREATELOBARRAY* AWD_PAWDCREATELOBARRAY;

/*
 *  Needed for awdmask stuff
 */
typedef
struct AWD_CURRENCYINFOSTRCT {
unsigned short  DollarLength;

/*
 *  number of digits to the left of the decimal
 */
unsigned short  Precision;

/*
 *  number of digits to the right of the decimal
 */
char  szSign[5];

/*
 *  string that represents the currency sign
 */
char  szThousands;

/*
 *  character used to seperate thousands
 */
char  szDecimal;

/*
 *  character used to seperate decimal portion
 */
boolean  fSignOnLeft;

/*
 *  TRUE if they want the sign on the left; FALSE = right
 */
boolean  fFloatingSign;

/*
 *  TRUE if they want the sign to float ( left side only )
 */
boolean  fSignSeperator;

/*
 *  TRUE if they want a one SPACE ( " " ) seperation between
 *  the sign and the value ( either side )
 */
} AWD_CURRENCYINFOSTRCT;
typedef
struct AWD_CURRENCYINFOSTRCT* AWD_PCURRENCYINFOSTRCT;
typedef
struct AWD_LOGONRECORDSTRCT {
char  optnname[20];
char  levname[10];
char  levvalue[10];
char  optnvalue[75];
char  optndesc[78];
} AWD_LOGONRECORDSTRCT;
typedef
struct AWD_LOGONRECORDSTRCT* AWD_PLOGONRECORDSTRCT;

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_OBJTYPE_NONE
    #ifdef OBJTYPE_NONE
        #undef OBJTYPE_NONE
        #define SOMTGD_OBJTYPE_NONE 1
    #else
        #define OBJTYPE_NONE AWD_OBJTYPE_NONE
    #endif /* OBJTYPE_NONE */
#endif /* SOMTGD_OBJTYPE_NONE */
#ifndef SOMTGD_OBJTYPE_CASE
    #ifdef OBJTYPE_CASE
        #undef OBJTYPE_CASE
        #define SOMTGD_OBJTYPE_CASE 1
    #else
        #define OBJTYPE_CASE AWD_OBJTYPE_CASE
    #endif /* OBJTYPE_CASE */
#endif /* SOMTGD_OBJTYPE_CASE */
#ifndef SOMTGD_OBJTYPE_FOLDER
    #ifdef OBJTYPE_FOLDER
        #undef OBJTYPE_FOLDER
        #define SOMTGD_OBJTYPE_FOLDER 1
    #else
        #define OBJTYPE_FOLDER AWD_OBJTYPE_FOLDER
    #endif /* OBJTYPE_FOLDER */
#endif /* SOMTGD_OBJTYPE_FOLDER */
#ifndef SOMTGD_OBJTYPE_SOURCE
    #ifdef OBJTYPE_SOURCE
        #undef OBJTYPE_SOURCE
        #define SOMTGD_OBJTYPE_SOURCE 1
    #else
        #define OBJTYPE_SOURCE AWD_OBJTYPE_SOURCE
    #endif /* OBJTYPE_SOURCE */
#endif /* SOMTGD_OBJTYPE_SOURCE */
#ifndef SOMTGD_OBJTYPE_TRANSACTION
    #ifdef OBJTYPE_TRANSACTION
        #undef OBJTYPE_TRANSACTION
        #define SOMTGD_OBJTYPE_TRANSACTION 1
    #else
        #define OBJTYPE_TRANSACTION AWD_OBJTYPE_TRANSACTION
    #endif /* OBJTYPE_TRANSACTION */
#endif /* SOMTGD_OBJTYPE_TRANSACTION */
#ifndef SOMTGD_OBJTYPE_WORK
    #ifdef OBJTYPE_WORK
        #undef OBJTYPE_WORK
        #define SOMTGD_OBJTYPE_WORK 1
    #else
        #define OBJTYPE_WORK AWD_OBJTYPE_WORK
    #endif /* OBJTYPE_WORK */
#endif /* SOMTGD_OBJTYPE_WORK */
#ifndef SOMTGD_OBJTYPE_ALL
    #ifdef OBJTYPE_ALL
        #undef OBJTYPE_ALL
        #define SOMTGD_OBJTYPE_ALL 1
    #else
        #define OBJTYPE_ALL AWD_OBJTYPE_ALL
    #endif /* OBJTYPE_ALL */
#endif /* SOMTGD_OBJTYPE_ALL */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_OBJECTTYPE
    #ifdef OBJECTTYPE
        #undef OBJECTTYPE
        #define SOMTGD_OBJECTTYPE 1
    #else
        #define OBJECTTYPE AWD_OBJECTTYPE
    #endif /* OBJECTTYPE */
#endif /* SOMTGD_OBJECTTYPE */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_AWDWORKOBJECTSTRCT
    #ifdef AWDWORKOBJECTSTRCT
        #undef AWDWORKOBJECTSTRCT
        #define SOMTGD_AWDWORKOBJECTSTRCT 1
    #else
        #define AWDWORKOBJECTSTRCT AWD_AWDWORKOBJECTSTRCT
    #endif /* AWDWORKOBJECTSTRCT */
#endif /* SOMTGD_AWDWORKOBJECTSTRCT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWDWORKOBJECTSTRCT
    #ifdef PAWDWORKOBJECTSTRCT
        #undef PAWDWORKOBJECTSTRCT
        #define SOMTGD_PAWDWORKOBJECTSTRCT 1
    #else
        #define PAWDWORKOBJECTSTRCT AWD_PAWDWORKOBJECTSTRCT
    #endif /* PAWDWORKOBJECTSTRCT */
#endif /* SOMTGD_PAWDWORKOBJECTSTRCT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_AWDSOURCEOBJECTSTRCT
    #ifdef AWDSOURCEOBJECTSTRCT
        #undef AWDSOURCEOBJECTSTRCT
        #define SOMTGD_AWDSOURCEOBJECTSTRCT 1
    #else
        #define AWDSOURCEOBJECTSTRCT AWD_AWDSOURCEOBJECTSTRCT
    #endif /* AWDSOURCEOBJECTSTRCT */
#endif /* SOMTGD_AWDSOURCEOBJECTSTRCT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWDSOURCEOBJECTSTRCT
    #ifdef PAWDSOURCEOBJECTSTRCT
        #undef PAWDSOURCEOBJECTSTRCT
        #define SOMTGD_PAWDSOURCEOBJECTSTRCT 1
    #else
        #define PAWDSOURCEOBJECTSTRCT AWD_PAWDSOURCEOBJECTSTRCT
    #endif /* PAWDSOURCEOBJECTSTRCT */
#endif /* SOMTGD_PAWDSOURCEOBJECTSTRCT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_AWDFOLDEROBJECTSTRCT
    #ifdef AWDFOLDEROBJECTSTRCT
        #undef AWDFOLDEROBJECTSTRCT
        #define SOMTGD_AWDFOLDEROBJECTSTRCT 1
    #else
        #define AWDFOLDEROBJECTSTRCT AWD_AWDFOLDEROBJECTSTRCT
    #endif /* AWDFOLDEROBJECTSTRCT */
#endif /* SOMTGD_AWDFOLDEROBJECTSTRCT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWDFOLDEROBJECTSTRCT
    #ifdef PAWDFOLDEROBJECTSTRCT
        #undef PAWDFOLDEROBJECTSTRCT
        #define SOMTGD_PAWDFOLDEROBJECTSTRCT 1
    #else
        #define PAWDFOLDEROBJECTSTRCT AWD_PAWDFOLDEROBJECTSTRCT
    #endif /* PAWDFOLDEROBJECTSTRCT */
#endif /* SOMTGD_PAWDFOLDEROBJECTSTRCT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_AWDOBJECTKEYSTRCT
    #ifdef AWDOBJECTKEYSTRCT
        #undef AWDOBJECTKEYSTRCT
        #define SOMTGD_AWDOBJECTKEYSTRCT 1
    #else
        #define AWDOBJECTKEYSTRCT AWD_AWDOBJECTKEYSTRCT
    #endif /* AWDOBJECTKEYSTRCT */
#endif /* SOMTGD_AWDOBJECTKEYSTRCT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWDOBJECTKEYSTRCT
    #ifdef PAWDOBJECTKEYSTRCT
        #undef PAWDOBJECTKEYSTRCT
        #define SOMTGD_PAWDOBJECTKEYSTRCT 1
    #else
        #define PAWDOBJECTKEYSTRCT AWD_PAWDOBJECTKEYSTRCT
    #endif /* PAWDOBJECTKEYSTRCT */
#endif /* SOMTGD_PAWDOBJECTKEYSTRCT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_AWDLOBCALLSTRCT
    #ifdef AWDLOBCALLSTRCT
        #undef AWDLOBCALLSTRCT
        #define SOMTGD_AWDLOBCALLSTRCT 1
    #else
        #define AWDLOBCALLSTRCT AWD_AWDLOBCALLSTRCT
    #endif /* AWDLOBCALLSTRCT */
#endif /* SOMTGD_AWDLOBCALLSTRCT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWDLOBCALLSTRCT
    #ifdef PAWDLOBCALLSTRCT
        #undef PAWDLOBCALLSTRCT
        #define SOMTGD_PAWDLOBCALLSTRCT 1
    #else
        #define PAWDLOBCALLSTRCT AWD_PAWDLOBCALLSTRCT
    #endif /* PAWDLOBCALLSTRCT */
#endif /* SOMTGD_PAWDLOBCALLSTRCT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_AWDOBJECTSTRCT
    #ifdef AWDOBJECTSTRCT
        #undef AWDOBJECTSTRCT
        #define SOMTGD_AWDOBJECTSTRCT 1
    #else
        #define AWDOBJECTSTRCT AWD_AWDOBJECTSTRCT
    #endif /* AWDOBJECTSTRCT */
#endif /* SOMTGD_AWDOBJECTSTRCT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWDOBJECTSTRCT
    #ifdef PAWDOBJECTSTRCT
        #undef PAWDOBJECTSTRCT
        #define SOMTGD_PAWDOBJECTSTRCT 1
    #else
        #define PAWDOBJECTSTRCT AWD_PAWDOBJECTSTRCT
    #endif /* PAWDOBJECTSTRCT */
#endif /* SOMTGD_PAWDOBJECTSTRCT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_AWDLOBDATASTRCT
    #ifdef AWDLOBDATASTRCT
        #undef AWDLOBDATASTRCT
        #define SOMTGD_AWDLOBDATASTRCT 1
    #else
        #define AWDLOBDATASTRCT AWD_AWDLOBDATASTRCT
    #endif /* AWDLOBDATASTRCT */
#endif /* SOMTGD_AWDLOBDATASTRCT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWDLOBDATASTRCT
    #ifdef PAWDLOBDATASTRCT
        #undef PAWDLOBDATASTRCT
        #define SOMTGD_PAWDLOBDATASTRCT 1
    #else
        #define PAWDLOBDATASTRCT AWD_PAWDLOBDATASTRCT
    #endif /* PAWDLOBDATASTRCT */
#endif /* SOMTGD_PAWDLOBDATASTRCT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_AWDLOBARRAYSTRCT
    #ifdef AWDLOBARRAYSTRCT
        #undef AWDLOBARRAYSTRCT
        #define SOMTGD_AWDLOBARRAYSTRCT 1
    #else
        #define AWDLOBARRAYSTRCT AWD_AWDLOBARRAYSTRCT
    #endif /* AWDLOBARRAYSTRCT */
#endif /* SOMTGD_AWDLOBARRAYSTRCT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWDLOBARRAYSTRCT
    #ifdef PAWDLOBARRAYSTRCT
        #undef PAWDLOBARRAYSTRCT
        #define SOMTGD_PAWDLOBARRAYSTRCT 1
    #else
        #define PAWDLOBARRAYSTRCT AWD_PAWDLOBARRAYSTRCT
    #endif /* PAWDLOBARRAYSTRCT */
#endif /* SOMTGD_PAWDLOBARRAYSTRCT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_AWDCREATELOBDATA
    #ifdef AWDCREATELOBDATA
        #undef AWDCREATELOBDATA
        #define SOMTGD_AWDCREATELOBDATA 1
    #else
        #define AWDCREATELOBDATA AWD_AWDCREATELOBDATA
    #endif /* AWDCREATELOBDATA */
#endif /* SOMTGD_AWDCREATELOBDATA */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWDCREATELOBDATA
    #ifdef PAWDCREATELOBDATA
        #undef PAWDCREATELOBDATA
        #define SOMTGD_PAWDCREATELOBDATA 1
    #else
        #define PAWDCREATELOBDATA AWD_PAWDCREATELOBDATA
    #endif /* PAWDCREATELOBDATA */
#endif /* SOMTGD_PAWDCREATELOBDATA */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_AWDCREATELOBARRAY
    #ifdef AWDCREATELOBARRAY
        #undef AWDCREATELOBARRAY
        #define SOMTGD_AWDCREATELOBARRAY 1
    #else
        #define AWDCREATELOBARRAY AWD_AWDCREATELOBARRAY
    #endif /* AWDCREATELOBARRAY */
#endif /* SOMTGD_AWDCREATELOBARRAY */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PAWDCREATELOBARRAY
    #ifdef PAWDCREATELOBARRAY
        #undef PAWDCREATELOBARRAY
        #define SOMTGD_PAWDCREATELOBARRAY 1
    #else
        #define PAWDCREATELOBARRAY AWD_PAWDCREATELOBARRAY
    #endif /* PAWDCREATELOBARRAY */
#endif /* SOMTGD_PAWDCREATELOBARRAY */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_CURRENCYINFOSTRCT
    #ifdef CURRENCYINFOSTRCT
        #undef CURRENCYINFOSTRCT
        #define SOMTGD_CURRENCYINFOSTRCT 1
    #else
        #define CURRENCYINFOSTRCT AWD_CURRENCYINFOSTRCT
    #endif /* CURRENCYINFOSTRCT */
#endif /* SOMTGD_CURRENCYINFOSTRCT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PCURRENCYINFOSTRCT
    #ifdef PCURRENCYINFOSTRCT
        #undef PCURRENCYINFOSTRCT
        #define SOMTGD_PCURRENCYINFOSTRCT 1
    #else
        #define PCURRENCYINFOSTRCT AWD_PCURRENCYINFOSTRCT
    #endif /* PCURRENCYINFOSTRCT */
#endif /* SOMTGD_PCURRENCYINFOSTRCT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifndef SOMTGD_LOGONRECORDSTRCT
    #ifdef LOGONRECORDSTRCT
        #undef LOGONRECORDSTRCT
        #define SOMTGD_LOGONRECORDSTRCT 1
    #else
        #define LOGONRECORDSTRCT AWD_LOGONRECORDSTRCT
    #endif /* LOGONRECORDSTRCT */
#endif /* SOMTGD_LOGONRECORDSTRCT */

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_PLOGONRECORDSTRCT
    #ifdef PLOGONRECORDSTRCT
        #undef PLOGONRECORDSTRCT
        #define SOMTGD_PLOGONRECORDSTRCT 1
    #else
        #define PLOGONRECORDSTRCT AWD_PLOGONRECORDSTRCT
    #endif /* PLOGONRECORDSTRCT */
#endif /* SOMTGD_PLOGONRECORDSTRCT */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#endif /* SOM_DONT_USE_SHORT_NAMES */

/*
 * End of user-defined types.
 */

/*
 * Passthru lines: File: "C.xh", "after"
 */
#pragma pack()

/* A procedure to create the AWD Class */
SOMEXTERN
#if (defined(SOM_Module_structs_Source) || defined(AWD_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWD))
WIN32_DLLEXPORT
#else
WIN32_DLLIMPORT
#endif
SOMClass * SOMLINK AWDNewClass(
		integer4,
		integer4 );

/* The API to the AWD class object, and the methods it introduces. */
SOMEXTERN struct AWDClassDataStructure {
	SOMClass *classObject;
}
#if !(defined(SOM_Module_structs_Source) || defined(AWD_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWD))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDClassData;
#define _AWD AWDClassData.classObject

/* The API to parentMtabs for AWD, and the instance data it introduces. */
SOMEXTERN struct AWDCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
}
#if !(defined(SOM_Module_structs_Source) || defined(AWD_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWD))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDCClassData;

/*
 * -- Typedefs for AWD Method Procedures
 */
extern "C" {
}

#endif /* AWD_API */


/*
 * -- This emitter believes that method thunks are unavailable,
 * -- so somResolve will be called.
 */
#undef somresolve_
#define somresolve_(obj,mToken) (somResolve(obj,mToken))

/*
 * -- The C++ Wrapper Class for AWD
 */

class AWD : public SOMObject
{
public:

// AWD::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_AWD) AWDNewClass(AWD_MajorVersion,AWD_MinorVersion);
   return (void*)
      SOM_Resolve(_AWD,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_AWD));
}

// AWD::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

AWD()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

AWD(AWD* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

AWD(const AWD* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}



};   /* AWD */



#endif       /* SOM_AWD_xh */
