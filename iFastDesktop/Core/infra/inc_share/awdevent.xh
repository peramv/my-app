
#ifndef SOM_AWDEvent_xh
#define SOM_AWDEvent_xh

class AWDEvent;

#define AWDEvent_MajorVersion 2
#define AWDEvent_MinorVersion 3

/*
 * Passthru lines: File: "C.xh", "before"
 */
#include <somobj.xh>

#include "awdapp.xh"
#include "awdobj.xh"
#include "awdevent.xh"
#include "awdmsgq.xh"

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_SOMObject_xh
#include <somobj.xh>
#endif

#ifndef AWDEvent_API
#define AWDEvent_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class AWDApplication;
class AWDBase;
class AWDMessageQueue;

/*
 * End of user-defined types.
 */

/* A procedure to create the AWDEvent Class */
SOMEXTERN
#if (defined(SOM_Module_AWDEvent_Source) || defined(AWDEvent_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDEvent))
WIN32_DLLEXPORT
#else
WIN32_DLLIMPORT
#endif
SOMClass * SOMLINK AWDEventNewClass(
		integer4,
		integer4 );

/* The API to the AWDEvent class object, and the methods it introduces. */
SOMEXTERN struct AWDEventClassDataStructure {
	SOMClass *classObject;
	somMToken broadcastEvent;
	somMToken eventId;
	somMToken getAwdObjectRepositoryHandle;
	somMToken initialize;
	somMToken internalId;
	somMToken messageId;
	somMToken parameter1;
	somMToken parameter2;
	somMToken postEvent;
	somMToken processId;
	somMToken setAwdObject;
	somMToken setAwdObjectRepositoryHandle;
	somMToken setEventId;
	somMToken setInternalId;
	somMToken setMessageId;
	somMToken setParameter1;
	somMToken setParameter2;
	somMToken setProcessId;
	somMToken withAwdObj;
	somMToken withMsgId;
	somMToken withParameter1;
	somMToken withMsgIdAndAwdObj;
	somMToken withMsgIdAndParameter1;
	somMToken withMsgIdAndEventId;
	somMToken withParameter1AndParameter2;
	somMToken withMsgIdAwdObjAndEventId;
	somMToken withMsgIdAwdObjAndParameter1;
	somMToken withMsgIdEventIdAndParameter1;
	somMToken withMsgIdParameter1AndParameter2;
	somMToken withMsgIdAwdObjEventIdAndParameter1;
	somMToken withMsgIdAwdObjParameter1AndParameter2;
	somMToken withMsgIdEventIdParameter1AndParameter2;
	somMToken withMsgIdEventIdAwdObjParameter1AndParameter2;
}
#if !(defined(SOM_Module_AWDEvent_Source) || defined(AWDEvent_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDEvent))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDEventClassData;
#define _AWDEvent AWDEventClassData.classObject

/* The API to parentMtabs for AWDEvent, and the instance data it introduces. */
SOMEXTERN struct AWDEventCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
}
#if !(defined(SOM_Module_AWDEvent_Source) || defined(AWDEvent_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDEvent))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDEventCClassData;

/*
 * -- Typedefs for AWDEvent Method Procedures
 */
extern "C" {
typedef void   SOMLINK somTP_AWDEvent_broadcastEvent(AWDEvent *somSelf, Environment *ev);
typedef somTP_AWDEvent_broadcastEvent *somTD_AWDEvent_broadcastEvent;
typedef unsigned long   SOMLINK somTP_AWDEvent_eventId(AWDEvent *somSelf, Environment *ev);
typedef somTP_AWDEvent_eventId *somTD_AWDEvent_eventId;
typedef unsigned long   SOMLINK somTP_AWDEvent_getAwdObjectRepositoryHandle(AWDEvent *somSelf, Environment *ev);
typedef somTP_AWDEvent_getAwdObjectRepositoryHandle *somTD_AWDEvent_getAwdObjectRepositoryHandle;
typedef void   SOMLINK somTP_AWDEvent_initialize(AWDEvent *somSelf, Environment *ev);
typedef somTP_AWDEvent_initialize *somTD_AWDEvent_initialize;
typedef unsigned long   SOMLINK somTP_AWDEvent_internalId(AWDEvent *somSelf, Environment *ev);
typedef somTP_AWDEvent_internalId *somTD_AWDEvent_internalId;
typedef unsigned long   SOMLINK somTP_AWDEvent_messageId(AWDEvent *somSelf, Environment *ev);
typedef somTP_AWDEvent_messageId *somTD_AWDEvent_messageId;
typedef void*   SOMLINK somTP_AWDEvent_parameter1(AWDEvent *somSelf, Environment *ev);
typedef somTP_AWDEvent_parameter1 *somTD_AWDEvent_parameter1;
typedef void*   SOMLINK somTP_AWDEvent_parameter2(AWDEvent *somSelf, Environment *ev);
typedef somTP_AWDEvent_parameter2 *somTD_AWDEvent_parameter2;
typedef void   SOMLINK somTP_AWDEvent_postEvent(AWDEvent *somSelf, Environment *ev,
		string msgQName);
typedef somTP_AWDEvent_postEvent *somTD_AWDEvent_postEvent;
typedef unsigned long   SOMLINK somTP_AWDEvent_processId(AWDEvent *somSelf, Environment *ev);
typedef somTP_AWDEvent_processId *somTD_AWDEvent_processId;
typedef unsigned long   SOMLINK somTP_AWDEvent_setAwdObject(AWDEvent *somSelf, Environment *ev,
		AWDBase* awdObj);
typedef somTP_AWDEvent_setAwdObject *somTD_AWDEvent_setAwdObject;
typedef void   SOMLINK somTP_AWDEvent_setAwdObjectRepositoryHandle(AWDEvent *somSelf, Environment *ev,
		unsigned long objectRepoHandle);
typedef somTP_AWDEvent_setAwdObjectRepositoryHandle *somTD_AWDEvent_setAwdObjectRepositoryHandle;
typedef void   SOMLINK somTP_AWDEvent_setEventId(AWDEvent *somSelf, Environment *ev,
		unsigned long eventId);
typedef somTP_AWDEvent_setEventId *somTD_AWDEvent_setEventId;
typedef void   SOMLINK somTP_AWDEvent_setInternalId(AWDEvent *somSelf, Environment *ev,
		unsigned long internalId);
typedef somTP_AWDEvent_setInternalId *somTD_AWDEvent_setInternalId;
typedef void   SOMLINK somTP_AWDEvent_setMessageId(AWDEvent *somSelf, Environment *ev,
		unsigned long messageId);
typedef somTP_AWDEvent_setMessageId *somTD_AWDEvent_setMessageId;
typedef void   SOMLINK somTP_AWDEvent_setParameter1(AWDEvent *somSelf, Environment *ev,
		void* mp1);
typedef somTP_AWDEvent_setParameter1 *somTD_AWDEvent_setParameter1;
typedef void   SOMLINK somTP_AWDEvent_setParameter2(AWDEvent *somSelf, Environment *ev,
		void* mp2);
typedef somTP_AWDEvent_setParameter2 *somTD_AWDEvent_setParameter2;
typedef void   SOMLINK somTP_AWDEvent_setProcessId(AWDEvent *somSelf, Environment *ev,
		unsigned long procId);
typedef somTP_AWDEvent_setProcessId *somTD_AWDEvent_setProcessId;
typedef void   SOMLINK somTP_AWDEvent_withAwdObj(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		AWDBase* awdObj);
typedef somTP_AWDEvent_withAwdObj *somTD_AWDEvent_withAwdObj;
typedef void   SOMLINK somTP_AWDEvent_withMsgId(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId);
typedef somTP_AWDEvent_withMsgId *somTD_AWDEvent_withMsgId;
typedef void   SOMLINK somTP_AWDEvent_withParameter1(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		void* mp1);
typedef somTP_AWDEvent_withParameter1 *somTD_AWDEvent_withParameter1;
typedef void   SOMLINK somTP_AWDEvent_withMsgIdAndAwdObj(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		AWDBase* awdObj);
typedef somTP_AWDEvent_withMsgIdAndAwdObj *somTD_AWDEvent_withMsgIdAndAwdObj;
typedef void   SOMLINK somTP_AWDEvent_withMsgIdAndParameter1(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		void* mp1);
typedef somTP_AWDEvent_withMsgIdAndParameter1 *somTD_AWDEvent_withMsgIdAndParameter1;
typedef void   SOMLINK somTP_AWDEvent_withMsgIdAndEventId(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		unsigned long eventId);
typedef somTP_AWDEvent_withMsgIdAndEventId *somTD_AWDEvent_withMsgIdAndEventId;
typedef void   SOMLINK somTP_AWDEvent_withParameter1AndParameter2(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		void* mp1,
		void* mp2);
typedef somTP_AWDEvent_withParameter1AndParameter2 *somTD_AWDEvent_withParameter1AndParameter2;
typedef void   SOMLINK somTP_AWDEvent_withMsgIdAwdObjAndEventId(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		AWDBase* awdObj,
		unsigned long eventId);
typedef somTP_AWDEvent_withMsgIdAwdObjAndEventId *somTD_AWDEvent_withMsgIdAwdObjAndEventId;
typedef void   SOMLINK somTP_AWDEvent_withMsgIdAwdObjAndParameter1(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		AWDBase* awdObj,
		void* mp1);
typedef somTP_AWDEvent_withMsgIdAwdObjAndParameter1 *somTD_AWDEvent_withMsgIdAwdObjAndParameter1;
typedef void   SOMLINK somTP_AWDEvent_withMsgIdEventIdAndParameter1(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		unsigned long eventId,
		void* mp1);
typedef somTP_AWDEvent_withMsgIdEventIdAndParameter1 *somTD_AWDEvent_withMsgIdEventIdAndParameter1;
typedef void   SOMLINK somTP_AWDEvent_withMsgIdParameter1AndParameter2(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		void* mp1,
		void* mp2);
typedef somTP_AWDEvent_withMsgIdParameter1AndParameter2 *somTD_AWDEvent_withMsgIdParameter1AndParameter2;
typedef void   SOMLINK somTP_AWDEvent_withMsgIdAwdObjEventIdAndParameter1(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		AWDBase* awdObj,
		unsigned long eventId,
		void* mp1);
typedef somTP_AWDEvent_withMsgIdAwdObjEventIdAndParameter1 *somTD_AWDEvent_withMsgIdAwdObjEventIdAndParameter1;
typedef void   SOMLINK somTP_AWDEvent_withMsgIdAwdObjParameter1AndParameter2(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		AWDBase* awdObj,
		void* mp1,
		void* mp2);
typedef somTP_AWDEvent_withMsgIdAwdObjParameter1AndParameter2 *somTD_AWDEvent_withMsgIdAwdObjParameter1AndParameter2;
typedef void   SOMLINK somTP_AWDEvent_withMsgIdEventIdParameter1AndParameter2(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		unsigned long eventId,
		void* mp1,
		void* mp2);
typedef somTP_AWDEvent_withMsgIdEventIdParameter1AndParameter2 *somTD_AWDEvent_withMsgIdEventIdParameter1AndParameter2;
typedef void   SOMLINK somTP_AWDEvent_withMsgIdEventIdAwdObjParameter1AndParameter2(AWDEvent *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		unsigned long eventId,
		AWDBase* awdObj,
		void* mp1,
		void* mp2);
typedef somTP_AWDEvent_withMsgIdEventIdAwdObjParameter1AndParameter2 *somTD_AWDEvent_withMsgIdEventIdAwdObjParameter1AndParameter2;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef void   SOMLINK somTP_AWDEvent_somDefaultInit(AWDEvent *somSelf,
		somInitCtrl* ctrl);
typedef somTP_AWDEvent_somDefaultInit *somTD_AWDEvent_somDefaultInit;
typedef void   SOMLINK somTP_AWDEvent_somDestruct(AWDEvent *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef somTP_AWDEvent_somDestruct *somTD_AWDEvent_somDestruct;
typedef void   SOMLINK somTP_AWDEvent_somDefaultCopyInit(AWDEvent *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDEvent_somDefaultCopyInit *somTD_AWDEvent_somDefaultCopyInit;
typedef AWDEvent*   SOMLINK somTP_AWDEvent_somDefaultAssign(AWDEvent *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDEvent_somDefaultAssign *somTD_AWDEvent_somDefaultAssign;
typedef void   SOMLINK somTP_AWDEvent_somDefaultConstCopyInit(AWDEvent *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDEvent_somDefaultConstCopyInit *somTD_AWDEvent_somDefaultConstCopyInit;
typedef void   SOMLINK somTP_AWDEvent_somDefaultVCopyInit(AWDEvent *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDEvent_somDefaultVCopyInit *somTD_AWDEvent_somDefaultVCopyInit;
typedef void   SOMLINK somTP_AWDEvent_somDefaultConstVCopyInit(AWDEvent *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDEvent_somDefaultConstVCopyInit *somTD_AWDEvent_somDefaultConstVCopyInit;
typedef AWDEvent*   SOMLINK somTP_AWDEvent_somDefaultConstAssign(AWDEvent *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDEvent_somDefaultConstAssign *somTD_AWDEvent_somDefaultConstAssign;
typedef AWDEvent*   SOMLINK somTP_AWDEvent_somDefaultVAssign(AWDEvent *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDEvent_somDefaultVAssign *somTD_AWDEvent_somDefaultVAssign;
typedef AWDEvent*   SOMLINK somTP_AWDEvent_somDefaultConstVAssign(AWDEvent *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDEvent_somDefaultConstVAssign *somTD_AWDEvent_somDefaultConstVAssign;
typedef void   SOMLINK somTP_AWDEvent_somInit(AWDEvent *somSelf);
typedef somTP_AWDEvent_somInit *somTD_AWDEvent_somInit;
typedef void   SOMLINK somTP_AWDEvent_somFree(AWDEvent *somSelf);
typedef somTP_AWDEvent_somFree *somTD_AWDEvent_somFree;
typedef void   SOMLINK somTP_AWDEvent_somUninit(AWDEvent *somSelf);
typedef somTP_AWDEvent_somUninit *somTD_AWDEvent_somUninit;
typedef SOMClass*   SOMLINK somTP_AWDEvent_somGetClass(AWDEvent *somSelf);
typedef somTP_AWDEvent_somGetClass *somTD_AWDEvent_somGetClass;
typedef string   SOMLINK somTP_AWDEvent_somGetClassName(AWDEvent *somSelf);
typedef somTP_AWDEvent_somGetClassName *somTD_AWDEvent_somGetClassName;
typedef long   SOMLINK somTP_AWDEvent_somGetSize(AWDEvent *somSelf);
typedef somTP_AWDEvent_somGetSize *somTD_AWDEvent_somGetSize;
typedef boolean   SOMLINK somTP_AWDEvent_somIsA(AWDEvent *somSelf,
		SOMClass* aClassObj);
typedef somTP_AWDEvent_somIsA *somTD_AWDEvent_somIsA;
typedef boolean   SOMLINK somTP_AWDEvent_somIsInstanceOf(AWDEvent *somSelf,
		SOMClass* aClassObj);
typedef somTP_AWDEvent_somIsInstanceOf *somTD_AWDEvent_somIsInstanceOf;
typedef boolean   SOMLINK somTP_AWDEvent_somRespondsTo(AWDEvent *somSelf,
		somId mId);
typedef somTP_AWDEvent_somRespondsTo *somTD_AWDEvent_somRespondsTo;
typedef boolean   SOMLINK somTP_AWDEvent_somDispatch(AWDEvent *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_AWDEvent_somDispatch *somTD_AWDEvent_somDispatch;
typedef boolean   SOMLINK somTP_AWDEvent_somClassDispatch(AWDEvent *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_AWDEvent_somClassDispatch *somTD_AWDEvent_somClassDispatch;
typedef boolean   SOMLINK somTP_AWDEvent_somCastObj(AWDEvent *somSelf,
		SOMClass* cls);
typedef somTP_AWDEvent_somCastObj *somTD_AWDEvent_somCastObj;
typedef boolean   SOMLINK somTP_AWDEvent_somResetObj(AWDEvent *somSelf);
typedef somTP_AWDEvent_somResetObj *somTD_AWDEvent_somResetObj;
typedef SOMObject*   SOMLINK somTP_AWDEvent_somPrintSelf(AWDEvent *somSelf);
typedef somTP_AWDEvent_somPrintSelf *somTD_AWDEvent_somPrintSelf;
typedef void   SOMLINK somTP_AWDEvent_somDumpSelf(AWDEvent *somSelf,
		long level);
typedef somTP_AWDEvent_somDumpSelf *somTD_AWDEvent_somDumpSelf;
typedef void   SOMLINK somTP_AWDEvent_somDumpSelfInt(AWDEvent *somSelf,
		long level);
typedef somTP_AWDEvent_somDumpSelfInt *somTD_AWDEvent_somDumpSelfInt;
}

#endif /* AWDEvent_API */


/*
 * -- This emitter believes that method thunks are unavailable,
 * -- so somResolve will be called.
 */
#undef somresolve_
#define somresolve_(obj,mToken) (somResolve(obj,mToken))

/*
 * -- The C++ Wrapper Class for AWDEvent
 */
class AWDEvent : public SOMObject
{
public:

// AWDEvent::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_AWDEvent) AWDEventNewClass(AWDEvent_MajorVersion,AWDEvent_MinorVersion);
   return (void*)
      SOM_Resolve(_AWDEvent,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_AWDEvent));
}

// AWDEvent::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

AWDEvent()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDEventCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

AWDEvent(AWDEvent* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDEventCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

AWDEvent(const AWDEvent* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDEventCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

AWDEvent(Environment *ev,AWDBase* awdObj) 
{
   withAwdObj(ev,0,awdObj);
}

AWDEvent(Environment *ev,unsigned long msgId) 
{
   withMsgId(ev,0,msgId);
}

AWDEvent(Environment *ev,void* mp1) 
{
   withParameter1(ev,0,mp1);
}

AWDEvent(Environment *ev,unsigned long msgId,AWDBase* awdObj) 
{
   withMsgIdAndAwdObj(ev,0,msgId,awdObj);
}

AWDEvent(Environment *ev,unsigned long msgId,void* mp1) 
{
   withMsgIdAndParameter1(ev,0,msgId,mp1);
}

AWDEvent(Environment *ev,unsigned long msgId,unsigned long eventId) 
{
   withMsgIdAndEventId(ev,0,msgId,eventId);
}

AWDEvent(Environment *ev,void* mp1,void* mp2) 
{
   withParameter1AndParameter2(ev,0,mp1,mp2);
}

AWDEvent(Environment *ev,unsigned long msgId,AWDBase* awdObj,unsigned long eventId) 
{
   withMsgIdAwdObjAndEventId(ev,0,msgId,awdObj,eventId);
}

AWDEvent(Environment *ev,unsigned long msgId,AWDBase* awdObj,void* mp1) 
{
   withMsgIdAwdObjAndParameter1(ev,0,msgId,awdObj,mp1);
}

AWDEvent(Environment *ev,unsigned long msgId,unsigned long eventId,void* mp1) 
{
   withMsgIdEventIdAndParameter1(ev,0,msgId,eventId,mp1);
}

AWDEvent(Environment *ev,unsigned long msgId,void* mp1,void* mp2) 
{
   withMsgIdParameter1AndParameter2(ev,0,msgId,mp1,mp2);
}

AWDEvent(Environment *ev,unsigned long msgId,AWDBase* awdObj,unsigned long eventId,void* mp1) 
{
   withMsgIdAwdObjEventIdAndParameter1(ev,0,msgId,awdObj,eventId,mp1);
}

AWDEvent(Environment *ev,unsigned long msgId,AWDBase* awdObj,void* mp1,void* mp2) 
{
   withMsgIdAwdObjParameter1AndParameter2(ev,0,msgId,awdObj,mp1,mp2);
}

AWDEvent(Environment *ev,unsigned long msgId,unsigned long eventId,void* mp1,void* mp2) 
{
   withMsgIdEventIdParameter1AndParameter2(ev,0,msgId,eventId,mp1,mp2);
}

AWDEvent(Environment *ev,unsigned long msgId,unsigned long eventId,AWDBase* awdObj,void* mp1,void* mp2) 
{
   withMsgIdEventIdAwdObjParameter1AndParameter2(ev,0,msgId,eventId,awdObj,mp1,mp2);
}


/* method: broadcastEvent */
void   broadcastEvent(Environment *ev)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,broadcastEvent)
	(this, ev);
}


/* method: eventId */
unsigned long   eventId(Environment *ev)
{
   return SOM_ResolveD(this,AWDEvent,AWDEvent,eventId)
	(this, ev);
}


/* method: getAwdObjectRepositoryHandle */
unsigned long   getAwdObjectRepositoryHandle(Environment *ev)
{
   return SOM_ResolveD(this,AWDEvent,AWDEvent,getAwdObjectRepositoryHandle)
	(this, ev);
}


/* method: initialize */
void   initialize(Environment *ev)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,initialize)
	(this, ev);
}


/* method: internalId */
unsigned long   internalId(Environment *ev)
{
   return SOM_ResolveD(this,AWDEvent,AWDEvent,internalId)
	(this, ev);
}


/* method: messageId */
unsigned long   messageId(Environment *ev)
{
   return SOM_ResolveD(this,AWDEvent,AWDEvent,messageId)
	(this, ev);
}


/* method: parameter1 */
void*   parameter1(Environment *ev)
{
   return SOM_ResolveD(this,AWDEvent,AWDEvent,parameter1)
	(this, ev);
}


/* method: parameter2 */
void*   parameter2(Environment *ev)
{
   return SOM_ResolveD(this,AWDEvent,AWDEvent,parameter2)
	(this, ev);
}


/* method: postEvent */
void   postEvent(Environment *ev,
		string msgQName)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,postEvent)
	(this, ev,msgQName);
}


/* method: processId */
unsigned long   processId(Environment *ev)
{
   return SOM_ResolveD(this,AWDEvent,AWDEvent,processId)
	(this, ev);
}


/* method: setAwdObject */
unsigned long   setAwdObject(Environment *ev,
		AWDBase* awdObj)
{
   return SOM_ResolveD(this,AWDEvent,AWDEvent,setAwdObject)
	(this, ev,awdObj);
}


/* method: setAwdObjectRepositoryHandle */
void   setAwdObjectRepositoryHandle(Environment *ev,
		unsigned long objectRepoHandle)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,setAwdObjectRepositoryHandle)
	(this, ev,objectRepoHandle);
}


/* method: setEventId */
void   setEventId(Environment *ev,
		unsigned long eventId)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,setEventId)
	(this, ev,eventId);
}


/* method: setInternalId */
void   setInternalId(Environment *ev,
		unsigned long internalId)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,setInternalId)
	(this, ev,internalId);
}


/* method: setMessageId */
void   setMessageId(Environment *ev,
		unsigned long messageId)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,setMessageId)
	(this, ev,messageId);
}


/* method: setParameter1 */
void   setParameter1(Environment *ev,
		void* mp1)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,setParameter1)
	(this, ev,mp1);
}


/* method: setParameter2 */
void   setParameter2(Environment *ev,
		void* mp2)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,setParameter2)
	(this, ev,mp2);
}


/* method: setProcessId */
void   setProcessId(Environment *ev,
		unsigned long procId)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,setProcessId)
	(this, ev,procId);
}


/* initializer method: withAwdObj */
void   withAwdObj(Environment *ev,
		somInitCtrl* ctrl,
		AWDBase* awdObj)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withAwdObj)
	(this, ev,ctrl,awdObj);
}


/* initializer method: withMsgId */
void   withMsgId(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withMsgId)
	(this, ev,ctrl,msgId);
}


/* initializer method: withParameter1 */
void   withParameter1(Environment *ev,
		somInitCtrl* ctrl,
		void* mp1)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withParameter1)
	(this, ev,ctrl,mp1);
}


/* initializer method: withMsgIdAndAwdObj */
void   withMsgIdAndAwdObj(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		AWDBase* awdObj)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withMsgIdAndAwdObj)
	(this, ev,ctrl,msgId,awdObj);
}


/* initializer method: withMsgIdAndParameter1 */
void   withMsgIdAndParameter1(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		void* mp1)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withMsgIdAndParameter1)
	(this, ev,ctrl,msgId,mp1);
}


/* initializer method: withMsgIdAndEventId */
void   withMsgIdAndEventId(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		unsigned long eventId)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withMsgIdAndEventId)
	(this, ev,ctrl,msgId,eventId);
}


/* initializer method: withParameter1AndParameter2 */
void   withParameter1AndParameter2(Environment *ev,
		somInitCtrl* ctrl,
		void* mp1,
		void* mp2)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withParameter1AndParameter2)
	(this, ev,ctrl,mp1,mp2);
}


/* initializer method: withMsgIdAwdObjAndEventId */
void   withMsgIdAwdObjAndEventId(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		AWDBase* awdObj,
		unsigned long eventId)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withMsgIdAwdObjAndEventId)
	(this, ev,ctrl,msgId,awdObj,eventId);
}


/* initializer method: withMsgIdAwdObjAndParameter1 */
void   withMsgIdAwdObjAndParameter1(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		AWDBase* awdObj,
		void* mp1)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withMsgIdAwdObjAndParameter1)
	(this, ev,ctrl,msgId,awdObj,mp1);
}


/* initializer method: withMsgIdEventIdAndParameter1 */
void   withMsgIdEventIdAndParameter1(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		unsigned long eventId,
		void* mp1)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withMsgIdEventIdAndParameter1)
	(this, ev,ctrl,msgId,eventId,mp1);
}


/* initializer method: withMsgIdParameter1AndParameter2 */
void   withMsgIdParameter1AndParameter2(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		void* mp1,
		void* mp2)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withMsgIdParameter1AndParameter2)
	(this, ev,ctrl,msgId,mp1,mp2);
}


/* initializer method: withMsgIdAwdObjEventIdAndParameter1 */
void   withMsgIdAwdObjEventIdAndParameter1(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		AWDBase* awdObj,
		unsigned long eventId,
		void* mp1)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withMsgIdAwdObjEventIdAndParameter1)
	(this, ev,ctrl,msgId,awdObj,eventId,mp1);
}


/* initializer method: withMsgIdAwdObjParameter1AndParameter2 */
void   withMsgIdAwdObjParameter1AndParameter2(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		AWDBase* awdObj,
		void* mp1,
		void* mp2)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withMsgIdAwdObjParameter1AndParameter2)
	(this, ev,ctrl,msgId,awdObj,mp1,mp2);
}


/* initializer method: withMsgIdEventIdParameter1AndParameter2 */
void   withMsgIdEventIdParameter1AndParameter2(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		unsigned long eventId,
		void* mp1,
		void* mp2)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withMsgIdEventIdParameter1AndParameter2)
	(this, ev,ctrl,msgId,eventId,mp1,mp2);
}


/* initializer method: withMsgIdEventIdAwdObjParameter1AndParameter2 */
void   withMsgIdEventIdAwdObjParameter1AndParameter2(Environment *ev,
		somInitCtrl* ctrl,
		unsigned long msgId,
		unsigned long eventId,
		AWDBase* awdObj,
		void* mp1,
		void* mp2)
{
   SOM_ResolveD(this,AWDEvent,AWDEvent,withMsgIdEventIdAwdObjParameter1AndParameter2)
	(this, ev,ctrl,msgId,eventId,awdObj,mp1,mp2);
}


/*
 * Reintroduce inherited methods
 */

/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,AWDEvent,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,AWDEvent,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* initializer method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDEvent,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
AWDEvent*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDEvent,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDEvent,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDEvent,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
AWDEvent*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
AWDEvent*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
AWDEvent*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,AWDEvent,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,AWDEvent,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,AWDEvent,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   AWDEvent_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,AWDEvent,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,AWDEvent,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   AWDEvent_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,AWDEvent,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,AWDEvent,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somResetObj)
	(this);
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,AWDEvent,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,AWDEvent,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,AWDEvent,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* AWDEvent */



#endif       /* SOM_AWDEvent_xh */
