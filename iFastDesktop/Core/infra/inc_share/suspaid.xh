
#ifndef SOM_AWDSuspendAid_xh
#define SOM_AWDSuspendAid_xh

class AWDSuspendAid;

#define AWDSuspendAid_MajorVersion 2
#define AWDSuspendAid_MinorVersion 3

/*
 * Passthru lines: File: "C.xh", "before"
 */
#include "wrkobj.xh" 

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_BaseServiceAid_xh
#include <baseaid.xh>
#endif

#ifndef AWDSuspendAid_API
#define AWDSuspendAid_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class AWDPersist;
class AWDBase;
class iostream;
class AWDVisitor;
class AWDServiceManager;
class AWDCommentAid;
class AWDString;
class AWDAlphaField;
class AWDDateTime;
class AWDBaseField;
class AWDDictionary;
class AWDDateTimeField;
class AWDGroupField;
class AWDApplication;
class AWDFieldFactory;
class AWDEntityKey;
class AWDMenu;
class CCriticalSection;
class FieldList;
class AWDRelationship;
class AWDTextField;
class AWDSuspendAid;

/*
 * End of user-defined types.
 */

/* A procedure to create the AWDSuspendAid Class */
SOMEXTERN
#if (defined(SOM_Module_suspaid_Source) || defined(AWDSuspendAid_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDSuspendAid))
WIN32_DLLEXPORT
#else
WIN32_DLLIMPORT
#endif
SOMClass * SOMLINK AWDSuspendAidNewClass(
		integer4,
		integer4 );

/* The API to the AWDSuspendAid class object, and the methods it introduces. */
SOMEXTERN struct AWDSuspendAidClassDataStructure {
	SOMClass *classObject;
	somMToken activate;
	somMToken lastSuspendDays;
	somMToken activateDateTime;
	somMToken activateStatus;
	somMToken listActivateStatus;
	somMToken listSuspendCodes;
	somMToken maxSuspendDays;
	somMToken setActivateDateTime;
	somMToken setActivateStatus;
	somMToken setSuspendCode;
	somMToken suspend;
	somMToken unsuspend;
	somMToken withBase;
	somMToken withBaseDateStatusandCode;
	somMToken suspendCode;
	somMToken initialize;
	somMToken setLastSuspendDays;
	somMToken update;
}
#if !(defined(SOM_Module_suspaid_Source) || defined(AWDSuspendAid_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDSuspendAid))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDSuspendAidClassData;
#define _AWDSuspendAid AWDSuspendAidClassData.classObject

/* The API to parentMtabs for AWDSuspendAid, and the instance data it introduces. */
SOMEXTERN struct AWDSuspendAidCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
}
#if !(defined(SOM_Module_suspaid_Source) || defined(AWDSuspendAid_Class_Source) || defined (SOM_DONT_IMPORT_CLASS_AWDSuspendAid))
WIN32_DLLIMPORT
#elif defined(_MSC_VER)||defined(_WIN32_DECL_PROTO)
WIN32_DLLEXPORT
#endif
SOMDLINK AWDSuspendAidCClassData;

/*
 * -- Typedefs for AWDSuspendAid Method Procedures
 */
extern "C" {
typedef boolean   SOMLINK somTP_AWDSuspendAid_activate(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_activate *somTD_AWDSuspendAid_activate;
typedef string   SOMLINK somTP_AWDSuspendAid_activateStatus(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_activateStatus *somTD_AWDSuspendAid_activateStatus;
typedef string   SOMLINK somTP_AWDSuspendAid_activateDateTime(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_activateDateTime *somTD_AWDSuspendAid_activateDateTime;
typedef void   SOMLINK somTP_AWDSuspendAid_initialize(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_initialize *somTD_AWDSuspendAid_initialize;
typedef unsigned short   SOMLINK somTP_AWDSuspendAid_lastSuspendDays(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_lastSuspendDays *somTD_AWDSuspendAid_lastSuspendDays;
typedef SOMList*   SOMLINK somTP_AWDSuspendAid_listActivateStatus(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_listActivateStatus *somTD_AWDSuspendAid_listActivateStatus;
typedef SOMList*   SOMLINK somTP_AWDSuspendAid_listSuspendCodes(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_listSuspendCodes *somTD_AWDSuspendAid_listSuspendCodes;
typedef unsigned short   SOMLINK somTP_AWDSuspendAid_maxSuspendDays(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_maxSuspendDays *somTD_AWDSuspendAid_maxSuspendDays;
typedef boolean   SOMLINK somTP_AWDSuspendAid_setLastSuspendDays(AWDSuspendAid *somSelf, Environment *ev,
		unsigned short suspendDays);
typedef somTP_AWDSuspendAid_setLastSuspendDays *somTD_AWDSuspendAid_setLastSuspendDays;
typedef boolean   SOMLINK somTP_AWDSuspendAid_setActivateDateTime(AWDSuspendAid *somSelf, Environment *ev,
		string activateDataTime);
typedef somTP_AWDSuspendAid_setActivateDateTime *somTD_AWDSuspendAid_setActivateDateTime;
typedef boolean   SOMLINK somTP_AWDSuspendAid_setActivateStatus(AWDSuspendAid *somSelf, Environment *ev,
		string activateStatus);
typedef somTP_AWDSuspendAid_setActivateStatus *somTD_AWDSuspendAid_setActivateStatus;
typedef boolean   SOMLINK somTP_AWDSuspendAid_setSuspendCode(AWDSuspendAid *somSelf, Environment *ev,
		string suspendCode);
typedef somTP_AWDSuspendAid_setSuspendCode *somTD_AWDSuspendAid_setSuspendCode;
typedef boolean   SOMLINK somTP_AWDSuspendAid_suspend(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_suspend *somTD_AWDSuspendAid_suspend;
typedef string   SOMLINK somTP_AWDSuspendAid_suspendCode(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_suspendCode *somTD_AWDSuspendAid_suspendCode;
typedef boolean   SOMLINK somTP_AWDSuspendAid_unsuspend(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_unsuspend *somTD_AWDSuspendAid_unsuspend;
typedef boolean   SOMLINK somTP_AWDSuspendAid_update(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_update *somTD_AWDSuspendAid_update;
typedef void   SOMLINK somTP_AWDSuspendAid_withBase(AWDSuspendAid *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		AWDWork* pAwdObj);
typedef somTP_AWDSuspendAid_withBase *somTD_AWDSuspendAid_withBase;
typedef void   SOMLINK somTP_AWDSuspendAid_withBaseDateStatusandCode(AWDSuspendAid *somSelf, Environment *ev,
		somInitCtrl* ctrl,
		AWDWork* pAwdObj,
		string activateDate,
		string activateStatus,
		string suspendCode);
typedef somTP_AWDSuspendAid_withBaseDateStatusandCode *somTD_AWDSuspendAid_withBaseDateStatusandCode;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef void   SOMLINK somTP_AWDSuspendAid_setReceiver(AWDSuspendAid *somSelf, Environment *ev,
		AWDBase* pAwdObj);
typedef somTP_AWDSuspendAid_setReceiver *somTD_AWDSuspendAid_setReceiver;
typedef AWDBase*   SOMLINK somTP_AWDSuspendAid_receiver(AWDSuspendAid *somSelf, Environment *ev);
typedef somTP_AWDSuspendAid_receiver *somTD_AWDSuspendAid_receiver;
typedef void   SOMLINK somTP_AWDSuspendAid_somDefaultInit(AWDSuspendAid *somSelf,
		somInitCtrl* ctrl);
typedef somTP_AWDSuspendAid_somDefaultInit *somTD_AWDSuspendAid_somDefaultInit;
typedef void   SOMLINK somTP_AWDSuspendAid_somDestruct(AWDSuspendAid *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef somTP_AWDSuspendAid_somDestruct *somTD_AWDSuspendAid_somDestruct;
typedef void   SOMLINK somTP_AWDSuspendAid_somDefaultCopyInit(AWDSuspendAid *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDSuspendAid_somDefaultCopyInit *somTD_AWDSuspendAid_somDefaultCopyInit;
typedef AWDSuspendAid*   SOMLINK somTP_AWDSuspendAid_somDefaultAssign(AWDSuspendAid *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDSuspendAid_somDefaultAssign *somTD_AWDSuspendAid_somDefaultAssign;
typedef void   SOMLINK somTP_AWDSuspendAid_somDefaultConstCopyInit(AWDSuspendAid *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDSuspendAid_somDefaultConstCopyInit *somTD_AWDSuspendAid_somDefaultConstCopyInit;
typedef void   SOMLINK somTP_AWDSuspendAid_somDefaultVCopyInit(AWDSuspendAid *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDSuspendAid_somDefaultVCopyInit *somTD_AWDSuspendAid_somDefaultVCopyInit;
typedef void   SOMLINK somTP_AWDSuspendAid_somDefaultConstVCopyInit(AWDSuspendAid *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDSuspendAid_somDefaultConstVCopyInit *somTD_AWDSuspendAid_somDefaultConstVCopyInit;
typedef AWDSuspendAid*   SOMLINK somTP_AWDSuspendAid_somDefaultConstAssign(AWDSuspendAid *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDSuspendAid_somDefaultConstAssign *somTD_AWDSuspendAid_somDefaultConstAssign;
typedef AWDSuspendAid*   SOMLINK somTP_AWDSuspendAid_somDefaultVAssign(AWDSuspendAid *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDSuspendAid_somDefaultVAssign *somTD_AWDSuspendAid_somDefaultVAssign;
typedef AWDSuspendAid*   SOMLINK somTP_AWDSuspendAid_somDefaultConstVAssign(AWDSuspendAid *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef somTP_AWDSuspendAid_somDefaultConstVAssign *somTD_AWDSuspendAid_somDefaultConstVAssign;
typedef void   SOMLINK somTP_AWDSuspendAid_somInit(AWDSuspendAid *somSelf);
typedef somTP_AWDSuspendAid_somInit *somTD_AWDSuspendAid_somInit;
typedef void   SOMLINK somTP_AWDSuspendAid_somFree(AWDSuspendAid *somSelf);
typedef somTP_AWDSuspendAid_somFree *somTD_AWDSuspendAid_somFree;
typedef void   SOMLINK somTP_AWDSuspendAid_somUninit(AWDSuspendAid *somSelf);
typedef somTP_AWDSuspendAid_somUninit *somTD_AWDSuspendAid_somUninit;
typedef SOMClass*   SOMLINK somTP_AWDSuspendAid_somGetClass(AWDSuspendAid *somSelf);
typedef somTP_AWDSuspendAid_somGetClass *somTD_AWDSuspendAid_somGetClass;
typedef string   SOMLINK somTP_AWDSuspendAid_somGetClassName(AWDSuspendAid *somSelf);
typedef somTP_AWDSuspendAid_somGetClassName *somTD_AWDSuspendAid_somGetClassName;
typedef long   SOMLINK somTP_AWDSuspendAid_somGetSize(AWDSuspendAid *somSelf);
typedef somTP_AWDSuspendAid_somGetSize *somTD_AWDSuspendAid_somGetSize;
typedef boolean   SOMLINK somTP_AWDSuspendAid_somIsA(AWDSuspendAid *somSelf,
		SOMClass* aClassObj);
typedef somTP_AWDSuspendAid_somIsA *somTD_AWDSuspendAid_somIsA;
typedef boolean   SOMLINK somTP_AWDSuspendAid_somIsInstanceOf(AWDSuspendAid *somSelf,
		SOMClass* aClassObj);
typedef somTP_AWDSuspendAid_somIsInstanceOf *somTD_AWDSuspendAid_somIsInstanceOf;
typedef boolean   SOMLINK somTP_AWDSuspendAid_somRespondsTo(AWDSuspendAid *somSelf,
		somId mId);
typedef somTP_AWDSuspendAid_somRespondsTo *somTD_AWDSuspendAid_somRespondsTo;
typedef boolean   SOMLINK somTP_AWDSuspendAid_somDispatch(AWDSuspendAid *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_AWDSuspendAid_somDispatch *somTD_AWDSuspendAid_somDispatch;
typedef boolean   SOMLINK somTP_AWDSuspendAid_somClassDispatch(AWDSuspendAid *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef somTP_AWDSuspendAid_somClassDispatch *somTD_AWDSuspendAid_somClassDispatch;
typedef boolean   SOMLINK somTP_AWDSuspendAid_somCastObj(AWDSuspendAid *somSelf,
		SOMClass* cls);
typedef somTP_AWDSuspendAid_somCastObj *somTD_AWDSuspendAid_somCastObj;
typedef boolean   SOMLINK somTP_AWDSuspendAid_somResetObj(AWDSuspendAid *somSelf);
typedef somTP_AWDSuspendAid_somResetObj *somTD_AWDSuspendAid_somResetObj;
typedef SOMObject*   SOMLINK somTP_AWDSuspendAid_somPrintSelf(AWDSuspendAid *somSelf);
typedef somTP_AWDSuspendAid_somPrintSelf *somTD_AWDSuspendAid_somPrintSelf;
typedef void   SOMLINK somTP_AWDSuspendAid_somDumpSelf(AWDSuspendAid *somSelf,
		long level);
typedef somTP_AWDSuspendAid_somDumpSelf *somTD_AWDSuspendAid_somDumpSelf;
typedef void   SOMLINK somTP_AWDSuspendAid_somDumpSelfInt(AWDSuspendAid *somSelf,
		long level);
typedef somTP_AWDSuspendAid_somDumpSelfInt *somTD_AWDSuspendAid_somDumpSelfInt;
}

#endif /* AWDSuspendAid_API */


/*
 * -- This emitter believes that method thunks are unavailable,
 * -- so somResolve will be called.
 */
#undef somresolve_
#define somresolve_(obj,mToken) (somResolve(obj,mToken))

/*
 * -- The C++ Wrapper Class for AWDSuspendAid
 */
class AWDSuspendAid : public BaseServiceAid
{
public:

// AWDSuspendAid::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_AWDSuspendAid) AWDSuspendAidNewClass(AWDSuspendAid_MajorVersion,AWDSuspendAid_MinorVersion);
   return (void*)
      SOM_Resolve(_AWDSuspendAid,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_AWDSuspendAid));
}

// AWDSuspendAid::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

AWDSuspendAid()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDSuspendAidCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

AWDSuspendAid(AWDSuspendAid* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDSuspendAidCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

AWDSuspendAid(const AWDSuspendAid* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (AWDSuspendAidCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

AWDSuspendAid(Environment *ev,AWDWork* pAwdObj) 
{
   withBase(ev,0,pAwdObj);
}

AWDSuspendAid(Environment *ev,AWDWork* pAwdObj,string activateDate,string activateStatus,string suspendCode) 
{
   withBaseDateStatusandCode(ev,0,pAwdObj,activateDate,activateStatus,suspendCode);
}


/* method: activate */
boolean   activate(Environment *ev)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,activate)
	(this, ev);
}


/* method: activateStatus */
string   activateStatus(Environment *ev)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,activateStatus)
	(this, ev);
}


/* method: activateDateTime */
string   activateDateTime(Environment *ev)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,activateDateTime)
	(this, ev);
}


/* method: initialize */
void   initialize(Environment *ev)
{
   SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,initialize)
	(this, ev);
}


/* method: lastSuspendDays */
unsigned short   lastSuspendDays(Environment *ev)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,lastSuspendDays)
	(this, ev);
}


/* method: listActivateStatus */
SOMList*   listActivateStatus(Environment *ev)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,listActivateStatus)
	(this, ev);
}


/* method: listSuspendCodes */
SOMList*   listSuspendCodes(Environment *ev)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,listSuspendCodes)
	(this, ev);
}


/* method: maxSuspendDays */
unsigned short   maxSuspendDays(Environment *ev)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,maxSuspendDays)
	(this, ev);
}


/* method: setLastSuspendDays */
boolean   setLastSuspendDays(Environment *ev,
		unsigned short suspendDays)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,setLastSuspendDays)
	(this, ev,suspendDays);
}


/* method: setActivateDateTime */
boolean   setActivateDateTime(Environment *ev,
		string activateDataTime)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,setActivateDateTime)
	(this, ev,activateDataTime);
}


/* method: setActivateStatus */
boolean   setActivateStatus(Environment *ev,
		string activateStatus)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,setActivateStatus)
	(this, ev,activateStatus);
}


/* method: setSuspendCode */
boolean   setSuspendCode(Environment *ev,
		string suspendCode)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,setSuspendCode)
	(this, ev,suspendCode);
}


/* method: suspend */
boolean   suspend(Environment *ev)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,suspend)
	(this, ev);
}


/* method: suspendCode */
string   suspendCode(Environment *ev)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,suspendCode)
	(this, ev);
}


/* method: unsuspend */
boolean   unsuspend(Environment *ev)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,unsuspend)
	(this, ev);
}


/* method: update */
boolean   update(Environment *ev)
{
   return SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,update)
	(this, ev);
}


/* initializer method: withBase */
void   withBase(Environment *ev,
		somInitCtrl* ctrl,
		AWDWork* pAwdObj)
{
   SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,withBase)
	(this, ev,ctrl,pAwdObj);
}


/* initializer method: withBaseDateStatusandCode */
void   withBaseDateStatusandCode(Environment *ev,
		somInitCtrl* ctrl,
		AWDWork* pAwdObj,
		string activateDate,
		string activateStatus,
		string suspendCode)
{
   SOM_ResolveD(this,AWDSuspendAid,AWDSuspendAid,withBaseDateStatusandCode)
	(this, ev,ctrl,pAwdObj,activateDate,activateStatus,suspendCode);
}


/*
 * Reintroduce inherited methods
 */

/* method: setReceiver */
void   setReceiver(Environment *ev,
		AWDBase* pAwdObj)
{
   SOM_ResolveD(this,AWDSuspendAid,BaseServiceAid,setReceiver)
	(this, ev,pAwdObj);
}


/* method: receiver */
AWDBase*   receiver(Environment *ev)
{
   return SOM_ResolveD(this,AWDSuspendAid,BaseServiceAid,receiver)
	(this, ev);
}


/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* initializer method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
AWDSuspendAid*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* initializer method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
AWDSuspendAid*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
AWDSuspendAid*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
AWDSuspendAid*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,AWDSuspendAid,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,AWDSuspendAid,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,AWDSuspendAid,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   AWDSuspendAid_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   AWDSuspendAid_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,AWDSuspendAid,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somResetObj)
	(this);
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,AWDSuspendAid,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,AWDSuspendAid,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* AWDSuspendAid */



#endif       /* SOM_AWDSuspendAid_xh */
