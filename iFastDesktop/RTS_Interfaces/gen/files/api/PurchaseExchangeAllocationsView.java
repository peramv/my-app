
// **** GENERATED FILE, PLEASE DO NOT MODIFY ******
package com.ifds.iFast.api;

import java.util.Date;
import java.io.Serializable;
import java.io.UnsupportedEncodingException;
import java.text.ParseException;
import com.ifds.rts.*;

/**
 * Shareholder summary information view.
 * For additional view information see <A HREF="../../../../viewspecs/PurchaseExchangeAllocations.doc">PurchaseExchangeAllocations.doc</A>.
 * 
 * ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
 * ViewsGenerator: Generated on : Tuesday, May 03, 2016 16:18:43
 */
public class PurchaseExchangeAllocationsView extends IFastView implements Serializable
{

   /**
    * Update status member variable.
    */
   private Boolean _UpdateStatus = null;
            
   /**
    * Back Office Date member variable.
    */
   private Date _BODate = null;
            
   /**
    * Back Office Time member variable.
    */
   private String _BOTime = null;
            
   /**
    * Back Office Time Zone member variable.
    */
   private String _BOZone = null;
            
   /**
    * Financial Institution Date member variable.
    */
   private Date _FIDate = null;
            
   /**
    * Financial Institution Time member variable.
    */
   private String _FITime = null;
            
   /**
    * Financial Institution Time Zone member variable.
    */
   private String _FIZone = null;
            
   /**
    * Confirmation Number member variable.
    */
   private String _ConfNum = null;
            
   /**
    * Flag that indicates if last cycle run status is 'Active' member variable.
    */
   private Boolean _TradingAvailable = null;
            
  
   /**
    * Constructs the PurchaseExchangeAllocationsView object.
    * 
    */
   public PurchaseExchangeAllocationsView()
   {
      super ( new PurchaseExchangeAllocationsRequest() );
   }

   /**
    * Constructs the PurchaseExchangeAllocationsView object with the given host encoding.
    * 
    * @param hostEncoding
    *               character encoding for sending/receiving host data
    */
   public PurchaseExchangeAllocationsView( String hostEncoding )
   {
      super ( new PurchaseExchangeAllocationsRequest( hostEncoding ) );
   }

   /**
    * Gets the PurchaseExchangeAllocationsRequest object associated with this view. Data is set
    * into this object before calling any of this view's receive
    * methods. An attempt to set request fields after the first receive will
    * result in a runtime exception.
    * 
    * @return The PurchaseExchangeAllocationsRequest object.
    */
   public final PurchaseExchangeAllocationsRequest getRequest()
   {
      return (PurchaseExchangeAllocationsRequest)getIFastRequest();
   }

   /**
    * Gets the Update status field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Update status or null.
    */
   public final Boolean getUpdateStatus()
   {
      return _UpdateStatus;
   }
    
   /**
    * Gets the Update status field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Update status or the specified default value.
    */
   public final boolean getUpdateStatus( boolean defaultValue )
   {
      return _UpdateStatus == null ? defaultValue : _UpdateStatus.booleanValue();
   }
    
   /**
    * Gets the Back Office Date field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Back Office Date or null.
    */
   public final Date getBODate()
   {
      return _BODate;
   }
    
   /**
    * Gets the Back Office Date field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Back Office Date or the specified default value.
    */
   public final Date getBODate( Date defaultValue )
   {
      return _BODate == null ? defaultValue : _BODate;
   }
    
   /**
    * Gets the Back Office Time field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Back Office Time or null.
    */
   public final String getBOTime()
   {
      return _BOTime;
   }
    
   /**
    * Gets the Back Office Time field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Back Office Time or the specified default value.
    */
   public final String getBOTime( String defaultValue )
   {
      return _BOTime == null ? defaultValue : _BOTime;
   }
    
   /**
    * Gets the Back Office Time Zone field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Back Office Time Zone or null.
    */
   public final String getBOZone()
   {
      return _BOZone;
   }
    
   /**
    * Gets the Back Office Time Zone field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Back Office Time Zone or the specified default value.
    */
   public final String getBOZone( String defaultValue )
   {
      return _BOZone == null ? defaultValue : _BOZone;
   }
    
   /**
    * Gets the Financial Institution Date field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Financial Institution Date or null.
    */
   public final Date getFIDate()
   {
      return _FIDate;
   }
    
   /**
    * Gets the Financial Institution Date field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Financial Institution Date or the specified default value.
    */
   public final Date getFIDate( Date defaultValue )
   {
      return _FIDate == null ? defaultValue : _FIDate;
   }
    
   /**
    * Gets the Financial Institution Time field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Financial Institution Time or null.
    */
   public final String getFITime()
   {
      return _FITime;
   }
    
   /**
    * Gets the Financial Institution Time field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Financial Institution Time or the specified default value.
    */
   public final String getFITime( String defaultValue )
   {
      return _FITime == null ? defaultValue : _FITime;
   }
    
   /**
    * Gets the Financial Institution Time Zone field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Financial Institution Time Zone or null.
    */
   public final String getFIZone()
   {
      return _FIZone;
   }
    
   /**
    * Gets the Financial Institution Time Zone field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Financial Institution Time Zone or the specified default value.
    */
   public final String getFIZone( String defaultValue )
   {
      return _FIZone == null ? defaultValue : _FIZone;
   }
    
   /**
    * Gets the Confirmation Number field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Confirmation Number or null.
    */
   public final String getConfNum()
   {
      return _ConfNum;
   }
    
   /**
    * Gets the Confirmation Number field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Confirmation Number or the specified default value.
    */
   public final String getConfNum( String defaultValue )
   {
      return _ConfNum == null ? defaultValue : _ConfNum;
   }
    
   /**
    * Gets the Flag that indicates if last cycle run status is 'Active' field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag that indicates if last cycle run status is 'Active' or null.
    */
   public final Boolean getTradingAvailable()
   {
      return _TradingAvailable;
   }
    
   /**
    * Gets the Flag that indicates if last cycle run status is 'Active' field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag that indicates if last cycle run status is 'Active' or the specified default value.
    */
   public final boolean getTradingAvailable( boolean defaultValue )
   {
      return _TradingAvailable == null ? defaultValue : _TradingAvailable.booleanValue();
   }
    
   /**
    * Implements the abstract base method to decode
    * the host formatted response.
    * 
    * @param response Host formatted response object.
    * @exception ParseException
    */
   protected void decodeFields( RTSResponseDecodeBuffer responseBuffer ) throws ParseException, UnsupportedEncodingException
   {
      
      // single-record section
      _UpdateStatus = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _BODate = responseBuffer.decodeDate(responseBuffer.getNextField());
      _BOTime = responseBuffer.decodeString(responseBuffer.getNextField());
      _BOZone = responseBuffer.decodeString(responseBuffer.getNextField());
      _FIDate = responseBuffer.decodeDate(responseBuffer.getNextField());
      _FITime = responseBuffer.decodeString(responseBuffer.getNextField());
      _FIZone = responseBuffer.decodeString(responseBuffer.getNextField());
      _ConfNum = responseBuffer.decodeString(responseBuffer.getNextField());
      _TradingAvailable = responseBuffer.decodeBoolean(responseBuffer.getNextField());


   }

}

