
// **** GENERATED FILE, PLEASE DO NOT MODIFY ******
package com.ifds.iFast.api;

import java.util.Date;
import java.io.Serializable;
import java.io.UnsupportedEncodingException;
import java.text.ParseException;
import com.ifds.rts.*;

/**
 * Shareholder summary information view.
 * For additional view information see <A HREF="../../../../viewspecs/SystemConfiguration2.doc">SystemConfiguration2.doc</A>.
 * 
 * ViewsGenerator: This file was generated by ViewsGenerator - Version 1.0.0.0
 * ViewsGenerator: Generated on : Tuesday, October 18, 2016 22:42:52
 */
public class SystemConfiguration2View extends IFastView implements Serializable
{

   /**
    * Flag which indicates if multiple PAC/SWP with same Deff and Account Details will be allowed member variable.
    */
   private Boolean _AllowMultiplePacSwp = null;
            
   /**
    * SWP Edit Level member variable.
    */
   private String _SWPEditLevel = null;
            
   /**
    * SWP Minimum member variable.
    */
   private String _SWPMin = null;
            
   /**
    * SWP Hard Edit member variable.
    */
   private Boolean _SWPHardEdit = null;
            
   /**
    * DSC Override member variable.
    */
   private Boolean _DSCOverride = null;
            
   /**
    * DAB screens member variable.
    */
   private Boolean _DabScreen = null;
            
   /**
    * Deposit Id 2 member variable.
    */
   private Boolean _DepositID2 = null;
            
   /**
    * Display Client Trade ID member variable.
    */
   private Boolean _DispClientTradeID = null;
            
   /**
    * Default Bank Type member variable.
    */
   private String _DefaultBankType = null;
            
   /**
    * Display Management Stype and Discretionary member variable.
    */
   private Boolean _DispManageStyle = null;
            
   /**
    * Is Default Bank Type updatable member variable.
    */
   private Boolean _DefaultBankUpd = null;
            
   /**
    * Access split com at purchase add mode member variable.
    */
   private Boolean _SplitOnAddPur = null;
            
   /**
    * Access split com at Purchase modify mode member variable.
    */
   private Boolean _SplitOnModPur = null;
            
   /**
    * Access split com on user request only member variable.
    */
   private Boolean _SplitOnReqOnly = null;
            
   /**
    * Create Split Comm Automatidally member variable.
    */
   private Boolean _SpltComBankDeflt = null;
            
   /**
    * Validate split com member variable.
    */
   private Boolean _ValSplCom = null;
            
   /**
    * Save Plan Client member variable.
    */
   private Boolean _SavePlanClient = null;
            
   /**
    * PAC Last Run Date member variable.
    */
   private Date _PACLastRunDate = null;
            
   /**
    * SWP Last Run Date member variable.
    */
   private Date _SWPLastRunDate = null;
            
   /**
    * Manual Settlement Dates member variable.
    */
   private Boolean _ManualSettleDates = null;
            
   /**
    * Savings Plan in ACHProcessor Controls member variable.
    */
   private Boolean _ACHSavingsPlan = null;
            
   /**
    * PAC in ACHProcessor Controls member variable.
    */
   private Boolean _ACHPAC = null;
            
   /**
    * Foreign Content Functionality member variable.
    */
   private Boolean _ForeignCont = null;
            
   /**
    * Allow Unit Purchase member variable.
    */
   private Boolean _AllowUnitPurch = null;
            
   /**
    * Allow Multi-Currency EFT member variable.
    */
   private Boolean _AllowMultiCurrEFT = null;
            
   /**
    * Disallowed PayTypes member variable.
    */
   private String _DisallowedPayTypes = null;
            
   /**
    * Allow Cash Distribution member variable.
    */
   private Boolean _AllowCashDistrib = null;
            
   /**
    * PAC Calendar member variable.
    */
   private Boolean _PACCalendar = null;
            
   /**
    * Product Group Code member variable.
    */
   private Boolean _ProductGroupCode = null;
            
   /**
    * Trade Date Lag member variable.
    */
   private Boolean _TradeDateLag = null;
            
   /**
    * TradeDateLagExch member variable.
    */
   private Boolean _TradeDateLagExch = null;
            
   /**
    * Foreign Content Rebalancing member variable.
    */
   private Integer _FCRebalancing = null;
            
   /**
    * Split Commission Fee Definitions member variable.
    */
   private String _CommFeeCodes = null;
            
   /**
    * Source/ Target Switch Method member variable.
    */
   private Boolean _CalcSwitch = null;
            
   /**
    * Miscellaneous Fee Definitions member variable.
    */
   private String _MiscFeeDefn = null;
            
   /**
    * Account Level FIFO (Feature) member variable.
    */
   private Boolean _AcctLvlFIFO = null;
            
   /**
    * Company Code Flag - Y/N member variable.
    */
   private Boolean _CompCodeFlag = null;
            
   /**
    * Price Process at FundGroup member variable.
    */
   private Boolean _PriceProcAtFndGrp = null;
            
   /**
    * Management Fee Display member variable.
    */
   private Integer _MgmtFeeDisplay = null;
            
   /**
    * LLP Withdrawal Rules Active member variable.
    */
   private Boolean _LLPWithdrawalRules = null;
            
   /**
    * RRIF 'FROM' Allocations member variable.
    */
   private Boolean _RRIFFromAlloc = null;
            
   /**
    * ISO Compliant y/n member variable.
    */
   private Boolean _ISOCompliant = null;
            
   /**
    * ReviewDate Flag y/n member variable.
    */
   private Boolean _ReviewDateFlag = null;
            
   /**
    * Override Allowed on Review Date y/n member variable.
    */
   private Boolean _OverrideReviewDate = null;
            
   /**
    * Review Month member variable.
    */
   private Integer _ReviewMnths = null;
            
   /**
    * Bank Charge member variable.
    */
   private String _BankCharge = null;
            
   /**
    * Consolidate EFT member variable.
    */
   private String _ConsolidEFT = null;
            
   /**
    * Bank File  Processor applicable for redemption member variable.
    */
   private Boolean _ACHRedem = null;
            
   /**
    * Value Date Applicable y/n member variable.
    */
   private Boolean _ValueDateApplic = null;
            
   /**
    * client preference for settlements member variable.
    */
   private Boolean _SettleAll = null;
            
   /**
    * Duplicate Alternate Account Allowed member variable.
    */
   private Boolean _DuplicateAltAcct = null;
            
   /**
    * Bank Detl Name member variable.
    */
   private Boolean _BankDetlName = null;
            
   /**
    * Delivery Method member variable.
    */
   private String _DeliveryMtds = null;
            
   /**
    * Delivery Option member variable.
    */
   private Boolean _DeliveryOptn = null;
            
   /**
    * Consent to Waive Paper member variable.
    */
   private Boolean _CnsntToWaive = null;
            
   /**
    * Override Percent Free member variable.
    */
   private Integer _OverridePrcntFree = null;
            
   /**
    * Override Rebalance Threshold member variable.
    */
   private Boolean _OvrdRBLThrshld = null;
            
   /**
    * Common Currency for rebalancing member variable.
    */
   private Boolean _CommonCurrency = null;
            
   /**
    * Rebalance Prcnt Default member variable.
    */
   private String _RBLThrshldDflt = null;
            
   /**
    * Display RBL System Threshold member variable.
    */
   private Boolean _DispRBLSysThrshld = null;
            
   /**
    * Address Format member variable.
    */
   private String _ShrAddressFormat = null;
            
   /**
    * flag indicating if FundLimitOverride is applicable for env member variable.
    */
   private Boolean _FundLimitOverride = null;
            
   /**
    * Restrict AMS-Broker member variable.
    */
   private Boolean _RestrictAMSBroker = null;
            
   /**
    * SWIFT/Vestima/ FundSettle participants Y/N member variable.
    */
   private Boolean _NetworkOrder = null;
            
   /**
    * Early Redemption Fees applicable member variable.
    */
   private Boolean _EarlyPWFeeElig = null;
            
   /**
    * Short Term Fees Applicable member variable.
    */
   private Boolean _ShortTermTRFeeElig = null;
            
   /**
    * Allow mailing assignments by fund group/product member variable.
    */
   private Boolean _MailingByFundGroup = null;
            
   /**
    * Flag indicating if ATFee Applies member variable.
    */
   private Boolean _ATFeeApply = null;
            
   /**
    * Split Commissions Fee Override Type member variable.
    */
   private Integer _FeeOverrideType = null;
            
   /**
    * Summit Dealer XRef Lower Range member variable.
    */
   private String _SummDlrRangeLow = null;
            
   /**
    * Summit Dealer XRef Upper Range member variable.
    */
   private String _SummDlrRangeUpp = null;
            
   /**
    * RRIF 'TO' Allocations member variable.
    */
   private Boolean _RRIFToAlloc = null;
            
   /**
    * ACH Trailer Fee member variable.
    */
   private Boolean _ACHTrailerFee = null;
            
   /**
    * ACH Commission member variable.
    */
   private Boolean _ACHCommission = null;
            
   /**
    * ACH Dividend member variable.
    */
   private Boolean _ACHDividend = null;
            
   /**
    * Controls.Log1 for Controls.Name = member variable.
    */
   private Boolean _KYCAccountLevel = null;
            
   /**
    * Controls.Log1 for Controls.Name = ""Returned Mail Flag Automation member variable.
    */
   private Boolean _AllowRetMailAutomation = null;
            
   /**
    * System Feature  for  Code = NoWithTax (existing feature) member variable.
    */
   private Boolean _NoWithTax = null;
            
   /**
    * System Feature  for  Code = TaxOnRRIFRed (existing feature) member variable.
    */
   private Boolean _TaxOnRRIFRed = null;
            
   /**
    * Controls.log1 for Controls.Name = WithTaxOverride (exist controls) member variable.
    */
   private Boolean _WithTaxOverride = null;
            
   /**
    * Controls.log2 for Controls.Name = WithTaxOverride (exist controls) member variable.
    */
   private Boolean _AutomaticAll = null;
            
   /**
    * Controls.Char2 for Controls.Name = 'TaxWithHeld  PW' (exist controls) member variable.
    */
   private String _RIFTaxableRedCode = null;
            
   /**
    * Controls.Char2  for Controls.Name = FullRedCode (new controls) member variable.
    */
   private String _FullRedCode = null;
            
   /**
    * Controls.Log1 for Controls.Name = ManyToManyTranfer member variable.
    */
   private Boolean _ManyToManyTR = null;
            
   /**
    * Controls.Log1 for Controls.Name = SalutationFormat member variable.
    */
   private Boolean _SalutationFormat = null;
            
   /**
    * DefaultBankInstCode member variable.
    */
   private String _DefaultBankInstCode = null;
            
   /**
    * List indicating which screens will popup uring NASU flow member variable.
    */
   private String _NASUPopup = null;
            
   /**
    * AFBAgentCoCode member variable.
    */
   private String _AFBAgentCoCode = null;
            
   /**
    * Short Term Trading Fee Flag for NASU member variable.
    */
   private Boolean _STTRFeeFlag = null;
            
   /**
    * Charge Early Redemption Fee Flag for NASU member variable.
    */
   private Boolean _ERFeeFlag = null;
            
   /**
    * ADL Applicable member variable.
    */
   private Boolean _ADLApplicable = null;
            
   /**
    * ADL Transtype member variable.
    */
   private String _ADLTransType = null;
            
   /**
    * RedCode allowed in fund merger transaction for transfer at cost member variable.
    */
   private String _FndMrgRedCod = null;
            
   /**
    * NSCCCompliant member variable.
    */
   private Boolean _NSCCCompliant = null;
            
   /**
    * NSCCCurrencyList member variable.
    */
   private String _NSCCCurrencyList = null;
            
   /**
    * Redemption Codes to Exclude from STT/ER Fees member variable.
    */
   private String _ExclRedCodeList = null;
            
   /**
    * Entity Risk Level member variable.
    */
   private String _EntityRiskLevel = null;
            
   /**
    * Equalization Set-Up member variable.
    */
   private Boolean _EqualizationSetUp = null;
            
   /**
    * Registered Tax Types member variable.
    */
   private String _RegisteredTaxTypes = null;
            
   /**
    * Anti Dilution Calculation Method member variable.
    */
   private String _AntiDilutionCalc = null;
            
   /**
    * Unit Factor Codes member variable.
    */
   private String _UFactorCodes = null;
            
   /**
    * ACH Purchase member variable.
    */
   private Boolean _ACHPurch = null;
            
   /**
    * ACH SWP member variable.
    */
   private Boolean _ACHSWP = null;
            
   /**
    * ACH Admin Fee member variable.
    */
   private Boolean _ACHAdminFee = null;
            
   /**
    * Default Clearing ID member variable.
    */
   private String _ClearingIdDefault = null;
            
   /**
    * Error Account Number member variable.
    */
   private String _ErrorAcctNum = null;
            
   /**
    * Fund Broker Applicable member variable.
    */
   private Boolean _FundBrokerApplicable = null;
            
   /**
    * Valid Network Type member variable.
    */
   private String _ValidNetworkType = null;
            
   /**
    * Network Type Update member variable.
    */
   private Boolean _NetworkTypeUpd = null;
            
   /**
    * indicates if env supports EUSD member variable.
    */
   private Boolean _EUSDParticip = null;
            
   /**
    * Default EUSD Option member variable.
    */
   private String _DefEUSDOption = null;
            
   /**
    * Verify Cancelled Trade member variable.
    */
   private Boolean _VerCancTrd = null;
            
   /**
    * Acct Cat Negative balance member variable.
    */
   private String _ActCatNegBal = null;
            
   /**
    * Acct Cat Wire Settlements member variable.
    */
   private String _ActCatWireSett = null;
            
   /**
    * API Trade Default Reason member variable.
    */
   private String _BDTradeReason = null;
            
   /**
    * API Trade Default Accountability member variable.
    */
   private String _BDTradeAcctable = null;
            
   /**
    * OPCConfirmsBrokerScreen member variable.
    */
   private Boolean _OPCConfirmsBrokerScreen = null;
            
   /**
    * Jumbo Pricing Applicable member variable.
    */
   private Boolean _JumboPriceApplicable = null;
            
   /**
    * Date basis for clawback calculation member variable.
    */
   private Integer _ClawbackBasedOnDate = null;
            
   /**
    * EUSD Option member variable.
    */
   private String _EUSDOption = null;
            
   /**
    * Suppress Inactive Funds member variable.
    */
   private Integer _SuppressInactiveFunds = null;
            
   /**
    * List of tax exemption levels for account member variable.
    */
   private String _ExemptLvlList = null;
            
   /**
    * Access Leve cat member variable.
    */
   private String _AccessLevelCat = null;
            
   /**
    * Indicates if Guaranteed Withdrawal Option contract is Supported for this client member variable.
    */
   private Boolean _GWOSupported = null;
            
   /**
    * Indicates if assignment screen for assignee is applicable for this environment member variable.
    */
   private Boolean _AssignmentScreen = null;
            
   /**
    * Address Line 1 member variable.
    */
   private String _Address1 = null;
            
   /**
    * Address Line 2 member variable.
    */
   private String _Address2 = null;
            
   /**
    * Address Line 3 member variable.
    */
   private String _Address3 = null;
            
   /**
    * Address Line 4 member variable.
    */
   private String _Address4 = null;
            
   /**
    * Address Line 5 member variable.
    */
   private String _Address5 = null;
            
   /**
    * Postal Code member variable.
    */
   private String _PostalCode = null;
            
   /**
    * Country Code member variable.
    */
   private String _CountryCode = null;
            
   /**
    * Client Name member variable.
    */
   private String _ClientName = null;
            
   /**
    * Redemption Payment Entity Exists member variable.
    */
   private Boolean _RedPayEntExist = null;
            
   /**
    * Is RRIF Unused Max Applicable member variable.
    */
   private Boolean _IsRRIFUnusedMaxApp = null;
            
   /**
    * Company Code member variable.
    */
   private String _CompanyCode = null;
            
   /**
    * Joint account default disposition member variable.
    */
   private String _JointDisposition = null;
            
   /**
    * Back Withholding Tax member variable.
    */
   private Boolean _BackWithholdTax = null;
            
   /**
    * List of trasaction Types for Consolidation member variable.
    */
   private String _ConsolTransType = null;
            
   /**
    * Flag indicating if consolidation applies member variable.
    */
   private String _Consolidation = null;
            
   /**
    * Default consolidation Types member variable.
    */
   private String _ConsolDefault = null;
            
   /**
    * Purchanse Netting indicator member variable.
    */
   private String _PurchNetting = null;
            
   /**
    * Default Order Type for Transfer member variable.
    */
   private Integer _DftOrdTypeTR = null;
            
   /**
    * Default Order Type for Exchange member variable.
    */
   private Integer _DftOrdTypeEX = null;
            
   /**
    * Flag indicating if order type defaults are applicable to dsk member variable.
    */
   private Boolean _DftOrdTypeApplicDSK = null;
            
   /**
    * CSS Stop SIN Match member variable.
    */
   private Boolean _CSSStopSINMatch = null;
            
   /**
    * AMS Frequency Override member variable.
    */
   private Boolean _AMSFreqOvrd = null;
            
   /**
    * Rebalance Day member variable.
    */
   private Integer _RebalanceDay = null;
            
   /**
    * Check Allowable Transfers member variable.
    */
   private Boolean _ChkAllowTfr = null;
            
   /**
    * KYC Level member variable.
    */
   private String _KYCLevel = null;
            
   /**
    * MFRCorporateFund member variable.
    */
   private Boolean _MFRCorporateFund = null;
            
   /**
    * Net of Fee Start Date member variable.
    */
   private Date _NetOfFeeStrDt = null;
            
   /**
    * Display Historical Unit ACB member variable.
    */
   private Boolean _DispHistUnitACB = null;
            
   /**
    * Dividend Dates member variable.
    */
   private Integer _DivDates = null;
            
   /**
    * Switch Bank member variable.
    */
   private Boolean _SwitchBank = null;
            
   /**
    * Check Closed Batch member variable.
    */
   private Boolean _CheckClosedBatch = null;
            
   /**
    * Default Fee Option member variable.
    */
   private String _DefltFeeOption = null;
            
   /**
    * Online Entity Exception member variable.
    */
   private String _OnLineEntExcept = null;
            
   /**
    * Indicate if the environment supports the additional rounding methods member variable.
    */
   private Boolean _AdlRndMethodAllow = null;
            
   /**
    * Rounding Method at Environment Level member variable.
    */
   private String _DfltRoundMethod = null;
            
   /**
    * Account Regulation Rule Exists member variable.
    */
   private Boolean _AcctRegRuleExists = null;
            
   /**
    * Death Claim Rule Exists member variable.
    */
   private Boolean _DeathClaimRuleExists = null;
            
   /**
    * all tax types with TaxTypes.PlanType = 'UNREG' member variable.
    */
   private String _UnregPlan = null;
            
   /**
    *  member variable.
    */
   private String _NonregLike = null;
            
   /**
    * all tax types with TaxTypes.PlanType = 'RIF' and TaxTypes.SelfDirected = No member variable.
    */
   private String _IntRIFPlan = null;
            
   /**
    * all tax types with TaxTypes.PlanType = 'RIF' and TaxTypes.SelfDirected = Yes member variable.
    */
   private String _ExtRIFPlan = null;
            
   /**
    * all tax types with TaxTypes.PlanType = 'RIF' member variable.
    */
   private String _AllRIFPlan = null;
            
   /**
    * all tax types with TaxTypes.PlanType = 'LIRA' and TaxTypes.SelfDirected = No member variable.
    */
   private String _IntLIRAPlan = null;
            
   /**
    * all tax types with TaxTypes.PlanType = 'LIRA' member variable.
    */
   private String _AllLIRAPlan = null;
            
   /**
    * all tax types with TaxTypes.PlanType = 'RESP' and TaxTypes.SelfDirected = No member variable.
    */
   private String _IntRESP = null;
            
   /**
    * all tax types with TaxTypes.PlanType = 'RSP' and TaxTypes.SelfDirected = No member variable.
    */
   private String _IntRSP = null;
            
   /**
    * Flag indicates if changing country for address should be applied to provres and tax juris at shareholder level member variable.
    */
   private Boolean _TaxJurisUpdateOpt = null;
            
   /**
    * Flag indicates if alert box should be pop up for the returned mail or stale dated cheque member variable.
    */
   private Boolean _RetMailOrStlDtChqAlert = null;
            
   /**
    * List of death claim redemption code that should allow transfer regardless of Valid Transfer set up in the Tax Type configuration member variable.
    */
   private String _DeathClaimRedCodes = null;
            
   /**
    *  member variable.
    */
   private String _IntLockInPlan = null;
            
   /**
    * Allowed Tax Type member variable.
    */
   private String _AlwdTaxType = null;
            
   /**
    * LIRA plans (C and CR) member variable.
    */
   private String _LIRAPlan = null;
            
   /**
    * Internal LIF plans (B and BR) member variable.
    */
   private String _IntLIF = null;
            
   /**
    * Flag indicating if FEL commission is applicable for env member variable.
    */
   private Boolean _FELCommOnGrant = null;
            
   /**
    * Comma delimited List of all allocation types required broker/fund eligibility validation member variable.
    */
   private String _AllocTypeForValidation = null;
            
   /**
    * TFSA Tax Types member variable.
    */
   private String _TFSATaxType = null;
            
   /**
    * Automatic Batch member variable.
    */
   private Integer _AutoBatch = null;
            
   /**
    * Flag indicating if Closed Country is applicable applied for client or not member variable.
    */
   private Boolean _ClosedCountryApplicable = null;
            
   /**
    * Flag indicating if Lookup button will be enabled in the address screen member variable.
    */
   private Boolean _DskPCLookEnb = null;
            
   /**
    * Flag indicates if direct deposit EFT redemption is applicable member variable.
    */
   private Boolean _DirectDepositBankApplicable = null;
            
   /**
    * Version Label member variable.
    */
   private String _VersionLabel = null;
            
   /**
    * Company URL member variable.
    */
   private String _CompanyURL = null;
            
   /**
    * Indicates if environment support multi settlement locations member variable.
    */
   private Integer _SettleLocOpt = null;
            
   /**
    * Flag indicates if Traded Unit Functionality is active member variable.
    */
   private Boolean _TUPActive = null;
            
   /**
    * RESP Age Limits member variable.
    */
   private String _TerminationAgeBeforeDeff = null;
            
   /**
    * RESP Age Limits member variable.
    */
   private String _TerminationAgeAfterDeff = null;
            
   /**
    * RESP Age Limits member variable.
    */
   private Date _RESPAgeLimitsDeff = null;
            
   /**
    * Guarantee Guard On member variable.
    */
   private Boolean _GuaranteeGuardOn = null;
            
   /**
    * Flag indicates if new Trailer Fee  Architecture is active member variable.
    */
   private Boolean _TrailerFeeArch = null;
            
   /**
    *  member variable.
    */
   private Boolean _AllowChqChange = null;
            
   /**
    * List of TFSA Account Category Codes member variable.
    */
   private String _TFSAAcctCatCode = null;
            
   /**
    * List of RRSP Account Category Codes member variable.
    */
   private String _RRSPAcctCatCode = null;
            
   /**
    * Network Response Required Applicable member variable.
    */
   private Boolean _NetworkRespReqApplicable = null;
            
   /**
    * Network ID for Amount Trade member variable.
    */
   private String _NetworkIDForAmountTrade = null;
            
   /**
    * Flag indicates that EFT consolidation is allowed for all transaction types member variable.
    */
   private Boolean _AllEFTConsolActive = null;
            
   /**
    * The Type of Bulk Back Date member variable.
    */
   private Integer _BulkBackDate = null;
            
   /**
    *  member variable.
    */
   private Boolean _AllEFTConsolShLv = null;
            
   /**
    * Flag to indicate the ACB offset unit value member variable.
    */
   private Boolean _ACBUnitOffset = null;
            
   /**
    * EAP Earning Code member variable.
    */
   private String _EAPEarningCodes = null;
            
   /**
    * flag to indicate that the environment is IWT or not member variable.
    */
   private Boolean _IrishWithTax = null;
            
   /**
    * flag to indicate the tax jurisdiction list for IWT member variable.
    */
   private String _IWTTaxJurisList = null;
            
   /**
    * NonReceipt Applicable member variable.
    */
   private Boolean _NonReceiptApplicable = null;
            
   /**
    * Flag indicates if new functionality is active member variable.
    */
   private Boolean _GuaranteeCalcByRules = null;
            
   /**
    * Flag indicates Portfolio required member variable.
    */
   private Boolean _PorfolioIsRequried = null;
            
   /**
    * Source of Fund List member variable.
    */
   private String _SOFforSGMR = null;
            
   /**
    * Source of Fund member variable.
    */
   private String _SourceOfFund = null;
            
   /**
    * Statement Frequency Default member variable.
    */
   private String _StmtFreqDefault = null;
            
   /**
    * Statement Frequency List member variable.
    */
   private String _StmtFreqList = null;
            
   /**
    * RedCodes for Guarantee Override member variable.
    */
   private String _RedCodesOverride = null;
            
   /**
    * CPF Active Flag member variable.
    */
   private Boolean _CPFActiveFlag = null;
            
   /**
    * Non Financial Confirm Flag member variable.
    */
   private Boolean _PrintAcctConf = null;
            
   /**
    * Language Default member variable.
    */
   private String _LanguageDefault = null;
            
   /**
    * Employee Agent App member variable.
    */
   private Boolean _EmpAgentApp = null;
            
   /**
    *  member variable.
    */
   private Boolean _FundEliPSG = null;
            
   /**
    * FundSERV Broker validation member variable.
    */
   private Boolean _FundSERVValidation = null;
            
   /**
    * Change LTA Indicator member variable.
    */
   private Boolean _LTAIndicator = null;
            
   /**
    * Modify Comp Agent member variable.
    */
   private Boolean _ModifyCompAgent = null;
            
   /**
    * Source Of Fund App member variable.
    */
   private Boolean _SourceOfFundApp = null;
            
   /**
    * Refund RVCD member variable.
    */
   private String _RefundRVCD = null;
            
   /**
    * Fund Allocation member variable.
    */
   private Boolean _FundAllocation = null;
            
   /**
    * Non Financial Confirm Bank Detl member variable.
    */
   private Boolean _NFConfBnkDetl = null;
            
   /**
    * Refund Calculation member variable.
    */
   private Boolean _RefundCalc = null;
            
   /**
    * Dilution Calculation member variable.
    */
   private Boolean _DilutionCalc = null;
            
   /**
    * Source Of Fund that require RefNum member variable.
    */
   private String _SrcOfFundRefReq = null;
            
   /**
    * Source Of Fund for ED member variable.
    */
   private String _SrcOfFundED = null;
            
   /**
    * Source Of Fund for PW member variable.
    */
   private String _SrcOfFundPW = null;
            
   /**
    * Source Of Fund for GIC member variable.
    */
   private String _SrcOfFundGIC = null;
            
   /**
    * Source Of Fund for SWP member variable.
    */
   private String _SrcOfFundSWP = null;
            
   /**
    * Source Of Fund for RIF member variable.
    */
   private String _SrcOfFundRIF = null;
            
   /**
    * Tax Anniversary member variable.
    */
   private Boolean _TaxAnniversary = null;
            
   /**
    * Right To Cancel Default member variable.
    */
   private String _RightToCancelDefault = null;
            
   /**
    * Flag to indicate if FATCA is applicable member variable.
    */
   private String _FATCAApplicable = null;
            
   /**
    * RDR Environment Active member variable.
    */
   private String _RDREnvActive = null;
            
   /**
    * Applicable Fee Model Type member variable.
    */
   private String _ApplFeeModelType = null;
            
   /**
    * Auto Generate Fee Model Code member variable.
    */
   private Boolean _AutoGenFeeModelCode = null;
            
   /**
    * Auto Stop Fee Model Association member variable.
    */
   private Boolean _AutoStopAssociation = null;
            
   /**
    * List of Document Types member variable.
    */
   private String _ListDocType = null;
            
   /**
    * Flag to indicate if Invoice is applicable member variable.
    */
   private String _InvApplicable = null;
            
   /**
    * Flag to indicate if Report is applicable member variable.
    */
   private String _RptGrpApplicable = null;
            
   /**
    * Flag to indicate if Master Account is active member variable.
    */
   private Boolean _IsMstrAcctActive = null;
            
   /**
    * A comma delimeter list to return the attributes name. member variable.
    */
   private String _MstrActAttrbName = null;
            
   /**
    * A comma delimeter list to return the attributes value. member variable.
    */
   private String _MstrActAttrbValue = null;
            
   /**
    * Flag to indicate if Trailer Fee is applicable at Account Level for an environment. member variable.
    */
   private Boolean _IsTrlFeeAcctLevelApp = null;
            
   /**
    * Environment Reporting FFI Type member variable.
    */
   private String _ReportFFIType = null;
            
   /**
    * Fund Id List member variable.
    */
   private String _FundIdList = null;
            
   /**
    * Flag to indicate Return Mail Update member variable.
    */
   private Boolean _RetMailUpdt = null;
            
   /**
    * Flag to indicate if Bank update on PAC is allowed member variable.
    */
   private Boolean _AllowBankUpdOnPAC = null;
            
   /**
    * Flag if cash date is trade date for direct orders. member variable.
    */
   private Boolean _TransferCashDate = null;
            
   /**
    * Flag if cash date is original trade cash date for direct orders. member variable.
    */
   private Boolean _CancelRebookCashDate = null;
            
   /**
    * Flag if cash date is settle date for direct orders member variable.
    */
   private Boolean _CashDateAssign = null;
            
   /**
    * Flag if cash date is enabled for direct backdated trades for interest accrual funds and interest is from/to cash date for direct orders member variable.
    */
   private Boolean _CashDateOverride = null;
            
   /**
    * Distribution Instruction As Rate Option member variable.
    */
   private Boolean _DistribInstrAsRatioOpt = null;
            
   /**
    * Management Fee Payment Options Override member variable.
    */
   private String _MgmtFeePayOptOvd = null;
            
   /**
    * OPC Non financial Confirm Deff PAC member variable.
    */
   private Boolean _OPCNonFinConfDefPAC = null;
            
   /**
    * Show DilutionNSM Flag member variable.
    */
   private Boolean _ShowDilution = null;
            
   /**
    * Show ExSysDilPymtNSM Flag member variable.
    */
   private Boolean _ShowExSysDilPymtNSM = null;
            
   /**
    * CPFRefundApplicable member variable.
    */
   private Boolean _CPFRefundApplicable = null;
            
   /**
    * Multiple Pricing member variable.
    */
   private Boolean _MultiPrices = null;
            
   /**
    * Flag that indicate if SAGES is active in environment member variable.
    */
   private String _SAGESActive = null;
            
   /**
    * SAGES effective date member variable.
    */
   private Date _SAGESDeff = null;
            
   /**
    * Flag to indicate if Trailer Fee Rabate is applicable member variable.
    */
   private Boolean _TFRApplicable = null;
            
   /**
    * CIApplicable member variable.
    */
   private Boolean _CIApplicable = null;
            
   /**
    * SIApplicable member variable.
    */
   private Boolean _SIApplicable = null;
            
   /**
    * AdvisorFeeAppl member variable.
    */
   private Boolean _AdvisorFeeAppl = null;
            
   /**
    * EDoc Access Apply member variable.
    */
   private Boolean _EDocsAccessAppl = null;
            
   /**
    * AutoDefaultCancelGrant member variable.
    */
   private String _AutoDefaultCancelGrant = null;
            
   /**
    *  member variable.
    */
   private String _AggActive = null;
            
   /**
    *  member variable.
    */
   private String _AggActCatgry = null;
            
   /**
    *  member variable.
    */
   private String _AggDefAggMod = null;
            
   /**
    * ShrBankInstrLevel member variable.
    */
   private String _ShrBankInstrLevel = null;
            
   /**
    *  member variable.
    */
   private String _DefaultInstrLevel = null;
            
   /**
    * HighRiskDispMode member variable.
    */
   private String _HighRiskDispMode = null;
            
   /**
    * HighRiskLevels member variable.
    */
   private String _HighRiskLevels = null;
            
   /**
    * RiskApplEntity member variable.
    */
   private String _RiskApplEntity = null;
            
   /**
    * RiskApplEntitySeq member variable.
    */
   private String _RiskApplEntitySeq = null;
            
   /**
    * RiskForAcctHldrRsk member variable.
    */
   private String _RiskForAcctHldrRsk = null;
            
   /**
    * RebalDateFormat member variable.
    */
   private Integer _RebalDateFormat = null;
            
   /**
    * Flag if RESP Transformation is activated for an environment member variable.
    */
   private Boolean _IsRESPTransform = null;
            
   /**
    * CRSEntityList member variable.
    */
   private String _CRSEntityList = null;
            
   /**
    * TaxCompliance member variable.
    */
   private String _TaxCompliance = null;
            
   /**
    * CRSActive member variable.
    */
   private Boolean _CRSActive = null;
            
   /**
    * active flag member variable.
    */
   private Boolean _TrackTrActive = null;
            
   /**
    * track redem code member variable.
    */
   private String _TrackTrRedCode = null;
            
   /**
    * track deposit code member variable.
    */
   private String _TrackTrDepCode = null;
            
   /**
    * track other member variable.
    */
   private String _TrackTrOther = null;
            
   /**
    * Logical field indicating rebook trade will use fee setup from original trade member variable.
    */
   private Boolean _OrigTradeFee = null;
            
   /**
    * environment level control for legacy fund code member variable.
    */
   private Integer _AltFndIdntfr = null;
            
   /**
    *  member variable.
    */
   private String _TFSAAgeOfMajor = null;
            
   /**
    *  member variable.
    */
   private String _TFSAProvCode = null;
            
   /**
    * ApplPUDbyDefault member variable.
    */
   private String _ApplPUDbyDefault = null;
            
   /**
    * ApplPUDbyBEL member variable.
    */
   private String _ApplPUDbyBEL = null;
            
   /**
    * ApplPUDbyCB member variable.
    */
   private String _ApplPUDbyCB = null;
            
   /**
    * RefundAllowed member variable.
    */
   private String _RefundAllowed = null;
            
   /**
    * RefundSettleDateOpt member variable.
    */
   private String _RefundSettleDateOpt = null;
            
  
   /**
    * Constructs the SystemConfiguration2View object.
    * 
    */
   public SystemConfiguration2View()
   {
      super ( new SystemConfiguration2Request() );
   }

   /**
    * Constructs the SystemConfiguration2View object with the given host encoding.
    * 
    * @param hostEncoding
    *               character encoding for sending/receiving host data
    */
   public SystemConfiguration2View( String hostEncoding )
   {
      super ( new SystemConfiguration2Request( hostEncoding ) );
   }

   /**
    * Gets the SystemConfiguration2Request object associated with this view. Data is set
    * into this object before calling any of this view's receive
    * methods. An attempt to set request fields after the first receive will
    * result in a runtime exception.
    * 
    * @return The SystemConfiguration2Request object.
    */
   public final SystemConfiguration2Request getRequest()
   {
      return (SystemConfiguration2Request)getIFastRequest();
   }

   /**
    * Gets the Flag which indicates if multiple PAC/SWP with same Deff and Account Details will be allowed field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag which indicates if multiple PAC/SWP with same Deff and Account Details will be allowed or null.
    */
   public final Boolean getAllowMultiplePacSwp()
   {
      return _AllowMultiplePacSwp;
   }
    
   /**
    * Gets the Flag which indicates if multiple PAC/SWP with same Deff and Account Details will be allowed field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag which indicates if multiple PAC/SWP with same Deff and Account Details will be allowed or the specified default value.
    */
   public final boolean getAllowMultiplePacSwp( boolean defaultValue )
   {
      return _AllowMultiplePacSwp == null ? defaultValue : _AllowMultiplePacSwp.booleanValue();
   }
    
   /**
    * Gets the SWP Edit Level field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the SWP Edit Level or null.
    */
   public final String getSWPEditLevel()
   {
      return _SWPEditLevel;
   }
    
   /**
    * Gets the SWP Edit Level field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the SWP Edit Level or the specified default value.
    */
   public final String getSWPEditLevel( String defaultValue )
   {
      return _SWPEditLevel == null ? defaultValue : _SWPEditLevel;
   }
    
   /**
    * Gets the SWP Minimum field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the SWP Minimum or null.
    */
   public final String getSWPMin()
   {
      return _SWPMin;
   }
    
   /**
    * Gets the SWP Minimum field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the SWP Minimum or the specified default value.
    */
   public final String getSWPMin( String defaultValue )
   {
      return _SWPMin == null ? defaultValue : _SWPMin;
   }
    
   /**
    * Gets the SWP Hard Edit field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the SWP Hard Edit or null.
    */
   public final Boolean getSWPHardEdit()
   {
      return _SWPHardEdit;
   }
    
   /**
    * Gets the SWP Hard Edit field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the SWP Hard Edit or the specified default value.
    */
   public final boolean getSWPHardEdit( boolean defaultValue )
   {
      return _SWPHardEdit == null ? defaultValue : _SWPHardEdit.booleanValue();
   }
    
   /**
    * Gets the DSC Override field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the DSC Override or null.
    */
   public final Boolean getDSCOverride()
   {
      return _DSCOverride;
   }
    
   /**
    * Gets the DSC Override field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the DSC Override or the specified default value.
    */
   public final boolean getDSCOverride( boolean defaultValue )
   {
      return _DSCOverride == null ? defaultValue : _DSCOverride.booleanValue();
   }
    
   /**
    * Gets the DAB screens field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the DAB screens or null.
    */
   public final Boolean getDabScreen()
   {
      return _DabScreen;
   }
    
   /**
    * Gets the DAB screens field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the DAB screens or the specified default value.
    */
   public final boolean getDabScreen( boolean defaultValue )
   {
      return _DabScreen == null ? defaultValue : _DabScreen.booleanValue();
   }
    
   /**
    * Gets the Deposit Id 2 field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Deposit Id 2 or null.
    */
   public final Boolean getDepositID2()
   {
      return _DepositID2;
   }
    
   /**
    * Gets the Deposit Id 2 field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Deposit Id 2 or the specified default value.
    */
   public final boolean getDepositID2( boolean defaultValue )
   {
      return _DepositID2 == null ? defaultValue : _DepositID2.booleanValue();
   }
    
   /**
    * Gets the Display Client Trade ID field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Display Client Trade ID or null.
    */
   public final Boolean getDispClientTradeID()
   {
      return _DispClientTradeID;
   }
    
   /**
    * Gets the Display Client Trade ID field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Display Client Trade ID or the specified default value.
    */
   public final boolean getDispClientTradeID( boolean defaultValue )
   {
      return _DispClientTradeID == null ? defaultValue : _DispClientTradeID.booleanValue();
   }
    
   /**
    * Gets the Default Bank Type field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Default Bank Type or null.
    */
   public final String getDefaultBankType()
   {
      return _DefaultBankType;
   }
    
   /**
    * Gets the Default Bank Type field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Default Bank Type or the specified default value.
    */
   public final String getDefaultBankType( String defaultValue )
   {
      return _DefaultBankType == null ? defaultValue : _DefaultBankType;
   }
    
   /**
    * Gets the Display Management Stype and Discretionary field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Display Management Stype and Discretionary or null.
    */
   public final Boolean getDispManageStyle()
   {
      return _DispManageStyle;
   }
    
   /**
    * Gets the Display Management Stype and Discretionary field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Display Management Stype and Discretionary or the specified default value.
    */
   public final boolean getDispManageStyle( boolean defaultValue )
   {
      return _DispManageStyle == null ? defaultValue : _DispManageStyle.booleanValue();
   }
    
   /**
    * Gets the Is Default Bank Type updatable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Is Default Bank Type updatable or null.
    */
   public final Boolean getDefaultBankUpd()
   {
      return _DefaultBankUpd;
   }
    
   /**
    * Gets the Is Default Bank Type updatable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Is Default Bank Type updatable or the specified default value.
    */
   public final boolean getDefaultBankUpd( boolean defaultValue )
   {
      return _DefaultBankUpd == null ? defaultValue : _DefaultBankUpd.booleanValue();
   }
    
   /**
    * Gets the Access split com at purchase add mode field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Access split com at purchase add mode or null.
    */
   public final Boolean getSplitOnAddPur()
   {
      return _SplitOnAddPur;
   }
    
   /**
    * Gets the Access split com at purchase add mode field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Access split com at purchase add mode or the specified default value.
    */
   public final boolean getSplitOnAddPur( boolean defaultValue )
   {
      return _SplitOnAddPur == null ? defaultValue : _SplitOnAddPur.booleanValue();
   }
    
   /**
    * Gets the Access split com at Purchase modify mode field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Access split com at Purchase modify mode or null.
    */
   public final Boolean getSplitOnModPur()
   {
      return _SplitOnModPur;
   }
    
   /**
    * Gets the Access split com at Purchase modify mode field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Access split com at Purchase modify mode or the specified default value.
    */
   public final boolean getSplitOnModPur( boolean defaultValue )
   {
      return _SplitOnModPur == null ? defaultValue : _SplitOnModPur.booleanValue();
   }
    
   /**
    * Gets the Access split com on user request only field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Access split com on user request only or null.
    */
   public final Boolean getSplitOnReqOnly()
   {
      return _SplitOnReqOnly;
   }
    
   /**
    * Gets the Access split com on user request only field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Access split com on user request only or the specified default value.
    */
   public final boolean getSplitOnReqOnly( boolean defaultValue )
   {
      return _SplitOnReqOnly == null ? defaultValue : _SplitOnReqOnly.booleanValue();
   }
    
   /**
    * Gets the Create Split Comm Automatidally field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Create Split Comm Automatidally or null.
    */
   public final Boolean getSpltComBankDeflt()
   {
      return _SpltComBankDeflt;
   }
    
   /**
    * Gets the Create Split Comm Automatidally field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Create Split Comm Automatidally or the specified default value.
    */
   public final boolean getSpltComBankDeflt( boolean defaultValue )
   {
      return _SpltComBankDeflt == null ? defaultValue : _SpltComBankDeflt.booleanValue();
   }
    
   /**
    * Gets the Validate split com field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Validate split com or null.
    */
   public final Boolean getValSplCom()
   {
      return _ValSplCom;
   }
    
   /**
    * Gets the Validate split com field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Validate split com or the specified default value.
    */
   public final boolean getValSplCom( boolean defaultValue )
   {
      return _ValSplCom == null ? defaultValue : _ValSplCom.booleanValue();
   }
    
   /**
    * Gets the Save Plan Client field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Save Plan Client or null.
    */
   public final Boolean getSavePlanClient()
   {
      return _SavePlanClient;
   }
    
   /**
    * Gets the Save Plan Client field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Save Plan Client or the specified default value.
    */
   public final boolean getSavePlanClient( boolean defaultValue )
   {
      return _SavePlanClient == null ? defaultValue : _SavePlanClient.booleanValue();
   }
    
   /**
    * Gets the PAC Last Run Date field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the PAC Last Run Date or null.
    */
   public final Date getPACLastRunDate()
   {
      return _PACLastRunDate;
   }
    
   /**
    * Gets the PAC Last Run Date field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the PAC Last Run Date or the specified default value.
    */
   public final Date getPACLastRunDate( Date defaultValue )
   {
      return _PACLastRunDate == null ? defaultValue : _PACLastRunDate;
   }
    
   /**
    * Gets the SWP Last Run Date field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the SWP Last Run Date or null.
    */
   public final Date getSWPLastRunDate()
   {
      return _SWPLastRunDate;
   }
    
   /**
    * Gets the SWP Last Run Date field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the SWP Last Run Date or the specified default value.
    */
   public final Date getSWPLastRunDate( Date defaultValue )
   {
      return _SWPLastRunDate == null ? defaultValue : _SWPLastRunDate;
   }
    
   /**
    * Gets the Manual Settlement Dates field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Manual Settlement Dates or null.
    */
   public final Boolean getManualSettleDates()
   {
      return _ManualSettleDates;
   }
    
   /**
    * Gets the Manual Settlement Dates field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Manual Settlement Dates or the specified default value.
    */
   public final boolean getManualSettleDates( boolean defaultValue )
   {
      return _ManualSettleDates == null ? defaultValue : _ManualSettleDates.booleanValue();
   }
    
   /**
    * Gets the Savings Plan in ACHProcessor Controls field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Savings Plan in ACHProcessor Controls or null.
    */
   public final Boolean getACHSavingsPlan()
   {
      return _ACHSavingsPlan;
   }
    
   /**
    * Gets the Savings Plan in ACHProcessor Controls field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Savings Plan in ACHProcessor Controls or the specified default value.
    */
   public final boolean getACHSavingsPlan( boolean defaultValue )
   {
      return _ACHSavingsPlan == null ? defaultValue : _ACHSavingsPlan.booleanValue();
   }
    
   /**
    * Gets the PAC in ACHProcessor Controls field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the PAC in ACHProcessor Controls or null.
    */
   public final Boolean getACHPAC()
   {
      return _ACHPAC;
   }
    
   /**
    * Gets the PAC in ACHProcessor Controls field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the PAC in ACHProcessor Controls or the specified default value.
    */
   public final boolean getACHPAC( boolean defaultValue )
   {
      return _ACHPAC == null ? defaultValue : _ACHPAC.booleanValue();
   }
    
   /**
    * Gets the Foreign Content Functionality field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Foreign Content Functionality or null.
    */
   public final Boolean getForeignCont()
   {
      return _ForeignCont;
   }
    
   /**
    * Gets the Foreign Content Functionality field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Foreign Content Functionality or the specified default value.
    */
   public final boolean getForeignCont( boolean defaultValue )
   {
      return _ForeignCont == null ? defaultValue : _ForeignCont.booleanValue();
   }
    
   /**
    * Gets the Allow Unit Purchase field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Allow Unit Purchase or null.
    */
   public final Boolean getAllowUnitPurch()
   {
      return _AllowUnitPurch;
   }
    
   /**
    * Gets the Allow Unit Purchase field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Allow Unit Purchase or the specified default value.
    */
   public final boolean getAllowUnitPurch( boolean defaultValue )
   {
      return _AllowUnitPurch == null ? defaultValue : _AllowUnitPurch.booleanValue();
   }
    
   /**
    * Gets the Allow Multi-Currency EFT field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Allow Multi-Currency EFT or null.
    */
   public final Boolean getAllowMultiCurrEFT()
   {
      return _AllowMultiCurrEFT;
   }
    
   /**
    * Gets the Allow Multi-Currency EFT field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Allow Multi-Currency EFT or the specified default value.
    */
   public final boolean getAllowMultiCurrEFT( boolean defaultValue )
   {
      return _AllowMultiCurrEFT == null ? defaultValue : _AllowMultiCurrEFT.booleanValue();
   }
    
   /**
    * Gets the Disallowed PayTypes field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Disallowed PayTypes or null.
    */
   public final String getDisallowedPayTypes()
   {
      return _DisallowedPayTypes;
   }
    
   /**
    * Gets the Disallowed PayTypes field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Disallowed PayTypes or the specified default value.
    */
   public final String getDisallowedPayTypes( String defaultValue )
   {
      return _DisallowedPayTypes == null ? defaultValue : _DisallowedPayTypes;
   }
    
   /**
    * Gets the Allow Cash Distribution field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Allow Cash Distribution or null.
    */
   public final Boolean getAllowCashDistrib()
   {
      return _AllowCashDistrib;
   }
    
   /**
    * Gets the Allow Cash Distribution field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Allow Cash Distribution or the specified default value.
    */
   public final boolean getAllowCashDistrib( boolean defaultValue )
   {
      return _AllowCashDistrib == null ? defaultValue : _AllowCashDistrib.booleanValue();
   }
    
   /**
    * Gets the PAC Calendar field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the PAC Calendar or null.
    */
   public final Boolean getPACCalendar()
   {
      return _PACCalendar;
   }
    
   /**
    * Gets the PAC Calendar field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the PAC Calendar or the specified default value.
    */
   public final boolean getPACCalendar( boolean defaultValue )
   {
      return _PACCalendar == null ? defaultValue : _PACCalendar.booleanValue();
   }
    
   /**
    * Gets the Product Group Code field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Product Group Code or null.
    */
   public final Boolean getProductGroupCode()
   {
      return _ProductGroupCode;
   }
    
   /**
    * Gets the Product Group Code field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Product Group Code or the specified default value.
    */
   public final boolean getProductGroupCode( boolean defaultValue )
   {
      return _ProductGroupCode == null ? defaultValue : _ProductGroupCode.booleanValue();
   }
    
   /**
    * Gets the Trade Date Lag field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Trade Date Lag or null.
    */
   public final Boolean getTradeDateLag()
   {
      return _TradeDateLag;
   }
    
   /**
    * Gets the Trade Date Lag field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Trade Date Lag or the specified default value.
    */
   public final boolean getTradeDateLag( boolean defaultValue )
   {
      return _TradeDateLag == null ? defaultValue : _TradeDateLag.booleanValue();
   }
    
   /**
    * Gets the TradeDateLagExch field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the TradeDateLagExch or null.
    */
   public final Boolean getTradeDateLagExch()
   {
      return _TradeDateLagExch;
   }
    
   /**
    * Gets the TradeDateLagExch field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the TradeDateLagExch or the specified default value.
    */
   public final boolean getTradeDateLagExch( boolean defaultValue )
   {
      return _TradeDateLagExch == null ? defaultValue : _TradeDateLagExch.booleanValue();
   }
    
   /**
    * Gets the Foreign Content Rebalancing field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Foreign Content Rebalancing or null.
    */
   public final Integer getFCRebalancing()
   {
      return _FCRebalancing;
   }
    
   /**
    * Gets the Foreign Content Rebalancing field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Foreign Content Rebalancing or the specified default value.
    */
   public final int getFCRebalancing( int defaultValue )
   {
      return _FCRebalancing == null ? defaultValue : _FCRebalancing.intValue();
   }
    
   /**
    * Gets the Split Commission Fee Definitions field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Split Commission Fee Definitions or null.
    */
   public final String getCommFeeCodes()
   {
      return _CommFeeCodes;
   }
    
   /**
    * Gets the Split Commission Fee Definitions field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Split Commission Fee Definitions or the specified default value.
    */
   public final String getCommFeeCodes( String defaultValue )
   {
      return _CommFeeCodes == null ? defaultValue : _CommFeeCodes;
   }
    
   /**
    * Gets the Source/ Target Switch Method field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Source/ Target Switch Method or null.
    */
   public final Boolean getCalcSwitch()
   {
      return _CalcSwitch;
   }
    
   /**
    * Gets the Source/ Target Switch Method field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Source/ Target Switch Method or the specified default value.
    */
   public final boolean getCalcSwitch( boolean defaultValue )
   {
      return _CalcSwitch == null ? defaultValue : _CalcSwitch.booleanValue();
   }
    
   /**
    * Gets the Miscellaneous Fee Definitions field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Miscellaneous Fee Definitions or null.
    */
   public final String getMiscFeeDefn()
   {
      return _MiscFeeDefn;
   }
    
   /**
    * Gets the Miscellaneous Fee Definitions field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Miscellaneous Fee Definitions or the specified default value.
    */
   public final String getMiscFeeDefn( String defaultValue )
   {
      return _MiscFeeDefn == null ? defaultValue : _MiscFeeDefn;
   }
    
   /**
    * Gets the Account Level FIFO (Feature) field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Account Level FIFO (Feature) or null.
    */
   public final Boolean getAcctLvlFIFO()
   {
      return _AcctLvlFIFO;
   }
    
   /**
    * Gets the Account Level FIFO (Feature) field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Account Level FIFO (Feature) or the specified default value.
    */
   public final boolean getAcctLvlFIFO( boolean defaultValue )
   {
      return _AcctLvlFIFO == null ? defaultValue : _AcctLvlFIFO.booleanValue();
   }
    
   /**
    * Gets the Company Code Flag - Y/N field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Company Code Flag - Y/N or null.
    */
   public final Boolean getCompCodeFlag()
   {
      return _CompCodeFlag;
   }
    
   /**
    * Gets the Company Code Flag - Y/N field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Company Code Flag - Y/N or the specified default value.
    */
   public final boolean getCompCodeFlag( boolean defaultValue )
   {
      return _CompCodeFlag == null ? defaultValue : _CompCodeFlag.booleanValue();
   }
    
   /**
    * Gets the Price Process at FundGroup field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Price Process at FundGroup or null.
    */
   public final Boolean getPriceProcAtFndGrp()
   {
      return _PriceProcAtFndGrp;
   }
    
   /**
    * Gets the Price Process at FundGroup field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Price Process at FundGroup or the specified default value.
    */
   public final boolean getPriceProcAtFndGrp( boolean defaultValue )
   {
      return _PriceProcAtFndGrp == null ? defaultValue : _PriceProcAtFndGrp.booleanValue();
   }
    
   /**
    * Gets the Management Fee Display field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Management Fee Display or null.
    */
   public final Integer getMgmtFeeDisplay()
   {
      return _MgmtFeeDisplay;
   }
    
   /**
    * Gets the Management Fee Display field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Management Fee Display or the specified default value.
    */
   public final int getMgmtFeeDisplay( int defaultValue )
   {
      return _MgmtFeeDisplay == null ? defaultValue : _MgmtFeeDisplay.intValue();
   }
    
   /**
    * Gets the LLP Withdrawal Rules Active field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the LLP Withdrawal Rules Active or null.
    */
   public final Boolean getLLPWithdrawalRules()
   {
      return _LLPWithdrawalRules;
   }
    
   /**
    * Gets the LLP Withdrawal Rules Active field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the LLP Withdrawal Rules Active or the specified default value.
    */
   public final boolean getLLPWithdrawalRules( boolean defaultValue )
   {
      return _LLPWithdrawalRules == null ? defaultValue : _LLPWithdrawalRules.booleanValue();
   }
    
   /**
    * Gets the RRIF 'FROM' Allocations field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RRIF 'FROM' Allocations or null.
    */
   public final Boolean getRRIFFromAlloc()
   {
      return _RRIFFromAlloc;
   }
    
   /**
    * Gets the RRIF 'FROM' Allocations field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RRIF 'FROM' Allocations or the specified default value.
    */
   public final boolean getRRIFFromAlloc( boolean defaultValue )
   {
      return _RRIFFromAlloc == null ? defaultValue : _RRIFFromAlloc.booleanValue();
   }
    
   /**
    * Gets the ISO Compliant y/n field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ISO Compliant y/n or null.
    */
   public final Boolean getISOCompliant()
   {
      return _ISOCompliant;
   }
    
   /**
    * Gets the ISO Compliant y/n field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ISO Compliant y/n or the specified default value.
    */
   public final boolean getISOCompliant( boolean defaultValue )
   {
      return _ISOCompliant == null ? defaultValue : _ISOCompliant.booleanValue();
   }
    
   /**
    * Gets the ReviewDate Flag y/n field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ReviewDate Flag y/n or null.
    */
   public final Boolean getReviewDateFlag()
   {
      return _ReviewDateFlag;
   }
    
   /**
    * Gets the ReviewDate Flag y/n field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ReviewDate Flag y/n or the specified default value.
    */
   public final boolean getReviewDateFlag( boolean defaultValue )
   {
      return _ReviewDateFlag == null ? defaultValue : _ReviewDateFlag.booleanValue();
   }
    
   /**
    * Gets the Override Allowed on Review Date y/n field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Override Allowed on Review Date y/n or null.
    */
   public final Boolean getOverrideReviewDate()
   {
      return _OverrideReviewDate;
   }
    
   /**
    * Gets the Override Allowed on Review Date y/n field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Override Allowed on Review Date y/n or the specified default value.
    */
   public final boolean getOverrideReviewDate( boolean defaultValue )
   {
      return _OverrideReviewDate == null ? defaultValue : _OverrideReviewDate.booleanValue();
   }
    
   /**
    * Gets the Review Month field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Review Month or null.
    */
   public final Integer getReviewMnths()
   {
      return _ReviewMnths;
   }
    
   /**
    * Gets the Review Month field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Review Month or the specified default value.
    */
   public final int getReviewMnths( int defaultValue )
   {
      return _ReviewMnths == null ? defaultValue : _ReviewMnths.intValue();
   }
    
   /**
    * Gets the Bank Charge field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Bank Charge or null.
    */
   public final String getBankCharge()
   {
      return _BankCharge;
   }
    
   /**
    * Gets the Bank Charge field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Bank Charge or the specified default value.
    */
   public final String getBankCharge( String defaultValue )
   {
      return _BankCharge == null ? defaultValue : _BankCharge;
   }
    
   /**
    * Gets the Consolidate EFT field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Consolidate EFT or null.
    */
   public final String getConsolidEFT()
   {
      return _ConsolidEFT;
   }
    
   /**
    * Gets the Consolidate EFT field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Consolidate EFT or the specified default value.
    */
   public final String getConsolidEFT( String defaultValue )
   {
      return _ConsolidEFT == null ? defaultValue : _ConsolidEFT;
   }
    
   /**
    * Gets the Bank File  Processor applicable for redemption field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Bank File  Processor applicable for redemption or null.
    */
   public final Boolean getACHRedem()
   {
      return _ACHRedem;
   }
    
   /**
    * Gets the Bank File  Processor applicable for redemption field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Bank File  Processor applicable for redemption or the specified default value.
    */
   public final boolean getACHRedem( boolean defaultValue )
   {
      return _ACHRedem == null ? defaultValue : _ACHRedem.booleanValue();
   }
    
   /**
    * Gets the Value Date Applicable y/n field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Value Date Applicable y/n or null.
    */
   public final Boolean getValueDateApplic()
   {
      return _ValueDateApplic;
   }
    
   /**
    * Gets the Value Date Applicable y/n field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Value Date Applicable y/n or the specified default value.
    */
   public final boolean getValueDateApplic( boolean defaultValue )
   {
      return _ValueDateApplic == null ? defaultValue : _ValueDateApplic.booleanValue();
   }
    
   /**
    * Gets the client preference for settlements field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the client preference for settlements or null.
    */
   public final Boolean getSettleAll()
   {
      return _SettleAll;
   }
    
   /**
    * Gets the client preference for settlements field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the client preference for settlements or the specified default value.
    */
   public final boolean getSettleAll( boolean defaultValue )
   {
      return _SettleAll == null ? defaultValue : _SettleAll.booleanValue();
   }
    
   /**
    * Gets the Duplicate Alternate Account Allowed field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Duplicate Alternate Account Allowed or null.
    */
   public final Boolean getDuplicateAltAcct()
   {
      return _DuplicateAltAcct;
   }
    
   /**
    * Gets the Duplicate Alternate Account Allowed field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Duplicate Alternate Account Allowed or the specified default value.
    */
   public final boolean getDuplicateAltAcct( boolean defaultValue )
   {
      return _DuplicateAltAcct == null ? defaultValue : _DuplicateAltAcct.booleanValue();
   }
    
   /**
    * Gets the Bank Detl Name field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Bank Detl Name or null.
    */
   public final Boolean getBankDetlName()
   {
      return _BankDetlName;
   }
    
   /**
    * Gets the Bank Detl Name field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Bank Detl Name or the specified default value.
    */
   public final boolean getBankDetlName( boolean defaultValue )
   {
      return _BankDetlName == null ? defaultValue : _BankDetlName.booleanValue();
   }
    
   /**
    * Gets the Delivery Method field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Delivery Method or null.
    */
   public final String getDeliveryMtds()
   {
      return _DeliveryMtds;
   }
    
   /**
    * Gets the Delivery Method field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Delivery Method or the specified default value.
    */
   public final String getDeliveryMtds( String defaultValue )
   {
      return _DeliveryMtds == null ? defaultValue : _DeliveryMtds;
   }
    
   /**
    * Gets the Delivery Option field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Delivery Option or null.
    */
   public final Boolean getDeliveryOptn()
   {
      return _DeliveryOptn;
   }
    
   /**
    * Gets the Delivery Option field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Delivery Option or the specified default value.
    */
   public final boolean getDeliveryOptn( boolean defaultValue )
   {
      return _DeliveryOptn == null ? defaultValue : _DeliveryOptn.booleanValue();
   }
    
   /**
    * Gets the Consent to Waive Paper field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Consent to Waive Paper or null.
    */
   public final Boolean getCnsntToWaive()
   {
      return _CnsntToWaive;
   }
    
   /**
    * Gets the Consent to Waive Paper field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Consent to Waive Paper or the specified default value.
    */
   public final boolean getCnsntToWaive( boolean defaultValue )
   {
      return _CnsntToWaive == null ? defaultValue : _CnsntToWaive.booleanValue();
   }
    
   /**
    * Gets the Override Percent Free field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Override Percent Free or null.
    */
   public final Integer getOverridePrcntFree()
   {
      return _OverridePrcntFree;
   }
    
   /**
    * Gets the Override Percent Free field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Override Percent Free or the specified default value.
    */
   public final int getOverridePrcntFree( int defaultValue )
   {
      return _OverridePrcntFree == null ? defaultValue : _OverridePrcntFree.intValue();
   }
    
   /**
    * Gets the Override Rebalance Threshold field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Override Rebalance Threshold or null.
    */
   public final Boolean getOvrdRBLThrshld()
   {
      return _OvrdRBLThrshld;
   }
    
   /**
    * Gets the Override Rebalance Threshold field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Override Rebalance Threshold or the specified default value.
    */
   public final boolean getOvrdRBLThrshld( boolean defaultValue )
   {
      return _OvrdRBLThrshld == null ? defaultValue : _OvrdRBLThrshld.booleanValue();
   }
    
   /**
    * Gets the Common Currency for rebalancing field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Common Currency for rebalancing or null.
    */
   public final Boolean getCommonCurrency()
   {
      return _CommonCurrency;
   }
    
   /**
    * Gets the Common Currency for rebalancing field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Common Currency for rebalancing or the specified default value.
    */
   public final boolean getCommonCurrency( boolean defaultValue )
   {
      return _CommonCurrency == null ? defaultValue : _CommonCurrency.booleanValue();
   }
    
   /**
    * Gets the Rebalance Prcnt Default field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Rebalance Prcnt Default or null.
    */
   public final String getRBLThrshldDflt()
   {
      return _RBLThrshldDflt;
   }
    
   /**
    * Gets the Rebalance Prcnt Default field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Rebalance Prcnt Default or the specified default value.
    */
   public final String getRBLThrshldDflt( String defaultValue )
   {
      return _RBLThrshldDflt == null ? defaultValue : _RBLThrshldDflt;
   }
    
   /**
    * Gets the Display RBL System Threshold field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Display RBL System Threshold or null.
    */
   public final Boolean getDispRBLSysThrshld()
   {
      return _DispRBLSysThrshld;
   }
    
   /**
    * Gets the Display RBL System Threshold field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Display RBL System Threshold or the specified default value.
    */
   public final boolean getDispRBLSysThrshld( boolean defaultValue )
   {
      return _DispRBLSysThrshld == null ? defaultValue : _DispRBLSysThrshld.booleanValue();
   }
    
   /**
    * Gets the Address Format field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Address Format or null.
    */
   public final String getShrAddressFormat()
   {
      return _ShrAddressFormat;
   }
    
   /**
    * Gets the Address Format field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Address Format or the specified default value.
    */
   public final String getShrAddressFormat( String defaultValue )
   {
      return _ShrAddressFormat == null ? defaultValue : _ShrAddressFormat;
   }
    
   /**
    * Gets the flag indicating if FundLimitOverride is applicable for env field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the flag indicating if FundLimitOverride is applicable for env or null.
    */
   public final Boolean getFundLimitOverride()
   {
      return _FundLimitOverride;
   }
    
   /**
    * Gets the flag indicating if FundLimitOverride is applicable for env field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the flag indicating if FundLimitOverride is applicable for env or the specified default value.
    */
   public final boolean getFundLimitOverride( boolean defaultValue )
   {
      return _FundLimitOverride == null ? defaultValue : _FundLimitOverride.booleanValue();
   }
    
   /**
    * Gets the Restrict AMS-Broker field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Restrict AMS-Broker or null.
    */
   public final Boolean getRestrictAMSBroker()
   {
      return _RestrictAMSBroker;
   }
    
   /**
    * Gets the Restrict AMS-Broker field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Restrict AMS-Broker or the specified default value.
    */
   public final boolean getRestrictAMSBroker( boolean defaultValue )
   {
      return _RestrictAMSBroker == null ? defaultValue : _RestrictAMSBroker.booleanValue();
   }
    
   /**
    * Gets the SWIFT/Vestima/ FundSettle participants Y/N field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the SWIFT/Vestima/ FundSettle participants Y/N or null.
    */
   public final Boolean getNetworkOrder()
   {
      return _NetworkOrder;
   }
    
   /**
    * Gets the SWIFT/Vestima/ FundSettle participants Y/N field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the SWIFT/Vestima/ FundSettle participants Y/N or the specified default value.
    */
   public final boolean getNetworkOrder( boolean defaultValue )
   {
      return _NetworkOrder == null ? defaultValue : _NetworkOrder.booleanValue();
   }
    
   /**
    * Gets the Early Redemption Fees applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Early Redemption Fees applicable or null.
    */
   public final Boolean getEarlyPWFeeElig()
   {
      return _EarlyPWFeeElig;
   }
    
   /**
    * Gets the Early Redemption Fees applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Early Redemption Fees applicable or the specified default value.
    */
   public final boolean getEarlyPWFeeElig( boolean defaultValue )
   {
      return _EarlyPWFeeElig == null ? defaultValue : _EarlyPWFeeElig.booleanValue();
   }
    
   /**
    * Gets the Short Term Fees Applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Short Term Fees Applicable or null.
    */
   public final Boolean getShortTermTRFeeElig()
   {
      return _ShortTermTRFeeElig;
   }
    
   /**
    * Gets the Short Term Fees Applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Short Term Fees Applicable or the specified default value.
    */
   public final boolean getShortTermTRFeeElig( boolean defaultValue )
   {
      return _ShortTermTRFeeElig == null ? defaultValue : _ShortTermTRFeeElig.booleanValue();
   }
    
   /**
    * Gets the Allow mailing assignments by fund group/product field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Allow mailing assignments by fund group/product or null.
    */
   public final Boolean getMailingByFundGroup()
   {
      return _MailingByFundGroup;
   }
    
   /**
    * Gets the Allow mailing assignments by fund group/product field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Allow mailing assignments by fund group/product or the specified default value.
    */
   public final boolean getMailingByFundGroup( boolean defaultValue )
   {
      return _MailingByFundGroup == null ? defaultValue : _MailingByFundGroup.booleanValue();
   }
    
   /**
    * Gets the Flag indicating if ATFee Applies field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicating if ATFee Applies or null.
    */
   public final Boolean getATFeeApply()
   {
      return _ATFeeApply;
   }
    
   /**
    * Gets the Flag indicating if ATFee Applies field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicating if ATFee Applies or the specified default value.
    */
   public final boolean getATFeeApply( boolean defaultValue )
   {
      return _ATFeeApply == null ? defaultValue : _ATFeeApply.booleanValue();
   }
    
   /**
    * Gets the Split Commissions Fee Override Type field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Split Commissions Fee Override Type or null.
    */
   public final Integer getFeeOverrideType()
   {
      return _FeeOverrideType;
   }
    
   /**
    * Gets the Split Commissions Fee Override Type field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Split Commissions Fee Override Type or the specified default value.
    */
   public final int getFeeOverrideType( int defaultValue )
   {
      return _FeeOverrideType == null ? defaultValue : _FeeOverrideType.intValue();
   }
    
   /**
    * Gets the Summit Dealer XRef Lower Range field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Summit Dealer XRef Lower Range or null.
    */
   public final String getSummDlrRangeLow()
   {
      return _SummDlrRangeLow;
   }
    
   /**
    * Gets the Summit Dealer XRef Lower Range field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Summit Dealer XRef Lower Range or the specified default value.
    */
   public final String getSummDlrRangeLow( String defaultValue )
   {
      return _SummDlrRangeLow == null ? defaultValue : _SummDlrRangeLow;
   }
    
   /**
    * Gets the Summit Dealer XRef Upper Range field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Summit Dealer XRef Upper Range or null.
    */
   public final String getSummDlrRangeUpp()
   {
      return _SummDlrRangeUpp;
   }
    
   /**
    * Gets the Summit Dealer XRef Upper Range field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Summit Dealer XRef Upper Range or the specified default value.
    */
   public final String getSummDlrRangeUpp( String defaultValue )
   {
      return _SummDlrRangeUpp == null ? defaultValue : _SummDlrRangeUpp;
   }
    
   /**
    * Gets the RRIF 'TO' Allocations field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RRIF 'TO' Allocations or null.
    */
   public final Boolean getRRIFToAlloc()
   {
      return _RRIFToAlloc;
   }
    
   /**
    * Gets the RRIF 'TO' Allocations field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RRIF 'TO' Allocations or the specified default value.
    */
   public final boolean getRRIFToAlloc( boolean defaultValue )
   {
      return _RRIFToAlloc == null ? defaultValue : _RRIFToAlloc.booleanValue();
   }
    
   /**
    * Gets the ACH Trailer Fee field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ACH Trailer Fee or null.
    */
   public final Boolean getACHTrailerFee()
   {
      return _ACHTrailerFee;
   }
    
   /**
    * Gets the ACH Trailer Fee field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ACH Trailer Fee or the specified default value.
    */
   public final boolean getACHTrailerFee( boolean defaultValue )
   {
      return _ACHTrailerFee == null ? defaultValue : _ACHTrailerFee.booleanValue();
   }
    
   /**
    * Gets the ACH Commission field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ACH Commission or null.
    */
   public final Boolean getACHCommission()
   {
      return _ACHCommission;
   }
    
   /**
    * Gets the ACH Commission field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ACH Commission or the specified default value.
    */
   public final boolean getACHCommission( boolean defaultValue )
   {
      return _ACHCommission == null ? defaultValue : _ACHCommission.booleanValue();
   }
    
   /**
    * Gets the ACH Dividend field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ACH Dividend or null.
    */
   public final Boolean getACHDividend()
   {
      return _ACHDividend;
   }
    
   /**
    * Gets the ACH Dividend field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ACH Dividend or the specified default value.
    */
   public final boolean getACHDividend( boolean defaultValue )
   {
      return _ACHDividend == null ? defaultValue : _ACHDividend.booleanValue();
   }
    
   /**
    * Gets the Controls.Log1 for Controls.Name = field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Controls.Log1 for Controls.Name = or null.
    */
   public final Boolean getKYCAccountLevel()
   {
      return _KYCAccountLevel;
   }
    
   /**
    * Gets the Controls.Log1 for Controls.Name = field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Controls.Log1 for Controls.Name = or the specified default value.
    */
   public final boolean getKYCAccountLevel( boolean defaultValue )
   {
      return _KYCAccountLevel == null ? defaultValue : _KYCAccountLevel.booleanValue();
   }
    
   /**
    * Gets the Controls.Log1 for Controls.Name = ""Returned Mail Flag Automation field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Controls.Log1 for Controls.Name = ""Returned Mail Flag Automation or null.
    */
   public final Boolean getAllowRetMailAutomation()
   {
      return _AllowRetMailAutomation;
   }
    
   /**
    * Gets the Controls.Log1 for Controls.Name = ""Returned Mail Flag Automation field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Controls.Log1 for Controls.Name = ""Returned Mail Flag Automation or the specified default value.
    */
   public final boolean getAllowRetMailAutomation( boolean defaultValue )
   {
      return _AllowRetMailAutomation == null ? defaultValue : _AllowRetMailAutomation.booleanValue();
   }
    
   /**
    * Gets the System Feature  for  Code = NoWithTax (existing feature) field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the System Feature  for  Code = NoWithTax (existing feature) or null.
    */
   public final Boolean getNoWithTax()
   {
      return _NoWithTax;
   }
    
   /**
    * Gets the System Feature  for  Code = NoWithTax (existing feature) field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the System Feature  for  Code = NoWithTax (existing feature) or the specified default value.
    */
   public final boolean getNoWithTax( boolean defaultValue )
   {
      return _NoWithTax == null ? defaultValue : _NoWithTax.booleanValue();
   }
    
   /**
    * Gets the System Feature  for  Code = TaxOnRRIFRed (existing feature) field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the System Feature  for  Code = TaxOnRRIFRed (existing feature) or null.
    */
   public final Boolean getTaxOnRRIFRed()
   {
      return _TaxOnRRIFRed;
   }
    
   /**
    * Gets the System Feature  for  Code = TaxOnRRIFRed (existing feature) field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the System Feature  for  Code = TaxOnRRIFRed (existing feature) or the specified default value.
    */
   public final boolean getTaxOnRRIFRed( boolean defaultValue )
   {
      return _TaxOnRRIFRed == null ? defaultValue : _TaxOnRRIFRed.booleanValue();
   }
    
   /**
    * Gets the Controls.log1 for Controls.Name = WithTaxOverride (exist controls) field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Controls.log1 for Controls.Name = WithTaxOverride (exist controls) or null.
    */
   public final Boolean getWithTaxOverride()
   {
      return _WithTaxOverride;
   }
    
   /**
    * Gets the Controls.log1 for Controls.Name = WithTaxOverride (exist controls) field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Controls.log1 for Controls.Name = WithTaxOverride (exist controls) or the specified default value.
    */
   public final boolean getWithTaxOverride( boolean defaultValue )
   {
      return _WithTaxOverride == null ? defaultValue : _WithTaxOverride.booleanValue();
   }
    
   /**
    * Gets the Controls.log2 for Controls.Name = WithTaxOverride (exist controls) field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Controls.log2 for Controls.Name = WithTaxOverride (exist controls) or null.
    */
   public final Boolean getAutomaticAll()
   {
      return _AutomaticAll;
   }
    
   /**
    * Gets the Controls.log2 for Controls.Name = WithTaxOverride (exist controls) field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Controls.log2 for Controls.Name = WithTaxOverride (exist controls) or the specified default value.
    */
   public final boolean getAutomaticAll( boolean defaultValue )
   {
      return _AutomaticAll == null ? defaultValue : _AutomaticAll.booleanValue();
   }
    
   /**
    * Gets the Controls.Char2 for Controls.Name = 'TaxWithHeld  PW' (exist controls) field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Controls.Char2 for Controls.Name = 'TaxWithHeld  PW' (exist controls) or null.
    */
   public final String getRIFTaxableRedCode()
   {
      return _RIFTaxableRedCode;
   }
    
   /**
    * Gets the Controls.Char2 for Controls.Name = 'TaxWithHeld  PW' (exist controls) field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Controls.Char2 for Controls.Name = 'TaxWithHeld  PW' (exist controls) or the specified default value.
    */
   public final String getRIFTaxableRedCode( String defaultValue )
   {
      return _RIFTaxableRedCode == null ? defaultValue : _RIFTaxableRedCode;
   }
    
   /**
    * Gets the Controls.Char2  for Controls.Name = FullRedCode (new controls) field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Controls.Char2  for Controls.Name = FullRedCode (new controls) or null.
    */
   public final String getFullRedCode()
   {
      return _FullRedCode;
   }
    
   /**
    * Gets the Controls.Char2  for Controls.Name = FullRedCode (new controls) field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Controls.Char2  for Controls.Name = FullRedCode (new controls) or the specified default value.
    */
   public final String getFullRedCode( String defaultValue )
   {
      return _FullRedCode == null ? defaultValue : _FullRedCode;
   }
    
   /**
    * Gets the Controls.Log1 for Controls.Name = ManyToManyTranfer field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Controls.Log1 for Controls.Name = ManyToManyTranfer or null.
    */
   public final Boolean getManyToManyTR()
   {
      return _ManyToManyTR;
   }
    
   /**
    * Gets the Controls.Log1 for Controls.Name = ManyToManyTranfer field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Controls.Log1 for Controls.Name = ManyToManyTranfer or the specified default value.
    */
   public final boolean getManyToManyTR( boolean defaultValue )
   {
      return _ManyToManyTR == null ? defaultValue : _ManyToManyTR.booleanValue();
   }
    
   /**
    * Gets the Controls.Log1 for Controls.Name = SalutationFormat field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Controls.Log1 for Controls.Name = SalutationFormat or null.
    */
   public final Boolean getSalutationFormat()
   {
      return _SalutationFormat;
   }
    
   /**
    * Gets the Controls.Log1 for Controls.Name = SalutationFormat field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Controls.Log1 for Controls.Name = SalutationFormat or the specified default value.
    */
   public final boolean getSalutationFormat( boolean defaultValue )
   {
      return _SalutationFormat == null ? defaultValue : _SalutationFormat.booleanValue();
   }
    
   /**
    * Gets the DefaultBankInstCode field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the DefaultBankInstCode or null.
    */
   public final String getDefaultBankInstCode()
   {
      return _DefaultBankInstCode;
   }
    
   /**
    * Gets the DefaultBankInstCode field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the DefaultBankInstCode or the specified default value.
    */
   public final String getDefaultBankInstCode( String defaultValue )
   {
      return _DefaultBankInstCode == null ? defaultValue : _DefaultBankInstCode;
   }
    
   /**
    * Gets the List indicating which screens will popup uring NASU flow field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the List indicating which screens will popup uring NASU flow or null.
    */
   public final String getNASUPopup()
   {
      return _NASUPopup;
   }
    
   /**
    * Gets the List indicating which screens will popup uring NASU flow field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the List indicating which screens will popup uring NASU flow or the specified default value.
    */
   public final String getNASUPopup( String defaultValue )
   {
      return _NASUPopup == null ? defaultValue : _NASUPopup;
   }
    
   /**
    * Gets the AFBAgentCoCode field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the AFBAgentCoCode or null.
    */
   public final String getAFBAgentCoCode()
   {
      return _AFBAgentCoCode;
   }
    
   /**
    * Gets the AFBAgentCoCode field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the AFBAgentCoCode or the specified default value.
    */
   public final String getAFBAgentCoCode( String defaultValue )
   {
      return _AFBAgentCoCode == null ? defaultValue : _AFBAgentCoCode;
   }
    
   /**
    * Gets the Short Term Trading Fee Flag for NASU field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Short Term Trading Fee Flag for NASU or null.
    */
   public final Boolean getSTTRFeeFlag()
   {
      return _STTRFeeFlag;
   }
    
   /**
    * Gets the Short Term Trading Fee Flag for NASU field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Short Term Trading Fee Flag for NASU or the specified default value.
    */
   public final boolean getSTTRFeeFlag( boolean defaultValue )
   {
      return _STTRFeeFlag == null ? defaultValue : _STTRFeeFlag.booleanValue();
   }
    
   /**
    * Gets the Charge Early Redemption Fee Flag for NASU field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Charge Early Redemption Fee Flag for NASU or null.
    */
   public final Boolean getERFeeFlag()
   {
      return _ERFeeFlag;
   }
    
   /**
    * Gets the Charge Early Redemption Fee Flag for NASU field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Charge Early Redemption Fee Flag for NASU or the specified default value.
    */
   public final boolean getERFeeFlag( boolean defaultValue )
   {
      return _ERFeeFlag == null ? defaultValue : _ERFeeFlag.booleanValue();
   }
    
   /**
    * Gets the ADL Applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ADL Applicable or null.
    */
   public final Boolean getADLApplicable()
   {
      return _ADLApplicable;
   }
    
   /**
    * Gets the ADL Applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ADL Applicable or the specified default value.
    */
   public final boolean getADLApplicable( boolean defaultValue )
   {
      return _ADLApplicable == null ? defaultValue : _ADLApplicable.booleanValue();
   }
    
   /**
    * Gets the ADL Transtype field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ADL Transtype or null.
    */
   public final String getADLTransType()
   {
      return _ADLTransType;
   }
    
   /**
    * Gets the ADL Transtype field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ADL Transtype or the specified default value.
    */
   public final String getADLTransType( String defaultValue )
   {
      return _ADLTransType == null ? defaultValue : _ADLTransType;
   }
    
   /**
    * Gets the RedCode allowed in fund merger transaction for transfer at cost field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RedCode allowed in fund merger transaction for transfer at cost or null.
    */
   public final String getFndMrgRedCod()
   {
      return _FndMrgRedCod;
   }
    
   /**
    * Gets the RedCode allowed in fund merger transaction for transfer at cost field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RedCode allowed in fund merger transaction for transfer at cost or the specified default value.
    */
   public final String getFndMrgRedCod( String defaultValue )
   {
      return _FndMrgRedCod == null ? defaultValue : _FndMrgRedCod;
   }
    
   /**
    * Gets the NSCCCompliant field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the NSCCCompliant or null.
    */
   public final Boolean getNSCCCompliant()
   {
      return _NSCCCompliant;
   }
    
   /**
    * Gets the NSCCCompliant field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the NSCCCompliant or the specified default value.
    */
   public final boolean getNSCCCompliant( boolean defaultValue )
   {
      return _NSCCCompliant == null ? defaultValue : _NSCCCompliant.booleanValue();
   }
    
   /**
    * Gets the NSCCCurrencyList field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the NSCCCurrencyList or null.
    */
   public final String getNSCCCurrencyList()
   {
      return _NSCCCurrencyList;
   }
    
   /**
    * Gets the NSCCCurrencyList field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the NSCCCurrencyList or the specified default value.
    */
   public final String getNSCCCurrencyList( String defaultValue )
   {
      return _NSCCCurrencyList == null ? defaultValue : _NSCCCurrencyList;
   }
    
   /**
    * Gets the Redemption Codes to Exclude from STT/ER Fees field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Redemption Codes to Exclude from STT/ER Fees or null.
    */
   public final String getExclRedCodeList()
   {
      return _ExclRedCodeList;
   }
    
   /**
    * Gets the Redemption Codes to Exclude from STT/ER Fees field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Redemption Codes to Exclude from STT/ER Fees or the specified default value.
    */
   public final String getExclRedCodeList( String defaultValue )
   {
      return _ExclRedCodeList == null ? defaultValue : _ExclRedCodeList;
   }
    
   /**
    * Gets the Entity Risk Level field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Entity Risk Level or null.
    */
   public final String getEntityRiskLevel()
   {
      return _EntityRiskLevel;
   }
    
   /**
    * Gets the Entity Risk Level field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Entity Risk Level or the specified default value.
    */
   public final String getEntityRiskLevel( String defaultValue )
   {
      return _EntityRiskLevel == null ? defaultValue : _EntityRiskLevel;
   }
    
   /**
    * Gets the Equalization Set-Up field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Equalization Set-Up or null.
    */
   public final Boolean getEqualizationSetUp()
   {
      return _EqualizationSetUp;
   }
    
   /**
    * Gets the Equalization Set-Up field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Equalization Set-Up or the specified default value.
    */
   public final boolean getEqualizationSetUp( boolean defaultValue )
   {
      return _EqualizationSetUp == null ? defaultValue : _EqualizationSetUp.booleanValue();
   }
    
   /**
    * Gets the Registered Tax Types field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Registered Tax Types or null.
    */
   public final String getRegisteredTaxTypes()
   {
      return _RegisteredTaxTypes;
   }
    
   /**
    * Gets the Registered Tax Types field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Registered Tax Types or the specified default value.
    */
   public final String getRegisteredTaxTypes( String defaultValue )
   {
      return _RegisteredTaxTypes == null ? defaultValue : _RegisteredTaxTypes;
   }
    
   /**
    * Gets the Anti Dilution Calculation Method field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Anti Dilution Calculation Method or null.
    */
   public final String getAntiDilutionCalc()
   {
      return _AntiDilutionCalc;
   }
    
   /**
    * Gets the Anti Dilution Calculation Method field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Anti Dilution Calculation Method or the specified default value.
    */
   public final String getAntiDilutionCalc( String defaultValue )
   {
      return _AntiDilutionCalc == null ? defaultValue : _AntiDilutionCalc;
   }
    
   /**
    * Gets the Unit Factor Codes field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Unit Factor Codes or null.
    */
   public final String getUFactorCodes()
   {
      return _UFactorCodes;
   }
    
   /**
    * Gets the Unit Factor Codes field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Unit Factor Codes or the specified default value.
    */
   public final String getUFactorCodes( String defaultValue )
   {
      return _UFactorCodes == null ? defaultValue : _UFactorCodes;
   }
    
   /**
    * Gets the ACH Purchase field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ACH Purchase or null.
    */
   public final Boolean getACHPurch()
   {
      return _ACHPurch;
   }
    
   /**
    * Gets the ACH Purchase field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ACH Purchase or the specified default value.
    */
   public final boolean getACHPurch( boolean defaultValue )
   {
      return _ACHPurch == null ? defaultValue : _ACHPurch.booleanValue();
   }
    
   /**
    * Gets the ACH SWP field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ACH SWP or null.
    */
   public final Boolean getACHSWP()
   {
      return _ACHSWP;
   }
    
   /**
    * Gets the ACH SWP field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ACH SWP or the specified default value.
    */
   public final boolean getACHSWP( boolean defaultValue )
   {
      return _ACHSWP == null ? defaultValue : _ACHSWP.booleanValue();
   }
    
   /**
    * Gets the ACH Admin Fee field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ACH Admin Fee or null.
    */
   public final Boolean getACHAdminFee()
   {
      return _ACHAdminFee;
   }
    
   /**
    * Gets the ACH Admin Fee field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ACH Admin Fee or the specified default value.
    */
   public final boolean getACHAdminFee( boolean defaultValue )
   {
      return _ACHAdminFee == null ? defaultValue : _ACHAdminFee.booleanValue();
   }
    
   /**
    * Gets the Default Clearing ID field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Default Clearing ID or null.
    */
   public final String getClearingIdDefault()
   {
      return _ClearingIdDefault;
   }
    
   /**
    * Gets the Default Clearing ID field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Default Clearing ID or the specified default value.
    */
   public final String getClearingIdDefault( String defaultValue )
   {
      return _ClearingIdDefault == null ? defaultValue : _ClearingIdDefault;
   }
    
   /**
    * Gets the Error Account Number field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Error Account Number or null.
    */
   public final String getErrorAcctNum()
   {
      return _ErrorAcctNum;
   }
    
   /**
    * Gets the Error Account Number field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Error Account Number or the specified default value.
    */
   public final String getErrorAcctNum( String defaultValue )
   {
      return _ErrorAcctNum == null ? defaultValue : _ErrorAcctNum;
   }
    
   /**
    * Gets the Fund Broker Applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Fund Broker Applicable or null.
    */
   public final Boolean getFundBrokerApplicable()
   {
      return _FundBrokerApplicable;
   }
    
   /**
    * Gets the Fund Broker Applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Fund Broker Applicable or the specified default value.
    */
   public final boolean getFundBrokerApplicable( boolean defaultValue )
   {
      return _FundBrokerApplicable == null ? defaultValue : _FundBrokerApplicable.booleanValue();
   }
    
   /**
    * Gets the Valid Network Type field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Valid Network Type or null.
    */
   public final String getValidNetworkType()
   {
      return _ValidNetworkType;
   }
    
   /**
    * Gets the Valid Network Type field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Valid Network Type or the specified default value.
    */
   public final String getValidNetworkType( String defaultValue )
   {
      return _ValidNetworkType == null ? defaultValue : _ValidNetworkType;
   }
    
   /**
    * Gets the Network Type Update field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Network Type Update or null.
    */
   public final Boolean getNetworkTypeUpd()
   {
      return _NetworkTypeUpd;
   }
    
   /**
    * Gets the Network Type Update field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Network Type Update or the specified default value.
    */
   public final boolean getNetworkTypeUpd( boolean defaultValue )
   {
      return _NetworkTypeUpd == null ? defaultValue : _NetworkTypeUpd.booleanValue();
   }
    
   /**
    * Gets the indicates if env supports EUSD field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the indicates if env supports EUSD or null.
    */
   public final Boolean getEUSDParticip()
   {
      return _EUSDParticip;
   }
    
   /**
    * Gets the indicates if env supports EUSD field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the indicates if env supports EUSD or the specified default value.
    */
   public final boolean getEUSDParticip( boolean defaultValue )
   {
      return _EUSDParticip == null ? defaultValue : _EUSDParticip.booleanValue();
   }
    
   /**
    * Gets the Default EUSD Option field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Default EUSD Option or null.
    */
   public final String getDefEUSDOption()
   {
      return _DefEUSDOption;
   }
    
   /**
    * Gets the Default EUSD Option field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Default EUSD Option or the specified default value.
    */
   public final String getDefEUSDOption( String defaultValue )
   {
      return _DefEUSDOption == null ? defaultValue : _DefEUSDOption;
   }
    
   /**
    * Gets the Verify Cancelled Trade field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Verify Cancelled Trade or null.
    */
   public final Boolean getVerCancTrd()
   {
      return _VerCancTrd;
   }
    
   /**
    * Gets the Verify Cancelled Trade field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Verify Cancelled Trade or the specified default value.
    */
   public final boolean getVerCancTrd( boolean defaultValue )
   {
      return _VerCancTrd == null ? defaultValue : _VerCancTrd.booleanValue();
   }
    
   /**
    * Gets the Acct Cat Negative balance field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Acct Cat Negative balance or null.
    */
   public final String getActCatNegBal()
   {
      return _ActCatNegBal;
   }
    
   /**
    * Gets the Acct Cat Negative balance field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Acct Cat Negative balance or the specified default value.
    */
   public final String getActCatNegBal( String defaultValue )
   {
      return _ActCatNegBal == null ? defaultValue : _ActCatNegBal;
   }
    
   /**
    * Gets the Acct Cat Wire Settlements field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Acct Cat Wire Settlements or null.
    */
   public final String getActCatWireSett()
   {
      return _ActCatWireSett;
   }
    
   /**
    * Gets the Acct Cat Wire Settlements field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Acct Cat Wire Settlements or the specified default value.
    */
   public final String getActCatWireSett( String defaultValue )
   {
      return _ActCatWireSett == null ? defaultValue : _ActCatWireSett;
   }
    
   /**
    * Gets the API Trade Default Reason field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the API Trade Default Reason or null.
    */
   public final String getBDTradeReason()
   {
      return _BDTradeReason;
   }
    
   /**
    * Gets the API Trade Default Reason field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the API Trade Default Reason or the specified default value.
    */
   public final String getBDTradeReason( String defaultValue )
   {
      return _BDTradeReason == null ? defaultValue : _BDTradeReason;
   }
    
   /**
    * Gets the API Trade Default Accountability field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the API Trade Default Accountability or null.
    */
   public final String getBDTradeAcctable()
   {
      return _BDTradeAcctable;
   }
    
   /**
    * Gets the API Trade Default Accountability field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the API Trade Default Accountability or the specified default value.
    */
   public final String getBDTradeAcctable( String defaultValue )
   {
      return _BDTradeAcctable == null ? defaultValue : _BDTradeAcctable;
   }
    
   /**
    * Gets the OPCConfirmsBrokerScreen field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the OPCConfirmsBrokerScreen or null.
    */
   public final Boolean getOPCConfirmsBrokerScreen()
   {
      return _OPCConfirmsBrokerScreen;
   }
    
   /**
    * Gets the OPCConfirmsBrokerScreen field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the OPCConfirmsBrokerScreen or the specified default value.
    */
   public final boolean getOPCConfirmsBrokerScreen( boolean defaultValue )
   {
      return _OPCConfirmsBrokerScreen == null ? defaultValue : _OPCConfirmsBrokerScreen.booleanValue();
   }
    
   /**
    * Gets the Jumbo Pricing Applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Jumbo Pricing Applicable or null.
    */
   public final Boolean getJumboPriceApplicable()
   {
      return _JumboPriceApplicable;
   }
    
   /**
    * Gets the Jumbo Pricing Applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Jumbo Pricing Applicable or the specified default value.
    */
   public final boolean getJumboPriceApplicable( boolean defaultValue )
   {
      return _JumboPriceApplicable == null ? defaultValue : _JumboPriceApplicable.booleanValue();
   }
    
   /**
    * Gets the Date basis for clawback calculation field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Date basis for clawback calculation or null.
    */
   public final Integer getClawbackBasedOnDate()
   {
      return _ClawbackBasedOnDate;
   }
    
   /**
    * Gets the Date basis for clawback calculation field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Date basis for clawback calculation or the specified default value.
    */
   public final int getClawbackBasedOnDate( int defaultValue )
   {
      return _ClawbackBasedOnDate == null ? defaultValue : _ClawbackBasedOnDate.intValue();
   }
    
   /**
    * Gets the EUSD Option field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the EUSD Option or null.
    */
   public final String getEUSDOption()
   {
      return _EUSDOption;
   }
    
   /**
    * Gets the EUSD Option field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the EUSD Option or the specified default value.
    */
   public final String getEUSDOption( String defaultValue )
   {
      return _EUSDOption == null ? defaultValue : _EUSDOption;
   }
    
   /**
    * Gets the Suppress Inactive Funds field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Suppress Inactive Funds or null.
    */
   public final Integer getSuppressInactiveFunds()
   {
      return _SuppressInactiveFunds;
   }
    
   /**
    * Gets the Suppress Inactive Funds field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Suppress Inactive Funds or the specified default value.
    */
   public final int getSuppressInactiveFunds( int defaultValue )
   {
      return _SuppressInactiveFunds == null ? defaultValue : _SuppressInactiveFunds.intValue();
   }
    
   /**
    * Gets the List of tax exemption levels for account field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the List of tax exemption levels for account or null.
    */
   public final String getExemptLvlList()
   {
      return _ExemptLvlList;
   }
    
   /**
    * Gets the List of tax exemption levels for account field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the List of tax exemption levels for account or the specified default value.
    */
   public final String getExemptLvlList( String defaultValue )
   {
      return _ExemptLvlList == null ? defaultValue : _ExemptLvlList;
   }
    
   /**
    * Gets the Access Leve cat field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Access Leve cat or null.
    */
   public final String getAccessLevelCat()
   {
      return _AccessLevelCat;
   }
    
   /**
    * Gets the Access Leve cat field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Access Leve cat or the specified default value.
    */
   public final String getAccessLevelCat( String defaultValue )
   {
      return _AccessLevelCat == null ? defaultValue : _AccessLevelCat;
   }
    
   /**
    * Gets the Indicates if Guaranteed Withdrawal Option contract is Supported for this client field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Indicates if Guaranteed Withdrawal Option contract is Supported for this client or null.
    */
   public final Boolean getGWOSupported()
   {
      return _GWOSupported;
   }
    
   /**
    * Gets the Indicates if Guaranteed Withdrawal Option contract is Supported for this client field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Indicates if Guaranteed Withdrawal Option contract is Supported for this client or the specified default value.
    */
   public final boolean getGWOSupported( boolean defaultValue )
   {
      return _GWOSupported == null ? defaultValue : _GWOSupported.booleanValue();
   }
    
   /**
    * Gets the Indicates if assignment screen for assignee is applicable for this environment field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Indicates if assignment screen for assignee is applicable for this environment or null.
    */
   public final Boolean getAssignmentScreen()
   {
      return _AssignmentScreen;
   }
    
   /**
    * Gets the Indicates if assignment screen for assignee is applicable for this environment field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Indicates if assignment screen for assignee is applicable for this environment or the specified default value.
    */
   public final boolean getAssignmentScreen( boolean defaultValue )
   {
      return _AssignmentScreen == null ? defaultValue : _AssignmentScreen.booleanValue();
   }
    
   /**
    * Gets the Address Line 1 field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Address Line 1 or null.
    */
   public final String getAddress1()
   {
      return _Address1;
   }
    
   /**
    * Gets the Address Line 1 field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Address Line 1 or the specified default value.
    */
   public final String getAddress1( String defaultValue )
   {
      return _Address1 == null ? defaultValue : _Address1;
   }
    
   /**
    * Gets the Address Line 2 field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Address Line 2 or null.
    */
   public final String getAddress2()
   {
      return _Address2;
   }
    
   /**
    * Gets the Address Line 2 field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Address Line 2 or the specified default value.
    */
   public final String getAddress2( String defaultValue )
   {
      return _Address2 == null ? defaultValue : _Address2;
   }
    
   /**
    * Gets the Address Line 3 field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Address Line 3 or null.
    */
   public final String getAddress3()
   {
      return _Address3;
   }
    
   /**
    * Gets the Address Line 3 field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Address Line 3 or the specified default value.
    */
   public final String getAddress3( String defaultValue )
   {
      return _Address3 == null ? defaultValue : _Address3;
   }
    
   /**
    * Gets the Address Line 4 field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Address Line 4 or null.
    */
   public final String getAddress4()
   {
      return _Address4;
   }
    
   /**
    * Gets the Address Line 4 field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Address Line 4 or the specified default value.
    */
   public final String getAddress4( String defaultValue )
   {
      return _Address4 == null ? defaultValue : _Address4;
   }
    
   /**
    * Gets the Address Line 5 field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Address Line 5 or null.
    */
   public final String getAddress5()
   {
      return _Address5;
   }
    
   /**
    * Gets the Address Line 5 field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Address Line 5 or the specified default value.
    */
   public final String getAddress5( String defaultValue )
   {
      return _Address5 == null ? defaultValue : _Address5;
   }
    
   /**
    * Gets the Postal Code field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Postal Code or null.
    */
   public final String getPostalCode()
   {
      return _PostalCode;
   }
    
   /**
    * Gets the Postal Code field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Postal Code or the specified default value.
    */
   public final String getPostalCode( String defaultValue )
   {
      return _PostalCode == null ? defaultValue : _PostalCode;
   }
    
   /**
    * Gets the Country Code field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Country Code or null.
    */
   public final String getCountryCode()
   {
      return _CountryCode;
   }
    
   /**
    * Gets the Country Code field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Country Code or the specified default value.
    */
   public final String getCountryCode( String defaultValue )
   {
      return _CountryCode == null ? defaultValue : _CountryCode;
   }
    
   /**
    * Gets the Client Name field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Client Name or null.
    */
   public final String getClientName()
   {
      return _ClientName;
   }
    
   /**
    * Gets the Client Name field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Client Name or the specified default value.
    */
   public final String getClientName( String defaultValue )
   {
      return _ClientName == null ? defaultValue : _ClientName;
   }
    
   /**
    * Gets the Redemption Payment Entity Exists field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Redemption Payment Entity Exists or null.
    */
   public final Boolean getRedPayEntExist()
   {
      return _RedPayEntExist;
   }
    
   /**
    * Gets the Redemption Payment Entity Exists field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Redemption Payment Entity Exists or the specified default value.
    */
   public final boolean getRedPayEntExist( boolean defaultValue )
   {
      return _RedPayEntExist == null ? defaultValue : _RedPayEntExist.booleanValue();
   }
    
   /**
    * Gets the Is RRIF Unused Max Applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Is RRIF Unused Max Applicable or null.
    */
   public final Boolean getIsRRIFUnusedMaxApp()
   {
      return _IsRRIFUnusedMaxApp;
   }
    
   /**
    * Gets the Is RRIF Unused Max Applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Is RRIF Unused Max Applicable or the specified default value.
    */
   public final boolean getIsRRIFUnusedMaxApp( boolean defaultValue )
   {
      return _IsRRIFUnusedMaxApp == null ? defaultValue : _IsRRIFUnusedMaxApp.booleanValue();
   }
    
   /**
    * Gets the Company Code field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Company Code or null.
    */
   public final String getCompanyCode()
   {
      return _CompanyCode;
   }
    
   /**
    * Gets the Company Code field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Company Code or the specified default value.
    */
   public final String getCompanyCode( String defaultValue )
   {
      return _CompanyCode == null ? defaultValue : _CompanyCode;
   }
    
   /**
    * Gets the Joint account default disposition field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Joint account default disposition or null.
    */
   public final String getJointDisposition()
   {
      return _JointDisposition;
   }
    
   /**
    * Gets the Joint account default disposition field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Joint account default disposition or the specified default value.
    */
   public final String getJointDisposition( String defaultValue )
   {
      return _JointDisposition == null ? defaultValue : _JointDisposition;
   }
    
   /**
    * Gets the Back Withholding Tax field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Back Withholding Tax or null.
    */
   public final Boolean getBackWithholdTax()
   {
      return _BackWithholdTax;
   }
    
   /**
    * Gets the Back Withholding Tax field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Back Withholding Tax or the specified default value.
    */
   public final boolean getBackWithholdTax( boolean defaultValue )
   {
      return _BackWithholdTax == null ? defaultValue : _BackWithholdTax.booleanValue();
   }
    
   /**
    * Gets the List of trasaction Types for Consolidation field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the List of trasaction Types for Consolidation or null.
    */
   public final String getConsolTransType()
   {
      return _ConsolTransType;
   }
    
   /**
    * Gets the List of trasaction Types for Consolidation field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the List of trasaction Types for Consolidation or the specified default value.
    */
   public final String getConsolTransType( String defaultValue )
   {
      return _ConsolTransType == null ? defaultValue : _ConsolTransType;
   }
    
   /**
    * Gets the Flag indicating if consolidation applies field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicating if consolidation applies or null.
    */
   public final String getConsolidation()
   {
      return _Consolidation;
   }
    
   /**
    * Gets the Flag indicating if consolidation applies field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicating if consolidation applies or the specified default value.
    */
   public final String getConsolidation( String defaultValue )
   {
      return _Consolidation == null ? defaultValue : _Consolidation;
   }
    
   /**
    * Gets the Default consolidation Types field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Default consolidation Types or null.
    */
   public final String getConsolDefault()
   {
      return _ConsolDefault;
   }
    
   /**
    * Gets the Default consolidation Types field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Default consolidation Types or the specified default value.
    */
   public final String getConsolDefault( String defaultValue )
   {
      return _ConsolDefault == null ? defaultValue : _ConsolDefault;
   }
    
   /**
    * Gets the Purchanse Netting indicator field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Purchanse Netting indicator or null.
    */
   public final String getPurchNetting()
   {
      return _PurchNetting;
   }
    
   /**
    * Gets the Purchanse Netting indicator field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Purchanse Netting indicator or the specified default value.
    */
   public final String getPurchNetting( String defaultValue )
   {
      return _PurchNetting == null ? defaultValue : _PurchNetting;
   }
    
   /**
    * Gets the Default Order Type for Transfer field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Default Order Type for Transfer or null.
    */
   public final Integer getDftOrdTypeTR()
   {
      return _DftOrdTypeTR;
   }
    
   /**
    * Gets the Default Order Type for Transfer field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Default Order Type for Transfer or the specified default value.
    */
   public final int getDftOrdTypeTR( int defaultValue )
   {
      return _DftOrdTypeTR == null ? defaultValue : _DftOrdTypeTR.intValue();
   }
    
   /**
    * Gets the Default Order Type for Exchange field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Default Order Type for Exchange or null.
    */
   public final Integer getDftOrdTypeEX()
   {
      return _DftOrdTypeEX;
   }
    
   /**
    * Gets the Default Order Type for Exchange field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Default Order Type for Exchange or the specified default value.
    */
   public final int getDftOrdTypeEX( int defaultValue )
   {
      return _DftOrdTypeEX == null ? defaultValue : _DftOrdTypeEX.intValue();
   }
    
   /**
    * Gets the Flag indicating if order type defaults are applicable to dsk field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicating if order type defaults are applicable to dsk or null.
    */
   public final Boolean getDftOrdTypeApplicDSK()
   {
      return _DftOrdTypeApplicDSK;
   }
    
   /**
    * Gets the Flag indicating if order type defaults are applicable to dsk field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicating if order type defaults are applicable to dsk or the specified default value.
    */
   public final boolean getDftOrdTypeApplicDSK( boolean defaultValue )
   {
      return _DftOrdTypeApplicDSK == null ? defaultValue : _DftOrdTypeApplicDSK.booleanValue();
   }
    
   /**
    * Gets the CSS Stop SIN Match field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the CSS Stop SIN Match or null.
    */
   public final Boolean getCSSStopSINMatch()
   {
      return _CSSStopSINMatch;
   }
    
   /**
    * Gets the CSS Stop SIN Match field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the CSS Stop SIN Match or the specified default value.
    */
   public final boolean getCSSStopSINMatch( boolean defaultValue )
   {
      return _CSSStopSINMatch == null ? defaultValue : _CSSStopSINMatch.booleanValue();
   }
    
   /**
    * Gets the AMS Frequency Override field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the AMS Frequency Override or null.
    */
   public final Boolean getAMSFreqOvrd()
   {
      return _AMSFreqOvrd;
   }
    
   /**
    * Gets the AMS Frequency Override field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the AMS Frequency Override or the specified default value.
    */
   public final boolean getAMSFreqOvrd( boolean defaultValue )
   {
      return _AMSFreqOvrd == null ? defaultValue : _AMSFreqOvrd.booleanValue();
   }
    
   /**
    * Gets the Rebalance Day field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Rebalance Day or null.
    */
   public final Integer getRebalanceDay()
   {
      return _RebalanceDay;
   }
    
   /**
    * Gets the Rebalance Day field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Rebalance Day or the specified default value.
    */
   public final int getRebalanceDay( int defaultValue )
   {
      return _RebalanceDay == null ? defaultValue : _RebalanceDay.intValue();
   }
    
   /**
    * Gets the Check Allowable Transfers field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Check Allowable Transfers or null.
    */
   public final Boolean getChkAllowTfr()
   {
      return _ChkAllowTfr;
   }
    
   /**
    * Gets the Check Allowable Transfers field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Check Allowable Transfers or the specified default value.
    */
   public final boolean getChkAllowTfr( boolean defaultValue )
   {
      return _ChkAllowTfr == null ? defaultValue : _ChkAllowTfr.booleanValue();
   }
    
   /**
    * Gets the KYC Level field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the KYC Level or null.
    */
   public final String getKYCLevel()
   {
      return _KYCLevel;
   }
    
   /**
    * Gets the KYC Level field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the KYC Level or the specified default value.
    */
   public final String getKYCLevel( String defaultValue )
   {
      return _KYCLevel == null ? defaultValue : _KYCLevel;
   }
    
   /**
    * Gets the MFRCorporateFund field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the MFRCorporateFund or null.
    */
   public final Boolean getMFRCorporateFund()
   {
      return _MFRCorporateFund;
   }
    
   /**
    * Gets the MFRCorporateFund field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the MFRCorporateFund or the specified default value.
    */
   public final boolean getMFRCorporateFund( boolean defaultValue )
   {
      return _MFRCorporateFund == null ? defaultValue : _MFRCorporateFund.booleanValue();
   }
    
   /**
    * Gets the Net of Fee Start Date field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Net of Fee Start Date or null.
    */
   public final Date getNetOfFeeStrDt()
   {
      return _NetOfFeeStrDt;
   }
    
   /**
    * Gets the Net of Fee Start Date field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Net of Fee Start Date or the specified default value.
    */
   public final Date getNetOfFeeStrDt( Date defaultValue )
   {
      return _NetOfFeeStrDt == null ? defaultValue : _NetOfFeeStrDt;
   }
    
   /**
    * Gets the Display Historical Unit ACB field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Display Historical Unit ACB or null.
    */
   public final Boolean getDispHistUnitACB()
   {
      return _DispHistUnitACB;
   }
    
   /**
    * Gets the Display Historical Unit ACB field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Display Historical Unit ACB or the specified default value.
    */
   public final boolean getDispHistUnitACB( boolean defaultValue )
   {
      return _DispHistUnitACB == null ? defaultValue : _DispHistUnitACB.booleanValue();
   }
    
   /**
    * Gets the Dividend Dates field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Dividend Dates or null.
    */
   public final Integer getDivDates()
   {
      return _DivDates;
   }
    
   /**
    * Gets the Dividend Dates field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Dividend Dates or the specified default value.
    */
   public final int getDivDates( int defaultValue )
   {
      return _DivDates == null ? defaultValue : _DivDates.intValue();
   }
    
   /**
    * Gets the Switch Bank field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Switch Bank or null.
    */
   public final Boolean getSwitchBank()
   {
      return _SwitchBank;
   }
    
   /**
    * Gets the Switch Bank field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Switch Bank or the specified default value.
    */
   public final boolean getSwitchBank( boolean defaultValue )
   {
      return _SwitchBank == null ? defaultValue : _SwitchBank.booleanValue();
   }
    
   /**
    * Gets the Check Closed Batch field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Check Closed Batch or null.
    */
   public final Boolean getCheckClosedBatch()
   {
      return _CheckClosedBatch;
   }
    
   /**
    * Gets the Check Closed Batch field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Check Closed Batch or the specified default value.
    */
   public final boolean getCheckClosedBatch( boolean defaultValue )
   {
      return _CheckClosedBatch == null ? defaultValue : _CheckClosedBatch.booleanValue();
   }
    
   /**
    * Gets the Default Fee Option field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Default Fee Option or null.
    */
   public final String getDefltFeeOption()
   {
      return _DefltFeeOption;
   }
    
   /**
    * Gets the Default Fee Option field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Default Fee Option or the specified default value.
    */
   public final String getDefltFeeOption( String defaultValue )
   {
      return _DefltFeeOption == null ? defaultValue : _DefltFeeOption;
   }
    
   /**
    * Gets the Online Entity Exception field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Online Entity Exception or null.
    */
   public final String getOnLineEntExcept()
   {
      return _OnLineEntExcept;
   }
    
   /**
    * Gets the Online Entity Exception field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Online Entity Exception or the specified default value.
    */
   public final String getOnLineEntExcept( String defaultValue )
   {
      return _OnLineEntExcept == null ? defaultValue : _OnLineEntExcept;
   }
    
   /**
    * Gets the Indicate if the environment supports the additional rounding methods field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Indicate if the environment supports the additional rounding methods or null.
    */
   public final Boolean getAdlRndMethodAllow()
   {
      return _AdlRndMethodAllow;
   }
    
   /**
    * Gets the Indicate if the environment supports the additional rounding methods field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Indicate if the environment supports the additional rounding methods or the specified default value.
    */
   public final boolean getAdlRndMethodAllow( boolean defaultValue )
   {
      return _AdlRndMethodAllow == null ? defaultValue : _AdlRndMethodAllow.booleanValue();
   }
    
   /**
    * Gets the Rounding Method at Environment Level field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Rounding Method at Environment Level or null.
    */
   public final String getDfltRoundMethod()
   {
      return _DfltRoundMethod;
   }
    
   /**
    * Gets the Rounding Method at Environment Level field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Rounding Method at Environment Level or the specified default value.
    */
   public final String getDfltRoundMethod( String defaultValue )
   {
      return _DfltRoundMethod == null ? defaultValue : _DfltRoundMethod;
   }
    
   /**
    * Gets the Account Regulation Rule Exists field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Account Regulation Rule Exists or null.
    */
   public final Boolean getAcctRegRuleExists()
   {
      return _AcctRegRuleExists;
   }
    
   /**
    * Gets the Account Regulation Rule Exists field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Account Regulation Rule Exists or the specified default value.
    */
   public final boolean getAcctRegRuleExists( boolean defaultValue )
   {
      return _AcctRegRuleExists == null ? defaultValue : _AcctRegRuleExists.booleanValue();
   }
    
   /**
    * Gets the Death Claim Rule Exists field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Death Claim Rule Exists or null.
    */
   public final Boolean getDeathClaimRuleExists()
   {
      return _DeathClaimRuleExists;
   }
    
   /**
    * Gets the Death Claim Rule Exists field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Death Claim Rule Exists or the specified default value.
    */
   public final boolean getDeathClaimRuleExists( boolean defaultValue )
   {
      return _DeathClaimRuleExists == null ? defaultValue : _DeathClaimRuleExists.booleanValue();
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'UNREG' field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the all tax types with TaxTypes.PlanType = 'UNREG' or null.
    */
   public final String getUnregPlan()
   {
      return _UnregPlan;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'UNREG' field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the all tax types with TaxTypes.PlanType = 'UNREG' or the specified default value.
    */
   public final String getUnregPlan( String defaultValue )
   {
      return _UnregPlan == null ? defaultValue : _UnregPlan;
   }
    
   /**
    * Gets the  field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the  or null.
    */
   public final String getNonregLike()
   {
      return _NonregLike;
   }
    
   /**
    * Gets the  field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the  or the specified default value.
    */
   public final String getNonregLike( String defaultValue )
   {
      return _NonregLike == null ? defaultValue : _NonregLike;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'RIF' and TaxTypes.SelfDirected = No field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the all tax types with TaxTypes.PlanType = 'RIF' and TaxTypes.SelfDirected = No or null.
    */
   public final String getIntRIFPlan()
   {
      return _IntRIFPlan;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'RIF' and TaxTypes.SelfDirected = No field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the all tax types with TaxTypes.PlanType = 'RIF' and TaxTypes.SelfDirected = No or the specified default value.
    */
   public final String getIntRIFPlan( String defaultValue )
   {
      return _IntRIFPlan == null ? defaultValue : _IntRIFPlan;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'RIF' and TaxTypes.SelfDirected = Yes field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the all tax types with TaxTypes.PlanType = 'RIF' and TaxTypes.SelfDirected = Yes or null.
    */
   public final String getExtRIFPlan()
   {
      return _ExtRIFPlan;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'RIF' and TaxTypes.SelfDirected = Yes field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the all tax types with TaxTypes.PlanType = 'RIF' and TaxTypes.SelfDirected = Yes or the specified default value.
    */
   public final String getExtRIFPlan( String defaultValue )
   {
      return _ExtRIFPlan == null ? defaultValue : _ExtRIFPlan;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'RIF' field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the all tax types with TaxTypes.PlanType = 'RIF' or null.
    */
   public final String getAllRIFPlan()
   {
      return _AllRIFPlan;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'RIF' field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the all tax types with TaxTypes.PlanType = 'RIF' or the specified default value.
    */
   public final String getAllRIFPlan( String defaultValue )
   {
      return _AllRIFPlan == null ? defaultValue : _AllRIFPlan;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'LIRA' and TaxTypes.SelfDirected = No field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the all tax types with TaxTypes.PlanType = 'LIRA' and TaxTypes.SelfDirected = No or null.
    */
   public final String getIntLIRAPlan()
   {
      return _IntLIRAPlan;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'LIRA' and TaxTypes.SelfDirected = No field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the all tax types with TaxTypes.PlanType = 'LIRA' and TaxTypes.SelfDirected = No or the specified default value.
    */
   public final String getIntLIRAPlan( String defaultValue )
   {
      return _IntLIRAPlan == null ? defaultValue : _IntLIRAPlan;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'LIRA' field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the all tax types with TaxTypes.PlanType = 'LIRA' or null.
    */
   public final String getAllLIRAPlan()
   {
      return _AllLIRAPlan;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'LIRA' field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the all tax types with TaxTypes.PlanType = 'LIRA' or the specified default value.
    */
   public final String getAllLIRAPlan( String defaultValue )
   {
      return _AllLIRAPlan == null ? defaultValue : _AllLIRAPlan;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'RESP' and TaxTypes.SelfDirected = No field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the all tax types with TaxTypes.PlanType = 'RESP' and TaxTypes.SelfDirected = No or null.
    */
   public final String getIntRESP()
   {
      return _IntRESP;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'RESP' and TaxTypes.SelfDirected = No field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the all tax types with TaxTypes.PlanType = 'RESP' and TaxTypes.SelfDirected = No or the specified default value.
    */
   public final String getIntRESP( String defaultValue )
   {
      return _IntRESP == null ? defaultValue : _IntRESP;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'RSP' and TaxTypes.SelfDirected = No field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the all tax types with TaxTypes.PlanType = 'RSP' and TaxTypes.SelfDirected = No or null.
    */
   public final String getIntRSP()
   {
      return _IntRSP;
   }
    
   /**
    * Gets the all tax types with TaxTypes.PlanType = 'RSP' and TaxTypes.SelfDirected = No field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the all tax types with TaxTypes.PlanType = 'RSP' and TaxTypes.SelfDirected = No or the specified default value.
    */
   public final String getIntRSP( String defaultValue )
   {
      return _IntRSP == null ? defaultValue : _IntRSP;
   }
    
   /**
    * Gets the Flag indicates if changing country for address should be applied to provres and tax juris at shareholder level field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicates if changing country for address should be applied to provres and tax juris at shareholder level or null.
    */
   public final Boolean getTaxJurisUpdateOpt()
   {
      return _TaxJurisUpdateOpt;
   }
    
   /**
    * Gets the Flag indicates if changing country for address should be applied to provres and tax juris at shareholder level field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicates if changing country for address should be applied to provres and tax juris at shareholder level or the specified default value.
    */
   public final boolean getTaxJurisUpdateOpt( boolean defaultValue )
   {
      return _TaxJurisUpdateOpt == null ? defaultValue : _TaxJurisUpdateOpt.booleanValue();
   }
    
   /**
    * Gets the Flag indicates if alert box should be pop up for the returned mail or stale dated cheque field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicates if alert box should be pop up for the returned mail or stale dated cheque or null.
    */
   public final Boolean getRetMailOrStlDtChqAlert()
   {
      return _RetMailOrStlDtChqAlert;
   }
    
   /**
    * Gets the Flag indicates if alert box should be pop up for the returned mail or stale dated cheque field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicates if alert box should be pop up for the returned mail or stale dated cheque or the specified default value.
    */
   public final boolean getRetMailOrStlDtChqAlert( boolean defaultValue )
   {
      return _RetMailOrStlDtChqAlert == null ? defaultValue : _RetMailOrStlDtChqAlert.booleanValue();
   }
    
   /**
    * Gets the List of death claim redemption code that should allow transfer regardless of Valid Transfer set up in the Tax Type configuration field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the List of death claim redemption code that should allow transfer regardless of Valid Transfer set up in the Tax Type configuration or null.
    */
   public final String getDeathClaimRedCodes()
   {
      return _DeathClaimRedCodes;
   }
    
   /**
    * Gets the List of death claim redemption code that should allow transfer regardless of Valid Transfer set up in the Tax Type configuration field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the List of death claim redemption code that should allow transfer regardless of Valid Transfer set up in the Tax Type configuration or the specified default value.
    */
   public final String getDeathClaimRedCodes( String defaultValue )
   {
      return _DeathClaimRedCodes == null ? defaultValue : _DeathClaimRedCodes;
   }
    
   /**
    * Gets the  field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the  or null.
    */
   public final String getIntLockInPlan()
   {
      return _IntLockInPlan;
   }
    
   /**
    * Gets the  field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the  or the specified default value.
    */
   public final String getIntLockInPlan( String defaultValue )
   {
      return _IntLockInPlan == null ? defaultValue : _IntLockInPlan;
   }
    
   /**
    * Gets the Allowed Tax Type field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Allowed Tax Type or null.
    */
   public final String getAlwdTaxType()
   {
      return _AlwdTaxType;
   }
    
   /**
    * Gets the Allowed Tax Type field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Allowed Tax Type or the specified default value.
    */
   public final String getAlwdTaxType( String defaultValue )
   {
      return _AlwdTaxType == null ? defaultValue : _AlwdTaxType;
   }
    
   /**
    * Gets the LIRA plans (C and CR) field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the LIRA plans (C and CR) or null.
    */
   public final String getLIRAPlan()
   {
      return _LIRAPlan;
   }
    
   /**
    * Gets the LIRA plans (C and CR) field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the LIRA plans (C and CR) or the specified default value.
    */
   public final String getLIRAPlan( String defaultValue )
   {
      return _LIRAPlan == null ? defaultValue : _LIRAPlan;
   }
    
   /**
    * Gets the Internal LIF plans (B and BR) field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Internal LIF plans (B and BR) or null.
    */
   public final String getIntLIF()
   {
      return _IntLIF;
   }
    
   /**
    * Gets the Internal LIF plans (B and BR) field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Internal LIF plans (B and BR) or the specified default value.
    */
   public final String getIntLIF( String defaultValue )
   {
      return _IntLIF == null ? defaultValue : _IntLIF;
   }
    
   /**
    * Gets the Flag indicating if FEL commission is applicable for env field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicating if FEL commission is applicable for env or null.
    */
   public final Boolean getFELCommOnGrant()
   {
      return _FELCommOnGrant;
   }
    
   /**
    * Gets the Flag indicating if FEL commission is applicable for env field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicating if FEL commission is applicable for env or the specified default value.
    */
   public final boolean getFELCommOnGrant( boolean defaultValue )
   {
      return _FELCommOnGrant == null ? defaultValue : _FELCommOnGrant.booleanValue();
   }
    
   /**
    * Gets the Comma delimited List of all allocation types required broker/fund eligibility validation field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Comma delimited List of all allocation types required broker/fund eligibility validation or null.
    */
   public final String getAllocTypeForValidation()
   {
      return _AllocTypeForValidation;
   }
    
   /**
    * Gets the Comma delimited List of all allocation types required broker/fund eligibility validation field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Comma delimited List of all allocation types required broker/fund eligibility validation or the specified default value.
    */
   public final String getAllocTypeForValidation( String defaultValue )
   {
      return _AllocTypeForValidation == null ? defaultValue : _AllocTypeForValidation;
   }
    
   /**
    * Gets the TFSA Tax Types field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the TFSA Tax Types or null.
    */
   public final String getTFSATaxType()
   {
      return _TFSATaxType;
   }
    
   /**
    * Gets the TFSA Tax Types field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the TFSA Tax Types or the specified default value.
    */
   public final String getTFSATaxType( String defaultValue )
   {
      return _TFSATaxType == null ? defaultValue : _TFSATaxType;
   }
    
   /**
    * Gets the Automatic Batch field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Automatic Batch or null.
    */
   public final Integer getAutoBatch()
   {
      return _AutoBatch;
   }
    
   /**
    * Gets the Automatic Batch field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Automatic Batch or the specified default value.
    */
   public final int getAutoBatch( int defaultValue )
   {
      return _AutoBatch == null ? defaultValue : _AutoBatch.intValue();
   }
    
   /**
    * Gets the Flag indicating if Closed Country is applicable applied for client or not field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicating if Closed Country is applicable applied for client or not or null.
    */
   public final Boolean getClosedCountryApplicable()
   {
      return _ClosedCountryApplicable;
   }
    
   /**
    * Gets the Flag indicating if Closed Country is applicable applied for client or not field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicating if Closed Country is applicable applied for client or not or the specified default value.
    */
   public final boolean getClosedCountryApplicable( boolean defaultValue )
   {
      return _ClosedCountryApplicable == null ? defaultValue : _ClosedCountryApplicable.booleanValue();
   }
    
   /**
    * Gets the Flag indicating if Lookup button will be enabled in the address screen field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicating if Lookup button will be enabled in the address screen or null.
    */
   public final Boolean getDskPCLookEnb()
   {
      return _DskPCLookEnb;
   }
    
   /**
    * Gets the Flag indicating if Lookup button will be enabled in the address screen field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicating if Lookup button will be enabled in the address screen or the specified default value.
    */
   public final boolean getDskPCLookEnb( boolean defaultValue )
   {
      return _DskPCLookEnb == null ? defaultValue : _DskPCLookEnb.booleanValue();
   }
    
   /**
    * Gets the Flag indicates if direct deposit EFT redemption is applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicates if direct deposit EFT redemption is applicable or null.
    */
   public final Boolean getDirectDepositBankApplicable()
   {
      return _DirectDepositBankApplicable;
   }
    
   /**
    * Gets the Flag indicates if direct deposit EFT redemption is applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicates if direct deposit EFT redemption is applicable or the specified default value.
    */
   public final boolean getDirectDepositBankApplicable( boolean defaultValue )
   {
      return _DirectDepositBankApplicable == null ? defaultValue : _DirectDepositBankApplicable.booleanValue();
   }
    
   /**
    * Gets the Version Label field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Version Label or null.
    */
   public final String getVersionLabel()
   {
      return _VersionLabel;
   }
    
   /**
    * Gets the Version Label field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Version Label or the specified default value.
    */
   public final String getVersionLabel( String defaultValue )
   {
      return _VersionLabel == null ? defaultValue : _VersionLabel;
   }
    
   /**
    * Gets the Company URL field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Company URL or null.
    */
   public final String getCompanyURL()
   {
      return _CompanyURL;
   }
    
   /**
    * Gets the Company URL field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Company URL or the specified default value.
    */
   public final String getCompanyURL( String defaultValue )
   {
      return _CompanyURL == null ? defaultValue : _CompanyURL;
   }
    
   /**
    * Gets the Indicates if environment support multi settlement locations field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Indicates if environment support multi settlement locations or null.
    */
   public final Integer getSettleLocOpt()
   {
      return _SettleLocOpt;
   }
    
   /**
    * Gets the Indicates if environment support multi settlement locations field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Indicates if environment support multi settlement locations or the specified default value.
    */
   public final int getSettleLocOpt( int defaultValue )
   {
      return _SettleLocOpt == null ? defaultValue : _SettleLocOpt.intValue();
   }
    
   /**
    * Gets the Flag indicates if Traded Unit Functionality is active field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicates if Traded Unit Functionality is active or null.
    */
   public final Boolean getTUPActive()
   {
      return _TUPActive;
   }
    
   /**
    * Gets the Flag indicates if Traded Unit Functionality is active field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicates if Traded Unit Functionality is active or the specified default value.
    */
   public final boolean getTUPActive( boolean defaultValue )
   {
      return _TUPActive == null ? defaultValue : _TUPActive.booleanValue();
   }
    
   /**
    * Gets the RESP Age Limits field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RESP Age Limits or null.
    */
   public final String getTerminationAgeBeforeDeff()
   {
      return _TerminationAgeBeforeDeff;
   }
    
   /**
    * Gets the RESP Age Limits field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RESP Age Limits or the specified default value.
    */
   public final String getTerminationAgeBeforeDeff( String defaultValue )
   {
      return _TerminationAgeBeforeDeff == null ? defaultValue : _TerminationAgeBeforeDeff;
   }
    
   /**
    * Gets the RESP Age Limits field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RESP Age Limits or null.
    */
   public final String getTerminationAgeAfterDeff()
   {
      return _TerminationAgeAfterDeff;
   }
    
   /**
    * Gets the RESP Age Limits field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RESP Age Limits or the specified default value.
    */
   public final String getTerminationAgeAfterDeff( String defaultValue )
   {
      return _TerminationAgeAfterDeff == null ? defaultValue : _TerminationAgeAfterDeff;
   }
    
   /**
    * Gets the RESP Age Limits field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RESP Age Limits or null.
    */
   public final Date getRESPAgeLimitsDeff()
   {
      return _RESPAgeLimitsDeff;
   }
    
   /**
    * Gets the RESP Age Limits field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RESP Age Limits or the specified default value.
    */
   public final Date getRESPAgeLimitsDeff( Date defaultValue )
   {
      return _RESPAgeLimitsDeff == null ? defaultValue : _RESPAgeLimitsDeff;
   }
    
   /**
    * Gets the Guarantee Guard On field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Guarantee Guard On or null.
    */
   public final Boolean getGuaranteeGuardOn()
   {
      return _GuaranteeGuardOn;
   }
    
   /**
    * Gets the Guarantee Guard On field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Guarantee Guard On or the specified default value.
    */
   public final boolean getGuaranteeGuardOn( boolean defaultValue )
   {
      return _GuaranteeGuardOn == null ? defaultValue : _GuaranteeGuardOn.booleanValue();
   }
    
   /**
    * Gets the Flag indicates if new Trailer Fee  Architecture is active field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicates if new Trailer Fee  Architecture is active or null.
    */
   public final Boolean getTrailerFeeArch()
   {
      return _TrailerFeeArch;
   }
    
   /**
    * Gets the Flag indicates if new Trailer Fee  Architecture is active field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicates if new Trailer Fee  Architecture is active or the specified default value.
    */
   public final boolean getTrailerFeeArch( boolean defaultValue )
   {
      return _TrailerFeeArch == null ? defaultValue : _TrailerFeeArch.booleanValue();
   }
    
   /**
    * Gets the  field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the  or null.
    */
   public final Boolean getAllowChqChange()
   {
      return _AllowChqChange;
   }
    
   /**
    * Gets the  field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the  or the specified default value.
    */
   public final boolean getAllowChqChange( boolean defaultValue )
   {
      return _AllowChqChange == null ? defaultValue : _AllowChqChange.booleanValue();
   }
    
   /**
    * Gets the List of TFSA Account Category Codes field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the List of TFSA Account Category Codes or null.
    */
   public final String getTFSAAcctCatCode()
   {
      return _TFSAAcctCatCode;
   }
    
   /**
    * Gets the List of TFSA Account Category Codes field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the List of TFSA Account Category Codes or the specified default value.
    */
   public final String getTFSAAcctCatCode( String defaultValue )
   {
      return _TFSAAcctCatCode == null ? defaultValue : _TFSAAcctCatCode;
   }
    
   /**
    * Gets the List of RRSP Account Category Codes field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the List of RRSP Account Category Codes or null.
    */
   public final String getRRSPAcctCatCode()
   {
      return _RRSPAcctCatCode;
   }
    
   /**
    * Gets the List of RRSP Account Category Codes field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the List of RRSP Account Category Codes or the specified default value.
    */
   public final String getRRSPAcctCatCode( String defaultValue )
   {
      return _RRSPAcctCatCode == null ? defaultValue : _RRSPAcctCatCode;
   }
    
   /**
    * Gets the Network Response Required Applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Network Response Required Applicable or null.
    */
   public final Boolean getNetworkRespReqApplicable()
   {
      return _NetworkRespReqApplicable;
   }
    
   /**
    * Gets the Network Response Required Applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Network Response Required Applicable or the specified default value.
    */
   public final boolean getNetworkRespReqApplicable( boolean defaultValue )
   {
      return _NetworkRespReqApplicable == null ? defaultValue : _NetworkRespReqApplicable.booleanValue();
   }
    
   /**
    * Gets the Network ID for Amount Trade field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Network ID for Amount Trade or null.
    */
   public final String getNetworkIDForAmountTrade()
   {
      return _NetworkIDForAmountTrade;
   }
    
   /**
    * Gets the Network ID for Amount Trade field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Network ID for Amount Trade or the specified default value.
    */
   public final String getNetworkIDForAmountTrade( String defaultValue )
   {
      return _NetworkIDForAmountTrade == null ? defaultValue : _NetworkIDForAmountTrade;
   }
    
   /**
    * Gets the Flag indicates that EFT consolidation is allowed for all transaction types field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicates that EFT consolidation is allowed for all transaction types or null.
    */
   public final Boolean getAllEFTConsolActive()
   {
      return _AllEFTConsolActive;
   }
    
   /**
    * Gets the Flag indicates that EFT consolidation is allowed for all transaction types field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicates that EFT consolidation is allowed for all transaction types or the specified default value.
    */
   public final boolean getAllEFTConsolActive( boolean defaultValue )
   {
      return _AllEFTConsolActive == null ? defaultValue : _AllEFTConsolActive.booleanValue();
   }
    
   /**
    * Gets the The Type of Bulk Back Date field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the The Type of Bulk Back Date or null.
    */
   public final Integer getBulkBackDate()
   {
      return _BulkBackDate;
   }
    
   /**
    * Gets the The Type of Bulk Back Date field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the The Type of Bulk Back Date or the specified default value.
    */
   public final int getBulkBackDate( int defaultValue )
   {
      return _BulkBackDate == null ? defaultValue : _BulkBackDate.intValue();
   }
    
   /**
    * Gets the  field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the  or null.
    */
   public final Boolean getAllEFTConsolShLv()
   {
      return _AllEFTConsolShLv;
   }
    
   /**
    * Gets the  field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the  or the specified default value.
    */
   public final boolean getAllEFTConsolShLv( boolean defaultValue )
   {
      return _AllEFTConsolShLv == null ? defaultValue : _AllEFTConsolShLv.booleanValue();
   }
    
   /**
    * Gets the Flag to indicate the ACB offset unit value field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag to indicate the ACB offset unit value or null.
    */
   public final Boolean getACBUnitOffset()
   {
      return _ACBUnitOffset;
   }
    
   /**
    * Gets the Flag to indicate the ACB offset unit value field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag to indicate the ACB offset unit value or the specified default value.
    */
   public final boolean getACBUnitOffset( boolean defaultValue )
   {
      return _ACBUnitOffset == null ? defaultValue : _ACBUnitOffset.booleanValue();
   }
    
   /**
    * Gets the EAP Earning Code field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the EAP Earning Code or null.
    */
   public final String getEAPEarningCodes()
   {
      return _EAPEarningCodes;
   }
    
   /**
    * Gets the EAP Earning Code field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the EAP Earning Code or the specified default value.
    */
   public final String getEAPEarningCodes( String defaultValue )
   {
      return _EAPEarningCodes == null ? defaultValue : _EAPEarningCodes;
   }
    
   /**
    * Gets the flag to indicate that the environment is IWT or not field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the flag to indicate that the environment is IWT or not or null.
    */
   public final Boolean getIrishWithTax()
   {
      return _IrishWithTax;
   }
    
   /**
    * Gets the flag to indicate that the environment is IWT or not field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the flag to indicate that the environment is IWT or not or the specified default value.
    */
   public final boolean getIrishWithTax( boolean defaultValue )
   {
      return _IrishWithTax == null ? defaultValue : _IrishWithTax.booleanValue();
   }
    
   /**
    * Gets the flag to indicate the tax jurisdiction list for IWT field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the flag to indicate the tax jurisdiction list for IWT or null.
    */
   public final String getIWTTaxJurisList()
   {
      return _IWTTaxJurisList;
   }
    
   /**
    * Gets the flag to indicate the tax jurisdiction list for IWT field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the flag to indicate the tax jurisdiction list for IWT or the specified default value.
    */
   public final String getIWTTaxJurisList( String defaultValue )
   {
      return _IWTTaxJurisList == null ? defaultValue : _IWTTaxJurisList;
   }
    
   /**
    * Gets the NonReceipt Applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the NonReceipt Applicable or null.
    */
   public final Boolean getNonReceiptApplicable()
   {
      return _NonReceiptApplicable;
   }
    
   /**
    * Gets the NonReceipt Applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the NonReceipt Applicable or the specified default value.
    */
   public final boolean getNonReceiptApplicable( boolean defaultValue )
   {
      return _NonReceiptApplicable == null ? defaultValue : _NonReceiptApplicable.booleanValue();
   }
    
   /**
    * Gets the Flag indicates if new functionality is active field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicates if new functionality is active or null.
    */
   public final Boolean getGuaranteeCalcByRules()
   {
      return _GuaranteeCalcByRules;
   }
    
   /**
    * Gets the Flag indicates if new functionality is active field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicates if new functionality is active or the specified default value.
    */
   public final boolean getGuaranteeCalcByRules( boolean defaultValue )
   {
      return _GuaranteeCalcByRules == null ? defaultValue : _GuaranteeCalcByRules.booleanValue();
   }
    
   /**
    * Gets the Flag indicates Portfolio required field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag indicates Portfolio required or null.
    */
   public final Boolean getPorfolioIsRequried()
   {
      return _PorfolioIsRequried;
   }
    
   /**
    * Gets the Flag indicates Portfolio required field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag indicates Portfolio required or the specified default value.
    */
   public final boolean getPorfolioIsRequried( boolean defaultValue )
   {
      return _PorfolioIsRequried == null ? defaultValue : _PorfolioIsRequried.booleanValue();
   }
    
   /**
    * Gets the Source of Fund List field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Source of Fund List or null.
    */
   public final String getSOFforSGMR()
   {
      return _SOFforSGMR;
   }
    
   /**
    * Gets the Source of Fund List field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Source of Fund List or the specified default value.
    */
   public final String getSOFforSGMR( String defaultValue )
   {
      return _SOFforSGMR == null ? defaultValue : _SOFforSGMR;
   }
    
   /**
    * Gets the Source of Fund field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Source of Fund or null.
    */
   public final String getSourceOfFund()
   {
      return _SourceOfFund;
   }
    
   /**
    * Gets the Source of Fund field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Source of Fund or the specified default value.
    */
   public final String getSourceOfFund( String defaultValue )
   {
      return _SourceOfFund == null ? defaultValue : _SourceOfFund;
   }
    
   /**
    * Gets the Statement Frequency Default field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Statement Frequency Default or null.
    */
   public final String getStmtFreqDefault()
   {
      return _StmtFreqDefault;
   }
    
   /**
    * Gets the Statement Frequency Default field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Statement Frequency Default or the specified default value.
    */
   public final String getStmtFreqDefault( String defaultValue )
   {
      return _StmtFreqDefault == null ? defaultValue : _StmtFreqDefault;
   }
    
   /**
    * Gets the Statement Frequency List field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Statement Frequency List or null.
    */
   public final String getStmtFreqList()
   {
      return _StmtFreqList;
   }
    
   /**
    * Gets the Statement Frequency List field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Statement Frequency List or the specified default value.
    */
   public final String getStmtFreqList( String defaultValue )
   {
      return _StmtFreqList == null ? defaultValue : _StmtFreqList;
   }
    
   /**
    * Gets the RedCodes for Guarantee Override field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RedCodes for Guarantee Override or null.
    */
   public final String getRedCodesOverride()
   {
      return _RedCodesOverride;
   }
    
   /**
    * Gets the RedCodes for Guarantee Override field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RedCodes for Guarantee Override or the specified default value.
    */
   public final String getRedCodesOverride( String defaultValue )
   {
      return _RedCodesOverride == null ? defaultValue : _RedCodesOverride;
   }
    
   /**
    * Gets the CPF Active Flag field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the CPF Active Flag or null.
    */
   public final Boolean getCPFActiveFlag()
   {
      return _CPFActiveFlag;
   }
    
   /**
    * Gets the CPF Active Flag field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the CPF Active Flag or the specified default value.
    */
   public final boolean getCPFActiveFlag( boolean defaultValue )
   {
      return _CPFActiveFlag == null ? defaultValue : _CPFActiveFlag.booleanValue();
   }
    
   /**
    * Gets the Non Financial Confirm Flag field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Non Financial Confirm Flag or null.
    */
   public final Boolean getPrintAcctConf()
   {
      return _PrintAcctConf;
   }
    
   /**
    * Gets the Non Financial Confirm Flag field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Non Financial Confirm Flag or the specified default value.
    */
   public final boolean getPrintAcctConf( boolean defaultValue )
   {
      return _PrintAcctConf == null ? defaultValue : _PrintAcctConf.booleanValue();
   }
    
   /**
    * Gets the Language Default field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Language Default or null.
    */
   public final String getLanguageDefault()
   {
      return _LanguageDefault;
   }
    
   /**
    * Gets the Language Default field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Language Default or the specified default value.
    */
   public final String getLanguageDefault( String defaultValue )
   {
      return _LanguageDefault == null ? defaultValue : _LanguageDefault;
   }
    
   /**
    * Gets the Employee Agent App field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Employee Agent App or null.
    */
   public final Boolean getEmpAgentApp()
   {
      return _EmpAgentApp;
   }
    
   /**
    * Gets the Employee Agent App field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Employee Agent App or the specified default value.
    */
   public final boolean getEmpAgentApp( boolean defaultValue )
   {
      return _EmpAgentApp == null ? defaultValue : _EmpAgentApp.booleanValue();
   }
    
   /**
    * Gets the  field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the  or null.
    */
   public final Boolean getFundEliPSG()
   {
      return _FundEliPSG;
   }
    
   /**
    * Gets the  field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the  or the specified default value.
    */
   public final boolean getFundEliPSG( boolean defaultValue )
   {
      return _FundEliPSG == null ? defaultValue : _FundEliPSG.booleanValue();
   }
    
   /**
    * Gets the FundSERV Broker validation field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the FundSERV Broker validation or null.
    */
   public final Boolean getFundSERVValidation()
   {
      return _FundSERVValidation;
   }
    
   /**
    * Gets the FundSERV Broker validation field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the FundSERV Broker validation or the specified default value.
    */
   public final boolean getFundSERVValidation( boolean defaultValue )
   {
      return _FundSERVValidation == null ? defaultValue : _FundSERVValidation.booleanValue();
   }
    
   /**
    * Gets the Change LTA Indicator field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Change LTA Indicator or null.
    */
   public final Boolean getLTAIndicator()
   {
      return _LTAIndicator;
   }
    
   /**
    * Gets the Change LTA Indicator field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Change LTA Indicator or the specified default value.
    */
   public final boolean getLTAIndicator( boolean defaultValue )
   {
      return _LTAIndicator == null ? defaultValue : _LTAIndicator.booleanValue();
   }
    
   /**
    * Gets the Modify Comp Agent field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Modify Comp Agent or null.
    */
   public final Boolean getModifyCompAgent()
   {
      return _ModifyCompAgent;
   }
    
   /**
    * Gets the Modify Comp Agent field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Modify Comp Agent or the specified default value.
    */
   public final boolean getModifyCompAgent( boolean defaultValue )
   {
      return _ModifyCompAgent == null ? defaultValue : _ModifyCompAgent.booleanValue();
   }
    
   /**
    * Gets the Source Of Fund App field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Source Of Fund App or null.
    */
   public final Boolean getSourceOfFundApp()
   {
      return _SourceOfFundApp;
   }
    
   /**
    * Gets the Source Of Fund App field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Source Of Fund App or the specified default value.
    */
   public final boolean getSourceOfFundApp( boolean defaultValue )
   {
      return _SourceOfFundApp == null ? defaultValue : _SourceOfFundApp.booleanValue();
   }
    
   /**
    * Gets the Refund RVCD field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Refund RVCD or null.
    */
   public final String getRefundRVCD()
   {
      return _RefundRVCD;
   }
    
   /**
    * Gets the Refund RVCD field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Refund RVCD or the specified default value.
    */
   public final String getRefundRVCD( String defaultValue )
   {
      return _RefundRVCD == null ? defaultValue : _RefundRVCD;
   }
    
   /**
    * Gets the Fund Allocation field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Fund Allocation or null.
    */
   public final Boolean getFundAllocation()
   {
      return _FundAllocation;
   }
    
   /**
    * Gets the Fund Allocation field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Fund Allocation or the specified default value.
    */
   public final boolean getFundAllocation( boolean defaultValue )
   {
      return _FundAllocation == null ? defaultValue : _FundAllocation.booleanValue();
   }
    
   /**
    * Gets the Non Financial Confirm Bank Detl field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Non Financial Confirm Bank Detl or null.
    */
   public final Boolean getNFConfBnkDetl()
   {
      return _NFConfBnkDetl;
   }
    
   /**
    * Gets the Non Financial Confirm Bank Detl field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Non Financial Confirm Bank Detl or the specified default value.
    */
   public final boolean getNFConfBnkDetl( boolean defaultValue )
   {
      return _NFConfBnkDetl == null ? defaultValue : _NFConfBnkDetl.booleanValue();
   }
    
   /**
    * Gets the Refund Calculation field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Refund Calculation or null.
    */
   public final Boolean getRefundCalc()
   {
      return _RefundCalc;
   }
    
   /**
    * Gets the Refund Calculation field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Refund Calculation or the specified default value.
    */
   public final boolean getRefundCalc( boolean defaultValue )
   {
      return _RefundCalc == null ? defaultValue : _RefundCalc.booleanValue();
   }
    
   /**
    * Gets the Dilution Calculation field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Dilution Calculation or null.
    */
   public final Boolean getDilutionCalc()
   {
      return _DilutionCalc;
   }
    
   /**
    * Gets the Dilution Calculation field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Dilution Calculation or the specified default value.
    */
   public final boolean getDilutionCalc( boolean defaultValue )
   {
      return _DilutionCalc == null ? defaultValue : _DilutionCalc.booleanValue();
   }
    
   /**
    * Gets the Source Of Fund that require RefNum field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Source Of Fund that require RefNum or null.
    */
   public final String getSrcOfFundRefReq()
   {
      return _SrcOfFundRefReq;
   }
    
   /**
    * Gets the Source Of Fund that require RefNum field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Source Of Fund that require RefNum or the specified default value.
    */
   public final String getSrcOfFundRefReq( String defaultValue )
   {
      return _SrcOfFundRefReq == null ? defaultValue : _SrcOfFundRefReq;
   }
    
   /**
    * Gets the Source Of Fund for ED field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Source Of Fund for ED or null.
    */
   public final String getSrcOfFundED()
   {
      return _SrcOfFundED;
   }
    
   /**
    * Gets the Source Of Fund for ED field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Source Of Fund for ED or the specified default value.
    */
   public final String getSrcOfFundED( String defaultValue )
   {
      return _SrcOfFundED == null ? defaultValue : _SrcOfFundED;
   }
    
   /**
    * Gets the Source Of Fund for PW field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Source Of Fund for PW or null.
    */
   public final String getSrcOfFundPW()
   {
      return _SrcOfFundPW;
   }
    
   /**
    * Gets the Source Of Fund for PW field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Source Of Fund for PW or the specified default value.
    */
   public final String getSrcOfFundPW( String defaultValue )
   {
      return _SrcOfFundPW == null ? defaultValue : _SrcOfFundPW;
   }
    
   /**
    * Gets the Source Of Fund for GIC field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Source Of Fund for GIC or null.
    */
   public final String getSrcOfFundGIC()
   {
      return _SrcOfFundGIC;
   }
    
   /**
    * Gets the Source Of Fund for GIC field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Source Of Fund for GIC or the specified default value.
    */
   public final String getSrcOfFundGIC( String defaultValue )
   {
      return _SrcOfFundGIC == null ? defaultValue : _SrcOfFundGIC;
   }
    
   /**
    * Gets the Source Of Fund for SWP field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Source Of Fund for SWP or null.
    */
   public final String getSrcOfFundSWP()
   {
      return _SrcOfFundSWP;
   }
    
   /**
    * Gets the Source Of Fund for SWP field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Source Of Fund for SWP or the specified default value.
    */
   public final String getSrcOfFundSWP( String defaultValue )
   {
      return _SrcOfFundSWP == null ? defaultValue : _SrcOfFundSWP;
   }
    
   /**
    * Gets the Source Of Fund for RIF field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Source Of Fund for RIF or null.
    */
   public final String getSrcOfFundRIF()
   {
      return _SrcOfFundRIF;
   }
    
   /**
    * Gets the Source Of Fund for RIF field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Source Of Fund for RIF or the specified default value.
    */
   public final String getSrcOfFundRIF( String defaultValue )
   {
      return _SrcOfFundRIF == null ? defaultValue : _SrcOfFundRIF;
   }
    
   /**
    * Gets the Tax Anniversary field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Tax Anniversary or null.
    */
   public final Boolean getTaxAnniversary()
   {
      return _TaxAnniversary;
   }
    
   /**
    * Gets the Tax Anniversary field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Tax Anniversary or the specified default value.
    */
   public final boolean getTaxAnniversary( boolean defaultValue )
   {
      return _TaxAnniversary == null ? defaultValue : _TaxAnniversary.booleanValue();
   }
    
   /**
    * Gets the Right To Cancel Default field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Right To Cancel Default or null.
    */
   public final String getRightToCancelDefault()
   {
      return _RightToCancelDefault;
   }
    
   /**
    * Gets the Right To Cancel Default field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Right To Cancel Default or the specified default value.
    */
   public final String getRightToCancelDefault( String defaultValue )
   {
      return _RightToCancelDefault == null ? defaultValue : _RightToCancelDefault;
   }
    
   /**
    * Gets the Flag to indicate if FATCA is applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag to indicate if FATCA is applicable or null.
    */
   public final String getFATCAApplicable()
   {
      return _FATCAApplicable;
   }
    
   /**
    * Gets the Flag to indicate if FATCA is applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag to indicate if FATCA is applicable or the specified default value.
    */
   public final String getFATCAApplicable( String defaultValue )
   {
      return _FATCAApplicable == null ? defaultValue : _FATCAApplicable;
   }
    
   /**
    * Gets the RDR Environment Active field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RDR Environment Active or null.
    */
   public final String getRDREnvActive()
   {
      return _RDREnvActive;
   }
    
   /**
    * Gets the RDR Environment Active field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RDR Environment Active or the specified default value.
    */
   public final String getRDREnvActive( String defaultValue )
   {
      return _RDREnvActive == null ? defaultValue : _RDREnvActive;
   }
    
   /**
    * Gets the Applicable Fee Model Type field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Applicable Fee Model Type or null.
    */
   public final String getApplFeeModelType()
   {
      return _ApplFeeModelType;
   }
    
   /**
    * Gets the Applicable Fee Model Type field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Applicable Fee Model Type or the specified default value.
    */
   public final String getApplFeeModelType( String defaultValue )
   {
      return _ApplFeeModelType == null ? defaultValue : _ApplFeeModelType;
   }
    
   /**
    * Gets the Auto Generate Fee Model Code field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Auto Generate Fee Model Code or null.
    */
   public final Boolean getAutoGenFeeModelCode()
   {
      return _AutoGenFeeModelCode;
   }
    
   /**
    * Gets the Auto Generate Fee Model Code field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Auto Generate Fee Model Code or the specified default value.
    */
   public final boolean getAutoGenFeeModelCode( boolean defaultValue )
   {
      return _AutoGenFeeModelCode == null ? defaultValue : _AutoGenFeeModelCode.booleanValue();
   }
    
   /**
    * Gets the Auto Stop Fee Model Association field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Auto Stop Fee Model Association or null.
    */
   public final Boolean getAutoStopAssociation()
   {
      return _AutoStopAssociation;
   }
    
   /**
    * Gets the Auto Stop Fee Model Association field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Auto Stop Fee Model Association or the specified default value.
    */
   public final boolean getAutoStopAssociation( boolean defaultValue )
   {
      return _AutoStopAssociation == null ? defaultValue : _AutoStopAssociation.booleanValue();
   }
    
   /**
    * Gets the List of Document Types field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the List of Document Types or null.
    */
   public final String getListDocType()
   {
      return _ListDocType;
   }
    
   /**
    * Gets the List of Document Types field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the List of Document Types or the specified default value.
    */
   public final String getListDocType( String defaultValue )
   {
      return _ListDocType == null ? defaultValue : _ListDocType;
   }
    
   /**
    * Gets the Flag to indicate if Invoice is applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag to indicate if Invoice is applicable or null.
    */
   public final String getInvApplicable()
   {
      return _InvApplicable;
   }
    
   /**
    * Gets the Flag to indicate if Invoice is applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag to indicate if Invoice is applicable or the specified default value.
    */
   public final String getInvApplicable( String defaultValue )
   {
      return _InvApplicable == null ? defaultValue : _InvApplicable;
   }
    
   /**
    * Gets the Flag to indicate if Report is applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag to indicate if Report is applicable or null.
    */
   public final String getRptGrpApplicable()
   {
      return _RptGrpApplicable;
   }
    
   /**
    * Gets the Flag to indicate if Report is applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag to indicate if Report is applicable or the specified default value.
    */
   public final String getRptGrpApplicable( String defaultValue )
   {
      return _RptGrpApplicable == null ? defaultValue : _RptGrpApplicable;
   }
    
   /**
    * Gets the Flag to indicate if Master Account is active field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag to indicate if Master Account is active or null.
    */
   public final Boolean getIsMstrAcctActive()
   {
      return _IsMstrAcctActive;
   }
    
   /**
    * Gets the Flag to indicate if Master Account is active field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag to indicate if Master Account is active or the specified default value.
    */
   public final boolean getIsMstrAcctActive( boolean defaultValue )
   {
      return _IsMstrAcctActive == null ? defaultValue : _IsMstrAcctActive.booleanValue();
   }
    
   /**
    * Gets the A comma delimeter list to return the attributes name. field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the A comma delimeter list to return the attributes name. or null.
    */
   public final String getMstrActAttrbName()
   {
      return _MstrActAttrbName;
   }
    
   /**
    * Gets the A comma delimeter list to return the attributes name. field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the A comma delimeter list to return the attributes name. or the specified default value.
    */
   public final String getMstrActAttrbName( String defaultValue )
   {
      return _MstrActAttrbName == null ? defaultValue : _MstrActAttrbName;
   }
    
   /**
    * Gets the A comma delimeter list to return the attributes value. field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the A comma delimeter list to return the attributes value. or null.
    */
   public final String getMstrActAttrbValue()
   {
      return _MstrActAttrbValue;
   }
    
   /**
    * Gets the A comma delimeter list to return the attributes value. field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the A comma delimeter list to return the attributes value. or the specified default value.
    */
   public final String getMstrActAttrbValue( String defaultValue )
   {
      return _MstrActAttrbValue == null ? defaultValue : _MstrActAttrbValue;
   }
    
   /**
    * Gets the Flag to indicate if Trailer Fee is applicable at Account Level for an environment. field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag to indicate if Trailer Fee is applicable at Account Level for an environment. or null.
    */
   public final Boolean getIsTrlFeeAcctLevelApp()
   {
      return _IsTrlFeeAcctLevelApp;
   }
    
   /**
    * Gets the Flag to indicate if Trailer Fee is applicable at Account Level for an environment. field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag to indicate if Trailer Fee is applicable at Account Level for an environment. or the specified default value.
    */
   public final boolean getIsTrlFeeAcctLevelApp( boolean defaultValue )
   {
      return _IsTrlFeeAcctLevelApp == null ? defaultValue : _IsTrlFeeAcctLevelApp.booleanValue();
   }
    
   /**
    * Gets the Environment Reporting FFI Type field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Environment Reporting FFI Type or null.
    */
   public final String getReportFFIType()
   {
      return _ReportFFIType;
   }
    
   /**
    * Gets the Environment Reporting FFI Type field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Environment Reporting FFI Type or the specified default value.
    */
   public final String getReportFFIType( String defaultValue )
   {
      return _ReportFFIType == null ? defaultValue : _ReportFFIType;
   }
    
   /**
    * Gets the Fund Id List field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Fund Id List or null.
    */
   public final String getFundIdList()
   {
      return _FundIdList;
   }
    
   /**
    * Gets the Fund Id List field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Fund Id List or the specified default value.
    */
   public final String getFundIdList( String defaultValue )
   {
      return _FundIdList == null ? defaultValue : _FundIdList;
   }
    
   /**
    * Gets the Flag to indicate Return Mail Update field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag to indicate Return Mail Update or null.
    */
   public final Boolean getRetMailUpdt()
   {
      return _RetMailUpdt;
   }
    
   /**
    * Gets the Flag to indicate Return Mail Update field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag to indicate Return Mail Update or the specified default value.
    */
   public final boolean getRetMailUpdt( boolean defaultValue )
   {
      return _RetMailUpdt == null ? defaultValue : _RetMailUpdt.booleanValue();
   }
    
   /**
    * Gets the Flag to indicate if Bank update on PAC is allowed field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag to indicate if Bank update on PAC is allowed or null.
    */
   public final Boolean getAllowBankUpdOnPAC()
   {
      return _AllowBankUpdOnPAC;
   }
    
   /**
    * Gets the Flag to indicate if Bank update on PAC is allowed field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag to indicate if Bank update on PAC is allowed or the specified default value.
    */
   public final boolean getAllowBankUpdOnPAC( boolean defaultValue )
   {
      return _AllowBankUpdOnPAC == null ? defaultValue : _AllowBankUpdOnPAC.booleanValue();
   }
    
   /**
    * Gets the Flag if cash date is trade date for direct orders. field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag if cash date is trade date for direct orders. or null.
    */
   public final Boolean getTransferCashDate()
   {
      return _TransferCashDate;
   }
    
   /**
    * Gets the Flag if cash date is trade date for direct orders. field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag if cash date is trade date for direct orders. or the specified default value.
    */
   public final boolean getTransferCashDate( boolean defaultValue )
   {
      return _TransferCashDate == null ? defaultValue : _TransferCashDate.booleanValue();
   }
    
   /**
    * Gets the Flag if cash date is original trade cash date for direct orders. field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag if cash date is original trade cash date for direct orders. or null.
    */
   public final Boolean getCancelRebookCashDate()
   {
      return _CancelRebookCashDate;
   }
    
   /**
    * Gets the Flag if cash date is original trade cash date for direct orders. field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag if cash date is original trade cash date for direct orders. or the specified default value.
    */
   public final boolean getCancelRebookCashDate( boolean defaultValue )
   {
      return _CancelRebookCashDate == null ? defaultValue : _CancelRebookCashDate.booleanValue();
   }
    
   /**
    * Gets the Flag if cash date is settle date for direct orders field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag if cash date is settle date for direct orders or null.
    */
   public final Boolean getCashDateAssign()
   {
      return _CashDateAssign;
   }
    
   /**
    * Gets the Flag if cash date is settle date for direct orders field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag if cash date is settle date for direct orders or the specified default value.
    */
   public final boolean getCashDateAssign( boolean defaultValue )
   {
      return _CashDateAssign == null ? defaultValue : _CashDateAssign.booleanValue();
   }
    
   /**
    * Gets the Flag if cash date is enabled for direct backdated trades for interest accrual funds and interest is from/to cash date for direct orders field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag if cash date is enabled for direct backdated trades for interest accrual funds and interest is from/to cash date for direct orders or null.
    */
   public final Boolean getCashDateOverride()
   {
      return _CashDateOverride;
   }
    
   /**
    * Gets the Flag if cash date is enabled for direct backdated trades for interest accrual funds and interest is from/to cash date for direct orders field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag if cash date is enabled for direct backdated trades for interest accrual funds and interest is from/to cash date for direct orders or the specified default value.
    */
   public final boolean getCashDateOverride( boolean defaultValue )
   {
      return _CashDateOverride == null ? defaultValue : _CashDateOverride.booleanValue();
   }
    
   /**
    * Gets the Distribution Instruction As Rate Option field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Distribution Instruction As Rate Option or null.
    */
   public final Boolean getDistribInstrAsRatioOpt()
   {
      return _DistribInstrAsRatioOpt;
   }
    
   /**
    * Gets the Distribution Instruction As Rate Option field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Distribution Instruction As Rate Option or the specified default value.
    */
   public final boolean getDistribInstrAsRatioOpt( boolean defaultValue )
   {
      return _DistribInstrAsRatioOpt == null ? defaultValue : _DistribInstrAsRatioOpt.booleanValue();
   }
    
   /**
    * Gets the Management Fee Payment Options Override field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Management Fee Payment Options Override or null.
    */
   public final String getMgmtFeePayOptOvd()
   {
      return _MgmtFeePayOptOvd;
   }
    
   /**
    * Gets the Management Fee Payment Options Override field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Management Fee Payment Options Override or the specified default value.
    */
   public final String getMgmtFeePayOptOvd( String defaultValue )
   {
      return _MgmtFeePayOptOvd == null ? defaultValue : _MgmtFeePayOptOvd;
   }
    
   /**
    * Gets the OPC Non financial Confirm Deff PAC field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the OPC Non financial Confirm Deff PAC or null.
    */
   public final Boolean getOPCNonFinConfDefPAC()
   {
      return _OPCNonFinConfDefPAC;
   }
    
   /**
    * Gets the OPC Non financial Confirm Deff PAC field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the OPC Non financial Confirm Deff PAC or the specified default value.
    */
   public final boolean getOPCNonFinConfDefPAC( boolean defaultValue )
   {
      return _OPCNonFinConfDefPAC == null ? defaultValue : _OPCNonFinConfDefPAC.booleanValue();
   }
    
   /**
    * Gets the Show DilutionNSM Flag field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Show DilutionNSM Flag or null.
    */
   public final Boolean getShowDilution()
   {
      return _ShowDilution;
   }
    
   /**
    * Gets the Show DilutionNSM Flag field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Show DilutionNSM Flag or the specified default value.
    */
   public final boolean getShowDilution( boolean defaultValue )
   {
      return _ShowDilution == null ? defaultValue : _ShowDilution.booleanValue();
   }
    
   /**
    * Gets the Show ExSysDilPymtNSM Flag field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Show ExSysDilPymtNSM Flag or null.
    */
   public final Boolean getShowExSysDilPymtNSM()
   {
      return _ShowExSysDilPymtNSM;
   }
    
   /**
    * Gets the Show ExSysDilPymtNSM Flag field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Show ExSysDilPymtNSM Flag or the specified default value.
    */
   public final boolean getShowExSysDilPymtNSM( boolean defaultValue )
   {
      return _ShowExSysDilPymtNSM == null ? defaultValue : _ShowExSysDilPymtNSM.booleanValue();
   }
    
   /**
    * Gets the CPFRefundApplicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the CPFRefundApplicable or null.
    */
   public final Boolean getCPFRefundApplicable()
   {
      return _CPFRefundApplicable;
   }
    
   /**
    * Gets the CPFRefundApplicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the CPFRefundApplicable or the specified default value.
    */
   public final boolean getCPFRefundApplicable( boolean defaultValue )
   {
      return _CPFRefundApplicable == null ? defaultValue : _CPFRefundApplicable.booleanValue();
   }
    
   /**
    * Gets the Multiple Pricing field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Multiple Pricing or null.
    */
   public final Boolean getMultiPrices()
   {
      return _MultiPrices;
   }
    
   /**
    * Gets the Multiple Pricing field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Multiple Pricing or the specified default value.
    */
   public final boolean getMultiPrices( boolean defaultValue )
   {
      return _MultiPrices == null ? defaultValue : _MultiPrices.booleanValue();
   }
    
   /**
    * Gets the Flag that indicate if SAGES is active in environment field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag that indicate if SAGES is active in environment or null.
    */
   public final String getSAGESActive()
   {
      return _SAGESActive;
   }
    
   /**
    * Gets the Flag that indicate if SAGES is active in environment field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag that indicate if SAGES is active in environment or the specified default value.
    */
   public final String getSAGESActive( String defaultValue )
   {
      return _SAGESActive == null ? defaultValue : _SAGESActive;
   }
    
   /**
    * Gets the SAGES effective date field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the SAGES effective date or null.
    */
   public final Date getSAGESDeff()
   {
      return _SAGESDeff;
   }
    
   /**
    * Gets the SAGES effective date field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the SAGES effective date or the specified default value.
    */
   public final Date getSAGESDeff( Date defaultValue )
   {
      return _SAGESDeff == null ? defaultValue : _SAGESDeff;
   }
    
   /**
    * Gets the Flag to indicate if Trailer Fee Rabate is applicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag to indicate if Trailer Fee Rabate is applicable or null.
    */
   public final Boolean getTFRApplicable()
   {
      return _TFRApplicable;
   }
    
   /**
    * Gets the Flag to indicate if Trailer Fee Rabate is applicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag to indicate if Trailer Fee Rabate is applicable or the specified default value.
    */
   public final boolean getTFRApplicable( boolean defaultValue )
   {
      return _TFRApplicable == null ? defaultValue : _TFRApplicable.booleanValue();
   }
    
   /**
    * Gets the CIApplicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the CIApplicable or null.
    */
   public final Boolean getCIApplicable()
   {
      return _CIApplicable;
   }
    
   /**
    * Gets the CIApplicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the CIApplicable or the specified default value.
    */
   public final boolean getCIApplicable( boolean defaultValue )
   {
      return _CIApplicable == null ? defaultValue : _CIApplicable.booleanValue();
   }
    
   /**
    * Gets the SIApplicable field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the SIApplicable or null.
    */
   public final Boolean getSIApplicable()
   {
      return _SIApplicable;
   }
    
   /**
    * Gets the SIApplicable field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the SIApplicable or the specified default value.
    */
   public final boolean getSIApplicable( boolean defaultValue )
   {
      return _SIApplicable == null ? defaultValue : _SIApplicable.booleanValue();
   }
    
   /**
    * Gets the AdvisorFeeAppl field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the AdvisorFeeAppl or null.
    */
   public final Boolean getAdvisorFeeAppl()
   {
      return _AdvisorFeeAppl;
   }
    
   /**
    * Gets the AdvisorFeeAppl field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the AdvisorFeeAppl or the specified default value.
    */
   public final boolean getAdvisorFeeAppl( boolean defaultValue )
   {
      return _AdvisorFeeAppl == null ? defaultValue : _AdvisorFeeAppl.booleanValue();
   }
    
   /**
    * Gets the EDoc Access Apply field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the EDoc Access Apply or null.
    */
   public final Boolean getEDocsAccessAppl()
   {
      return _EDocsAccessAppl;
   }
    
   /**
    * Gets the EDoc Access Apply field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the EDoc Access Apply or the specified default value.
    */
   public final boolean getEDocsAccessAppl( boolean defaultValue )
   {
      return _EDocsAccessAppl == null ? defaultValue : _EDocsAccessAppl.booleanValue();
   }
    
   /**
    * Gets the AutoDefaultCancelGrant field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the AutoDefaultCancelGrant or null.
    */
   public final String getAutoDefaultCancelGrant()
   {
      return _AutoDefaultCancelGrant;
   }
    
   /**
    * Gets the AutoDefaultCancelGrant field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the AutoDefaultCancelGrant or the specified default value.
    */
   public final String getAutoDefaultCancelGrant( String defaultValue )
   {
      return _AutoDefaultCancelGrant == null ? defaultValue : _AutoDefaultCancelGrant;
   }
    
   /**
    * Gets the  field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the  or null.
    */
   public final String getAggActive()
   {
      return _AggActive;
   }
    
   /**
    * Gets the  field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the  or the specified default value.
    */
   public final String getAggActive( String defaultValue )
   {
      return _AggActive == null ? defaultValue : _AggActive;
   }
    
   /**
    * Gets the  field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the  or null.
    */
   public final String getAggActCatgry()
   {
      return _AggActCatgry;
   }
    
   /**
    * Gets the  field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the  or the specified default value.
    */
   public final String getAggActCatgry( String defaultValue )
   {
      return _AggActCatgry == null ? defaultValue : _AggActCatgry;
   }
    
   /**
    * Gets the  field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the  or null.
    */
   public final String getAggDefAggMod()
   {
      return _AggDefAggMod;
   }
    
   /**
    * Gets the  field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the  or the specified default value.
    */
   public final String getAggDefAggMod( String defaultValue )
   {
      return _AggDefAggMod == null ? defaultValue : _AggDefAggMod;
   }
    
   /**
    * Gets the ShrBankInstrLevel field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ShrBankInstrLevel or null.
    */
   public final String getShrBankInstrLevel()
   {
      return _ShrBankInstrLevel;
   }
    
   /**
    * Gets the ShrBankInstrLevel field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ShrBankInstrLevel or the specified default value.
    */
   public final String getShrBankInstrLevel( String defaultValue )
   {
      return _ShrBankInstrLevel == null ? defaultValue : _ShrBankInstrLevel;
   }
    
   /**
    * Gets the  field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the  or null.
    */
   public final String getDefaultInstrLevel()
   {
      return _DefaultInstrLevel;
   }
    
   /**
    * Gets the  field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the  or the specified default value.
    */
   public final String getDefaultInstrLevel( String defaultValue )
   {
      return _DefaultInstrLevel == null ? defaultValue : _DefaultInstrLevel;
   }
    
   /**
    * Gets the HighRiskDispMode field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the HighRiskDispMode or null.
    */
   public final String getHighRiskDispMode()
   {
      return _HighRiskDispMode;
   }
    
   /**
    * Gets the HighRiskDispMode field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the HighRiskDispMode or the specified default value.
    */
   public final String getHighRiskDispMode( String defaultValue )
   {
      return _HighRiskDispMode == null ? defaultValue : _HighRiskDispMode;
   }
    
   /**
    * Gets the HighRiskLevels field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the HighRiskLevels or null.
    */
   public final String getHighRiskLevels()
   {
      return _HighRiskLevels;
   }
    
   /**
    * Gets the HighRiskLevels field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the HighRiskLevels or the specified default value.
    */
   public final String getHighRiskLevels( String defaultValue )
   {
      return _HighRiskLevels == null ? defaultValue : _HighRiskLevels;
   }
    
   /**
    * Gets the RiskApplEntity field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RiskApplEntity or null.
    */
   public final String getRiskApplEntity()
   {
      return _RiskApplEntity;
   }
    
   /**
    * Gets the RiskApplEntity field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RiskApplEntity or the specified default value.
    */
   public final String getRiskApplEntity( String defaultValue )
   {
      return _RiskApplEntity == null ? defaultValue : _RiskApplEntity;
   }
    
   /**
    * Gets the RiskApplEntitySeq field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RiskApplEntitySeq or null.
    */
   public final String getRiskApplEntitySeq()
   {
      return _RiskApplEntitySeq;
   }
    
   /**
    * Gets the RiskApplEntitySeq field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RiskApplEntitySeq or the specified default value.
    */
   public final String getRiskApplEntitySeq( String defaultValue )
   {
      return _RiskApplEntitySeq == null ? defaultValue : _RiskApplEntitySeq;
   }
    
   /**
    * Gets the RiskForAcctHldrRsk field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RiskForAcctHldrRsk or null.
    */
   public final String getRiskForAcctHldrRsk()
   {
      return _RiskForAcctHldrRsk;
   }
    
   /**
    * Gets the RiskForAcctHldrRsk field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RiskForAcctHldrRsk or the specified default value.
    */
   public final String getRiskForAcctHldrRsk( String defaultValue )
   {
      return _RiskForAcctHldrRsk == null ? defaultValue : _RiskForAcctHldrRsk;
   }
    
   /**
    * Gets the RebalDateFormat field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RebalDateFormat or null.
    */
   public final Integer getRebalDateFormat()
   {
      return _RebalDateFormat;
   }
    
   /**
    * Gets the RebalDateFormat field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RebalDateFormat or the specified default value.
    */
   public final int getRebalDateFormat( int defaultValue )
   {
      return _RebalDateFormat == null ? defaultValue : _RebalDateFormat.intValue();
   }
    
   /**
    * Gets the Flag if RESP Transformation is activated for an environment field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Flag if RESP Transformation is activated for an environment or null.
    */
   public final Boolean getIsRESPTransform()
   {
      return _IsRESPTransform;
   }
    
   /**
    * Gets the Flag if RESP Transformation is activated for an environment field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Flag if RESP Transformation is activated for an environment or the specified default value.
    */
   public final boolean getIsRESPTransform( boolean defaultValue )
   {
      return _IsRESPTransform == null ? defaultValue : _IsRESPTransform.booleanValue();
   }
    
   /**
    * Gets the CRSEntityList field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the CRSEntityList or null.
    */
   public final String getCRSEntityList()
   {
      return _CRSEntityList;
   }
    
   /**
    * Gets the CRSEntityList field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the CRSEntityList or the specified default value.
    */
   public final String getCRSEntityList( String defaultValue )
   {
      return _CRSEntityList == null ? defaultValue : _CRSEntityList;
   }
    
   /**
    * Gets the TaxCompliance field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the TaxCompliance or null.
    */
   public final String getTaxCompliance()
   {
      return _TaxCompliance;
   }
    
   /**
    * Gets the TaxCompliance field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the TaxCompliance or the specified default value.
    */
   public final String getTaxCompliance( String defaultValue )
   {
      return _TaxCompliance == null ? defaultValue : _TaxCompliance;
   }
    
   /**
    * Gets the CRSActive field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the CRSActive or null.
    */
   public final Boolean getCRSActive()
   {
      return _CRSActive;
   }
    
   /**
    * Gets the CRSActive field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the CRSActive or the specified default value.
    */
   public final boolean getCRSActive( boolean defaultValue )
   {
      return _CRSActive == null ? defaultValue : _CRSActive.booleanValue();
   }
    
   /**
    * Gets the active flag field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the active flag or null.
    */
   public final Boolean getTrackTrActive()
   {
      return _TrackTrActive;
   }
    
   /**
    * Gets the active flag field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the active flag or the specified default value.
    */
   public final boolean getTrackTrActive( boolean defaultValue )
   {
      return _TrackTrActive == null ? defaultValue : _TrackTrActive.booleanValue();
   }
    
   /**
    * Gets the track redem code field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the track redem code or null.
    */
   public final String getTrackTrRedCode()
   {
      return _TrackTrRedCode;
   }
    
   /**
    * Gets the track redem code field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the track redem code or the specified default value.
    */
   public final String getTrackTrRedCode( String defaultValue )
   {
      return _TrackTrRedCode == null ? defaultValue : _TrackTrRedCode;
   }
    
   /**
    * Gets the track deposit code field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the track deposit code or null.
    */
   public final String getTrackTrDepCode()
   {
      return _TrackTrDepCode;
   }
    
   /**
    * Gets the track deposit code field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the track deposit code or the specified default value.
    */
   public final String getTrackTrDepCode( String defaultValue )
   {
      return _TrackTrDepCode == null ? defaultValue : _TrackTrDepCode;
   }
    
   /**
    * Gets the track other field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the track other or null.
    */
   public final String getTrackTrOther()
   {
      return _TrackTrOther;
   }
    
   /**
    * Gets the track other field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the track other or the specified default value.
    */
   public final String getTrackTrOther( String defaultValue )
   {
      return _TrackTrOther == null ? defaultValue : _TrackTrOther;
   }
    
   /**
    * Gets the Logical field indicating rebook trade will use fee setup from original trade field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the Logical field indicating rebook trade will use fee setup from original trade or null.
    */
   public final Boolean getOrigTradeFee()
   {
      return _OrigTradeFee;
   }
    
   /**
    * Gets the Logical field indicating rebook trade will use fee setup from original trade field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the Logical field indicating rebook trade will use fee setup from original trade or the specified default value.
    */
   public final boolean getOrigTradeFee( boolean defaultValue )
   {
      return _OrigTradeFee == null ? defaultValue : _OrigTradeFee.booleanValue();
   }
    
   /**
    * Gets the environment level control for legacy fund code field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the environment level control for legacy fund code or null.
    */
   public final Integer getAltFndIdntfr()
   {
      return _AltFndIdntfr;
   }
    
   /**
    * Gets the environment level control for legacy fund code field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the environment level control for legacy fund code or the specified default value.
    */
   public final int getAltFndIdntfr( int defaultValue )
   {
      return _AltFndIdntfr == null ? defaultValue : _AltFndIdntfr.intValue();
   }
    
   /**
    * Gets the  field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the  or null.
    */
   public final String getTFSAAgeOfMajor()
   {
      return _TFSAAgeOfMajor;
   }
    
   /**
    * Gets the  field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the  or the specified default value.
    */
   public final String getTFSAAgeOfMajor( String defaultValue )
   {
      return _TFSAAgeOfMajor == null ? defaultValue : _TFSAAgeOfMajor;
   }
    
   /**
    * Gets the  field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the  or null.
    */
   public final String getTFSAProvCode()
   {
      return _TFSAProvCode;
   }
    
   /**
    * Gets the  field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the  or the specified default value.
    */
   public final String getTFSAProvCode( String defaultValue )
   {
      return _TFSAProvCode == null ? defaultValue : _TFSAProvCode;
   }
    
   /**
    * Gets the ApplPUDbyDefault field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ApplPUDbyDefault or null.
    */
   public final String getApplPUDbyDefault()
   {
      return _ApplPUDbyDefault;
   }
    
   /**
    * Gets the ApplPUDbyDefault field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ApplPUDbyDefault or the specified default value.
    */
   public final String getApplPUDbyDefault( String defaultValue )
   {
      return _ApplPUDbyDefault == null ? defaultValue : _ApplPUDbyDefault;
   }
    
   /**
    * Gets the ApplPUDbyBEL field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ApplPUDbyBEL or null.
    */
   public final String getApplPUDbyBEL()
   {
      return _ApplPUDbyBEL;
   }
    
   /**
    * Gets the ApplPUDbyBEL field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ApplPUDbyBEL or the specified default value.
    */
   public final String getApplPUDbyBEL( String defaultValue )
   {
      return _ApplPUDbyBEL == null ? defaultValue : _ApplPUDbyBEL;
   }
    
   /**
    * Gets the ApplPUDbyCB field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the ApplPUDbyCB or null.
    */
   public final String getApplPUDbyCB()
   {
      return _ApplPUDbyCB;
   }
    
   /**
    * Gets the ApplPUDbyCB field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the ApplPUDbyCB or the specified default value.
    */
   public final String getApplPUDbyCB( String defaultValue )
   {
      return _ApplPUDbyCB == null ? defaultValue : _ApplPUDbyCB;
   }
    
   /**
    * Gets the RefundAllowed field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RefundAllowed or null.
    */
   public final String getRefundAllowed()
   {
      return _RefundAllowed;
   }
    
   /**
    * Gets the RefundAllowed field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RefundAllowed or the specified default value.
    */
   public final String getRefundAllowed( String defaultValue )
   {
      return _RefundAllowed == null ? defaultValue : _RefundAllowed;
   }
    
   /**
    * Gets the RefundSettleDateOpt field for the response. If the field has
    * no value, null is returned. 
    * 
    * @return The value of the RefundSettleDateOpt or null.
    */
   public final String getRefundSettleDateOpt()
   {
      return _RefundSettleDateOpt;
   }
    
   /**
    * Gets the RefundSettleDateOpt field for the response. If the field has 
    * no value, the specified default value is returned.
    * 
    * @param defaultValue  The value to return if the field has no value.
    * @return The value of the RefundSettleDateOpt or the specified default value.
    */
   public final String getRefundSettleDateOpt( String defaultValue )
   {
      return _RefundSettleDateOpt == null ? defaultValue : _RefundSettleDateOpt;
   }
    
   /**
    * Implements the abstract base method to decode
    * the host formatted response.
    * 
    * @param response Host formatted response object.
    * @exception ParseException
    */
   protected void decodeFields( RTSResponseDecodeBuffer responseBuffer ) throws ParseException, UnsupportedEncodingException
   {
      
      // single-record section
      _AllowMultiplePacSwp = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SWPEditLevel = responseBuffer.decodeString(responseBuffer.getNextField());
      _SWPMin = responseBuffer.decodeString(responseBuffer.getNextField());
      _SWPHardEdit = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DSCOverride = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DabScreen = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DepositID2 = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DispClientTradeID = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DefaultBankType = responseBuffer.decodeString(responseBuffer.getNextField());
      _DispManageStyle = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DefaultBankUpd = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SplitOnAddPur = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SplitOnModPur = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SplitOnReqOnly = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SpltComBankDeflt = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ValSplCom = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SavePlanClient = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _PACLastRunDate = responseBuffer.decodeDate(responseBuffer.getNextField());
      _SWPLastRunDate = responseBuffer.decodeDate(responseBuffer.getNextField());
      _ManualSettleDates = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ACHSavingsPlan = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ACHPAC = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ForeignCont = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AllowUnitPurch = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AllowMultiCurrEFT = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DisallowedPayTypes = responseBuffer.decodeString(responseBuffer.getNextField());
      _AllowCashDistrib = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _PACCalendar = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ProductGroupCode = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _TradeDateLag = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _TradeDateLagExch = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _FCRebalancing = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _CommFeeCodes = responseBuffer.decodeString(responseBuffer.getNextField());
      _CalcSwitch = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _MiscFeeDefn = responseBuffer.decodeString(responseBuffer.getNextField());
      _AcctLvlFIFO = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _CompCodeFlag = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _PriceProcAtFndGrp = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _MgmtFeeDisplay = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _LLPWithdrawalRules = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _RRIFFromAlloc = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ISOCompliant = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ReviewDateFlag = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _OverrideReviewDate = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ReviewMnths = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _BankCharge = responseBuffer.decodeString(responseBuffer.getNextField());
      _ConsolidEFT = responseBuffer.decodeString(responseBuffer.getNextField());
      _ACHRedem = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ValueDateApplic = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SettleAll = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DuplicateAltAcct = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _BankDetlName = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DeliveryMtds = responseBuffer.decodeString(responseBuffer.getNextField());
      _DeliveryOptn = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _CnsntToWaive = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _OverridePrcntFree = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _OvrdRBLThrshld = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _CommonCurrency = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _RBLThrshldDflt = responseBuffer.decodeString(responseBuffer.getNextField());
      _DispRBLSysThrshld = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ShrAddressFormat = responseBuffer.decodeString(responseBuffer.getNextField());
      _FundLimitOverride = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _RestrictAMSBroker = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _NetworkOrder = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _EarlyPWFeeElig = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ShortTermTRFeeElig = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _MailingByFundGroup = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ATFeeApply = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _FeeOverrideType = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _SummDlrRangeLow = responseBuffer.decodeString(responseBuffer.getNextField());
      _SummDlrRangeUpp = responseBuffer.decodeString(responseBuffer.getNextField());
      _RRIFToAlloc = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ACHTrailerFee = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ACHCommission = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ACHDividend = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _KYCAccountLevel = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AllowRetMailAutomation = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _NoWithTax = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _TaxOnRRIFRed = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _WithTaxOverride = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AutomaticAll = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _RIFTaxableRedCode = responseBuffer.decodeString(responseBuffer.getNextField());
      _FullRedCode = responseBuffer.decodeString(responseBuffer.getNextField());
      _ManyToManyTR = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SalutationFormat = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DefaultBankInstCode = responseBuffer.decodeString(responseBuffer.getNextField());
      _NASUPopup = responseBuffer.decodeString(responseBuffer.getNextField());
      _AFBAgentCoCode = responseBuffer.decodeString(responseBuffer.getNextField());
      _STTRFeeFlag = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ERFeeFlag = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ADLApplicable = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ADLTransType = responseBuffer.decodeString(responseBuffer.getNextField());
      _FndMrgRedCod = responseBuffer.decodeString(responseBuffer.getNextField());
      _NSCCCompliant = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _NSCCCurrencyList = responseBuffer.decodeString(responseBuffer.getNextField());
      _ExclRedCodeList = responseBuffer.decodeString(responseBuffer.getNextField());
      _EntityRiskLevel = responseBuffer.decodeString(responseBuffer.getNextField());
      _EqualizationSetUp = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _RegisteredTaxTypes = responseBuffer.decodeString(responseBuffer.getNextField());
      _AntiDilutionCalc = responseBuffer.decodeString(responseBuffer.getNextField());
      _UFactorCodes = responseBuffer.decodeString(responseBuffer.getNextField());
      _ACHPurch = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ACHSWP = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ACHAdminFee = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ClearingIdDefault = responseBuffer.decodeString(responseBuffer.getNextField());
      _ErrorAcctNum = responseBuffer.decodeString(responseBuffer.getNextField());
      _FundBrokerApplicable = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ValidNetworkType = responseBuffer.decodeString(responseBuffer.getNextField());
      _NetworkTypeUpd = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _EUSDParticip = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DefEUSDOption = responseBuffer.decodeString(responseBuffer.getNextField());
      _VerCancTrd = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ActCatNegBal = responseBuffer.decodeString(responseBuffer.getNextField());
      _ActCatWireSett = responseBuffer.decodeString(responseBuffer.getNextField());
      _BDTradeReason = responseBuffer.decodeString(responseBuffer.getNextField());
      _BDTradeAcctable = responseBuffer.decodeString(responseBuffer.getNextField());
      _OPCConfirmsBrokerScreen = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _JumboPriceApplicable = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ClawbackBasedOnDate = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _EUSDOption = responseBuffer.decodeString(responseBuffer.getNextField());
      _SuppressInactiveFunds = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _ExemptLvlList = responseBuffer.decodeString(responseBuffer.getNextField());
      _AccessLevelCat = responseBuffer.decodeString(responseBuffer.getNextField());
      _GWOSupported = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AssignmentScreen = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _Address1 = responseBuffer.decodeString(responseBuffer.getNextField());
      _Address2 = responseBuffer.decodeString(responseBuffer.getNextField());
      _Address3 = responseBuffer.decodeString(responseBuffer.getNextField());
      _Address4 = responseBuffer.decodeString(responseBuffer.getNextField());
      _Address5 = responseBuffer.decodeString(responseBuffer.getNextField());
      _PostalCode = responseBuffer.decodeString(responseBuffer.getNextField());
      _CountryCode = responseBuffer.decodeString(responseBuffer.getNextField());
      _ClientName = responseBuffer.decodeString(responseBuffer.getNextField());
      _RedPayEntExist = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _IsRRIFUnusedMaxApp = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _CompanyCode = responseBuffer.decodeString(responseBuffer.getNextField());
      _JointDisposition = responseBuffer.decodeString(responseBuffer.getNextField());
      _BackWithholdTax = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ConsolTransType = responseBuffer.decodeString(responseBuffer.getNextField());
      _Consolidation = responseBuffer.decodeString(responseBuffer.getNextField());
      _ConsolDefault = responseBuffer.decodeString(responseBuffer.getNextField());
      _PurchNetting = responseBuffer.decodeString(responseBuffer.getNextField());
      _DftOrdTypeTR = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _DftOrdTypeEX = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _DftOrdTypeApplicDSK = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _CSSStopSINMatch = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AMSFreqOvrd = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _RebalanceDay = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _ChkAllowTfr = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _KYCLevel = responseBuffer.decodeString(responseBuffer.getNextField());
      _MFRCorporateFund = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _NetOfFeeStrDt = responseBuffer.decodeDate(responseBuffer.getNextField());
      _DispHistUnitACB = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DivDates = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _SwitchBank = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _CheckClosedBatch = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DefltFeeOption = responseBuffer.decodeString(responseBuffer.getNextField());
      _OnLineEntExcept = responseBuffer.decodeString(responseBuffer.getNextField());
      _AdlRndMethodAllow = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DfltRoundMethod = responseBuffer.decodeString(responseBuffer.getNextField());
      _AcctRegRuleExists = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DeathClaimRuleExists = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _UnregPlan = responseBuffer.decodeString(responseBuffer.getNextField());
      _NonregLike = responseBuffer.decodeString(responseBuffer.getNextField());
      _IntRIFPlan = responseBuffer.decodeString(responseBuffer.getNextField());
      _ExtRIFPlan = responseBuffer.decodeString(responseBuffer.getNextField());
      _AllRIFPlan = responseBuffer.decodeString(responseBuffer.getNextField());
      _IntLIRAPlan = responseBuffer.decodeString(responseBuffer.getNextField());
      _AllLIRAPlan = responseBuffer.decodeString(responseBuffer.getNextField());
      _IntRESP = responseBuffer.decodeString(responseBuffer.getNextField());
      _IntRSP = responseBuffer.decodeString(responseBuffer.getNextField());
      _TaxJurisUpdateOpt = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _RetMailOrStlDtChqAlert = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DeathClaimRedCodes = responseBuffer.decodeString(responseBuffer.getNextField());
      _IntLockInPlan = responseBuffer.decodeString(responseBuffer.getNextField());
      _AlwdTaxType = responseBuffer.decodeString(responseBuffer.getNextField());
      _LIRAPlan = responseBuffer.decodeString(responseBuffer.getNextField());
      _IntLIF = responseBuffer.decodeString(responseBuffer.getNextField());
      _FELCommOnGrant = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AllocTypeForValidation = responseBuffer.decodeString(responseBuffer.getNextField());
      _TFSATaxType = responseBuffer.decodeString(responseBuffer.getNextField());
      _AutoBatch = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _ClosedCountryApplicable = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DskPCLookEnb = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DirectDepositBankApplicable = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _VersionLabel = responseBuffer.decodeString(responseBuffer.getNextField());
      _CompanyURL = responseBuffer.decodeString(responseBuffer.getNextField());
      _SettleLocOpt = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _TUPActive = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _TerminationAgeBeforeDeff = responseBuffer.decodeString(responseBuffer.getNextField());
      _TerminationAgeAfterDeff = responseBuffer.decodeString(responseBuffer.getNextField());
      _RESPAgeLimitsDeff = responseBuffer.decodeDate(responseBuffer.getNextField());
      _GuaranteeGuardOn = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _TrailerFeeArch = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AllowChqChange = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _TFSAAcctCatCode = responseBuffer.decodeString(responseBuffer.getNextField());
      _RRSPAcctCatCode = responseBuffer.decodeString(responseBuffer.getNextField());
      _NetworkRespReqApplicable = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _NetworkIDForAmountTrade = responseBuffer.decodeString(responseBuffer.getNextField());
      _AllEFTConsolActive = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _BulkBackDate = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _AllEFTConsolShLv = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ACBUnitOffset = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _EAPEarningCodes = responseBuffer.decodeString(responseBuffer.getNextField());
      _IrishWithTax = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _IWTTaxJurisList = responseBuffer.decodeString(responseBuffer.getNextField());
      _NonReceiptApplicable = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _GuaranteeCalcByRules = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _PorfolioIsRequried = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SOFforSGMR = responseBuffer.decodeString(responseBuffer.getNextField());
      _SourceOfFund = responseBuffer.decodeString(responseBuffer.getNextField());
      _StmtFreqDefault = responseBuffer.decodeString(responseBuffer.getNextField());
      _StmtFreqList = responseBuffer.decodeString(responseBuffer.getNextField());
      _RedCodesOverride = responseBuffer.decodeString(responseBuffer.getNextField());
      _CPFActiveFlag = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _PrintAcctConf = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _LanguageDefault = responseBuffer.decodeString(responseBuffer.getNextField());
      _EmpAgentApp = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _FundEliPSG = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _FundSERVValidation = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _LTAIndicator = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ModifyCompAgent = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SourceOfFundApp = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _RefundRVCD = responseBuffer.decodeString(responseBuffer.getNextField());
      _FundAllocation = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _NFConfBnkDetl = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _RefundCalc = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DilutionCalc = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SrcOfFundRefReq = responseBuffer.decodeString(responseBuffer.getNextField());
      _SrcOfFundED = responseBuffer.decodeString(responseBuffer.getNextField());
      _SrcOfFundPW = responseBuffer.decodeString(responseBuffer.getNextField());
      _SrcOfFundGIC = responseBuffer.decodeString(responseBuffer.getNextField());
      _SrcOfFundSWP = responseBuffer.decodeString(responseBuffer.getNextField());
      _SrcOfFundRIF = responseBuffer.decodeString(responseBuffer.getNextField());
      _TaxAnniversary = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _RightToCancelDefault = responseBuffer.decodeString(responseBuffer.getNextField());
      _FATCAApplicable = responseBuffer.decodeString(responseBuffer.getNextField());
      _RDREnvActive = responseBuffer.decodeString(responseBuffer.getNextField());
      _ApplFeeModelType = responseBuffer.decodeString(responseBuffer.getNextField());
      _AutoGenFeeModelCode = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AutoStopAssociation = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ListDocType = responseBuffer.decodeString(responseBuffer.getNextField());
      _InvApplicable = responseBuffer.decodeString(responseBuffer.getNextField());
      _RptGrpApplicable = responseBuffer.decodeString(responseBuffer.getNextField());
      _IsMstrAcctActive = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _MstrActAttrbName = responseBuffer.decodeString(responseBuffer.getNextField());
      _MstrActAttrbValue = responseBuffer.decodeString(responseBuffer.getNextField());
      _IsTrlFeeAcctLevelApp = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ReportFFIType = responseBuffer.decodeString(responseBuffer.getNextField());
      _FundIdList = responseBuffer.decodeString(responseBuffer.getNextField());
      _RetMailUpdt = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AllowBankUpdOnPAC = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _TransferCashDate = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _CancelRebookCashDate = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _CashDateAssign = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _CashDateOverride = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _DistribInstrAsRatioOpt = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _MgmtFeePayOptOvd = responseBuffer.decodeString(responseBuffer.getNextField());
      _OPCNonFinConfDefPAC = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ShowDilution = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _ShowExSysDilPymtNSM = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _CPFRefundApplicable = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _MultiPrices = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SAGESActive = responseBuffer.decodeString(responseBuffer.getNextField());
      _SAGESDeff = responseBuffer.decodeDate(responseBuffer.getNextField());
      _TFRApplicable = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _CIApplicable = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _SIApplicable = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AdvisorFeeAppl = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _EDocsAccessAppl = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AutoDefaultCancelGrant = responseBuffer.decodeString(responseBuffer.getNextField());
      _AggActive = responseBuffer.decodeString(responseBuffer.getNextField());
      _AggActCatgry = responseBuffer.decodeString(responseBuffer.getNextField());
      _AggDefAggMod = responseBuffer.decodeString(responseBuffer.getNextField());
      _ShrBankInstrLevel = responseBuffer.decodeString(responseBuffer.getNextField());
      _DefaultInstrLevel = responseBuffer.decodeString(responseBuffer.getNextField());
      _HighRiskDispMode = responseBuffer.decodeString(responseBuffer.getNextField());
      _HighRiskLevels = responseBuffer.decodeString(responseBuffer.getNextField());
      _RiskApplEntity = responseBuffer.decodeString(responseBuffer.getNextField());
      _RiskApplEntitySeq = responseBuffer.decodeString(responseBuffer.getNextField());
      _RiskForAcctHldrRsk = responseBuffer.decodeString(responseBuffer.getNextField());
      _RebalDateFormat = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _IsRESPTransform = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _CRSEntityList = responseBuffer.decodeString(responseBuffer.getNextField());
      _TaxCompliance = responseBuffer.decodeString(responseBuffer.getNextField());
      _CRSActive = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _TrackTrActive = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _TrackTrRedCode = responseBuffer.decodeString(responseBuffer.getNextField());
      _TrackTrDepCode = responseBuffer.decodeString(responseBuffer.getNextField());
      _TrackTrOther = responseBuffer.decodeString(responseBuffer.getNextField());
      _OrigTradeFee = responseBuffer.decodeBoolean(responseBuffer.getNextField());
      _AltFndIdntfr = responseBuffer.decodeInteger(responseBuffer.getNextField());
      _TFSAAgeOfMajor = responseBuffer.decodeString(responseBuffer.getNextField());
      _TFSAProvCode = responseBuffer.decodeString(responseBuffer.getNextField());
      _ApplPUDbyDefault = responseBuffer.decodeString(responseBuffer.getNextField());
      _ApplPUDbyBEL = responseBuffer.decodeString(responseBuffer.getNextField());
      _ApplPUDbyCB = responseBuffer.decodeString(responseBuffer.getNextField());
      _RefundAllowed = responseBuffer.decodeString(responseBuffer.getNextField());
      _RefundSettleDateOpt = responseBuffer.decodeString(responseBuffer.getNextField());


   }

}

