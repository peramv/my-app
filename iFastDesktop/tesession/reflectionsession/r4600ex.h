// Machine generated IDispatch wrapper class(es) created with ClassWizard
/////////////////////////////////////////////////////////////////////////////
namespace ReflectionDispatch
{

// Application wrapper class

   class Application : public COleDispatchDriver
   {
   public:
      Application() {}      // Calls COleDispatchDriver default constructor
      Application(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}
      Application(const Application& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}

// Attributes
   public:

// Operations
      public:
      void AbortTransfer();
      void Break();
      void CancelTransfer();
      void Clear(long ClearWhat);
      void CloseAllConnections();
      long CompileScript(LPCTSTR ScriptName);
      void Connect(const VARIANT& ConnectionName);
      CString ConnectionSetting(LPCTSTR Setting);
      void Copy(long CopyWhat, const VARIANT& Format);
      void DDEExecute(long ConversationID, LPCTSTR Command);
      long DDEInitiate(LPCTSTR AppName, LPCTSTR TopicName);
      void DDEPoke(long ConversationID, LPCTSTR ItemName, LPCTSTR Value);
      CString DDEQueryServerTopics(LPCTSTR AppName, LPCTSTR TopicName);
      CString DDERequest(long ConversationID, LPCTSTR ItemName);
      void DDETerminate(long ConversationID);
      void DDETerminateAll();
      void Dial(LPCTSTR PhoneNumber, const VARIANT& Description, const VARIANT& InitString, const VARIANT& AnswerTimeout, const VARIANT& RetryTimes, const VARIANT& RetryInterval, const VARIANT& SpeakerMode, const VARIANT& SpeakerVolume, 
                const VARIANT& SpeakerOffAfterRedial, const VARIANT& IgnoreModemErrors);
      void Disconnect();
      void Display(LPCTSTR String, const VARIANT& Options);
      void DisplayFile(LPCTSTR Filename, const VARIANT& Options);
      void DropDTR();
      void EditScript(LPCTSTR ScriptName);
      CString EvaluateRCLExpression(LPCTSTR Expression, const VARIANT& Options);
      void ExecuteBuiltInFunction(LPCTSTR FunctionName);
      void ExecuteRCLCommand(LPCTSTR Command, const VARIANT& Options);
      BOOL FindText(LPCTSTR SearchFor, long StartRow, long StartColumn, const VARIANT& Options);
      void FlushPrinter();
      CString GetClipboardText();
      BOOL GetCommandGroupProfile(long CmdGroup);
      BOOL GetCommandProfile(LPCTSTR CmdName);
      CString GetText(long StartRow, long StartColumn, long EndRow, long EndColumn, const VARIANT& Options);
      long GetKeyMapCommandType(long Modifiers, LPCTSTR Key);
      CString GetKeyMapCommands(long Modifiers, LPCTSTR Key);
      CString GetOpenFilename(const VARIANT& FileFilter, const VARIANT& FilterIndex, const VARIANT& Title, const VARIANT& ButtonText);
      CString GetSaveAsFilename(const VARIANT& InitialFilename, const VARIANT& FileFilter, const VARIANT& FilterIndex, const VARIANT& Title, const VARIANT& ButtonText);
      long GetSerialStatistics(long WhichStatistic);
      void Hangup();
      void Help(const VARIANT& HelpTopic, const VARIANT& HelpFile);
      CString InputBox(LPCTSTR Prompt, const VARIANT& Title, const VARIANT& Default);
      void KermitReceiveFile(LPCTSTR LocalFile, LPCTSTR RemoteFile, const VARIANT& TransferType, const VARIANT& IfFileExists);
      void KermitSendFile(LPCTSTR LocalFile, LPCTSTR RemoteFile, const VARIANT& TransferType);
      void KermitStartServer();
      void KermitStopServer(const VARIANT& Logoff);
      void LockProfile(BOOL AllowUnlock, const VARIANT& Password);
      long MsgBox(LPCTSTR Message, const VARIANT& Type, const VARIANT& Caption);
      void NewSession(const VARIANT& SessionType, const VARIANT& SettingsFile);
      void OpenSettings(LPCTSTR Filename, const VARIANT& Type);
      CString PasswordBox(LPCTSTR Prompt, const VARIANT& Title, const VARIANT& Default);
      void Paste();
      void Print(long Range, const VARIANT& Copies);
      void PrintFile(LPCTSTR Filename);
      void PrintString(LPCTSTR String);
      void Quit();
      CString ReadChars(long Count, const VARIANT& Timeout, const VARIANT& Options);
      CString ReadLine(const VARIANT& Timeout, const VARIANT& Options, VARIANT* SawEndOfLine);
      CString ReadUntil(LPCTSTR UntilChars, const VARIANT& Timeout, const VARIANT& Options, VARIANT* WhichTerminator);
      void ResetTerminal(long ResetMode);
      void RestoreDefaults(long SettingType);
      void ResumeConnection(long ConnectionID);
      void RunScript(LPCTSTR ScriptName, const VARIANT& ScriptArguments);
      void SaveDisplayMemory(LPCTSTR Filename, const VARIANT& IfFileExists, const VARIANT& Options);
      void SaveSettings(LPCTSTR Filename, const VARIANT& Type, const VARIANT& IfFileExists);
      void SetClipboardText(LPCTSTR ClipboardText);
      void SetCommandGroupProfile(long CmdGroup, BOOL IsEnabled);
      void SetCommandProfile(LPCTSTR CmdName, BOOL IsEnabled);
      void SetKeyMap(long Modifiers, LPCTSTR Key, long CommandType, LPCTSTR Commands, const VARIANT& CommandArguments);
      void SetScanCodeName(long ScanType, long ScanCode, LPCTSTR ScanName);
      void SelectText(long StartRow, long StartColumn, long EndRow, long EndColumn, const VARIANT& SelectionType);
      void StartRecording();
      void StartTrace(LPCTSTR Filename, const VARIANT& IfFileExists, const VARIANT& TraceFormat);
      void StopRecording(LPCTSTR Filename, long Target, const VARIANT& IfFileExists);
      void StopScript();
      void StopTrace();
      long SuspendConnection();
      void Transmit(LPCTSTR String, const VARIANT& Options);
      void TransmitFile(LPCTSTR Filename, const VARIANT& PauseTime, const VARIANT& PromptChar, const VARIANT& Options);
      void TransmitTerminalKey(long KeyID);
      BOOL UnlockProfile(LPCTSTR Password);
      void Wait(const VARIANT& HowLong, const VARIANT& Options);
      void WaitForCall(const VARIANT& Description, const VARIANT& InitString);
      BOOL WaitForHostTrigger(const VARIANT& Timeout, const VARIANT& Options);
      BOOL WaitForSilence(const VARIANT& SilenceTime, const VARIANT& Timeout, const VARIANT& Options);
      BOOL WaitForString(LPCTSTR String, const VARIANT& Timeout, const VARIANT& Options);
      // method 'WaitForStrings' not emitted because of invalid return type or parameter type
      void WaitUntil(DATE DateTime, const VARIANT& Options);
      void WRQReceiveFile(LPCTSTR LocalFile, LPCTSTR RemoteFile, const VARIANT& TransferType, const VARIANT& IfFileExists, const VARIANT& Before, const VARIANT& Since, const VARIANT& Exclude);
      void WRQSendFile(LPCTSTR LocalFile, LPCTSTR RemoteFile, const VARIANT& TransferType, const VARIANT& IfFileExists, const VARIANT& Before, const VARIANT& Since, const VARIANT& Exclude, const VARIANT& Attributes);
      void WRQStartServer();
      void WRQStopServer();
      void XmodemReceiveFile(LPCTSTR LocalFile, const VARIANT& TransferType, const VARIANT& IfFileExists);
      void XmodemSendFile(LPCTSTR LocalFile, const VARIANT& TransferType);
      void ZmodemReceiveFile(LPCTSTR LocalFile, LPCTSTR RemoteFile, const VARIANT& TransferType, const VARIANT& IfFileExists);
      void ZmodemSendFile(LPCTSTR LocalFile, LPCTSTR RemoteFile, const VARIANT& TransferType);
      BOOL GetAllowScriptInterrupt();
      void SetAllowScriptInterrupt(BOOL bNewValue);
      long GetAnsiScreenColor();
      void SetAnsiScreenColor(long nNewValue);
      CString GetAnswerback();
      void SetAnswerback(LPCTSTR lpszNewValue);
      VARIANT GetApplication();
      void SetApplication(const VARIANT& newValue);
      BOOL GetAutoAnswerback();
      void SetAutoAnswerback(BOOL bNewValue);
      BOOL GetAutoFontSize();
      void SetAutoFontSize(BOOL bNewValue);
      BOOL GetAutoFormFeed();
      void SetAutoFormFeed(BOOL bNewValue);
      BOOL GetAutoLineFeed();
      void SetAutoLineFeed(BOOL bNewValue);
      BOOL GetAutoRepeat();
      void SetAutoRepeat(BOOL bNewValue);
      BOOL GetBell();
      void SetBell(BOOL bNewValue);
      BOOL GetBlinkCharacters();
      void SetBlinkCharacters(BOOL bNewValue);
      CString GetBlockTerminator();
      void SetBlockTerminator(LPCTSTR lpszNewValue);
      BOOL GetBoldCharacters();
      void SetBoldCharacters(BOOL bNewValue);
      BOOL GetBreakEnabled();
      void SetBreakEnabled(BOOL bNewValue);
      long GetBreakLength();
      void SetBreakLength(long nNewValue);
      BOOL GetBypassPrinterDriver();
      void SetBypassPrinterDriver(BOOL bNewValue);
      BOOL GetCapsLock();
      void SetCapsLock(BOOL bNewValue);
      CString GetCaption();
      void SetCaption(LPCTSTR lpszNewValue);
      BOOL GetClosePrinterManually();
      void SetClosePrinterManually(BOOL bNewValue);
      long GetCodePage();
      void SetCodePage(long nNewValue);
      long GetColumnsPerScroll();
      void SetColumnsPerScroll(long nNewValue);
      BOOL GetCompressBlankLines();
      void SetCompressBlankLines(BOOL bNewValue);
      BOOL GetConnected();
      void SetConnected(BOOL bNewValue);
      long GetConnectionID();
      void SetConnectionID(long nNewValue);
      long GetConnectionIndicator();
      void SetConnectionIndicator(long nNewValue);
      long GetConnectionError();
      void SetConnectionError(long nNewValue);
      CString GetConnectionErrorMessage();
      void SetConnectionErrorMessage(LPCTSTR lpszNewValue);
      CString GetConnectionSettings();
      void SetConnectionSettings(LPCTSTR lpszNewValue);
      CString GetConnectionType();
      void SetConnectionType(LPCTSTR lpszNewValue);
      BOOL GetConvertEOLToSeparator();
      void SetConvertEOLToSeparator(BOOL bNewValue);
      BOOL GetConvertMCSToNRC();
      void SetConvertMCSToNRC(BOOL bNewValue);
      BOOL GetConvertNRCToMCS();
      void SetConvertNRCToMCS(BOOL bNewValue);
      BOOL GetConvertSeparatorToEOL();
      void SetConvertSeparatorToEOL(BOOL bNewValue);
      BOOL GetCopyGraphicsBackground();
      void SetCopyGraphicsBackground(BOOL bNewValue);
      BOOL GetCopyGraphicsVGAColors();
      void SetCopyGraphicsVGAColors(BOOL bNewValue);
      BOOL GetCursorBlink();
      void SetCursorBlink(BOOL bNewValue);
      long GetCursorColumn();
      void SetCursorColumn(long nNewValue);
      long GetCursorRow();
      void SetCursorRow(long nNewValue);
      long GetCursorShape();
      void SetCursorShape(long nNewValue);
      BOOL GetCursorVisible();
      void SetCursorVisible(BOOL bNewValue);
      long GetDAResponse();
      void SetDAResponse(long nNewValue);
      BOOL GetDcd();
      void SetDcd(BOOL bNewValue);
      BOOL GetDDEServerEnable();
      void SetDDEServerEnable(BOOL bNewValue);
      CString GetDDEServerName();
      void SetDDEServerName(LPCTSTR lpszNewValue);
      long GetDDETimeout();
      void SetDDETimeout(long nNewValue);
      CString GetDefaultPrinter();
      void SetDefaultPrinter(LPCTSTR lpszNewValue);
      long GetDefaultScriptLanguage();
      void SetDefaultScriptLanguage(long nNewValue);
      BOOL GetDeleteTrailingSpaces();
      void SetDeleteTrailingSpaces(BOOL bNewValue);
      long GetDisplayColumns();
      void SetDisplayColumns(long nNewValue);
      long GetDisplayMemoryBlocks();
      void SetDisplayMemoryBlocks(long nNewValue);
      long GetDisplayMemoryTopRow();
      void SetDisplayMemoryTopRow(long nNewValue);
      long GetDisplayRows();
      void SetDisplayRows(long nNewValue);
      BOOL GetEndOfLineWrap();
      void SetEndOfLineWrap(BOOL bNewValue);
      BOOL GetEnqAck();
      void SetEnqAck(BOOL bNewValue);
      CString GetFontName();
      void SetFontName(LPCTSTR lpszNewValue);
      long GetFontSize();
      void SetFontSize(long nNewValue);
      BOOL GetForceAutoRepeat();
      void SetForceAutoRepeat(BOOL bNewValue);
      CString GetFullName();
      void SetFullName(LPCTSTR lpszNewValue);
      long GetGraphicsDestination();
      void SetGraphicsDestination(long nNewValue);
      BOOL GetGraphicsFixScreen();
      void SetGraphicsFixScreen(BOOL bNewValue);
      long GetGraphicsLevel();
      void SetGraphicsLevel(long nNewValue);
      BOOL GetGraphicsOutputCursor();
      void SetGraphicsOutputCursor(BOOL bNewValue);
      long GetGraphicsPrintMode();
      void SetGraphicsPrintMode(long nNewValue);
      BOOL GetGraphicsScrolling();
      void SetGraphicsScrolling(BOOL bNewValue);
      long GetGraphicsTerminalType();
      void SetGraphicsTerminalType(long nNewValue);
      long GetHeight();
      void SetHeight(long nNewValue);
      BOOL GetHorizontalCoupling();
      void SetHorizontalCoupling(BOOL bNewValue);
      long GetHostCharacterSet();
      void SetHostCharacterSet(long nNewValue);
      BOOL GetHostColorChanges();
      void SetHostColorChanges(BOOL bNewValue);
      long GetHostStatusLine();
      void SetHostStatusLine(long nNewValue);
      CString GetHostTriggerCharacter();
      void SetHostTriggerCharacter(LPCTSTR lpszNewValue);
      CString GetHostsFile();
      void SetHostsFile(LPCTSTR lpszNewValue);
      BOOL GetImageCurrentColors();
      void SetImageCurrentColors(BOOL bNewValue);
      long GetImageDither();
      void SetImageDither(long nNewValue);
      BOOL GetImageFleshtones();
      void SetImageFleshtones(BOOL bNewValue);
      BOOL GetInsertMode();
      void SetInsertMode(BOOL bNewValue);
      BOOL GetInverseVideo();
      void SetInverseVideo(BOOL bNewValue);
      long GetJumpScrollSpeed();
      void SetJumpScrollSpeed(long nNewValue);
      BOOL GetKatakanaDisplay();
      void SetKatakanaDisplay(BOOL bNewValue);
      BOOL GetKermitAutomaticServer();
      void SetKermitAutomaticServer(BOOL bNewValue);
      long GetKermitChecksum();
      void SetKermitChecksum(long nNewValue);
      long GetKermitPacketSize();
      void SetKermitPacketSize(long nNewValue);
      CString GetKermitReceiveEndCharacter();
      void SetKermitReceiveEndCharacter(LPCTSTR lpszNewValue);
      CString GetKermitReceiveStartCharacter();
      void SetKermitReceiveStartCharacter(LPCTSTR lpszNewValue);
      CString GetKermitReceiveStartupCommand();
      void SetKermitReceiveStartupCommand(LPCTSTR lpszNewValue);
      CString GetKermitSendEndCharacter();
      void SetKermitSendEndCharacter(LPCTSTR lpszNewValue);
      CString GetKermitSendStartCharacter();
      void SetKermitSendStartCharacter(LPCTSTR lpszNewValue);
      CString GetKermitSendStartupCommand();
      void SetKermitSendStartupCommand(LPCTSTR lpszNewValue);
      CString GetKermitServerStartupCommand();
      void SetKermitServerStartupCommand(LPCTSTR lpszNewValue);
      long GetKermitTransferType();
      void SetKermitTransferType(long nNewValue);
      BOOL GetKermitTranslateCharacters();
      void SetKermitTranslateCharacters(BOOL bNewValue);
      BOOL GetKermitTranslateFilenames();
      void SetKermitTranslateFilenames(BOOL bNewValue);
      long GetKermitWindowSize();
      void SetKermitWindowSize(long nNewValue);
      BOOL GetKeyboardLocked();
      void SetKeyboardLocked(BOOL bNewValue);
      long GetLanguage();
      void SetLanguage(long nNewValue);
      long GetLeft();
      void SetLeft(long nNewValue);
      BOOL GetLocalEcho();
      void SetLocalEcho(BOOL bNewValue);
      BOOL GetMacrographReports();
      void SetMacrographReports(BOOL bNewValue);
      BOOL GetMaintainUnscaledImage();
      void SetMaintainUnscaledImage(BOOL bNewValue);
      BOOL GetMarginBell();
      void SetMarginBell(BOOL bNewValue);
      BOOL GetMultiplePageTerminal();
      void SetMultiplePageTerminal(BOOL bNewValue);
      CString GetName();
      void SetName(LPCTSTR lpszNewValue);
      long GetNationalReplacementSet();
      void SetNationalReplacementSet(long nNewValue);
      CString GetNativeOS();
      void SetNativeOS(LPCTSTR lpszNewValue);
      BOOL GetNewPageOnClear();
      void SetNewPageOnClear(BOOL bNewValue);
      BOOL GetNumLock();
      void SetNumLock(BOOL bNewValue);
      CString GetOLEServerName();
      void SetOLEServerName(LPCTSTR lpszNewValue);
      BOOL GetOnline();
      void SetOnline(BOOL bNewValue);
      long GetPPLActivityTimeout();
      void SetPPLActivityTimeout(long nNewValue);
      CString GetPPLStartupCommand();
      void SetPPLStartupCommand(LPCTSTR lpszNewValue);
      BOOL GetPageCoupling();
      void SetPageCoupling(BOOL bNewValue);
      VARIANT GetParent();
      void SetParent(const VARIANT& newValue);
      long GetPasteBufferSize();
      void SetPasteBufferSize(long nNewValue);
      long GetPasteDelay();
      void SetPasteDelay(long nNewValue);
      CString GetPath();
      void SetPath(LPCTSTR lpszNewValue);
      BOOL GetPreserveNRC();
      void SetPreserveNRC(BOOL bNewValue);
      long GetPrinterBottomMargin();
      void SetPrinterBottomMargin(long nNewValue);
      long GetPrinterColumns();
      void SetPrinterColumns(long nNewValue);
      CString GetPrintToFile();
      void SetPrintToFile(LPCTSTR lpszNewValue);
      CString GetPrinterFontName();
      void SetPrinterFontName(LPCTSTR lpszNewValue);
      BOOL GetPrinterInverseFont();
      void SetPrinterInverseFont(BOOL bNewValue);
      BOOL GetPrinterLogging();
      void SetPrinterLogging(BOOL bNewValue);
      BOOL GetPrinterPassThroughConversion();
      void SetPrinterPassThroughConversion(BOOL bNewValue);
      long GetPrinterRows();
      void SetPrinterRows(long nNewValue);
      long GetPrinterTimeout();
      void SetPrinterTimeout(long nNewValue);
      BOOL GetProcessDataComm();
      void SetProcessDataComm(BOOL bNewValue);
      BOOL GetReadCtrlZAsEOF();
      void SetReadCtrlZAsEOF(BOOL bNewValue);
      BOOL GetReadTabAsSpaces();
      void SetReadTabAsSpaces(BOOL bNewValue);
      BOOL GetReGISAlwaysGraphics();
      void SetReGISAlwaysGraphics(BOOL bNewValue);
      BOOL GetReportErrors();
      void SetReportErrors(BOOL bNewValue);
      BOOL GetRestoreTextColors();
      void SetRestoreTextColors(BOOL bNewValue);
      BOOL GetSaveFromScrollingRegion();
      void SetSaveFromScrollingRegion(BOOL bNewValue);
      BOOL GetSavePasswords();
      void SetSavePasswords(BOOL bNewValue);
      BOOL GetSaveWindowPosition();
      void SetSaveWindowPosition(BOOL bNewValue);
      long GetScreenTopRow();
      void SetScreenTopRow(long nNewValue);
      long GetScrollOptimization();
      void SetScrollOptimization(long nNewValue);
      long GetSelectionEndColumn();
      void SetSelectionEndColumn(long nNewValue);
      long GetSelectionEndRow();
      void SetSelectionEndRow(long nNewValue);
      long GetSelectionStartColumn();
      void SetSelectionStartColumn(long nNewValue);
      long GetSelectionStartRow();
      void SetSelectionStartRow(long nNewValue);
      long GetSelectionType();
      void SetSelectionType(long nNewValue);
      CString GetSerialNumber();
      void SetSerialNumber(LPCTSTR lpszNewValue);
      CString GetSettingsAuthor();
      void SetSettingsAuthor(LPCTSTR lpszNewValue);
      CString GetSettingsComments();
      void SetSettingsComments(LPCTSTR lpszNewValue);
      CString GetSettingsFile();
      void SetSettingsFile(LPCTSTR lpszNewValue);
      CString GetSettingsTitle();
      void SetSettingsTitle(LPCTSTR lpszNewValue);
      BOOL GetShowControlCharacters();
      void SetShowControlCharacters(BOOL bNewValue);
      BOOL GetShowTerminalFrame();
      void SetShowTerminalFrame(BOOL bNewValue);
      BOOL GetShowTerminalKeyboard();
      void SetShowTerminalKeyboard(BOOL bNewValue);
      BOOL GetShowToolbar();
      void SetShowToolbar(BOOL bNewValue);
      long GetSingleByteUPSS();
      void SetSingleByteUPSS(long nNewValue);
      BOOL GetSmoothScroll();
      void SetSmoothScroll(BOOL bNewValue);
      long GetSpacesPerTab();
      void SetSpacesPerTab(long nNewValue);
      long GetStartupAction();
      void SetStartupAction(long nNewValue);
      CString GetStartupConnection();
      void SetStartupConnection(LPCTSTR lpszNewValue);
      CString GetStatusBar();
      void SetStatusBar(LPCTSTR lpszNewValue);
      long GetTerminalClass();
      void SetTerminalClass(long nNewValue);
      long GetTerminalSound();
      void SetTerminalSound(long nNewValue);
      long GetTerminalType();
      void SetTerminalType(long nNewValue);
      long GetTextFileCharacterSet();
      void SetTextFileCharacterSet(long nNewValue);
      long GetTop();
      void SetTop(long nNewValue);
      long GetTransfer8Dot3FilenameCase();
      void SetTransfer8Dot3FilenameCase(long nNewValue);
      long GetTransferDefaultProtocol();
      void SetTransferDefaultProtocol(long nNewValue);
      CString GetTransferDownloadDirectory();
      void SetTransferDownloadDirectory(LPCTSTR lpszNewValue);
      long GetTransferIfFileExistsDefault();
      void SetTransferIfFileExistsDefault(long nNewValue);
      BOOL GetTransferReceiveAs8Dot3();
      void SetTransferReceiveAs8Dot3(BOOL bNewValue);
      long GetTransferReceiveTimeout();
      void SetTransferReceiveTimeout(long nNewValue);
      long GetTransferRetryLimit();
      void SetTransferRetryLimit(long nNewValue);
      BOOL GetTransferSpacesToUnderscores();
      void SetTransferSpacesToUnderscores(BOOL bNewValue);
      long GetTransferStartTimeout();
      void SetTransferStartTimeout(long nNewValue);
      BOOL GetTransferStatusWindow();
      void SetTransferStatusWindow(BOOL bNewValue);
      BOOL GetTransferUnderscoresToSpaces();
      void SetTransferUnderscoresToSpaces(BOOL bNewValue);
      BOOL GetTranslateCharacters();
      void SetTranslateCharacters(BOOL bNewValue);
      BOOL GetTranslatePrintedCharacters();
      void SetTranslatePrintedCharacters(BOOL bNewValue);
      BOOL GetTransmitXonXoff();
      void SetTransmitXonXoff(BOOL bNewValue);
      BOOL GetUnderlineCharacters();
      void SetUnderlineCharacters(BOOL bNewValue);
      BOOL GetUseAnsiColor();
      void SetUseAnsiColor(BOOL bNewValue);
      BOOL GetUseDefaultPrinterFont();
      void SetUseDefaultPrinterFont(BOOL bNewValue);
      BOOL GetUseNRC();
      void SetUseNRC(BOOL bNewValue);
      BOOL GetUserDefinedKeysLocked();
      void SetUserDefinedKeysLocked(BOOL bNewValue);
      CString GetUserDirectory();
      void SetUserDirectory(LPCTSTR lpszNewValue);
      BOOL GetUserFeaturesLocked();
      void SetUserFeaturesLocked(BOOL bNewValue);
      long GetVTBackspaceSends();
      void SetVTBackspaceSends(long nNewValue);
      long GetVTCursorKeyMode();
      void SetVTCursorKeyMode(long nNewValue);
      long GetVTKeypadMode();
      void SetVTKeypadMode(long nNewValue);
      BOOL GetVTTek();
      void SetVTTek(BOOL bNewValue);
      long GetVersionMajor();
      void SetVersionMajor(long nNewValue);
      long GetVersionMinor();
      void SetVersionMinor(long nNewValue);
      CString GetVersionString();
      void SetVersionString(LPCTSTR lpszNewValue);
      BOOL GetVerticalCoupling();
      void SetVerticalCoupling(BOOL bNewValue);
      BOOL GetVisible();
      void SetVisible(BOOL bNewValue);
      BOOL GetWeakDCS();
      void SetWeakDCS(BOOL bNewValue);
      long GetWidth();
      void SetWidth(long nNewValue);
      long GetWindowState();
      void SetWindowState(long nNewValue);
      BOOL GetWriteCtrlZAsEOF();
      void SetWriteCtrlZAsEOF(BOOL bNewValue);
      BOOL GetWriteSpacesAsTab();
      void SetWriteSpacesAsTab(BOOL bNewValue);
      long GetWRQCompression();
      void SetWRQCompression(long nNewValue);
      CString GetWRQEndCharacter();
      void SetWRQEndCharacter(LPCTSTR lpszNewValue);
      CString GetWRQExtraCharacters();
      void SetWRQExtraCharacters(LPCTSTR lpszNewValue);
      long GetWRQFastFileTransfer();
      void SetWRQFastFileTransfer(long nNewValue);
      long GetWRQFrameSize();
      void SetWRQFrameSize(long nNewValue);
      CString GetWRQFrameTerminator();
      void SetWRQFrameTerminator(LPCTSTR lpszNewValue);
      CString GetWRQHostErrorMessage();
      void SetWRQHostErrorMessage(LPCTSTR lpszNewValue);
      long GetWRQHostRecordSize();
      void SetWRQHostRecordSize(long nNewValue);
      long GetWRQHostSystem();
      void SetWRQHostSystem(long nNewValue);
      BOOL GetWRQKeepFile();
      void SetWRQKeepFile(BOOL bNewValue);
      long GetWRQMPEFilenames();
      void SetWRQMPEFilenames(long nNewValue);
      BOOL GetWRQMPEStream();
      void SetWRQMPEStream(BOOL bNewValue);
      BOOL GetWRQPreserveCounts();
      void SetWRQPreserveCounts(BOOL bNewValue);
      BOOL GetWRQPreserveDate();
      void SetWRQPreserveDate(BOOL bNewValue);
      BOOL GetWRQQEditFormat();
      void SetWRQQEditFormat(BOOL bNewValue);
      BOOL GetWRQRemoveExtension();
      void SetWRQRemoveExtension(BOOL bNewValue);
      BOOL GetWRQSendSpooled();
      void SetWRQSendSpooled(BOOL bNewValue);
      BOOL GetWRQShowHidden();
      void SetWRQShowHidden(BOOL bNewValue);
      CString GetWRQStartCharacter();
      void SetWRQStartCharacter(LPCTSTR lpszNewValue);
      CString GetWRQStartupCommand();
      void SetWRQStartupCommand(LPCTSTR lpszNewValue);
      BOOL GetWRQSubmitBatch();
      void SetWRQSubmitBatch(BOOL bNewValue);
      BOOL GetWRQSubmitPrint();
      void SetWRQSubmitPrint(BOOL bNewValue);
      long GetWRQTransferLink();
      void SetWRQTransferLink(long nNewValue);
      long GetWRQTransferType();
      void SetWRQTransferType(long nNewValue);
      BOOL GetWRQTransferWithAttributes();
      void SetWRQTransferWithAttributes(BOOL bNewValue);
      BOOL GetWRQTranslateCCtl();
      void SetWRQTranslateCCtl(BOOL bNewValue);
      BOOL GetWRQUseBlockReads();
      void SetWRQUseBlockReads(BOOL bNewValue);
      BOOL GetWRQUseCTermFrameSize();
      void SetWRQUseCTermFrameSize(BOOL bNewValue);
      long GetWRQWindowSize();
      void SetWRQWindowSize(long nNewValue);
      long GetXmodemExtension();
      void SetXmodemExtension(long nNewValue);
      long GetXmodemTransferType();
      void SetXmodemTransferType(long nNewValue);
      BOOL GetXmodemTranslateCharacters();
      void SetXmodemTranslateCharacters(BOOL bNewValue);
      BOOL GetZmodemAutoDownload();
      void SetZmodemAutoDownload(BOOL bNewValue);
      BOOL GetZmodemDeleteCancelledReceives();
      void SetZmodemDeleteCancelledReceives(BOOL bNewValue);
      long GetZmodemPacketSize();
      void SetZmodemPacketSize(long nNewValue);
      CString GetZmodemReceiveStartupCommand();
      void SetZmodemReceiveStartupCommand(LPCTSTR lpszNewValue);
      CString GetZmodemSendStartupCommand();
      void SetZmodemSendStartupCommand(LPCTSTR lpszNewValue);
      long GetZmodemTransferType();
      void SetZmodemTransferType(long nNewValue);
      BOOL GetZmodemTranslateCharacters();
      void SetZmodemTranslateCharacters(BOOL bNewValue);
      BOOL GetZmodemTranslateFilenames();
      void SetZmodemTranslateFilenames(BOOL bNewValue);
      long GetCompensateFrameSpaces();
      void SetCompensateFrameSpaces(long nNewValue);
      BOOL GetGlobalCapsLock();
      void SetGlobalCapsLock(BOOL bNewValue);
      BOOL GetGlobalNumLock();
      void SetGlobalNumLock(BOOL bNewValue);
      BOOL GetGlobalScrollLock();
      void SetGlobalScrollLock(BOOL bNewValue);
      BOOL GetJISRomanG0();
      void SetJISRomanG0(BOOL bNewValue);
      BOOL GetOnDemandFonts();
      void SetOnDemandFonts(BOOL bNewValue);
      BOOL GetProportionalFonts();
      void SetProportionalFonts(BOOL bNewValue);
      void Activate();
      CString GetKeyMapCommandArgs(long Modifiers, LPCTSTR Key);
      void SetPropertyProfile(LPCTSTR PropertyName, long IsEnabled);
      void PlaySound(LPCTSTR SoundFile, const VARIANT& Asynchronous);
      BOOL PropertyIsModifiable(LPCTSTR PropertyName);
      long GetFileType(LPCTSTR Filename);
      void Shell(LPCTSTR Application, const VARIANT& CommandLine, const VARIANT& WindowState, const VARIANT& Wait);
      void CopyAboutBoxInfo();
      void ConnectTemplate(const VARIANT& ConnectionName, const VARIANT& Options);
      void OpenSettingsExtended(LPCTSTR Filename, const VARIANT& Type, const VARIANT& Options);
      BOOL WaitForIncomingData(const VARIANT& Timeout, const VARIANT& Options);
      void FlashWindow(const VARIANT& Rate);
      void SetColorMap(long Attribute, long Foreground, long Background);
      long ForegroundColor(long Attribute);
      long BackgroundColor(long Attribute);
      void SetColorRGB(long Color, long Red, long Green, long Blue);
      long GetColorRGB(long Color, long WhichValue);
      long CharacterAttributes(long Row, long Column);
      void SetAnsiColorRGB(long AnsiColor, long Red, long Green, long Blue);
      long GetAnsiColorRGB(long AnsiColor, long WhichValue);
      void FTPStartServer(const VARIANT& UserName, const VARIANT& Password, const VARIANT& HostName, const VARIANT& Options);
      void FTPStopServer();
      void FTPReceiveFile(LPCTSTR LocalFile, LPCTSTR RemoteFile, const VARIANT& TransferType, const VARIANT& IfFileExists, const VARIANT& Before, const VARIANT& Since, const VARIANT& Exclude);
      void FTPSendFile(LPCTSTR LocalFile, LPCTSTR RemoteFile, const VARIANT& TransferType, const VARIANT& IfFileExists, const VARIANT& Before, const VARIANT& Since, const VARIANT& Exclude);
      CString GetPropertyInformation(const VARIANT& Name, const VARIANT& Options);
      void StartRecordingSilently(const VARIANT& Options);
      void DestroyToolbar(LPCTSTR toolbarName);
      void SetMouseMap(long Modifiers, LPCTSTR Chord, long CommandType, LPCTSTR Commands, const VARIANT& CommandArguments);
      void StatusBox(LPCTSTR Text, const VARIANT& Options);
      void CloseStatusBox();
      CString GetFolderName(const VARIANT& Title, const VARIANT& Text, const VARIANT& StartInFolder);
      BOOL GetAllowJIS();
      void SetAllowJIS(BOOL bNewValue);
      CString GetCommandLineSwitches();
      void SetCommandLineSwitches(LPCTSTR lpszNewValue);
      BOOL GetDisplayEnabled();
      void SetDisplayEnabled(BOOL bNewValue);
      BOOL GetFlashWindowOnDisconnect();
      void SetFlashWindowOnDisconnect(BOOL bNewValue);
      BOOL GetForceC1Controls();
      void SetForceC1Controls(BOOL bNewValue);
      BOOL GetMinimizeCPUUsage();
      void SetMinimizeCPUUsage(BOOL bNewValue);
      long GetFoundTextRow();
      void SetFoundTextRow(long nNewValue);
      long GetFoundTextColumn();
      void SetFoundTextColumn(long nNewValue);
      BOOL GetPrinterPassEscape();
      void SetPrinterPassEscape(BOOL bNewValue);
      BOOL GetRecording();
      void SetRecording(BOOL bNewValue);
      CString GetRBVersionString();
      void SetRBVersionString(LPCTSTR lpszNewValue);
      CString GetScriptFolder();
      void SetScriptFolder(LPCTSTR lpszNewValue);
      CString GetSettingsExtension();
      void SetSettingsExtension(LPCTSTR lpszNewValue);
      BOOL GetShowMenuBar();
      void SetShowMenuBar(BOOL bNewValue);
      BOOL GetShowStatusBar();
      void SetShowStatusBar(BOOL bNewValue);
      BOOL GetShowVerticalScrollBar();
      void SetShowVerticalScrollBar(BOOL bNewValue);
      BOOL GetTransferDisconnectWhenDone();
      void SetTransferDisconnectWhenDone(BOOL bNewValue);
      long GetWindowHandle();
      void SetWindowHandle(long nNewValue);
      CString GetWordBoundaryInclusive();
      void SetWordBoundaryInclusive(LPCTSTR lpszNewValue);
      CString GetWordBoundaryExclusive();
      void SetWordBoundaryExclusive(LPCTSTR lpszNewValue);
      BOOL GetWRQShowRecordSize();
      void SetWRQShowRecordSize(BOOL bNewValue);
      BOOL GetAutoScroll();
      void SetAutoScroll(BOOL bNewValue);
      BOOL GetPrintANSIColorBackground();
      void SetPrintANSIColorBackground(BOOL bNewValue);
      BOOL GetRecognizeDEL();
      void SetRecognizeDEL(BOOL bNewValue);
      long GetReceivedCR();
      void SetReceivedCR(long nNewValue);
      BOOL GetWyseProtectMode();
      void SetWyseProtectMode(BOOL bNewValue);
      BOOL GetWyseBlockMode();
      void SetWyseBlockMode(BOOL bNewValue);
      long GetWyseAttributeMode();
      void SetWyseAttributeMode(long nNewValue);
      long GetWyseBlockTerminator();
      void SetWyseBlockTerminator(long nNewValue);
      BOOL GetWyseAcceptNulls();
      void SetWyseAcceptNulls(BOOL bNewValue);
      long GetWyseReturnKey();
      void SetWyseReturnKey(long nNewValue);
      long GetWyseEnterKey();
      void SetWyseEnterKey(long nNewValue);
      long GetWyseLabelLines();
      void SetWyseLabelLines(long nNewValue);
      long GetWyseStatusLineDisplay();
      void SetWyseStatusLineDisplay(long nNewValue);
      BOOL GetReGISMoveMouse();
      void SetReGISMoveMouse(BOOL bNewValue);
      BOOL GetShowTitleBar();
      void SetShowTitleBar(BOOL bNewValue);
      long GetPrinterOrientation();
      void SetPrinterOrientation(long nNewValue);
      BOOL GetDigitalLA210PrinterEmulation();
      void SetDigitalLA210PrinterEmulation(BOOL bNewValue);
      BOOL GetConfirmExit();
      void SetConfirmExit(BOOL bNewValue);
      long GetSaveChanges();
      void SetSaveChanges(long nNewValue);
      BOOL GetToolbarIncludeLabels();
      void SetToolbarIncludeLabels(BOOL bNewValue);
      BOOL GetToolbarFlatLook();
      void SetToolbarFlatLook(BOOL bNewValue);
      long GetFTPTransferType();
      void SetFTPTransferType(long nNewValue);
      CString GetFTPUserName();
      void SetFTPUserName(LPCTSTR lpszNewValue);
      CString GetFTPPassword();
      void SetFTPPassword(LPCTSTR lpszNewValue);
      CString GetFTPHostName();
      void SetFTPHostName(LPCTSTR lpszNewValue);
      BOOL GetFTPTranslateCharacters();
      void SetFTPTranslateCharacters(BOOL bNewValue);
      long GetPrinterMarginBottom();
      void SetPrinterMarginBottom(long nNewValue);
      long GetPrinterMarginLeft();
      void SetPrinterMarginLeft(long nNewValue);
      long GetPrinterMarginRight();
      void SetPrinterMarginRight(long nNewValue);
      long GetPrinterMarginTop();
      void SetPrinterMarginTop(long nNewValue);
      long GetHotspotRow();
      void SetHotspotRow(long nNewValue);
      long GetHotspotColumn();
      void SetHotspotColumn(long nNewValue);
      long GetHotspotLength();
      void SetHotspotLength(long nNewValue);
      long GetHotspotsModifiers();
      void SetHotspotsModifiers(long nNewValue);
      long GetHotspotsChord();
      void SetHotspotsChord(long nNewValue);
      BOOL GetHotspotsEnabled();
      void SetHotspotsEnabled(BOOL bNewValue);
      BOOL GetHotspotsVisible();
      void SetHotspotsVisible(BOOL bNewValue);
      CString GetHotspotText();
      void SetHotspotText(LPCTSTR lpszNewValue);
      BOOL GetWRQFastCompression();
      void SetWRQFastCompression(BOOL bNewValue);
      BOOL GetWidthChangeClear();
      void SetWidthChangeClear(BOOL bNewValue);
      long GetMouseRow();
      void SetMouseRow(long nNewValue);
      long GetMouseColumn();
      void SetMouseColumn(long nNewValue);
      BOOL GetUseModemDialerV5();
      void SetUseModemDialerV5(BOOL bNewValue);
      CString GetShortcutFolder();
      void SetShortcutFolder(LPCTSTR lpszNewValue);
      BOOL GetCreateShortcut();
      void SetCreateShortcut(BOOL bNewValue);
      BOOL GetVT640Compatible();
      void SetVT640Compatible(BOOL bNewValue);
      CString GetTransferAutoDetectASCIIExtensionList();
      void SetTransferAutoDetectASCIIExtensionList(LPCTSTR lpszNewValue);
      CString GetTransferAutoDetectBinaryExtensionList();
      void SetTransferAutoDetectBinaryExtensionList(LPCTSTR lpszNewValue);
      CString GetTransferAutoDetectImageLabelsExtensionList();
      void SetTransferAutoDetectImageLabelsExtensionList(LPCTSTR lpszNewValue);
      CString GetTransferAutoDetectScanExtensionList();
      void SetTransferAutoDetectScanExtensionList(LPCTSTR lpszNewValue);
      long GetTransferAutoDetectDefaultType();
      void SetTransferAutoDetectDefaultType(long nNewValue);
      long GetHostForDefaultSettings();
      void SetHostForDefaultSettings(long nNewValue);
      CString GetSiteDefaults();
      void SetSiteDefaults(LPCTSTR lpszNewValue);
      BOOL GetPrinterFitFontToPage();
      void SetPrinterFitFontToPage(BOOL bNewValue);
      long GetWebSecurity();
      void SetWebSecurity(long nNewValue);
   };

} // namespace ReflectionDispatch
