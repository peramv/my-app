<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
// FieldIds
// ViewsGenerator: This file was generated by ViewsGenerator - Version <#= System.Reflection.Assembly.GetExecutingAssembly().GetName().Version.ToString() #>
// ViewsGenerator: Generated on : <#= DateTime.Now.ToString(strDataTimeFormat) #>

#include "stdafx.h"
#include "ifast_dataids.hpp"
#include "ifast_dataimpl_exists.hpp"
#include <bfdata/bfdata.hpp>

// Includes for datasets
<# foreach(KeyValuePair<string, string> entry in dataSetNameAndIDsDictionary)
{ #>
#include "dsi_<#= entry.Key.Replace(".", "_").Replace("RepeatRecord", "Repeat_Record").ToLower() #>.h"
<# } #>

// create self-installing static instance of the Exists object
static ifds::ifast_dataimpl_exists ifast_dataimpl_exists_StaticInstance;

namespace ifds
{
   ifast_dataimpl_exists::ifast_dataimpl_exists()
   {
      BFData::setExistsObject( this );
   }

   bool ifast_dataimpl_exists::exists( const BFDataId& dataId, const BFFieldId& fieldId ) const
   {
      switch( dataId.getId() )
      {
<# foreach(KeyValuePair<string, string> entry in dataSetNameAndIDsDictionary)
{ #>
         case <#= entry.Value #>: return dsi_<#= entry.Key.Replace(".", "_").Replace("RepeatRecord", "Repeat_Record") #>::fieldExists( fieldId );
<# } #>
      }
      return false;
   }
}
