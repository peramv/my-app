<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
// BFSubstitutionSet objects
// ViewsGenerator: This file was generated by ViewsGenerator - Version <#= System.Reflection.Assembly.GetExecutingAssembly().GetName().Version.ToString() #>
// ViewsGenerator: Generated on : <#= DateTime.Now.ToString(strDataTimeFormat) #>


#include "stdafx.h"
#include <commonport.h>
#include <clientlocale.hpp>

<# for (int i = indexOfIfdsNamespaceLine; i <= indexOfPreviousItemLastLine; i++)
{#>
<#= lines[i] #>
<#}#>
   // Substitution set <#= substitutionSetItem.Name #>.  Language: <#= substitutionSetItem.Language #><#= substitutionSetItem.MarketName != null && substitutionSetItem.MarketName != "" ? ", Market: " + substitutionSetItem.MarketId : "" #><#= substitutionSetItem.ClientId != null && substitutionSetItem.ClientId != "" ? ", Client: " + substitutionSetItem.ClientId : "" #>
   static const I_CHAR* <#= substitutionSetItem.KeysName #>[] = {
<# for (int i = 0; i < substitutionSetItem.KeysArray.Count; i++)
   {#>
      I_("<#= substitutionSetItem.KeysArray[i] #>"),
<#}#>
      0x00
   };

   static const I_CHAR* <#= substitutionSetItem.ValuesName #>[] = {
<# for (int i = 0; i < substitutionSetItem.ValuesArray.Count; i++)
   {#>
      I_("<#= substitutionSetItem.ValuesArray[i] #>"),
<#}#>
      0x00
   };

   extern const BFSubstitutionSet SubSet_<#= substitutionSetItem.SubstitutionSetId #>;
   const BFSubstitutionSet SubSet_<#= substitutionSetItem.SubstitutionSetId #>( 
    &<#= substitutionSetItem.KeysName #>[0], &<#= substitutionSetItem.ValuesName #>[0] );
<# for (int i = indexOfPreviousItemLastLine + 1; i < lines.Count(); i++)
{#>
<#= lines[i] #>
<#}
#>