<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
// DataImplFactory implementation for project ifast
// ViewsGenerator: This file was generated by ViewsGenerator - Version <#= System.Reflection.Assembly.GetExecutingAssembly().GetName().Version.ToString() #>
// ViewsGenerator: Generated on : <#= DateTime.Now.ToString(strDataTimeFormat) #>


#include "stdafx.h"
#include <bfdata/bfdata.hpp>
#include "ifast_dataids.hpp"
#include "ifast_dataimplfactory.hpp"

<# foreach(KeyValuePair<string, string> entry in dataSetNameAndIDsDictionary)
{ #>
extern BFDataImpl* create_dsi_<#= entry.Key.Replace(".", "_").Replace("RepeatRecord", "Repeat_Record") #>();
<# } #>

static ifast_DataImplFactory s_dataImplFactory;

ifast_DataImplFactory::ifast_DataImplFactory()
{
   BFData::setImplFactory( this );
}

ifast_DataImplFactory::~ifast_DataImplFactory()
{
   if ( BFData::getImplFactory() == this )
   {
      BFData::setImplFactory( NULL );
   }
}

BFDataImpl* ifast_DataImplFactory::createImplementer( const BFDataId& id ) const
{
<# foreach(KeyValuePair<string, string> entry in dataSetNameAndIDsDictionary)
{ #>
   if ( id == ifds::<#= entry.Key.Replace(".", "_").Replace("RepeatRecord", "Repeat_Record") #> ) { return create_dsi_<#= entry.Key.Replace(".", "_").Replace("RepeatRecord", "Repeat_Record") #>(); }
<# } #>
   throw "unknown datasetid";
}

