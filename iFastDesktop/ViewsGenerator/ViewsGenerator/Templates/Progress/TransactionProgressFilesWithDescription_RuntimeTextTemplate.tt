<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
/*
 * Procedure: <#= ViewFileName #>
 *
 * View Id: <#= ViewId #>
 * View name: <#= ViewItemName #>
 * View description: <#= ViewDescription #>
 *
 * Purpose:
 * Definitions for transaction #<#= ViewId #> (<#= ViewItemName #>)
 *
 * Inputs:
 * {*}   - Scope of the declarations, either 'new' or blank
 *
 * Outputs:
 * Transaction variables are declared (see below).
 *
 * Notes:
 * These declaration should be identical to production declarations.
 * Even so these should only be used for DEBUG or TEST.
 *
 * History:
 * ViewsGenerator: This file was generated by ViewsGenerator - Version <#= System.Reflection.Assembly.GetExecutingAssembly().GetName().Version.ToString() #>
 * ViewsGenerator: Generated on : <#= DateTime.Now.ToString(strDataTimeFormat) #>
 */


<# for (int i = 0; i < transactionItemList.Count(); i++)
{#>
/* Section ID: <#= GetSectionIdForVariable(transactionItemList[i].TransactionVariableName) #>, Field ID: <#= GetFieldIdForVariable(transactionItemList[i].TransactionVariableName) #>, Field Name: <#= transactionItemList[i].TransactionVariableName #>, Field Description: <#= GetFieldDescriptionForVariable(transactionItemList[i].TransactionVariableName) #>, View Id: <#= ViewId #> */
define {*} <#= transactionItemList[i].Scope #> variable <#= transactionItemList[i].TransactionVariableName #> as <#= transactionItemList[i].TransactionVariableTypeDeclaration #>
<# if (!string.IsNullOrEmpty(transactionItemList[i].Format))
   {#>
   format <#= transactionItemList[i].Format #>.
<# }
   else 
   { #>
   .
<# } 
} #>
