// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "animation.h"

/////////////////////////////////////////////////////////////////////////////
// CAnimation

IMPLEMENT_DYNCREATE(CAnimation, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CAnimation properties

/////////////////////////////////////////////////////////////////////////////
// CAnimation operations

void CAnimation::SetAutoPlay(BOOL bNewValue)
{
   static BYTE parms[] =
   VTS_BOOL;
   InvokeHelper(0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                bNewValue);
}

BOOL CAnimation::GetAutoPlay()
{
   BOOL result;
   InvokeHelper(0x1, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
   return(result);
}

void CAnimation::SetBackStyle(long nNewValue)
{
   static BYTE parms[] =
   VTS_I4;
   InvokeHelper(0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                nNewValue);
}

long CAnimation::GetBackStyle()
{
   long result;
   InvokeHelper(0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
   return(result);
}

void CAnimation::SetCenter(BOOL bNewValue)
{
   static BYTE parms[] =
   VTS_BOOL;
   InvokeHelper(0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                bNewValue);
}

BOOL CAnimation::GetCenter()
{
   BOOL result;
   InvokeHelper(0x3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
   return(result);
}

void CAnimation::SetEnabled(BOOL bNewValue)
{
   static BYTE parms[] =
   VTS_BOOL;
   InvokeHelper(DISPID_ENABLED, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                bNewValue);
}

BOOL CAnimation::GetEnabled()
{
   BOOL result;
   InvokeHelper(DISPID_ENABLED, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
   return(result);
}

long CAnimation::GetHWnd()
{
   long result;
   InvokeHelper(DISPID_HWND, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
   return(result);
}

void CAnimation::SetBackColor(unsigned long newValue)
{
   static BYTE parms[] =
   VTS_I4;
   InvokeHelper(DISPID_BACKCOLOR, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                newValue);
}

unsigned long CAnimation::GetBackColor()
{
   unsigned long result;
   InvokeHelper(DISPID_BACKCOLOR, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
   return(result);
}

long CAnimation::GetOLEDropMode()
{
   long result;
   InvokeHelper(0x60f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
   return(result);
}

void CAnimation::SetOLEDropMode(long nNewValue)
{
   static BYTE parms[] =
   VTS_I4;
   InvokeHelper(0x60f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                nNewValue);
}

void CAnimation::Close()
{
   InvokeHelper(0x4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CAnimation::Open(LPCTSTR bstrFilename)
{
   static BYTE parms[] =
   VTS_BSTR;
   InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
                bstrFilename);
}

void CAnimation::Play(const VARIANT& varRepeatCount, const VARIANT& varStartFrame, const VARIANT& varEndFrame)
{
   static BYTE parms[] =
   VTS_VARIANT VTS_VARIANT VTS_VARIANT;
   InvokeHelper(0x6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
                &varRepeatCount, &varStartFrame, &varEndFrame);
}

void CAnimation::Stop()
{
   InvokeHelper(0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CAnimation::OLEDrag()
{
   InvokeHelper(0x610, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//******************************************************************************
//              Revision Control Entries
//******************************************************************************
//
/* $Log:   D:/scc/ifds/ifast/archives/ifastgui/animation.cpp-arc  $
 * 
 *    Rev 1.1   Oct 09 2002 23:55:30   PURDYECH
 * PVCS Database Conversion
 * 
 *    Rev 1.0   Feb 15 2000 11:01:06   SMITHDAV
 * Initial revision.
 * 
 *    Rev 1.1   Jul 08 1999 10:04:36   SMITHDAV
 * Modify revision history commaent format to old
 * style comment -- I can't seem to get new style comments to work.
 *
 */
