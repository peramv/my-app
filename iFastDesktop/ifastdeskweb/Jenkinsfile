properties(
[gitLabConnection(''), [$class: 'RebuildSettings', autoRebuild: false, rebuildDisabled: false],
 [$class: 'JobRestrictionProperty'],
 parameters([choice(choices: ['dev', 'InspintTesting', 'qa', 'qaproj', 'qauat', 'uat', 'cicd'], description: '', name: 'BuildType'),
 string(defaultValue: '', description: 'The value of this parameter should be in the format ifastbase-17.2.4.q or ifastdesktop-17.2.4.q', name: 'Release_Label', trim: true),
 string(defaultValue: ' ', description: 'This is the value of immediate previous release to Product_Release value given above. For ex: ifastbase-17.2.3.q or "NO" and ifastdesktop-17.2.3.q or NO', name: 'Previous_Release_Label', trim: true),
 string(defaultValue: '', description: 'List of change packages to be applied for this release. the values of this parameter goes like (CHG85649V1, CHG85651V2)  or "NO"', name: 'Product_Changes', trim: true),
 choice(choices: ['redleaf','europeantransformation','qa', 'uat', 'dev','cicd'], description: '', name: 'SDLC'),  
  choice(choices: ['POST','GET','DELETE'], description: '', name: 'action'), 
 choice(choices: ['ifastdb','webplus','desktop','iweb'], description: '', name: 'entity_product'), 
 choice(choices: ['ACTUAL','PROEXP','PRO','EXP','ALL'], description: '', name: 'APE_ENV'), 
 string(defaultValue: '', description: '', name: 'ReleaseNumber', trim: false), 
 string(defaultValue: '', description: '', name: 'WebSVNCheckoutFolder', trim: false), 
 string(defaultValue: 'docker-registry-default.apps.chimp.dev-ifglobalproducts.com', description: '', name: 'dockerregistryurl', trim: false)]), pipelineTriggers([])])
def VERSION
 pipeline
 {
     agent
	{
		node
		{
		    label 'apebuildd1'
		}
	}
	environment
	{
		BaseDirectory = pwd()
		DOCKER_HOST='tcp://127.0.0.1:2376'
	}
	 
	stages
	{
        stage('SVN Checkout')
        {
        	steps
        	{
        	deleteDir()
            checkout([$class: 'SubversionSCM',
            additionalCredentials: [], 
            excludedCommitMessages: '',
            excludedRegions: '',
            excludedRevprop: '', 
            excludedUsers: '',
            filterChangelog: false,
            ignoreDirPropChanges: false, 
            includedRegions: '', 
            locations: [[credentialsId: 'SCMTool APE Build D1',
            depthOption: 'infinity',
            ignoreExternalsOption: true,
            local: '.', 
            remote: '${WebSVNCheckoutFolder}']],
            quietOperation: true,
            workspaceUpdater: [$class: 'UpdateUpdater']])
        	}
        }
        stage('Directory Clean Up')
        {
        			 steps
        			 {
        			 sh 'echo ${BaseDirectory}/${BuildType}/${ReleaseNumber}'
                		sh '''
                        	if [ -d "${BaseDirectory}/${BuildType}/${ReleaseNumber}" ]; then
                        	rm -r ${BaseDirectory}/${BuildType}/${ReleaseNumber}
                            fi  
                			'''
        			 }
        }
        stage('Build')
        {
            steps
        	{
                sh 'mvn clean install -DartefactDir=${BaseDirectory}/${BuildType}/${ReleaseNumber}'
        	}
        	post
        	{
                	success
                	{
                	    sh '''ls'''
                	     script
		                {
                        def pom = readMavenPom()
                    	VERSION=pom.version
            				println VERSION
            			}
                    	sh """
            	
            		    tar -xvzf ${BaseDirectory}/${BuildType}/${ReleaseNumber}/desktopweb-${VERSION}.tar.gz -C ${BaseDirectory}/${BuildType}/${ReleaseNumber}/
                        mkdir -p /home/scmtool/jenkins/build_archive/Desktop_Web_Pipeline/${BuildType}/${ReleaseNumber}/
                        cp -r ${BaseDirectory}/${BuildType}/${ReleaseNumber}/ /home/scmtool/jenkins/build_archive/Desktop_Web_Pipeline/${BuildType}/
                        """
                	}
        	}
		}
		 stage('Checkout of Dependency script')
		{
		
			steps
		
			{    
			     checkout([$class: 'GitSCM', branches: [[name: '*/master']], 
			     doGenerateSubmoduleConfigurations: false, 
			     extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'Upload']], 
			     gitTool: 'Default', submoduleCfg: [], 
			     userRemoteConfigs: [[credentialsId: 'IFDS Build User to access GIT LAB', name: 'Dependency', url: 'http://gitrepop1/IFDSBuild/Package-dependency.git']]])

			}
		} 
		stage ('Copy Upload Dependency Files to Workspace')
		{   
		  steps 
		  {  
		      sh """
		
		 cp -rf ${BaseDirectory}/Upload/* ${BaseDirectory}
		"""
		  }
		}
		stage('Script to build upload dependencies')
		{
		
			steps
			{
			
				sh """cd ${BaseDirectory}/Upload"""
				
			         sh '''#source ~/.bash_profile
					#export JAVA_HOME=/opt/local/scm/tools/java-1.8.0-openjdk-1.8.0.31-1.b13.el6_6.x86_64/
					#export ANT_HOME=/opt/local/scm/tools/ant/
					#export MAVEN_HOME=/opt/local/scm/tools/maven/
					#export PATH=${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${ANT_HOME}/bin:${PATH}
					export JAVA_HOME=/home/scmtool/tools/java-1.8.0-openjdk-1.8.0.31-1.b13.el6_6.x86_64
					export ANT_HOME=/home/scmtool/tools/apache-ant-1.9.4
					export MAVEN_HOME=/home/scmtool/tools/apache-maven-3.3.1
					export PATH=${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${ANT_HOME}/bin:${PATH}
					which java
					java -version					
					sh buildpom.sh ifastbase ${Release_Label} ${Previous_Release_Label} ${Product_Changes}
					rm -rf pom.xml
					sh getdependency ${Release_Label} apeupgradetable ${SDLC}
					sh getdependency ${Release_Label} " " ${SDLC}'''
			}
			
		}
		stage('Fetch Docker file')
		{
		    steps
		    {
		         checkout([$class: 'GitSCM',
                         branches: [[name: '*/cicd']],
                         doGenerateSubmoduleConfigurations: false,
                         extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'Dependency']],
                         gitTool: 'Default', 
                         submoduleCfg: [], 
                        userRemoteConfigs: [[credentialsId: 'SCMJenkins', url: 'http://gitrepop1/APE/desktopweb-imagebuildscripts.git']]]) 
		    }
		}
		
		stage('Copy desktop jar file')
		{
		    steps
		    {
		         sh ''' cp ${BaseDirectory}/target/desktopweb-1.0.jar  ${BaseDirectory}/Dependency/docker/'''
		    }
		}
		
		stage('Build Docker Image')
		{
		    steps
		    {
			    withCredentials([string(credentialsId: 'Docker_Token_Experimental', variable: 'Docker_Token_Experimental')]) 
		       {
		       sh """
			   
    		           #!/bin/sh
                    	# example 1.1.0.1 1.1.1.q qa
                    docker login -u something -p $Docker_Token_Experimental $dockerregistryurl
				   #cd ${BaseDirectory}/Dependency
				   cd ${BaseDirectory}
				   pwd
				   ls
                   #$sudo docker build --build-arg WORKSPACE_URL="${env.BUILD_URL}" --build-arg RELEASE=Rel_"${ReleaseNumber}" -q --build-arg NO_PROXY=1 --build-arg SDLC="${BuildType}" -t "${ReleaseNumber}"_desktop-eap docker/deploy-desktopweb-springboot-1 &&
                     docker build --build-arg WORKSPACE_URL="${env.BUILD_URL}" --build-arg RELEASE="${ReleaseNumber}" --build-arg NO_PROXY=1 --build-arg SDLC="${BuildType}" -t "${ReleaseNumber}"_desktop-eap -f Dependency/docker/deploy-desktopweb-springboot-1/Dockerfile . &&
                     docker tag "${ReleaseNumber}"_desktop-eap docker-registry-default.apps.apetest.ifglobalproducts.com/ifast/"${ReleaseNumber}"_desktop-eap &&
                     docker push docker-registry-default.apps.apetest.ifglobalproducts.com/ifast/"${ReleaseNumber}"_desktop-eap &&
                     docker rmi --no-prune docker-registry-default.apps.apetest.ifglobalproducts.com/ifast/"${ReleaseNumber}"_desktop-eap &&
                    # docker build -q --build-arg NO_PROXY=1 -t "${ReleaseNumber}"_desktop-httpd docker/deploy-desktopweb-httpd-24 &&
                    docker build --build-arg NO_PROXY=1 -t "${ReleaseNumber}"_desktop-httpd -f Dependency/docker/deploy-desktopweb-httpd-24/Dockerfile . &&
                    docker tag "${ReleaseNumber}"_desktop-httpd docker-registry-default.apps.apetest.ifglobalproducts.com/ifast/"${ReleaseNumber}"_desktop-httpd &&
                    docker push docker-registry-default.apps.apetest.ifglobalproducts.com/ifast/"${ReleaseNumber}"_desktop-httpd &&
                    docker rmi --no-prune docker-registry-default.apps.apetest.ifglobalproducts.com/ifast/"${ReleaseNumber}"_desktop-httpd
                    """


		    }
			}
		}
			stage('Checkout APE update Dependency script')
		{
			steps
			{
				checkout([$class: 'GitSCM', branches: [[name: '*/master']], 
				doGenerateSubmoduleConfigurations: false,
				extensions:[[$class: 'RelativeTargetDirectory', relativeTargetDir: 'APE']], 
				gitTool: 'Default', 
				submoduleCfg: [],
				userRemoteConfigs: [[credentialsId: 'IFDS Build User to access GIT LAB', url: 'http://gitrepop1/APE/apedb-webservices.git']]])
			}
		}
		stage('APE Update')
		{
			steps
			{
				sh """
				cd ${BaseDirectory}/APE
				chmod 755 updateapedb.sh
				${BaseDirectory}/APE/updateapedb.sh ${Release_Label} ${SDLC} ${entity_product} ${action}  ${APE_ENV}"""
			}
		}
    
	}
   }
